openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<fullname>Backup</fullname> <p>Backup is a unified backup service\
    \ designed to protect Amazon Web Services services and their associated data.\
    \ Backup simplifies the creation, migration, restoration, and deletion of backups,\
    \ while also providing reporting and auditing.</p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS Backup
  version: 2018-11-15
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: backup
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/backup-2018-11-15.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/backup/
servers:
- description: The AWS Backup multi-region endpoint
  url: "http://backup.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Backup multi-region endpoint
  url: "https://backup.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS Backup endpoint for China (Beijing) and China (Ningxia)
  url: "http://backup.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS Backup endpoint for China (Beijing) and China (Ningxia)
  url: "https://backup.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /legal-holds/{legalHoldId}#cancelDescription:
    delete:
      description: This action removes the specified legal hold on a recovery point.
        This action can only be performed by a user with sufficient permissions.
      operationId: CancelLegalHold
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Legal hold ID required to remove the specified legal hold on
          a recovery point.
        explode: false
        in: path
        name: legalHoldId
        required: true
        schema:
          type: string
        style: simple
      - description: String describing the reason for removing the legal hold.
        explode: true
        in: query
        name: cancelDescription
        required: true
        schema:
          type: string
        style: form
      - description: The integer amount in days specifying amount of days after this
          API operation to remove legal hold.
        explode: true
        in: query
        name: retainRecordInDays
        required: false
        schema:
          type: integer
        style: form
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelLegalHoldOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceStateException'
          description: InvalidResourceStateException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /backup/plans/:
    get:
      description: "Returns a list of all active backup plans for an authenticated\
        \ account. The list contains information such as Amazon Resource Names (ARNs),\
        \ plan IDs, creation and deletion dates, version IDs, plan names, and creator\
        \ request IDs."
      operationId: ListBackupPlans
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The next item following a partial list of returned items. For\
          \ example, if a request is made to return <code>maxResults</code> number\
          \ of items, <code>NextToken</code> allows you to return more items in your\
          \ list starting at the location pointed to by the next token."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of items to be returned.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: A Boolean value with a default value of <code>FALSE</code> that
          returns deleted backup plans when set to <code>TRUE</code>.
        explode: true
        in: query
        name: includeDeleted
        required: false
        schema:
          type: boolean
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupPlansOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
    put:
      description: "<p>Creates a backup plan using a backup plan name and backup rules.\
        \ A backup plan is a document that contains information that Backup uses to\
        \ schedule tasks that create recovery points for resources.</p> <p>If you\
        \ call <code>CreateBackupPlan</code> with a plan that already exists, you\
        \ receive an <code>AlreadyExistsException</code> exception.</p>"
      operationId: CreateBackupPlan
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBackupPlan_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBackupPlanOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /backup/plans/{backupPlanId}/selections/:
    get:
      description: Returns an array containing metadata of the resources associated
        with the target backup plan.
      operationId: ListBackupSelections
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Uniquely identifies a backup plan.
        explode: false
        in: path
        name: backupPlanId
        required: true
        schema:
          type: string
        style: simple
      - description: "The next item following a partial list of returned items. For\
          \ example, if a request is made to return <code>maxResults</code> number\
          \ of items, <code>NextToken</code> allows you to return more items in your\
          \ list starting at the location pointed to by the next token."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of items to be returned.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupSelectionsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
    put:
      description: "Creates a JSON document that specifies a set of resources to assign\
        \ to a backup plan. For examples, see <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/assigning-resources.html#assigning-resources-json\"\
        >Assigning resources programmatically</a>. "
      operationId: CreateBackupSelection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Uniquely identifies the backup plan to be associated with the
          selection of resources.
        explode: false
        in: path
        name: backupPlanId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBackupSelection_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBackupSelectionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /backup-vaults/{backupVaultName}:
    delete:
      description: Deletes the backup vault identified by its name. A vault can be
        deleted only if it is empty.
      operationId: DeleteBackupVault
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of a logical container where backups are stored. Backup\
          \ vaults are identified by names that are unique to the account used to\
          \ create them and the Amazon Web Services Region where they are created.\
          \ They consist of lowercase letters, numbers, and hyphens."
        explode: false
        in: path
        name: backupVaultName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-accepts:
      - application/json
    get:
      description: Returns metadata about a backup vault specified by its name.
      operationId: DescribeBackupVault
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of a logical container where backups are stored. Backup\
          \ vaults are identified by names that are unique to the account used to\
          \ create them and the Amazon Web Services Region where they are created.\
          \ They consist of lowercase letters, numbers, and hyphens."
        explode: false
        in: path
        name: backupVaultName
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeBackupVaultOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
    put:
      description: "<p>Creates a logical container where backups are stored. A <code>CreateBackupVault</code>\
        \ request includes a name, optionally one or more resource tags, an encryption\
        \ key, and a request ID.</p> <note> <p>Do not include sensitive data, such\
        \ as passport numbers, in the name of a backup vault.</p> </note>"
      operationId: CreateBackupVault
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of a logical container where backups are stored. Backup\
          \ vaults are identified by names that are unique to the account used to\
          \ create them and the Amazon Web Services Region where they are created.\
          \ They consist of letters, numbers, and hyphens."
        explode: false
        in: path
        name: backupVaultName
        required: true
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateBackupVault_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBackupVaultOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
      x-content-type: application/json
      x-accepts:
      - application/json
  /audit/frameworks:
    get:
      description: Returns a list of all frameworks for an Amazon Web Services account
        and Amazon Web Services Region.
      operationId: ListFrameworks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The number of desired results from 1 to 1000. Optional. If unspecified,\
          \ the query will return 1 MB of data."
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: "An identifier that was returned from the previous call to this\
          \ operation, which can be used to return the next set of items in the list."
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListFrameworksOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
    post:
      description: "Creates a framework with one or more controls. A framework is\
        \ a collection of controls that you can use to evaluate your backup practices.\
        \ By using pre-built customizable controls to define your policies, you can\
        \ evaluate whether your backup practices comply with your policies and which\
        \ resources are not yet in compliance."
      operationId: CreateFramework
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFramework_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateFrameworkOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /legal-holds/:
    get:
      description: This action returns metadata about active and previous legal holds.
      operationId: ListLegalHolds
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The next item following a partial list of returned resources.\
          \ For example, if a request is made to return <code>maxResults</code> number\
          \ of resources, <code>NextToken</code> allows you to return more items in\
          \ your list starting at the location pointed to by the next token."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of resource list items to be returned.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListLegalHoldsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
    post:
      description: This action creates a legal hold on a recovery point (backup).
        A legal hold is a restraint on altering or deleting a backup until an authorized
        user cancels the legal hold. Any actions to delete or disassociate a recovery
        point will fail with an error if one or more active legal holds are on the
        recovery point.
      operationId: CreateLegalHold
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateLegalHold_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateLegalHoldOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /audit/report-plans:
    get:
      description: "Returns a list of your report plans. For detailed information\
        \ about a single report plan, use <code>DescribeReportPlan</code>."
      operationId: ListReportPlans
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The number of desired results from 1 to 1000. Optional. If unspecified,\
          \ the query will return 1 MB of data."
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: "An identifier that was returned from the previous call to this\
          \ operation, which can be used to return the next set of items in the list."
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportPlansOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
    post:
      description: "<p>Creates a report plan. A report plan is a document that contains\
        \ information about the contents of the report and where Backup will deliver\
        \ it.</p> <p>If you call <code>CreateReportPlan</code> with a plan that already\
        \ exists, you receive an <code>AlreadyExistsException</code> exception.</p>"
      operationId: CreateReportPlan
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateReportPlan_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateReportPlanOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
      x-content-type: application/json
      x-accepts:
      - application/json
  /backup/plans/{backupPlanId}:
    delete:
      description: "Deletes a backup plan. A backup plan can only be deleted after\
        \ all associated selections of resources have been deleted. Deleting a backup\
        \ plan deletes the current version of a backup plan. Previous versions, if\
        \ any, will still exist."
      operationId: DeleteBackupPlan
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Uniquely identifies a backup plan.
        explode: false
        in: path
        name: backupPlanId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteBackupPlanOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-accepts:
      - application/json
    post:
      description: Updates an existing backup plan identified by its <code>backupPlanId</code>
        with the input document in JSON format. The new version is uniquely identified
        by a <code>VersionId</code>.
      operationId: UpdateBackupPlan
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Uniquely identifies a backup plan.
        explode: false
        in: path
        name: backupPlanId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateBackupPlan_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateBackupPlanOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /backup/plans/{backupPlanId}/selections/{selectionId}:
    delete:
      description: Deletes the resource selection associated with a backup plan that
        is specified by the <code>SelectionId</code>.
      operationId: DeleteBackupSelection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Uniquely identifies a backup plan.
        explode: false
        in: path
        name: backupPlanId
        required: true
        schema:
          type: string
        style: simple
      - description: Uniquely identifies the body of a request to assign a set of
          resources to a backup plan.
        explode: false
        in: path
        name: selectionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
    get:
      description: Returns selection metadata and a document in JSON format that specifies
        a list of resources that are associated with a backup plan.
      operationId: GetBackupSelection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Uniquely identifies a backup plan.
        explode: false
        in: path
        name: backupPlanId
        required: true
        schema:
          type: string
        style: simple
      - description: Uniquely identifies the body of a request to assign a set of
          resources to a backup plan.
        explode: false
        in: path
        name: selectionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackupSelectionOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
  /backup-vaults/{backupVaultName}/access-policy:
    delete:
      description: Deletes the policy document that manages permissions on a backup
        vault.
      operationId: DeleteBackupVaultAccessPolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of a logical container where backups are stored. Backup\
          \ vaults are identified by names that are unique to the account used to\
          \ create them and the Amazon Web Services Region where they are created.\
          \ They consist of lowercase letters, numbers, and hyphens."
        explode: false
        in: path
        name: backupVaultName
        required: true
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
    get:
      description: Returns the access policy document that is associated with the
        named backup vault.
      operationId: GetBackupVaultAccessPolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of a logical container where backups are stored. Backup\
          \ vaults are identified by names that are unique to the account used to\
          \ create them and the Amazon Web Services Region where they are created.\
          \ They consist of lowercase letters, numbers, and hyphens."
        explode: false
        in: path
        name: backupVaultName
        required: true
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackupVaultAccessPolicyOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
    put:
      description: Sets a resource-based policy that is used to manage access permissions
        on the target backup vault. Requires a backup vault name and an access policy
        document in JSON format.
      operationId: PutBackupVaultAccessPolicy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of a logical container where backups are stored. Backup\
          \ vaults are identified by names that are unique to the account used to\
          \ create them and the Amazon Web Services Region where they are created.\
          \ They consist of lowercase letters, numbers, and hyphens."
        explode: false
        in: path
        name: backupVaultName
        required: true
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutBackupVaultAccessPolicy_request'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /backup-vaults/{backupVaultName}/vault-lock:
    delete:
      description: "<p>Deletes Backup Vault Lock from a backup vault specified by\
        \ a backup vault name.</p> <p>If the Vault Lock configuration is immutable,\
        \ then you cannot delete Vault Lock using API operations, and you will receive\
        \ an <code>InvalidRequestException</code> if you attempt to do so. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/vault-lock.html\"\
        >Vault Lock</a> in the <i>Backup Developer Guide</i>.</p>"
      operationId: DeleteBackupVaultLockConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the backup vault from which to delete Backup Vault
          Lock.
        explode: false
        in: path
        name: backupVaultName
        required: true
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
    put:
      description: "<p>Applies Backup Vault Lock to a backup vault, preventing attempts\
        \ to delete any recovery point stored in or created in a backup vault. Vault\
        \ Lock also prevents attempts to update the lifecycle policy that controls\
        \ the retention period of any recovery point currently stored in a backup\
        \ vault. If specified, Vault Lock enforces a minimum and maximum retention\
        \ period for future backup and copy jobs that target a backup vault.</p> <note>\
        \ <p>Backup Vault Lock has been assessed by Cohasset Associates for use in\
        \ environments that are subject to SEC 17a-4, CFTC, and FINRA regulations.\
        \ For more information about how Backup Vault Lock relates to these regulations,\
        \ see the <a href=\"samples/cohassetreport.zip\">Cohasset Associates Compliance\
        \ Assessment.</a> </p> </note>"
      operationId: PutBackupVaultLockConfiguration
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The Backup Vault Lock configuration that specifies the name of
          the backup vault it protects.
        explode: false
        in: path
        name: backupVaultName
        required: true
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutBackupVaultLockConfiguration_request'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /backup-vaults/{backupVaultName}/notification-configuration:
    delete:
      description: Deletes event notifications for the specified backup vault.
      operationId: DeleteBackupVaultNotifications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of a logical container where backups are stored. Backup\
          \ vaults are identified by names that are unique to the account used to\
          \ create them and the Region where they are created. They consist of lowercase\
          \ letters, numbers, and hyphens."
        explode: false
        in: path
        name: backupVaultName
        required: true
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
    get:
      description: Returns event notifications for the specified backup vault.
      operationId: GetBackupVaultNotifications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of a logical container where backups are stored. Backup\
          \ vaults are identified by names that are unique to the account used to\
          \ create them and the Amazon Web Services Region where they are created.\
          \ They consist of lowercase letters, numbers, and hyphens."
        explode: false
        in: path
        name: backupVaultName
        required: true
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackupVaultNotificationsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
    put:
      description: Turns on notifications on a backup vault for the specified topic
        and events.
      operationId: PutBackupVaultNotifications
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of a logical container where backups are stored. Backup\
          \ vaults are identified by names that are unique to the account used to\
          \ create them and the Amazon Web Services Region where they are created.\
          \ They consist of lowercase letters, numbers, and hyphens."
        explode: false
        in: path
        name: backupVaultName
        required: true
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutBackupVaultNotifications_request'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /audit/frameworks/{frameworkName}:
    delete:
      description: Deletes the framework specified by a framework name.
      operationId: DeleteFramework
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of a framework.
        explode: false
        in: path
        name: frameworkName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z][_a-zA-Z0-9]*"
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    get:
      description: Returns the framework details for the specified <code>FrameworkName</code>.
      operationId: DescribeFramework
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of a framework.
        explode: false
        in: path
        name: frameworkName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z][_a-zA-Z0-9]*"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeFrameworkOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
    put:
      description: Updates an existing framework identified by its <code>FrameworkName</code>
        with the input document in JSON format.
      operationId: UpdateFramework
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The unique name of a framework. This name is between 1 and 256\
          \ characters, starting with a letter, and consisting of letters (a-z, A-Z),\
          \ numbers (0-9), and underscores (_)."
        explode: false
        in: path
        name: frameworkName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z][_a-zA-Z0-9]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFramework_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateFrameworkOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AlreadyExistsException'
          description: AlreadyExistsException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}:
    delete:
      description: "<p>Deletes the recovery point specified by a recovery point ID.</p>\
        \ <p>If the recovery point ID belongs to a continuous backup, calling this\
        \ endpoint deletes the existing continuous backup and stops future continuous\
        \ backup.</p> <p>When an IAM role's permissions are insufficient to call this\
        \ API, the service sends back an HTTP 200 response with an empty HTTP body,\
        \ but the recovery point is not deleted. Instead, it enters an <code>EXPIRED</code>\
        \ state.</p> <p> <code>EXPIRED</code> recovery points can be deleted with\
        \ this API once the IAM role has the <code>iam:CreateServiceLinkedRole</code>\
        \ action. To learn more about adding this role, see <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/deleting-backups.html#deleting-backups-troubleshooting\"\
        > Troubleshooting manual deletions</a>.</p> <p>If the user or role is deleted\
        \ or the permission within the role is removed, the deletion will not be successful\
        \ and will enter an <code>EXPIRED</code> state.</p>"
      operationId: DeleteRecoveryPoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of a logical container where backups are stored. Backup\
          \ vaults are identified by names that are unique to the account used to\
          \ create them and the Amazon Web Services Region where they are created.\
          \ They consist of lowercase letters, numbers, and hyphens."
        explode: false
        in: path
        name: backupVaultName
        required: true
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
          type: string
        style: simple
      - description: "An Amazon Resource Name (ARN) that uniquely identifies a recovery\
          \ point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>."
        explode: false
        in: path
        name: recoveryPointArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceStateException'
          description: InvalidResourceStateException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-accepts:
      - application/json
    get:
      description: "Returns metadata associated with a recovery point, including ID,\
        \ status, encryption, and lifecycle."
      operationId: DescribeRecoveryPoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of a logical container where backups are stored. Backup\
          \ vaults are identified by names that are unique to the account used to\
          \ create them and the Amazon Web Services Region where they are created.\
          \ They consist of lowercase letters, numbers, and hyphens."
        explode: false
        in: path
        name: backupVaultName
        required: true
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
          type: string
        style: simple
      - description: "An Amazon Resource Name (ARN) that uniquely identifies a recovery\
          \ point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>."
        explode: false
        in: path
        name: recoveryPointArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRecoveryPointOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
    post:
      description: "<p>Sets the transition lifecycle of a recovery point.</p> <p>The\
        \ lifecycle defines when a protected resource is transitioned to cold storage\
        \ and when it expires. Backup transitions and expires backups automatically\
        \ according to the lifecycle that you define.</p> <p>Backups transitioned\
        \ to cold storage must be stored in cold storage for a minimum of 90 days.\
        \ Therefore, the “retention” setting must be 90 days greater than the “transition\
        \ to cold after days” setting. The “transition to cold after days” setting\
        \ cannot be changed after a backup has been transitioned to cold.</p> <p>Resource\
        \ types that are able to be transitioned to cold storage are listed in the\
        \ \"Lifecycle to cold storage\" section of the <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html#features-by-resource\"\
        > Feature availability by resource</a> table. Backup ignores this expression\
        \ for other resource types.</p> <p>This operation does not support continuous\
        \ backups.</p>"
      operationId: UpdateRecoveryPointLifecycle
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of a logical container where backups are stored. Backup\
          \ vaults are identified by names that are unique to the account used to\
          \ create them and the Amazon Web Services Region where they are created.\
          \ They consist of lowercase letters, numbers, and hyphens."
        explode: false
        in: path
        name: backupVaultName
        required: true
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
          type: string
        style: simple
      - description: "An Amazon Resource Name (ARN) that uniquely identifies a recovery\
          \ point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>."
        explode: false
        in: path
        name: recoveryPointArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRecoveryPointLifecycle_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateRecoveryPointLifecycleOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
  /audit/report-plans/{reportPlanName}:
    delete:
      description: Deletes the report plan specified by a report plan name.
      operationId: DeleteReportPlan
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of a report plan.
        explode: false
        in: path
        name: reportPlanName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z][_a-zA-Z0-9]*"
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
    get:
      description: Returns a list of all report plans for an Amazon Web Services account
        and Amazon Web Services Region.
      operationId: DescribeReportPlan
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of a report plan.
        explode: false
        in: path
        name: reportPlanName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z][_a-zA-Z0-9]*"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReportPlanOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
    put:
      description: Updates an existing report plan identified by its <code>ReportPlanName</code>
        with the input document in JSON format.
      operationId: UpdateReportPlan
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The unique name of the report plan. This name is between 1 and\
          \ 256 characters, starting with a letter, and consisting of letters (a-z,\
          \ A-Z), numbers (0-9), and underscores (_)."
        explode: false
        in: path
        name: reportPlanName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z][_a-zA-Z0-9]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateReportPlan_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateReportPlanOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
      x-content-type: application/json
      x-accepts:
      - application/json
  /backup-jobs/{backupJobId}:
    get:
      description: Returns backup job details for the specified <code>BackupJobId</code>.
      operationId: DescribeBackupJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Uniquely identifies a request to Backup to back up a resource.
        explode: false
        in: path
        name: backupJobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeBackupJobOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailureException'
          description: DependencyFailureException
      x-accepts:
      - application/json
    post:
      description: "<p>Attempts to cancel a job to create a one-time backup of a resource.</p>\
        \ <p>This action is not supported for the following services: Amazon FSx for\
        \ Windows File Server, Amazon FSx for Lustre, FSx for ONTAP , Amazon FSx for\
        \ OpenZFS, Amazon DocumentDB (with MongoDB compatibility), Amazon RDS, Amazon\
        \ Aurora, and Amazon Neptune.</p>"
      operationId: StopBackupJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Uniquely identifies a request to Backup to back up a resource.
        explode: false
        in: path
        name: backupJobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
  /copy-jobs/{copyJobId}:
    get:
      description: Returns metadata associated with creating a copy of a resource.
      operationId: DescribeCopyJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Uniquely identifies a copy job.
        explode: false
        in: path
        name: copyJobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeCopyJobOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
  /global-settings:
    get:
      description: "Describes whether the Amazon Web Services account is opted in\
        \ to cross-account backup. Returns an error if the account is not a member\
        \ of an Organizations organization. Example: <code>describe-global-settings\
        \ --region us-west-2</code> "
      operationId: DescribeGlobalSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeGlobalSettingsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
    put:
      description: Updates whether the Amazon Web Services account is opted in to
        cross-account backup. Returns an error if the account is not an Organizations
        management account. Use the <code>DescribeGlobalSettings</code> API to determine
        the current settings.
      operationId: UpdateGlobalSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGlobalSettings_request'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /resources/{resourceArn}:
    get:
      description: "Returns information about a saved resource, including the last\
        \ time it was backed up, its Amazon Resource Name (ARN), and the Amazon Web\
        \ Services service type of the saved resource."
      operationId: DescribeProtectedResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: An Amazon Resource Name (ARN) that uniquely identifies a resource.
          The format of the ARN depends on the resource type.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeProtectedResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /account-settings:
    get:
      description: "Returns the current service opt-in settings for the Region. If\
        \ service opt-in is enabled for a service, Backup tries to protect that service's\
        \ resources in this Region, when the resource is included in an on-demand\
        \ backup or scheduled backup plan. Otherwise, Backup does not try to protect\
        \ that service's resources in this Region."
      operationId: DescribeRegionSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRegionSettingsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
    put:
      description: "Updates the current service opt-in settings for the Region. If\
        \ service-opt-in is enabled for a service, Backup tries to protect that service's\
        \ resources in this Region, when the resource is included in an on-demand\
        \ backup or scheduled backup plan. Otherwise, Backup does not try to protect\
        \ that service's resources in this Region. Use the <code>DescribeRegionSettings</code>\
        \ API to determine the resource types that are supported."
      operationId: UpdateRegionSettings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateRegionSettings_request'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
      x-content-type: application/json
      x-accepts:
      - application/json
  /audit/report-jobs/{reportJobId}:
    get:
      description: Returns the details associated with creating a report as specified
        by its <code>ReportJobId</code>.
      operationId: DescribeReportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The identifier of the report job. A unique, randomly generated,\
          \ Unicode, UTF-8 encoded string that is at most 1,024 bytes long. The report\
          \ job ID cannot be edited."
        explode: false
        in: path
        name: reportJobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeReportJobOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /restore-jobs/{restoreJobId}:
    get:
      description: Returns metadata associated with a restore job that is specified
        by a job ID.
      operationId: DescribeRestoreJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Uniquely identifies the job that restores a recovery point.
        explode: false
        in: path
        name: restoreJobId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DescribeRestoreJobOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyFailureException'
          description: DependencyFailureException
      x-accepts:
      - application/json
  /backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}/disassociate:
    post:
      description: "<p>Deletes the specified continuous backup recovery point from\
        \ Backup and releases control of that continuous backup to the source service,\
        \ such as Amazon RDS. The source service will continue to create and retain\
        \ continuous backups using the lifecycle that you specified in your original\
        \ backup plan.</p> <p>Does not support snapshot backup recovery points.</p>"
      operationId: DisassociateRecoveryPoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of an Backup vault.
        explode: false
        in: path
        name: backupVaultName
        required: true
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
          type: string
        style: simple
      - description: An Amazon Resource Name (ARN) that uniquely identifies an Backup
          recovery point.
        explode: false
        in: path
        name: recoveryPointArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidResourceStateException'
          description: InvalidResourceStateException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-accepts:
      - application/json
  /backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}/parentAssociation:
    delete:
      description: This action to a specific child (nested) recovery point removes
        the relationship between the specified recovery point and its parent (composite)
        recovery point.
      operationId: DisassociateRecoveryPointFromParent
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "This is the name of a logical container where the child (nested)\
          \ recovery point is stored. Backup vaults are identified by names that are\
          \ unique to the account used to create them and the Amazon Web Services\
          \ Region where they are created. They consist of lowercase letters, numbers,\
          \ and hyphens."
        explode: false
        in: path
        name: backupVaultName
        required: true
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
          type: string
        style: simple
      - description: "This is the Amazon Resource Name (ARN) that uniquely identifies\
          \ the child (nested) recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45.</code> "
        explode: false
        in: path
        name: recoveryPointArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-accepts:
      - application/json
  /backup/plans/{backupPlanId}/toTemplate/:
    get:
      description: Returns the backup plan that is specified by the plan ID as a backup
        template.
      operationId: ExportBackupPlanTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Uniquely identifies a backup plan.
        explode: false
        in: path
        name: backupPlanId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExportBackupPlanTemplateOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /backup/plans/{backupPlanId}/:
    get:
      description: "Returns <code>BackupPlan</code> details for the specified <code>BackupPlanId</code>.\
        \ The details are the body of a backup plan in JSON format, in addition to\
        \ plan metadata."
      operationId: GetBackupPlan
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Uniquely identifies a backup plan.
        explode: false
        in: path
        name: backupPlanId
        required: true
        schema:
          type: string
        style: simple
      - description: "Unique, randomly generated, Unicode, UTF-8 encoded strings that\
          \ are at most 1,024 bytes long. Version IDs cannot be edited."
        explode: true
        in: query
        name: versionId
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackupPlanOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
  /backup/template/json/toPlan:
    post:
      description: Returns a valid JSON document specifying a backup plan or an error.
      operationId: GetBackupPlanFromJSON
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetBackupPlanFromJSON_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackupPlanFromJSONOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /backup/template/plans/{templateId}/toPlan:
    get:
      description: Returns the template specified by its <code>templateId</code> as
        a backup plan.
      operationId: GetBackupPlanFromTemplate
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Uniquely identifies a stored backup plan template.
        explode: false
        in: path
        name: templateId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetBackupPlanFromTemplateOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /legal-holds/{legalHoldId}/:
    get:
      description: "This action returns details for a specified legal hold. The details\
        \ are the body of a legal hold in JSON format, in addition to metadata."
      operationId: GetLegalHold
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: This is the ID required to use <code>GetLegalHold</code>. This
          unique ID is associated with a specific legal hold.
        explode: false
        in: path
        name: legalHoldId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetLegalHoldOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /backup-vaults/{backupVaultName}/recovery-points/{recoveryPointArn}/restore-metadata:
    get:
      description: Returns a set of metadata key-value pairs that were used to create
        the backup.
      operationId: GetRecoveryPointRestoreMetadata
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The name of a logical container where backups are stored. Backup\
          \ vaults are identified by names that are unique to the account used to\
          \ create them and the Amazon Web Services Region where they are created.\
          \ They consist of lowercase letters, numbers, and hyphens."
        explode: false
        in: path
        name: backupVaultName
        required: true
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
          type: string
        style: simple
      - description: "An Amazon Resource Name (ARN) that uniquely identifies a recovery\
          \ point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>."
        explode: false
        in: path
        name: recoveryPointArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetRecoveryPointRestoreMetadataOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
  /supported-resource-types:
    get:
      description: Returns the Amazon Web Services resource types supported by Backup.
      operationId: GetSupportedResourceTypes
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSupportedResourceTypesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
  /backup-jobs/:
    get:
      description: "Returns a list of existing backup jobs for an authenticated account\
        \ for the last 30 days. For a longer period of time, consider using these\
        \ <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/monitoring.html\"\
        >monitoring tools</a>."
      operationId: ListBackupJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The next item following a partial list of returned items. For\
          \ example, if a request is made to return <code>maxResults</code> number\
          \ of items, <code>NextToken</code> allows you to return more items in your\
          \ list starting at the location pointed to by the next token."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of items to be returned.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Returns only backup jobs that match the specified resource Amazon
          Resource Name (ARN).
        explode: true
        in: query
        name: resourceArn
        required: false
        schema:
          type: string
        style: form
      - description: Returns only backup jobs that are in the specified state.
        explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - CREATED
          - PENDING
          - RUNNING
          - ABORTING
          - ABORTED
          - COMPLETED
          - FAILED
          - EXPIRED
          - PARTIAL
          type: string
        style: form
      - description: "Returns only backup jobs that will be stored in the specified\
          \ backup vault. Backup vaults are identified by names that are unique to\
          \ the account used to create them and the Amazon Web Services Region where\
          \ they are created. They consist of lowercase letters, numbers, and hyphens."
        explode: true
        in: query
        name: backupVaultName
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
          type: string
        style: form
      - description: Returns only backup jobs that were created before the specified
          date.
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Returns only backup jobs that were created after the specified
          date.
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: <p>Returns only backup jobs for the specified resources:</p>
          <ul> <li> <p> <code>Aurora</code> for Amazon Aurora</p> </li> <li> <p> <code>DocumentDB</code>
          for Amazon DocumentDB (with MongoDB compatibility)</p> </li> <li> <p> <code>DynamoDB</code>
          for Amazon DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon Elastic
          Block Store</p> </li> <li> <p> <code>EC2</code> for Amazon Elastic Compute
          Cloud</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p>
          </li> <li> <p> <code>FSx</code> for Amazon FSx</p> </li> <li> <p> <code>Neptune</code>
          for Amazon Neptune</p> </li> <li> <p> <code>RDS</code> for Amazon Relational
          Database Service</p> </li> <li> <p> <code>Storage Gateway</code> for Storage
          Gateway</p> </li> <li> <p> <code>S3</code> for Amazon S3</p> </li> <li>
          <p> <code>VirtualMachine</code> for virtual machines</p> </li> </ul>
        explode: true
        in: query
        name: resourceType
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_\\.]{1,50}$"
          type: string
        style: form
      - description: "<p>The account ID to list the jobs from. Returns only backup\
          \ jobs associated with the specified account ID.</p> <p>If used from an\
          \ Organizations management account, passing <code>*</code> returns all jobs\
          \ across the organization.</p>"
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          pattern: "^[0-9]{12}$"
          type: string
        style: form
      - description: Returns only backup jobs completed after a date expressed in
          Unix format and Coordinated Universal Time (UTC).
        explode: true
        in: query
        name: completeAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Returns only backup jobs completed before a date expressed in
          Unix format and Coordinated Universal Time (UTC).
        explode: true
        in: query
        name: completeBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: This is a filter to list child (nested) jobs based on parent
          job ID.
        explode: true
        in: query
        name: parentJobId
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupJobsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
  /backup/template/plans:
    get:
      description: "Returns metadata of your saved backup plan templates, including\
        \ the template ID, name, and the creation and deletion dates."
      operationId: ListBackupPlanTemplates
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The next item following a partial list of returned items. For\
          \ example, if a request is made to return <code>maxResults</code> number\
          \ of items, <code>NextToken</code> allows you to return more items in your\
          \ list starting at the location pointed to by the next token."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of items to be returned.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupPlanTemplatesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /backup/plans/{backupPlanId}/versions/:
    get:
      description: "Returns version metadata of your backup plans, including Amazon\
        \ Resource Names (ARNs), backup plan IDs, creation and deletion dates, plan\
        \ names, and version IDs."
      operationId: ListBackupPlanVersions
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Uniquely identifies a backup plan.
        explode: false
        in: path
        name: backupPlanId
        required: true
        schema:
          type: string
        style: simple
      - description: "The next item following a partial list of returned items. For\
          \ example, if a request is made to return <code>maxResults</code> number\
          \ of items, <code>NextToken</code> allows you to return more items in your\
          \ list starting at the location pointed to by the next token."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of items to be returned.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupPlanVersionsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
  /backup-vaults/:
    get:
      description: Returns a list of recovery point storage containers along with
        information about them.
      operationId: ListBackupVaults
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The next item following a partial list of returned items. For\
          \ example, if a request is made to return <code>maxResults</code> number\
          \ of items, <code>NextToken</code> allows you to return more items in your\
          \ list starting at the location pointed to by the next token."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of items to be returned.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListBackupVaultsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
  /copy-jobs/:
    get:
      description: Returns metadata about your copy jobs.
      operationId: ListCopyJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The next item following a partial list of returned items. For\
          \ example, if a request is made to return maxResults number of items, NextToken\
          \ allows you to return more items in your list starting at the location\
          \ pointed to by the next token. "
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of items to be returned.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: 'Returns only copy jobs that match the specified resource Amazon
          Resource Name (ARN). '
        explode: true
        in: query
        name: resourceArn
        required: false
        schema:
          type: string
        style: form
      - description: Returns only copy jobs that are in the specified state.
        explode: true
        in: query
        name: state
        required: false
        schema:
          enum:
          - CREATED
          - RUNNING
          - COMPLETED
          - FAILED
          - PARTIAL
          type: string
        style: form
      - description: Returns only copy jobs that were created before the specified
          date.
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Returns only copy jobs that were created after the specified
          date.
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: <p>Returns only backup jobs for the specified resources:</p>
          <ul> <li> <p> <code>Aurora</code> for Amazon Aurora</p> </li> <li> <p> <code>DocumentDB</code>
          for Amazon DocumentDB (with MongoDB compatibility)</p> </li> <li> <p> <code>DynamoDB</code>
          for Amazon DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon Elastic
          Block Store</p> </li> <li> <p> <code>EC2</code> for Amazon Elastic Compute
          Cloud</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p>
          </li> <li> <p> <code>FSx</code> for Amazon FSx</p> </li> <li> <p> <code>Neptune</code>
          for Amazon Neptune</p> </li> <li> <p> <code>RDS</code> for Amazon Relational
          Database Service</p> </li> <li> <p> <code>Storage Gateway</code> for Storage
          Gateway</p> </li> <li> <p> <code>S3</code> for Amazon S3</p> </li> <li>
          <p> <code>VirtualMachine</code> for virtual machines</p> </li> </ul>
        explode: true
        in: query
        name: resourceType
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_\\.]{1,50}$"
          type: string
        style: form
      - description: "An Amazon Resource Name (ARN) that uniquely identifies a source\
          \ backup vault to copy from; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>. "
        explode: true
        in: query
        name: destinationVaultArn
        required: false
        schema:
          type: string
        style: form
      - description: The account ID to list the jobs from. Returns only copy jobs
          associated with the specified account ID.
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          pattern: "^[0-9]{12}$"
          type: string
        style: form
      - description: Returns only copy jobs completed before a date expressed in Unix
          format and Coordinated Universal Time (UTC).
        explode: true
        in: query
        name: completeBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Returns only copy jobs completed after a date expressed in Unix
          format and Coordinated Universal Time (UTC).
        explode: true
        in: query
        name: completeAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: This is a filter to list child (nested) jobs based on parent
          job ID.
        explode: true
        in: query
        name: parentJobId
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCopyJobsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
  /resources/:
    get:
      description: "Returns an array of resources successfully backed up by Backup,\
        \ including the time the resource was saved, an Amazon Resource Name (ARN)\
        \ of the resource, and a resource type."
      operationId: ListProtectedResources
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The next item following a partial list of returned items. For\
          \ example, if a request is made to return <code>maxResults</code> number\
          \ of items, <code>NextToken</code> allows you to return more items in your\
          \ list starting at the location pointed to by the next token."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of items to be returned.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListProtectedResourcesOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
  /backup-vaults/{backupVaultName}/recovery-points/:
    get:
      description: Returns detailed information about the recovery points stored in
        a backup vault.
      operationId: ListRecoveryPointsByBackupVault
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The name of a logical container where backups are stored.\
          \ Backup vaults are identified by names that are unique to the account used\
          \ to create them and the Amazon Web Services Region where they are created.\
          \ They consist of lowercase letters, numbers, and hyphens.</p> <note> <p>Backup\
          \ vault name might not be available when a supported service creates the\
          \ backup.</p> </note>"
        explode: false
        in: path
        name: backupVaultName
        required: true
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
          type: string
        style: simple
      - description: "The next item following a partial list of returned items. For\
          \ example, if a request is made to return <code>maxResults</code> number\
          \ of items, <code>NextToken</code> allows you to return more items in your\
          \ list starting at the location pointed to by the next token."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of items to be returned.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Returns only recovery points that match the specified resource
          Amazon Resource Name (ARN).
        explode: true
        in: query
        name: resourceArn
        required: false
        schema:
          type: string
        style: form
      - description: Returns only recovery points that match the specified resource
          type.
        explode: true
        in: query
        name: resourceType
        required: false
        schema:
          pattern: "^[a-zA-Z0-9\\-\\_\\.]{1,50}$"
          type: string
        style: form
      - description: Returns only recovery points that match the specified backup
          plan ID.
        explode: true
        in: query
        name: backupPlanId
        required: false
        schema:
          type: string
        style: form
      - description: Returns only recovery points that were created before the specified
          timestamp.
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Returns only recovery points that were created after the specified
          timestamp.
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: This returns only recovery points that match the specified parent
          (composite) recovery point Amazon Resource Name (ARN).
        explode: true
        in: query
        name: parentRecoveryPointArn
        required: false
        schema:
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecoveryPointsByBackupVaultOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
  /legal-holds/{legalHoldId}/recovery-points:
    get:
      description: This action returns recovery point ARNs (Amazon Resource Names)
        of the specified legal hold.
      operationId: ListRecoveryPointsByLegalHold
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: This is the ID of the legal hold.
        explode: false
        in: path
        name: legalHoldId
        required: true
        schema:
          type: string
        style: simple
      - description: "This is the next item following a partial list of returned resources.\
          \ For example, if a request is made to return <code>maxResults</code> number\
          \ of resources, <code>NextToken</code> allows you to return more items in\
          \ your list starting at the location pointed to by the next token."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: This is the maximum number of resource list items to be returned.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecoveryPointsByLegalHoldOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
  /resources/{resourceArn}/recovery-points/:
    get:
      description: "<p>Returns detailed information about all the recovery points\
        \ of the type specified by a resource Amazon Resource Name (ARN).</p> <note>\
        \ <p>For Amazon EFS and Amazon EC2, this action only lists recovery points\
        \ created by Backup.</p> </note>"
      operationId: ListRecoveryPointsByResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: An ARN that uniquely identifies a resource. The format of the
          ARN depends on the resource type.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      - description: "The next item following a partial list of returned items. For\
          \ example, if a request is made to return <code>maxResults</code> number\
          \ of items, <code>NextToken</code> allows you to return more items in your\
          \ list starting at the location pointed to by the next token."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: <p>The maximum number of items to be returned.</p> <note> <p>Amazon
          RDS requires a value of at least 20.</p> </note>
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRecoveryPointsByResourceOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
  /audit/report-jobs:
    get:
      description: Returns details about your report jobs.
      operationId: ListReportJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Returns only report jobs with the specified report plan name.
        explode: true
        in: query
        name: ReportPlanName
        required: false
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z][_a-zA-Z0-9]*"
          type: string
        style: form
      - description: "Returns only report jobs that were created before the date and\
          \ time specified in Unix format and Coordinated Universal Time (UTC). For\
          \ example, the value 1516925490 represents Friday, January 26, 2018 12:11:30\
          \ AM."
        explode: true
        in: query
        name: CreationBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: "Returns only report jobs that were created after the date and\
          \ time specified in Unix format and Coordinated Universal Time (UTC). For\
          \ example, the value 1516925490 represents Friday, January 26, 2018 12:11:30\
          \ AM."
        explode: true
        in: query
        name: CreationAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: <p>Returns only report jobs that are in the specified status.
          The statuses are:</p> <p> <code>CREATED | RUNNING | COMPLETED | FAILED</code>
          </p>
        explode: true
        in: query
        name: Status
        required: false
        schema:
          type: string
        style: form
      - description: "The number of desired results from 1 to 1000. Optional. If unspecified,\
          \ the query will return 1 MB of data."
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: "An identifier that was returned from the previous call to this\
          \ operation, which can be used to return the next set of items in the list."
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListReportJobsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-accepts:
      - application/json
  /restore-jobs/:
    get:
      description: "Returns a list of jobs that Backup initiated to restore a saved\
        \ resource, including details about the recovery process."
      operationId: ListRestoreJobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "The next item following a partial list of returned items. For\
          \ example, if a request is made to return <code>maxResults</code> number\
          \ of items, <code>NextToken</code> allows you to return more items in your\
          \ list starting at the location pointed to by the next token."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of items to be returned.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: The account ID to list the jobs from. Returns only restore jobs
          associated with the specified account ID.
        explode: true
        in: query
        name: accountId
        required: false
        schema:
          pattern: "^[0-9]{12}$"
          type: string
        style: form
      - description: Returns only restore jobs that were created before the specified
          date.
        explode: true
        in: query
        name: createdBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Returns only restore jobs that were created after the specified
          date.
        explode: true
        in: query
        name: createdAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Returns only restore jobs associated with the specified job status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - PENDING
          - RUNNING
          - COMPLETED
          - ABORTED
          - FAILED
          type: string
        style: form
      - description: Returns only copy jobs completed before a date expressed in Unix
          format and Coordinated Universal Time (UTC).
        explode: true
        in: query
        name: completeBefore
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Returns only copy jobs completed after a date expressed in Unix
          format and Coordinated Universal Time (UTC).
        explode: true
        in: query
        name: completeAfter
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListRestoreJobsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
  /tags/{resourceArn}/:
    get:
      description: "<p>Returns a list of key-value pairs assigned to a target recovery\
        \ point, backup plan, or backup vault.</p> <p> <code>ListTags</code> only\
        \ works for resource types that support full Backup management of their backups.\
        \ Those resource types are listed in the \"Full Backup management\" section\
        \ of the <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html#features-by-resource\"\
        > Feature availability by resource</a> table.</p>"
      operationId: ListTags
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: "An Amazon Resource Name (ARN) that uniquely identifies a resource.\
          \ The format of the ARN depends on the type of resource. Valid targets for\
          \ <code>ListTags</code> are recovery points, backup plans, and backup vaults."
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      - description: "The next item following a partial list of returned items. For\
          \ example, if a request is made to return <code>maxResults</code> number\
          \ of items, <code>NextToken</code> allows you to return more items in your\
          \ list starting at the location pointed to by the next token."
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - description: The maximum number of items to be returned.
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          maximum: 1000
          minimum: 1
          type: integer
        style: form
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-accepts:
      - application/json
  /backup-jobs:
    put:
      description: Starts an on-demand backup job for the specified resource.
      operationId: StartBackupJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartBackupJob_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartBackupJobOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /copy-jobs:
    put:
      description: <p>Starts a job to create a one-time copy of the specified resource.</p>
        <p>Does not support continuous backups.</p>
      operationId: StartCopyJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartCopyJob_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartCopyJobOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /audit/report-jobs/{reportPlanName}:
    post:
      description: Starts an on-demand report job for the specified report plan.
      operationId: StartReportJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The unique name of a report plan.
        explode: false
        in: path
        name: reportPlanName
        required: true
        schema:
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z][_a-zA-Z0-9]*"
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartReportJob_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartReportJobOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-content-type: application/json
      x-accepts:
      - application/json
  /restore-jobs:
    put:
      description: Recovers the saved resource identified by an Amazon Resource Name
        (ARN).
      operationId: StartRestoreJob
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StartRestoreJob_request'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StartRestoreJobOutput'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
      x-content-type: application/json
      x-accepts:
      - application/json
  /tags/{resourceArn}:
    post:
      description: "Assigns a set of key-value pairs to a recovery point, backup plan,\
        \ or backup vault identified by an Amazon Resource Name (ARN)."
      operationId: TagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: An ARN that uniquely identifies a resource. The format of the
          ARN depends on the type of the tagged resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LimitExceededException'
          description: LimitExceededException
      x-content-type: application/json
      x-accepts:
      - application/json
  /untag/{resourceArn}:
    post:
      description: "Removes a set of key-value pairs from a recovery point, backup\
        \ plan, or backup vault identified by an Amazon Resource Name (ARN)"
      operationId: UntagResource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: An ARN that uniquely identifies a resource. The format of the
          ARN depends on the type of the tagged resource.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResource_request'
        required: true
      responses:
        "200":
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidParameterValueException'
          description: InvalidParameterValueException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MissingParameterValueException'
          description: MissingParameterValueException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceUnavailableException'
          description: ServiceUnavailableException
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CancelLegalHoldOutput:
      properties: {}
      type: object
    InvalidParameterValueException: {}
    InvalidResourceStateException: {}
    MissingParameterValueException: {}
    ServiceUnavailableException: {}
    ResourceNotFoundException: {}
    CreateBackupPlanOutput:
      example:
        VersionId: ""
        CreationDate: ""
        BackupPlanId: ""
        BackupPlanArn: ""
        AdvancedBackupSettings: ""
      properties:
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies a backup plan.
        BackupPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies a\
              \ backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>."
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a backup plan is created, in Unix\
              \ format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        VersionId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "Unique, randomly generated, Unicode, UTF-8 encoded strings\
              \ that are at most 1,024 bytes long. They cannot be edited."
        AdvancedBackupSettings:
          allOf:
          - $ref: '#/components/schemas/AdvancedBackupSettings'
          - description: A list of <code>BackupOptions</code> settings for a resource
              type. This option is only available for Windows Volume Shadow Copy Service
              (VSS) backup jobs.
      type: object
    BackupPlanName:
      type: string
    BackupRulesInput:
      items:
        $ref: '#/components/schemas/BackupRuleInput'
      type: array
    AdvancedBackupSettings:
      items:
        $ref: '#/components/schemas/AdvancedBackupSetting'
      type: array
    TagValue:
      type: string
    LimitExceededException: {}
    AlreadyExistsException: {}
    CreateBackupSelectionOutput:
      example:
        CreationDate: ""
        BackupPlanId: ""
        SelectionId: ""
      properties:
        SelectionId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies the body of a request to assign a set
              of resources to a backup plan.
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies a backup plan.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a backup selection is created, in Unix\
              \ format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
      type: object
    BackupSelectionName:
      pattern: "^[a-zA-Z0-9\\-\\_\\.]{1,50}$"
      type: string
    IAMRoleArn:
      type: string
    ResourceArns:
      items:
        $ref: '#/components/schemas/ARN'
      type: array
    ListOfTags:
      items:
        $ref: '#/components/schemas/Condition'
      type: array
    Conditions:
      description: Contains information about which resources to include or exclude
        from a backup plan using their tags. Conditions are case sensitive.
      properties:
        StringEquals:
          allOf:
          - $ref: '#/components/schemas/ConditionParameters'
          - description: Filters the values of your tagged resources for only those
              resources that you tagged with the same value. Also called "exact matching."
        StringNotEquals:
          allOf:
          - $ref: '#/components/schemas/ConditionParameters'
          - description: Filters the values of your tagged resources for only those
              resources that you tagged that do not have the same value. Also called
              "negated matching."
        StringLike:
          allOf:
          - $ref: '#/components/schemas/ConditionParameters'
          - description: "Filters the values of your tagged resources for matching\
              \ tag values with the use of a wildcard character (*) anywhere in the\
              \ string. For example, \"prod*\" or \"*rod*\" matches the tag value\
              \ \"production\"."
        StringNotLike:
          allOf:
          - $ref: '#/components/schemas/ConditionParameters'
          - description: Filters the values of your tagged resources for non-matching
              tag values with the use of a wildcard character (*) anywhere in the
              string.
      type: object
    CreateBackupVaultOutput:
      example:
        CreationDate: ""
        BackupVaultName: ""
        BackupVaultArn: ""
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          - description: "The name of a logical container where backups are stored.\
              \ Backup vaults are identified by names that are unique to the account\
              \ used to create them and the Region where they are created. They consist\
              \ of lowercase letters, numbers, and hyphens."
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies a\
              \ backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>."
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a backup vault is created, in Unix format\
              \ and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
      type: object
    CreateFrameworkOutput:
      example:
        FrameworkName: ""
        FrameworkArn: ""
      properties:
        FrameworkName:
          allOf:
          - $ref: '#/components/schemas/FrameworkName'
          - description: "The unique name of the framework. The name must be between\
              \ 1 and 256 characters, starting with a letter, and consisting of letters\
              \ (a-z, A-Z), numbers (0-9), and underscores (_)."
        FrameworkArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: An Amazon Resource Name (ARN) that uniquely identifies a
              resource. The format of the ARN depends on the resource type.
      type: object
    FrameworkControl:
      description: Contains detailed information about all of the controls of a framework.
        Each framework must contain at least one control.
      properties:
        ControlName:
          allOf:
          - $ref: '#/components/schemas/ControlName'
          - description: The name of a control. This name is between 1 and 256 characters.
        ControlInputParameters:
          allOf:
          - $ref: '#/components/schemas/ControlInputParameters'
          - description: A list of <code>ParameterName</code> and <code>ParameterValue</code>
              pairs.
        ControlScope:
          $ref: '#/components/schemas/FrameworkControl_ControlScope'
      required:
      - ControlName
      type: object
    string:
      type: string
    CreateLegalHoldOutput:
      example:
        Status: ""
        CreationDate: ""
        Description: ""
        LegalHoldId: ""
        RecoveryPointSelection:
          DateRange:
            FromDate: ""
            ToDate: ""
          VaultNames: ""
          ResourceIdentifiers: ""
        Title: ""
        LegalHoldArn: ""
      properties:
        Title:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This is the string title of the legal hold returned after
              creating the legal hold.
        Status:
          allOf:
          - $ref: '#/components/schemas/LegalHoldStatus'
          - description: "This displays the status of the legal hold returned after\
              \ creating the legal hold. Statuses can be <code>ACTIVE</code>, <code>PENDING</code>,\
              \ <code>CANCELED</code>, <code>CANCELING</code>, or <code>FAILED</code>."
        Description:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This is the returned string description of the legal hold.
        LegalHoldId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Legal hold ID returned for the specified legal hold on a
              recovery point.
        LegalHoldArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: This is the ARN (Amazon Resource Number) of the created legal
              hold.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: Time in number format when legal hold was created.
        RecoveryPointSelection:
          $ref: '#/components/schemas/CreateLegalHoldOutput_RecoveryPointSelection'
      type: object
    VaultNames:
      items:
        $ref: '#/components/schemas/string'
      type: array
    ResourceIdentifiers:
      items:
        $ref: '#/components/schemas/string'
      type: array
    DateRange:
      description: "<p>This is a resource filter containing FromDate: DateTime and\
        \ ToDate: DateTime. Both values are required. Future DateTime values are not\
        \ permitted.</p> <p>The date and time are in Unix format and Coordinated Universal\
        \ Time (UTC), and it is accurate to milliseconds ((milliseconds are optional).\
        \ For example, the value 1516925490.087 represents Friday, January 26, 2018\
        \ 12:11:30.087 AM.</p>"
      example:
        FromDate: ""
        ToDate: ""
      properties:
        FromDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "<p>This value is the beginning date, inclusive.</p> <p>The\
              \ date and time are in Unix format and Coordinated Universal Time (UTC),\
              \ and it is accurate to milliseconds (milliseconds are optional).</p>"
        ToDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "<p>This value is the end date, inclusive.</p> <p>The date\
              \ and time are in Unix format and Coordinated Universal Time (UTC),\
              \ and it is accurate to milliseconds (milliseconds are optional).</p>"
      required:
      - FromDate
      - ToDate
      type: object
    CreateReportPlanOutput:
      example:
        ReportPlanName: ""
        CreationTime: ""
        ReportPlanArn: ""
      properties:
        ReportPlanName:
          allOf:
          - $ref: '#/components/schemas/ReportPlanName'
          - description: The unique name of the report plan.
        ReportPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: An Amazon Resource Name (ARN) that uniquely identifies a
              resource. The format of the ARN depends on the resource type.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a backup vault is created, in Unix format\
              \ and Coordinated Universal Time (UTC). The value of <code>CreationTime</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
      type: object
    FormatList:
      items:
        $ref: '#/components/schemas/string'
      type: array
    stringList:
      items:
        $ref: '#/components/schemas/string'
      type: array
    integer:
      type: integer
    DeleteBackupPlanOutput:
      example:
        VersionId: ""
        DeletionDate: ""
        BackupPlanId: ""
        BackupPlanArn: ""
      properties:
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies a backup plan.
        BackupPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies a\
              \ backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>."
        DeletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a backup plan is deleted, in Unix format\
              \ and Coordinated Universal Time (UTC). The value of <code>DeletionDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        VersionId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "Unique, randomly generated, Unicode, UTF-8 encoded strings\
              \ that are at most 1,024 bytes long. Version IDs cannot be edited."
      type: object
    InvalidRequestException: {}
    ConflictException: {}
    DescribeBackupJobOutput:
      example:
        CreationDate: ""
        AccountId: ""
        BackupVaultArn: ""
        ResourceName: ""
        BytesTransferred: ""
        BackupJobId: ""
        PercentDone: ""
        ParentJobId: ""
        BackupVaultName: ""
        BackupOptions: ""
        BackupType: ""
        StartBy: ""
        IamRoleArn: ""
        CompletionDate: ""
        CreatedBy:
          BackupRuleId: ""
          BackupPlanVersion: ""
          BackupPlanId: ""
          BackupPlanArn: ""
        ExpectedCompletionDate: ""
        BackupSizeInBytes: ""
        IsParent: ""
        RecoveryPointArn: ""
        ResourceType: ""
        StatusMessage: ""
        ResourceArn: ""
        State: ""
        NumberOfChildJobs: ""
        ChildJobsInState: ""
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: Returns the account ID that owns the backup job.
        BackupJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies a request to Backup to back up a resource.
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          - description: "The name of a logical container where backups are stored.\
              \ Backup vaults are identified by names that are unique to the account\
              \ used to create them and the Amazon Web Services Region where they\
              \ are created. They consist of lowercase letters, numbers, and hyphens."
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies a\
              \ backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>."
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An ARN that uniquely identifies a recovery point; for example,\
              \ <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>."
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: An ARN that uniquely identifies a saved resource. The format
              of the ARN depends on the resource type.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a backup job is created, in Unix\
              \ format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a job to create a backup job is completed,\
              \ in Unix format and Coordinated Universal Time (UTC). The value of\
              \ <code>CompletionDate</code> is accurate to milliseconds. For example,\
              \ the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087\
              \ AM."
        State:
          allOf:
          - $ref: '#/components/schemas/BackupJobState'
          - description: The current state of a resource recovery point.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A detailed message explaining the status of the job to back
              up a resource.
        PercentDone:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Contains an estimated percentage that is complete of a job
              at the time the job status was queried.
        BackupSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The size, in bytes, of a backup."
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: "Specifies the IAM role ARN used to create the target recovery\
              \ point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>."
        CreatedBy:
          $ref: '#/components/schemas/DescribeBackupJobOutput_CreatedBy'
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: "The type of Amazon Web Services resource to be backed up;\
              \ for example, an Amazon Elastic Block Store (Amazon EBS) volume or\
              \ an Amazon Relational Database Service (Amazon RDS) database."
        BytesTransferred:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The size in bytes transferred to a backup vault at the time
              that the job status was queried.
        ExpectedCompletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a job to back up resources is expected\
              \ to be completed, in Unix format and Coordinated Universal Time (UTC).\
              \ The value of <code>ExpectedCompletionDate</code> is accurate to milliseconds.\
              \ For example, the value 1516925490.087 represents Friday, January 26,\
              \ 2018 12:11:30.087 AM."
        StartBy:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "Specifies the time in Unix format and Coordinated Universal\
              \ Time (UTC) when a backup job must be started before it is canceled.\
              \ The value is calculated by adding the start window to the scheduled\
              \ time. So if the scheduled time were 6:00 PM and the start window is\
              \ 2 hours, the <code>StartBy</code> time would be 8:00 PM on the date\
              \ specified. The value of <code>StartBy</code> is accurate to milliseconds.\
              \ For example, the value 1516925490.087 represents Friday, January 26,\
              \ 2018 12:11:30.087 AM."
        BackupOptions:
          allOf:
          - $ref: '#/components/schemas/BackupOptions'
          - description: Represents the options specified as part of backup plan or
              on-demand backup job.
        BackupType:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "Represents the actual backup type selected for a backup\
              \ job. For example, if a successful Windows Volume Shadow Copy Service\
              \ (VSS) backup was taken, <code>BackupType</code> returns <code>\"WindowsVSS\"\
              </code>. If <code>BackupType</code> is empty, then the backup type was\
              \ a regular backup."
        ParentJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This returns the parent (composite) resource backup job ID.
        IsParent:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: This returns the boolean value that a backup job is a parent
              (composite) job.
        NumberOfChildJobs:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: This returns the number of child (nested) backup jobs.
        ChildJobsInState:
          allOf:
          - $ref: '#/components/schemas/BackupJobChildJobsInState'
          - description: This returns the statistics of the included child (nested)
              backup jobs.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This is the non-unique name of the resource that belongs
              to the specified backup.
      type: object
    DependencyFailureException: {}
    DescribeBackupVaultOutput:
      example:
        CreationDate: ""
        Locked: ""
        BackupVaultName: ""
        BackupVaultArn: ""
        EncryptionKeyArn: ""
        MaxRetentionDays: ""
        MinRetentionDays: ""
        LockDate: ""
        CreatorRequestId: ""
        NumberOfRecoveryPoints: ""
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The name of a logical container where backups are stored.\
              \ Backup vaults are identified by names that are unique to the account\
              \ used to create them and the Region where they are created. They consist\
              \ of lowercase letters, numbers, and hyphens."
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies a\
              \ backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>."
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "The server-side encryption key that is used to protect your\
              \ backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>."
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a backup vault is created, in Unix\
              \ format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A unique string that identifies the request and allows failed
              requests to be retried without the risk of running the operation twice.
        NumberOfRecoveryPoints:
          allOf:
          - $ref: '#/components/schemas/long'
          - description: The number of recovery points that are stored in a backup
              vault.
        Locked:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: A Boolean that indicates whether Backup Vault Lock is currently
              protecting the backup vault. <code>True</code> means that Vault Lock
              causes delete or update operations on the recovery points stored in
              the vault to fail.
        MinRetentionDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "<p>The Backup Vault Lock setting that specifies the minimum\
              \ retention period that the vault retains its recovery points. If this\
              \ parameter is not specified, Vault Lock does not enforce a minimum\
              \ retention period.</p> <p>If specified, any backup or copy job to the\
              \ vault must have a lifecycle policy with a retention period equal to\
              \ or longer than the minimum retention period. If the job's retention\
              \ period is shorter than that minimum retention period, then the vault\
              \ fails the backup or copy job, and you should either modify your lifecycle\
              \ settings or use a different vault. Recovery points already stored\
              \ in the vault prior to Vault Lock are not affected.</p>"
        MaxRetentionDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "<p>The Backup Vault Lock setting that specifies the maximum\
              \ retention period that the vault retains its recovery points. If this\
              \ parameter is not specified, Vault Lock does not enforce a maximum\
              \ retention period on the recovery points in the vault (allowing indefinite\
              \ storage).</p> <p>If specified, any backup or copy job to the vault\
              \ must have a lifecycle policy with a retention period equal to or shorter\
              \ than the maximum retention period. If the job's retention period is\
              \ longer than that maximum retention period, then the vault fails the\
              \ backup or copy job, and you should either modify your lifecycle settings\
              \ or use a different vault. Recovery points already stored in the vault\
              \ prior to Vault Lock are not affected.</p>"
        LockDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "<p>The date and time when Backup Vault Lock configuration\
              \ cannot be changed or deleted.</p> <p>If you applied Vault Lock to\
              \ your vault without specifying a lock date, you can change any of your\
              \ Vault Lock settings, or delete Vault Lock from the vault entirely,\
              \ at any time.</p> <p>This value is in Unix format, Coordinated Universal\
              \ Time (UTC), and accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM.</p>"
      type: object
    DescribeCopyJobOutput:
      example:
        CopyJob:
          DestinationRecoveryPointArn: ""
          CreationDate: ""
          CompositeMemberIdentifier: ""
          AccountId: ""
          SourceRecoveryPointArn: ""
          CreatedBy:
            BackupRuleId: ""
            BackupPlanVersion: ""
            BackupPlanId: ""
            BackupPlanArn: ""
          BackupSizeInBytes: ""
          CopyJobId: ""
          IsParent: ""
          ResourceName: ""
          ResourceType: ""
          ParentJobId: ""
          StatusMessage: ""
          ResourceArn: ""
          State: ""
          NumberOfChildJobs: ""
          SourceBackupVaultArn: ""
          IamRoleArn: ""
          CompletionDate: ""
          ChildJobsInState: ""
          DestinationBackupVaultArn: ""
      properties:
        CopyJob:
          $ref: '#/components/schemas/DescribeCopyJobOutput_CopyJob'
      type: object
    DescribeFrameworkOutput:
      example:
        IdempotencyToken: ""
        FrameworkControls: ""
        FrameworkName: ""
        CreationTime: ""
        FrameworkDescription: ""
        FrameworkStatus: ""
        DeploymentStatus: ""
        FrameworkArn: ""
      properties:
        FrameworkName:
          allOf:
          - $ref: '#/components/schemas/FrameworkName'
          - description: The unique name of a framework.
        FrameworkArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: An Amazon Resource Name (ARN) that uniquely identifies a
              resource. The format of the ARN depends on the resource type.
        FrameworkDescription:
          allOf:
          - $ref: '#/components/schemas/FrameworkDescription'
          - description: An optional description of the framework.
        FrameworkControls:
          allOf:
          - $ref: '#/components/schemas/FrameworkControls'
          - description: "A list of the controls that make up the framework. Each\
              \ control in the list has a name, input parameters, and scope."
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a framework is created, in ISO 8601\
              \ representation. The value of <code>CreationTime</code> is accurate\
              \ to milliseconds. For example, 2020-07-10T15:00:00.000-08:00 represents\
              \ the 10th of July 2020 at 3:00 PM 8 hours behind UTC."
        DeploymentStatus:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: <p>The deployment status of a framework. The statuses are:</p>
              <p> <code>CREATE_IN_PROGRESS | UPDATE_IN_PROGRESS | DELETE_IN_PROGRESS
              | COMPLETED | FAILED</code> </p>
        FrameworkStatus:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "<p>A framework consists of one or more controls. Each control\
              \ governs a resource, such as backup plans, backup selections, backup\
              \ vaults, or recovery points. You can also turn Config recording on\
              \ or off for each resource. The statuses are:</p> <ul> <li> <p> <code>ACTIVE</code>\
              \ when recording is turned on for all resources governed by the framework.</p>\
              \ </li> <li> <p> <code>PARTIALLY_ACTIVE</code> when recording is turned\
              \ off for at least one resource governed by the framework.</p> </li>\
              \ <li> <p> <code>INACTIVE</code> when recording is turned off for all\
              \ resources governed by the framework.</p> </li> <li> <p> <code>UNAVAILABLE</code>\
              \ when Backup is unable to validate recording status at this time.</p>\
              \ </li> </ul>"
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A customer-chosen string that you can use to distinguish
              between otherwise identical calls to <code>DescribeFrameworkOutput</code>.
              Retrying a successful request with the same idempotency token results
              in a success message with no action taken.
      type: object
    DescribeGlobalSettingsOutput:
      example:
        LastUpdateTime: ""
        GlobalSettings: ""
      properties:
        GlobalSettings:
          allOf:
          - $ref: '#/components/schemas/GlobalSettings'
          - description: The status of the flag <code>isCrossAccountBackupEnabled</code>.
        LastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that the flag <code>isCrossAccountBackupEnabled</code>\
              \ was last updated. This update is in Unix format and Coordinated Universal\
              \ Time (UTC). The value of <code>LastUpdateTime</code> is accurate to\
              \ milliseconds. For example, the value 1516925490.087 represents Friday,\
              \ January 26, 2018 12:11:30.087 AM."
      type: object
    DescribeProtectedResourceOutput:
      example:
        ResourceArn: ""
        LastBackupTime: ""
        ResourceName: ""
        ResourceType: ""
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: An ARN that uniquely identifies a resource. The format of
              the ARN depends on the resource type.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: "The type of Amazon Web Services resource saved as a recovery\
              \ point; for example, an Amazon EBS volume or an Amazon RDS database."
        LastBackupTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a resource was last backed up, in\
              \ Unix format and Coordinated Universal Time (UTC). The value of <code>LastBackupTime</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This is the non-unique name of the resource that belongs
              to the specified backup.
      type: object
    DescribeRecoveryPointOutput:
      example:
        Status: ""
        CreationDate: ""
        CompositeMemberIdentifier: ""
        BackupVaultArn: ""
        CreatedBy:
          BackupRuleId: ""
          BackupPlanVersion: ""
          BackupPlanId: ""
          BackupPlanArn: ""
        BackupSizeInBytes: ""
        EncryptionKeyArn: ""
        StorageClass: ""
        IsParent: ""
        ResourceName: ""
        Lifecycle:
          DeleteAfterDays: ""
          MoveToColdStorageAfterDays: ""
        RecoveryPointArn: ""
        CalculatedLifecycle:
          MoveToColdStorageAt: ""
          DeleteAt: ""
        ResourceType: ""
        IsEncrypted: ""
        StatusMessage: ""
        ResourceArn: ""
        BackupVaultName: ""
        ParentRecoveryPointArn: ""
        LastRestoreTime: ""
        SourceBackupVaultArn: ""
        IamRoleArn: ""
        CompletionDate: ""
      properties:
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An ARN that uniquely identifies a recovery point; for example,\
              \ <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>."
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          - description: "The name of a logical container where backups are stored.\
              \ Backup vaults are identified by names that are unique to the account\
              \ used to create them and the Region where they are created. They consist\
              \ of lowercase letters, numbers, and hyphens."
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An ARN that uniquely identifies a backup vault; for example,\
              \ <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>."
        SourceBackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies the\
              \ source vault where the resource was originally backed up in; for example,\
              \ <code>arn:aws:backup:us-east-1:123456789012:vault:BackupVault</code>.\
              \ If the recovery is restored to the same Amazon Web Services account\
              \ or Region, this value will be <code>null</code>."
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: An ARN that uniquely identifies a saved resource. The format
              of the ARN depends on the resource type.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: "The type of Amazon Web Services resource to save as a recovery\
              \ point; for example, an Amazon Elastic Block Store (Amazon EBS) volume\
              \ or an Amazon Relational Database Service (Amazon RDS) database."
        CreatedBy:
          $ref: '#/components/schemas/DescribeRecoveryPointOutput_CreatedBy'
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: "Specifies the IAM role ARN used to create the target recovery\
              \ point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>."
        Status:
          allOf:
          - $ref: '#/components/schemas/RecoveryPointStatus'
          - description: "<p>A status code specifying the state of the recovery point.</p>\
              \ <p> <code>PARTIAL</code> status indicates Backup could not create\
              \ the recovery point before the backup window closed. To increase your\
              \ backup plan window using the API, see <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/API_UpdateBackupPlan.html\"\
              >UpdateBackupPlan</a>. You can also increase your backup plan window\
              \ using the Console by choosing and editing your backup plan.</p> <p>\
              \ <code>EXPIRED</code> status indicates that the recovery point has\
              \ exceeded its retention period, but Backup lacks permission or is otherwise\
              \ unable to delete it. To manually delete these recovery points, see\
              \ <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/gs-cleanup-resources.html#cleanup-backups\"\
              > Step 3: Delete the recovery points</a> in the <i>Clean up resources</i>\
              \ section of <i>Getting started</i>.</p> <p> <code>STOPPED</code> status\
              \ occurs on a continuous backup where a user has taken some action that\
              \ causes the continuous backup to be disabled. This can be caused by\
              \ the removal of permissions, turning off versioning, turning off events\
              \ being sent to EventBridge, or disabling the EventBridge rules that\
              \ are put in place by Backup.</p> <p>To resolve <code>STOPPED</code>\
              \ status, ensure that all requested permissions are in place and that\
              \ versioning is enabled on the S3 bucket. Once these conditions are\
              \ met, the next instance of a backup rule running will result in a new\
              \ continuous recovery point being created. The recovery points with\
              \ STOPPED status do not need to be deleted.</p> <p>For SAP HANA on Amazon\
              \ EC2 <code>STOPPED</code> status occurs due to user action, application\
              \ misconfiguration, or backup failure. To ensure that future continuous\
              \ backups succeed, refer to the recovery point status and check SAP\
              \ HANA for details.</p>"
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A status message explaining the status of the recovery point.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a recovery point is created, in Unix\
              \ format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a job to create a recovery point\
              \ is completed, in Unix format and Coordinated Universal Time (UTC).\
              \ The value of <code>CompletionDate</code> is accurate to milliseconds.\
              \ For example, the value 1516925490.087 represents Friday, January 26,\
              \ 2018 12:11:30.087 AM."
        BackupSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The size, in bytes, of a backup."
        CalculatedLifecycle:
          $ref: '#/components/schemas/DescribeRecoveryPointOutput_CalculatedLifecycle'
        Lifecycle:
          $ref: '#/components/schemas/DescribeRecoveryPointOutput_Lifecycle'
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "The server-side encryption key used to protect your backups;\
              \ for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>."
        IsEncrypted:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: "A Boolean value that is returned as <code>TRUE</code> if\
              \ the specified recovery point is encrypted, or <code>FALSE</code> if\
              \ the recovery point is not encrypted."
        StorageClass:
          allOf:
          - $ref: '#/components/schemas/StorageClass'
          - description: Specifies the storage class of the recovery point. Valid
              values are <code>WARM</code> or <code>COLD</code>.
        LastRestoreTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a recovery point was last restored,\
              \ in Unix format and Coordinated Universal Time (UTC). The value of\
              \ <code>LastRestoreTime</code> is accurate to milliseconds. For example,\
              \ the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087\
              \ AM."
        ParentRecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "This is an ARN that uniquely identifies a parent (composite)\
              \ recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>."
        CompositeMemberIdentifier:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "This is the identifier of a resource within a composite\
              \ group, such as nested (child) recovery point belonging to a composite\
              \ (parent) stack. The ID is transferred from the <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html#resources-section-structure-syntax\"\
              > logical ID</a> within a stack."
        IsParent:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: This returns the boolean value that a recovery point is a
              parent (composite) job.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This is the non-unique name of the resource that belongs
              to the specified backup.
      type: object
    DescribeRegionSettingsOutput:
      example:
        ResourceTypeOptInPreference: ""
        ResourceTypeManagementPreference: ""
      properties:
        ResourceTypeOptInPreference:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeOptInPreference'
          - description: Returns a list of all services along with the opt-in preferences
              in the Region.
        ResourceTypeManagementPreference:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeManagementPreference'
          - description: "<p>Returns whether Backup fully manages the backups for\
              \ a resource type.</p> <p>For the benefits of full Backup management,\
              \ see <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html#full-management\"\
              > Full Backup management</a>.</p> <p>For a list of resource types and\
              \ whether each supports full Backup management, see the <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html#features-by-resource\"\
              > Feature availability by resource</a> table.</p> <p>If <code>\"DynamoDB\"\
              :false</code>, you can enable full Backup management for DynamoDB backup\
              \ by enabling <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/advanced-ddb-backup.html#advanced-ddb-backup-enable-cli\"\
              > Backup's advanced DynamoDB backup features</a>.</p>"
      type: object
    DescribeReportJobOutput:
      example:
        ReportJob:
          Status: ""
          CompletionTime: ""
          ReportTemplate: ""
          CreationTime: ""
          ReportJobId: ""
          ReportDestination:
            S3Keys: ""
            S3BucketName: ""
          ReportPlanArn: ""
          StatusMessage: ""
      properties:
        ReportJob:
          $ref: '#/components/schemas/DescribeReportJobOutput_ReportJob'
      type: object
    DescribeReportPlanOutput:
      example:
        ReportPlan:
          LastAttemptedExecutionTime: ""
          ReportSetting:
            FrameworkArns: ""
            ReportTemplate: ""
            OrganizationUnits: ""
            NumberOfFrameworks: ""
            Regions: ""
            Accounts: ""
          ReportPlanDescription: ""
          ReportPlanName: ""
          ReportDeliveryChannel:
            S3KeyPrefix: ""
            S3BucketName: ""
            Formats: ""
          CreationTime: ""
          LastSuccessfulExecutionTime: ""
          ReportPlanArn: ""
          DeploymentStatus: ""
      properties:
        ReportPlan:
          $ref: '#/components/schemas/DescribeReportPlanOutput_ReportPlan'
      type: object
    DescribeRestoreJobOutput:
      example:
        RestoreJobId: ""
        Status: ""
        CreationDate: ""
        AccountId: ""
        BackupSizeInBytes: ""
        RecoveryPointArn: ""
        ResourceType: ""
        PercentDone: ""
        StatusMessage: ""
        ExpectedCompletionTimeMinutes: ""
        CreatedResourceArn: ""
        IamRoleArn: ""
        CompletionDate: ""
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: Returns the account ID that owns the restore job.
        RestoreJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies the job that restores a recovery point.
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An ARN that uniquely identifies a recovery point; for example,\
              \ <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>."
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a restore job is created, in Unix\
              \ format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a job to restore a recovery point\
              \ is completed, in Unix format and Coordinated Universal Time (UTC).\
              \ The value of <code>CompletionDate</code> is accurate to milliseconds.\
              \ For example, the value 1516925490.087 represents Friday, January 26,\
              \ 2018 12:11:30.087 AM."
        Status:
          allOf:
          - $ref: '#/components/schemas/RestoreJobStatus'
          - description: Status code specifying the state of the job that is initiated
              by Backup to restore a recovery point.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A message showing the status of a job to restore a recovery
              point.
        PercentDone:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Contains an estimated percentage that is complete of a job
              at the time the job status was queried.
        BackupSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The size, in bytes, of the restored resource."
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: "Specifies the IAM role ARN used to create the target recovery\
              \ point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>."
        ExpectedCompletionTimeMinutes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The amount of time in minutes that a job restoring a recovery
              point is expected to take.
        CreatedResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: An Amazon Resource Name (ARN) that uniquely identifies a
              resource whose recovery point is being restored. The format of the ARN
              depends on the resource type of the backed-up resource.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: Returns metadata associated with a restore job listed by
              resource type.
      type: object
    ExportBackupPlanTemplateOutput:
      example:
        BackupPlanTemplateJson: ""
      properties:
        BackupPlanTemplateJson:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: <p>The body of a backup plan template in JSON format.</p>
              <note> <p>This is a signed JSON document that cannot be modified before
              being passed to <code>GetBackupPlanFromJSON.</code> </p> </note>
      type: object
    GetBackupPlanOutput:
      example:
        VersionId: ""
        LastExecutionDate: ""
        CreationDate: ""
        BackupPlan:
          BackupPlanName: ""
          Rules: ""
          AdvancedBackupSettings: ""
        DeletionDate: ""
        BackupPlanId: ""
        CreatorRequestId: ""
        BackupPlanArn: ""
        AdvancedBackupSettings: ""
      properties:
        BackupPlan:
          $ref: '#/components/schemas/GetBackupPlanOutput_BackupPlan'
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies a backup plan.
        BackupPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies a\
              \ backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>."
        VersionId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "Unique, randomly generated, Unicode, UTF-8 encoded strings\
              \ that are at most 1,024 bytes long. Version IDs cannot be edited."
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A unique string that identifies the request and allows failed
              requests to be retried without the risk of running the operation twice.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a backup plan is created, in Unix\
              \ format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        DeletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a backup plan is deleted, in Unix\
              \ format and Coordinated Universal Time (UTC). The value of <code>DeletionDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        LastExecutionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The last time a job to back up resources was run with this\
              \ backup plan. A date and time, in Unix format and Coordinated Universal\
              \ Time (UTC). The value of <code>LastExecutionDate</code> is accurate\
              \ to milliseconds. For example, the value 1516925490.087 represents\
              \ Friday, January 26, 2018 12:11:30.087 AM."
        AdvancedBackupSettings:
          allOf:
          - $ref: '#/components/schemas/AdvancedBackupSettings'
          - description: Contains a list of <code>BackupOptions</code> for each resource
              type. The list is populated only if the advanced option is set for the
              backup plan.
      type: object
    GetBackupPlanFromJSONOutput:
      example:
        BackupPlan:
          BackupPlanName: ""
          Rules: ""
          AdvancedBackupSettings: ""
      properties:
        BackupPlan:
          $ref: '#/components/schemas/GetBackupPlanOutput_BackupPlan'
      type: object
    GetBackupPlanFromTemplateOutput:
      example:
        BackupPlanDocument:
          BackupPlanName: ""
          Rules: ""
          AdvancedBackupSettings: ""
      properties:
        BackupPlanDocument:
          $ref: '#/components/schemas/GetBackupPlanFromTemplateOutput_BackupPlanDocument'
      type: object
    GetBackupSelectionOutput:
      example:
        CreationDate: ""
        BackupSelection:
          ListOfTags: ""
          NotResources: ""
          SelectionName: ""
          IamRoleArn: ""
          Resources: ""
          Conditions:
            StringEquals: ""
            StringNotLike: ""
            StringLike: ""
            StringNotEquals: ""
        BackupPlanId: ""
        SelectionId: ""
        CreatorRequestId: ""
      properties:
        BackupSelection:
          $ref: '#/components/schemas/GetBackupSelectionOutput_BackupSelection'
        SelectionId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies the body of a request to assign a set
              of resources to a backup plan.
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies a backup plan.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a backup selection is created, in Unix\
              \ format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A unique string that identifies the request and allows failed
              requests to be retried without the risk of running the operation twice.
      type: object
    GetBackupVaultAccessPolicyOutput:
      example:
        Policy: ""
        BackupVaultName: ""
        BackupVaultArn: ""
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          - description: "The name of a logical container where backups are stored.\
              \ Backup vaults are identified by names that are unique to the account\
              \ used to create them and the Region where they are created. They consist\
              \ of lowercase letters, numbers, and hyphens."
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies a\
              \ backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>."
        Policy:
          allOf:
          - $ref: '#/components/schemas/IAMPolicy'
          - description: The backup vault access policy document in JSON format.
      type: object
    GetBackupVaultNotificationsOutput:
      example:
        BackupVaultName: ""
        BackupVaultArn: ""
        SNSTopicArn: ""
        BackupVaultEvents: ""
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          - description: "The name of a logical container where backups are stored.\
              \ Backup vaults are identified by names that are unique to the account\
              \ used to create them and the Region where they are created. They consist\
              \ of lowercase letters, numbers, and hyphens."
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies a\
              \ backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>."
        SNSTopicArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An ARN that uniquely identifies an Amazon Simple Notification\
              \ Service (Amazon SNS) topic; for example, <code>arn:aws:sns:us-west-2:111122223333:MyTopic</code>."
        BackupVaultEvents:
          allOf:
          - $ref: '#/components/schemas/BackupVaultEvents'
          - description: An array of events that indicate the status of jobs to back
              up resources to the backup vault.
      type: object
    GetLegalHoldOutput:
      example:
        Status: ""
        CreationDate: ""
        Description: ""
        CancellationDate: ""
        LegalHoldId: ""
        RecoveryPointSelection:
          DateRange:
            FromDate: ""
            ToDate: ""
          VaultNames: ""
          ResourceIdentifiers: ""
        RetainRecordUntil: ""
        Title: ""
        LegalHoldArn: ""
        CancelDescription: ""
      properties:
        Title:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This is the string title of the legal hold.
        Status:
          allOf:
          - $ref: '#/components/schemas/LegalHoldStatus'
          - description: "This is the status of the legal hold. Statuses can be <code>ACTIVE</code>,\
              \ <code>CREATING</code>, <code>CANCELED</code>, and <code>CANCELING</code>."
        Description:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This is the returned string description of the legal hold.
        CancelDescription:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: String describing the reason for removing the legal hold.
        LegalHoldId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This is the returned ID associated with a specified legal
              hold.
        LegalHoldArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: This is the returned framework ARN for the specified legal
              hold. An Amazon Resource Name (ARN) uniquely identifies a resource.
              The format of the ARN depends on the resource type.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: Time in number format when legal hold was created.
        CancellationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: Time in number when legal hold was cancelled.
        RetainRecordUntil:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: This is the date and time until which the legal hold record
              will be retained.
        RecoveryPointSelection:
          $ref: '#/components/schemas/CreateLegalHoldOutput_RecoveryPointSelection'
      type: object
    GetRecoveryPointRestoreMetadataOutput:
      example:
        BackupVaultArn: ""
        RestoreMetadata: ""
        RecoveryPointArn: ""
      properties:
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An ARN that uniquely identifies a backup vault; for example,\
              \ <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>."
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An ARN that uniquely identifies a recovery point; for example,\
              \ <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>."
        RestoreMetadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: The set of metadata key-value pairs that describe the original
              configuration of the backed-up resource. These values vary depending
              on the service that is being restored.
      type: object
    GetSupportedResourceTypesOutput:
      example:
        ResourceTypes: ""
      properties:
        ResourceTypes:
          allOf:
          - $ref: '#/components/schemas/ResourceTypes'
          - description: <p>Contains a string with the supported Amazon Web Services
              resource types:</p> <ul> <li> <p> <code>Aurora</code> for Amazon Aurora</p>
              </li> <li> <p> <code>DynamoDB</code> for Amazon DynamoDB</p> </li> <li>
              <p> <code>EBS</code> for Amazon Elastic Block Store</p> </li> <li> <p>
              <code>EC2</code> for Amazon Elastic Compute Cloud</p> </li> <li> <p>
              <code>EFS</code> for Amazon Elastic File System</p> </li> <li> <p> <code>FSX</code>
              for Amazon FSx</p> </li> <li> <p> <code>RDS</code> for Amazon Relational
              Database Service</p> </li> <li> <p> <code>Storage Gateway</code> for
              Storage Gateway</p> </li> <li> <p> <code>DocDB</code> for Amazon DocumentDB
              (with MongoDB compatibility)</p> </li> <li> <p> <code>Neptune</code>
              for Amazon Neptune</p> </li> </ul>
      type: object
    ListBackupJobsOutput:
      example:
        NextToken: ""
        BackupJobs: ""
      properties:
        BackupJobs:
          allOf:
          - $ref: '#/components/schemas/BackupJobsList'
          - description: An array of structures containing metadata about your backup
              jobs returned in JSON format.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The next item following a partial list of returned items.\
              \ For example, if a request is made to return <code>maxResults</code>\
              \ number of items, <code>NextToken</code> allows you to return more\
              \ items in your list starting at the location pointed to by the next\
              \ token."
      type: object
    ListBackupPlanTemplatesOutput:
      example:
        BackupPlanTemplatesList: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The next item following a partial list of returned items.\
              \ For example, if a request is made to return <code>maxResults</code>\
              \ number of items, <code>NextToken</code> allows you to return more\
              \ items in your list starting at the location pointed to by the next\
              \ token."
        BackupPlanTemplatesList:
          allOf:
          - $ref: '#/components/schemas/BackupPlanTemplatesList'
          - description: An array of template list items containing metadata about
              your saved templates.
      type: object
    ListBackupPlanVersionsOutput:
      example:
        NextToken: ""
        BackupPlanVersionsList: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The next item following a partial list of returned items.\
              \ For example, if a request is made to return <code>maxResults</code>\
              \ number of items, <code>NextToken</code> allows you to return more\
              \ items in your list starting at the location pointed to by the next\
              \ token."
        BackupPlanVersionsList:
          allOf:
          - $ref: '#/components/schemas/BackupPlanVersionsList'
          - description: An array of version list items containing metadata about
              your backup plans.
      type: object
    ListBackupPlansOutput:
      example:
        NextToken: ""
        BackupPlansList: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The next item following a partial list of returned items.\
              \ For example, if a request is made to return <code>maxResults</code>\
              \ number of items, <code>NextToken</code> allows you to return more\
              \ items in your list starting at the location pointed to by the next\
              \ token."
        BackupPlansList:
          allOf:
          - $ref: '#/components/schemas/BackupPlansList'
          - description: An array of backup plan list items containing metadata about
              your saved backup plans.
      type: object
    ListBackupSelectionsOutput:
      example:
        BackupSelectionsList: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The next item following a partial list of returned items.\
              \ For example, if a request is made to return <code>maxResults</code>\
              \ number of items, <code>NextToken</code> allows you to return more\
              \ items in your list starting at the location pointed to by the next\
              \ token."
        BackupSelectionsList:
          allOf:
          - $ref: '#/components/schemas/BackupSelectionsList'
          - description: An array of backup selection list items containing metadata
              about each resource in the list.
      type: object
    ListBackupVaultsOutput:
      example:
        NextToken: ""
        BackupVaultList: ""
      properties:
        BackupVaultList:
          allOf:
          - $ref: '#/components/schemas/BackupVaultList'
          - description: "An array of backup vault list members containing vault metadata,\
              \ including Amazon Resource Name (ARN), display name, creation date,\
              \ number of saved recovery points, and encryption information if the\
              \ resources saved in the backup vault are encrypted."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The next item following a partial list of returned items.\
              \ For example, if a request is made to return <code>maxResults</code>\
              \ number of items, <code>NextToken</code> allows you to return more\
              \ items in your list starting at the location pointed to by the next\
              \ token."
      type: object
    ListCopyJobsOutput:
      example:
        NextToken: ""
        CopyJobs: ""
      properties:
        CopyJobs:
          allOf:
          - $ref: '#/components/schemas/CopyJobsList'
          - description: 'An array of structures containing metadata about your copy
              jobs returned in JSON format. '
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The next item following a partial list of returned items.\
              \ For example, if a request is made to return maxResults number of items,\
              \ NextToken allows you to return more items in your list starting at\
              \ the location pointed to by the next token. "
      type: object
    ListFrameworksOutput:
      example:
        NextToken: ""
        Frameworks: ""
      properties:
        Frameworks:
          allOf:
          - $ref: '#/components/schemas/FrameworkList'
          - description: "A list of frameworks with details for each framework, including\
              \ the framework name, Amazon Resource Name (ARN), description, number\
              \ of controls, creation time, and deployment status."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      type: object
    ListLegalHoldsOutput:
      example:
        LegalHolds: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The next item following a partial list of returned resources.\
              \ For example, if a request is made to return <code>maxResults</code>\
              \ number of resources, <code>NextToken</code> allows you to return more\
              \ items in your list starting at the location pointed to by the next\
              \ token."
        LegalHolds:
          allOf:
          - $ref: '#/components/schemas/LegalHoldsList'
          - description: "This is an array of returned legal holds, both active and\
              \ previous."
      type: object
    ListProtectedResourcesOutput:
      example:
        NextToken: ""
        Results: ""
      properties:
        Results:
          allOf:
          - $ref: '#/components/schemas/ProtectedResourcesList'
          - description: "An array of resources successfully backed up by Backup including\
              \ the time the resource was saved, an Amazon Resource Name (ARN) of\
              \ the resource, and a resource type."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The next item following a partial list of returned items.\
              \ For example, if a request is made to return <code>maxResults</code>\
              \ number of items, <code>NextToken</code> allows you to return more\
              \ items in your list starting at the location pointed to by the next\
              \ token."
      type: object
    ListRecoveryPointsByBackupVaultOutput:
      example:
        RecoveryPoints: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The next item following a partial list of returned items.\
              \ For example, if a request is made to return <code>maxResults</code>\
              \ number of items, <code>NextToken</code> allows you to return more\
              \ items in your list starting at the location pointed to by the next\
              \ token."
        RecoveryPoints:
          allOf:
          - $ref: '#/components/schemas/RecoveryPointByBackupVaultList'
          - description: An array of objects that contain detailed information about
              recovery points saved in a backup vault.
      type: object
    ListRecoveryPointsByLegalHoldOutput:
      example:
        RecoveryPoints: ""
        NextToken: ""
      properties:
        RecoveryPoints:
          allOf:
          - $ref: '#/components/schemas/RecoveryPointsList'
          - description: This is a list of the recovery points returned by <code>ListRecoveryPointsByLegalHold</code>.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This return is the next item following a partial list of
              returned resources.
      type: object
    ListRecoveryPointsByResourceOutput:
      example:
        RecoveryPoints: ""
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The next item following a partial list of returned items.\
              \ For example, if a request is made to return <code>maxResults</code>\
              \ number of items, <code>NextToken</code> allows you to return more\
              \ items in your list starting at the location pointed to by the next\
              \ token."
        RecoveryPoints:
          allOf:
          - $ref: '#/components/schemas/RecoveryPointByResourceList'
          - description: <p>An array of objects that contain detailed information
              about recovery points of the specified resource type.</p> <note> <p>Only
              Amazon EFS and Amazon EC2 recovery points return BackupVaultName.</p>
              </note>
      type: object
    ListReportJobsOutput:
      example:
        ReportJobs: ""
        NextToken: ""
      properties:
        ReportJobs:
          allOf:
          - $ref: '#/components/schemas/ReportJobList'
          - description: Details about your report jobs in JSON format.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      type: object
    ListReportPlansOutput:
      example:
        NextToken: ""
        ReportPlans: ""
      properties:
        ReportPlans:
          allOf:
          - $ref: '#/components/schemas/ReportPlanList'
          - description: "A list of your report plans with detailed information for\
              \ each plan. This information includes the Amazon Resource Name (ARN),\
              \ report plan name, description, settings, delivery channel, deployment\
              \ status, creation time, and last times the report plan attempted to\
              \ and successfully ran."
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "An identifier that was returned from the previous call to\
              \ this operation, which can be used to return the next set of items\
              \ in the list."
      type: object
    ListRestoreJobsOutput:
      example:
        NextToken: ""
        RestoreJobs: ""
      properties:
        RestoreJobs:
          allOf:
          - $ref: '#/components/schemas/RestoreJobsList'
          - description: An array of objects that contain detailed information about
              jobs to restore saved resources.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The next item following a partial list of returned items.\
              \ For example, if a request is made to return <code>maxResults</code>\
              \ number of items, <code>NextToken</code> allows you to return more\
              \ items in your list starting at the location pointed to by the next\
              \ token."
      type: object
    ListTagsOutput:
      example:
        NextToken: ""
        Tags: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The next item following a partial list of returned items.\
              \ For example, if a request is made to return <code>maxResults</code>\
              \ number of items, <code>NextToken</code> allows you to return more\
              \ items in your list starting at the location pointed to by the next\
              \ token."
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "To help organize your resources, you can assign your own\
              \ metadata to the resources you create. Each tag is a key-value pair."
      type: object
    BackupVaultEvent:
      enum:
      - BACKUP_JOB_STARTED
      - BACKUP_JOB_COMPLETED
      - BACKUP_JOB_SUCCESSFUL
      - BACKUP_JOB_FAILED
      - BACKUP_JOB_EXPIRED
      - RESTORE_JOB_STARTED
      - RESTORE_JOB_COMPLETED
      - RESTORE_JOB_SUCCESSFUL
      - RESTORE_JOB_FAILED
      - COPY_JOB_STARTED
      - COPY_JOB_SUCCESSFUL
      - COPY_JOB_FAILED
      - RECOVERY_POINT_MODIFIED
      - BACKUP_PLAN_CREATED
      - BACKUP_PLAN_MODIFIED
      - S3_BACKUP_OBJECT_FAILED
      - S3_RESTORE_OBJECT_FAILED
      type: string
    StartBackupJobOutput:
      example:
        CreationDate: ""
        IsParent: ""
        RecoveryPointArn: ""
        BackupJobId: ""
      properties:
        BackupJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies a request to Backup to back up a resource.
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "<p> <i>Note: This field is only returned for Amazon EFS\
              \ and Advanced DynamoDB resources.</i> </p> <p>An ARN that uniquely\
              \ identifies a recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>.</p>"
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a backup job is created, in Unix\
              \ format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        IsParent:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: This is a returned boolean value indicating this is a parent
              (composite) backup job.
      type: object
    Long:
      type: integer
    BackupOptionValue:
      pattern: "^[a-zA-Z0-9\\-\\_\\.]{1,50}$"
      type: string
    StartCopyJobOutput:
      example:
        CreationDate: ""
        CopyJobId: ""
        IsParent: ""
      properties:
        CopyJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies a copy job.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a copy job is created, in Unix format\
              \ and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        IsParent:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: This is a returned boolean value indicating this is a parent
              (composite) copy job.
      type: object
    StartReportJobOutput:
      example:
        ReportJobId: ""
      properties:
        ReportJobId:
          allOf:
          - $ref: '#/components/schemas/ReportJobId'
          - description: "The identifier of the report job. A unique, randomly generated,\
              \ Unicode, UTF-8 encoded string that is at most 1,024 bytes long. The\
              \ report job ID cannot be edited."
      type: object
    StartRestoreJobOutput:
      example:
        RestoreJobId: ""
      properties:
        RestoreJobId:
          allOf:
          - $ref: '#/components/schemas/RestoreJobId'
          - description: Uniquely identifies the job that restores a recovery point.
      type: object
    MetadataValue:
      type: string
    UpdateBackupPlanOutput:
      example:
        VersionId: ""
        CreationDate: ""
        BackupPlanId: ""
        BackupPlanArn: ""
        AdvancedBackupSettings: ""
      properties:
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies a backup plan.
        BackupPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies a\
              \ backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>."
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a backup plan is created, in Unix format\
              \ and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        VersionId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "Unique, randomly generated, Unicode, UTF-8 encoded strings\
              \ that are at most 1,024 bytes long. Version Ids cannot be edited."
        AdvancedBackupSettings:
          allOf:
          - $ref: '#/components/schemas/AdvancedBackupSettings'
          - description: Contains a list of <code>BackupOptions</code> for each resource
              type.
      type: object
    UpdateFrameworkOutput:
      example:
        FrameworkName: ""
        CreationTime: ""
        FrameworkArn: ""
      properties:
        FrameworkName:
          allOf:
          - $ref: '#/components/schemas/FrameworkName'
          - description: "The unique name of a framework. This name is between 1 and\
              \ 256 characters, starting with a letter, and consisting of letters\
              \ (a-z, A-Z), numbers (0-9), and underscores (_)."
        FrameworkArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: An Amazon Resource Name (ARN) that uniquely identifies a
              resource. The format of the ARN depends on the resource type.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a framework is created, in ISO 8601\
              \ representation. The value of <code>CreationTime</code> is accurate\
              \ to milliseconds. For example, 2020-07-10T15:00:00.000-08:00 represents\
              \ the 10th of July 2020 at 3:00 PM 8 hours behind UTC."
      type: object
    GlobalSettingsValue:
      type: string
    UpdateRecoveryPointLifecycleOutput:
      example:
        BackupVaultArn: ""
        Lifecycle:
          DeleteAfterDays: ""
          MoveToColdStorageAfterDays: ""
        RecoveryPointArn: ""
        CalculatedLifecycle:
          MoveToColdStorageAt: ""
          DeleteAt: ""
      properties:
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An ARN that uniquely identifies a backup vault; for example,\
              \ <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>."
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies a\
              \ recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>."
        Lifecycle:
          $ref: '#/components/schemas/UpdateRecoveryPointLifecycleOutput_Lifecycle'
        CalculatedLifecycle:
          $ref: '#/components/schemas/DescribeRecoveryPointOutput_CalculatedLifecycle'
      type: object
    IsEnabled:
      type: boolean
    UpdateReportPlanOutput:
      example:
        ReportPlanName: ""
        CreationTime: ""
        ReportPlanArn: ""
      properties:
        ReportPlanName:
          allOf:
          - $ref: '#/components/schemas/ReportPlanName'
          - description: The unique name of the report plan.
        ReportPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: An Amazon Resource Name (ARN) that uniquely identifies a
              resource. The format of the ARN depends on the resource type.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a report plan is created, in Unix\
              \ format and Coordinated Universal Time (UTC). The value of <code>CreationTime</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
      type: object
    ARN:
      type: string
    AccountId:
      pattern: "^[0-9]{12}$"
      type: string
    ResourceType:
      pattern: "^[a-zA-Z0-9\\-\\_\\.]{1,50}$"
      type: string
    BackupOptions:
      additionalProperties:
        $ref: '#/components/schemas/BackupOptionValue'
      type: object
    AdvancedBackupSetting:
      description: A list of backup options for each resource type.
      properties:
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: "<p>Specifies an object containing resource type and backup\
              \ options. The only supported resource type is Amazon EC2 instances\
              \ with Windows Volume Shadow Copy Service (VSS). For a CloudFormation\
              \ example, see the <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/integrate-cloudformation-with-aws-backup.html\"\
              >sample CloudFormation template to enable Windows VSS</a> in the <i>Backup\
              \ User Guide</i>.</p> <p>Valid values: <code>EC2</code>.</p>"
        BackupOptions:
          allOf:
          - $ref: '#/components/schemas/BackupOptions'
          - description: "<p>Specifies the backup option for a selected resource.\
              \ This option is only available for Windows VSS backup jobs.</p> <p>Valid\
              \ values: </p> <p>Set to <code>\"WindowsVSS\":\"enabled\"</code> to\
              \ enable the <code>WindowsVSS</code> backup option and create a Windows\
              \ VSS backup. </p> <p>Set to <code>\"WindowsVSS\":\"disabled\"</code>\
              \ to create a regular backup. The <code>WindowsVSS</code> option is\
              \ not enabled by default.</p> <p>If you specify an invalid option, you\
              \ get an <code>InvalidParameterValueException</code> exception.</p>\
              \ <p>For more information about Windows VSS backups, see <a href=\"\
              https://docs.aws.amazon.com/aws-backup/latest/devguide/windows-backups.html\"\
              >Creating a VSS-Enabled Windows Backup</a>.</p>"
      type: object
    BackupVaultName:
      pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
      type: string
    timestamp:
      format: date-time
      type: string
    BackupJobState:
      enum:
      - CREATED
      - PENDING
      - RUNNING
      - ABORTING
      - ABORTED
      - COMPLETED
      - FAILED
      - EXPIRED
      - PARTIAL
      type: string
    RecoveryPointCreator:
      description: Contains information about the backup plan and rule that Backup
        used to initiate the recovery point backup.
      example:
        BackupRuleId: ""
        BackupPlanVersion: ""
        BackupPlanId: ""
        BackupPlanArn: ""
      properties:
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies a backup plan.
        BackupPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies a\
              \ backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>."
        BackupPlanVersion:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "Version IDs are unique, randomly generated, Unicode, UTF-8\
              \ encoded strings that are at most 1,024 bytes long. They cannot be\
              \ edited."
        BackupRuleId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies a rule used to schedule the backup of
              a selection of resources.
      type: object
    boolean:
      type: boolean
    BackupJob:
      description: Contains detailed information about a backup job.
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The account ID that owns the backup job.
        BackupJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies a request to Backup to back up a resource.
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          - description: "The name of a logical container where backups are stored.\
              \ Backup vaults are identified by names that are unique to the account\
              \ used to create them and the Amazon Web Services Region where they\
              \ are created. They consist of lowercase letters, numbers, and hyphens."
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies a\
              \ backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>."
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An ARN that uniquely identifies a recovery point; for example,\
              \ <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>."
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: An ARN that uniquely identifies a resource. The format of
              the ARN depends on the resource type.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a backup job is created, in Unix format\
              \ and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a job to create a backup job is completed,\
              \ in Unix format and Coordinated Universal Time (UTC). The value of\
              \ <code>CompletionDate</code> is accurate to milliseconds. For example,\
              \ the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087\
              \ AM."
        State:
          allOf:
          - $ref: '#/components/schemas/BackupJobState'
          - description: The current state of a resource recovery point.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A detailed message explaining the status of the job to back
              up a resource.
        PercentDone:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Contains an estimated percentage complete of a job at the
              time the job status was queried.
        BackupSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The size, in bytes, of a backup."
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: "Specifies the IAM role ARN used to create the target recovery\
              \ point. IAM roles other than the default role must include either <code>AWSBackup</code>\
              \ or <code>AwsBackup</code> in the role name. For example, <code>arn:aws:iam::123456789012:role/AWSBackupRDSAccess</code>.\
              \ Role names without those strings lack permissions to perform backup\
              \ jobs."
        CreatedBy:
          $ref: '#/components/schemas/BackupJob_CreatedBy'
        ExpectedCompletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a job to back up resources is expected\
              \ to be completed, in Unix format and Coordinated Universal Time (UTC).\
              \ The value of <code>ExpectedCompletionDate</code> is accurate to milliseconds.\
              \ For example, the value 1516925490.087 represents Friday, January 26,\
              \ 2018 12:11:30.087 AM."
        StartBy:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "Specifies the time in Unix format and Coordinated Universal\
              \ Time (UTC) when a backup job must be started before it is canceled.\
              \ The value is calculated by adding the start window to the scheduled\
              \ time. So if the scheduled time were 6:00 PM and the start window is\
              \ 2 hours, the <code>StartBy</code> time would be 8:00 PM on the date\
              \ specified. The value of <code>StartBy</code> is accurate to milliseconds.\
              \ For example, the value 1516925490.087 represents Friday, January 26,\
              \ 2018 12:11:30.087 AM."
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: "The type of Amazon Web Services resource to be backed up;\
              \ for example, an Amazon Elastic Block Store (Amazon EBS) volume or\
              \ an Amazon Relational Database Service (Amazon RDS) database. For Windows\
              \ Volume Shadow Copy Service (VSS) backups, the only supported resource\
              \ type is Amazon EC2."
        BytesTransferred:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The size in bytes transferred to a backup vault at the time
              that the job status was queried.
        BackupOptions:
          allOf:
          - $ref: '#/components/schemas/BackupOptions'
          - description: "<p>Specifies the backup option for a selected resource.\
              \ This option is only available for Windows Volume Shadow Copy Service\
              \ (VSS) backup jobs.</p> <p>Valid values: Set to <code>\"WindowsVSS\"\
              :\"enabled\"</code> to enable the <code>WindowsVSS</code> backup option\
              \ and create a Windows VSS backup. Set to <code>\"WindowsVSS\":\"disabled\"\
              </code> to create a regular backup. If you specify an invalid option,\
              \ you get an <code>InvalidParameterValueException</code> exception.</p>"
        BackupType:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Represents the type of backup for a backup job.
        ParentJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This uniquely identifies a request to Backup to back up a
              resource. The return will be the parent (composite) job ID.
        IsParent:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: This is a boolean value indicating this is a parent (composite)
              backup job.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This is the non-unique name of the resource that belongs
              to the specified backup.
      type: object
    BackupJobChildJobsInState:
      additionalProperties:
        $ref: '#/components/schemas/Long'
      type: object
    BackupJobsList:
      items:
        $ref: '#/components/schemas/BackupJob'
      type: array
    BackupOptionKey:
      pattern: "^[a-zA-Z0-9\\-\\_\\.]{1,50}$"
      type: string
    BackupRules:
      items:
        $ref: '#/components/schemas/BackupRule'
      type: array
    BackupPlan:
      description: "Contains an optional backup plan display name and an array of\
        \ <code>BackupRule</code> objects, each of which specifies a backup rule.\
        \ Each rule in a backup plan is a separate scheduled task and can back up\
        \ a different selection of Amazon Web Services resources."
      properties:
        BackupPlanName:
          allOf:
          - $ref: '#/components/schemas/BackupPlanName'
          - description: The display name of a backup plan. Must contain 1 to 50 alphanumeric
              or '-_.' characters.
        Rules:
          allOf:
          - $ref: '#/components/schemas/BackupRules'
          - description: "An array of <code>BackupRule</code> objects, each of which\
              \ specifies a scheduled task that is used to back up a selection of\
              \ resources. "
        AdvancedBackupSettings:
          allOf:
          - $ref: '#/components/schemas/AdvancedBackupSettings'
          - description: Contains a list of <code>BackupOptions</code> for each resource
              type.
      required:
      - BackupPlanName
      - Rules
      type: object
    BackupPlanInput:
      description: "Contains an optional backup plan display name and an array of\
        \ <code>BackupRule</code> objects, each of which specifies a backup rule.\
        \ Each rule in a backup plan is a separate scheduled task. "
      properties:
        BackupPlanName:
          allOf:
          - $ref: '#/components/schemas/BackupPlanName'
          - description: The display name of a backup plan. Must contain 1 to 50 alphanumeric
              or '-_.' characters.
        Rules:
          allOf:
          - $ref: '#/components/schemas/BackupRulesInput'
          - description: "An array of <code>BackupRule</code> objects, each of which\
              \ specifies a scheduled task that is used to back up a selection of\
              \ resources."
        AdvancedBackupSettings:
          allOf:
          - $ref: '#/components/schemas/AdvancedBackupSettings'
          - description: Specifies a list of <code>BackupOptions</code> for each resource
              type. These settings are only available for Windows Volume Shadow Copy
              Service (VSS) backup jobs.
      required:
      - BackupPlanName
      - Rules
      type: object
    BackupPlanTemplatesListMember:
      description: An object specifying metadata associated with a backup plan template.
      properties:
        BackupPlanTemplateId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies a stored backup plan template.
        BackupPlanTemplateName:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: The optional display name of a backup plan template.
      type: object
    BackupPlanTemplatesList:
      items:
        $ref: '#/components/schemas/BackupPlanTemplatesListMember'
      type: array
    BackupPlansListMember:
      description: Contains metadata about a backup plan.
      properties:
        BackupPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies a\
              \ backup plan; for example, <code>arn:aws:backup:us-east-1:123456789012:plan:8F81F553-3A74-4A3F-B93D-B3360DC80C50</code>."
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies a backup plan.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a resource backup plan is created, in\
              \ Unix format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        DeletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a backup plan is deleted, in Unix format\
              \ and Coordinated Universal Time (UTC). The value of <code>DeletionDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        VersionId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "Unique, randomly generated, Unicode, UTF-8 encoded strings\
              \ that are at most 1,024 bytes long. Version IDs cannot be edited."
        BackupPlanName:
          allOf:
          - $ref: '#/components/schemas/BackupPlanName'
          - description: The display name of a saved backup plan.
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "<p>A unique string that identifies the request and allows\
              \ failed requests to be retried without the risk of running the operation\
              \ twice. This parameter is optional.</p> <p>If used, this parameter\
              \ must contain 1 to 50 alphanumeric or '-_.' characters.</p>"
        LastExecutionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The last time a job to back up resources was run with this\
              \ rule. A date and time, in Unix format and Coordinated Universal Time\
              \ (UTC). The value of <code>LastExecutionDate</code> is accurate to\
              \ milliseconds. For example, the value 1516925490.087 represents Friday,\
              \ January 26, 2018 12:11:30.087 AM."
        AdvancedBackupSettings:
          allOf:
          - $ref: '#/components/schemas/AdvancedBackupSettings'
          - description: Contains a list of <code>BackupOptions</code> for a resource
              type.
      type: object
    BackupPlanVersionsList:
      items:
        $ref: '#/components/schemas/BackupPlansListMember'
      type: array
    BackupPlansList:
      items:
        $ref: '#/components/schemas/BackupPlansListMember'
      type: array
    BackupRuleName:
      pattern: "^[a-zA-Z0-9\\-\\_\\.]{1,50}$"
      type: string
    CronExpression:
      type: string
    WindowMinutes:
      type: integer
    Lifecycle:
      description: "<p>Contains an array of <code>Transition</code> objects specifying\
        \ how long in days before a recovery point transitions to cold storage or\
        \ is deleted.</p> <p>Backups transitioned to cold storage must be stored in\
        \ cold storage for a minimum of 90 days. Therefore, on the console, the “\
        retention” setting must be 90 days greater than the “transition to cold after\
        \ days” setting. The “transition to cold after days” setting cannot be changed\
        \ after a backup has been transitioned to cold.</p> <p>Resource types that\
        \ are able to be transitioned to cold storage are listed in the \"Lifecycle\
        \ to cold storage\" section of the <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html#features-by-resource\"\
        > Feature availability by resource</a> table. Backup ignores this expression\
        \ for other resource types.</p>"
      properties:
        MoveToColdStorageAfterDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Specifies the number of days after creation that a recovery
              point is moved to cold storage.
        DeleteAfterDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Specifies the number of days after creation that a recovery
              point is deleted. Must be greater than 90 days plus <code>MoveToColdStorageAfterDays</code>.
      type: object
    Tags:
      additionalProperties:
        $ref: '#/components/schemas/TagValue'
      type: object
    CopyActions:
      items:
        $ref: '#/components/schemas/CopyAction'
      type: array
    Boolean:
      type: boolean
    BackupRule:
      description: Specifies a scheduled task used to back up a selection of resources.
      properties:
        RuleName:
          allOf:
          - $ref: '#/components/schemas/BackupRuleName'
          - description: A display name for a backup rule. Must contain 1 to 50 alphanumeric
              or '-_.' characters.
        TargetBackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          - description: "The name of a logical container where backups are stored.\
              \ Backup vaults are identified by names that are unique to the account\
              \ used to create them and the Amazon Web Services Region where they\
              \ are created. They consist of lowercase letters, numbers, and hyphens."
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/CronExpression'
          - description: "A cron expression in UTC specifying when Backup initiates\
              \ a backup job. For more information about Amazon Web Services cron\
              \ expressions, see <a href=\"https://docs.aws.amazon.com/AmazonCloudWatch/latest/events/ScheduledEvents.html\"\
              >Schedule Expressions for Rules</a> in the <i>Amazon CloudWatch Events\
              \ User Guide.</i>. Two examples of Amazon Web Services cron expressions\
              \ are <code> 15 * ? * * *</code> (take a backup every hour at 15 minutes\
              \ past the hour) and <code>0 12 * * ? *</code> (take a backup every\
              \ day at 12 noon UTC). For a table of examples, click the preceding\
              \ link and scroll down the page."
        StartWindowMinutes:
          allOf:
          - $ref: '#/components/schemas/WindowMinutes'
          - description: "<p>A value in minutes after a backup is scheduled before\
              \ a job will be canceled if it doesn't start successfully. This value\
              \ is optional. If this value is included, it must be at least 60 minutes\
              \ to avoid errors.</p> <p>During the start window, the backup job status\
              \ remains in <code>CREATED</code> status until it has successfully begun\
              \ or until the start window time has run out. If within the start window\
              \ time Backup receives an error that allows the job to be retried, Backup\
              \ will automatically retry to begin the job at least every 10 minutes\
              \ until the backup successfully begins (the job status changes to <code>RUNNING</code>)\
              \ or until the job status changes to <code>EXPIRED</code> (which is\
              \ expected to occur when the start window time is over).</p>"
        CompletionWindowMinutes:
          allOf:
          - $ref: '#/components/schemas/WindowMinutes'
          - description: A value in minutes after a backup job is successfully started
              before it must be completed or it will be canceled by Backup. This value
              is optional.
        Lifecycle:
          $ref: '#/components/schemas/BackupRule_Lifecycle'
        RecoveryPointTags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: An array of key-value pair strings that are assigned to resources
              that are associated with this rule when restored from backup.
        RuleId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies a rule that is used to schedule the backup
              of a selection of resources.
        CopyActions:
          allOf:
          - $ref: '#/components/schemas/CopyActions'
          - description: "An array of <code>CopyAction</code> objects, which contains\
              \ the details of the copy operation."
        EnableContinuousBackup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether Backup creates continuous backups. True
              causes Backup to create continuous backups capable of point-in-time
              restore (PITR). False (or not specified) causes Backup to create snapshot
              backups.
      required:
      - RuleName
      - TargetBackupVaultName
      type: object
    BackupRuleInput:
      description: Specifies a scheduled task used to back up a selection of resources.
      properties:
        RuleName:
          allOf:
          - $ref: '#/components/schemas/BackupRuleName'
          - description: A display name for a backup rule. Must contain 1 to 50 alphanumeric
              or '-_.' characters.
        TargetBackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          - description: "The name of a logical container where backups are stored.\
              \ Backup vaults are identified by names that are unique to the account\
              \ used to create them and the Amazon Web Services Region where they\
              \ are created. They consist of lowercase letters, numbers, and hyphens."
        ScheduleExpression:
          allOf:
          - $ref: '#/components/schemas/CronExpression'
          - description: A CRON expression in UTC specifying when Backup initiates
              a backup job.
        StartWindowMinutes:
          allOf:
          - $ref: '#/components/schemas/WindowMinutes'
          - description: "<p>A value in minutes after a backup is scheduled before\
              \ a job will be canceled if it doesn't start successfully. This value\
              \ is optional. If this value is included, it must be at least 60 minutes\
              \ to avoid errors.</p> <p>During the start window, the backup job status\
              \ remains in <code>CREATED</code> status until it has successfully begun\
              \ or until the start window time has run out. If within the start window\
              \ time Backup receives an error that allows the job to be retried, Backup\
              \ will automatically retry to begin the job at least every 10 minutes\
              \ until the backup successfully begins (the job status changes to <code>RUNNING</code>)\
              \ or until the job status changes to <code>EXPIRED</code> (which is\
              \ expected to occur when the start window time is over).</p>"
        CompletionWindowMinutes:
          allOf:
          - $ref: '#/components/schemas/WindowMinutes'
          - description: A value in minutes after a backup job is successfully started
              before it must be completed or it will be canceled by Backup. This value
              is optional.
        Lifecycle:
          $ref: '#/components/schemas/BackupRuleInput_Lifecycle'
        RecoveryPointTags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "To help organize your resources, you can assign your own\
              \ metadata to the resources that you create. Each tag is a key-value\
              \ pair."
        CopyActions:
          allOf:
          - $ref: '#/components/schemas/CopyActions'
          - description: "An array of <code>CopyAction</code> objects, which contains\
              \ the details of the copy operation."
        EnableContinuousBackup:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: Specifies whether Backup creates continuous backups. True
              causes Backup to create continuous backups capable of point-in-time
              restore (PITR). False (or not specified) causes Backup to create snapshot
              backups.
      required:
      - RuleName
      - TargetBackupVaultName
      type: object
    BackupSelection:
      description: "<p>Used to specify a set of resources to a backup plan.</p> <p>Specifying\
        \ your desired <code>Conditions</code>, <code>ListOfTags</code>, <code>NotResources</code>,\
        \ and/or <code>Resources</code> is recommended. If none of these are specified,\
        \ Backup will attempt to select all supported and opted-in storage resources,\
        \ which could have unintended cost implications.</p>"
      properties:
        SelectionName:
          allOf:
          - $ref: '#/components/schemas/BackupSelectionName'
          - description: The display name of a resource selection document. Must contain
              1 to 50 alphanumeric or '-_.' characters.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: "The ARN of the IAM role that Backup uses to authenticate\
              \ when backing up the target resource; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>."
        Resources:
          allOf:
          - $ref: '#/components/schemas/ResourceArns'
          - description: "<p>A list of Amazon Resource Names (ARNs) to assign to a\
              \ backup plan. The maximum number of ARNs is 500 without wildcards,\
              \ or 30 ARNs with wildcards.</p> <p>If you need to assign many resources\
              \ to a backup plan, consider a different resource selection strategy,\
              \ such as assigning all resources of a resource type or refining your\
              \ resource selection using tags.</p>"
        ListOfTags:
          allOf:
          - $ref: '#/components/schemas/ListOfTags'
          - description: "<p>A list of conditions that you define to assign resources\
              \ to your backup plans using tags. For example, <code>\"StringEquals\"\
              : { \"ConditionKey\": \"aws:ResourceTag/CreatedByCryo\", \"ConditionValue\"\
              : \"true\" },</code>. Condition operators are case sensitive.</p> <p>\
              \ <code>ListOfTags</code> differs from <code>Conditions</code> as follows:</p>\
              \ <ul> <li> <p>When you specify more than one condition, you assign\
              \ all resources that match AT LEAST ONE condition (using OR logic).</p>\
              \ </li> <li> <p> <code>ListOfTags</code> only supports <code>StringEquals</code>.\
              \ <code>Conditions</code> supports <code>StringEquals</code>, <code>StringLike</code>,\
              \ <code>StringNotEquals</code>, and <code>StringNotLike</code>. </p>\
              \ </li> </ul>"
        NotResources:
          allOf:
          - $ref: '#/components/schemas/ResourceArns'
          - description: "<p>A list of Amazon Resource Names (ARNs) to exclude from\
              \ a backup plan. The maximum number of ARNs is 500 without wildcards,\
              \ or 30 ARNs with wildcards.</p> <p>If you need to exclude many resources\
              \ from a backup plan, consider a different resource selection strategy,\
              \ such as assigning only one or a few resource types or refining your\
              \ resource selection using tags.</p>"
        Conditions:
          $ref: '#/components/schemas/CreateBackupSelection_request_BackupSelection_Conditions'
      required:
      - IamRoleArn
      - SelectionName
      type: object
    BackupSelectionsListMember:
      description: Contains metadata about a <code>BackupSelection</code> object.
      properties:
        SelectionId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies a request to assign a set of resources
              to a backup plan.
        SelectionName:
          allOf:
          - $ref: '#/components/schemas/BackupSelectionName'
          - description: The display name of a resource selection document.
        BackupPlanId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies a backup plan.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a backup plan is created, in Unix format\
              \ and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "<p>A unique string that identifies the request and allows\
              \ failed requests to be retried without the risk of running the operation\
              \ twice. This parameter is optional.</p> <p>If used, this parameter\
              \ must contain 1 to 50 alphanumeric or '-_.' characters.</p>"
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: "Specifies the IAM role Amazon Resource Name (ARN) to create\
              \ the target recovery point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>."
      type: object
    BackupSelectionsList:
      items:
        $ref: '#/components/schemas/BackupSelectionsListMember'
      type: array
    BackupVaultEvents:
      items:
        $ref: '#/components/schemas/BackupVaultEvent'
      type: array
    BackupVaultListMember:
      description: Contains metadata about a backup vault.
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          - description: "The name of a logical container where backups are stored.\
              \ Backup vaults are identified by names that are unique to the account\
              \ used to create them and the Amazon Web Services Region where they\
              \ are created. They consist of lowercase letters, numbers, and hyphens."
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies a\
              \ backup vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>."
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a resource backup is created, in Unix\
              \ format and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "<p>A server-side encryption key you can specify to encrypt\
              \ your backups from services that support full Backup management; for\
              \ example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>.\
              \ If you specify a key, you must specify its ARN, not its alias. If\
              \ you do not specify a key, Backup creates a KMS key for you by default.</p>\
              \ <p>To learn which Backup services support full Backup management and\
              \ how Backup handles encryption for backups from services that do not\
              \ yet support full Backup, see <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/encryption.html\"\
              > Encryption for backups in Backup</a> </p>"
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "<p>A unique string that identifies the request and allows\
              \ failed requests to be retried without the risk of running the operation\
              \ twice. This parameter is optional.</p> <p>If used, this parameter\
              \ must contain 1 to 50 alphanumeric or '-_.' characters.</p>"
        NumberOfRecoveryPoints:
          allOf:
          - $ref: '#/components/schemas/long'
          - description: The number of recovery points that are stored in a backup
              vault.
        Locked:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "A Boolean value that indicates whether Backup Vault Lock\
              \ applies to the selected backup vault. If <code>true</code>, Vault\
              \ Lock prevents delete and update operations on the recovery points\
              \ in the selected vault."
        MinRetentionDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "<p>The Backup Vault Lock setting that specifies the minimum\
              \ retention period that the vault retains its recovery points. If this\
              \ parameter is not specified, Vault Lock does not enforce a minimum\
              \ retention period.</p> <p>If specified, any backup or copy job to the\
              \ vault must have a lifecycle policy with a retention period equal to\
              \ or longer than the minimum retention period. If the job's retention\
              \ period is shorter than that minimum retention period, then the vault\
              \ fails the backup or copy job, and you should either modify your lifecycle\
              \ settings or use a different vault. Recovery points already stored\
              \ in the vault prior to Vault Lock are not affected.</p>"
        MaxRetentionDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "<p>The Backup Vault Lock setting that specifies the maximum\
              \ retention period that the vault retains its recovery points. If this\
              \ parameter is not specified, Vault Lock does not enforce a maximum\
              \ retention period on the recovery points in the vault (allowing indefinite\
              \ storage).</p> <p>If specified, any backup or copy job to the vault\
              \ must have a lifecycle policy with a retention period equal to or shorter\
              \ than the maximum retention period. If the job's retention period is\
              \ longer than that maximum retention period, then the vault fails the\
              \ backup or copy job, and you should either modify your lifecycle settings\
              \ or use a different vault. Recovery points already stored in the vault\
              \ prior to Vault Lock are not affected.</p>"
        LockDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "<p>The date and time when Backup Vault Lock configuration\
              \ becomes immutable, meaning it cannot be changed or deleted.</p> <p>If\
              \ you applied Vault Lock to your vault without specifying a lock date,\
              \ you can change your Vault Lock settings, or delete Vault Lock from\
              \ the vault entirely, at any time.</p> <p>This value is in Unix format,\
              \ Coordinated Universal Time (UTC), and accurate to milliseconds. For\
              \ example, the value 1516925490.087 represents Friday, January 26, 2018\
              \ 12:11:30.087 AM.</p>"
      type: object
    BackupVaultList:
      items:
        $ref: '#/components/schemas/BackupVaultListMember'
      type: array
    long:
      type: integer
    CalculatedLifecycle:
      description: "<p>Contains <code>DeleteAt</code> and <code>MoveToColdStorageAt</code>\
        \ timestamps, which are used to specify a lifecycle for a recovery point.</p>\
        \ <p>The lifecycle defines when a protected resource is transitioned to cold\
        \ storage and when it expires. Backup transitions and expires backups automatically\
        \ according to the lifecycle that you define.</p> <p>Backups transitioned\
        \ to cold storage must be stored in cold storage for a minimum of 90 days.\
        \ Therefore, the “retention” setting must be 90 days greater than the “transition\
        \ to cold after days” setting. The “transition to cold after days” setting\
        \ cannot be changed after a backup has been transitioned to cold.</p> <p>Resource\
        \ types that are able to be transitioned to cold storage are listed in the\
        \ \"Lifecycle to cold storage\" section of the <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html#features-by-resource\"\
        > Feature availability by resource</a> table. Backup ignores this expression\
        \ for other resource types.</p>"
      properties:
        MoveToColdStorageAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: A timestamp that specifies when to transition a recovery
              point to cold storage.
        DeleteAt:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: A timestamp that specifies when to delete a recovery point.
      type: object
    CancelLegalHoldInput:
      properties: {}
      title: CancelLegalHoldInput
      type: object
    ComplianceResourceIdList:
      items:
        $ref: '#/components/schemas/string'
      maxItems: 100
      minItems: 1
      type: array
    ConditionType:
      enum:
      - STRINGEQUALS
      type: string
    ConditionKey:
      type: string
    ConditionValue:
      type: string
    Condition:
      description: "Contains an array of triplets made up of a condition type (such\
        \ as <code>StringEquals</code>), a key, and a value. Used to filter resources\
        \ using their tags and assign them to a backup plan. Case sensitive."
      properties:
        ConditionType:
          allOf:
          - $ref: '#/components/schemas/ConditionType'
          - description: "An operation applied to a key-value pair used to assign\
              \ resources to your backup plan. Condition only supports <code>StringEquals</code>.\
              \ For more flexible assignment options, including <code>StringLike</code>\
              \ and the ability to exclude resources from your backup plan, use <code>Conditions</code>\
              \ (with an \"s\" on the end) for your <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/API_BackupSelection.html\"\
              > <code>BackupSelection</code> </a>."
        ConditionKey:
          allOf:
          - $ref: '#/components/schemas/ConditionKey'
          - description: "The key in a key-value pair. For example, in the tag <code>Department:\
              \ Accounting</code>, <code>Department</code> is the key."
        ConditionValue:
          allOf:
          - $ref: '#/components/schemas/ConditionValue'
          - description: "The value in a key-value pair. For example, in the tag <code>Department:\
              \ Accounting</code>, <code>Accounting</code> is the value."
      required:
      - ConditionKey
      - ConditionType
      - ConditionValue
      type: object
    ConditionParameter:
      description: Includes information about tags you define to assign tagged resources
        to a backup plan.
      properties:
        ConditionKey:
          allOf:
          - $ref: '#/components/schemas/ConditionKey'
          - description: "The key in a key-value pair. For example, in the tag <code>Department:\
              \ Accounting</code>, <code>Department</code> is the key."
        ConditionValue:
          allOf:
          - $ref: '#/components/schemas/ConditionValue'
          - description: "The value in a key-value pair. For example, in the tag <code>Department:\
              \ Accounting</code>, <code>Accounting</code> is the value."
      type: object
    ConditionParameters:
      items:
        $ref: '#/components/schemas/ConditionParameter'
      type: array
    ParameterName:
      type: string
    ParameterValue:
      type: string
    ControlInputParameter:
      description: "A list of parameters for a control. A control can have zero, one,\
        \ or more than one parameter. An example of a control with two parameters\
        \ is: \"backup plan frequency is at least <code>daily</code> and the retention\
        \ period is at least <code>1 year</code>\". The first parameter is <code>daily</code>.\
        \ The second parameter is <code>1 year</code>."
      properties:
        ParameterName:
          allOf:
          - $ref: '#/components/schemas/ParameterName'
          - description: "The name of a parameter, for example, <code>BackupPlanFrequency</code>."
        ParameterValue:
          allOf:
          - $ref: '#/components/schemas/ParameterValue'
          - description: "The value of parameter, for example, <code>hourly</code>."
      type: object
    ControlInputParameters:
      items:
        $ref: '#/components/schemas/ControlInputParameter'
      type: array
    ControlName:
      type: string
    ResourceTypeList:
      items:
        $ref: '#/components/schemas/ARN'
      type: array
    stringMap:
      additionalProperties:
        $ref: '#/components/schemas/string'
      type: object
    ControlScope:
      description: "<p>A framework consists of one or more controls. Each control\
        \ has its own control scope. The control scope can include one or more resource\
        \ types, a combination of a tag key and value, or a combination of one resource\
        \ type and one resource ID. If no scope is specified, evaluations for the\
        \ rule are triggered when any resource in your recording group changes in\
        \ configuration.</p> <note> <p>To set a control scope that includes all of\
        \ a particular resource, leave the <code>ControlScope</code> empty or do not\
        \ pass it when calling <code>CreateFramework</code>.</p> </note>"
      properties:
        ComplianceResourceIds:
          allOf:
          - $ref: '#/components/schemas/ComplianceResourceIdList'
          - description: The ID of the only Amazon Web Services resource that you
              want your control scope to contain.
        ComplianceResourceTypes:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeList'
          - description: "Describes whether the control scope includes one or more\
              \ types of resources, such as <code>EFS</code> or <code>RDS</code>."
        Tags:
          allOf:
          - $ref: '#/components/schemas/stringMap'
          - description: "The tag key-value pair applied to those Amazon Web Services\
              \ resources that you want to trigger an evaluation for a rule. A maximum\
              \ of one key-value pair can be provided. The tag value is optional,\
              \ but it cannot be an empty string. The structure to assign a tag is:\
              \ <code>[{\"Key\":\"string\",\"Value\":\"string\"}]</code>."
      type: object
    CopyAction:
      description: The details of the copy operation.
      properties:
        Lifecycle:
          $ref: '#/components/schemas/Lifecycle'
        DestinationBackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies the\
              \ destination backup vault for the copied backup. For example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>."
      required:
      - DestinationBackupVaultArn
      type: object
    CopyJobState:
      enum:
      - CREATED
      - RUNNING
      - COMPLETED
      - FAILED
      - PARTIAL
      type: string
    CopyJobChildJobsInState:
      additionalProperties:
        $ref: '#/components/schemas/Long'
      type: object
    CopyJob:
      description: Contains detailed information about a copy job.
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The account ID that owns the copy job.
        CopyJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies a copy job.
        SourceBackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies a\
              \ source copy vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>. "
        SourceRecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An ARN that uniquely identifies a source recovery point;\
              \ for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>."
        DestinationBackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies a\
              \ destination copy vault; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>."
        DestinationRecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An ARN that uniquely identifies a destination recovery point;\
              \ for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>."
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "The Amazon Web Services resource to be copied; for example,\
              \ an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational\
              \ Database Service (Amazon RDS) database."
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a copy job is created, in Unix format\
              \ and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a copy job is completed, in Unix format\
              \ and Coordinated Universal Time (UTC). The value of <code>CompletionDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        State:
          allOf:
          - $ref: '#/components/schemas/CopyJobState'
          - description: The current state of a copy job.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A detailed message explaining the status of the job to copy
              a resource.
        BackupSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The size, in bytes, of a copy job."
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: "Specifies the IAM role ARN used to copy the target recovery\
              \ point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>."
        CreatedBy:
          $ref: '#/components/schemas/RecoveryPointCreator'
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: "The type of Amazon Web Services resource to be copied; for\
              \ example, an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon\
              \ Relational Database Service (Amazon RDS) database."
        ParentJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This uniquely identifies a request to Backup to copy a resource.
              The return will be the parent (composite) job ID.
        IsParent:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: This is a boolean value indicating this is a parent (composite)
              copy job.
        CompositeMemberIdentifier:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "This is the identifier of a resource within a composite\
              \ group, such as nested (child) recovery point belonging to a composite\
              \ (parent) stack. The ID is transferred from the <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html#resources-section-structure-syntax\"\
              > logical ID</a> within a stack."
        NumberOfChildJobs:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: This is the number of child (nested) copy jobs.
        ChildJobsInState:
          allOf:
          - $ref: '#/components/schemas/CopyJobChildJobsInState'
          - description: This returns the statistics of the included child (nested)
              copy jobs.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This is the non-unique name of the resource that belongs
              to the specified backup.
      type: object
    CopyJobsList:
      items:
        $ref: '#/components/schemas/CopyJob'
      type: array
    CreateBackupPlanInput:
      properties:
        BackupPlan:
          $ref: '#/components/schemas/CreateBackupPlanInput_BackupPlan'
        BackupPlanTags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "To help organize your resources, you can assign your own\
              \ metadata to the resources that you create. Each tag is a key-value\
              \ pair. The specified tags are assigned to all backups created with\
              \ this plan."
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "<p>Identifies the request and allows failed requests to\
              \ be retried without the risk of running the operation twice. If the\
              \ request includes a <code>CreatorRequestId</code> that matches an existing\
              \ backup plan, that plan is returned. This parameter is optional.</p>\
              \ <p>If used, this parameter must contain 1 to 50 alphanumeric or '-_.'\
              \ characters.</p>"
      required:
      - BackupPlan
      title: CreateBackupPlanInput
      type: object
    CreateBackupSelectionInput:
      properties:
        BackupSelection:
          $ref: '#/components/schemas/GetBackupSelectionOutput_BackupSelection'
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "<p>A unique string that identifies the request and allows\
              \ failed requests to be retried without the risk of running the operation\
              \ twice. This parameter is optional.</p> <p>If used, this parameter\
              \ must contain 1 to 50 alphanumeric or '-_.' characters.</p>"
      required:
      - BackupSelection
      title: CreateBackupSelectionInput
      type: object
    CreateBackupVaultInput:
      properties:
        BackupVaultTags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: Metadata that you can assign to help organize the resources
              that you create. Each tag is a key-value pair.
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "The server-side encryption key that is used to protect your\
              \ backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>."
        CreatorRequestId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "<p>A unique string that identifies the request and allows\
              \ failed requests to be retried without the risk of running the operation\
              \ twice. This parameter is optional.</p> <p>If used, this parameter\
              \ must contain 1 to 50 alphanumeric or '-_.' characters.</p>"
      title: CreateBackupVaultInput
      type: object
    FrameworkName:
      maxLength: 256
      minLength: 1
      pattern: "[a-zA-Z][_a-zA-Z0-9]*"
      type: string
    FrameworkDescription:
      maxLength: 1024
      minLength: 0
      pattern: .*\S.*
      type: string
    FrameworkControls:
      items:
        $ref: '#/components/schemas/FrameworkControl'
      type: array
    CreateFrameworkInput:
      properties:
        FrameworkName:
          allOf:
          - $ref: '#/components/schemas/FrameworkName'
          - description: "The unique name of the framework. The name must be between\
              \ 1 and 256 characters, starting with a letter, and consisting of letters\
              \ (a-z, A-Z), numbers (0-9), and underscores (_)."
        FrameworkDescription:
          allOf:
          - $ref: '#/components/schemas/FrameworkDescription'
          - description: "An optional description of the framework with a maximum\
              \ of 1,024 characters."
        FrameworkControls:
          allOf:
          - $ref: '#/components/schemas/FrameworkControls'
          - description: "A list of the controls that make up the framework. Each\
              \ control in the list has a name, input parameters, and scope."
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A customer-chosen string that you can use to distinguish
              between otherwise identical calls to <code>CreateFrameworkInput</code>.
              Retrying a successful request with the same idempotency token results
              in a success message with no action taken.
        FrameworkTags:
          allOf:
          - $ref: '#/components/schemas/stringMap'
          - description: Metadata that you can assign to help organize the frameworks
              that you create. Each tag is a key-value pair.
      required:
      - FrameworkControls
      - FrameworkName
      title: CreateFrameworkInput
      type: object
    RecoveryPointSelection:
      description: "This specifies criteria to assign a set of resources, such as\
        \ resource types or backup vaults."
      properties:
        VaultNames:
          allOf:
          - $ref: '#/components/schemas/VaultNames'
          - description: These are the names of the vaults in which the selected recovery
              points are contained.
        ResourceIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifiers'
          - description: These are the resources included in the resource selection
              (including type of resources and vaults).
        DateRange:
          $ref: '#/components/schemas/DateRange'
      type: object
    CreateLegalHoldInput:
      properties:
        Title:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This is the string title of the legal hold.
        Description:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This is the string description of the legal hold.
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This is a user-chosen string used to distinguish between
              otherwise identical calls. Retrying a successful request with the same
              idempotency token results in a success message with no action taken.
        RecoveryPointSelection:
          $ref: '#/components/schemas/CreateLegalHoldOutput_RecoveryPointSelection'
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Optional tags to include. A tag is a key-value pair you\
              \ can use to manage, filter, and search for your resources. Allowed\
              \ characters include UTF-8 letters, numbers, spaces, and the following\
              \ characters: + - = . _ : /. "
      required:
      - Description
      - Title
      title: CreateLegalHoldInput
      type: object
    LegalHoldStatus:
      enum:
      - CREATING
      - ACTIVE
      - CANCELING
      - CANCELED
      type: string
    ReportPlanName:
      maxLength: 256
      minLength: 1
      pattern: "[a-zA-Z][_a-zA-Z0-9]*"
      type: string
    ReportPlanDescription:
      maxLength: 1024
      minLength: 0
      pattern: .*\S.*
      type: string
    ReportDeliveryChannel:
      description: "Contains information from your report plan about where to deliver\
        \ your reports, specifically your Amazon S3 bucket name, S3 key prefix, and\
        \ the formats of your reports."
      properties:
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: The unique name of the S3 bucket that receives your reports.
        S3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The prefix for where Backup Audit Manager delivers your\
              \ reports to Amazon S3. The prefix is this part of the following path:\
              \ s3://your-bucket-name/<code>prefix</code>/Backup/us-west-2/year/month/day/report-name.\
              \ If not specified, there is no prefix."
        Formats:
          allOf:
          - $ref: '#/components/schemas/FormatList'
          - description: "A list of the format of your reports: <code>CSV</code>,\
              \ <code>JSON</code>, or both. If not specified, the default format is\
              \ <code>CSV</code>."
      required:
      - S3BucketName
      type: object
    ReportSetting:
      description: Contains detailed information about a report setting.
      properties:
        ReportTemplate:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: <p>Identifies the report template for the report. Reports
              are built using a report template. The report templates are:</p> <p>
              <code>RESOURCE_COMPLIANCE_REPORT | CONTROL_COMPLIANCE_REPORT | BACKUP_JOB_REPORT
              | COPY_JOB_REPORT | RESTORE_JOB_REPORT</code> </p>
        FrameworkArns:
          allOf:
          - $ref: '#/components/schemas/stringList'
          - description: The Amazon Resource Names (ARNs) of the frameworks a report
              covers.
        NumberOfFrameworks:
          allOf:
          - $ref: '#/components/schemas/integer'
          - description: The number of frameworks a report covers.
        Accounts:
          allOf:
          - $ref: '#/components/schemas/stringList'
          - description: These are the accounts to be included in the report.
        OrganizationUnits:
          allOf:
          - $ref: '#/components/schemas/stringList'
          - description: These are the Organizational Units to be included in the
              report.
        Regions:
          allOf:
          - $ref: '#/components/schemas/stringList'
          - description: These are the Regions to be included in the report.
      required:
      - ReportTemplate
      type: object
    CreateReportPlanInput:
      properties:
        ReportPlanName:
          allOf:
          - $ref: '#/components/schemas/ReportPlanName'
          - description: "The unique name of the report plan. The name must be between\
              \ 1 and 256 characters, starting with a letter, and consisting of letters\
              \ (a-z, A-Z), numbers (0-9), and underscores (_)."
        ReportPlanDescription:
          allOf:
          - $ref: '#/components/schemas/ReportPlanDescription'
          - description: "An optional description of the report plan with a maximum\
              \ of 1,024 characters."
        ReportDeliveryChannel:
          $ref: '#/components/schemas/CreateReportPlanInput_ReportDeliveryChannel'
        ReportSetting:
          $ref: '#/components/schemas/CreateReportPlanInput_ReportSetting'
        ReportPlanTags:
          allOf:
          - $ref: '#/components/schemas/stringMap'
          - description: Metadata that you can assign to help organize the report
              plans that you create. Each tag is a key-value pair.
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A customer-chosen string that you can use to distinguish
              between otherwise identical calls to <code>CreateReportPlanInput</code>.
              Retrying a successful request with the same idempotency token results
              in a success message with no action taken.
      required:
      - ReportDeliveryChannel
      - ReportPlanName
      - ReportSetting
      title: CreateReportPlanInput
      type: object
    DeleteBackupPlanInput:
      properties: {}
      title: DeleteBackupPlanInput
      type: object
    DeleteBackupSelectionInput:
      properties: {}
      title: DeleteBackupSelectionInput
      type: object
    DeleteBackupVaultAccessPolicyInput:
      properties: {}
      title: DeleteBackupVaultAccessPolicyInput
      type: object
    DeleteBackupVaultInput:
      properties: {}
      title: DeleteBackupVaultInput
      type: object
    DeleteBackupVaultLockConfigurationInput:
      properties: {}
      title: DeleteBackupVaultLockConfigurationInput
      type: object
    DeleteBackupVaultNotificationsInput:
      properties: {}
      title: DeleteBackupVaultNotificationsInput
      type: object
    DeleteFrameworkInput:
      properties: {}
      title: DeleteFrameworkInput
      type: object
    DeleteRecoveryPointInput:
      properties: {}
      title: DeleteRecoveryPointInput
      type: object
    DeleteReportPlanInput:
      properties: {}
      title: DeleteReportPlanInput
      type: object
    DescribeBackupJobInput:
      properties: {}
      title: DescribeBackupJobInput
      type: object
    DescribeBackupVaultInput:
      properties: {}
      title: DescribeBackupVaultInput
      type: object
    DescribeCopyJobInput:
      properties: {}
      title: DescribeCopyJobInput
      type: object
    DescribeFrameworkInput:
      properties: {}
      title: DescribeFrameworkInput
      type: object
    DescribeGlobalSettingsInput:
      properties: {}
      title: DescribeGlobalSettingsInput
      type: object
    GlobalSettings:
      additionalProperties:
        $ref: '#/components/schemas/GlobalSettingsValue'
      type: object
    DescribeProtectedResourceInput:
      properties: {}
      title: DescribeProtectedResourceInput
      type: object
    DescribeRecoveryPointInput:
      properties: {}
      title: DescribeRecoveryPointInput
      type: object
    RecoveryPointStatus:
      enum:
      - COMPLETED
      - PARTIAL
      - DELETING
      - EXPIRED
      type: string
    StorageClass:
      enum:
      - WARM
      - COLD
      - DELETED
      type: string
    DescribeRegionSettingsInput:
      properties: {}
      title: DescribeRegionSettingsInput
      type: object
    ResourceTypeOptInPreference:
      additionalProperties:
        $ref: '#/components/schemas/IsEnabled'
      type: object
    ResourceTypeManagementPreference:
      additionalProperties:
        $ref: '#/components/schemas/IsEnabled'
      type: object
    ReportJobId:
      type: string
    DescribeReportJobInput:
      properties: {}
      title: DescribeReportJobInput
      type: object
    ReportJob:
      description: Contains detailed information about a report job. A report job
        compiles a report based on a report plan and publishes it to Amazon S3.
      properties:
        ReportJobId:
          allOf:
          - $ref: '#/components/schemas/ReportJobId'
          - description: "The identifier for a report job. A unique, randomly generated,\
              \ Unicode, UTF-8 encoded string that is at most 1,024 bytes long. Report\
              \ job IDs cannot be edited."
        ReportPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: An Amazon Resource Name (ARN) that uniquely identifies a
              resource. The format of the ARN depends on the resource type.
        ReportTemplate:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "<p>Identifies the report template for the report. Reports\
              \ are built using a report template. The report templates are: </p>\
              \ <p> <code>RESOURCE_COMPLIANCE_REPORT | CONTROL_COMPLIANCE_REPORT |\
              \ BACKUP_JOB_REPORT | COPY_JOB_REPORT | RESTORE_JOB_REPORT</code> </p>"
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a report job is created, in Unix\
              \ format and Coordinated Universal Time (UTC). The value of <code>CreationTime</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        CompletionTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a report job is completed, in Unix\
              \ format and Coordinated Universal Time (UTC). The value of <code>CompletionTime</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        Status:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "<p>The status of a report job. The statuses are:</p> <p>\
              \ <code>CREATED | RUNNING | COMPLETED | FAILED</code> </p> <p> <code>COMPLETED</code>\
              \ means that the report is available for your review at your designated\
              \ destination. If the status is <code>FAILED</code>, review the <code>StatusMessage</code>\
              \ for the reason.</p>"
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A message explaining the status of the report job.
        ReportDestination:
          $ref: '#/components/schemas/ReportJob_ReportDestination'
      type: object
    DescribeReportPlanInput:
      properties: {}
      title: DescribeReportPlanInput
      type: object
    ReportPlan:
      description: Contains detailed information about a report plan.
      properties:
        ReportPlanArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: An Amazon Resource Name (ARN) that uniquely identifies a
              resource. The format of the ARN depends on the resource type.
        ReportPlanName:
          allOf:
          - $ref: '#/components/schemas/ReportPlanName'
          - description: "The unique name of the report plan. This name is between\
              \ 1 and 256 characters starting with a letter, and consisting of letters\
              \ (a-z, A-Z), numbers (0-9), and underscores (_)."
        ReportPlanDescription:
          allOf:
          - $ref: '#/components/schemas/ReportPlanDescription'
          - description: "An optional description of the report plan with a maximum\
              \ 1,024 characters."
        ReportSetting:
          $ref: '#/components/schemas/CreateReportPlanInput_ReportSetting'
        ReportDeliveryChannel:
          $ref: '#/components/schemas/ReportPlan_ReportDeliveryChannel'
        DeploymentStatus:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: <p>The deployment status of a report plan. The statuses are:</p>
              <p> <code>CREATE_IN_PROGRESS | UPDATE_IN_PROGRESS | DELETE_IN_PROGRESS
              | COMPLETED</code> </p>
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a report plan is created, in Unix\
              \ format and Coordinated Universal Time (UTC). The value of <code>CreationTime</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        LastAttemptedExecutionTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a report job associated with this\
              \ report plan last attempted to run, in Unix format and Coordinated\
              \ Universal Time (UTC). The value of <code>LastAttemptedExecutionTime</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        LastSuccessfulExecutionTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a report job associated with this\
              \ report plan last successfully ran, in Unix format and Coordinated\
              \ Universal Time (UTC). The value of <code>LastSuccessfulExecutionTime</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
      type: object
    RestoreJobId:
      type: string
    DescribeRestoreJobInput:
      properties: {}
      title: DescribeRestoreJobInput
      type: object
    RestoreJobStatus:
      enum:
      - PENDING
      - RUNNING
      - COMPLETED
      - ABORTED
      - FAILED
      type: string
    DisassociateRecoveryPointFromParentInput:
      properties: {}
      title: DisassociateRecoveryPointFromParentInput
      type: object
    DisassociateRecoveryPointInput:
      properties: {}
      title: DisassociateRecoveryPointInput
      type: object
    ExportBackupPlanTemplateInput:
      properties: {}
      title: ExportBackupPlanTemplateInput
      type: object
    Framework:
      description: "Contains detailed information about a framework. Frameworks contain\
        \ controls, which evaluate and report on your backup events and resources.\
        \ Frameworks generate daily compliance results."
      properties:
        FrameworkName:
          allOf:
          - $ref: '#/components/schemas/FrameworkName'
          - description: "The unique name of a framework. This name is between 1 and\
              \ 256 characters, starting with a letter, and consisting of letters\
              \ (a-z, A-Z), numbers (0-9), and underscores (_)."
        FrameworkArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: An Amazon Resource Name (ARN) that uniquely identifies a
              resource. The format of the ARN depends on the resource type.
        FrameworkDescription:
          allOf:
          - $ref: '#/components/schemas/FrameworkDescription'
          - description: "An optional description of the framework with a maximum\
              \ 1,024 characters."
        NumberOfControls:
          allOf:
          - $ref: '#/components/schemas/integer'
          - description: The number of controls contained by the framework.
        CreationTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time that a framework is created, in ISO 8601\
              \ representation. The value of <code>CreationTime</code> is accurate\
              \ to milliseconds. For example, 2020-07-10T15:00:00.000-08:00 represents\
              \ the 10th of July 2020 at 3:00 PM 8 hours behind UTC."
        DeploymentStatus:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: <p>The deployment status of a framework. The statuses are:</p>
              <p> <code>CREATE_IN_PROGRESS | UPDATE_IN_PROGRESS | DELETE_IN_PROGRESS
              | COMPLETED | FAILED</code> </p>
      type: object
    FrameworkList:
      items:
        $ref: '#/components/schemas/Framework'
      type: array
    GetBackupPlanFromJSONInput:
      properties:
        BackupPlanTemplateJson:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A customer-supplied backup plan document in JSON format.
      required:
      - BackupPlanTemplateJson
      title: GetBackupPlanFromJSONInput
      type: object
    GetBackupPlanFromTemplateInput:
      properties: {}
      title: GetBackupPlanFromTemplateInput
      type: object
    GetBackupPlanInput:
      properties: {}
      title: GetBackupPlanInput
      type: object
    GetBackupSelectionInput:
      properties: {}
      title: GetBackupSelectionInput
      type: object
    GetBackupVaultAccessPolicyInput:
      properties: {}
      title: GetBackupVaultAccessPolicyInput
      type: object
    IAMPolicy:
      type: string
    GetBackupVaultNotificationsInput:
      properties: {}
      title: GetBackupVaultNotificationsInput
      type: object
    GetLegalHoldInput:
      properties: {}
      title: GetLegalHoldInput
      type: object
    GetRecoveryPointRestoreMetadataInput:
      properties: {}
      title: GetRecoveryPointRestoreMetadataInput
      type: object
    Metadata:
      additionalProperties:
        $ref: '#/components/schemas/MetadataValue'
      type: object
    ResourceTypes:
      items:
        $ref: '#/components/schemas/ResourceType'
      type: array
    GlobalSettingsName:
      type: string
    LegalHold:
      description: "A legal hold is an administrative tool that helps prevent backups\
        \ from being deleted while under a hold. While the hold is in place, backups\
        \ under a hold cannot be deleted and lifecycle policies that would alter the\
        \ backup status (such as transition to cold storage) are delayed until the\
        \ legal hold is removed. A backup can have more than one legal hold. Legal\
        \ holds are applied to one or more backups (also known as recovery points).\
        \ These backups can be filtered by resource types and by resource IDs."
      properties:
        Title:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This is the title of a legal hold.
        Status:
          allOf:
          - $ref: '#/components/schemas/LegalHoldStatus'
          - description: "This is the status of the legal hold. Statuses can be <code>ACTIVE</code>,\
              \ <code>CREATING</code>, <code>CANCELED</code>, and <code>CANCELING</code>."
        Description:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This is the description of a legal hold.
        LegalHoldId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: ID of specific legal hold on one or more recovery points.
        LegalHoldArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "This is an Amazon Resource Number (ARN) that uniquely identifies\
              \ the legal hold; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>."
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: This is the time in number format when legal hold was created.
        CancellationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: This is the time in number format when legal hold was cancelled.
      type: object
    LegalHoldsList:
      items:
        $ref: '#/components/schemas/LegalHold'
      type: array
    MaxResults:
      maximum: 1000
      minimum: 1
      type: integer
    ListBackupJobsInput:
      properties: {}
      title: ListBackupJobsInput
      type: object
    ListBackupPlanTemplatesInput:
      properties: {}
      title: ListBackupPlanTemplatesInput
      type: object
    ListBackupPlanVersionsInput:
      properties: {}
      title: ListBackupPlanVersionsInput
      type: object
    ListBackupPlansInput:
      properties: {}
      title: ListBackupPlansInput
      type: object
    ListBackupSelectionsInput:
      properties: {}
      title: ListBackupSelectionsInput
      type: object
    ListBackupVaultsInput:
      properties: {}
      title: ListBackupVaultsInput
      type: object
    ListCopyJobsInput:
      properties: {}
      title: ListCopyJobsInput
      type: object
    MaxFrameworkInputs:
      maximum: 1000
      minimum: 1
      type: integer
    ListFrameworksInput:
      properties: {}
      title: ListFrameworksInput
      type: object
    ListLegalHoldsInput:
      properties: {}
      title: ListLegalHoldsInput
      type: object
    ListProtectedResourcesInput:
      properties: {}
      title: ListProtectedResourcesInput
      type: object
    ProtectedResourcesList:
      items:
        $ref: '#/components/schemas/ProtectedResource'
      type: array
    ListRecoveryPointsByBackupVaultInput:
      properties: {}
      title: ListRecoveryPointsByBackupVaultInput
      type: object
    RecoveryPointByBackupVaultList:
      items:
        $ref: '#/components/schemas/RecoveryPointByBackupVault'
      type: array
    ListRecoveryPointsByLegalHoldInput:
      properties: {}
      title: ListRecoveryPointsByLegalHoldInput
      type: object
    RecoveryPointsList:
      items:
        $ref: '#/components/schemas/RecoveryPointMember'
      type: array
    ListRecoveryPointsByResourceInput:
      properties: {}
      title: ListRecoveryPointsByResourceInput
      type: object
    RecoveryPointByResourceList:
      items:
        $ref: '#/components/schemas/RecoveryPointByResource'
      type: array
    ListReportJobsInput:
      properties: {}
      title: ListReportJobsInput
      type: object
    ReportJobList:
      items:
        $ref: '#/components/schemas/ReportJob'
      type: array
    ListReportPlansInput:
      properties: {}
      title: ListReportPlansInput
      type: object
    ReportPlanList:
      items:
        $ref: '#/components/schemas/ReportPlan'
      type: array
    ListRestoreJobsInput:
      properties: {}
      title: ListRestoreJobsInput
      type: object
    RestoreJobsList:
      items:
        $ref: '#/components/schemas/RestoreJobsListMember'
      type: array
    ListTagsInput:
      properties: {}
      title: ListTagsInput
      type: object
    MetadataKey:
      type: string
    ProtectedResource:
      description: A structure that contains information about a backed-up resource.
      properties:
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: An Amazon Resource Name (ARN) that uniquely identifies a
              resource. The format of the ARN depends on the resource type.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: "The type of Amazon Web Services resource; for example, an\
              \ Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational\
              \ Database Service (Amazon RDS) database. For Windows Volume Shadow\
              \ Copy Service (VSS) backups, the only supported resource type is Amazon\
              \ EC2."
        LastBackupTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a resource was last backed up, in Unix\
              \ format and Coordinated Universal Time (UTC). The value of <code>LastBackupTime</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This is the non-unique name of the resource that belongs
              to the specified backup.
      type: object
    PutBackupVaultAccessPolicyInput:
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/IAMPolicy'
          - description: The backup vault access policy document in JSON format.
      title: PutBackupVaultAccessPolicyInput
      type: object
    PutBackupVaultLockConfigurationInput:
      properties:
        MinRetentionDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "<p>The Backup Vault Lock configuration that specifies the\
              \ minimum retention period that the vault retains its recovery points.\
              \ This setting can be useful if, for example, your organization's policies\
              \ require you to retain certain data for at least seven years (2555\
              \ days).</p> <p>If this parameter is not specified, Vault Lock will\
              \ not enforce a minimum retention period.</p> <p>If this parameter is\
              \ specified, any backup or copy job to the vault must have a lifecycle\
              \ policy with a retention period equal to or longer than the minimum\
              \ retention period. If the job's retention period is shorter than that\
              \ minimum retention period, then the vault fails that backup or copy\
              \ job, and you should either modify your lifecycle settings or use a\
              \ different vault. The shortest minimum retention period you can specify\
              \ is 1 day. Recovery points already saved in the vault prior to Vault\
              \ Lock are not affected.</p>"
        MaxRetentionDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "<p>The Backup Vault Lock configuration that specifies the\
              \ maximum retention period that the vault retains its recovery points.\
              \ This setting can be useful if, for example, your organization's policies\
              \ require you to destroy certain data after retaining it for four years\
              \ (1460 days).</p> <p>If this parameter is not included, Vault Lock\
              \ does not enforce a maximum retention period on the recovery points\
              \ in the vault. If this parameter is included without a value, Vault\
              \ Lock will not enforce a maximum retention period.</p> <p>If this parameter\
              \ is specified, any backup or copy job to the vault must have a lifecycle\
              \ policy with a retention period equal to or shorter than the maximum\
              \ retention period. If the job's retention period is longer than that\
              \ maximum retention period, then the vault fails the backup or copy\
              \ job, and you should either modify your lifecycle settings or use a\
              \ different vault. The longest maximum retention period you can specify\
              \ is 36500 days (approximately 100 years). Recovery points already saved\
              \ in the vault prior to Vault Lock are not affected.</p>"
        ChangeableForDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "<p>The Backup Vault Lock configuration that specifies the\
              \ number of days before the lock date. For example, setting <code>ChangeableForDays</code>\
              \ to 30 on Jan. 1, 2022 at 8pm UTC will set the lock date to Jan. 31,\
              \ 2022 at 8pm UTC.</p> <p>Backup enforces a 72-hour cooling-off period\
              \ before Vault Lock takes effect and becomes immutable. Therefore, you\
              \ must set <code>ChangeableForDays</code> to 3 or greater.</p> <p>Before\
              \ the lock date, you can delete Vault Lock from the vault using <code>DeleteBackupVaultLockConfiguration</code>\
              \ or change the Vault Lock configuration using <code>PutBackupVaultLockConfiguration</code>.\
              \ On and after the lock date, the Vault Lock becomes immutable and cannot\
              \ be changed or deleted.</p> <p>If this parameter is not specified,\
              \ you can delete Vault Lock from the vault using <code>DeleteBackupVaultLockConfiguration</code>\
              \ or change the Vault Lock configuration using <code>PutBackupVaultLockConfiguration</code>\
              \ at any time.</p>"
      title: PutBackupVaultLockConfigurationInput
      type: object
    PutBackupVaultNotificationsInput:
      properties:
        SNSTopicArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "The Amazon Resource Name (ARN) that specifies the topic\
              \ for a backup vault’s events; for example, <code>arn:aws:sns:us-west-2:111122223333:MyVaultTopic</code>."
        BackupVaultEvents:
          allOf:
          - $ref: '#/components/schemas/BackupVaultEvents'
          - description: "<p>An array of events that indicate the status of jobs to\
              \ back up resources to the backup vault.</p> <p>For common use cases\
              \ and code samples, see <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/sns-notifications.html\"\
              >Using Amazon SNS to track Backup events</a>.</p> <p>The following events\
              \ are supported:</p> <ul> <li> <p> <code>BACKUP_JOB_STARTED</code> |\
              \ <code>BACKUP_JOB_COMPLETED</code> </p> </li> <li> <p> <code>COPY_JOB_STARTED</code>\
              \ | <code>COPY_JOB_SUCCESSFUL</code> | <code>COPY_JOB_FAILED</code>\
              \ </p> </li> <li> <p> <code>RESTORE_JOB_STARTED</code> | <code>RESTORE_JOB_COMPLETED</code>\
              \ | <code>RECOVERY_POINT_MODIFIED</code> </p> </li> <li> <p> <code>S3_BACKUP_OBJECT_FAILED</code>\
              \ | <code>S3_RESTORE_OBJECT_FAILED</code> </p> </li> </ul> <note> <p>The\
              \ list below shows items that are deprecated events (for reference)\
              \ and are no longer in use. They are no longer supported and will not\
              \ return statuses or notifications. Refer to the list above for current\
              \ supported events.</p> </note>"
      required:
      - BackupVaultEvents
      - SNSTopicArn
      title: PutBackupVaultNotificationsInput
      type: object
    RecoveryPointByBackupVault:
      description: Contains detailed information about the recovery points stored
        in a backup vault.
      properties:
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies a\
              \ recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>."
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          - description: "The name of a logical container where backups are stored.\
              \ Backup vaults are identified by names that are unique to the account\
              \ used to create them and the Amazon Web Services Region where they\
              \ are created. They consist of lowercase letters, numbers, and hyphens."
        BackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An ARN that uniquely identifies a backup vault; for example,\
              \ <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>."
        SourceBackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: The backup vault where the recovery point was originally
              copied from. If the recovery point is restored to the same account this
              value will be <code>null</code>.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: An ARN that uniquely identifies a resource. The format of
              the ARN depends on the resource type.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: "The type of Amazon Web Services resource saved as a recovery\
              \ point; for example, an Amazon Elastic Block Store (Amazon EBS) volume\
              \ or an Amazon Relational Database Service (Amazon RDS) database. For\
              \ Windows Volume Shadow Copy Service (VSS) backups, the only supported\
              \ resource type is Amazon EC2."
        CreatedBy:
          $ref: '#/components/schemas/RecoveryPointByBackupVault_CreatedBy'
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: "Specifies the IAM role ARN used to create the target recovery\
              \ point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>."
        Status:
          allOf:
          - $ref: '#/components/schemas/RecoveryPointStatus'
          - description: A status code specifying the state of the recovery point.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A message explaining the reason of the recovery point deletion
              failure.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a recovery point is created, in Unix format\
              \ and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a job to restore a recovery point is completed,\
              \ in Unix format and Coordinated Universal Time (UTC). The value of\
              \ <code>CompletionDate</code> is accurate to milliseconds. For example,\
              \ the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087\
              \ AM."
        BackupSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The size, in bytes, of a backup."
        CalculatedLifecycle:
          $ref: '#/components/schemas/DescribeRecoveryPointOutput_CalculatedLifecycle'
        Lifecycle:
          $ref: '#/components/schemas/BackupRule_Lifecycle'
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "The server-side encryption key that is used to protect your\
              \ backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>."
        IsEncrypted:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: "A Boolean value that is returned as <code>TRUE</code> if\
              \ the specified recovery point is encrypted, or <code>FALSE</code> if\
              \ the recovery point is not encrypted."
        LastRestoreTime:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a recovery point was last restored, in\
              \ Unix format and Coordinated Universal Time (UTC). The value of <code>LastRestoreTime</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        ParentRecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: This is the Amazon Resource Name (ARN) of the parent (composite)
              recovery point.
        CompositeMemberIdentifier:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "This is the identifier of a resource within a composite\
              \ group, such as nested (child) recovery point belonging to a composite\
              \ (parent) stack. The ID is transferred from the <a href=\"https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/resources-section-structure.html#resources-section-structure-syntax\"\
              > logical ID</a> within a stack."
        IsParent:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: This is a boolean value indicating this is a parent (composite)
              recovery point.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This is the non-unique name of the resource that belongs
              to the specified backup.
      type: object
    RecoveryPointByResource:
      description: Contains detailed information about a saved recovery point.
      properties:
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies a\
              \ recovery point; for example, <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>."
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a recovery point is created, in Unix format\
              \ and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        Status:
          allOf:
          - $ref: '#/components/schemas/RecoveryPointStatus'
          - description: A status code specifying the state of the recovery point.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A message explaining the reason of the recovery point deletion
              failure.
        EncryptionKeyArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "The server-side encryption key that is used to protect your\
              \ backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>."
        BackupSizeBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The size, in bytes, of a backup."
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          - description: "The name of a logical container where backups are stored.\
              \ Backup vaults are identified by names that are unique to the account\
              \ used to create them and the Amazon Web Services Region where they\
              \ are created. They consist of lowercase letters, numbers, and hyphens."
        IsParent:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: This is a boolean value indicating this is a parent (composite)
              recovery point.
        ParentRecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: This is the Amazon Resource Name (ARN) of the parent (composite)
              recovery point.
        ResourceName:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: This is the non-unique name of the resource that belongs
              to the specified backup.
      type: object
    RecoveryPointMember:
      description: "This is a recovery point which is a child (nested) recovery point\
        \ of a parent (composite) recovery point. These recovery points can be disassociated\
        \ from their parent (composite) recovery point, in which case they will no\
        \ longer be a member."
      properties:
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: This is the Amazon Resource Name (ARN) of the parent (composite)
              recovery point.
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: This is the Amazon Resource Name (ARN) that uniquely identifies
              a saved resource.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: This is the Amazon Web Services resource type that is saved
              as a recovery point.
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          - description: This is the name of the backup vault (the logical container
              in which backups are stored).
      type: object
    ReportDestination:
      description: Contains information from your report job about your report destination.
      properties:
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: The unique name of the Amazon S3 bucket that receives your
              reports.
        S3Keys:
          allOf:
          - $ref: '#/components/schemas/stringList'
          - description: The object key that uniquely identifies your reports in your
              S3 bucket.
      type: object
    RestoreJobsListMember:
      description: Contains metadata about a restore job.
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: The account ID that owns the restore job.
        RestoreJobId:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Uniquely identifies the job that restores a recovery point.
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An ARN that uniquely identifies a recovery point; for example,\
              \ <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>."
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a restore job is created, in Unix format\
              \ and Coordinated Universal Time (UTC). The value of <code>CreationDate</code>\
              \ is accurate to milliseconds. For example, the value 1516925490.087\
              \ represents Friday, January 26, 2018 12:11:30.087 AM."
        CompletionDate:
          allOf:
          - $ref: '#/components/schemas/timestamp'
          - description: "The date and time a job to restore a recovery point is completed,\
              \ in Unix format and Coordinated Universal Time (UTC). The value of\
              \ <code>CompletionDate</code> is accurate to milliseconds. For example,\
              \ the value 1516925490.087 represents Friday, January 26, 2018 12:11:30.087\
              \ AM."
        Status:
          allOf:
          - $ref: '#/components/schemas/RestoreJobStatus'
          - description: A status code specifying the state of the job initiated by
              Backup to restore a recovery point.
        StatusMessage:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A detailed message explaining the status of the job to restore
              a recovery point.
        PercentDone:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: Contains an estimated percentage complete of a job at the
              time the job status was queried.
        BackupSizeInBytes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: "The size, in bytes, of the restored resource."
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: "Specifies the IAM role ARN used to create the target recovery\
              \ point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>."
        ExpectedCompletionTimeMinutes:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The amount of time in minutes that a job restoring a recovery
              point is expected to take.
        CreatedResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: An Amazon Resource Name (ARN) that uniquely identifies a
              resource. The format of the ARN depends on the resource type.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: "The resource type of the listed restore jobs; for example,\
              \ an Amazon Elastic Block Store (Amazon EBS) volume or an Amazon Relational\
              \ Database Service (Amazon RDS) database. For Windows Volume Shadow\
              \ Copy Service (VSS) backups, the only supported resource type is Amazon\
              \ EC2."
      type: object
    StartBackupJobInput:
      properties:
        BackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          - description: "The name of a logical container where backups are stored.\
              \ Backup vaults are identified by names that are unique to the account\
              \ used to create them and the Amazon Web Services Region where they\
              \ are created. They consist of lowercase letters, numbers, and hyphens."
        ResourceArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: An Amazon Resource Name (ARN) that uniquely identifies a
              resource. The format of the ARN depends on the resource type.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: "Specifies the IAM role ARN used to create the target recovery\
              \ point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>."
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A customer-chosen string that you can use to distinguish
              between otherwise identical calls to <code>StartBackupJob</code>. Retrying
              a successful request with the same idempotency token results in a success
              message with no action taken.
        StartWindowMinutes:
          allOf:
          - $ref: '#/components/schemas/WindowMinutes'
          - description: "<p>A value in minutes after a backup is scheduled before\
              \ a job will be canceled if it doesn't start successfully. This value\
              \ is optional, and the default is 8 hours. If this value is included,\
              \ it must be at least 60 minutes to avoid errors.</p> <p>During the\
              \ start window, the backup job status remains in <code>CREATED</code>\
              \ status until it has successfully begun or until the start window time\
              \ has run out. If within the start window time Backup receives an error\
              \ that allows the job to be retried, Backup will automatically retry\
              \ to begin the job at least every 10 minutes until the backup successfully\
              \ begins (the job status changes to <code>RUNNING</code>) or until the\
              \ job status changes to <code>EXPIRED</code> (which is expected to occur\
              \ when the start window time is over).</p>"
        CompleteWindowMinutes:
          allOf:
          - $ref: '#/components/schemas/WindowMinutes'
          - description: "A value in minutes during which a successfully started backup\
              \ must complete, or else Backup will cancel the job. This value is optional.\
              \ This value begins counting down from when the backup was scheduled.\
              \ It does not add additional time for <code>StartWindowMinutes</code>,\
              \ or if the backup started later than scheduled."
        Lifecycle:
          $ref: '#/components/schemas/StartBackupJobInput_Lifecycle'
        RecoveryPointTags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "To help organize your resources, you can assign your own\
              \ metadata to the resources that you create. Each tag is a key-value\
              \ pair."
        BackupOptions:
          allOf:
          - $ref: '#/components/schemas/BackupOptions'
          - description: "<p>Specifies the backup option for a selected resource.\
              \ This option is only available for Windows Volume Shadow Copy Service\
              \ (VSS) backup jobs.</p> <p>Valid values: Set to <code>\"WindowsVSS\"\
              :\"enabled\"</code> to enable the <code>WindowsVSS</code> backup option\
              \ and create a Windows VSS backup. Set to <code>\"WindowsVSS\"\"disabled\"\
              </code> to create a regular backup. The <code>WindowsVSS</code> option\
              \ is not enabled by default.</p>"
      required:
      - BackupVaultName
      - IamRoleArn
      - ResourceArn
      title: StartBackupJobInput
      type: object
    StartCopyJobInput:
      properties:
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An ARN that uniquely identifies a recovery point to use\
              \ for the copy job; for example, arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45. "
        SourceBackupVaultName:
          allOf:
          - $ref: '#/components/schemas/BackupVaultName'
          - description: "The name of a logical source container where backups are\
              \ stored. Backup vaults are identified by names that are unique to the\
              \ account used to create them and the Amazon Web Services Region where\
              \ they are created. They consist of lowercase letters, numbers, and\
              \ hyphens."
        DestinationBackupVaultArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An Amazon Resource Name (ARN) that uniquely identifies a\
              \ destination backup vault to copy to; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>."
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: "Specifies the IAM role ARN used to copy the target recovery\
              \ point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>."
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A customer-chosen string that you can use to distinguish
              between otherwise identical calls to <code>StartCopyJob</code>. Retrying
              a successful request with the same idempotency token results in a success
              message with no action taken.
        Lifecycle:
          $ref: '#/components/schemas/Lifecycle'
      required:
      - DestinationBackupVaultArn
      - IamRoleArn
      - RecoveryPointArn
      - SourceBackupVaultName
      title: StartCopyJobInput
      type: object
    StartReportJobInput:
      properties:
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A customer-chosen string that you can use to distinguish
              between otherwise identical calls to <code>StartReportJobInput</code>.
              Retrying a successful request with the same idempotency token results
              in a success message with no action taken.
      title: StartReportJobInput
      type: object
    StartRestoreJobInput:
      properties:
        RecoveryPointArn:
          allOf:
          - $ref: '#/components/schemas/ARN'
          - description: "An ARN that uniquely identifies a recovery point; for example,\
              \ <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>."
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: "<p>A set of metadata key-value pairs. Contains information,\
              \ such as a resource name, required to restore a recovery point.</p>\
              \ <p> You can get configuration metadata about a resource at the time\
              \ it was backed up by calling <code>GetRecoveryPointRestoreMetadata</code>.\
              \ However, values in addition to those provided by <code>GetRecoveryPointRestoreMetadata</code>\
              \ might be required to restore a resource. For example, you might need\
              \ to provide a new resource name if the original already exists.</p>\
              \ <p>You need to specify specific metadata to restore an Amazon Elastic\
              \ File System (Amazon EFS) instance:</p> <ul> <li> <p> <code>file-system-id</code>:\
              \ The ID of the Amazon EFS file system that is backed up by Backup.\
              \ Returned in <code>GetRecoveryPointRestoreMetadata</code>.</p> </li>\
              \ <li> <p> <code>Encrypted</code>: A Boolean value that, if true, specifies\
              \ that the file system is encrypted. If <code>KmsKeyId</code> is specified,\
              \ <code>Encrypted</code> must be set to <code>true</code>.</p> </li>\
              \ <li> <p> <code>KmsKeyId</code>: Specifies the Amazon Web Services\
              \ KMS key that is used to encrypt the restored file system. You can\
              \ specify a key from another Amazon Web Services account provided that\
              \ key it is properly shared with your account via Amazon Web Services\
              \ KMS.</p> </li> <li> <p> <code>PerformanceMode</code>: Specifies the\
              \ throughput mode of the file system.</p> </li> <li> <p> <code>CreationToken</code>:\
              \ A user-supplied value that ensures the uniqueness (idempotency) of\
              \ the request.</p> </li> <li> <p> <code>newFileSystem</code>: A Boolean\
              \ value that, if true, specifies that the recovery point is restored\
              \ to a new Amazon EFS file system.</p> </li> <li> <p> <code>ItemsToRestore</code>:\
              \ An array of one to five strings where each string is a file path.\
              \ Use <code>ItemsToRestore</code> to restore specific files or directories\
              \ rather than the entire file system. This parameter is optional. For\
              \ example, <code>\"itemsToRestore\":\"[\\\"/my.test\\\"]\"</code>.</p>\
              \ </li> </ul>"
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: "The Amazon Resource Name (ARN) of the IAM role that Backup\
              \ uses to create the target resource; for example: <code>arn:aws:iam::123456789012:role/S3Access</code>."
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A customer-chosen string that you can use to distinguish
              between otherwise identical calls to <code>StartRestoreJob</code>. Retrying
              a successful request with the same idempotency token results in a success
              message with no action taken.
        ResourceType:
          allOf:
          - $ref: '#/components/schemas/ResourceType'
          - description: <p>Starts a job to restore a recovery point for one of the
              following resources:</p> <ul> <li> <p> <code>Aurora</code> for Amazon
              Aurora</p> </li> <li> <p> <code>DocumentDB</code> for Amazon DocumentDB
              (with MongoDB compatibility)</p> </li> <li> <p> <code>CloudFormation</code>
              for CloudFormation</p> </li> <li> <p> <code>DynamoDB</code> for Amazon
              DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon Elastic Block
              Store</p> </li> <li> <p> <code>EC2</code> for Amazon Elastic Compute
              Cloud</p> </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p>
              </li> <li> <p> <code>FSx</code> for Amazon FSx</p> </li> <li> <p> <code>Neptune</code>
              for Amazon Neptune</p> </li> <li> <p> <code>RDS</code> for Amazon Relational
              Database Service</p> </li> <li> <p> <code>Redshift</code> for Amazon
              Redshift</p> </li> <li> <p> <code>Storage Gateway</code> for Storage
              Gateway</p> </li> <li> <p> <code>S3</code> for Amazon S3</p> </li> <li>
              <p> <code>Timestream</code> for Amazon Timestream</p> </li> <li> <p>
              <code>VirtualMachine</code> for virtual machines</p> </li> </ul>
        CopySourceTagsToRestoredResource:
          allOf:
          - $ref: '#/components/schemas/boolean'
          - description: "<p>This is an optional parameter. If this equals <code>True</code>,\
              \ tags included in the backup will be copied to the restored resource.</p>\
              \ <p>This can only be applied to backups created through Backup.</p>"
      required:
      - Metadata
      - RecoveryPointArn
      title: StartRestoreJobInput
      type: object
    StopBackupJobInput:
      properties: {}
      title: StopBackupJobInput
      type: object
    TagKey:
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/string'
      type: array
    TagResourceInput:
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: "Key-value pairs that are used to help organize your resources.\
              \ You can assign your own metadata to the resources you create. For\
              \ clarity, this is the structure to assign tags: <code>[{\"Key\":\"\
              string\",\"Value\":\"string\"}]</code>."
      required:
      - Tags
      title: TagResourceInput
      type: object
    UntagResourceInput:
      properties:
        TagKeyList:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: A list of keys to identify which key-value tags to remove
              from a resource.
      required:
      - TagKeyList
      title: UntagResourceInput
      type: object
    UpdateBackupPlanInput:
      properties:
        BackupPlan:
          $ref: '#/components/schemas/CreateBackupPlanInput_BackupPlan'
      required:
      - BackupPlan
      title: UpdateBackupPlanInput
      type: object
    UpdateFrameworkInput:
      properties:
        FrameworkDescription:
          allOf:
          - $ref: '#/components/schemas/FrameworkDescription'
          - description: "An optional description of the framework with a maximum\
              \ 1,024 characters."
        FrameworkControls:
          allOf:
          - $ref: '#/components/schemas/FrameworkControls'
          - description: "A list of the controls that make up the framework. Each\
              \ control in the list has a name, input parameters, and scope."
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A customer-chosen string that you can use to distinguish
              between otherwise identical calls to <code>UpdateFrameworkInput</code>.
              Retrying a successful request with the same idempotency token results
              in a success message with no action taken.
      title: UpdateFrameworkInput
      type: object
    UpdateGlobalSettingsInput:
      properties:
        GlobalSettings:
          allOf:
          - $ref: '#/components/schemas/GlobalSettings'
          - description: "A value for <code>isCrossAccountBackupEnabled</code> and\
              \ a Region. Example: <code>update-global-settings --global-settings\
              \ isCrossAccountBackupEnabled=false --region us-west-2</code>."
      title: UpdateGlobalSettingsInput
      type: object
    UpdateRecoveryPointLifecycleInput:
      properties:
        Lifecycle:
          $ref: '#/components/schemas/UpdateRecoveryPointLifecycleInput_Lifecycle'
      title: UpdateRecoveryPointLifecycleInput
      type: object
    UpdateRegionSettingsInput:
      properties:
        ResourceTypeOptInPreference:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeOptInPreference'
          - description: Updates the list of services along with the opt-in preferences
              for the Region.
        ResourceTypeManagementPreference:
          allOf:
          - $ref: '#/components/schemas/ResourceTypeManagementPreference'
          - description: "Enables or disables full Backup management of backups for\
              \ a resource type. To enable full Backup management for DynamoDB along\
              \ with <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/advanced-ddb-backup.html\"\
              > Backup's advanced DynamoDB backup features</a>, follow the procedure\
              \ to <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/advanced-ddb-backup.html#advanced-ddb-backup-enable-cli\"\
              > enable advanced DynamoDB backup programmatically</a>."
      title: UpdateRegionSettingsInput
      type: object
    UpdateReportPlanInput:
      properties:
        ReportPlanDescription:
          allOf:
          - $ref: '#/components/schemas/ReportPlanDescription'
          - description: "An optional description of the report plan with a maximum\
              \ 1,024 characters."
        ReportDeliveryChannel:
          $ref: '#/components/schemas/UpdateReportPlanInput_ReportDeliveryChannel'
        ReportSetting:
          $ref: '#/components/schemas/CreateReportPlanInput_ReportSetting'
        IdempotencyToken:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: A customer-chosen string that you can use to distinguish
              between otherwise identical calls to <code>UpdateReportPlanInput</code>.
              Retrying a successful request with the same idempotency token results
              in a success message with no action taken.
      title: UpdateReportPlanInput
      type: object
    CreateBackupPlan_request_BackupPlan:
      description: "Contains an optional backup plan display name and an array of\
        \ <code>BackupRule</code> objects, each of which specifies a backup rule.\
        \ Each rule in a backup plan is a separate scheduled task. "
      properties:
        BackupPlanName:
          allOf:
          - $ref: '#/components/schemas/BackupPlanName'
          - description: The display name of a backup plan. Must contain 1 to 50 alphanumeric
              or '-_.' characters.
        Rules:
          allOf:
          - $ref: '#/components/schemas/BackupRulesInput'
          - description: "An array of <code>BackupRule</code> objects, each of which\
              \ specifies a scheduled task that is used to back up a selection of\
              \ resources."
        AdvancedBackupSettings:
          allOf:
          - $ref: '#/components/schemas/AdvancedBackupSettings'
          - description: Specifies a list of <code>BackupOptions</code> for each resource
              type. These settings are only available for Windows Volume Shadow Copy
              Service (VSS) backup jobs.
      type: object
    CreateBackupPlan_request:
      properties:
        BackupPlan:
          $ref: '#/components/schemas/CreateBackupPlan_request_BackupPlan'
        BackupPlanTags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "To help organize your resources, you can assign your own metadata\
            \ to the resources that you create. Each tag is a key-value pair. The\
            \ specified tags are assigned to all backups created with this plan."
          type: object
        CreatorRequestId:
          description: "<p>Identifies the request and allows failed requests to be\
            \ retried without the risk of running the operation twice. If the request\
            \ includes a <code>CreatorRequestId</code> that matches an existing backup\
            \ plan, that plan is returned. This parameter is optional.</p> <p>If used,\
            \ this parameter must contain 1 to 50 alphanumeric or '-_.' characters.</p>"
          type: string
      required:
      - BackupPlan
      type: object
    CreateBackupSelection_request_BackupSelection_Conditions:
      allOf:
      - $ref: '#/components/schemas/Conditions'
      - description: "<p>A list of conditions that you define to assign resources\
          \ to your backup plans using tags. For example, <code>\"StringEquals\":\
          \ { \"ConditionKey\": \"aws:ResourceTag/CreatedByCryo\", \"ConditionValue\"\
          : \"true\" },</code>. Condition operators are case sensitive.</p> <p> <code>Conditions</code>\
          \ differs from <code>ListOfTags</code> as follows:</p> <ul> <li> <p>When\
          \ you specify more than one condition, you only assign the resources that\
          \ match ALL conditions (using AND logic).</p> </li> <li> <p> <code>Conditions</code>\
          \ supports <code>StringEquals</code>, <code>StringLike</code>, <code>StringNotEquals</code>,\
          \ and <code>StringNotLike</code>. <code>ListOfTags</code> only supports\
          \ <code>StringEquals</code>.</p> </li> </ul>"
      example:
        StringEquals: ""
        StringNotLike: ""
        StringLike: ""
        StringNotEquals: ""
    CreateBackupSelection_request_BackupSelection:
      description: "<p>Used to specify a set of resources to a backup plan.</p> <p>Specifying\
        \ your desired <code>Conditions</code>, <code>ListOfTags</code>, <code>NotResources</code>,\
        \ and/or <code>Resources</code> is recommended. If none of these are specified,\
        \ Backup will attempt to select all supported and opted-in storage resources,\
        \ which could have unintended cost implications.</p>"
      properties:
        SelectionName:
          allOf:
          - $ref: '#/components/schemas/BackupSelectionName'
          - description: The display name of a resource selection document. Must contain
              1 to 50 alphanumeric or '-_.' characters.
        IamRoleArn:
          allOf:
          - $ref: '#/components/schemas/IAMRoleArn'
          - description: "The ARN of the IAM role that Backup uses to authenticate\
              \ when backing up the target resource; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>."
        Resources:
          allOf:
          - $ref: '#/components/schemas/ResourceArns'
          - description: "<p>A list of Amazon Resource Names (ARNs) to assign to a\
              \ backup plan. The maximum number of ARNs is 500 without wildcards,\
              \ or 30 ARNs with wildcards.</p> <p>If you need to assign many resources\
              \ to a backup plan, consider a different resource selection strategy,\
              \ such as assigning all resources of a resource type or refining your\
              \ resource selection using tags.</p>"
        ListOfTags:
          allOf:
          - $ref: '#/components/schemas/ListOfTags'
          - description: "<p>A list of conditions that you define to assign resources\
              \ to your backup plans using tags. For example, <code>\"StringEquals\"\
              : { \"ConditionKey\": \"aws:ResourceTag/CreatedByCryo\", \"ConditionValue\"\
              : \"true\" },</code>. Condition operators are case sensitive.</p> <p>\
              \ <code>ListOfTags</code> differs from <code>Conditions</code> as follows:</p>\
              \ <ul> <li> <p>When you specify more than one condition, you assign\
              \ all resources that match AT LEAST ONE condition (using OR logic).</p>\
              \ </li> <li> <p> <code>ListOfTags</code> only supports <code>StringEquals</code>.\
              \ <code>Conditions</code> supports <code>StringEquals</code>, <code>StringLike</code>,\
              \ <code>StringNotEquals</code>, and <code>StringNotLike</code>. </p>\
              \ </li> </ul>"
        NotResources:
          allOf:
          - $ref: '#/components/schemas/ResourceArns'
          - description: "<p>A list of Amazon Resource Names (ARNs) to exclude from\
              \ a backup plan. The maximum number of ARNs is 500 without wildcards,\
              \ or 30 ARNs with wildcards.</p> <p>If you need to exclude many resources\
              \ from a backup plan, consider a different resource selection strategy,\
              \ such as assigning only one or a few resource types or refining your\
              \ resource selection using tags.</p>"
        Conditions:
          $ref: '#/components/schemas/CreateBackupSelection_request_BackupSelection_Conditions'
      type: object
    CreateBackupSelection_request:
      properties:
        BackupSelection:
          $ref: '#/components/schemas/CreateBackupSelection_request_BackupSelection'
        CreatorRequestId:
          description: "<p>A unique string that identifies the request and allows\
            \ failed requests to be retried without the risk of running the operation\
            \ twice. This parameter is optional.</p> <p>If used, this parameter must\
            \ contain 1 to 50 alphanumeric or '-_.' characters.</p>"
          type: string
      required:
      - BackupSelection
      type: object
    CreateBackupVault_request:
      properties:
        BackupVaultTags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: Metadata that you can assign to help organize the resources
            that you create. Each tag is a key-value pair.
          type: object
        EncryptionKeyArn:
          description: "The server-side encryption key that is used to protect your\
            \ backups; for example, <code>arn:aws:kms:us-west-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>."
          type: string
        CreatorRequestId:
          description: "<p>A unique string that identifies the request and allows\
            \ failed requests to be retried without the risk of running the operation\
            \ twice. This parameter is optional.</p> <p>If used, this parameter must\
            \ contain 1 to 50 alphanumeric or '-_.' characters.</p>"
          type: string
      type: object
    CreateFramework_request:
      properties:
        FrameworkName:
          description: "The unique name of the framework. The name must be between\
            \ 1 and 256 characters, starting with a letter, and consisting of letters\
            \ (a-z, A-Z), numbers (0-9), and underscores (_)."
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z][_a-zA-Z0-9]*"
          type: string
        FrameworkDescription:
          description: "An optional description of the framework with a maximum of\
            \ 1,024 characters."
          maxLength: 1024
          minLength: 0
          pattern: .*\S.*
          type: string
        FrameworkControls:
          description: "A list of the controls that make up the framework. Each control\
            \ in the list has a name, input parameters, and scope."
          items:
            $ref: '#/components/schemas/FrameworkControl'
          type: array
        IdempotencyToken:
          description: A customer-chosen string that you can use to distinguish between
            otherwise identical calls to <code>CreateFrameworkInput</code>. Retrying
            a successful request with the same idempotency token results in a success
            message with no action taken.
          type: string
        FrameworkTags:
          additionalProperties:
            $ref: '#/components/schemas/string'
          description: Metadata that you can assign to help organize the frameworks
            that you create. Each tag is a key-value pair.
          type: object
      required:
      - FrameworkControls
      - FrameworkName
      type: object
    CreateLegalHold_request_RecoveryPointSelection:
      description: "This specifies criteria to assign a set of resources, such as\
        \ resource types or backup vaults."
      properties:
        VaultNames:
          allOf:
          - $ref: '#/components/schemas/VaultNames'
          - description: These are the names of the vaults in which the selected recovery
              points are contained.
        ResourceIdentifiers:
          allOf:
          - $ref: '#/components/schemas/ResourceIdentifiers'
          - description: These are the resources included in the resource selection
              (including type of resources and vaults).
        DateRange:
          $ref: '#/components/schemas/DateRange'
      type: object
    CreateLegalHold_request:
      properties:
        Title:
          description: This is the string title of the legal hold.
          type: string
        Description:
          description: This is the string description of the legal hold.
          type: string
        IdempotencyToken:
          description: This is a user-chosen string used to distinguish between otherwise
            identical calls. Retrying a successful request with the same idempotency
            token results in a success message with no action taken.
          type: string
        RecoveryPointSelection:
          $ref: '#/components/schemas/CreateLegalHold_request_RecoveryPointSelection'
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "Optional tags to include. A tag is a key-value pair you can\
            \ use to manage, filter, and search for your resources. Allowed characters\
            \ include UTF-8 letters, numbers, spaces, and the following characters:\
            \ + - = . _ : /. "
          type: object
      required:
      - Description
      - Title
      type: object
    CreateReportPlan_request_ReportDeliveryChannel:
      description: "Contains information from your report plan about where to deliver\
        \ your reports, specifically your Amazon S3 bucket name, S3 key prefix, and\
        \ the formats of your reports."
      properties:
        S3BucketName:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: The unique name of the S3 bucket that receives your reports.
        S3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: "The prefix for where Backup Audit Manager delivers your\
              \ reports to Amazon S3. The prefix is this part of the following path:\
              \ s3://your-bucket-name/<code>prefix</code>/Backup/us-west-2/year/month/day/report-name.\
              \ If not specified, there is no prefix."
        Formats:
          allOf:
          - $ref: '#/components/schemas/FormatList'
          - description: "A list of the format of your reports: <code>CSV</code>,\
              \ <code>JSON</code>, or both. If not specified, the default format is\
              \ <code>CSV</code>."
      type: object
    CreateReportPlan_request_ReportSetting:
      description: Contains detailed information about a report setting.
      properties:
        ReportTemplate:
          allOf:
          - $ref: '#/components/schemas/string'
          - description: <p>Identifies the report template for the report. Reports
              are built using a report template. The report templates are:</p> <p>
              <code>RESOURCE_COMPLIANCE_REPORT | CONTROL_COMPLIANCE_REPORT | BACKUP_JOB_REPORT
              | COPY_JOB_REPORT | RESTORE_JOB_REPORT</code> </p>
        FrameworkArns:
          allOf:
          - $ref: '#/components/schemas/stringList'
          - description: The Amazon Resource Names (ARNs) of the frameworks a report
              covers.
        NumberOfFrameworks:
          allOf:
          - $ref: '#/components/schemas/integer'
          - description: The number of frameworks a report covers.
        Accounts:
          allOf:
          - $ref: '#/components/schemas/stringList'
          - description: These are the accounts to be included in the report.
        OrganizationUnits:
          allOf:
          - $ref: '#/components/schemas/stringList'
          - description: These are the Organizational Units to be included in the
              report.
        Regions:
          allOf:
          - $ref: '#/components/schemas/stringList'
          - description: These are the Regions to be included in the report.
      type: object
    CreateReportPlan_request:
      properties:
        ReportPlanName:
          description: "The unique name of the report plan. The name must be between\
            \ 1 and 256 characters, starting with a letter, and consisting of letters\
            \ (a-z, A-Z), numbers (0-9), and underscores (_)."
          maxLength: 256
          minLength: 1
          pattern: "[a-zA-Z][_a-zA-Z0-9]*"
          type: string
        ReportPlanDescription:
          description: "An optional description of the report plan with a maximum\
            \ of 1,024 characters."
          maxLength: 1024
          minLength: 0
          pattern: .*\S.*
          type: string
        ReportDeliveryChannel:
          $ref: '#/components/schemas/CreateReportPlan_request_ReportDeliveryChannel'
        ReportSetting:
          $ref: '#/components/schemas/CreateReportPlan_request_ReportSetting'
        ReportPlanTags:
          additionalProperties:
            $ref: '#/components/schemas/string'
          description: Metadata that you can assign to help organize the report plans
            that you create. Each tag is a key-value pair.
          type: object
        IdempotencyToken:
          description: A customer-chosen string that you can use to distinguish between
            otherwise identical calls to <code>CreateReportPlanInput</code>. Retrying
            a successful request with the same idempotency token results in a success
            message with no action taken.
          type: string
      required:
      - ReportDeliveryChannel
      - ReportPlanName
      - ReportSetting
      type: object
    UpdateBackupPlan_request:
      properties:
        BackupPlan:
          $ref: '#/components/schemas/CreateBackupPlan_request_BackupPlan'
      required:
      - BackupPlan
      type: object
    PutBackupVaultAccessPolicy_request:
      properties:
        Policy:
          description: The backup vault access policy document in JSON format.
          type: string
      type: object
    PutBackupVaultLockConfiguration_request:
      properties:
        MinRetentionDays:
          description: "<p>The Backup Vault Lock configuration that specifies the\
            \ minimum retention period that the vault retains its recovery points.\
            \ This setting can be useful if, for example, your organization's policies\
            \ require you to retain certain data for at least seven years (2555 days).</p>\
            \ <p>If this parameter is not specified, Vault Lock will not enforce a\
            \ minimum retention period.</p> <p>If this parameter is specified, any\
            \ backup or copy job to the vault must have a lifecycle policy with a\
            \ retention period equal to or longer than the minimum retention period.\
            \ If the job's retention period is shorter than that minimum retention\
            \ period, then the vault fails that backup or copy job, and you should\
            \ either modify your lifecycle settings or use a different vault. The\
            \ shortest minimum retention period you can specify is 1 day. Recovery\
            \ points already saved in the vault prior to Vault Lock are not affected.</p>"
          type: integer
        MaxRetentionDays:
          description: "<p>The Backup Vault Lock configuration that specifies the\
            \ maximum retention period that the vault retains its recovery points.\
            \ This setting can be useful if, for example, your organization's policies\
            \ require you to destroy certain data after retaining it for four years\
            \ (1460 days).</p> <p>If this parameter is not included, Vault Lock does\
            \ not enforce a maximum retention period on the recovery points in the\
            \ vault. If this parameter is included without a value, Vault Lock will\
            \ not enforce a maximum retention period.</p> <p>If this parameter is\
            \ specified, any backup or copy job to the vault must have a lifecycle\
            \ policy with a retention period equal to or shorter than the maximum\
            \ retention period. If the job's retention period is longer than that\
            \ maximum retention period, then the vault fails the backup or copy job,\
            \ and you should either modify your lifecycle settings or use a different\
            \ vault. The longest maximum retention period you can specify is 36500\
            \ days (approximately 100 years). Recovery points already saved in the\
            \ vault prior to Vault Lock are not affected.</p>"
          type: integer
        ChangeableForDays:
          description: "<p>The Backup Vault Lock configuration that specifies the\
            \ number of days before the lock date. For example, setting <code>ChangeableForDays</code>\
            \ to 30 on Jan. 1, 2022 at 8pm UTC will set the lock date to Jan. 31,\
            \ 2022 at 8pm UTC.</p> <p>Backup enforces a 72-hour cooling-off period\
            \ before Vault Lock takes effect and becomes immutable. Therefore, you\
            \ must set <code>ChangeableForDays</code> to 3 or greater.</p> <p>Before\
            \ the lock date, you can delete Vault Lock from the vault using <code>DeleteBackupVaultLockConfiguration</code>\
            \ or change the Vault Lock configuration using <code>PutBackupVaultLockConfiguration</code>.\
            \ On and after the lock date, the Vault Lock becomes immutable and cannot\
            \ be changed or deleted.</p> <p>If this parameter is not specified, you\
            \ can delete Vault Lock from the vault using <code>DeleteBackupVaultLockConfiguration</code>\
            \ or change the Vault Lock configuration using <code>PutBackupVaultLockConfiguration</code>\
            \ at any time.</p>"
          type: integer
      type: object
    PutBackupVaultNotifications_request:
      properties:
        SNSTopicArn:
          description: "The Amazon Resource Name (ARN) that specifies the topic for\
            \ a backup vault’s events; for example, <code>arn:aws:sns:us-west-2:111122223333:MyVaultTopic</code>."
          type: string
        BackupVaultEvents:
          description: "<p>An array of events that indicate the status of jobs to\
            \ back up resources to the backup vault.</p> <p>For common use cases and\
            \ code samples, see <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/sns-notifications.html\"\
            >Using Amazon SNS to track Backup events</a>.</p> <p>The following events\
            \ are supported:</p> <ul> <li> <p> <code>BACKUP_JOB_STARTED</code> | <code>BACKUP_JOB_COMPLETED</code>\
            \ </p> </li> <li> <p> <code>COPY_JOB_STARTED</code> | <code>COPY_JOB_SUCCESSFUL</code>\
            \ | <code>COPY_JOB_FAILED</code> </p> </li> <li> <p> <code>RESTORE_JOB_STARTED</code>\
            \ | <code>RESTORE_JOB_COMPLETED</code> | <code>RECOVERY_POINT_MODIFIED</code>\
            \ </p> </li> <li> <p> <code>S3_BACKUP_OBJECT_FAILED</code> | <code>S3_RESTORE_OBJECT_FAILED</code>\
            \ </p> </li> </ul> <note> <p>The list below shows items that are deprecated\
            \ events (for reference) and are no longer in use. They are no longer\
            \ supported and will not return statuses or notifications. Refer to the\
            \ list above for current supported events.</p> </note>"
          items:
            $ref: '#/components/schemas/BackupVaultEvent'
          type: array
      required:
      - BackupVaultEvents
      - SNSTopicArn
      type: object
    UpdateFramework_request:
      properties:
        FrameworkDescription:
          description: "An optional description of the framework with a maximum 1,024\
            \ characters."
          maxLength: 1024
          minLength: 0
          pattern: .*\S.*
          type: string
        FrameworkControls:
          description: "A list of the controls that make up the framework. Each control\
            \ in the list has a name, input parameters, and scope."
          items:
            $ref: '#/components/schemas/FrameworkControl'
          type: array
        IdempotencyToken:
          description: A customer-chosen string that you can use to distinguish between
            otherwise identical calls to <code>UpdateFrameworkInput</code>. Retrying
            a successful request with the same idempotency token results in a success
            message with no action taken.
          type: string
      type: object
    UpdateRecoveryPointLifecycle_request_Lifecycle:
      description: "<p>Contains an array of <code>Transition</code> objects specifying\
        \ how long in days before a recovery point transitions to cold storage or\
        \ is deleted.</p> <p>Backups transitioned to cold storage must be stored in\
        \ cold storage for a minimum of 90 days. Therefore, on the console, the “\
        retention” setting must be 90 days greater than the “transition to cold after\
        \ days” setting. The “transition to cold after days” setting cannot be changed\
        \ after a backup has been transitioned to cold.</p> <p>Resource types that\
        \ are able to be transitioned to cold storage are listed in the \"Lifecycle\
        \ to cold storage\" section of the <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html#features-by-resource\"\
        > Feature availability by resource</a> table. Backup ignores this expression\
        \ for other resource types.</p>"
      properties:
        MoveToColdStorageAfterDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Specifies the number of days after creation that a recovery
              point is moved to cold storage.
        DeleteAfterDays:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: Specifies the number of days after creation that a recovery
              point is deleted. Must be greater than 90 days plus <code>MoveToColdStorageAfterDays</code>.
      type: object
    UpdateRecoveryPointLifecycle_request:
      properties:
        Lifecycle:
          $ref: '#/components/schemas/UpdateRecoveryPointLifecycle_request_Lifecycle'
      type: object
    UpdateReportPlan_request:
      properties:
        ReportPlanDescription:
          description: "An optional description of the report plan with a maximum\
            \ 1,024 characters."
          maxLength: 1024
          minLength: 0
          pattern: .*\S.*
          type: string
        ReportDeliveryChannel:
          $ref: '#/components/schemas/CreateReportPlan_request_ReportDeliveryChannel'
        ReportSetting:
          $ref: '#/components/schemas/CreateReportPlan_request_ReportSetting'
        IdempotencyToken:
          description: A customer-chosen string that you can use to distinguish between
            otherwise identical calls to <code>UpdateReportPlanInput</code>. Retrying
            a successful request with the same idempotency token results in a success
            message with no action taken.
          type: string
      type: object
    UpdateGlobalSettings_request:
      properties:
        GlobalSettings:
          additionalProperties:
            $ref: '#/components/schemas/GlobalSettingsValue'
          description: "A value for <code>isCrossAccountBackupEnabled</code> and a\
            \ Region. Example: <code>update-global-settings --global-settings isCrossAccountBackupEnabled=false\
            \ --region us-west-2</code>."
          type: object
      type: object
    UpdateRegionSettings_request:
      properties:
        ResourceTypeOptInPreference:
          additionalProperties:
            $ref: '#/components/schemas/IsEnabled'
          description: Updates the list of services along with the opt-in preferences
            for the Region.
          type: object
        ResourceTypeManagementPreference:
          additionalProperties:
            $ref: '#/components/schemas/IsEnabled'
          description: "Enables or disables full Backup management of backups for\
            \ a resource type. To enable full Backup management for DynamoDB along\
            \ with <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/advanced-ddb-backup.html\"\
            > Backup's advanced DynamoDB backup features</a>, follow the procedure\
            \ to <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/advanced-ddb-backup.html#advanced-ddb-backup-enable-cli\"\
            > enable advanced DynamoDB backup programmatically</a>."
          type: object
      type: object
    GetBackupPlanFromJSON_request:
      properties:
        BackupPlanTemplateJson:
          description: A customer-supplied backup plan document in JSON format.
          type: string
      required:
      - BackupPlanTemplateJson
      type: object
    StartBackupJob_request:
      properties:
        BackupVaultName:
          description: "The name of a logical container where backups are stored.\
            \ Backup vaults are identified by names that are unique to the account\
            \ used to create them and the Amazon Web Services Region where they are\
            \ created. They consist of lowercase letters, numbers, and hyphens."
          pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
          type: string
        ResourceArn:
          description: An Amazon Resource Name (ARN) that uniquely identifies a resource.
            The format of the ARN depends on the resource type.
          type: string
        IamRoleArn:
          description: "Specifies the IAM role ARN used to create the target recovery\
            \ point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>."
          type: string
        IdempotencyToken:
          description: A customer-chosen string that you can use to distinguish between
            otherwise identical calls to <code>StartBackupJob</code>. Retrying a successful
            request with the same idempotency token results in a success message with
            no action taken.
          type: string
        StartWindowMinutes:
          description: "<p>A value in minutes after a backup is scheduled before a\
            \ job will be canceled if it doesn't start successfully. This value is\
            \ optional, and the default is 8 hours. If this value is included, it\
            \ must be at least 60 minutes to avoid errors.</p> <p>During the start\
            \ window, the backup job status remains in <code>CREATED</code> status\
            \ until it has successfully begun or until the start window time has run\
            \ out. If within the start window time Backup receives an error that allows\
            \ the job to be retried, Backup will automatically retry to begin the\
            \ job at least every 10 minutes until the backup successfully begins (the\
            \ job status changes to <code>RUNNING</code>) or until the job status\
            \ changes to <code>EXPIRED</code> (which is expected to occur when the\
            \ start window time is over).</p>"
          type: integer
        CompleteWindowMinutes:
          description: "A value in minutes during which a successfully started backup\
            \ must complete, or else Backup will cancel the job. This value is optional.\
            \ This value begins counting down from when the backup was scheduled.\
            \ It does not add additional time for <code>StartWindowMinutes</code>,\
            \ or if the backup started later than scheduled."
          type: integer
        Lifecycle:
          $ref: '#/components/schemas/UpdateRecoveryPointLifecycle_request_Lifecycle'
        RecoveryPointTags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "To help organize your resources, you can assign your own metadata\
            \ to the resources that you create. Each tag is a key-value pair."
          type: object
        BackupOptions:
          additionalProperties:
            $ref: '#/components/schemas/BackupOptionValue'
          description: "<p>Specifies the backup option for a selected resource. This\
            \ option is only available for Windows Volume Shadow Copy Service (VSS)\
            \ backup jobs.</p> <p>Valid values: Set to <code>\"WindowsVSS\":\"enabled\"\
            </code> to enable the <code>WindowsVSS</code> backup option and create\
            \ a Windows VSS backup. Set to <code>\"WindowsVSS\"\"disabled\"</code>\
            \ to create a regular backup. The <code>WindowsVSS</code> option is not\
            \ enabled by default.</p>"
          type: object
      required:
      - BackupVaultName
      - IamRoleArn
      - ResourceArn
      type: object
    StartCopyJob_request:
      properties:
        RecoveryPointArn:
          description: "An ARN that uniquely identifies a recovery point to use for\
            \ the copy job; for example, arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45. "
          type: string
        SourceBackupVaultName:
          description: "The name of a logical source container where backups are stored.\
            \ Backup vaults are identified by names that are unique to the account\
            \ used to create them and the Amazon Web Services Region where they are\
            \ created. They consist of lowercase letters, numbers, and hyphens."
          pattern: "^[a-zA-Z0-9\\-\\_]{2,50}$"
          type: string
        DestinationBackupVaultArn:
          description: "An Amazon Resource Name (ARN) that uniquely identifies a destination\
            \ backup vault to copy to; for example, <code>arn:aws:backup:us-east-1:123456789012:vault:aBackupVault</code>."
          type: string
        IamRoleArn:
          description: "Specifies the IAM role ARN used to copy the target recovery\
            \ point; for example, <code>arn:aws:iam::123456789012:role/S3Access</code>."
          type: string
        IdempotencyToken:
          description: A customer-chosen string that you can use to distinguish between
            otherwise identical calls to <code>StartCopyJob</code>. Retrying a successful
            request with the same idempotency token results in a success message with
            no action taken.
          type: string
        Lifecycle:
          $ref: '#/components/schemas/UpdateRecoveryPointLifecycle_request_Lifecycle'
      required:
      - DestinationBackupVaultArn
      - IamRoleArn
      - RecoveryPointArn
      - SourceBackupVaultName
      type: object
    StartReportJob_request:
      properties:
        IdempotencyToken:
          description: A customer-chosen string that you can use to distinguish between
            otherwise identical calls to <code>StartReportJobInput</code>. Retrying
            a successful request with the same idempotency token results in a success
            message with no action taken.
          type: string
      type: object
    StartRestoreJob_request:
      properties:
        RecoveryPointArn:
          description: "An ARN that uniquely identifies a recovery point; for example,\
            \ <code>arn:aws:backup:us-east-1:123456789012:recovery-point:1EB3B5E7-9EB0-435A-A80B-108B488B0D45</code>."
          type: string
        Metadata:
          additionalProperties:
            $ref: '#/components/schemas/MetadataValue'
          description: "<p>A set of metadata key-value pairs. Contains information,\
            \ such as a resource name, required to restore a recovery point.</p> <p>\
            \ You can get configuration metadata about a resource at the time it was\
            \ backed up by calling <code>GetRecoveryPointRestoreMetadata</code>. However,\
            \ values in addition to those provided by <code>GetRecoveryPointRestoreMetadata</code>\
            \ might be required to restore a resource. For example, you might need\
            \ to provide a new resource name if the original already exists.</p> <p>You\
            \ need to specify specific metadata to restore an Amazon Elastic File\
            \ System (Amazon EFS) instance:</p> <ul> <li> <p> <code>file-system-id</code>:\
            \ The ID of the Amazon EFS file system that is backed up by Backup. Returned\
            \ in <code>GetRecoveryPointRestoreMetadata</code>.</p> </li> <li> <p>\
            \ <code>Encrypted</code>: A Boolean value that, if true, specifies that\
            \ the file system is encrypted. If <code>KmsKeyId</code> is specified,\
            \ <code>Encrypted</code> must be set to <code>true</code>.</p> </li> <li>\
            \ <p> <code>KmsKeyId</code>: Specifies the Amazon Web Services KMS key\
            \ that is used to encrypt the restored file system. You can specify a\
            \ key from another Amazon Web Services account provided that key it is\
            \ properly shared with your account via Amazon Web Services KMS.</p> </li>\
            \ <li> <p> <code>PerformanceMode</code>: Specifies the throughput mode\
            \ of the file system.</p> </li> <li> <p> <code>CreationToken</code>: A\
            \ user-supplied value that ensures the uniqueness (idempotency) of the\
            \ request.</p> </li> <li> <p> <code>newFileSystem</code>: A Boolean value\
            \ that, if true, specifies that the recovery point is restored to a new\
            \ Amazon EFS file system.</p> </li> <li> <p> <code>ItemsToRestore</code>:\
            \ An array of one to five strings where each string is a file path. Use\
            \ <code>ItemsToRestore</code> to restore specific files or directories\
            \ rather than the entire file system. This parameter is optional. For\
            \ example, <code>\"itemsToRestore\":\"[\\\"/my.test\\\"]\"</code>.</p>\
            \ </li> </ul>"
          type: object
        IamRoleArn:
          description: "The Amazon Resource Name (ARN) of the IAM role that Backup\
            \ uses to create the target resource; for example: <code>arn:aws:iam::123456789012:role/S3Access</code>."
          type: string
        IdempotencyToken:
          description: A customer-chosen string that you can use to distinguish between
            otherwise identical calls to <code>StartRestoreJob</code>. Retrying a
            successful request with the same idempotency token results in a success
            message with no action taken.
          type: string
        ResourceType:
          description: <p>Starts a job to restore a recovery point for one of the
            following resources:</p> <ul> <li> <p> <code>Aurora</code> for Amazon
            Aurora</p> </li> <li> <p> <code>DocumentDB</code> for Amazon DocumentDB
            (with MongoDB compatibility)</p> </li> <li> <p> <code>CloudFormation</code>
            for CloudFormation</p> </li> <li> <p> <code>DynamoDB</code> for Amazon
            DynamoDB</p> </li> <li> <p> <code>EBS</code> for Amazon Elastic Block
            Store</p> </li> <li> <p> <code>EC2</code> for Amazon Elastic Compute Cloud</p>
            </li> <li> <p> <code>EFS</code> for Amazon Elastic File System</p> </li>
            <li> <p> <code>FSx</code> for Amazon FSx</p> </li> <li> <p> <code>Neptune</code>
            for Amazon Neptune</p> </li> <li> <p> <code>RDS</code> for Amazon Relational
            Database Service</p> </li> <li> <p> <code>Redshift</code> for Amazon Redshift</p>
            </li> <li> <p> <code>Storage Gateway</code> for Storage Gateway</p> </li>
            <li> <p> <code>S3</code> for Amazon S3</p> </li> <li> <p> <code>Timestream</code>
            for Amazon Timestream</p> </li> <li> <p> <code>VirtualMachine</code> for
            virtual machines</p> </li> </ul>
          pattern: "^[a-zA-Z0-9\\-\\_\\.]{1,50}$"
          type: string
        CopySourceTagsToRestoredResource:
          description: "<p>This is an optional parameter. If this equals <code>True</code>,\
            \ tags included in the backup will be copied to the restored resource.</p>\
            \ <p>This can only be applied to backups created through Backup.</p>"
          type: boolean
      required:
      - Metadata
      - RecoveryPointArn
      type: object
    TagResource_request:
      properties:
        Tags:
          additionalProperties:
            $ref: '#/components/schemas/TagValue'
          description: "Key-value pairs that are used to help organize your resources.\
            \ You can assign your own metadata to the resources you create. For clarity,\
            \ this is the structure to assign tags: <code>[{\"Key\":\"string\",\"\
            Value\":\"string\"}]</code>."
          type: object
      required:
      - Tags
      type: object
    UntagResource_request:
      properties:
        TagKeyList:
          description: A list of keys to identify which key-value tags to remove from
            a resource.
          items:
            $ref: '#/components/schemas/string'
          type: array
      required:
      - TagKeyList
      type: object
    FrameworkControl_ControlScope:
      allOf:
      - $ref: '#/components/schemas/ControlScope'
      - description: "The scope of a control. The control scope defines what the control\
          \ will evaluate. Three examples of control scopes are: a specific backup\
          \ plan, all backup plans with a specific tag, or all backup plans. For more\
          \ information, see <a href=\"aws-backup/latest/devguide/API_ControlScope.html\"\
          > <code>ControlScope</code>.</a> "
    CreateLegalHoldOutput_RecoveryPointSelection:
      allOf:
      - $ref: '#/components/schemas/RecoveryPointSelection'
      - description: "This specifies criteria to assign a set of resources, such as\
          \ resource types or backup vaults."
      example:
        DateRange:
          FromDate: ""
          ToDate: ""
        VaultNames: ""
        ResourceIdentifiers: ""
    DescribeBackupJobOutput_CreatedBy:
      allOf:
      - $ref: '#/components/schemas/RecoveryPointCreator'
      - description: "Contains identifying information about the creation of a backup\
          \ job, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>,\
          \ <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup\
          \ plan that is used to create it."
      example:
        BackupRuleId: ""
        BackupPlanVersion: ""
        BackupPlanId: ""
        BackupPlanArn: ""
    DescribeCopyJobOutput_CopyJob:
      allOf:
      - $ref: '#/components/schemas/CopyJob'
      - description: Contains detailed information about a copy job.
      example:
        DestinationRecoveryPointArn: ""
        CreationDate: ""
        CompositeMemberIdentifier: ""
        AccountId: ""
        SourceRecoveryPointArn: ""
        CreatedBy:
          BackupRuleId: ""
          BackupPlanVersion: ""
          BackupPlanId: ""
          BackupPlanArn: ""
        BackupSizeInBytes: ""
        CopyJobId: ""
        IsParent: ""
        ResourceName: ""
        ResourceType: ""
        ParentJobId: ""
        StatusMessage: ""
        ResourceArn: ""
        State: ""
        NumberOfChildJobs: ""
        SourceBackupVaultArn: ""
        IamRoleArn: ""
        CompletionDate: ""
        ChildJobsInState: ""
        DestinationBackupVaultArn: ""
    DescribeRecoveryPointOutput_CreatedBy:
      allOf:
      - $ref: '#/components/schemas/RecoveryPointCreator'
      - description: "Contains identifying information about the creation of a recovery\
          \ point, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>,\
          \ <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup\
          \ plan used to create it."
      example:
        BackupRuleId: ""
        BackupPlanVersion: ""
        BackupPlanId: ""
        BackupPlanArn: ""
    DescribeRecoveryPointOutput_CalculatedLifecycle:
      allOf:
      - $ref: '#/components/schemas/CalculatedLifecycle'
      - description: A <code>CalculatedLifecycle</code> object containing <code>DeleteAt</code>
          and <code>MoveToColdStorageAt</code> timestamps.
      example:
        MoveToColdStorageAt: ""
        DeleteAt: ""
    DescribeRecoveryPointOutput_Lifecycle:
      allOf:
      - $ref: '#/components/schemas/Lifecycle'
      - description: "<p>The lifecycle defines when a protected resource is transitioned\
          \ to cold storage and when it expires. Backup transitions and expires backups\
          \ automatically according to the lifecycle that you define.</p> <p>Backups\
          \ that are transitioned to cold storage must be stored in cold storage for\
          \ a minimum of 90 days. Therefore, the “retention” setting must be 90 days\
          \ greater than the “transition to cold after days” setting. The “transition\
          \ to cold after days” setting cannot be changed after a backup has been\
          \ transitioned to cold. </p> <p>Resource types that are able to be transitioned\
          \ to cold storage are listed in the \"Lifecycle to cold storage\" section\
          \ of the <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html#features-by-resource\"\
          > Feature availability by resource</a> table. Backup ignores this expression\
          \ for other resource types.</p>"
      example:
        DeleteAfterDays: ""
        MoveToColdStorageAfterDays: ""
    DescribeReportJobOutput_ReportJob:
      allOf:
      - $ref: '#/components/schemas/ReportJob'
      - description: "A list of information about a report job, including its completion\
          \ and creation times, report destination, unique report job ID, Amazon Resource\
          \ Name (ARN), report template, status, and status message."
      example:
        Status: ""
        CompletionTime: ""
        ReportTemplate: ""
        CreationTime: ""
        ReportJobId: ""
        ReportDestination:
          S3Keys: ""
          S3BucketName: ""
        ReportPlanArn: ""
        StatusMessage: ""
    DescribeReportPlanOutput_ReportPlan:
      allOf:
      - $ref: '#/components/schemas/ReportPlan'
      - description: "Returns details about the report plan that is specified by its\
          \ name. These details include the report plan's Amazon Resource Name (ARN),\
          \ description, settings, delivery channel, deployment status, creation time,\
          \ and last attempted and successful run times."
      example:
        LastAttemptedExecutionTime: ""
        ReportSetting:
          FrameworkArns: ""
          ReportTemplate: ""
          OrganizationUnits: ""
          NumberOfFrameworks: ""
          Regions: ""
          Accounts: ""
        ReportPlanDescription: ""
        ReportPlanName: ""
        ReportDeliveryChannel:
          S3KeyPrefix: ""
          S3BucketName: ""
          Formats: ""
        CreationTime: ""
        LastSuccessfulExecutionTime: ""
        ReportPlanArn: ""
        DeploymentStatus: ""
    GetBackupPlanOutput_BackupPlan:
      allOf:
      - $ref: '#/components/schemas/BackupPlan'
      - description: Specifies the body of a backup plan. Includes a <code>BackupPlanName</code>
          and one or more sets of <code>Rules</code>.
      example:
        BackupPlanName: ""
        Rules: ""
        AdvancedBackupSettings: ""
    GetBackupPlanFromTemplateOutput_BackupPlanDocument:
      allOf:
      - $ref: '#/components/schemas/BackupPlan'
      - description: "Returns the body of a backup plan based on the target template,\
          \ including the name, rules, and backup vault of the plan."
      example:
        BackupPlanName: ""
        Rules: ""
        AdvancedBackupSettings: ""
    GetBackupSelectionOutput_BackupSelection:
      allOf:
      - $ref: '#/components/schemas/BackupSelection'
      - description: Specifies the body of a request to assign a set of resources
          to a backup plan.
      example:
        ListOfTags: ""
        NotResources: ""
        SelectionName: ""
        IamRoleArn: ""
        Resources: ""
        Conditions:
          StringEquals: ""
          StringNotLike: ""
          StringLike: ""
          StringNotEquals: ""
    UpdateRecoveryPointLifecycleOutput_Lifecycle:
      allOf:
      - $ref: '#/components/schemas/Lifecycle'
      - description: "<p>The lifecycle defines when a protected resource is transitioned\
          \ to cold storage and when it expires. Backup transitions and expires backups\
          \ automatically according to the lifecycle that you define.</p> <p>Backups\
          \ transitioned to cold storage must be stored in cold storage for a minimum\
          \ of 90 days. Therefore, the “retention” setting must be 90 days greater\
          \ than the “transition to cold after days” setting. The “transition to cold\
          \ after days” setting cannot be changed after a backup has been transitioned\
          \ to cold.</p> <p>Resource types that are able to be transitioned to cold\
          \ storage are listed in the \"Lifecycle to cold storage\" section of the\
          \ <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html#features-by-resource\"\
          > Feature availability by resource</a> table. Backup ignores this expression\
          \ for other resource types.</p>"
      example:
        DeleteAfterDays: ""
        MoveToColdStorageAfterDays: ""
    BackupJob_CreatedBy:
      allOf:
      - $ref: '#/components/schemas/RecoveryPointCreator'
      - description: "Contains identifying information about the creation of a backup\
          \ job, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>,\
          \ <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup\
          \ plan used to create it."
    BackupRule_Lifecycle:
      allOf:
      - $ref: '#/components/schemas/Lifecycle'
      - description: "<p>The lifecycle defines when a protected resource is transitioned\
          \ to cold storage and when it expires. Backup transitions and expires backups\
          \ automatically according to the lifecycle that you define. </p> <p>Backups\
          \ transitioned to cold storage must be stored in cold storage for a minimum\
          \ of 90 days. Therefore, the “retention” setting must be 90 days greater\
          \ than the “transition to cold after days” setting. The “transition to cold\
          \ after days” setting cannot be changed after a backup has been transitioned\
          \ to cold. </p> <p>Resource types that are able to be transitioned to cold\
          \ storage are listed in the \"Lifecycle to cold storage\" section of the\
          \ <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html#features-by-resource\"\
          > Feature availability by resource</a> table. Backup ignores this expression\
          \ for other resource types.</p>"
    BackupRuleInput_Lifecycle:
      allOf:
      - $ref: '#/components/schemas/Lifecycle'
      - description: "<p>The lifecycle defines when a protected resource is transitioned\
          \ to cold storage and when it expires. Backup will transition and expire\
          \ backups automatically according to the lifecycle that you define. </p>\
          \ <p>Backups transitioned to cold storage must be stored in cold storage\
          \ for a minimum of 90 days. Therefore, the “retention” setting must be 90\
          \ days greater than the “transition to cold after days” setting. The “transition\
          \ to cold after days” setting cannot be changed after a backup has been\
          \ transitioned to cold.</p> <p>Resource types that are able to be transitioned\
          \ to cold storage are listed in the \"Lifecycle to cold storage\" section\
          \ of the <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html#features-by-resource\"\
          > Feature availability by resource</a> table. Backup ignores this expression\
          \ for other resource types.</p>"
    CreateBackupPlanInput_BackupPlan:
      allOf:
      - $ref: '#/components/schemas/BackupPlanInput'
      - description: Specifies the body of a backup plan. Includes a <code>BackupPlanName</code>
          and one or more sets of <code>Rules</code>.
    CreateReportPlanInput_ReportDeliveryChannel:
      allOf:
      - $ref: '#/components/schemas/ReportDeliveryChannel'
      - description: "A structure that contains information about where and how to\
          \ deliver your reports, specifically your Amazon S3 bucket name, S3 key\
          \ prefix, and the formats of your reports."
    CreateReportPlanInput_ReportSetting:
      allOf:
      - $ref: '#/components/schemas/ReportSetting'
      - description: "<p>Identifies the report template for the report. Reports are\
          \ built using a report template. The report templates are:</p> <p> <code>RESOURCE_COMPLIANCE_REPORT\
          \ | CONTROL_COMPLIANCE_REPORT | BACKUP_JOB_REPORT | COPY_JOB_REPORT | RESTORE_JOB_REPORT</code>\
          \ </p> <p>If the report template is <code>RESOURCE_COMPLIANCE_REPORT</code>\
          \ or <code>CONTROL_COMPLIANCE_REPORT</code>, this API resource also describes\
          \ the report coverage by Amazon Web Services Regions and frameworks.</p>"
      example:
        FrameworkArns: ""
        ReportTemplate: ""
        OrganizationUnits: ""
        NumberOfFrameworks: ""
        Regions: ""
        Accounts: ""
    ReportJob_ReportDestination:
      allOf:
      - $ref: '#/components/schemas/ReportDestination'
      - description: The S3 bucket name and S3 keys for the destination where the
          report job publishes the report.
      example:
        S3Keys: ""
        S3BucketName: ""
    ReportPlan_ReportDeliveryChannel:
      allOf:
      - $ref: '#/components/schemas/ReportDeliveryChannel'
      - description: "Contains information about where and how to deliver your reports,\
          \ specifically your Amazon S3 bucket name, S3 key prefix, and the formats\
          \ of your reports."
      example:
        S3KeyPrefix: ""
        S3BucketName: ""
        Formats: ""
    RecoveryPointByBackupVault_CreatedBy:
      allOf:
      - $ref: '#/components/schemas/RecoveryPointCreator'
      - description: "Contains identifying information about the creation of a recovery\
          \ point, including the <code>BackupPlanArn</code>, <code>BackupPlanId</code>,\
          \ <code>BackupPlanVersion</code>, and <code>BackupRuleId</code> of the backup\
          \ plan that is used to create it."
    StartBackupJobInput_Lifecycle:
      allOf:
      - $ref: '#/components/schemas/Lifecycle'
      - description: "<p>The lifecycle defines when a protected resource is transitioned\
          \ to cold storage and when it expires. Backup will transition and expire\
          \ backups automatically according to the lifecycle that you define. </p>\
          \ <p>Backups transitioned to cold storage must be stored in cold storage\
          \ for a minimum of 90 days. Therefore, the “retention” setting must be 90\
          \ days greater than the “transition to cold after days” setting. The “transition\
          \ to cold after days” setting cannot be changed after a backup has been\
          \ transitioned to cold. </p> <p>Resource types that are able to be transitioned\
          \ to cold storage are listed in the \"Lifecycle to cold storage\" section\
          \ of the <a href=\"https://docs.aws.amazon.com/aws-backup/latest/devguide/whatisbackup.html#features-by-resource\"\
          > Feature availability by resource</a> table. Backup ignores this expression\
          \ for other resource types.</p>"
    UpdateRecoveryPointLifecycleInput_Lifecycle:
      allOf:
      - $ref: '#/components/schemas/Lifecycle'
      - description: "<p>The lifecycle defines when a protected resource is transitioned\
          \ to cold storage and when it expires. Backup transitions and expires backups\
          \ automatically according to the lifecycle that you define. </p> <p>Backups\
          \ transitioned to cold storage must be stored in cold storage for a minimum\
          \ of 90 days. Therefore, the “retention” setting must be 90 days greater\
          \ than the “transition to cold after days” setting. The “transition to cold\
          \ after days” setting cannot be changed after a backup has been transitioned\
          \ to cold. </p>"
    UpdateReportPlanInput_ReportDeliveryChannel:
      allOf:
      - $ref: '#/components/schemas/ReportDeliveryChannel'
      - description: "A structure that contains information about where to deliver\
          \ your reports, specifically your Amazon S3 bucket name, S3 key prefix,\
          \ and the formats of your reports."
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
x-hasEquivalentPaths: true

