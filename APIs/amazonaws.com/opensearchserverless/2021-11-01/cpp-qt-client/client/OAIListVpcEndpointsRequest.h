/**
 * OpenSearch Service Serverless
 * <p>Use the Amazon OpenSearch Serverless API to create, configure, and manage OpenSearch Serverless collections and security policies.</p> <p>OpenSearch Serverless is an on-demand, pre-provisioned serverless configuration for Amazon OpenSearch Service. OpenSearch Serverless removes the operational complexities of provisioning, configuring, and tuning your OpenSearch clusters. It enables you to easily search and analyze petabytes of data without having to worry about the underlying infrastructure and data management.</p> <p> To learn more about OpenSearch Serverless, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-overview.html\">What is Amazon OpenSearch Serverless?</a> </p>
 *
 * The version of the OpenAPI document: 2021-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListVpcEndpointsRequest.h
 *
 * 
 */

#ifndef OAIListVpcEndpointsRequest_H
#define OAIListVpcEndpointsRequest_H

#include <QJsonObject>

#include "OAIListVpcEndpointsRequest_vpcEndpointFilters.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIListVpcEndpointsRequest_vpcEndpointFilters;

class OAIListVpcEndpointsRequest : public OAIObject {
public:
    OAIListVpcEndpointsRequest();
    OAIListVpcEndpointsRequest(QString json);
    ~OAIListVpcEndpointsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getMaxResults() const;
    void setMaxResults(const qint32 &max_results);
    bool is_max_results_Set() const;
    bool is_max_results_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    OAIListVpcEndpointsRequest_vpcEndpointFilters getVpcEndpointFilters() const;
    void setVpcEndpointFilters(const OAIListVpcEndpointsRequest_vpcEndpointFilters &vpc_endpoint_filters);
    bool is_vpc_endpoint_filters_Set() const;
    bool is_vpc_endpoint_filters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_max_results;
    bool m_max_results_isSet;
    bool m_max_results_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;

    OAIListVpcEndpointsRequest_vpcEndpointFilters m_vpc_endpoint_filters;
    bool m_vpc_endpoint_filters_isSet;
    bool m_vpc_endpoint_filters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListVpcEndpointsRequest)

#endif // OAIListVpcEndpointsRequest_H
