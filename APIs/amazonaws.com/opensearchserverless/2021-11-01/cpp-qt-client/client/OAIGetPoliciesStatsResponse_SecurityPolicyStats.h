/**
 * OpenSearch Service Serverless
 * <p>Use the Amazon OpenSearch Serverless API to create, configure, and manage OpenSearch Serverless collections and security policies.</p> <p>OpenSearch Serverless is an on-demand, pre-provisioned serverless configuration for Amazon OpenSearch Service. OpenSearch Serverless removes the operational complexities of provisioning, configuring, and tuning your OpenSearch clusters. It enables you to easily search and analyze petabytes of data without having to worry about the underlying infrastructure and data management.</p> <p> To learn more about OpenSearch Serverless, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-overview.html\">What is Amazon OpenSearch Serverless?</a> </p>
 *
 * The version of the OpenAPI document: 2021-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetPoliciesStatsResponse_SecurityPolicyStats.h
 *
 * 
 */

#ifndef OAIGetPoliciesStatsResponse_SecurityPolicyStats_H
#define OAIGetPoliciesStatsResponse_SecurityPolicyStats_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetPoliciesStatsResponse_SecurityPolicyStats : public OAIObject {
public:
    OAIGetPoliciesStatsResponse_SecurityPolicyStats();
    OAIGetPoliciesStatsResponse_SecurityPolicyStats(QString json);
    ~OAIGetPoliciesStatsResponse_SecurityPolicyStats() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getEncryptionPolicyCount() const;
    void setEncryptionPolicyCount(const qint32 &encryption_policy_count);
    bool is_encryption_policy_count_Set() const;
    bool is_encryption_policy_count_Valid() const;

    qint32 getNetworkPolicyCount() const;
    void setNetworkPolicyCount(const qint32 &network_policy_count);
    bool is_network_policy_count_Set() const;
    bool is_network_policy_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_encryption_policy_count;
    bool m_encryption_policy_count_isSet;
    bool m_encryption_policy_count_isValid;

    qint32 m_network_policy_count;
    bool m_network_policy_count_isSet;
    bool m_network_policy_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetPoliciesStatsResponse_SecurityPolicyStats)

#endif // OAIGetPoliciesStatsResponse_SecurityPolicyStats_H
