/**
 * OpenSearch Service Serverless
 * <p>Use the Amazon OpenSearch Serverless API to create, configure, and manage OpenSearch Serverless collections and security policies.</p> <p>OpenSearch Serverless is an on-demand, pre-provisioned serverless configuration for Amazon OpenSearch Service. OpenSearch Serverless removes the operational complexities of provisioning, configuring, and tuning your OpenSearch clusters. It enables you to easily search and analyze petabytes of data without having to worry about the underlying infrastructure and data management.</p> <p> To learn more about OpenSearch Serverless, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-overview.html\">What is Amazon OpenSearch Serverless?</a> </p>
 *
 * The version of the OpenAPI document: 2021-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISamlConfigOptions.h
 *
 * Describes SAML options for an OpenSearch Serverless security configuration in the form of a key-value map.
 */

#ifndef OAISamlConfigOptions_H
#define OAISamlConfigOptions_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISamlConfigOptions : public OAIObject {
public:
    OAISamlConfigOptions();
    OAISamlConfigOptions(QString json);
    ~OAISamlConfigOptions() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGroupAttribute() const;
    void setGroupAttribute(const QString &group_attribute);
    bool is_group_attribute_Set() const;
    bool is_group_attribute_Valid() const;

    QString getMetadata() const;
    void setMetadata(const QString &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    qint32 getSessionTimeout() const;
    void setSessionTimeout(const qint32 &session_timeout);
    bool is_session_timeout_Set() const;
    bool is_session_timeout_Valid() const;

    QString getUserAttribute() const;
    void setUserAttribute(const QString &user_attribute);
    bool is_user_attribute_Set() const;
    bool is_user_attribute_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_group_attribute;
    bool m_group_attribute_isSet;
    bool m_group_attribute_isValid;

    QString m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    qint32 m_session_timeout;
    bool m_session_timeout_isSet;
    bool m_session_timeout_isValid;

    QString m_user_attribute;
    bool m_user_attribute_isSet;
    bool m_user_attribute_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISamlConfigOptions)

#endif // OAISamlConfigOptions_H
