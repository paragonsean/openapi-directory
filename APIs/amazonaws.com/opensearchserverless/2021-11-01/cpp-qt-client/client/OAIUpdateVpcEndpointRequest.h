/**
 * OpenSearch Service Serverless
 * <p>Use the Amazon OpenSearch Serverless API to create, configure, and manage OpenSearch Serverless collections and security policies.</p> <p>OpenSearch Serverless is an on-demand, pre-provisioned serverless configuration for Amazon OpenSearch Service. OpenSearch Serverless removes the operational complexities of provisioning, configuring, and tuning your OpenSearch clusters. It enables you to easily search and analyze petabytes of data without having to worry about the underlying infrastructure and data management.</p> <p> To learn more about OpenSearch Serverless, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-overview.html\">What is Amazon OpenSearch Serverless?</a> </p>
 *
 * The version of the OpenAPI document: 2021-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateVpcEndpointRequest.h
 *
 * 
 */

#ifndef OAIUpdateVpcEndpointRequest_H
#define OAIUpdateVpcEndpointRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateVpcEndpointRequest : public OAIObject {
public:
    OAIUpdateVpcEndpointRequest();
    OAIUpdateVpcEndpointRequest(QString json);
    ~OAIUpdateVpcEndpointRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getAddSecurityGroupIds() const;
    void setAddSecurityGroupIds(const QList &add_security_group_ids);
    bool is_add_security_group_ids_Set() const;
    bool is_add_security_group_ids_Valid() const;

    QList getAddSubnetIds() const;
    void setAddSubnetIds(const QList &add_subnet_ids);
    bool is_add_subnet_ids_Set() const;
    bool is_add_subnet_ids_Valid() const;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList getRemoveSecurityGroupIds() const;
    void setRemoveSecurityGroupIds(const QList &remove_security_group_ids);
    bool is_remove_security_group_ids_Set() const;
    bool is_remove_security_group_ids_Valid() const;

    QList getRemoveSubnetIds() const;
    void setRemoveSubnetIds(const QList &remove_subnet_ids);
    bool is_remove_subnet_ids_Set() const;
    bool is_remove_subnet_ids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_add_security_group_ids;
    bool m_add_security_group_ids_isSet;
    bool m_add_security_group_ids_isValid;

    QList m_add_subnet_ids;
    bool m_add_subnet_ids_isSet;
    bool m_add_subnet_ids_isValid;

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList m_remove_security_group_ids;
    bool m_remove_security_group_ids_isSet;
    bool m_remove_security_group_ids_isValid;

    QList m_remove_subnet_ids;
    bool m_remove_subnet_ids_isSet;
    bool m_remove_subnet_ids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateVpcEndpointRequest)

#endif // OAIUpdateVpcEndpointRequest_H
