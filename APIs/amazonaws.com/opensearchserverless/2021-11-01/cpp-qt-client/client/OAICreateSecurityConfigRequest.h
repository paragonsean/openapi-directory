/**
 * OpenSearch Service Serverless
 * <p>Use the Amazon OpenSearch Serverless API to create, configure, and manage OpenSearch Serverless collections and security policies.</p> <p>OpenSearch Serverless is an on-demand, pre-provisioned serverless configuration for Amazon OpenSearch Service. OpenSearch Serverless removes the operational complexities of provisioning, configuring, and tuning your OpenSearch clusters. It enables you to easily search and analyze petabytes of data without having to worry about the underlying infrastructure and data management.</p> <p> To learn more about OpenSearch Serverless, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-overview.html\">What is Amazon OpenSearch Serverless?</a> </p>
 *
 * The version of the OpenAPI document: 2021-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateSecurityConfigRequest.h
 *
 * 
 */

#ifndef OAICreateSecurityConfigRequest_H
#define OAICreateSecurityConfigRequest_H

#include <QJsonObject>

#include "OAICreateSecurityConfigRequest_samlOptions.h"
#include "OAISecurityConfigType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateSecurityConfigRequest_samlOptions;

class OAICreateSecurityConfigRequest : public OAIObject {
public:
    OAICreateSecurityConfigRequest();
    OAICreateSecurityConfigRequest(QString json);
    ~OAICreateSecurityConfigRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getClientToken() const;
    void setClientToken(const QString &client_token);
    bool is_client_token_Set() const;
    bool is_client_token_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAICreateSecurityConfigRequest_samlOptions getSamlOptions() const;
    void setSamlOptions(const OAICreateSecurityConfigRequest_samlOptions &saml_options);
    bool is_saml_options_Set() const;
    bool is_saml_options_Valid() const;

    OAISecurityConfigType getType() const;
    void setType(const OAISecurityConfigType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_client_token;
    bool m_client_token_isSet;
    bool m_client_token_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAICreateSecurityConfigRequest_samlOptions m_saml_options;
    bool m_saml_options_isSet;
    bool m_saml_options_isValid;

    OAISecurityConfigType m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateSecurityConfigRequest)

#endif // OAICreateSecurityConfigRequest_H
