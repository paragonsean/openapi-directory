/**
 * OpenSearch Service Serverless
 * <p>Use the Amazon OpenSearch Serverless API to create, configure, and manage OpenSearch Serverless collections and security policies.</p> <p>OpenSearch Serverless is an on-demand, pre-provisioned serverless configuration for Amazon OpenSearch Service. OpenSearch Serverless removes the operational complexities of provisioning, configuring, and tuning your OpenSearch clusters. It enables you to easily search and analyze petabytes of data without having to worry about the underlying infrastructure and data management.</p> <p> To learn more about OpenSearch Serverless, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-overview.html\">What is Amazon OpenSearch Serverless?</a> </p>
 *
 * The version of the OpenAPI document: 2021-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetPoliciesStatsResponse.h
 *
 * 
 */

#ifndef OAIGetPoliciesStatsResponse_H
#define OAIGetPoliciesStatsResponse_H

#include <QJsonObject>

#include "OAIGetPoliciesStatsResponse_AccessPolicyStats.h"
#include "OAIGetPoliciesStatsResponse_SecurityConfigStats.h"
#include "OAIGetPoliciesStatsResponse_SecurityPolicyStats.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetPoliciesStatsResponse_AccessPolicyStats;
class OAIGetPoliciesStatsResponse_SecurityConfigStats;
class OAIGetPoliciesStatsResponse_SecurityPolicyStats;

class OAIGetPoliciesStatsResponse : public OAIObject {
public:
    OAIGetPoliciesStatsResponse();
    OAIGetPoliciesStatsResponse(QString json);
    ~OAIGetPoliciesStatsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetPoliciesStatsResponse_AccessPolicyStats getAccessPolicyStats() const;
    void setAccessPolicyStats(const OAIGetPoliciesStatsResponse_AccessPolicyStats &access_policy_stats);
    bool is_access_policy_stats_Set() const;
    bool is_access_policy_stats_Valid() const;

    OAIGetPoliciesStatsResponse_SecurityConfigStats getSecurityConfigStats() const;
    void setSecurityConfigStats(const OAIGetPoliciesStatsResponse_SecurityConfigStats &security_config_stats);
    bool is_security_config_stats_Set() const;
    bool is_security_config_stats_Valid() const;

    OAIGetPoliciesStatsResponse_SecurityPolicyStats getSecurityPolicyStats() const;
    void setSecurityPolicyStats(const OAIGetPoliciesStatsResponse_SecurityPolicyStats &security_policy_stats);
    bool is_security_policy_stats_Set() const;
    bool is_security_policy_stats_Valid() const;

    qint32 getTotalPolicyCount() const;
    void setTotalPolicyCount(const qint32 &total_policy_count);
    bool is_total_policy_count_Set() const;
    bool is_total_policy_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetPoliciesStatsResponse_AccessPolicyStats m_access_policy_stats;
    bool m_access_policy_stats_isSet;
    bool m_access_policy_stats_isValid;

    OAIGetPoliciesStatsResponse_SecurityConfigStats m_security_config_stats;
    bool m_security_config_stats_isSet;
    bool m_security_config_stats_isValid;

    OAIGetPoliciesStatsResponse_SecurityPolicyStats m_security_policy_stats;
    bool m_security_policy_stats_isSet;
    bool m_security_policy_stats_isValid;

    qint32 m_total_policy_count;
    bool m_total_policy_count_isSet;
    bool m_total_policy_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetPoliciesStatsResponse)

#endif // OAIGetPoliciesStatsResponse_H
