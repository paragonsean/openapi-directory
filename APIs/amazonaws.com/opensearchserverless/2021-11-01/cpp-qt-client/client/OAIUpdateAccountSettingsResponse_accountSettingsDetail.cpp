/**
 * OpenSearch Service Serverless
 * <p>Use the Amazon OpenSearch Serverless API to create, configure, and manage OpenSearch Serverless collections and security policies.</p> <p>OpenSearch Serverless is an on-demand, pre-provisioned serverless configuration for Amazon OpenSearch Service. OpenSearch Serverless removes the operational complexities of provisioning, configuring, and tuning your OpenSearch clusters. It enables you to easily search and analyze petabytes of data without having to worry about the underlying infrastructure and data management.</p> <p> To learn more about OpenSearch Serverless, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-overview.html\">What is Amazon OpenSearch Serverless?</a> </p>
 *
 * The version of the OpenAPI document: 2021-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateAccountSettingsResponse_accountSettingsDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateAccountSettingsResponse_accountSettingsDetail::OAIUpdateAccountSettingsResponse_accountSettingsDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateAccountSettingsResponse_accountSettingsDetail::OAIUpdateAccountSettingsResponse_accountSettingsDetail() {
    this->initializeModel();
}

OAIUpdateAccountSettingsResponse_accountSettingsDetail::~OAIUpdateAccountSettingsResponse_accountSettingsDetail() {}

void OAIUpdateAccountSettingsResponse_accountSettingsDetail::initializeModel() {

    m_capacity_limits_isSet = false;
    m_capacity_limits_isValid = false;
}

void OAIUpdateAccountSettingsResponse_accountSettingsDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateAccountSettingsResponse_accountSettingsDetail::fromJsonObject(QJsonObject json) {

    m_capacity_limits_isValid = ::OpenAPI::fromJsonValue(m_capacity_limits, json[QString("capacityLimits")]);
    m_capacity_limits_isSet = !json[QString("capacityLimits")].isNull() && m_capacity_limits_isValid;
}

QString OAIUpdateAccountSettingsResponse_accountSettingsDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateAccountSettingsResponse_accountSettingsDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_capacity_limits.isSet()) {
        obj.insert(QString("capacityLimits"), ::OpenAPI::toJsonValue(m_capacity_limits));
    }
    return obj;
}

OAICapacityLimits OAIUpdateAccountSettingsResponse_accountSettingsDetail::getCapacityLimits() const {
    return m_capacity_limits;
}
void OAIUpdateAccountSettingsResponse_accountSettingsDetail::setCapacityLimits(const OAICapacityLimits &capacity_limits) {
    m_capacity_limits = capacity_limits;
    m_capacity_limits_isSet = true;
}

bool OAIUpdateAccountSettingsResponse_accountSettingsDetail::is_capacity_limits_Set() const{
    return m_capacity_limits_isSet;
}

bool OAIUpdateAccountSettingsResponse_accountSettingsDetail::is_capacity_limits_Valid() const{
    return m_capacity_limits_isValid;
}

bool OAIUpdateAccountSettingsResponse_accountSettingsDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_capacity_limits.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateAccountSettingsResponse_accountSettingsDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
