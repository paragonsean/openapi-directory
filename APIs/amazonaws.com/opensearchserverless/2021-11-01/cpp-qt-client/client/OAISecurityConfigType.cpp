/**
 * OpenSearch Service Serverless
 * <p>Use the Amazon OpenSearch Serverless API to create, configure, and manage OpenSearch Serverless collections and security policies.</p> <p>OpenSearch Serverless is an on-demand, pre-provisioned serverless configuration for Amazon OpenSearch Service. OpenSearch Serverless removes the operational complexities of provisioning, configuring, and tuning your OpenSearch clusters. It enables you to easily search and analyze petabytes of data without having to worry about the underlying infrastructure and data management.</p> <p> To learn more about OpenSearch Serverless, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-overview.html\">What is Amazon OpenSearch Serverless?</a> </p>
 *
 * The version of the OpenAPI document: 2021-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISecurityConfigType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISecurityConfigType::OAISecurityConfigType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISecurityConfigType::OAISecurityConfigType() {
    this->initializeModel();
}

OAISecurityConfigType::~OAISecurityConfigType() {}

void OAISecurityConfigType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISecurityConfigType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISecurityConfigType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("saml", Qt::CaseInsensitive) == 0) {
        m_value = eOAISecurityConfigType::SAML;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISecurityConfigType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISecurityConfigType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISecurityConfigType::SAML:
            val = "saml";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISecurityConfigType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISecurityConfigType::eOAISecurityConfigType OAISecurityConfigType::getValue() const {
    return m_value;
}

void OAISecurityConfigType::setValue(const OAISecurityConfigType::eOAISecurityConfigType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISecurityConfigType::isSet() const {
    
    return m_value_isSet;
}

bool OAISecurityConfigType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
