/**
 * OpenSearch Service Serverless
 * <p>Use the Amazon OpenSearch Serverless API to create, configure, and manage OpenSearch Serverless collections and security policies.</p> <p>OpenSearch Serverless is an on-demand, pre-provisioned serverless configuration for Amazon OpenSearch Service. OpenSearch Serverless removes the operational complexities of provisioning, configuring, and tuning your OpenSearch clusters. It enables you to easily search and analyze petabytes of data without having to worry about the underlying infrastructure and data management.</p> <p> To learn more about OpenSearch Serverless, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-overview.html\">What is Amazon OpenSearch Serverless?</a> </p>
 *
 * The version of the OpenAPI document: 2021-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.OpenSearchServiceServerless);
  }
}(this, function(expect, OpenSearchServiceServerless) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new OpenSearchServiceServerless.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('batchGetCollection', function() {
      it('should call batchGetCollection successfully', function(done) {
        //uncomment below and update the code to test batchGetCollection
        //instance.batchGetCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('batchGetVpcEndpoint', function() {
      it('should call batchGetVpcEndpoint successfully', function(done) {
        //uncomment below and update the code to test batchGetVpcEndpoint
        //instance.batchGetVpcEndpoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createAccessPolicy', function() {
      it('should call createAccessPolicy successfully', function(done) {
        //uncomment below and update the code to test createAccessPolicy
        //instance.createAccessPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createCollection', function() {
      it('should call createCollection successfully', function(done) {
        //uncomment below and update the code to test createCollection
        //instance.createCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSecurityConfig', function() {
      it('should call createSecurityConfig successfully', function(done) {
        //uncomment below and update the code to test createSecurityConfig
        //instance.createSecurityConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSecurityPolicy', function() {
      it('should call createSecurityPolicy successfully', function(done) {
        //uncomment below and update the code to test createSecurityPolicy
        //instance.createSecurityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createVpcEndpoint', function() {
      it('should call createVpcEndpoint successfully', function(done) {
        //uncomment below and update the code to test createVpcEndpoint
        //instance.createVpcEndpoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteAccessPolicy', function() {
      it('should call deleteAccessPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteAccessPolicy
        //instance.deleteAccessPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteCollection', function() {
      it('should call deleteCollection successfully', function(done) {
        //uncomment below and update the code to test deleteCollection
        //instance.deleteCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSecurityConfig', function() {
      it('should call deleteSecurityConfig successfully', function(done) {
        //uncomment below and update the code to test deleteSecurityConfig
        //instance.deleteSecurityConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSecurityPolicy', function() {
      it('should call deleteSecurityPolicy successfully', function(done) {
        //uncomment below and update the code to test deleteSecurityPolicy
        //instance.deleteSecurityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteVpcEndpoint', function() {
      it('should call deleteVpcEndpoint successfully', function(done) {
        //uncomment below and update the code to test deleteVpcEndpoint
        //instance.deleteVpcEndpoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccessPolicy', function() {
      it('should call getAccessPolicy successfully', function(done) {
        //uncomment below and update the code to test getAccessPolicy
        //instance.getAccessPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccountSettings', function() {
      it('should call getAccountSettings successfully', function(done) {
        //uncomment below and update the code to test getAccountSettings
        //instance.getAccountSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPoliciesStats', function() {
      it('should call getPoliciesStats successfully', function(done) {
        //uncomment below and update the code to test getPoliciesStats
        //instance.getPoliciesStats(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSecurityConfig', function() {
      it('should call getSecurityConfig successfully', function(done) {
        //uncomment below and update the code to test getSecurityConfig
        //instance.getSecurityConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSecurityPolicy', function() {
      it('should call getSecurityPolicy successfully', function(done) {
        //uncomment below and update the code to test getSecurityPolicy
        //instance.getSecurityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listAccessPolicies', function() {
      it('should call listAccessPolicies successfully', function(done) {
        //uncomment below and update the code to test listAccessPolicies
        //instance.listAccessPolicies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCollections', function() {
      it('should call listCollections successfully', function(done) {
        //uncomment below and update the code to test listCollections
        //instance.listCollections(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSecurityConfigs', function() {
      it('should call listSecurityConfigs successfully', function(done) {
        //uncomment below and update the code to test listSecurityConfigs
        //instance.listSecurityConfigs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSecurityPolicies', function() {
      it('should call listSecurityPolicies successfully', function(done) {
        //uncomment below and update the code to test listSecurityPolicies
        //instance.listSecurityPolicies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listVpcEndpoints', function() {
      it('should call listVpcEndpoints successfully', function(done) {
        //uncomment below and update the code to test listVpcEndpoints
        //instance.listVpcEndpoints(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAccessPolicy', function() {
      it('should call updateAccessPolicy successfully', function(done) {
        //uncomment below and update the code to test updateAccessPolicy
        //instance.updateAccessPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAccountSettings', function() {
      it('should call updateAccountSettings successfully', function(done) {
        //uncomment below and update the code to test updateAccountSettings
        //instance.updateAccountSettings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateCollection', function() {
      it('should call updateCollection successfully', function(done) {
        //uncomment below and update the code to test updateCollection
        //instance.updateCollection(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSecurityConfig', function() {
      it('should call updateSecurityConfig successfully', function(done) {
        //uncomment below and update the code to test updateSecurityConfig
        //instance.updateSecurityConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSecurityPolicy', function() {
      it('should call updateSecurityPolicy successfully', function(done) {
        //uncomment below and update the code to test updateSecurityPolicy
        //instance.updateSecurityPolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateVpcEndpoint', function() {
      it('should call updateVpcEndpoint successfully', function(done) {
        //uncomment below and update the code to test updateVpcEndpoint
        //instance.updateVpcEndpoint(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
