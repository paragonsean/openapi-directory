openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: "<p>Use the Amazon OpenSearch Serverless API to create, configure,\
    \ and manage OpenSearch Serverless collections and security policies.</p> <p>OpenSearch\
    \ Serverless is an on-demand, pre-provisioned serverless configuration for Amazon\
    \ OpenSearch Service. OpenSearch Serverless removes the operational complexities\
    \ of provisioning, configuring, and tuning your OpenSearch clusters. It enables\
    \ you to easily search and analyze petabytes of data without having to worry about\
    \ the underlying infrastructure and data management.</p> <p> To learn more about\
    \ OpenSearch Serverless, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-overview.html\"\
    >What is Amazon OpenSearch Serverless?</a> </p>"
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: OpenSearch Service Serverless
  version: 2021-11-01
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: opensearchserverless
  x-aws-signingName: aoss
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/opensearchserverless-2021-11-01.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/aoss/
servers:
- description: The OpenSearch Service Serverless multi-region endpoint
  url: "http://aoss.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The OpenSearch Service Serverless multi-region endpoint
  url: "https://aoss.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The OpenSearch Service Serverless endpoint for China (Beijing) and
    China (Ningxia)
  url: "http://aoss.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The OpenSearch Service Serverless endpoint for China (Beijing) and
    China (Ningxia)
  url: "https://aoss.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /#X-Amz-Target=OpenSearchServerless.BatchGetCollection:
    post:
      description: "Returns attributes for one or more collections, including the\
        \ collection endpoint and the OpenSearch Dashboards endpoint. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-manage.html\"\
        >Creating and managing Amazon OpenSearch Serverless collections</a>."
      operationId: batch_get_collection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.BatchGetCollection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetCollectionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetCollectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.BatchGetVpcEndpoint:
    post:
      description: "Returns attributes for one or more VPC endpoints associated with\
        \ the current account. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-vpc.html\"\
        >Access Amazon OpenSearch Serverless using an interface endpoint</a>."
      operationId: batch_get_vpc_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.BatchGetVpcEndpoint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetVpcEndpointRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetVpcEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.CreateAccessPolicy:
    post:
      description: "Creates a data access policy for OpenSearch Serverless. Access\
        \ policies limit access to collections and the resources within them, and\
        \ allow a user to access that data irrespective of the access mechanism or\
        \ network source. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-data-access.html\"\
        >Data access control for Amazon OpenSearch Serverless</a>."
      operationId: create_access_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.CreateAccessPolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccessPolicyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateAccessPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.CreateCollection:
    post:
      description: "Creates a new OpenSearch Serverless collection. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-manage.html\"\
        >Creating and managing Amazon OpenSearch Serverless collections</a>."
      operationId: create_collection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.CreateCollection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCollectionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCollectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OcuLimitExceededException'
          description: OcuLimitExceededException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.CreateSecurityConfig:
    post:
      description: "Specifies a security configuration for OpenSearch Serverless.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-saml.html\"\
        >SAML authentication for Amazon OpenSearch Serverless</a>. "
      operationId: create_security_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.CreateSecurityConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecurityConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSecurityConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.CreateSecurityPolicy:
    post:
      description: "Creates a security policy to be used by one or more OpenSearch\
        \ Serverless collections. Security policies provide access to a collection\
        \ and its OpenSearch Dashboards endpoint from public networks or specific\
        \ VPC endpoints. They also allow you to secure a collection with a KMS encryption\
        \ key. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-network.html\"\
        >Network access for Amazon OpenSearch Serverless</a> and <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-encryption.html\"\
        >Encryption at rest for Amazon OpenSearch Serverless</a>."
      operationId: create_security_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.CreateSecurityPolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecurityPolicyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSecurityPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.CreateVpcEndpoint:
    post:
      description: "Creates an OpenSearch Serverless-managed interface VPC endpoint.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-vpc.html\"\
        >Access Amazon OpenSearch Serverless using an interface endpoint</a>."
      operationId: create_vpc_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.CreateVpcEndpoint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVpcEndpointRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateVpcEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.DeleteAccessPolicy:
    post:
      description: "Deletes an OpenSearch Serverless access policy. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-data-access.html\"\
        >Data access control for Amazon OpenSearch Serverless</a>."
      operationId: delete_access_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.DeleteAccessPolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteAccessPolicyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteAccessPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.DeleteCollection:
    post:
      description: "Deletes an OpenSearch Serverless collection. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-manage.html\"\
        >Creating and managing Amazon OpenSearch Serverless collections</a>."
      operationId: delete_collection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.DeleteCollection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCollectionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteCollectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.DeleteSecurityConfig:
    post:
      description: "Deletes a security configuration for OpenSearch Serverless. For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-saml.html\"\
        >SAML authentication for Amazon OpenSearch Serverless</a>."
      operationId: delete_security_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.DeleteSecurityConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSecurityConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSecurityConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.DeleteSecurityPolicy:
    post:
      description: Deletes an OpenSearch Serverless security policy.
      operationId: delete_security_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.DeleteSecurityPolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSecurityPolicyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSecurityPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.DeleteVpcEndpoint:
    post:
      description: "Deletes an OpenSearch Serverless-managed interface endpoint. For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-vpc.html\"\
        >Access Amazon OpenSearch Serverless using an interface endpoint</a>."
      operationId: delete_vpc_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.DeleteVpcEndpoint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteVpcEndpointRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteVpcEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.GetAccessPolicy:
    post:
      description: "Returns an OpenSearch Serverless access policy. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-data-access.html\"\
        >Data access control for Amazon OpenSearch Serverless</a>."
      operationId: get_access_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.GetAccessPolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccessPolicyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccessPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.GetAccountSettings:
    post:
      description: Returns account-level settings related to OpenSearch Serverless.
      operationId: get_account_settings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.GetAccountSettings
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetAccountSettingsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.GetPoliciesStats:
    post:
      description: "Returns statistical information about your OpenSearch Serverless\
        \ access policies, security configurations, and security policies."
      operationId: get_policies_stats
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.GetPoliciesStats
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetPoliciesStatsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetPoliciesStatsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.GetSecurityConfig:
    post:
      description: "Returns information about an OpenSearch Serverless security configuration.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-saml.html\"\
        >SAML authentication for Amazon OpenSearch Serverless</a>."
      operationId: get_security_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.GetSecurityConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSecurityConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSecurityConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.GetSecurityPolicy:
    post:
      description: "Returns information about a configured OpenSearch Serverless security\
        \ policy. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-network.html\"\
        >Network access for Amazon OpenSearch Serverless</a> and <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-encryption.html\"\
        >Encryption at rest for Amazon OpenSearch Serverless</a>."
      operationId: get_security_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.GetSecurityPolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSecurityPolicyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSecurityPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.ListAccessPolicies:
    post:
      description: Returns information about a list of OpenSearch Serverless access
        policies.
      operationId: list_access_policies
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.ListAccessPolicies
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListAccessPoliciesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListAccessPoliciesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.ListCollections:
    post:
      description: "<p>Lists all OpenSearch Serverless collections. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-manage.html\"\
        >Creating and managing Amazon OpenSearch Serverless collections</a>.</p> <note>\
        \ <p>Make sure to include an empty request body {} if you don't include any\
        \ collection filters in the request.</p> </note>"
      operationId: list_collections
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.ListCollections
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListCollectionsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListCollectionsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.ListSecurityConfigs:
    post:
      description: "Returns information about configured OpenSearch Serverless security\
        \ configurations. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-saml.html\"\
        >SAML authentication for Amazon OpenSearch Serverless</a>."
      operationId: list_security_configs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.ListSecurityConfigs
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSecurityConfigsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSecurityConfigsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.ListSecurityPolicies:
    post:
      description: Returns information about configured OpenSearch Serverless security
        policies.
      operationId: list_security_policies
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.ListSecurityPolicies
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSecurityPoliciesRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSecurityPoliciesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.ListTagsForResource:
    post:
      description: "Returns the tags for an OpenSearch Serverless resource. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/tag-collection.html\"\
        >Tagging Amazon OpenSearch Serverless collections</a>."
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.ListTagsForResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.ListVpcEndpoints:
    post:
      description: "Returns the OpenSearch Serverless-managed interface VPC endpoints\
        \ associated with the current account. For more information, see <a href=\"\
        https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-vpc.html\"\
        >Access Amazon OpenSearch Serverless using an interface endpoint</a>."
      operationId: list_vpc_endpoints
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.ListVpcEndpoints
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListVpcEndpointsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListVpcEndpointsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.TagResource:
    post:
      description: "Associates tags with an OpenSearch Serverless resource. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/tag-collection.html\"\
        >Tagging Amazon OpenSearch Serverless collections</a>."
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.TagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.UntagResource:
    post:
      description: "Removes a tag or set of tags from an OpenSearch Serverless resource.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/tag-collection.html\"\
        >Tagging Amazon OpenSearch Serverless collections</a>."
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.UntagResource
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResourceRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.UpdateAccessPolicy:
    post:
      description: "Updates an OpenSearch Serverless access policy. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-data-access.html\"\
        >Data access control for Amazon OpenSearch Serverless</a>."
      operationId: update_access_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.UpdateAccessPolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccessPolicyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccessPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.UpdateAccountSettings:
    post:
      description: "Update the OpenSearch Serverless settings for the current Amazon\
        \ Web Services account. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-scaling.html\"\
        >Managing capacity limits for Amazon OpenSearch Serverless</a>."
      operationId: update_account_settings
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.UpdateAccountSettings
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccountSettingsRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateAccountSettingsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.UpdateCollection:
    post:
      description: Updates an OpenSearch Serverless collection.
      operationId: update_collection
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.UpdateCollection
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCollectionRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateCollectionResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.UpdateSecurityConfig:
    post:
      description: "Updates a security configuration for OpenSearch Serverless. For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-saml.html\"\
        >SAML authentication for Amazon OpenSearch Serverless</a>."
      operationId: update_security_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.UpdateSecurityConfig
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSecurityConfigRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSecurityConfigResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.UpdateSecurityPolicy:
    post:
      description: "Updates an OpenSearch Serverless security policy. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-network.html\"\
        >Network access for Amazon OpenSearch Serverless</a> and <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-encryption.html\"\
        >Encryption at rest for Amazon OpenSearch Serverless</a>."
      operationId: update_security_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.UpdateSecurityPolicy
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSecurityPolicyRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSecurityPolicyResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /#X-Amz-Target=OpenSearchServerless.UpdateVpcEndpoint:
    post:
      description: "Updates an OpenSearch Serverless-managed interface endpoint. For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-vpc.html\"\
        >Access Amazon OpenSearch Serverless using an interface endpoint</a>."
      operationId: update_vpc_endpoint
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Target
        required: true
        schema:
          enum:
          - OpenSearchServerless.UpdateVpcEndpoint
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateVpcEndpointRequest'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateVpcEndpointResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServerException'
          description: InternalServerException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    BatchGetCollectionResponse:
      example:
        collectionDetails: ""
        collectionErrorDetails: ""
      properties:
        collectionDetails:
          allOf:
          - $ref: '#/components/schemas/CollectionDetails'
          - description: Details about each collection.
          title: collectionDetails
        collectionErrorDetails:
          allOf:
          - $ref: '#/components/schemas/CollectionErrorDetails'
          - description: Error information for the request.
          title: collectionErrorDetails
      title: BatchGetCollectionResponse
      type: object
    BatchGetCollectionRequest:
      example:
        names: ""
        ids: ""
      properties:
        ids:
          allOf:
          - $ref: '#/components/schemas/CollectionIds'
          - description: A list of collection IDs. You can't provide names and IDs
              in the same request. The ID is part of the collection endpoint. You
              can also retrieve it using the <a href="https://docs.aws.amazon.com/opensearch-service/latest/ServerlessAPIReference/API_ListCollections.html">ListCollections</a>
              API.
          title: ids
        names:
          allOf:
          - $ref: '#/components/schemas/CollectionNames'
          - description: A list of collection names. You can't provide names and IDs
              in the same request.
          title: names
      title: BatchGetCollectionRequest
      type: object
    InternalServerException: {}
    ValidationException: {}
    BatchGetVpcEndpointResponse:
      example:
        vpcEndpointErrorDetails: ""
        vpcEndpointDetails: ""
      properties:
        vpcEndpointDetails:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointDetails'
          - description: Details about the specified VPC endpoint.
          title: vpcEndpointDetails
        vpcEndpointErrorDetails:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointErrorDetails'
          - description: Error information for a failed request.
          title: vpcEndpointErrorDetails
      title: BatchGetVpcEndpointResponse
      type: object
    BatchGetVpcEndpointRequest:
      example:
        ids: ""
      properties:
        ids:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointIds'
          - description: A list of VPC endpoint identifiers.
          title: ids
      required:
      - ids
      title: BatchGetVpcEndpointRequest
      type: object
    CreateAccessPolicyResponse:
      example:
        accessPolicyDetail:
          policyVersion: ""
          createdDate: ""
          lastModifiedDate: ""
          name: ""
          description: ""
          type: ""
          policy: ""
      properties:
        accessPolicyDetail:
          $ref: '#/components/schemas/CreateAccessPolicyResponse_accessPolicyDetail'
      title: CreateAccessPolicyResponse
      type: object
    CreateAccessPolicyRequest:
      example:
        clientToken: ""
        name: ""
        description: ""
        type: ""
        policy: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier to ensure idempotency\
              \ of the request."
          title: clientToken
        description:
          allOf:
          - $ref: '#/components/schemas/PolicyDescription'
          - description: A description of the policy. Typically used to store information
              about the permissions defined in the policy.
          title: description
        name:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          - description: The name of the policy.
          title: name
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          - description: The JSON policy document to use as the content for the policy.
          title: policy
        type:
          allOf:
          - $ref: '#/components/schemas/AccessPolicyType'
          - description: The type of policy.
          title: type
      required:
      - name
      - policy
      - type
      title: CreateAccessPolicyRequest
      type: object
    ConflictException: {}
    ServiceQuotaExceededException: {}
    CreateCollectionResponse:
      example:
        createCollectionDetail:
          createdDate: ""
          lastModifiedDate: ""
          kmsKeyArn: ""
          name: ""
          description: ""
          id: ""
          arn: ""
          type: ""
          status: ""
      properties:
        createCollectionDetail:
          $ref: '#/components/schemas/CreateCollectionResponse_createCollectionDetail'
      title: CreateCollectionResponse
      type: object
    CreateCollectionRequest:
      example:
        clientToken: ""
        name: ""
        description: ""
        type: ""
        tags: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier to ensure idempotency\
              \ of the request."
          title: clientToken
        description:
          allOf:
          - $ref: '#/components/schemas/CreateCollectionRequestDescriptionString'
          - description: Description of the collection.
          title: description
        name:
          allOf:
          - $ref: '#/components/schemas/CollectionName'
          - description: Name of the collection.
          title: name
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: An arbitrary set of tags (key–value pairs) to associate with
              the OpenSearch Serverless collection.
          title: tags
        type:
          allOf:
          - $ref: '#/components/schemas/CollectionType'
          - description: The type of collection.
          title: type
      required:
      - name
      title: CreateCollectionRequest
      type: object
    OcuLimitExceededException: {}
    CreateSecurityConfigResponse:
      example:
        securityConfigDetail:
          samlOptions:
            groupAttribute: ""
            metadata: ""
            userAttribute: ""
            sessionTimeout: ""
          createdDate: ""
          configVersion: ""
          lastModifiedDate: ""
          description: ""
          id: ""
          type: ""
      properties:
        securityConfigDetail:
          $ref: '#/components/schemas/CreateSecurityConfigResponse_securityConfigDetail'
      title: CreateSecurityConfigResponse
      type: object
    CreateSecurityConfigRequest:
      example:
        samlOptions:
          groupAttribute: ""
          metadata: ""
          userAttribute: ""
          sessionTimeout: ""
        clientToken: ""
        name: ""
        description: ""
        type: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier to ensure idempotency\
              \ of the request."
          title: clientToken
        description:
          allOf:
          - $ref: '#/components/schemas/ConfigDescription'
          - description: A description of the security configuration.
          title: description
        name:
          allOf:
          - $ref: '#/components/schemas/ConfigName'
          - description: The name of the security configuration.
          title: name
        samlOptions:
          $ref: '#/components/schemas/CreateSecurityConfigRequest_samlOptions'
        type:
          allOf:
          - $ref: '#/components/schemas/SecurityConfigType'
          - description: The type of security configuration.
          title: type
      required:
      - name
      - type
      title: CreateSecurityConfigRequest
      type: object
    CreateSecurityPolicyResponse:
      example:
        securityPolicyDetail:
          policyVersion: ""
          createdDate: ""
          lastModifiedDate: ""
          name: ""
          description: ""
          type: ""
          policy: ""
      properties:
        securityPolicyDetail:
          $ref: '#/components/schemas/CreateSecurityPolicyResponse_securityPolicyDetail'
      title: CreateSecurityPolicyResponse
      type: object
    CreateSecurityPolicyRequest:
      example:
        clientToken: ""
        name: ""
        description: ""
        type: ""
        policy: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier to ensure idempotency\
              \ of the request."
          title: clientToken
        description:
          allOf:
          - $ref: '#/components/schemas/PolicyDescription'
          - description: A description of the policy. Typically used to store information
              about the permissions defined in the policy.
          title: description
        name:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          - description: The name of the policy.
          title: name
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          - description: The JSON policy document to use as the content for the new
              policy.
          title: policy
        type:
          allOf:
          - $ref: '#/components/schemas/SecurityPolicyType'
          - description: The type of security policy.
          title: type
      required:
      - name
      - policy
      - type
      title: CreateSecurityPolicyRequest
      type: object
    CreateVpcEndpointResponse:
      example:
        createVpcEndpointDetail:
          name: ""
          id: ""
          status: ""
      properties:
        createVpcEndpointDetail:
          $ref: '#/components/schemas/CreateVpcEndpointResponse_createVpcEndpointDetail'
      title: CreateVpcEndpointResponse
      type: object
    CreateVpcEndpointRequest:
      example:
        clientToken: ""
        securityGroupIds: ""
        vpcId: ""
        name: ""
        subnetIds: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier to ensure idempotency\
              \ of the request."
          title: clientToken
        name:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointName'
          - description: The name of the interface endpoint.
          title: name
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          - description: "The unique identifiers of the security groups that define\
              \ the ports, protocols, and sources for inbound traffic that you are\
              \ authorizing into your endpoint."
          title: securityGroupIds
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          - description: The ID of one or more subnets from which you'll access OpenSearch
              Serverless.
          title: subnetIds
        vpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: The ID of the VPC from which you'll access OpenSearch Serverless.
          title: vpcId
      required:
      - name
      - subnetIds
      - vpcId
      title: CreateVpcEndpointRequest
      type: object
    DeleteAccessPolicyResponse:
      properties: {}
      type: object
    DeleteAccessPolicyRequest:
      example:
        clientToken: ""
        name: ""
        type: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier to ensure idempotency\
              \ of the request."
          title: clientToken
        name:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          - description: The name of the policy to delete.
          title: name
        type:
          allOf:
          - $ref: '#/components/schemas/AccessPolicyType'
          - description: The type of policy.
          title: type
      required:
      - name
      - type
      title: DeleteAccessPolicyRequest
      type: object
    ResourceNotFoundException: {}
    DeleteCollectionResponse:
      example:
        deleteCollectionDetail:
          name: ""
          id: ""
          status: ""
      properties:
        deleteCollectionDetail:
          $ref: '#/components/schemas/DeleteCollectionResponse_deleteCollectionDetail'
      title: DeleteCollectionResponse
      type: object
    DeleteCollectionRequest:
      example:
        clientToken: ""
        id: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "A unique, case-sensitive identifier to ensure idempotency\
              \ of the request."
          title: clientToken
        id:
          allOf:
          - $ref: '#/components/schemas/CollectionId'
          - description: "The unique identifier of the collection. For example, <code>1iu5usc406kd</code>.\
              \ The ID is part of the collection endpoint. You can also retrieve it\
              \ using the <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/ServerlessAPIReference/API_ListCollections.html\"\
              >ListCollections</a> API."
          title: id
      required:
      - id
      title: DeleteCollectionRequest
      type: object
    DeleteSecurityConfigResponse:
      properties: {}
      type: object
    DeleteSecurityConfigRequest:
      example:
        clientToken: ""
        id: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier to ensure idempotency\
              \ of the request."
          title: clientToken
        id:
          allOf:
          - $ref: '#/components/schemas/SecurityConfigId'
          - description: "The security configuration identifier. For SAML the ID will\
              \ be <code>saml/&lt;accountId&gt;/&lt;idpProviderName&gt;</code>. For\
              \ example, <code>saml/123456789123/OKTADev</code>."
          title: id
      required:
      - id
      title: DeleteSecurityConfigRequest
      type: object
    DeleteSecurityPolicyResponse:
      properties: {}
      type: object
    DeleteSecurityPolicyRequest:
      example:
        clientToken: ""
        name: ""
        type: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier to ensure idempotency\
              \ of the request."
          title: clientToken
        name:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          - description: The name of the policy to delete.
          title: name
        type:
          allOf:
          - $ref: '#/components/schemas/SecurityPolicyType'
          - description: The type of policy.
          title: type
      required:
      - name
      - type
      title: DeleteSecurityPolicyRequest
      type: object
    DeleteVpcEndpointResponse:
      example:
        deleteVpcEndpointDetail:
          name: ""
          id: ""
          status: ""
      properties:
        deleteVpcEndpointDetail:
          $ref: '#/components/schemas/DeleteVpcEndpointResponse_deleteVpcEndpointDetail'
      title: DeleteVpcEndpointResponse
      type: object
    DeleteVpcEndpointRequest:
      example:
        clientToken: ""
        id: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier to ensure idempotency\
              \ of the request."
          title: clientToken
        id:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointId'
          - description: The VPC endpoint identifier.
          title: id
      required:
      - id
      title: DeleteVpcEndpointRequest
      type: object
    GetAccessPolicyResponse:
      example:
        accessPolicyDetail:
          policyVersion: ""
          createdDate: ""
          lastModifiedDate: ""
          name: ""
          description: ""
          type: ""
          policy: ""
      properties:
        accessPolicyDetail:
          $ref: '#/components/schemas/GetAccessPolicyResponse_accessPolicyDetail'
      title: GetAccessPolicyResponse
      type: object
    GetAccessPolicyRequest:
      example:
        name: ""
        type: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          - description: The name of the access policy.
          title: name
        type:
          allOf:
          - $ref: '#/components/schemas/AccessPolicyType'
          - description: Tye type of policy. Currently the only supported value is
              <code>data</code>.
          title: type
      required:
      - name
      - type
      title: GetAccessPolicyRequest
      type: object
    GetAccountSettingsResponse:
      example:
        accountSettingsDetail:
          capacityLimits:
            maxSearchCapacityInOCU: ""
            maxIndexingCapacityInOCU: ""
      properties:
        accountSettingsDetail:
          $ref: '#/components/schemas/GetAccountSettingsResponse_accountSettingsDetail'
      title: GetAccountSettingsResponse
      type: object
    GetAccountSettingsRequest:
      properties: {}
      title: GetAccountSettingsRequest
      type: object
    GetPoliciesStatsResponse:
      example:
        TotalPolicyCount: ""
        SecurityPolicyStats:
          NetworkPolicyCount: ""
          EncryptionPolicyCount: ""
        SecurityConfigStats:
          SamlConfigCount: ""
        AccessPolicyStats:
          DataPolicyCount: ""
      properties:
        AccessPolicyStats:
          $ref: '#/components/schemas/GetPoliciesStatsResponse_AccessPolicyStats'
        SecurityConfigStats:
          $ref: '#/components/schemas/GetPoliciesStatsResponse_SecurityConfigStats'
        SecurityPolicyStats:
          $ref: '#/components/schemas/GetPoliciesStatsResponse_SecurityPolicyStats'
        TotalPolicyCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The total number of OpenSearch Serverless security policies
              and configurations in your account.
          title: TotalPolicyCount
      title: GetPoliciesStatsResponse
      type: object
    GetPoliciesStatsRequest:
      properties: {}
      title: GetPoliciesStatsRequest
      type: object
    GetSecurityConfigResponse:
      example:
        securityConfigDetail:
          samlOptions:
            groupAttribute: ""
            metadata: ""
            userAttribute: ""
            sessionTimeout: ""
          createdDate: ""
          configVersion: ""
          lastModifiedDate: ""
          description: ""
          id: ""
          type: ""
      properties:
        securityConfigDetail:
          $ref: '#/components/schemas/GetSecurityConfigResponse_securityConfigDetail'
      title: GetSecurityConfigResponse
      type: object
    GetSecurityConfigRequest:
      example:
        id: ""
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/SecurityConfigId'
          - description: The unique identifier of the security configuration.
          title: id
      required:
      - id
      title: GetSecurityConfigRequest
      type: object
    GetSecurityPolicyResponse:
      example:
        securityPolicyDetail:
          policyVersion: ""
          createdDate: ""
          lastModifiedDate: ""
          name: ""
          description: ""
          type: ""
          policy: ""
      properties:
        securityPolicyDetail:
          $ref: '#/components/schemas/GetSecurityPolicyResponse_securityPolicyDetail'
      title: GetSecurityPolicyResponse
      type: object
    GetSecurityPolicyRequest:
      example:
        name: ""
        type: ""
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          - description: The name of the security policy.
          title: name
        type:
          allOf:
          - $ref: '#/components/schemas/SecurityPolicyType'
          - description: The type of security policy.
          title: type
      required:
      - name
      - type
      title: GetSecurityPolicyRequest
      type: object
    ListAccessPoliciesResponse:
      example:
        nextToken: ""
        accessPolicySummaries: ""
      properties:
        accessPolicySummaries:
          allOf:
          - $ref: '#/components/schemas/AccessPolicySummaries'
          - description: Details about the requested access policies.
          title: accessPolicySummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "When <code>nextToken</code> is returned, there are more\
              \ results available. The value of <code>nextToken</code> is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page."
          title: nextToken
      title: ListAccessPoliciesResponse
      type: object
    ListAccessPoliciesRequest:
      example:
        resource: ""
        maxResults: ""
        nextToken: ""
        type: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListAccessPoliciesRequestMaxResultsInteger'
          - description: An optional parameter that specifies the maximum number of
              results to return. You can use <code>nextToken</code> to get the next
              page of results. The default is 20.
          title: maxResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If your initial <code>ListAccessPolicies</code> operation\
              \ returns a <code>nextToken</code>, you can include the returned <code>nextToken</code>\
              \ in subsequent <code>ListAccessPolicies</code> operations, which returns\
              \ results in the next page. "
          title: nextToken
        resource:
          allOf:
          - $ref: '#/components/schemas/ListAccessPoliciesRequestResourceList'
          - description: Resource filters (can be collections or indexes) that policies
              can apply to.
          title: resource
        type:
          allOf:
          - $ref: '#/components/schemas/AccessPolicyType'
          - description: The type of access policy.
          title: type
      required:
      - type
      title: ListAccessPoliciesRequest
      type: object
    ListCollectionsResponse:
      example:
        nextToken: ""
        collectionSummaries: ""
      properties:
        collectionSummaries:
          allOf:
          - $ref: '#/components/schemas/CollectionSummaries'
          - description: Details about each collection.
          title: collectionSummaries
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "When <code>nextToken</code> is returned, there are more\
              \ results available. The value of <code>nextToken</code> is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page."
          title: nextToken
      title: ListCollectionsResponse
      type: object
    ListCollectionsRequest:
      example:
        collectionFilters:
          name: ""
          status: ""
        maxResults: ""
        nextToken: ""
      properties:
        collectionFilters:
          $ref: '#/components/schemas/ListCollectionsRequest_collectionFilters'
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListCollectionsRequestMaxResultsInteger'
          - description: The maximum number of results to return. Default is 20. You
              can use <code>nextToken</code> to get the next page of results.
          title: maxResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If your initial <code>ListCollections</code> operation returns\
              \ a <code>nextToken</code>, you can include the returned <code>nextToken</code>\
              \ in subsequent <code>ListCollections</code> operations, which returns\
              \ results in the next page."
          title: nextToken
      title: ListCollectionsRequest
      type: object
    ListSecurityConfigsResponse:
      example:
        nextToken: ""
        securityConfigSummaries: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "When <code>nextToken</code> is returned, there are more\
              \ results available. The value of <code>nextToken</code> is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page."
          title: nextToken
        securityConfigSummaries:
          allOf:
          - $ref: '#/components/schemas/SecurityConfigSummaries'
          - description: Details about the security configurations in your account.
          title: securityConfigSummaries
      title: ListSecurityConfigsResponse
      type: object
    ListSecurityConfigsRequest:
      example:
        maxResults: ""
        nextToken: ""
        type: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListSecurityConfigsRequestMaxResultsInteger'
          - description: An optional parameter that specifies the maximum number of
              results to return. You can use <code>nextToken</code> to get the next
              page of results. The default is 20.
          title: maxResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If your initial <code>ListSecurityConfigs</code> operation\
              \ returns a <code>nextToken</code>, you can include the returned <code>nextToken</code>\
              \ in subsequent <code>ListSecurityConfigs</code> operations, which returns\
              \ results in the next page. "
          title: nextToken
        type:
          allOf:
          - $ref: '#/components/schemas/SecurityConfigType'
          - description: The type of security configuration.
          title: type
      required:
      - type
      title: ListSecurityConfigsRequest
      type: object
    ListSecurityPoliciesResponse:
      example:
        nextToken: ""
        securityPolicySummaries: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "When <code>nextToken</code> is returned, there are more\
              \ results available. The value of <code>nextToken</code> is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page."
          title: nextToken
        securityPolicySummaries:
          allOf:
          - $ref: '#/components/schemas/SecurityPolicySummaries'
          - description: Details about the security policies in your account.
          title: securityPolicySummaries
      title: ListSecurityPoliciesResponse
      type: object
    ListSecurityPoliciesRequest:
      example:
        resource: ""
        maxResults: ""
        nextToken: ""
        type: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListSecurityPoliciesRequestMaxResultsInteger'
          - description: An optional parameter that specifies the maximum number of
              results to return. You can use <code>nextToken</code> to get the next
              page of results. The default is 20.
          title: maxResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If your initial <code>ListSecurityPolicies</code> operation\
              \ returns a <code>nextToken</code>, you can include the returned <code>nextToken</code>\
              \ in subsequent <code>ListSecurityPolicies</code> operations, which\
              \ returns results in the next page. "
          title: nextToken
        resource:
          allOf:
          - $ref: '#/components/schemas/ListSecurityPoliciesRequestResourceList'
          - description: 'Resource filters (can be collection or indexes) that policies
              can apply to. '
          title: resource
        type:
          allOf:
          - $ref: '#/components/schemas/SecurityPolicyType'
          - description: The type of policy.
          title: type
      required:
      - type
      title: ListSecurityPoliciesRequest
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: The tags associated with the resource.
          title: tags
      title: ListTagsForResourceResponse
      type: object
    ListTagsForResourceRequest:
      example:
        resourceArn: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name (ARN) of the resource. The resource\
              \ must be active (not in the <code>DELETING</code> state), and must\
              \ be owned by the account ID included in the request."
          title: resourceArn
      required:
      - resourceArn
      title: ListTagsForResourceRequest
      type: object
    ListVpcEndpointsResponse:
      example:
        vpcEndpointSummaries: ""
        nextToken: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "When <code>nextToken</code> is returned, there are more\
              \ results available. The value of <code>nextToken</code> is a unique\
              \ pagination token for each page. Make the call again using the returned\
              \ token to retrieve the next page."
          title: nextToken
        vpcEndpointSummaries:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointSummaries'
          - description: "Details about each VPC endpoint, including the name and\
              \ current status."
          title: vpcEndpointSummaries
      title: ListVpcEndpointsResponse
      type: object
    ListVpcEndpointsRequest:
      example:
        maxResults: ""
        nextToken: ""
        vpcEndpointFilters:
          status: ""
      properties:
        maxResults:
          allOf:
          - $ref: '#/components/schemas/ListVpcEndpointsRequestMaxResultsInteger'
          - description: An optional parameter that specifies the maximum number of
              results to return. You can use <code>nextToken</code> to get the next
              page of results. The default is 20.
          title: maxResults
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If your initial <code>ListVpcEndpoints</code> operation\
              \ returns a <code>nextToken</code>, you can include the returned <code>nextToken</code>\
              \ in subsequent <code>ListVpcEndpoints</code> operations, which returns\
              \ results in the next page. "
          title: nextToken
        vpcEndpointFilters:
          $ref: '#/components/schemas/ListVpcEndpointsRequest_vpcEndpointFilters'
      title: ListVpcEndpointsRequest
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    TagResourceRequest:
      example:
        resourceArn: ""
        tags: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name (ARN) of the resource. The resource\
              \ must be active (not in the <code>DELETING</code> state), and must\
              \ be owned by the account ID included in the request."
          title: resourceArn
        tags:
          allOf:
          - $ref: '#/components/schemas/Tags'
          - description: A list of tags (key-value pairs) to add to the resource.
              All tag keys in the request must be unique.
          title: tags
      required:
      - resourceArn
      - tags
      title: TagResourceRequest
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    UntagResourceRequest:
      example:
        tagKeys: ""
        resourceArn: ""
      properties:
        resourceArn:
          allOf:
          - $ref: '#/components/schemas/Arn'
          - description: "The Amazon Resource Name (ARN) of the resource to remove\
              \ tags from. The resource must be active (not in the <code>DELETING</code>\
              \ state), and must be owned by the account ID included in the request."
          title: resourceArn
        tagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeys'
          - description: The tag or set of tags to remove from the resource. All tag
              keys in the request must be unique.
          title: tagKeys
      required:
      - resourceArn
      - tagKeys
      title: UntagResourceRequest
      type: object
    UpdateAccessPolicyResponse:
      example:
        accessPolicyDetail:
          policyVersion: ""
          createdDate: ""
          lastModifiedDate: ""
          name: ""
          description: ""
          type: ""
          policy: ""
      properties:
        accessPolicyDetail:
          $ref: '#/components/schemas/UpdateAccessPolicyResponse_accessPolicyDetail'
      title: UpdateAccessPolicyResponse
      type: object
    UpdateAccessPolicyRequest:
      example:
        policyVersion: ""
        clientToken: ""
        name: ""
        description: ""
        type: ""
        policy: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier to ensure idempotency\
              \ of the request."
          title: clientToken
        description:
          allOf:
          - $ref: '#/components/schemas/PolicyDescription'
          - description: A description of the policy. Typically used to store information
              about the permissions defined in the policy.
          title: description
        name:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          - description: The name of the policy.
          title: name
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          - description: The JSON policy document to use as the content for the policy.
          title: policy
        policyVersion:
          allOf:
          - $ref: '#/components/schemas/PolicyVersion'
          - description: The version of the policy being updated.
          title: policyVersion
        type:
          allOf:
          - $ref: '#/components/schemas/AccessPolicyType'
          - description: The type of policy.
          title: type
      required:
      - name
      - policyVersion
      - type
      title: UpdateAccessPolicyRequest
      type: object
    UpdateAccountSettingsResponse:
      example:
        accountSettingsDetail:
          capacityLimits:
            maxSearchCapacityInOCU: ""
            maxIndexingCapacityInOCU: ""
      properties:
        accountSettingsDetail:
          $ref: '#/components/schemas/UpdateAccountSettingsResponse_accountSettingsDetail'
      title: UpdateAccountSettingsResponse
      type: object
    UpdateAccountSettingsRequest:
      example:
        capacityLimits:
          maxSearchCapacityInOCU: ""
          maxIndexingCapacityInOCU: ""
      properties:
        capacityLimits:
          $ref: '#/components/schemas/CapacityLimits'
      title: UpdateAccountSettingsRequest
      type: object
    UpdateCollectionResponse:
      example:
        updateCollectionDetail:
          createdDate: ""
          lastModifiedDate: ""
          name: ""
          description: ""
          id: ""
          arn: ""
          type: ""
          status: ""
      properties:
        updateCollectionDetail:
          $ref: '#/components/schemas/UpdateCollectionResponse_updateCollectionDetail'
      title: UpdateCollectionResponse
      type: object
    UpdateCollectionRequest:
      example:
        clientToken: ""
        description: ""
        id: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier to ensure idempotency\
              \ of the request."
          title: clientToken
        description:
          allOf:
          - $ref: '#/components/schemas/UpdateCollectionRequestDescriptionString'
          - description: A description of the collection.
          title: description
        id:
          allOf:
          - $ref: '#/components/schemas/CollectionId'
          - description: The unique identifier of the collection.
          title: id
      required:
      - id
      title: UpdateCollectionRequest
      type: object
    UpdateSecurityConfigResponse:
      example:
        securityConfigDetail:
          samlOptions:
            groupAttribute: ""
            metadata: ""
            userAttribute: ""
            sessionTimeout: ""
          createdDate: ""
          configVersion: ""
          lastModifiedDate: ""
          description: ""
          id: ""
          type: ""
      properties:
        securityConfigDetail:
          $ref: '#/components/schemas/UpdateSecurityConfigResponse_securityConfigDetail'
      title: UpdateSecurityConfigResponse
      type: object
    UpdateSecurityConfigRequest:
      example:
        samlOptions:
          groupAttribute: ""
          metadata: ""
          userAttribute: ""
          sessionTimeout: ""
        configVersion: ""
        clientToken: ""
        description: ""
        id: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier to ensure idempotency\
              \ of the request."
          title: clientToken
        configVersion:
          allOf:
          - $ref: '#/components/schemas/PolicyVersion'
          - description: The version of the security configuration to be updated.
              You can find the most recent version of a security configuration using
              the <code>GetSecurityPolicy</code> command.
          title: configVersion
        description:
          allOf:
          - $ref: '#/components/schemas/ConfigDescription'
          - description: A description of the security configuration.
          title: description
        id:
          allOf:
          - $ref: '#/components/schemas/SecurityConfigId'
          - description: "The security configuration identifier. For SAML the ID will\
              \ be <code>saml/&lt;accountId&gt;/&lt;idpProviderName&gt;</code>. For\
              \ example, <code>saml/123456789123/OKTADev</code>."
          title: id
        samlOptions:
          $ref: '#/components/schemas/UpdateSecurityConfigRequest_samlOptions'
      required:
      - configVersion
      - id
      title: UpdateSecurityConfigRequest
      type: object
    UpdateSecurityPolicyResponse:
      example:
        securityPolicyDetail:
          policyVersion: ""
          createdDate: ""
          lastModifiedDate: ""
          name: ""
          description: ""
          type: ""
          policy: ""
      properties:
        securityPolicyDetail:
          $ref: '#/components/schemas/UpdateSecurityPolicyResponse_securityPolicyDetail'
      title: UpdateSecurityPolicyResponse
      type: object
    UpdateSecurityPolicyRequest:
      example:
        policyVersion: ""
        clientToken: ""
        name: ""
        description: ""
        type: ""
        policy: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier to ensure idempotency\
              \ of the request."
          title: clientToken
        description:
          allOf:
          - $ref: '#/components/schemas/PolicyDescription'
          - description: A description of the policy. Typically used to store information
              about the permissions defined in the policy.
          title: description
        name:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          - description: The name of the policy.
          title: name
        policy:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          - description: The JSON policy document to use as the content for the new
              policy.
          title: policy
        policyVersion:
          allOf:
          - $ref: '#/components/schemas/PolicyVersion'
          - description: The version of the policy being updated.
          title: policyVersion
        type:
          allOf:
          - $ref: '#/components/schemas/SecurityPolicyType'
          - description: The type of access policy.
          title: type
      required:
      - name
      - policyVersion
      - type
      title: UpdateSecurityPolicyRequest
      type: object
    UpdateVpcEndpointResponse:
      example:
        UpdateVpcEndpointDetail:
          lastModifiedDate: ""
          securityGroupIds: ""
          name: ""
          id: ""
          status: ""
          subnetIds: ""
      properties:
        UpdateVpcEndpointDetail:
          $ref: '#/components/schemas/UpdateVpcEndpointResponse_UpdateVpcEndpointDetail'
      title: UpdateVpcEndpointResponse
      type: object
    UpdateVpcEndpointRequest:
      example:
        addSecurityGroupIds: ""
        addSubnetIds: ""
        clientToken: ""
        removeSubnetIds: ""
        removeSecurityGroupIds: ""
        id: ""
      properties:
        addSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          - description: "The unique identifiers of the security groups to add to\
              \ the endpoint. Security groups define the ports, protocols, and sources\
              \ for inbound traffic that you are authorizing into your endpoint."
          title: addSecurityGroupIds
        addSubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          - description: The ID of one or more subnets to add to the endpoint.
          title: addSubnetIds
        clientToken:
          allOf:
          - $ref: '#/components/schemas/ClientToken'
          - description: "Unique, case-sensitive identifier to ensure idempotency\
              \ of the request."
          title: clientToken
        id:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointId'
          - description: The unique identifier of the interface endpoint to update.
          title: id
        removeSecurityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          - description: The unique identifiers of the security groups to remove from
              the endpoint.
          title: removeSecurityGroupIds
        removeSubnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          - description: The unique identifiers of the subnets to remove from the
              endpoint.
          title: removeSubnetIds
      required:
      - id
      title: UpdateVpcEndpointRequest
      type: object
    Long:
      type: integer
    PolicyDescription:
      maxLength: 1000
      minLength: 0
      type: string
    PolicyName:
      maxLength: 32
      minLength: 3
      pattern: "^[a-z][a-z0-9-]+$"
      type: string
    Document:
      properties: {}
      type: object
    PolicyVersion:
      maxLength: 36
      minLength: 20
      pattern: "^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$"
      type: string
    AccessPolicyType:
      enum:
      - data
      title: AccessPolicyType
      type: string
    AccessPolicyDetail:
      description: Details about an OpenSearch Serverless access policy.
      properties:
        createdDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The date the policy was created.
          title: createdDate
        description:
          allOf:
          - $ref: '#/components/schemas/PolicyDescription'
          - description: The description of the policy.
          title: description
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The timestamp of when the policy was last modified.
          title: lastModifiedDate
        name:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          - description: The name of the policy.
          title: name
        policy:
          allOf:
          - $ref: '#/components/schemas/Document'
          - description: The JSON policy document without any whitespaces.
          title: policy
        policyVersion:
          allOf:
          - $ref: '#/components/schemas/PolicyVersion'
          - description: The version of the policy.
          title: policyVersion
        type:
          allOf:
          - $ref: '#/components/schemas/AccessPolicyType'
          - description: The type of access policy.
          title: type
      title: AccessPolicyDetail
      type: object
    AccessPolicyStats:
      description: Statistics for an OpenSearch Serverless access policy.
      properties:
        DataPolicyCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of data access policies in the current account.
          title: DataPolicyCount
      title: AccessPolicyStats
      type: object
    AccessPolicySummary:
      description: A summary of the data access policy.
      properties:
        createdDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The Epoch time when the access policy was created.
          title: createdDate
        description:
          allOf:
          - $ref: '#/components/schemas/PolicyDescription'
          - description: The description of the access policy.
          title: description
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The date and time when the collection was last modified.
          title: lastModifiedDate
        name:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          - description: The name of the access policy.
          title: name
        policyVersion:
          allOf:
          - $ref: '#/components/schemas/PolicyVersion'
          - description: The version of the policy.
          title: policyVersion
        type:
          allOf:
          - $ref: '#/components/schemas/AccessPolicyType'
          - description: The type of access policy. Currently the only available type
              is <code>data</code>.
          title: type
      title: AccessPolicySummary
      type: object
    AccessPolicySummaries:
      items:
        $ref: '#/components/schemas/AccessPolicySummary'
      type: array
    CapacityLimits:
      description: "The maximum capacity limits for all OpenSearch Serverless collections,\
        \ in OpenSearch Compute Units (OCUs). These limits are used to scale your\
        \ collections based on the current workload. For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-scaling.html\"\
        >Managing capacity limits for Amazon OpenSearch Serverless</a>."
      example:
        maxSearchCapacityInOCU: ""
        maxIndexingCapacityInOCU: ""
      properties:
        maxIndexingCapacityInOCU:
          allOf:
          - $ref: '#/components/schemas/IndexingCapacityValue'
          - description: The maximum indexing capacity for collections.
          title: maxIndexingCapacityInOCU
        maxSearchCapacityInOCU:
          allOf:
          - $ref: '#/components/schemas/SearchCapacityValue'
          - description: The maximum search capacity for collections.
          title: maxSearchCapacityInOCU
      title: CapacityLimits
      type: object
    AccountSettingsDetail:
      description: OpenSearch Serverless-related information for the current account.
      properties:
        capacityLimits:
          $ref: '#/components/schemas/CapacityLimits'
      title: AccountSettingsDetail
      type: object
    Arn:
      maxLength: 1011
      minLength: 1
      type: string
    CollectionIds:
      items:
        $ref: '#/components/schemas/CollectionId'
      maxItems: 100
      minItems: 1
      type: array
    CollectionNames:
      items:
        $ref: '#/components/schemas/CollectionName'
      maxItems: 100
      minItems: 1
      type: array
    CollectionDetails:
      items:
        $ref: '#/components/schemas/CollectionDetail'
      type: array
    CollectionErrorDetails:
      items:
        $ref: '#/components/schemas/CollectionErrorDetail'
      type: array
    VpcEndpointIds:
      items:
        $ref: '#/components/schemas/VpcEndpointId'
      minItems: 1
      type: array
    VpcEndpointDetails:
      items:
        $ref: '#/components/schemas/VpcEndpointDetail'
      type: array
    VpcEndpointErrorDetails:
      items:
        $ref: '#/components/schemas/VpcEndpointErrorDetail'
      type: array
    IndexingCapacityValue:
      minimum: 2
      type: integer
    SearchCapacityValue:
      minimum: 2
      type: integer
    ClientToken:
      maxLength: 512
      minLength: 1
      type: string
    String:
      type: string
    CollectionId:
      maxLength: 40
      minLength: 3
      pattern: "^[a-z0-9]{3,40}$"
      title: CollectionId
      type: string
    CollectionName:
      maxLength: 32
      minLength: 3
      pattern: "^[a-z][a-z0-9-]+$"
      title: CollectionName
      type: string
    CollectionStatus:
      enum:
      - CREATING
      - DELETING
      - ACTIVE
      - FAILED
      title: CollectionStatus
      type: string
    CollectionType:
      enum:
      - SEARCH
      - TIMESERIES
      - VECTORSEARCH
      title: CollectionType
      type: string
    CollectionDetail:
      description: "Details about each OpenSearch Serverless collection, including\
        \ the collection endpoint and the OpenSearch Dashboards endpoint."
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the collection.
          title: arn
        collectionEndpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Collection-specific endpoint used to submit index, search,\
              \ and data upload requests to an OpenSearch Serverless collection."
          title: collectionEndpoint
        createdDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The Epoch time when the collection was created.
          title: createdDate
        dashboardEndpoint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Collection-specific endpoint used to access OpenSearch Dashboards.
          title: dashboardEndpoint
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description of the collection.
          title: description
        id:
          allOf:
          - $ref: '#/components/schemas/CollectionId'
          - description: A unique identifier for the collection.
          title: id
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of the Amazon Web Services KMS key used to encrypt
              the collection.
          title: kmsKeyArn
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The date and time when the collection was last modified.
          title: lastModifiedDate
        name:
          allOf:
          - $ref: '#/components/schemas/CollectionName'
          - description: The name of the collection.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/CollectionStatus'
          - description: The current status of the collection.
          title: status
        type:
          allOf:
          - $ref: '#/components/schemas/CollectionType'
          - description: The type of collection.
          title: type
      title: CollectionDetail
      type: object
    CollectionErrorDetail:
      description: Error information for an OpenSearch Serverless request.
      properties:
        errorCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The error code for the request. For example, <code>NOT_FOUND</code>."
          title: errorCode
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A description of the error. For example, <code>The specified\
              \ Collection is not found.</code> "
          title: errorMessage
        id:
          allOf:
          - $ref: '#/components/schemas/CollectionId'
          - description: "If the request contains collection IDs, the response includes\
              \ the IDs provided in the request."
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/CollectionName'
          - description: "If the request contains collection names, the response includes\
              \ the names provided in the request."
          title: name
      title: CollectionErrorDetail
      type: object
    CollectionFilters:
      description: "List of filter keys that you can use for LIST, UPDATE, and DELETE\
        \ requests to OpenSearch Serverless collections."
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/CollectionName'
          - description: The name of the collection.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/CollectionStatus'
          - description: The current status of the collection.
          title: status
      title: CollectionFilters
      type: object
    CollectionSummary:
      description: Details about each OpenSearch Serverless collection.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the collection.
          title: arn
        id:
          allOf:
          - $ref: '#/components/schemas/CollectionId'
          - description: The unique identifier of the collection.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/CollectionName'
          - description: The name of the collection.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/CollectionStatus'
          - description: The current status of the collection.
          title: status
      title: CollectionSummary
      type: object
    CollectionSummaries:
      items:
        $ref: '#/components/schemas/CollectionSummary'
      type: array
    ConfigDescription:
      maxLength: 1000
      minLength: 1
      type: string
    ConfigName:
      maxLength: 32
      minLength: 3
      pattern: "^[a-z][a-z0-9-]+$"
      type: string
    PolicyDocument:
      maxLength: 20480
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u00A1-\\u00FF]+"
      type: string
    CreateCollectionDetail:
      description: Details about the created OpenSearch Serverless collection.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the collection.
          title: arn
        createdDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The Epoch time when the collection was created.
          title: createdDate
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A description of the collection.
          title: description
        id:
          allOf:
          - $ref: '#/components/schemas/CollectionId'
          - description: The unique identifier of the collection.
          title: id
        kmsKeyArn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the KMS key with which
              to encrypt the collection.
          title: kmsKeyArn
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The date and time when the collection was last modified.
          title: lastModifiedDate
        name:
          allOf:
          - $ref: '#/components/schemas/CollectionName'
          - description: The name of the collection.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/CollectionStatus'
          - description: The current status of the collection.
          title: status
        type:
          allOf:
          - $ref: '#/components/schemas/CollectionType'
          - description: The type of collection.
          title: type
      title: CreateCollectionDetail
      type: object
    CreateCollectionRequestDescriptionString:
      maxLength: 1000
      minLength: 0
      type: string
    Tags:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 50
      minItems: 0
      type: array
    SamlConfigOptions:
      description: Describes SAML options for an OpenSearch Serverless security configuration
        in the form of a key-value map.
      properties:
        groupAttribute:
          allOf:
          - $ref: '#/components/schemas/samlGroupAttribute'
          - description: The group attribute for this SAML integration.
          title: groupAttribute
        metadata:
          allOf:
          - $ref: '#/components/schemas/samlMetadata'
          - description: The XML IdP metadata file generated from your identity provider.
          title: metadata
        sessionTimeout:
          allOf:
          - $ref: '#/components/schemas/SamlConfigOptionsSessionTimeoutInteger'
          - description: "The session timeout, in minutes. Default is 60 minutes (12\
              \ hours)."
          title: sessionTimeout
        userAttribute:
          allOf:
          - $ref: '#/components/schemas/samlUserAttribute'
          - description: A user attribute for this SAML integration.
          title: userAttribute
      required:
      - metadata
      title: SamlConfigOptions
      type: object
    SecurityConfigType:
      enum:
      - saml
      title: SecurityConfigType
      type: string
    SecurityConfigDetail:
      description: 'Details about a security configuration for OpenSearch Serverless. '
      properties:
        configVersion:
          allOf:
          - $ref: '#/components/schemas/PolicyVersion'
          - description: The version of the security configuration.
          title: configVersion
        createdDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The date the configuration was created.
          title: createdDate
        description:
          allOf:
          - $ref: '#/components/schemas/ConfigDescription'
          - description: The description of the security configuration.
          title: description
        id:
          allOf:
          - $ref: '#/components/schemas/SecurityConfigId'
          - description: The unique identifier of the security configuration.
          title: id
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The timestamp of when the configuration was last modified.
          title: lastModifiedDate
        samlOptions:
          $ref: '#/components/schemas/SecurityConfigDetail_samlOptions'
        type:
          allOf:
          - $ref: '#/components/schemas/SecurityConfigType'
          - description: The type of security configuration.
          title: type
      title: SecurityConfigDetail
      type: object
    SecurityPolicyType:
      enum:
      - encryption
      - network
      title: SecurityPolicyType
      type: string
    SecurityPolicyDetail:
      description: Details about an OpenSearch Serverless security policy.
      properties:
        createdDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The date the policy was created.
          title: createdDate
        description:
          allOf:
          - $ref: '#/components/schemas/PolicyDescription'
          - description: The description of the security policy.
          title: description
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The timestamp of when the policy was last modified.
          title: lastModifiedDate
        name:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          - description: The name of the policy.
          title: name
        policy:
          allOf:
          - $ref: '#/components/schemas/Document'
          - description: The JSON policy document without any whitespaces.
          title: policy
        policyVersion:
          allOf:
          - $ref: '#/components/schemas/PolicyVersion'
          - description: The version of the policy.
          title: policyVersion
        type:
          allOf:
          - $ref: '#/components/schemas/SecurityPolicyType'
          - description: The type of security policy.
          title: type
      title: SecurityPolicyDetail
      type: object
    VpcEndpointId:
      maxLength: 255
      minLength: 1
      pattern: "^vpce-[0-9a-z]*$"
      title: VpcEndpointId
      type: string
    VpcEndpointName:
      maxLength: 32
      minLength: 3
      pattern: "^[a-z][a-z0-9-]+$"
      type: string
    VpcEndpointStatus:
      enum:
      - PENDING
      - DELETING
      - ACTIVE
      - FAILED
      title: VpcEndpointStatus
      type: string
    CreateVpcEndpointDetail:
      description: "Creation details for an OpenSearch Serverless-managed interface\
        \ endpoint. For more information, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-vpc.html\"\
        >Access Amazon OpenSearch Serverless using an interface endpoint</a>."
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointId'
          - description: The unique identifier of the endpoint.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointName'
          - description: The name of the endpoint.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointStatus'
          - description: The current status in the endpoint creation process.
          title: status
      title: CreateVpcEndpointDetail
      type: object
    SecurityGroupIds:
      items:
        $ref: '#/components/schemas/SecurityGroupId'
      maxItems: 5
      minItems: 1
      type: array
    SubnetIds:
      items:
        $ref: '#/components/schemas/SubnetId'
      maxItems: 6
      minItems: 1
      type: array
    VpcId:
      maxLength: 255
      minLength: 1
      pattern: "^vpc-[0-9a-z]*$"
      type: string
    DeleteCollectionDetail:
      description: Details about a deleted OpenSearch Serverless collection.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/CollectionId'
          - description: The unique identifier of the collection.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/CollectionName'
          - description: The name of the collection.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/CollectionStatus'
          - description: The current status of the collection.
          title: status
      title: DeleteCollectionDetail
      type: object
    SecurityConfigId:
      maxLength: 100
      minLength: 1
      type: string
    DeleteVpcEndpointDetail:
      description: Deletion details for an OpenSearch Serverless-managed interface
        endpoint.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointId'
          - description: The unique identifier of the endpoint.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointName'
          - description: The name of the endpoint.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointStatus'
          - description: The current status of the endpoint deletion process.
          title: status
      title: DeleteVpcEndpointDetail
      type: object
    SecurityConfigStats:
      description: Statistics for an OpenSearch Serverless security configuration.
      properties:
        SamlConfigCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of security configurations in the current account.
          title: SamlConfigCount
      title: SecurityConfigStats
      type: object
    SecurityPolicyStats:
      description: Statistics for an OpenSearch Serverless security policy.
      properties:
        EncryptionPolicyCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of encryption policies in the current account.
          title: EncryptionPolicyCount
        NetworkPolicyCount:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of network policies in the current account.
          title: NetworkPolicyCount
      title: SecurityPolicyStats
      type: object
    ListAccessPoliciesRequestMaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    ListAccessPoliciesRequestResourceList:
      items:
        $ref: '#/components/schemas/Resource'
      maxItems: 1000
      minItems: 1
      type: array
    Resource:
      title: Resource
      type: string
    ListCollectionsRequestMaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    ListSecurityConfigsRequestMaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    SecurityConfigSummaries:
      items:
        $ref: '#/components/schemas/SecurityConfigSummary'
      type: array
    ListSecurityPoliciesRequestMaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    ListSecurityPoliciesRequestResourceList:
      items:
        $ref: '#/components/schemas/Resource'
      maxItems: 1000
      minItems: 1
      type: array
    SecurityPolicySummaries:
      items:
        $ref: '#/components/schemas/SecurityPolicySummary'
      type: array
    ListVpcEndpointsRequestMaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    VpcEndpointFilters:
      description: Filter the results of a <code>ListVpcEndpoints</code> request.
      properties:
        status:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointStatus'
          - description: The current status of the endpoint.
          title: status
      title: VpcEndpointFilters
      type: object
    VpcEndpointSummaries:
      items:
        $ref: '#/components/schemas/VpcEndpointSummary'
      type: array
    samlGroupAttribute:
      maxLength: 2048
      minLength: 1
      pattern: "[\\w+=,.@-]+"
      type: string
    samlMetadata:
      maxLength: 51200
      minLength: 1
      pattern: "[\\u0009\\u000A\\u000D\\u0020-\\u007E\\u00A1-\\u00FF]+"
      type: string
    SamlConfigOptionsSessionTimeoutInteger:
      maximum: 720
      minimum: 5
      type: integer
    samlUserAttribute:
      maxLength: 2048
      minLength: 1
      pattern: "[\\w+=,.@-]+"
      type: string
    SecurityConfigSummary:
      description: A summary of a security configuration for OpenSearch Serverless.
      properties:
        configVersion:
          allOf:
          - $ref: '#/components/schemas/PolicyVersion'
          - description: The version of the security configuration.
          title: configVersion
        createdDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The Epoch time when the security configuration was created.
          title: createdDate
        description:
          allOf:
          - $ref: '#/components/schemas/ConfigDescription'
          - description: The description of the security configuration.
          title: description
        id:
          allOf:
          - $ref: '#/components/schemas/SecurityConfigId'
          - description: The unique identifier of the security configuration.
          title: id
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The timestamp of when the configuration was last modified.
          title: lastModifiedDate
        type:
          allOf:
          - $ref: '#/components/schemas/SecurityConfigType'
          - description: The type of security configuration.
          title: type
      title: SecurityConfigSummary
      type: object
    SecurityGroupId:
      maxLength: 128
      minLength: 1
      pattern: "^[\\w+\\-]+$"
      title: SecurityGroupId
      type: string
    SecurityPolicySummary:
      description: A summary of a security policy for OpenSearch Serverless.
      properties:
        createdDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The date the policy was created.
          title: createdDate
        description:
          allOf:
          - $ref: '#/components/schemas/PolicyDescription'
          - description: The description of the security policy.
          title: description
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The timestamp of when the policy was last modified.
          title: lastModifiedDate
        name:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          - description: The name of the policy.
          title: name
        policyVersion:
          allOf:
          - $ref: '#/components/schemas/PolicyVersion'
          - description: The version of the policy.
          title: policyVersion
        type:
          allOf:
          - $ref: '#/components/schemas/SecurityPolicyType'
          - description: The type of security policy.
          title: type
      title: SecurityPolicySummary
      type: object
    SubnetId:
      maxLength: 32
      minLength: 1
      pattern: "^subnet-([0-9a-f]{8}|[0-9a-f]{17})$"
      title: SubnetId
      type: string
    TagKey:
      maxLength: 128
      minLength: 1
      title: TagKey
      type: string
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    Tag:
      description: A map of key-value pairs associated to an OpenSearch Serverless
        resource.
      properties:
        key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: The key to use in the tag.
          title: key
        value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: The value of the tag.
          title: value
      required:
      - key
      - value
      title: Tag
      type: object
    TagKeys:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 50
      minItems: 0
      type: array
    UpdateCollectionDetail:
      description: Details about an updated OpenSearch Serverless collection.
      properties:
        arn:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the collection.
          title: arn
        createdDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The date and time when the collection was created.
          title: createdDate
        description:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The description of the collection.
          title: description
        id:
          allOf:
          - $ref: '#/components/schemas/CollectionId'
          - description: The unique identifier of the collection.
          title: id
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The date and time when the collection was last modified.
          title: lastModifiedDate
        name:
          allOf:
          - $ref: '#/components/schemas/CollectionName'
          - description: The name of the collection.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/CollectionStatus'
          - description: The current status of the collection.
          title: status
        type:
          allOf:
          - $ref: '#/components/schemas/CollectionType'
          - description: The collection type.
          title: type
      title: UpdateCollectionDetail
      type: object
    UpdateCollectionRequestDescriptionString:
      maxLength: 1000
      minLength: 0
      type: string
    UpdateVpcEndpointDetail:
      description: Update details for an OpenSearch Serverless-managed interface endpoint.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointId'
          - description: The unique identifier of the endpoint.
          title: id
        lastModifiedDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The timestamp of when the endpoint was last modified.
          title: lastModifiedDate
        name:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointName'
          - description: The name of the endpoint.
          title: name
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          - description: "The unique identifiers of the security groups that define\
              \ the ports, protocols, and sources for inbound traffic that you are\
              \ authorizing into your endpoint."
          title: securityGroupIds
        status:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointStatus'
          - description: The current status of the endpoint update process.
          title: status
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          - description: The ID of the subnets from which you access OpenSearch Serverless.
          title: subnetIds
      title: UpdateVpcEndpointDetail
      type: object
    VpcEndpointDetail:
      description: Details about an OpenSearch Serverless-managed interface endpoint.
      properties:
        createdDate:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The date the endpoint was created.
          title: createdDate
        id:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointId'
          - description: The unique identifier of the endpoint.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointName'
          - description: The name of the endpoint.
          title: name
        securityGroupIds:
          allOf:
          - $ref: '#/components/schemas/SecurityGroupIds'
          - description: "The unique identifiers of the security groups that define\
              \ the ports, protocols, and sources for inbound traffic that you are\
              \ authorizing into your endpoint."
          title: securityGroupIds
        status:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointStatus'
          - description: The current status of the endpoint.
          title: status
        subnetIds:
          allOf:
          - $ref: '#/components/schemas/SubnetIds'
          - description: The ID of the subnets from which you access OpenSearch Serverless.
          title: subnetIds
        vpcId:
          allOf:
          - $ref: '#/components/schemas/VpcId'
          - description: The ID of the VPC from which you access OpenSearch Serverless.
          title: vpcId
      title: VpcEndpointDetail
      type: object
    VpcEndpointErrorDetail:
      description: Error information for a failed <code>BatchGetVpcEndpoint</code>
        request.
      properties:
        errorCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error code for the failed request.
          title: errorCode
        errorMessage:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: An error message describing the reason for the failure.
          title: errorMessage
        id:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointId'
          - description: The unique identifier of the VPC endpoint.
          title: id
      title: VpcEndpointErrorDetail
      type: object
    VpcEndpointSummary:
      description: The VPC endpoint object.
      properties:
        id:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointId'
          - description: The unique identifier of the endpoint.
          title: id
        name:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointName'
          - description: The name of the endpoint.
          title: name
        status:
          allOf:
          - $ref: '#/components/schemas/VpcEndpointStatus'
          - description: The current status of the endpoint.
          title: status
      title: VpcEndpointSummary
      type: object
    CreateAccessPolicyResponse_accessPolicyDetail:
      allOf:
      - $ref: '#/components/schemas/AccessPolicyDetail'
      - description: Details about the created access policy.
      example:
        policyVersion: ""
        createdDate: ""
        lastModifiedDate: ""
        name: ""
        description: ""
        type: ""
        policy: ""
      title: CreateAccessPolicyResponse_accessPolicyDetail
    CreateCollectionResponse_createCollectionDetail:
      allOf:
      - $ref: '#/components/schemas/CreateCollectionDetail'
      - description: Details about the collection.
      example:
        createdDate: ""
        lastModifiedDate: ""
        kmsKeyArn: ""
        name: ""
        description: ""
        id: ""
        arn: ""
        type: ""
        status: ""
      title: CreateCollectionResponse_createCollectionDetail
    CreateSecurityConfigResponse_securityConfigDetail:
      allOf:
      - $ref: '#/components/schemas/SecurityConfigDetail'
      - description: 'Details about the created security configuration. '
      example:
        samlOptions:
          groupAttribute: ""
          metadata: ""
          userAttribute: ""
          sessionTimeout: ""
        createdDate: ""
        configVersion: ""
        lastModifiedDate: ""
        description: ""
        id: ""
        type: ""
      title: CreateSecurityConfigResponse_securityConfigDetail
    CreateSecurityConfigRequest_samlOptions:
      allOf:
      - $ref: '#/components/schemas/SamlConfigOptions'
      - description: Describes SAML options in in the form of a key-value map. This
          field is required if you specify <code>saml</code> for the <code>type</code>
          parameter.
      example:
        groupAttribute: ""
        metadata: ""
        userAttribute: ""
        sessionTimeout: ""
      title: CreateSecurityConfigRequest_samlOptions
    CreateSecurityPolicyResponse_securityPolicyDetail:
      allOf:
      - $ref: '#/components/schemas/SecurityPolicyDetail'
      - description: Details about the created security policy.
      example:
        policyVersion: ""
        createdDate: ""
        lastModifiedDate: ""
        name: ""
        description: ""
        type: ""
        policy: ""
      title: CreateSecurityPolicyResponse_securityPolicyDetail
    CreateVpcEndpointResponse_createVpcEndpointDetail:
      allOf:
      - $ref: '#/components/schemas/CreateVpcEndpointDetail'
      - description: Details about the created interface VPC endpoint.
      example:
        name: ""
        id: ""
        status: ""
      title: CreateVpcEndpointResponse_createVpcEndpointDetail
    DeleteCollectionResponse_deleteCollectionDetail:
      allOf:
      - $ref: '#/components/schemas/DeleteCollectionDetail'
      - description: Details of the deleted collection.
      example:
        name: ""
        id: ""
        status: ""
      title: DeleteCollectionResponse_deleteCollectionDetail
    DeleteVpcEndpointResponse_deleteVpcEndpointDetail:
      allOf:
      - $ref: '#/components/schemas/DeleteVpcEndpointDetail'
      - description: Details about the deleted endpoint.
      example:
        name: ""
        id: ""
        status: ""
      title: DeleteVpcEndpointResponse_deleteVpcEndpointDetail
    GetAccessPolicyResponse_accessPolicyDetail:
      allOf:
      - $ref: '#/components/schemas/AccessPolicyDetail'
      - description: Details about the requested access policy.
      example:
        policyVersion: ""
        createdDate: ""
        lastModifiedDate: ""
        name: ""
        description: ""
        type: ""
        policy: ""
      title: GetAccessPolicyResponse_accessPolicyDetail
    GetAccountSettingsResponse_accountSettingsDetail:
      allOf:
      - $ref: '#/components/schemas/AccountSettingsDetail'
      - description: OpenSearch Serverless-related details for the current account.
      example:
        capacityLimits:
          maxSearchCapacityInOCU: ""
          maxIndexingCapacityInOCU: ""
      title: GetAccountSettingsResponse_accountSettingsDetail
    GetPoliciesStatsResponse_AccessPolicyStats:
      allOf:
      - $ref: '#/components/schemas/AccessPolicyStats'
      - description: Information about the data access policies in your account.
      example:
        DataPolicyCount: ""
      title: GetPoliciesStatsResponse_AccessPolicyStats
    GetPoliciesStatsResponse_SecurityConfigStats:
      allOf:
      - $ref: '#/components/schemas/SecurityConfigStats'
      - description: Information about the security configurations in your account.
      example:
        SamlConfigCount: ""
      title: GetPoliciesStatsResponse_SecurityConfigStats
    GetPoliciesStatsResponse_SecurityPolicyStats:
      allOf:
      - $ref: '#/components/schemas/SecurityPolicyStats'
      - description: Information about the security policies in your account.
      example:
        NetworkPolicyCount: ""
        EncryptionPolicyCount: ""
      title: GetPoliciesStatsResponse_SecurityPolicyStats
    GetSecurityConfigResponse_securityConfigDetail:
      allOf:
      - $ref: '#/components/schemas/SecurityConfigDetail'
      - description: Details of the requested security configuration.
      example:
        samlOptions:
          groupAttribute: ""
          metadata: ""
          userAttribute: ""
          sessionTimeout: ""
        createdDate: ""
        configVersion: ""
        lastModifiedDate: ""
        description: ""
        id: ""
        type: ""
      title: GetSecurityConfigResponse_securityConfigDetail
    GetSecurityPolicyResponse_securityPolicyDetail:
      allOf:
      - $ref: '#/components/schemas/SecurityPolicyDetail'
      - description: Details about the requested security policy.
      example:
        policyVersion: ""
        createdDate: ""
        lastModifiedDate: ""
        name: ""
        description: ""
        type: ""
        policy: ""
      title: GetSecurityPolicyResponse_securityPolicyDetail
    ListCollectionsRequest_collectionFilters:
      allOf:
      - $ref: '#/components/schemas/CollectionFilters'
      - description: List of filter names and values that you can use for requests.
      example:
        name: ""
        status: ""
      title: ListCollectionsRequest_collectionFilters
    ListVpcEndpointsRequest_vpcEndpointFilters:
      allOf:
      - $ref: '#/components/schemas/VpcEndpointFilters'
      - description: "Filter the results according to the current status of the VPC\
          \ endpoint. Possible statuses are <code>CREATING</code>, <code>DELETING</code>,\
          \ <code>UPDATING</code>, <code>ACTIVE</code>, and <code>FAILED</code>."
      example:
        status: ""
      title: ListVpcEndpointsRequest_vpcEndpointFilters
    UpdateAccessPolicyResponse_accessPolicyDetail:
      allOf:
      - $ref: '#/components/schemas/AccessPolicyDetail'
      - description: Details about the updated access policy.
      example:
        policyVersion: ""
        createdDate: ""
        lastModifiedDate: ""
        name: ""
        description: ""
        type: ""
        policy: ""
      title: UpdateAccessPolicyResponse_accessPolicyDetail
    UpdateAccountSettingsResponse_accountSettingsDetail:
      allOf:
      - $ref: '#/components/schemas/AccountSettingsDetail'
      - description: 'OpenSearch Serverless-related settings for the current Amazon
          Web Services account. '
      example:
        capacityLimits:
          maxSearchCapacityInOCU: ""
          maxIndexingCapacityInOCU: ""
      title: UpdateAccountSettingsResponse_accountSettingsDetail
    UpdateCollectionResponse_updateCollectionDetail:
      allOf:
      - $ref: '#/components/schemas/UpdateCollectionDetail'
      - description: Details about the updated collection.
      example:
        createdDate: ""
        lastModifiedDate: ""
        name: ""
        description: ""
        id: ""
        arn: ""
        type: ""
        status: ""
      title: UpdateCollectionResponse_updateCollectionDetail
    UpdateSecurityConfigResponse_securityConfigDetail:
      allOf:
      - $ref: '#/components/schemas/SecurityConfigDetail'
      - description: 'Details about the updated security configuration. '
      example:
        samlOptions:
          groupAttribute: ""
          metadata: ""
          userAttribute: ""
          sessionTimeout: ""
        createdDate: ""
        configVersion: ""
        lastModifiedDate: ""
        description: ""
        id: ""
        type: ""
      title: UpdateSecurityConfigResponse_securityConfigDetail
    UpdateSecurityConfigRequest_samlOptions:
      allOf:
      - $ref: '#/components/schemas/SamlConfigOptions'
      - description: SAML options in in the form of a key-value map.
      example:
        groupAttribute: ""
        metadata: ""
        userAttribute: ""
        sessionTimeout: ""
      title: UpdateSecurityConfigRequest_samlOptions
    UpdateSecurityPolicyResponse_securityPolicyDetail:
      allOf:
      - $ref: '#/components/schemas/SecurityPolicyDetail'
      - description: Details about the updated security policy.
      example:
        policyVersion: ""
        createdDate: ""
        lastModifiedDate: ""
        name: ""
        description: ""
        type: ""
        policy: ""
      title: UpdateSecurityPolicyResponse_securityPolicyDetail
    UpdateVpcEndpointResponse_UpdateVpcEndpointDetail:
      allOf:
      - $ref: '#/components/schemas/UpdateVpcEndpointDetail'
      - description: Details about the updated VPC endpoint.
      example:
        lastModifiedDate: ""
        securityGroupIds: ""
        name: ""
        id: ""
        status: ""
        subnetIds: ""
      title: UpdateVpcEndpointResponse_UpdateVpcEndpointDetail
    SecurityConfigDetail_samlOptions:
      allOf:
      - $ref: '#/components/schemas/SamlConfigOptions'
      - description: SAML options for the security configuration in the form of a
          key-value map.
      example:
        groupAttribute: ""
        metadata: ""
        userAttribute: ""
        sessionTimeout: ""
      title: SecurityConfigDetail_samlOptions
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
