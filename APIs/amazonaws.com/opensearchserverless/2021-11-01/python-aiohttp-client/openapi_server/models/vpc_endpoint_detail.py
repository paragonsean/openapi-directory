# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.vpc_endpoint_status import VpcEndpointStatus
from openapi_server import util


class VpcEndpointDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_date: int=None, id: str=None, name: str=None, security_group_ids: List=None, status: VpcEndpointStatus=None, subnet_ids: List=None, vpc_id: str=None):
        """VpcEndpointDetail - a model defined in OpenAPI

        :param created_date: The created_date of this VpcEndpointDetail.
        :param id: The id of this VpcEndpointDetail.
        :param name: The name of this VpcEndpointDetail.
        :param security_group_ids: The security_group_ids of this VpcEndpointDetail.
        :param status: The status of this VpcEndpointDetail.
        :param subnet_ids: The subnet_ids of this VpcEndpointDetail.
        :param vpc_id: The vpc_id of this VpcEndpointDetail.
        """
        self.openapi_types = {
            'created_date': int,
            'id': str,
            'name': str,
            'security_group_ids': List,
            'status': VpcEndpointStatus,
            'subnet_ids': List,
            'vpc_id': str
        }

        self.attribute_map = {
            'created_date': 'createdDate',
            'id': 'id',
            'name': 'name',
            'security_group_ids': 'securityGroupIds',
            'status': 'status',
            'subnet_ids': 'subnetIds',
            'vpc_id': 'vpcId'
        }

        self._created_date = created_date
        self._id = id
        self._name = name
        self._security_group_ids = security_group_ids
        self._status = status
        self._subnet_ids = subnet_ids
        self._vpc_id = vpc_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VpcEndpointDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VpcEndpointDetail of this VpcEndpointDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_date(self):
        """Gets the created_date of this VpcEndpointDetail.


        :return: The created_date of this VpcEndpointDetail.
        :rtype: int
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this VpcEndpointDetail.


        :param created_date: The created_date of this VpcEndpointDetail.
        :type created_date: int
        """

        self._created_date = created_date

    @property
    def id(self):
        """Gets the id of this VpcEndpointDetail.


        :return: The id of this VpcEndpointDetail.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this VpcEndpointDetail.


        :param id: The id of this VpcEndpointDetail.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this VpcEndpointDetail.


        :return: The name of this VpcEndpointDetail.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this VpcEndpointDetail.


        :param name: The name of this VpcEndpointDetail.
        :type name: str
        """

        self._name = name

    @property
    def security_group_ids(self):
        """Gets the security_group_ids of this VpcEndpointDetail.


        :return: The security_group_ids of this VpcEndpointDetail.
        :rtype: List
        """
        return self._security_group_ids

    @security_group_ids.setter
    def security_group_ids(self, security_group_ids):
        """Sets the security_group_ids of this VpcEndpointDetail.


        :param security_group_ids: The security_group_ids of this VpcEndpointDetail.
        :type security_group_ids: List
        """

        self._security_group_ids = security_group_ids

    @property
    def status(self):
        """Gets the status of this VpcEndpointDetail.


        :return: The status of this VpcEndpointDetail.
        :rtype: VpcEndpointStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this VpcEndpointDetail.


        :param status: The status of this VpcEndpointDetail.
        :type status: VpcEndpointStatus
        """

        self._status = status

    @property
    def subnet_ids(self):
        """Gets the subnet_ids of this VpcEndpointDetail.


        :return: The subnet_ids of this VpcEndpointDetail.
        :rtype: List
        """
        return self._subnet_ids

    @subnet_ids.setter
    def subnet_ids(self, subnet_ids):
        """Sets the subnet_ids of this VpcEndpointDetail.


        :param subnet_ids: The subnet_ids of this VpcEndpointDetail.
        :type subnet_ids: List
        """

        self._subnet_ids = subnet_ids

    @property
    def vpc_id(self):
        """Gets the vpc_id of this VpcEndpointDetail.


        :return: The vpc_id of this VpcEndpointDetail.
        :rtype: str
        """
        return self._vpc_id

    @vpc_id.setter
    def vpc_id(self, vpc_id):
        """Sets the vpc_id of this VpcEndpointDetail.


        :param vpc_id: The vpc_id of this VpcEndpointDetail.
        :type vpc_id: str
        """

        self._vpc_id = vpc_id
