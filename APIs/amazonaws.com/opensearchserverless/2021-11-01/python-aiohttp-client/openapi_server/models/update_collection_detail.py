# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.collection_status import CollectionStatus
from openapi_server.models.collection_type import CollectionType
from openapi_server import util


class UpdateCollectionDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, arn: str=None, created_date: int=None, description: str=None, id: str=None, last_modified_date: int=None, name: str=None, status: CollectionStatus=None, type: CollectionType=None):
        """UpdateCollectionDetail - a model defined in OpenAPI

        :param arn: The arn of this UpdateCollectionDetail.
        :param created_date: The created_date of this UpdateCollectionDetail.
        :param description: The description of this UpdateCollectionDetail.
        :param id: The id of this UpdateCollectionDetail.
        :param last_modified_date: The last_modified_date of this UpdateCollectionDetail.
        :param name: The name of this UpdateCollectionDetail.
        :param status: The status of this UpdateCollectionDetail.
        :param type: The type of this UpdateCollectionDetail.
        """
        self.openapi_types = {
            'arn': str,
            'created_date': int,
            'description': str,
            'id': str,
            'last_modified_date': int,
            'name': str,
            'status': CollectionStatus,
            'type': CollectionType
        }

        self.attribute_map = {
            'arn': 'arn',
            'created_date': 'createdDate',
            'description': 'description',
            'id': 'id',
            'last_modified_date': 'lastModifiedDate',
            'name': 'name',
            'status': 'status',
            'type': 'type'
        }

        self._arn = arn
        self._created_date = created_date
        self._description = description
        self._id = id
        self._last_modified_date = last_modified_date
        self._name = name
        self._status = status
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateCollectionDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateCollectionDetail of this UpdateCollectionDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def arn(self):
        """Gets the arn of this UpdateCollectionDetail.


        :return: The arn of this UpdateCollectionDetail.
        :rtype: str
        """
        return self._arn

    @arn.setter
    def arn(self, arn):
        """Sets the arn of this UpdateCollectionDetail.


        :param arn: The arn of this UpdateCollectionDetail.
        :type arn: str
        """

        self._arn = arn

    @property
    def created_date(self):
        """Gets the created_date of this UpdateCollectionDetail.


        :return: The created_date of this UpdateCollectionDetail.
        :rtype: int
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this UpdateCollectionDetail.


        :param created_date: The created_date of this UpdateCollectionDetail.
        :type created_date: int
        """

        self._created_date = created_date

    @property
    def description(self):
        """Gets the description of this UpdateCollectionDetail.


        :return: The description of this UpdateCollectionDetail.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateCollectionDetail.


        :param description: The description of this UpdateCollectionDetail.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this UpdateCollectionDetail.


        :return: The id of this UpdateCollectionDetail.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UpdateCollectionDetail.


        :param id: The id of this UpdateCollectionDetail.
        :type id: str
        """

        self._id = id

    @property
    def last_modified_date(self):
        """Gets the last_modified_date of this UpdateCollectionDetail.


        :return: The last_modified_date of this UpdateCollectionDetail.
        :rtype: int
        """
        return self._last_modified_date

    @last_modified_date.setter
    def last_modified_date(self, last_modified_date):
        """Sets the last_modified_date of this UpdateCollectionDetail.


        :param last_modified_date: The last_modified_date of this UpdateCollectionDetail.
        :type last_modified_date: int
        """

        self._last_modified_date = last_modified_date

    @property
    def name(self):
        """Gets the name of this UpdateCollectionDetail.


        :return: The name of this UpdateCollectionDetail.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateCollectionDetail.


        :param name: The name of this UpdateCollectionDetail.
        :type name: str
        """

        self._name = name

    @property
    def status(self):
        """Gets the status of this UpdateCollectionDetail.


        :return: The status of this UpdateCollectionDetail.
        :rtype: CollectionStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this UpdateCollectionDetail.


        :param status: The status of this UpdateCollectionDetail.
        :type status: CollectionStatus
        """

        self._status = status

    @property
    def type(self):
        """Gets the type of this UpdateCollectionDetail.


        :return: The type of this UpdateCollectionDetail.
        :rtype: CollectionType
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this UpdateCollectionDetail.


        :param type: The type of this UpdateCollectionDetail.
        :type type: CollectionType
        """

        self._type = type
