# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateVpcEndpointRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, add_security_group_ids: List=None, add_subnet_ids: List=None, client_token: str=None, id: str=None, remove_security_group_ids: List=None, remove_subnet_ids: List=None):
        """UpdateVpcEndpointRequest - a model defined in OpenAPI

        :param add_security_group_ids: The add_security_group_ids of this UpdateVpcEndpointRequest.
        :param add_subnet_ids: The add_subnet_ids of this UpdateVpcEndpointRequest.
        :param client_token: The client_token of this UpdateVpcEndpointRequest.
        :param id: The id of this UpdateVpcEndpointRequest.
        :param remove_security_group_ids: The remove_security_group_ids of this UpdateVpcEndpointRequest.
        :param remove_subnet_ids: The remove_subnet_ids of this UpdateVpcEndpointRequest.
        """
        self.openapi_types = {
            'add_security_group_ids': List,
            'add_subnet_ids': List,
            'client_token': str,
            'id': str,
            'remove_security_group_ids': List,
            'remove_subnet_ids': List
        }

        self.attribute_map = {
            'add_security_group_ids': 'addSecurityGroupIds',
            'add_subnet_ids': 'addSubnetIds',
            'client_token': 'clientToken',
            'id': 'id',
            'remove_security_group_ids': 'removeSecurityGroupIds',
            'remove_subnet_ids': 'removeSubnetIds'
        }

        self._add_security_group_ids = add_security_group_ids
        self._add_subnet_ids = add_subnet_ids
        self._client_token = client_token
        self._id = id
        self._remove_security_group_ids = remove_security_group_ids
        self._remove_subnet_ids = remove_subnet_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateVpcEndpointRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateVpcEndpointRequest of this UpdateVpcEndpointRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def add_security_group_ids(self):
        """Gets the add_security_group_ids of this UpdateVpcEndpointRequest.


        :return: The add_security_group_ids of this UpdateVpcEndpointRequest.
        :rtype: List
        """
        return self._add_security_group_ids

    @add_security_group_ids.setter
    def add_security_group_ids(self, add_security_group_ids):
        """Sets the add_security_group_ids of this UpdateVpcEndpointRequest.


        :param add_security_group_ids: The add_security_group_ids of this UpdateVpcEndpointRequest.
        :type add_security_group_ids: List
        """

        self._add_security_group_ids = add_security_group_ids

    @property
    def add_subnet_ids(self):
        """Gets the add_subnet_ids of this UpdateVpcEndpointRequest.


        :return: The add_subnet_ids of this UpdateVpcEndpointRequest.
        :rtype: List
        """
        return self._add_subnet_ids

    @add_subnet_ids.setter
    def add_subnet_ids(self, add_subnet_ids):
        """Sets the add_subnet_ids of this UpdateVpcEndpointRequest.


        :param add_subnet_ids: The add_subnet_ids of this UpdateVpcEndpointRequest.
        :type add_subnet_ids: List
        """

        self._add_subnet_ids = add_subnet_ids

    @property
    def client_token(self):
        """Gets the client_token of this UpdateVpcEndpointRequest.


        :return: The client_token of this UpdateVpcEndpointRequest.
        :rtype: str
        """
        return self._client_token

    @client_token.setter
    def client_token(self, client_token):
        """Sets the client_token of this UpdateVpcEndpointRequest.


        :param client_token: The client_token of this UpdateVpcEndpointRequest.
        :type client_token: str
        """

        self._client_token = client_token

    @property
    def id(self):
        """Gets the id of this UpdateVpcEndpointRequest.


        :return: The id of this UpdateVpcEndpointRequest.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this UpdateVpcEndpointRequest.


        :param id: The id of this UpdateVpcEndpointRequest.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def remove_security_group_ids(self):
        """Gets the remove_security_group_ids of this UpdateVpcEndpointRequest.


        :return: The remove_security_group_ids of this UpdateVpcEndpointRequest.
        :rtype: List
        """
        return self._remove_security_group_ids

    @remove_security_group_ids.setter
    def remove_security_group_ids(self, remove_security_group_ids):
        """Sets the remove_security_group_ids of this UpdateVpcEndpointRequest.


        :param remove_security_group_ids: The remove_security_group_ids of this UpdateVpcEndpointRequest.
        :type remove_security_group_ids: List
        """

        self._remove_security_group_ids = remove_security_group_ids

    @property
    def remove_subnet_ids(self):
        """Gets the remove_subnet_ids of this UpdateVpcEndpointRequest.


        :return: The remove_subnet_ids of this UpdateVpcEndpointRequest.
        :rtype: List
        """
        return self._remove_subnet_ids

    @remove_subnet_ids.setter
    def remove_subnet_ids(self, remove_subnet_ids):
        """Sets the remove_subnet_ids of this UpdateVpcEndpointRequest.


        :param remove_subnet_ids: The remove_subnet_ids of this UpdateVpcEndpointRequest.
        :type remove_subnet_ids: List
        """

        self._remove_subnet_ids = remove_subnet_ids
