# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_collections_request_collection_filters import ListCollectionsRequestCollectionFilters
from openapi_server import util


class ListCollectionsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, collection_filters: ListCollectionsRequestCollectionFilters=None, max_results: int=None, next_token: str=None):
        """ListCollectionsRequest - a model defined in OpenAPI

        :param collection_filters: The collection_filters of this ListCollectionsRequest.
        :param max_results: The max_results of this ListCollectionsRequest.
        :param next_token: The next_token of this ListCollectionsRequest.
        """
        self.openapi_types = {
            'collection_filters': ListCollectionsRequestCollectionFilters,
            'max_results': int,
            'next_token': str
        }

        self.attribute_map = {
            'collection_filters': 'collectionFilters',
            'max_results': 'maxResults',
            'next_token': 'nextToken'
        }

        self._collection_filters = collection_filters
        self._max_results = max_results
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListCollectionsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListCollectionsRequest of this ListCollectionsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def collection_filters(self):
        """Gets the collection_filters of this ListCollectionsRequest.


        :return: The collection_filters of this ListCollectionsRequest.
        :rtype: ListCollectionsRequestCollectionFilters
        """
        return self._collection_filters

    @collection_filters.setter
    def collection_filters(self, collection_filters):
        """Sets the collection_filters of this ListCollectionsRequest.


        :param collection_filters: The collection_filters of this ListCollectionsRequest.
        :type collection_filters: ListCollectionsRequestCollectionFilters
        """

        self._collection_filters = collection_filters

    @property
    def max_results(self):
        """Gets the max_results of this ListCollectionsRequest.


        :return: The max_results of this ListCollectionsRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this ListCollectionsRequest.


        :param max_results: The max_results of this ListCollectionsRequest.
        :type max_results: int
        """

        self._max_results = max_results

    @property
    def next_token(self):
        """Gets the next_token of this ListCollectionsRequest.


        :return: The next_token of this ListCollectionsRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this ListCollectionsRequest.


        :param next_token: The next_token of this ListCollectionsRequest.
        :type next_token: str
        """

        self._next_token = next_token
