/*
 * OpenSearch Service Serverless
 * <p>Use the Amazon OpenSearch Serverless API to create, configure, and manage OpenSearch Serverless collections and security policies.</p> <p>OpenSearch Serverless is an on-demand, pre-provisioned serverless configuration for Amazon OpenSearch Service. OpenSearch Serverless removes the operational complexities of provisioning, configuring, and tuning your OpenSearch clusters. It enables you to easily search and analyze petabytes of data without having to worry about the underlying infrastructure and data management.</p> <p> To learn more about OpenSearch Serverless, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-overview.html\">What is Amazon OpenSearch Serverless?</a> </p>
 *
 * The version of the OpenAPI document: 2021-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.VpcEndpointStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateVpcEndpointResponseUpdateVpcEndpointDetail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:30.101557-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateVpcEndpointResponseUpdateVpcEndpointDetail {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_DATE = "lastModifiedDate";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_DATE)
  private Integer lastModifiedDate;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SECURITY_GROUP_IDS = "securityGroupIds";
  @SerializedName(SERIALIZED_NAME_SECURITY_GROUP_IDS)
  private List securityGroupIds;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private VpcEndpointStatus status;

  public static final String SERIALIZED_NAME_SUBNET_IDS = "subnetIds";
  @SerializedName(SERIALIZED_NAME_SUBNET_IDS)
  private List subnetIds;

  public UpdateVpcEndpointResponseUpdateVpcEndpointDetail() {
  }

  public UpdateVpcEndpointResponseUpdateVpcEndpointDetail id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public UpdateVpcEndpointResponseUpdateVpcEndpointDetail lastModifiedDate(Integer lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
    return this;
  }

  /**
   * Get lastModifiedDate
   * @return lastModifiedDate
   */
  @javax.annotation.Nullable
  public Integer getLastModifiedDate() {
    return lastModifiedDate;
  }

  public void setLastModifiedDate(Integer lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
  }


  public UpdateVpcEndpointResponseUpdateVpcEndpointDetail name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public UpdateVpcEndpointResponseUpdateVpcEndpointDetail securityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
    return this;
  }

  /**
   * Get securityGroupIds
   * @return securityGroupIds
   */
  @javax.annotation.Nullable
  public List getSecurityGroupIds() {
    return securityGroupIds;
  }

  public void setSecurityGroupIds(List securityGroupIds) {
    this.securityGroupIds = securityGroupIds;
  }


  public UpdateVpcEndpointResponseUpdateVpcEndpointDetail status(VpcEndpointStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public VpcEndpointStatus getStatus() {
    return status;
  }

  public void setStatus(VpcEndpointStatus status) {
    this.status = status;
  }


  public UpdateVpcEndpointResponseUpdateVpcEndpointDetail subnetIds(List subnetIds) {
    this.subnetIds = subnetIds;
    return this;
  }

  /**
   * Get subnetIds
   * @return subnetIds
   */
  @javax.annotation.Nullable
  public List getSubnetIds() {
    return subnetIds;
  }

  public void setSubnetIds(List subnetIds) {
    this.subnetIds = subnetIds;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateVpcEndpointResponseUpdateVpcEndpointDetail updateVpcEndpointResponseUpdateVpcEndpointDetail = (UpdateVpcEndpointResponseUpdateVpcEndpointDetail) o;
    return Objects.equals(this.id, updateVpcEndpointResponseUpdateVpcEndpointDetail.id) &&
        Objects.equals(this.lastModifiedDate, updateVpcEndpointResponseUpdateVpcEndpointDetail.lastModifiedDate) &&
        Objects.equals(this.name, updateVpcEndpointResponseUpdateVpcEndpointDetail.name) &&
        Objects.equals(this.securityGroupIds, updateVpcEndpointResponseUpdateVpcEndpointDetail.securityGroupIds) &&
        Objects.equals(this.status, updateVpcEndpointResponseUpdateVpcEndpointDetail.status) &&
        Objects.equals(this.subnetIds, updateVpcEndpointResponseUpdateVpcEndpointDetail.subnetIds);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, lastModifiedDate, name, securityGroupIds, status, subnetIds);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateVpcEndpointResponseUpdateVpcEndpointDetail {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastModifiedDate: ").append(toIndentedString(lastModifiedDate)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    securityGroupIds: ").append(toIndentedString(securityGroupIds)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subnetIds: ").append(toIndentedString(subnetIds)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("lastModifiedDate");
    openapiFields.add("name");
    openapiFields.add("securityGroupIds");
    openapiFields.add("status");
    openapiFields.add("subnetIds");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateVpcEndpointResponseUpdateVpcEndpointDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateVpcEndpointResponseUpdateVpcEndpointDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateVpcEndpointResponseUpdateVpcEndpointDetail is not found in the empty JSON string", UpdateVpcEndpointResponseUpdateVpcEndpointDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateVpcEndpointResponseUpdateVpcEndpointDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateVpcEndpointResponseUpdateVpcEndpointDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `id`
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("id"));
      }
      // validate the optional field `lastModifiedDate`
      if (jsonObj.get("lastModifiedDate") != null && !jsonObj.get("lastModifiedDate").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("lastModifiedDate"));
      }
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `securityGroupIds`
      if (jsonObj.get("securityGroupIds") != null && !jsonObj.get("securityGroupIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("securityGroupIds"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        VpcEndpointStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `subnetIds`
      if (jsonObj.get("subnetIds") != null && !jsonObj.get("subnetIds").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("subnetIds"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateVpcEndpointResponseUpdateVpcEndpointDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateVpcEndpointResponseUpdateVpcEndpointDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateVpcEndpointResponseUpdateVpcEndpointDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateVpcEndpointResponseUpdateVpcEndpointDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateVpcEndpointResponseUpdateVpcEndpointDetail>() {
           @Override
           public void write(JsonWriter out, UpdateVpcEndpointResponseUpdateVpcEndpointDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateVpcEndpointResponseUpdateVpcEndpointDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateVpcEndpointResponseUpdateVpcEndpointDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateVpcEndpointResponseUpdateVpcEndpointDetail
   * @throws IOException if the JSON string is invalid with respect to UpdateVpcEndpointResponseUpdateVpcEndpointDetail
   */
  public static UpdateVpcEndpointResponseUpdateVpcEndpointDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateVpcEndpointResponseUpdateVpcEndpointDetail.class);
  }

  /**
   * Convert an instance of UpdateVpcEndpointResponseUpdateVpcEndpointDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

