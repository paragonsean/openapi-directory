/*
 * OpenSearch Service Serverless
 * <p>Use the Amazon OpenSearch Serverless API to create, configure, and manage OpenSearch Serverless collections and security policies.</p> <p>OpenSearch Serverless is an on-demand, pre-provisioned serverless configuration for Amazon OpenSearch Service. OpenSearch Serverless removes the operational complexities of provisioning, configuring, and tuning your OpenSearch clusters. It enables you to easily search and analyze petabytes of data without having to worry about the underlying infrastructure and data management.</p> <p> To learn more about OpenSearch Serverless, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-overview.html\">What is Amazon OpenSearch Serverless?</a> </p>
 *
 * The version of the OpenAPI document: 2021-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.SecurityPolicyType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateSecurityPolicyResponseSecurityPolicyDetail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:30.101557-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateSecurityPolicyResponseSecurityPolicyDetail {
  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private Integer createdDate;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_DATE = "lastModifiedDate";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_DATE)
  private Integer lastModifiedDate;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_POLICY = "policy";
  @SerializedName(SERIALIZED_NAME_POLICY)
  private Object policy;

  public static final String SERIALIZED_NAME_POLICY_VERSION = "policyVersion";
  @SerializedName(SERIALIZED_NAME_POLICY_VERSION)
  private String policyVersion;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private SecurityPolicyType type;

  public UpdateSecurityPolicyResponseSecurityPolicyDetail() {
  }

  public UpdateSecurityPolicyResponseSecurityPolicyDetail createdDate(Integer createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Get createdDate
   * @return createdDate
   */
  @javax.annotation.Nullable
  public Integer getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(Integer createdDate) {
    this.createdDate = createdDate;
  }


  public UpdateSecurityPolicyResponseSecurityPolicyDetail description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateSecurityPolicyResponseSecurityPolicyDetail lastModifiedDate(Integer lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
    return this;
  }

  /**
   * Get lastModifiedDate
   * @return lastModifiedDate
   */
  @javax.annotation.Nullable
  public Integer getLastModifiedDate() {
    return lastModifiedDate;
  }

  public void setLastModifiedDate(Integer lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
  }


  public UpdateSecurityPolicyResponseSecurityPolicyDetail name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public UpdateSecurityPolicyResponseSecurityPolicyDetail policy(Object policy) {
    this.policy = policy;
    return this;
  }

  /**
   * Get policy
   * @return policy
   */
  @javax.annotation.Nullable
  public Object getPolicy() {
    return policy;
  }

  public void setPolicy(Object policy) {
    this.policy = policy;
  }


  public UpdateSecurityPolicyResponseSecurityPolicyDetail policyVersion(String policyVersion) {
    this.policyVersion = policyVersion;
    return this;
  }

  /**
   * Get policyVersion
   * @return policyVersion
   */
  @javax.annotation.Nullable
  public String getPolicyVersion() {
    return policyVersion;
  }

  public void setPolicyVersion(String policyVersion) {
    this.policyVersion = policyVersion;
  }


  public UpdateSecurityPolicyResponseSecurityPolicyDetail type(SecurityPolicyType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public SecurityPolicyType getType() {
    return type;
  }

  public void setType(SecurityPolicyType type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSecurityPolicyResponseSecurityPolicyDetail updateSecurityPolicyResponseSecurityPolicyDetail = (UpdateSecurityPolicyResponseSecurityPolicyDetail) o;
    return Objects.equals(this.createdDate, updateSecurityPolicyResponseSecurityPolicyDetail.createdDate) &&
        Objects.equals(this.description, updateSecurityPolicyResponseSecurityPolicyDetail.description) &&
        Objects.equals(this.lastModifiedDate, updateSecurityPolicyResponseSecurityPolicyDetail.lastModifiedDate) &&
        Objects.equals(this.name, updateSecurityPolicyResponseSecurityPolicyDetail.name) &&
        Objects.equals(this.policy, updateSecurityPolicyResponseSecurityPolicyDetail.policy) &&
        Objects.equals(this.policyVersion, updateSecurityPolicyResponseSecurityPolicyDetail.policyVersion) &&
        Objects.equals(this.type, updateSecurityPolicyResponseSecurityPolicyDetail.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdDate, description, lastModifiedDate, name, policy, policyVersion, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSecurityPolicyResponseSecurityPolicyDetail {\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    lastModifiedDate: ").append(toIndentedString(lastModifiedDate)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    policy: ").append(toIndentedString(policy)).append("\n");
    sb.append("    policyVersion: ").append(toIndentedString(policyVersion)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("createdDate");
    openapiFields.add("description");
    openapiFields.add("lastModifiedDate");
    openapiFields.add("name");
    openapiFields.add("policy");
    openapiFields.add("policyVersion");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateSecurityPolicyResponseSecurityPolicyDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateSecurityPolicyResponseSecurityPolicyDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateSecurityPolicyResponseSecurityPolicyDetail is not found in the empty JSON string", UpdateSecurityPolicyResponseSecurityPolicyDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateSecurityPolicyResponseSecurityPolicyDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateSecurityPolicyResponseSecurityPolicyDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `createdDate`
      if (jsonObj.get("createdDate") != null && !jsonObj.get("createdDate").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("createdDate"));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the optional field `lastModifiedDate`
      if (jsonObj.get("lastModifiedDate") != null && !jsonObj.get("lastModifiedDate").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("lastModifiedDate"));
      }
      // validate the optional field `name`
      if (jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("name"));
      }
      // validate the optional field `policy`
      if (jsonObj.get("policy") != null && !jsonObj.get("policy").isJsonNull()) {
        Object.validateJsonElement(jsonObj.get("policy"));
      }
      // validate the optional field `policyVersion`
      if (jsonObj.get("policyVersion") != null && !jsonObj.get("policyVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("policyVersion"));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        SecurityPolicyType.validateJsonElement(jsonObj.get("type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateSecurityPolicyResponseSecurityPolicyDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateSecurityPolicyResponseSecurityPolicyDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateSecurityPolicyResponseSecurityPolicyDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateSecurityPolicyResponseSecurityPolicyDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateSecurityPolicyResponseSecurityPolicyDetail>() {
           @Override
           public void write(JsonWriter out, UpdateSecurityPolicyResponseSecurityPolicyDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateSecurityPolicyResponseSecurityPolicyDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateSecurityPolicyResponseSecurityPolicyDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateSecurityPolicyResponseSecurityPolicyDetail
   * @throws IOException if the JSON string is invalid with respect to UpdateSecurityPolicyResponseSecurityPolicyDetail
   */
  public static UpdateSecurityPolicyResponseSecurityPolicyDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateSecurityPolicyResponseSecurityPolicyDetail.class);
  }

  /**
   * Convert an instance of UpdateSecurityPolicyResponseSecurityPolicyDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

