/*
 * OpenSearch Service Serverless
 * <p>Use the Amazon OpenSearch Serverless API to create, configure, and manage OpenSearch Serverless collections and security policies.</p> <p>OpenSearch Serverless is an on-demand, pre-provisioned serverless configuration for Amazon OpenSearch Service. OpenSearch Serverless removes the operational complexities of provisioning, configuring, and tuning your OpenSearch clusters. It enables you to easily search and analyze petabytes of data without having to worry about the underlying infrastructure and data management.</p> <p> To learn more about OpenSearch Serverless, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-overview.html\">What is Amazon OpenSearch Serverless?</a> </p>
 *
 * The version of the OpenAPI document: 2021-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.SecurityConfigDetailSamlOptions;
import org.openapitools.client.model.SecurityConfigType;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateSecurityConfigResponseSecurityConfigDetail
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:02:30.101557-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateSecurityConfigResponseSecurityConfigDetail {
  public static final String SERIALIZED_NAME_CONFIG_VERSION = "configVersion";
  @SerializedName(SERIALIZED_NAME_CONFIG_VERSION)
  private String configVersion;

  public static final String SERIALIZED_NAME_CREATED_DATE = "createdDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private Integer createdDate;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_DATE = "lastModifiedDate";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_DATE)
  private Integer lastModifiedDate;

  public static final String SERIALIZED_NAME_SAML_OPTIONS = "samlOptions";
  @SerializedName(SERIALIZED_NAME_SAML_OPTIONS)
  private SecurityConfigDetailSamlOptions samlOptions;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private SecurityConfigType type;

  public UpdateSecurityConfigResponseSecurityConfigDetail() {
  }

  public UpdateSecurityConfigResponseSecurityConfigDetail configVersion(String configVersion) {
    this.configVersion = configVersion;
    return this;
  }

  /**
   * Get configVersion
   * @return configVersion
   */
  @javax.annotation.Nullable
  public String getConfigVersion() {
    return configVersion;
  }

  public void setConfigVersion(String configVersion) {
    this.configVersion = configVersion;
  }


  public UpdateSecurityConfigResponseSecurityConfigDetail createdDate(Integer createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * Get createdDate
   * @return createdDate
   */
  @javax.annotation.Nullable
  public Integer getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(Integer createdDate) {
    this.createdDate = createdDate;
  }


  public UpdateSecurityConfigResponseSecurityConfigDetail description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateSecurityConfigResponseSecurityConfigDetail id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public UpdateSecurityConfigResponseSecurityConfigDetail lastModifiedDate(Integer lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
    return this;
  }

  /**
   * Get lastModifiedDate
   * @return lastModifiedDate
   */
  @javax.annotation.Nullable
  public Integer getLastModifiedDate() {
    return lastModifiedDate;
  }

  public void setLastModifiedDate(Integer lastModifiedDate) {
    this.lastModifiedDate = lastModifiedDate;
  }


  public UpdateSecurityConfigResponseSecurityConfigDetail samlOptions(SecurityConfigDetailSamlOptions samlOptions) {
    this.samlOptions = samlOptions;
    return this;
  }

  /**
   * Get samlOptions
   * @return samlOptions
   */
  @javax.annotation.Nullable
  public SecurityConfigDetailSamlOptions getSamlOptions() {
    return samlOptions;
  }

  public void setSamlOptions(SecurityConfigDetailSamlOptions samlOptions) {
    this.samlOptions = samlOptions;
  }


  public UpdateSecurityConfigResponseSecurityConfigDetail type(SecurityConfigType type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public SecurityConfigType getType() {
    return type;
  }

  public void setType(SecurityConfigType type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSecurityConfigResponseSecurityConfigDetail updateSecurityConfigResponseSecurityConfigDetail = (UpdateSecurityConfigResponseSecurityConfigDetail) o;
    return Objects.equals(this.configVersion, updateSecurityConfigResponseSecurityConfigDetail.configVersion) &&
        Objects.equals(this.createdDate, updateSecurityConfigResponseSecurityConfigDetail.createdDate) &&
        Objects.equals(this.description, updateSecurityConfigResponseSecurityConfigDetail.description) &&
        Objects.equals(this.id, updateSecurityConfigResponseSecurityConfigDetail.id) &&
        Objects.equals(this.lastModifiedDate, updateSecurityConfigResponseSecurityConfigDetail.lastModifiedDate) &&
        Objects.equals(this.samlOptions, updateSecurityConfigResponseSecurityConfigDetail.samlOptions) &&
        Objects.equals(this.type, updateSecurityConfigResponseSecurityConfigDetail.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(configVersion, createdDate, description, id, lastModifiedDate, samlOptions, type);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSecurityConfigResponseSecurityConfigDetail {\n");
    sb.append("    configVersion: ").append(toIndentedString(configVersion)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastModifiedDate: ").append(toIndentedString(lastModifiedDate)).append("\n");
    sb.append("    samlOptions: ").append(toIndentedString(samlOptions)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("configVersion");
    openapiFields.add("createdDate");
    openapiFields.add("description");
    openapiFields.add("id");
    openapiFields.add("lastModifiedDate");
    openapiFields.add("samlOptions");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateSecurityConfigResponseSecurityConfigDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateSecurityConfigResponseSecurityConfigDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateSecurityConfigResponseSecurityConfigDetail is not found in the empty JSON string", UpdateSecurityConfigResponseSecurityConfigDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateSecurityConfigResponseSecurityConfigDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateSecurityConfigResponseSecurityConfigDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `configVersion`
      if (jsonObj.get("configVersion") != null && !jsonObj.get("configVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("configVersion"));
      }
      // validate the optional field `createdDate`
      if (jsonObj.get("createdDate") != null && !jsonObj.get("createdDate").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("createdDate"));
      }
      // validate the optional field `description`
      if (jsonObj.get("description") != null && !jsonObj.get("description").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("description"));
      }
      // validate the optional field `id`
      if (jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("id"));
      }
      // validate the optional field `lastModifiedDate`
      if (jsonObj.get("lastModifiedDate") != null && !jsonObj.get("lastModifiedDate").isJsonNull()) {
        Integer.validateJsonElement(jsonObj.get("lastModifiedDate"));
      }
      // validate the optional field `samlOptions`
      if (jsonObj.get("samlOptions") != null && !jsonObj.get("samlOptions").isJsonNull()) {
        SecurityConfigDetailSamlOptions.validateJsonElement(jsonObj.get("samlOptions"));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        SecurityConfigType.validateJsonElement(jsonObj.get("type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateSecurityConfigResponseSecurityConfigDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateSecurityConfigResponseSecurityConfigDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateSecurityConfigResponseSecurityConfigDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateSecurityConfigResponseSecurityConfigDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateSecurityConfigResponseSecurityConfigDetail>() {
           @Override
           public void write(JsonWriter out, UpdateSecurityConfigResponseSecurityConfigDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateSecurityConfigResponseSecurityConfigDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateSecurityConfigResponseSecurityConfigDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateSecurityConfigResponseSecurityConfigDetail
   * @throws IOException if the JSON string is invalid with respect to UpdateSecurityConfigResponseSecurityConfigDetail
   */
  public static UpdateSecurityConfigResponseSecurityConfigDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateSecurityConfigResponseSecurityConfigDetail.class);
  }

  /**
   * Convert an instance of UpdateSecurityConfigResponseSecurityConfigDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

