/*
 * OpenSearch Service Serverless
 * <p>Use the Amazon OpenSearch Serverless API to create, configure, and manage OpenSearch Serverless collections and security policies.</p> <p>OpenSearch Serverless is an on-demand, pre-provisioned serverless configuration for Amazon OpenSearch Service. OpenSearch Serverless removes the operational complexities of provisioning, configuring, and tuning your OpenSearch clusters. It enables you to easily search and analyze petabytes of data without having to worry about the underlying infrastructure and data management.</p> <p> To learn more about OpenSearch Serverless, see <a href=\"https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-overview.html\">What is Amazon OpenSearch Serverless?</a> </p>
 *
 * The version of the OpenAPI document: 2021-11-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.BatchGetCollectionRequest;
import org.openapitools.client.model.BatchGetCollectionResponse;
import org.openapitools.client.model.BatchGetVpcEndpointRequest;
import org.openapitools.client.model.BatchGetVpcEndpointResponse;
import org.openapitools.client.model.CreateAccessPolicyRequest;
import org.openapitools.client.model.CreateAccessPolicyResponse;
import org.openapitools.client.model.CreateCollectionRequest;
import org.openapitools.client.model.CreateCollectionResponse;
import org.openapitools.client.model.CreateSecurityConfigRequest;
import org.openapitools.client.model.CreateSecurityConfigResponse;
import org.openapitools.client.model.CreateSecurityPolicyRequest;
import org.openapitools.client.model.CreateSecurityPolicyResponse;
import org.openapitools.client.model.CreateVpcEndpointRequest;
import org.openapitools.client.model.CreateVpcEndpointResponse;
import org.openapitools.client.model.DeleteAccessPolicyRequest;
import org.openapitools.client.model.DeleteCollectionRequest;
import org.openapitools.client.model.DeleteCollectionResponse;
import org.openapitools.client.model.DeleteSecurityConfigRequest;
import org.openapitools.client.model.DeleteSecurityPolicyRequest;
import org.openapitools.client.model.DeleteVpcEndpointRequest;
import org.openapitools.client.model.DeleteVpcEndpointResponse;
import org.openapitools.client.model.GetAccessPolicyRequest;
import org.openapitools.client.model.GetAccessPolicyResponse;
import org.openapitools.client.model.GetAccountSettingsResponse;
import org.openapitools.client.model.GetPoliciesStatsResponse;
import org.openapitools.client.model.GetSecurityConfigRequest;
import org.openapitools.client.model.GetSecurityConfigResponse;
import org.openapitools.client.model.GetSecurityPolicyRequest;
import org.openapitools.client.model.GetSecurityPolicyResponse;
import org.openapitools.client.model.ListAccessPoliciesRequest;
import org.openapitools.client.model.ListAccessPoliciesResponse;
import org.openapitools.client.model.ListCollectionsRequest;
import org.openapitools.client.model.ListCollectionsResponse;
import org.openapitools.client.model.ListSecurityConfigsRequest;
import org.openapitools.client.model.ListSecurityConfigsResponse;
import org.openapitools.client.model.ListSecurityPoliciesRequest;
import org.openapitools.client.model.ListSecurityPoliciesResponse;
import org.openapitools.client.model.ListTagsForResourceRequest;
import org.openapitools.client.model.ListTagsForResourceResponse;
import org.openapitools.client.model.ListVpcEndpointsRequest;
import org.openapitools.client.model.ListVpcEndpointsResponse;
import org.openapitools.client.model.TagResourceRequest;
import org.openapitools.client.model.UntagResourceRequest;
import org.openapitools.client.model.UpdateAccessPolicyRequest;
import org.openapitools.client.model.UpdateAccessPolicyResponse;
import org.openapitools.client.model.UpdateAccountSettingsRequest;
import org.openapitools.client.model.UpdateAccountSettingsResponse;
import org.openapitools.client.model.UpdateCollectionRequest;
import org.openapitools.client.model.UpdateCollectionResponse;
import org.openapitools.client.model.UpdateSecurityConfigRequest;
import org.openapitools.client.model.UpdateSecurityConfigResponse;
import org.openapitools.client.model.UpdateSecurityPolicyRequest;
import org.openapitools.client.model.UpdateSecurityPolicyResponse;
import org.openapitools.client.model.UpdateVpcEndpointRequest;
import org.openapitools.client.model.UpdateVpcEndpointResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Returns attributes for one or more collections, including the collection endpoint and the OpenSearch Dashboards endpoint. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-manage.html\&quot;&gt;Creating and managing Amazon OpenSearch Serverless collections&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batchGetCollectionTest() throws ApiException {
        String xAmzTarget = null;
        BatchGetCollectionRequest batchGetCollectionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        BatchGetCollectionResponse response = api.batchGetCollection(xAmzTarget, batchGetCollectionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns attributes for one or more VPC endpoints associated with the current account. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-vpc.html\&quot;&gt;Access Amazon OpenSearch Serverless using an interface endpoint&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void batchGetVpcEndpointTest() throws ApiException {
        String xAmzTarget = null;
        BatchGetVpcEndpointRequest batchGetVpcEndpointRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        BatchGetVpcEndpointResponse response = api.batchGetVpcEndpoint(xAmzTarget, batchGetVpcEndpointRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a data access policy for OpenSearch Serverless. Access policies limit access to collections and the resources within them, and allow a user to access that data irrespective of the access mechanism or network source. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-data-access.html\&quot;&gt;Data access control for Amazon OpenSearch Serverless&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createAccessPolicyTest() throws ApiException {
        String xAmzTarget = null;
        CreateAccessPolicyRequest createAccessPolicyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateAccessPolicyResponse response = api.createAccessPolicy(xAmzTarget, createAccessPolicyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a new OpenSearch Serverless collection. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-manage.html\&quot;&gt;Creating and managing Amazon OpenSearch Serverless collections&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createCollectionTest() throws ApiException {
        String xAmzTarget = null;
        CreateCollectionRequest createCollectionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateCollectionResponse response = api.createCollection(xAmzTarget, createCollectionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Specifies a security configuration for OpenSearch Serverless. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-saml.html\&quot;&gt;SAML authentication for Amazon OpenSearch Serverless&lt;/a&gt;. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSecurityConfigTest() throws ApiException {
        String xAmzTarget = null;
        CreateSecurityConfigRequest createSecurityConfigRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateSecurityConfigResponse response = api.createSecurityConfig(xAmzTarget, createSecurityConfigRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates a security policy to be used by one or more OpenSearch Serverless collections. Security policies provide access to a collection and its OpenSearch Dashboards endpoint from public networks or specific VPC endpoints. They also allow you to secure a collection with a KMS encryption key. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-network.html\&quot;&gt;Network access for Amazon OpenSearch Serverless&lt;/a&gt; and &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-encryption.html\&quot;&gt;Encryption at rest for Amazon OpenSearch Serverless&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSecurityPolicyTest() throws ApiException {
        String xAmzTarget = null;
        CreateSecurityPolicyRequest createSecurityPolicyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateSecurityPolicyResponse response = api.createSecurityPolicy(xAmzTarget, createSecurityPolicyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Creates an OpenSearch Serverless-managed interface VPC endpoint. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-vpc.html\&quot;&gt;Access Amazon OpenSearch Serverless using an interface endpoint&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createVpcEndpointTest() throws ApiException {
        String xAmzTarget = null;
        CreateVpcEndpointRequest createVpcEndpointRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        CreateVpcEndpointResponse response = api.createVpcEndpoint(xAmzTarget, createVpcEndpointRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an OpenSearch Serverless access policy. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-data-access.html\&quot;&gt;Data access control for Amazon OpenSearch Serverless&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAccessPolicyTest() throws ApiException {
        String xAmzTarget = null;
        DeleteAccessPolicyRequest deleteAccessPolicyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteAccessPolicy(xAmzTarget, deleteAccessPolicyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an OpenSearch Serverless collection. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-manage.html\&quot;&gt;Creating and managing Amazon OpenSearch Serverless collections&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteCollectionTest() throws ApiException {
        String xAmzTarget = null;
        DeleteCollectionRequest deleteCollectionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteCollectionResponse response = api.deleteCollection(xAmzTarget, deleteCollectionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes a security configuration for OpenSearch Serverless. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-saml.html\&quot;&gt;SAML authentication for Amazon OpenSearch Serverless&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSecurityConfigTest() throws ApiException {
        String xAmzTarget = null;
        DeleteSecurityConfigRequest deleteSecurityConfigRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteSecurityConfig(xAmzTarget, deleteSecurityConfigRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an OpenSearch Serverless security policy.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSecurityPolicyTest() throws ApiException {
        String xAmzTarget = null;
        DeleteSecurityPolicyRequest deleteSecurityPolicyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.deleteSecurityPolicy(xAmzTarget, deleteSecurityPolicyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Deletes an OpenSearch Serverless-managed interface endpoint. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-vpc.html\&quot;&gt;Access Amazon OpenSearch Serverless using an interface endpoint&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteVpcEndpointTest() throws ApiException {
        String xAmzTarget = null;
        DeleteVpcEndpointRequest deleteVpcEndpointRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        DeleteVpcEndpointResponse response = api.deleteVpcEndpoint(xAmzTarget, deleteVpcEndpointRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns an OpenSearch Serverless access policy. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-data-access.html\&quot;&gt;Data access control for Amazon OpenSearch Serverless&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccessPolicyTest() throws ApiException {
        String xAmzTarget = null;
        GetAccessPolicyRequest getAccessPolicyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetAccessPolicyResponse response = api.getAccessPolicy(xAmzTarget, getAccessPolicyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns account-level settings related to OpenSearch Serverless.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccountSettingsTest() throws ApiException {
        String xAmzTarget = null;
        Object body = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetAccountSettingsResponse response = api.getAccountSettings(xAmzTarget, body, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns statistical information about your OpenSearch Serverless access policies, security configurations, and security policies.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPoliciesStatsTest() throws ApiException {
        String xAmzTarget = null;
        Object body = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetPoliciesStatsResponse response = api.getPoliciesStats(xAmzTarget, body, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns information about an OpenSearch Serverless security configuration. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-saml.html\&quot;&gt;SAML authentication for Amazon OpenSearch Serverless&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSecurityConfigTest() throws ApiException {
        String xAmzTarget = null;
        GetSecurityConfigRequest getSecurityConfigRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetSecurityConfigResponse response = api.getSecurityConfig(xAmzTarget, getSecurityConfigRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns information about a configured OpenSearch Serverless security policy. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-network.html\&quot;&gt;Network access for Amazon OpenSearch Serverless&lt;/a&gt; and &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-encryption.html\&quot;&gt;Encryption at rest for Amazon OpenSearch Serverless&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSecurityPolicyTest() throws ApiException {
        String xAmzTarget = null;
        GetSecurityPolicyRequest getSecurityPolicyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        GetSecurityPolicyResponse response = api.getSecurityPolicy(xAmzTarget, getSecurityPolicyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns information about a list of OpenSearch Serverless access policies.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAccessPoliciesTest() throws ApiException {
        String xAmzTarget = null;
        ListAccessPoliciesRequest listAccessPoliciesRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListAccessPoliciesResponse response = api.listAccessPolicies(xAmzTarget, listAccessPoliciesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * &lt;p&gt;Lists all OpenSearch Serverless collections. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-manage.html\&quot;&gt;Creating and managing Amazon OpenSearch Serverless collections&lt;/a&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Make sure to include an empty request body {} if you don&#39;t include any collection filters in the request.&lt;/p&gt; &lt;/note&gt;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCollectionsTest() throws ApiException {
        String xAmzTarget = null;
        ListCollectionsRequest listCollectionsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListCollectionsResponse response = api.listCollections(xAmzTarget, listCollectionsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns information about configured OpenSearch Serverless security configurations. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-saml.html\&quot;&gt;SAML authentication for Amazon OpenSearch Serverless&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSecurityConfigsTest() throws ApiException {
        String xAmzTarget = null;
        ListSecurityConfigsRequest listSecurityConfigsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListSecurityConfigsResponse response = api.listSecurityConfigs(xAmzTarget, listSecurityConfigsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns information about configured OpenSearch Serverless security policies.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listSecurityPoliciesTest() throws ApiException {
        String xAmzTarget = null;
        ListSecurityPoliciesRequest listSecurityPoliciesRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListSecurityPoliciesResponse response = api.listSecurityPolicies(xAmzTarget, listSecurityPoliciesRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Returns the tags for an OpenSearch Serverless resource. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/tag-collection.html\&quot;&gt;Tagging Amazon OpenSearch Serverless collections&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTagsForResourceTest() throws ApiException {
        String xAmzTarget = null;
        ListTagsForResourceRequest listTagsForResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        ListTagsForResourceResponse response = api.listTagsForResource(xAmzTarget, listTagsForResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Returns the OpenSearch Serverless-managed interface VPC endpoints associated with the current account. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-vpc.html\&quot;&gt;Access Amazon OpenSearch Serverless using an interface endpoint&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listVpcEndpointsTest() throws ApiException {
        String xAmzTarget = null;
        ListVpcEndpointsRequest listVpcEndpointsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        String maxResults = null;
        String nextToken = null;
        ListVpcEndpointsResponse response = api.listVpcEndpoints(xAmzTarget, listVpcEndpointsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders, maxResults, nextToken);
        // TODO: test validations
    }

    /**
     * Associates tags with an OpenSearch Serverless resource. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/tag-collection.html\&quot;&gt;Tagging Amazon OpenSearch Serverless collections&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void tagResourceTest() throws ApiException {
        String xAmzTarget = null;
        TagResourceRequest tagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.tagResource(xAmzTarget, tagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Removes a tag or set of tags from an OpenSearch Serverless resource. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/tag-collection.html\&quot;&gt;Tagging Amazon OpenSearch Serverless collections&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void untagResourceTest() throws ApiException {
        String xAmzTarget = null;
        UntagResourceRequest untagResourceRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        Object response = api.untagResource(xAmzTarget, untagResourceRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates an OpenSearch Serverless access policy. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-data-access.html\&quot;&gt;Data access control for Amazon OpenSearch Serverless&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAccessPolicyTest() throws ApiException {
        String xAmzTarget = null;
        UpdateAccessPolicyRequest updateAccessPolicyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateAccessPolicyResponse response = api.updateAccessPolicy(xAmzTarget, updateAccessPolicyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Update the OpenSearch Serverless settings for the current Amazon Web Services account. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-scaling.html\&quot;&gt;Managing capacity limits for Amazon OpenSearch Serverless&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateAccountSettingsTest() throws ApiException {
        String xAmzTarget = null;
        UpdateAccountSettingsRequest updateAccountSettingsRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateAccountSettingsResponse response = api.updateAccountSettings(xAmzTarget, updateAccountSettingsRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates an OpenSearch Serverless collection.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateCollectionTest() throws ApiException {
        String xAmzTarget = null;
        UpdateCollectionRequest updateCollectionRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateCollectionResponse response = api.updateCollection(xAmzTarget, updateCollectionRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates a security configuration for OpenSearch Serverless. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-saml.html\&quot;&gt;SAML authentication for Amazon OpenSearch Serverless&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSecurityConfigTest() throws ApiException {
        String xAmzTarget = null;
        UpdateSecurityConfigRequest updateSecurityConfigRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateSecurityConfigResponse response = api.updateSecurityConfig(xAmzTarget, updateSecurityConfigRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates an OpenSearch Serverless security policy. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-network.html\&quot;&gt;Network access for Amazon OpenSearch Serverless&lt;/a&gt; and &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-encryption.html\&quot;&gt;Encryption at rest for Amazon OpenSearch Serverless&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateSecurityPolicyTest() throws ApiException {
        String xAmzTarget = null;
        UpdateSecurityPolicyRequest updateSecurityPolicyRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateSecurityPolicyResponse response = api.updateSecurityPolicy(xAmzTarget, updateSecurityPolicyRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

    /**
     * Updates an OpenSearch Serverless-managed interface endpoint. For more information, see &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/opensearch-service/latest/developerguide/serverless-vpc.html\&quot;&gt;Access Amazon OpenSearch Serverless using an interface endpoint&lt;/a&gt;.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateVpcEndpointTest() throws ApiException {
        String xAmzTarget = null;
        UpdateVpcEndpointRequest updateVpcEndpointRequest = null;
        String xAmzContentSha256 = null;
        String xAmzDate = null;
        String xAmzAlgorithm = null;
        String xAmzCredential = null;
        String xAmzSecurityToken = null;
        String xAmzSignature = null;
        String xAmzSignedHeaders = null;
        UpdateVpcEndpointResponse response = api.updateVpcEndpoint(xAmzTarget, updateVpcEndpointRequest, xAmzContentSha256, xAmzDate, xAmzAlgorithm, xAmzCredential, xAmzSecurityToken, xAmzSignature, xAmzSignedHeaders);
        // TODO: test validations
    }

}
