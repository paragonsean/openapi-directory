/**
 * AWS Cloud9
 * <fullname>Cloud9</fullname> <p>Cloud9 is a collection of tools that you can use to code, build, run, test, debug, and release software in the cloud.</p> <p>For more information about Cloud9, see the <a href=\"https://docs.aws.amazon.com/cloud9/latest/user-guide\">Cloud9 User Guide</a>.</p> <p>Cloud9 supports these operations:</p> <ul> <li> <p> <code>CreateEnvironmentEC2</code>: Creates an Cloud9 development environment, launches an Amazon EC2 instance, and then connects from the instance to the environment.</p> </li> <li> <p> <code>CreateEnvironmentMembership</code>: Adds an environment member to an environment.</p> </li> <li> <p> <code>DeleteEnvironment</code>: Deletes an environment. If an Amazon EC2 instance is connected to the environment, also terminates the instance.</p> </li> <li> <p> <code>DeleteEnvironmentMembership</code>: Deletes an environment member from an environment.</p> </li> <li> <p> <code>DescribeEnvironmentMemberships</code>: Gets information about environment members for an environment.</p> </li> <li> <p> <code>DescribeEnvironments</code>: Gets information about environments.</p> </li> <li> <p> <code>DescribeEnvironmentStatus</code>: Gets status information for an environment.</p> </li> <li> <p> <code>ListEnvironments</code>: Gets a list of environment identifiers.</p> </li> <li> <p> <code>ListTagsForResource</code>: Gets the tags for an environment.</p> </li> <li> <p> <code>TagResource</code>: Adds tags to an environment.</p> </li> <li> <p> <code>UntagResource</code>: Removes tags from an environment.</p> </li> <li> <p> <code>UpdateEnvironment</code>: Changes the settings of an existing environment.</p> </li> <li> <p> <code>UpdateEnvironmentMembership</code>: Changes the settings of an existing environment member for an environment.</p> </li> </ul>
 *
 * The version of the OpenAPI document: 2017-09-23
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateEnvironmentMembershipRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateEnvironmentMembershipRequest::OAIUpdateEnvironmentMembershipRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateEnvironmentMembershipRequest::OAIUpdateEnvironmentMembershipRequest() {
    this->initializeModel();
}

OAIUpdateEnvironmentMembershipRequest::~OAIUpdateEnvironmentMembershipRequest() {}

void OAIUpdateEnvironmentMembershipRequest::initializeModel() {

    m_environment_id_isSet = false;
    m_environment_id_isValid = false;

    m_user_arn_isSet = false;
    m_user_arn_isValid = false;

    m_permissions_isSet = false;
    m_permissions_isValid = false;
}

void OAIUpdateEnvironmentMembershipRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateEnvironmentMembershipRequest::fromJsonObject(QJsonObject json) {

    m_environment_id_isValid = ::OpenAPI::fromJsonValue(m_environment_id, json[QString("environmentId")]);
    m_environment_id_isSet = !json[QString("environmentId")].isNull() && m_environment_id_isValid;

    m_user_arn_isValid = ::OpenAPI::fromJsonValue(m_user_arn, json[QString("userArn")]);
    m_user_arn_isSet = !json[QString("userArn")].isNull() && m_user_arn_isValid;

    m_permissions_isValid = ::OpenAPI::fromJsonValue(m_permissions, json[QString("permissions")]);
    m_permissions_isSet = !json[QString("permissions")].isNull() && m_permissions_isValid;
}

QString OAIUpdateEnvironmentMembershipRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateEnvironmentMembershipRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_environment_id_isSet) {
        obj.insert(QString("environmentId"), ::OpenAPI::toJsonValue(m_environment_id));
    }
    if (m_user_arn_isSet) {
        obj.insert(QString("userArn"), ::OpenAPI::toJsonValue(m_user_arn));
    }
    if (m_permissions.isSet()) {
        obj.insert(QString("permissions"), ::OpenAPI::toJsonValue(m_permissions));
    }
    return obj;
}

QString OAIUpdateEnvironmentMembershipRequest::getEnvironmentId() const {
    return m_environment_id;
}
void OAIUpdateEnvironmentMembershipRequest::setEnvironmentId(const QString &environment_id) {
    m_environment_id = environment_id;
    m_environment_id_isSet = true;
}

bool OAIUpdateEnvironmentMembershipRequest::is_environment_id_Set() const{
    return m_environment_id_isSet;
}

bool OAIUpdateEnvironmentMembershipRequest::is_environment_id_Valid() const{
    return m_environment_id_isValid;
}

QString OAIUpdateEnvironmentMembershipRequest::getUserArn() const {
    return m_user_arn;
}
void OAIUpdateEnvironmentMembershipRequest::setUserArn(const QString &user_arn) {
    m_user_arn = user_arn;
    m_user_arn_isSet = true;
}

bool OAIUpdateEnvironmentMembershipRequest::is_user_arn_Set() const{
    return m_user_arn_isSet;
}

bool OAIUpdateEnvironmentMembershipRequest::is_user_arn_Valid() const{
    return m_user_arn_isValid;
}

OAIMemberPermissions OAIUpdateEnvironmentMembershipRequest::getPermissions() const {
    return m_permissions;
}
void OAIUpdateEnvironmentMembershipRequest::setPermissions(const OAIMemberPermissions &permissions) {
    m_permissions = permissions;
    m_permissions_isSet = true;
}

bool OAIUpdateEnvironmentMembershipRequest::is_permissions_Set() const{
    return m_permissions_isSet;
}

bool OAIUpdateEnvironmentMembershipRequest::is_permissions_Valid() const{
    return m_permissions_isValid;
}

bool OAIUpdateEnvironmentMembershipRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_environment_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_permissions.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateEnvironmentMembershipRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_environment_id_isValid && m_user_arn_isValid && m_permissions_isValid && true;
}

} // namespace OpenAPI
