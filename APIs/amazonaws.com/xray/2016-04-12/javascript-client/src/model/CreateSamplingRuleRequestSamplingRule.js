/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SamplingRule from './SamplingRule';

/**
 * The CreateSamplingRuleRequestSamplingRule model module.
 * @module model/CreateSamplingRuleRequestSamplingRule
 * @version 2016-04-12
 */
class CreateSamplingRuleRequestSamplingRule {
    /**
     * Constructs a new <code>CreateSamplingRuleRequestSamplingRule</code>.
     * @alias module:model/CreateSamplingRuleRequestSamplingRule
     * @implements module:model/SamplingRule
     * @param resourceARN {String} 
     * @param priority {Number} 
     * @param fixedRate {Number} 
     * @param reservoirSize {Number} 
     * @param serviceName {String} 
     * @param serviceType {String} 
     * @param host {String} 
     * @param hTTPMethod {String} 
     * @param uRLPath {String} 
     * @param version {Number} 
     */
    constructor(resourceARN, priority, fixedRate, reservoirSize, serviceName, serviceType, host, hTTPMethod, uRLPath, version) { 
        SamplingRule.initialize(this, resourceARN, priority, fixedRate, reservoirSize, serviceName, serviceType, host, hTTPMethod, uRLPath, version);
        CreateSamplingRuleRequestSamplingRule.initialize(this, resourceARN, priority, fixedRate, reservoirSize, serviceName, serviceType, host, hTTPMethod, uRLPath, version);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resourceARN, priority, fixedRate, reservoirSize, serviceName, serviceType, host, hTTPMethod, uRLPath, version) { 
        obj['ResourceARN'] = resourceARN;
        obj['Priority'] = priority;
        obj['FixedRate'] = fixedRate;
        obj['ReservoirSize'] = reservoirSize;
        obj['ServiceName'] = serviceName;
        obj['ServiceType'] = serviceType;
        obj['Host'] = host;
        obj['HTTPMethod'] = hTTPMethod;
        obj['URLPath'] = uRLPath;
        obj['Version'] = version;
    }

    /**
     * Constructs a <code>CreateSamplingRuleRequestSamplingRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateSamplingRuleRequestSamplingRule} obj Optional instance to populate.
     * @return {module:model/CreateSamplingRuleRequestSamplingRule} The populated <code>CreateSamplingRuleRequestSamplingRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateSamplingRuleRequestSamplingRule();
            SamplingRule.constructFromObject(data, obj);

            if (data.hasOwnProperty('RuleName')) {
                obj['RuleName'] = ApiClient.convertToType(data['RuleName'], 'String');
            }
            if (data.hasOwnProperty('RuleARN')) {
                obj['RuleARN'] = ApiClient.convertToType(data['RuleARN'], 'String');
            }
            if (data.hasOwnProperty('ResourceARN')) {
                obj['ResourceARN'] = ApiClient.convertToType(data['ResourceARN'], 'String');
            }
            if (data.hasOwnProperty('Priority')) {
                obj['Priority'] = ApiClient.convertToType(data['Priority'], 'Number');
            }
            if (data.hasOwnProperty('FixedRate')) {
                obj['FixedRate'] = ApiClient.convertToType(data['FixedRate'], 'Number');
            }
            if (data.hasOwnProperty('ReservoirSize')) {
                obj['ReservoirSize'] = ApiClient.convertToType(data['ReservoirSize'], 'Number');
            }
            if (data.hasOwnProperty('ServiceName')) {
                obj['ServiceName'] = ApiClient.convertToType(data['ServiceName'], 'String');
            }
            if (data.hasOwnProperty('ServiceType')) {
                obj['ServiceType'] = ApiClient.convertToType(data['ServiceType'], 'String');
            }
            if (data.hasOwnProperty('Host')) {
                obj['Host'] = ApiClient.convertToType(data['Host'], 'String');
            }
            if (data.hasOwnProperty('HTTPMethod')) {
                obj['HTTPMethod'] = ApiClient.convertToType(data['HTTPMethod'], 'String');
            }
            if (data.hasOwnProperty('URLPath')) {
                obj['URLPath'] = ApiClient.convertToType(data['URLPath'], 'String');
            }
            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], 'Number');
            }
            if (data.hasOwnProperty('Attributes')) {
                obj['Attributes'] = ApiClient.convertToType(data['Attributes'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateSamplingRuleRequestSamplingRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateSamplingRuleRequestSamplingRule</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateSamplingRuleRequestSamplingRule.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `RuleName`
        if (data['RuleName']) { // data not null
          String.validateJSON(data['RuleName']);
        }
        // validate the optional field `RuleARN`
        if (data['RuleARN']) { // data not null
          String.validateJSON(data['RuleARN']);
        }
        // validate the optional field `ResourceARN`
        if (data['ResourceARN']) { // data not null
          String.validateJSON(data['ResourceARN']);
        }
        // validate the optional field `Priority`
        if (data['Priority']) { // data not null
          Number.validateJSON(data['Priority']);
        }
        // validate the optional field `FixedRate`
        if (data['FixedRate']) { // data not null
          Number.validateJSON(data['FixedRate']);
        }
        // validate the optional field `ReservoirSize`
        if (data['ReservoirSize']) { // data not null
          Number.validateJSON(data['ReservoirSize']);
        }
        // validate the optional field `ServiceName`
        if (data['ServiceName']) { // data not null
          String.validateJSON(data['ServiceName']);
        }
        // validate the optional field `ServiceType`
        if (data['ServiceType']) { // data not null
          String.validateJSON(data['ServiceType']);
        }
        // validate the optional field `Host`
        if (data['Host']) { // data not null
          String.validateJSON(data['Host']);
        }
        // validate the optional field `HTTPMethod`
        if (data['HTTPMethod']) { // data not null
          String.validateJSON(data['HTTPMethod']);
        }
        // validate the optional field `URLPath`
        if (data['URLPath']) { // data not null
          String.validateJSON(data['URLPath']);
        }
        // validate the optional field `Version`
        if (data['Version']) { // data not null
          Number.validateJSON(data['Version']);
        }
        // validate the optional field `Attributes`
        if (data['Attributes']) { // data not null
          Object.validateJSON(data['Attributes']);
        }

        return true;
    }


}

CreateSamplingRuleRequestSamplingRule.RequiredProperties = ["ResourceARN", "Priority", "FixedRate", "ReservoirSize", "ServiceName", "ServiceType", "Host", "HTTPMethod", "URLPath", "Version"];

/**
 * @member {String} RuleName
 */
CreateSamplingRuleRequestSamplingRule.prototype['RuleName'] = undefined;

/**
 * @member {String} RuleARN
 */
CreateSamplingRuleRequestSamplingRule.prototype['RuleARN'] = undefined;

/**
 * @member {String} ResourceARN
 */
CreateSamplingRuleRequestSamplingRule.prototype['ResourceARN'] = undefined;

/**
 * @member {Number} Priority
 */
CreateSamplingRuleRequestSamplingRule.prototype['Priority'] = undefined;

/**
 * @member {Number} FixedRate
 */
CreateSamplingRuleRequestSamplingRule.prototype['FixedRate'] = undefined;

/**
 * @member {Number} ReservoirSize
 */
CreateSamplingRuleRequestSamplingRule.prototype['ReservoirSize'] = undefined;

/**
 * @member {String} ServiceName
 */
CreateSamplingRuleRequestSamplingRule.prototype['ServiceName'] = undefined;

/**
 * @member {String} ServiceType
 */
CreateSamplingRuleRequestSamplingRule.prototype['ServiceType'] = undefined;

/**
 * @member {String} Host
 */
CreateSamplingRuleRequestSamplingRule.prototype['Host'] = undefined;

/**
 * @member {String} HTTPMethod
 */
CreateSamplingRuleRequestSamplingRule.prototype['HTTPMethod'] = undefined;

/**
 * @member {String} URLPath
 */
CreateSamplingRuleRequestSamplingRule.prototype['URLPath'] = undefined;

/**
 * @member {Number} Version
 */
CreateSamplingRuleRequestSamplingRule.prototype['Version'] = undefined;

/**
 * @member {Object} Attributes
 */
CreateSamplingRuleRequestSamplingRule.prototype['Attributes'] = undefined;


// Implement SamplingRule interface:
/**
 * @member {String} RuleName
 */
SamplingRule.prototype['RuleName'] = undefined;
/**
 * @member {String} RuleARN
 */
SamplingRule.prototype['RuleARN'] = undefined;
/**
 * @member {String} ResourceARN
 */
SamplingRule.prototype['ResourceARN'] = undefined;
/**
 * @member {Number} Priority
 */
SamplingRule.prototype['Priority'] = undefined;
/**
 * @member {Number} FixedRate
 */
SamplingRule.prototype['FixedRate'] = undefined;
/**
 * @member {Number} ReservoirSize
 */
SamplingRule.prototype['ReservoirSize'] = undefined;
/**
 * @member {String} ServiceName
 */
SamplingRule.prototype['ServiceName'] = undefined;
/**
 * @member {String} ServiceType
 */
SamplingRule.prototype['ServiceType'] = undefined;
/**
 * @member {String} Host
 */
SamplingRule.prototype['Host'] = undefined;
/**
 * @member {String} HTTPMethod
 */
SamplingRule.prototype['HTTPMethod'] = undefined;
/**
 * @member {String} URLPath
 */
SamplingRule.prototype['URLPath'] = undefined;
/**
 * @member {Number} Version
 */
SamplingRule.prototype['Version'] = undefined;
/**
 * @member {Object} Attributes
 */
SamplingRule.prototype['Attributes'] = undefined;




export default CreateSamplingRuleRequestSamplingRule;

