/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetTraceSummariesRequestSamplingStrategy from './GetTraceSummariesRequestSamplingStrategy';

/**
 * The GetTraceSummariesRequest model module.
 * @module model/GetTraceSummariesRequest
 * @version 2016-04-12
 */
class GetTraceSummariesRequest {
    /**
     * Constructs a new <code>GetTraceSummariesRequest</code>.
     * @alias module:model/GetTraceSummariesRequest
     * @param startTime {Date} The start of the time frame for which to retrieve traces.
     * @param endTime {Date} The end of the time frame for which to retrieve traces.
     */
    constructor(startTime, endTime) { 
        
        GetTraceSummariesRequest.initialize(this, startTime, endTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, startTime, endTime) { 
        obj['StartTime'] = startTime;
        obj['EndTime'] = endTime;
    }

    /**
     * Constructs a <code>GetTraceSummariesRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetTraceSummariesRequest} obj Optional instance to populate.
     * @return {module:model/GetTraceSummariesRequest} The populated <code>GetTraceSummariesRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetTraceSummariesRequest();

            if (data.hasOwnProperty('StartTime')) {
                obj['StartTime'] = ApiClient.convertToType(data['StartTime'], 'Date');
            }
            if (data.hasOwnProperty('EndTime')) {
                obj['EndTime'] = ApiClient.convertToType(data['EndTime'], 'Date');
            }
            if (data.hasOwnProperty('TimeRangeType')) {
                obj['TimeRangeType'] = ApiClient.convertToType(data['TimeRangeType'], 'String');
            }
            if (data.hasOwnProperty('Sampling')) {
                obj['Sampling'] = ApiClient.convertToType(data['Sampling'], 'Boolean');
            }
            if (data.hasOwnProperty('SamplingStrategy')) {
                obj['SamplingStrategy'] = GetTraceSummariesRequestSamplingStrategy.constructFromObject(data['SamplingStrategy']);
            }
            if (data.hasOwnProperty('FilterExpression')) {
                obj['FilterExpression'] = ApiClient.convertToType(data['FilterExpression'], 'String');
            }
            if (data.hasOwnProperty('NextToken')) {
                obj['NextToken'] = ApiClient.convertToType(data['NextToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetTraceSummariesRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetTraceSummariesRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetTraceSummariesRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['TimeRangeType'] && !(typeof data['TimeRangeType'] === 'string' || data['TimeRangeType'] instanceof String)) {
            throw new Error("Expected the field `TimeRangeType` to be a primitive type in the JSON string but got " + data['TimeRangeType']);
        }
        // validate the optional field `SamplingStrategy`
        if (data['SamplingStrategy']) { // data not null
          GetTraceSummariesRequestSamplingStrategy.validateJSON(data['SamplingStrategy']);
        }
        // ensure the json data is a string
        if (data['FilterExpression'] && !(typeof data['FilterExpression'] === 'string' || data['FilterExpression'] instanceof String)) {
            throw new Error("Expected the field `FilterExpression` to be a primitive type in the JSON string but got " + data['FilterExpression']);
        }
        // ensure the json data is a string
        if (data['NextToken'] && !(typeof data['NextToken'] === 'string' || data['NextToken'] instanceof String)) {
            throw new Error("Expected the field `NextToken` to be a primitive type in the JSON string but got " + data['NextToken']);
        }

        return true;
    }


}

GetTraceSummariesRequest.RequiredProperties = ["StartTime", "EndTime"];

/**
 * The start of the time frame for which to retrieve traces.
 * @member {Date} StartTime
 */
GetTraceSummariesRequest.prototype['StartTime'] = undefined;

/**
 * The end of the time frame for which to retrieve traces.
 * @member {Date} EndTime
 */
GetTraceSummariesRequest.prototype['EndTime'] = undefined;

/**
 * A parameter to indicate whether to query trace summaries by TraceId or Event time.
 * @member {module:model/GetTraceSummariesRequest.TimeRangeTypeEnum} TimeRangeType
 */
GetTraceSummariesRequest.prototype['TimeRangeType'] = undefined;

/**
 * Set to <code>true</code> to get summaries for only a subset of available traces.
 * @member {Boolean} Sampling
 */
GetTraceSummariesRequest.prototype['Sampling'] = undefined;

/**
 * @member {module:model/GetTraceSummariesRequestSamplingStrategy} SamplingStrategy
 */
GetTraceSummariesRequest.prototype['SamplingStrategy'] = undefined;

/**
 * Specify a filter expression to retrieve trace summaries for services or requests that meet certain requirements.
 * @member {String} FilterExpression
 */
GetTraceSummariesRequest.prototype['FilterExpression'] = undefined;

/**
 * Specify the pagination token returned by a previous request to retrieve the next page of results.
 * @member {String} NextToken
 */
GetTraceSummariesRequest.prototype['NextToken'] = undefined;





/**
 * Allowed values for the <code>TimeRangeType</code> property.
 * @enum {String}
 * @readonly
 */
GetTraceSummariesRequest['TimeRangeTypeEnum'] = {

    /**
     * value: "TraceId"
     * @const
     */
    "TraceId": "TraceId",

    /**
     * value: "Event"
     * @const
     */
    "Event": "Event"
};



export default GetTraceSummariesRequest;

