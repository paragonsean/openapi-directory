/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetTraceGraphRequest model module.
 * @module model/GetTraceGraphRequest
 * @version 2016-04-12
 */
class GetTraceGraphRequest {
    /**
     * Constructs a new <code>GetTraceGraphRequest</code>.
     * @alias module:model/GetTraceGraphRequest
     * @param traceIds {Array.<String>} Trace IDs of requests for which to generate a service graph.
     */
    constructor(traceIds) { 
        
        GetTraceGraphRequest.initialize(this, traceIds);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, traceIds) { 
        obj['TraceIds'] = traceIds;
    }

    /**
     * Constructs a <code>GetTraceGraphRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetTraceGraphRequest} obj Optional instance to populate.
     * @return {module:model/GetTraceGraphRequest} The populated <code>GetTraceGraphRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetTraceGraphRequest();

            if (data.hasOwnProperty('TraceIds')) {
                obj['TraceIds'] = ApiClient.convertToType(data['TraceIds'], ['String']);
            }
            if (data.hasOwnProperty('NextToken')) {
                obj['NextToken'] = ApiClient.convertToType(data['NextToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetTraceGraphRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetTraceGraphRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetTraceGraphRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['TraceIds'])) {
            throw new Error("Expected the field `TraceIds` to be an array in the JSON data but got " + data['TraceIds']);
        }
        // ensure the json data is a string
        if (data['NextToken'] && !(typeof data['NextToken'] === 'string' || data['NextToken'] instanceof String)) {
            throw new Error("Expected the field `NextToken` to be a primitive type in the JSON string but got " + data['NextToken']);
        }

        return true;
    }


}

GetTraceGraphRequest.RequiredProperties = ["TraceIds"];

/**
 * Trace IDs of requests for which to generate a service graph.
 * @member {Array.<String>} TraceIds
 */
GetTraceGraphRequest.prototype['TraceIds'] = undefined;

/**
 * Pagination token.
 * @member {String} NextToken
 */
GetTraceGraphRequest.prototype['NextToken'] = undefined;






export default GetTraceGraphRequest;

