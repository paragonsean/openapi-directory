/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SamplingStatisticsDocument from './SamplingStatisticsDocument';

/**
 * The GetSamplingTargetsRequest model module.
 * @module model/GetSamplingTargetsRequest
 * @version 2016-04-12
 */
class GetSamplingTargetsRequest {
    /**
     * Constructs a new <code>GetSamplingTargetsRequest</code>.
     * @alias module:model/GetSamplingTargetsRequest
     * @param samplingStatisticsDocuments {Array.<module:model/SamplingStatisticsDocument>} Information about rules that the service is using to sample requests.
     */
    constructor(samplingStatisticsDocuments) { 
        
        GetSamplingTargetsRequest.initialize(this, samplingStatisticsDocuments);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, samplingStatisticsDocuments) { 
        obj['SamplingStatisticsDocuments'] = samplingStatisticsDocuments;
    }

    /**
     * Constructs a <code>GetSamplingTargetsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetSamplingTargetsRequest} obj Optional instance to populate.
     * @return {module:model/GetSamplingTargetsRequest} The populated <code>GetSamplingTargetsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetSamplingTargetsRequest();

            if (data.hasOwnProperty('SamplingStatisticsDocuments')) {
                obj['SamplingStatisticsDocuments'] = ApiClient.convertToType(data['SamplingStatisticsDocuments'], [SamplingStatisticsDocument]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetSamplingTargetsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetSamplingTargetsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetSamplingTargetsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['SamplingStatisticsDocuments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['SamplingStatisticsDocuments'])) {
                throw new Error("Expected the field `SamplingStatisticsDocuments` to be an array in the JSON data but got " + data['SamplingStatisticsDocuments']);
            }
            // validate the optional field `SamplingStatisticsDocuments` (array)
            for (const item of data['SamplingStatisticsDocuments']) {
                SamplingStatisticsDocument.validateJSON(item);
            };
        }

        return true;
    }


}

GetSamplingTargetsRequest.RequiredProperties = ["SamplingStatisticsDocuments"];

/**
 * Information about rules that the service is using to sample requests.
 * @member {Array.<module:model/SamplingStatisticsDocument>} SamplingStatisticsDocuments
 */
GetSamplingTargetsRequest.prototype['SamplingStatisticsDocuments'] = undefined;






export default GetSamplingTargetsRequest;

