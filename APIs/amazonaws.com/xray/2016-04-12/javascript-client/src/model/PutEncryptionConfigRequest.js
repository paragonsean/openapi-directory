/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PutEncryptionConfigRequest model module.
 * @module model/PutEncryptionConfigRequest
 * @version 2016-04-12
 */
class PutEncryptionConfigRequest {
    /**
     * Constructs a new <code>PutEncryptionConfigRequest</code>.
     * @alias module:model/PutEncryptionConfigRequest
     * @param type {module:model/PutEncryptionConfigRequest.TypeEnum} The type of encryption. Set to <code>KMS</code> to use your own key for encryption. Set to <code>NONE</code> for default encryption.
     */
    constructor(type) { 
        
        PutEncryptionConfigRequest.initialize(this, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type) { 
        obj['Type'] = type;
    }

    /**
     * Constructs a <code>PutEncryptionConfigRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutEncryptionConfigRequest} obj Optional instance to populate.
     * @return {module:model/PutEncryptionConfigRequest} The populated <code>PutEncryptionConfigRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutEncryptionConfigRequest();

            if (data.hasOwnProperty('KeyId')) {
                obj['KeyId'] = ApiClient.convertToType(data['KeyId'], 'String');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutEncryptionConfigRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutEncryptionConfigRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PutEncryptionConfigRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['KeyId'] && !(typeof data['KeyId'] === 'string' || data['KeyId'] instanceof String)) {
            throw new Error("Expected the field `KeyId` to be a primitive type in the JSON string but got " + data['KeyId']);
        }
        // ensure the json data is a string
        if (data['Type'] && !(typeof data['Type'] === 'string' || data['Type'] instanceof String)) {
            throw new Error("Expected the field `Type` to be a primitive type in the JSON string but got " + data['Type']);
        }

        return true;
    }


}

PutEncryptionConfigRequest.RequiredProperties = ["Type"];

/**
 * <p>An Amazon Web Services KMS key in one of the following formats:</p> <ul> <li> <p> <b>Alias</b> - The name of the key. For example, <code>alias/MyKey</code>.</p> </li> <li> <p> <b>Key ID</b> - The KMS key ID of the key. For example, <code>ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>. Amazon Web Services X-Ray does not support asymmetric KMS keys.</p> </li> <li> <p> <b>ARN</b> - The full Amazon Resource Name of the key ID or alias. For example, <code>arn:aws:kms:us-east-2:123456789012:key/ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>. Use this format to specify a key in a different account.</p> </li> </ul> <p>Omit this key if you set <code>Type</code> to <code>NONE</code>.</p>
 * @member {String} KeyId
 */
PutEncryptionConfigRequest.prototype['KeyId'] = undefined;

/**
 * The type of encryption. Set to <code>KMS</code> to use your own key for encryption. Set to <code>NONE</code> for default encryption.
 * @member {module:model/PutEncryptionConfigRequest.TypeEnum} Type
 */
PutEncryptionConfigRequest.prototype['Type'] = undefined;





/**
 * Allowed values for the <code>Type</code> property.
 * @enum {String}
 * @readonly
 */
PutEncryptionConfigRequest['TypeEnum'] = {

    /**
     * value: "NONE"
     * @const
     */
    "NONE": "NONE",

    /**
     * value: "KMS"
     * @const
     */
    "KMS": "KMS"
};



export default PutEncryptionConfigRequest;

