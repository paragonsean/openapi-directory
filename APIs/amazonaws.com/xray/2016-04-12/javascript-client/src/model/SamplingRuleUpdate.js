/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SamplingRuleUpdate model module.
 * @module model/SamplingRuleUpdate
 * @version 2016-04-12
 */
class SamplingRuleUpdate {
    /**
     * Constructs a new <code>SamplingRuleUpdate</code>.
     * A document specifying changes to a sampling rule&#39;s configuration.
     * @alias module:model/SamplingRuleUpdate
     */
    constructor() { 
        
        SamplingRuleUpdate.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SamplingRuleUpdate</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SamplingRuleUpdate} obj Optional instance to populate.
     * @return {module:model/SamplingRuleUpdate} The populated <code>SamplingRuleUpdate</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SamplingRuleUpdate();

            if (data.hasOwnProperty('RuleName')) {
                obj['RuleName'] = ApiClient.convertToType(data['RuleName'], 'String');
            }
            if (data.hasOwnProperty('RuleARN')) {
                obj['RuleARN'] = ApiClient.convertToType(data['RuleARN'], 'String');
            }
            if (data.hasOwnProperty('ResourceARN')) {
                obj['ResourceARN'] = ApiClient.convertToType(data['ResourceARN'], 'String');
            }
            if (data.hasOwnProperty('Priority')) {
                obj['Priority'] = ApiClient.convertToType(data['Priority'], 'Number');
            }
            if (data.hasOwnProperty('FixedRate')) {
                obj['FixedRate'] = ApiClient.convertToType(data['FixedRate'], 'Number');
            }
            if (data.hasOwnProperty('ReservoirSize')) {
                obj['ReservoirSize'] = ApiClient.convertToType(data['ReservoirSize'], 'Number');
            }
            if (data.hasOwnProperty('Host')) {
                obj['Host'] = ApiClient.convertToType(data['Host'], 'String');
            }
            if (data.hasOwnProperty('ServiceName')) {
                obj['ServiceName'] = ApiClient.convertToType(data['ServiceName'], 'String');
            }
            if (data.hasOwnProperty('ServiceType')) {
                obj['ServiceType'] = ApiClient.convertToType(data['ServiceType'], 'String');
            }
            if (data.hasOwnProperty('HTTPMethod')) {
                obj['HTTPMethod'] = ApiClient.convertToType(data['HTTPMethod'], 'String');
            }
            if (data.hasOwnProperty('URLPath')) {
                obj['URLPath'] = ApiClient.convertToType(data['URLPath'], 'String');
            }
            if (data.hasOwnProperty('Attributes')) {
                obj['Attributes'] = ApiClient.convertToType(data['Attributes'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SamplingRuleUpdate</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SamplingRuleUpdate</code>.
     */
    static validateJSON(data) {
        // validate the optional field `RuleName`
        if (data['RuleName']) { // data not null
          String.validateJSON(data['RuleName']);
        }
        // validate the optional field `RuleARN`
        if (data['RuleARN']) { // data not null
          String.validateJSON(data['RuleARN']);
        }
        // validate the optional field `ResourceARN`
        if (data['ResourceARN']) { // data not null
          String.validateJSON(data['ResourceARN']);
        }
        // validate the optional field `Priority`
        if (data['Priority']) { // data not null
          Number.validateJSON(data['Priority']);
        }
        // validate the optional field `FixedRate`
        if (data['FixedRate']) { // data not null
          Number.validateJSON(data['FixedRate']);
        }
        // validate the optional field `ReservoirSize`
        if (data['ReservoirSize']) { // data not null
          Number.validateJSON(data['ReservoirSize']);
        }
        // validate the optional field `Host`
        if (data['Host']) { // data not null
          String.validateJSON(data['Host']);
        }
        // validate the optional field `ServiceName`
        if (data['ServiceName']) { // data not null
          String.validateJSON(data['ServiceName']);
        }
        // validate the optional field `ServiceType`
        if (data['ServiceType']) { // data not null
          String.validateJSON(data['ServiceType']);
        }
        // validate the optional field `HTTPMethod`
        if (data['HTTPMethod']) { // data not null
          String.validateJSON(data['HTTPMethod']);
        }
        // validate the optional field `URLPath`
        if (data['URLPath']) { // data not null
          String.validateJSON(data['URLPath']);
        }
        // validate the optional field `Attributes`
        if (data['Attributes']) { // data not null
          Object.validateJSON(data['Attributes']);
        }

        return true;
    }


}



/**
 * @member {String} RuleName
 */
SamplingRuleUpdate.prototype['RuleName'] = undefined;

/**
 * @member {String} RuleARN
 */
SamplingRuleUpdate.prototype['RuleARN'] = undefined;

/**
 * @member {String} ResourceARN
 */
SamplingRuleUpdate.prototype['ResourceARN'] = undefined;

/**
 * @member {Number} Priority
 */
SamplingRuleUpdate.prototype['Priority'] = undefined;

/**
 * @member {Number} FixedRate
 */
SamplingRuleUpdate.prototype['FixedRate'] = undefined;

/**
 * @member {Number} ReservoirSize
 */
SamplingRuleUpdate.prototype['ReservoirSize'] = undefined;

/**
 * @member {String} Host
 */
SamplingRuleUpdate.prototype['Host'] = undefined;

/**
 * @member {String} ServiceName
 */
SamplingRuleUpdate.prototype['ServiceName'] = undefined;

/**
 * @member {String} ServiceType
 */
SamplingRuleUpdate.prototype['ServiceType'] = undefined;

/**
 * @member {String} HTTPMethod
 */
SamplingRuleUpdate.prototype['HTTPMethod'] = undefined;

/**
 * @member {String} URLPath
 */
SamplingRuleUpdate.prototype['URLPath'] = undefined;

/**
 * @member {Object} Attributes
 */
SamplingRuleUpdate.prototype['Attributes'] = undefined;






export default SamplingRuleUpdate;

