/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SamplingStatisticsDocument model module.
 * @module model/SamplingStatisticsDocument
 * @version 2016-04-12
 */
class SamplingStatisticsDocument {
    /**
     * Constructs a new <code>SamplingStatisticsDocument</code>.
     * Request sampling results for a single rule from a service. Results are for the last 10 seconds unless the service has been assigned a longer reporting interval after a previous call to &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/xray/latest/api/API_GetSamplingTargets.html\&quot;&gt;GetSamplingTargets&lt;/a&gt;.
     * @alias module:model/SamplingStatisticsDocument
     * @param ruleName {String} 
     * @param clientID {String} 
     * @param timestamp {Date} 
     * @param requestCount {Number} 
     * @param sampledCount {Number} 
     */
    constructor(ruleName, clientID, timestamp, requestCount, sampledCount) { 
        
        SamplingStatisticsDocument.initialize(this, ruleName, clientID, timestamp, requestCount, sampledCount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ruleName, clientID, timestamp, requestCount, sampledCount) { 
        obj['RuleName'] = ruleName;
        obj['ClientID'] = clientID;
        obj['Timestamp'] = timestamp;
        obj['RequestCount'] = requestCount;
        obj['SampledCount'] = sampledCount;
    }

    /**
     * Constructs a <code>SamplingStatisticsDocument</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SamplingStatisticsDocument} obj Optional instance to populate.
     * @return {module:model/SamplingStatisticsDocument} The populated <code>SamplingStatisticsDocument</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SamplingStatisticsDocument();

            if (data.hasOwnProperty('RuleName')) {
                obj['RuleName'] = ApiClient.convertToType(data['RuleName'], 'String');
            }
            if (data.hasOwnProperty('ClientID')) {
                obj['ClientID'] = ApiClient.convertToType(data['ClientID'], 'String');
            }
            if (data.hasOwnProperty('Timestamp')) {
                obj['Timestamp'] = ApiClient.convertToType(data['Timestamp'], 'Date');
            }
            if (data.hasOwnProperty('RequestCount')) {
                obj['RequestCount'] = ApiClient.convertToType(data['RequestCount'], 'Number');
            }
            if (data.hasOwnProperty('SampledCount')) {
                obj['SampledCount'] = ApiClient.convertToType(data['SampledCount'], 'Number');
            }
            if (data.hasOwnProperty('BorrowCount')) {
                obj['BorrowCount'] = ApiClient.convertToType(data['BorrowCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SamplingStatisticsDocument</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SamplingStatisticsDocument</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SamplingStatisticsDocument.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `RuleName`
        if (data['RuleName']) { // data not null
          String.validateJSON(data['RuleName']);
        }
        // validate the optional field `ClientID`
        if (data['ClientID']) { // data not null
          String.validateJSON(data['ClientID']);
        }
        // validate the optional field `Timestamp`
        if (data['Timestamp']) { // data not null
          Date.validateJSON(data['Timestamp']);
        }
        // validate the optional field `RequestCount`
        if (data['RequestCount']) { // data not null
          Number.validateJSON(data['RequestCount']);
        }
        // validate the optional field `SampledCount`
        if (data['SampledCount']) { // data not null
          Number.validateJSON(data['SampledCount']);
        }
        // validate the optional field `BorrowCount`
        if (data['BorrowCount']) { // data not null
          Number.validateJSON(data['BorrowCount']);
        }

        return true;
    }


}

SamplingStatisticsDocument.RequiredProperties = ["RuleName", "ClientID", "Timestamp", "RequestCount", "SampledCount"];

/**
 * @member {String} RuleName
 */
SamplingStatisticsDocument.prototype['RuleName'] = undefined;

/**
 * @member {String} ClientID
 */
SamplingStatisticsDocument.prototype['ClientID'] = undefined;

/**
 * @member {Date} Timestamp
 */
SamplingStatisticsDocument.prototype['Timestamp'] = undefined;

/**
 * @member {Number} RequestCount
 */
SamplingStatisticsDocument.prototype['RequestCount'] = undefined;

/**
 * @member {Number} SampledCount
 */
SamplingStatisticsDocument.prototype['SampledCount'] = undefined;

/**
 * @member {Number} BorrowCount
 */
SamplingStatisticsDocument.prototype['BorrowCount'] = undefined;






export default SamplingStatisticsDocument;

