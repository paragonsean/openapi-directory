/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InsightClientRequestImpactStatistics from './InsightClientRequestImpactStatistics';
import InsightRootCauseServiceRequestImpactStatistics from './InsightRootCauseServiceRequestImpactStatistics';
import InsightState from './InsightState';
import ServiceId from './ServiceId';

/**
 * The Insight model module.
 * @module model/Insight
 * @version 2016-04-12
 */
class Insight {
    /**
     * Constructs a new <code>Insight</code>.
     * When fault rates go outside of the expected range, X-Ray creates an insight. Insights tracks emergent issues within your applications.
     * @alias module:model/Insight
     */
    constructor() { 
        
        Insight.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Insight</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Insight} obj Optional instance to populate.
     * @return {module:model/Insight} The populated <code>Insight</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Insight();

            if (data.hasOwnProperty('InsightId')) {
                obj['InsightId'] = ApiClient.convertToType(data['InsightId'], 'String');
            }
            if (data.hasOwnProperty('GroupARN')) {
                obj['GroupARN'] = ApiClient.convertToType(data['GroupARN'], 'String');
            }
            if (data.hasOwnProperty('GroupName')) {
                obj['GroupName'] = ApiClient.convertToType(data['GroupName'], 'String');
            }
            if (data.hasOwnProperty('RootCauseServiceId')) {
                obj['RootCauseServiceId'] = ServiceId.constructFromObject(data['RootCauseServiceId']);
            }
            if (data.hasOwnProperty('Categories')) {
                obj['Categories'] = ApiClient.convertToType(data['Categories'], Array);
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = ApiClient.convertToType(data['State'], InsightState);
            }
            if (data.hasOwnProperty('StartTime')) {
                obj['StartTime'] = ApiClient.convertToType(data['StartTime'], 'Date');
            }
            if (data.hasOwnProperty('EndTime')) {
                obj['EndTime'] = ApiClient.convertToType(data['EndTime'], 'Date');
            }
            if (data.hasOwnProperty('Summary')) {
                obj['Summary'] = ApiClient.convertToType(data['Summary'], 'String');
            }
            if (data.hasOwnProperty('ClientRequestImpactStatistics')) {
                obj['ClientRequestImpactStatistics'] = InsightClientRequestImpactStatistics.constructFromObject(data['ClientRequestImpactStatistics']);
            }
            if (data.hasOwnProperty('RootCauseServiceRequestImpactStatistics')) {
                obj['RootCauseServiceRequestImpactStatistics'] = InsightRootCauseServiceRequestImpactStatistics.constructFromObject(data['RootCauseServiceRequestImpactStatistics']);
            }
            if (data.hasOwnProperty('TopAnomalousServices')) {
                obj['TopAnomalousServices'] = ApiClient.convertToType(data['TopAnomalousServices'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Insight</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Insight</code>.
     */
    static validateJSON(data) {
        // validate the optional field `InsightId`
        if (data['InsightId']) { // data not null
          String.validateJSON(data['InsightId']);
        }
        // validate the optional field `GroupARN`
        if (data['GroupARN']) { // data not null
          String.validateJSON(data['GroupARN']);
        }
        // validate the optional field `GroupName`
        if (data['GroupName']) { // data not null
          String.validateJSON(data['GroupName']);
        }
        // validate the optional field `RootCauseServiceId`
        if (data['RootCauseServiceId']) { // data not null
          ServiceId.validateJSON(data['RootCauseServiceId']);
        }
        // validate the optional field `Categories`
        if (data['Categories']) { // data not null
          Array.validateJSON(data['Categories']);
        }
        // validate the optional field `State`
        if (data['State']) { // data not null
          InsightState.validateJSON(data['State']);
        }
        // validate the optional field `StartTime`
        if (data['StartTime']) { // data not null
          Date.validateJSON(data['StartTime']);
        }
        // validate the optional field `EndTime`
        if (data['EndTime']) { // data not null
          Date.validateJSON(data['EndTime']);
        }
        // validate the optional field `Summary`
        if (data['Summary']) { // data not null
          String.validateJSON(data['Summary']);
        }
        // validate the optional field `ClientRequestImpactStatistics`
        if (data['ClientRequestImpactStatistics']) { // data not null
          InsightClientRequestImpactStatistics.validateJSON(data['ClientRequestImpactStatistics']);
        }
        // validate the optional field `RootCauseServiceRequestImpactStatistics`
        if (data['RootCauseServiceRequestImpactStatistics']) { // data not null
          InsightRootCauseServiceRequestImpactStatistics.validateJSON(data['RootCauseServiceRequestImpactStatistics']);
        }
        // validate the optional field `TopAnomalousServices`
        if (data['TopAnomalousServices']) { // data not null
          Array.validateJSON(data['TopAnomalousServices']);
        }

        return true;
    }


}



/**
 * @member {String} InsightId
 */
Insight.prototype['InsightId'] = undefined;

/**
 * @member {String} GroupARN
 */
Insight.prototype['GroupARN'] = undefined;

/**
 * @member {String} GroupName
 */
Insight.prototype['GroupName'] = undefined;

/**
 * @member {module:model/ServiceId} RootCauseServiceId
 */
Insight.prototype['RootCauseServiceId'] = undefined;

/**
 * @member {Array} Categories
 */
Insight.prototype['Categories'] = undefined;

/**
 * @member {module:model/InsightState} State
 */
Insight.prototype['State'] = undefined;

/**
 * @member {Date} StartTime
 */
Insight.prototype['StartTime'] = undefined;

/**
 * @member {Date} EndTime
 */
Insight.prototype['EndTime'] = undefined;

/**
 * @member {String} Summary
 */
Insight.prototype['Summary'] = undefined;

/**
 * @member {module:model/InsightClientRequestImpactStatistics} ClientRequestImpactStatistics
 */
Insight.prototype['ClientRequestImpactStatistics'] = undefined;

/**
 * @member {module:model/InsightRootCauseServiceRequestImpactStatistics} RootCauseServiceRequestImpactStatistics
 */
Insight.prototype['RootCauseServiceRequestImpactStatistics'] = undefined;

/**
 * @member {Array} TopAnomalousServices
 */
Insight.prototype['TopAnomalousServices'] = undefined;






export default Insight;

