/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CreateGroupRequestInsightsConfiguration from './CreateGroupRequestInsightsConfiguration';
import Tag from './Tag';

/**
 * The CreateGroupRequest model module.
 * @module model/CreateGroupRequest
 * @version 2016-04-12
 */
class CreateGroupRequest {
    /**
     * Constructs a new <code>CreateGroupRequest</code>.
     * @alias module:model/CreateGroupRequest
     * @param groupName {String} The case-sensitive name of the new group. Default is a reserved name and names must be unique.
     */
    constructor(groupName) { 
        
        CreateGroupRequest.initialize(this, groupName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, groupName) { 
        obj['GroupName'] = groupName;
    }

    /**
     * Constructs a <code>CreateGroupRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateGroupRequest} obj Optional instance to populate.
     * @return {module:model/CreateGroupRequest} The populated <code>CreateGroupRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateGroupRequest();

            if (data.hasOwnProperty('GroupName')) {
                obj['GroupName'] = ApiClient.convertToType(data['GroupName'], 'String');
            }
            if (data.hasOwnProperty('FilterExpression')) {
                obj['FilterExpression'] = ApiClient.convertToType(data['FilterExpression'], 'String');
            }
            if (data.hasOwnProperty('InsightsConfiguration')) {
                obj['InsightsConfiguration'] = CreateGroupRequestInsightsConfiguration.constructFromObject(data['InsightsConfiguration']);
            }
            if (data.hasOwnProperty('Tags')) {
                obj['Tags'] = ApiClient.convertToType(data['Tags'], [Tag]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateGroupRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateGroupRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CreateGroupRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['GroupName'] && !(typeof data['GroupName'] === 'string' || data['GroupName'] instanceof String)) {
            throw new Error("Expected the field `GroupName` to be a primitive type in the JSON string but got " + data['GroupName']);
        }
        // ensure the json data is a string
        if (data['FilterExpression'] && !(typeof data['FilterExpression'] === 'string' || data['FilterExpression'] instanceof String)) {
            throw new Error("Expected the field `FilterExpression` to be a primitive type in the JSON string but got " + data['FilterExpression']);
        }
        // validate the optional field `InsightsConfiguration`
        if (data['InsightsConfiguration']) { // data not null
          CreateGroupRequestInsightsConfiguration.validateJSON(data['InsightsConfiguration']);
        }
        if (data['Tags']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Tags'])) {
                throw new Error("Expected the field `Tags` to be an array in the JSON data but got " + data['Tags']);
            }
            // validate the optional field `Tags` (array)
            for (const item of data['Tags']) {
                Tag.validateJSON(item);
            };
        }

        return true;
    }


}

CreateGroupRequest.RequiredProperties = ["GroupName"];

/**
 * The case-sensitive name of the new group. Default is a reserved name and names must be unique.
 * @member {String} GroupName
 */
CreateGroupRequest.prototype['GroupName'] = undefined;

/**
 * The filter expression defining criteria by which to group traces.
 * @member {String} FilterExpression
 */
CreateGroupRequest.prototype['FilterExpression'] = undefined;

/**
 * @member {module:model/CreateGroupRequestInsightsConfiguration} InsightsConfiguration
 */
CreateGroupRequest.prototype['InsightsConfiguration'] = undefined;

/**
 * <p>A map that contains one or more tag keys and tag values to attach to an X-Ray group. For more information about ways to use tags, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\">Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General Reference</i>.</p> <p>The following restrictions apply to tags:</p> <ul> <li> <p>Maximum number of user-applied tags per resource: 50</p> </li> <li> <p>Maximum tag key length: 128 Unicode characters</p> </li> <li> <p>Maximum tag value length: 256 Unicode characters</p> </li> <li> <p>Valid values for key and value: a-z, A-Z, 0-9, space, and the following characters: _ . : / = + - and @</p> </li> <li> <p>Tag keys and values are case sensitive.</p> </li> <li> <p>Don't use <code>aws:</code> as a prefix for keys; it's reserved for Amazon Web Services use.</p> </li> </ul>
 * @member {Array.<module:model/Tag>} Tags
 */
CreateGroupRequest.prototype['Tags'] = undefined;






export default CreateGroupRequest;

