/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetTimeSeriesServiceStatisticsRequest model module.
 * @module model/GetTimeSeriesServiceStatisticsRequest
 * @version 2016-04-12
 */
class GetTimeSeriesServiceStatisticsRequest {
    /**
     * Constructs a new <code>GetTimeSeriesServiceStatisticsRequest</code>.
     * @alias module:model/GetTimeSeriesServiceStatisticsRequest
     * @param startTime {Date} The start of the time frame for which to aggregate statistics.
     * @param endTime {Date} The end of the time frame for which to aggregate statistics.
     */
    constructor(startTime, endTime) { 
        
        GetTimeSeriesServiceStatisticsRequest.initialize(this, startTime, endTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, startTime, endTime) { 
        obj['StartTime'] = startTime;
        obj['EndTime'] = endTime;
    }

    /**
     * Constructs a <code>GetTimeSeriesServiceStatisticsRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetTimeSeriesServiceStatisticsRequest} obj Optional instance to populate.
     * @return {module:model/GetTimeSeriesServiceStatisticsRequest} The populated <code>GetTimeSeriesServiceStatisticsRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetTimeSeriesServiceStatisticsRequest();

            if (data.hasOwnProperty('StartTime')) {
                obj['StartTime'] = ApiClient.convertToType(data['StartTime'], 'Date');
            }
            if (data.hasOwnProperty('EndTime')) {
                obj['EndTime'] = ApiClient.convertToType(data['EndTime'], 'Date');
            }
            if (data.hasOwnProperty('GroupName')) {
                obj['GroupName'] = ApiClient.convertToType(data['GroupName'], 'String');
            }
            if (data.hasOwnProperty('GroupARN')) {
                obj['GroupARN'] = ApiClient.convertToType(data['GroupARN'], 'String');
            }
            if (data.hasOwnProperty('EntitySelectorExpression')) {
                obj['EntitySelectorExpression'] = ApiClient.convertToType(data['EntitySelectorExpression'], 'String');
            }
            if (data.hasOwnProperty('Period')) {
                obj['Period'] = ApiClient.convertToType(data['Period'], 'Number');
            }
            if (data.hasOwnProperty('ForecastStatistics')) {
                obj['ForecastStatistics'] = ApiClient.convertToType(data['ForecastStatistics'], 'Boolean');
            }
            if (data.hasOwnProperty('NextToken')) {
                obj['NextToken'] = ApiClient.convertToType(data['NextToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetTimeSeriesServiceStatisticsRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetTimeSeriesServiceStatisticsRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetTimeSeriesServiceStatisticsRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['GroupName'] && !(typeof data['GroupName'] === 'string' || data['GroupName'] instanceof String)) {
            throw new Error("Expected the field `GroupName` to be a primitive type in the JSON string but got " + data['GroupName']);
        }
        // ensure the json data is a string
        if (data['GroupARN'] && !(typeof data['GroupARN'] === 'string' || data['GroupARN'] instanceof String)) {
            throw new Error("Expected the field `GroupARN` to be a primitive type in the JSON string but got " + data['GroupARN']);
        }
        // ensure the json data is a string
        if (data['EntitySelectorExpression'] && !(typeof data['EntitySelectorExpression'] === 'string' || data['EntitySelectorExpression'] instanceof String)) {
            throw new Error("Expected the field `EntitySelectorExpression` to be a primitive type in the JSON string but got " + data['EntitySelectorExpression']);
        }
        // ensure the json data is a string
        if (data['NextToken'] && !(typeof data['NextToken'] === 'string' || data['NextToken'] instanceof String)) {
            throw new Error("Expected the field `NextToken` to be a primitive type in the JSON string but got " + data['NextToken']);
        }

        return true;
    }


}

GetTimeSeriesServiceStatisticsRequest.RequiredProperties = ["StartTime", "EndTime"];

/**
 * The start of the time frame for which to aggregate statistics.
 * @member {Date} StartTime
 */
GetTimeSeriesServiceStatisticsRequest.prototype['StartTime'] = undefined;

/**
 * The end of the time frame for which to aggregate statistics.
 * @member {Date} EndTime
 */
GetTimeSeriesServiceStatisticsRequest.prototype['EndTime'] = undefined;

/**
 * The case-sensitive name of the group for which to pull statistics from.
 * @member {String} GroupName
 */
GetTimeSeriesServiceStatisticsRequest.prototype['GroupName'] = undefined;

/**
 * The Amazon Resource Name (ARN) of the group for which to pull statistics from.
 * @member {String} GroupARN
 */
GetTimeSeriesServiceStatisticsRequest.prototype['GroupARN'] = undefined;

/**
 * A filter expression defining entities that will be aggregated for statistics. Supports ID, service, and edge functions. If no selector expression is specified, edge statistics are returned. 
 * @member {String} EntitySelectorExpression
 */
GetTimeSeriesServiceStatisticsRequest.prototype['EntitySelectorExpression'] = undefined;

/**
 * Aggregation period in seconds.
 * @member {Number} Period
 */
GetTimeSeriesServiceStatisticsRequest.prototype['Period'] = undefined;

/**
 * The forecasted high and low fault count values. Forecast enabled requests require the EntitySelectorExpression ID be provided.
 * @member {Boolean} ForecastStatistics
 */
GetTimeSeriesServiceStatisticsRequest.prototype['ForecastStatistics'] = undefined;

/**
 * Pagination token.
 * @member {String} NextToken
 */
GetTimeSeriesServiceStatisticsRequest.prototype['NextToken'] = undefined;






export default GetTimeSeriesServiceStatisticsRequest;

