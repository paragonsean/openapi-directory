/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DeleteResourcePolicyRequest model module.
 * @module model/DeleteResourcePolicyRequest
 * @version 2016-04-12
 */
class DeleteResourcePolicyRequest {
    /**
     * Constructs a new <code>DeleteResourcePolicyRequest</code>.
     * @alias module:model/DeleteResourcePolicyRequest
     * @param policyName {String} The name of the resource policy to delete.
     */
    constructor(policyName) { 
        
        DeleteResourcePolicyRequest.initialize(this, policyName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, policyName) { 
        obj['PolicyName'] = policyName;
    }

    /**
     * Constructs a <code>DeleteResourcePolicyRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DeleteResourcePolicyRequest} obj Optional instance to populate.
     * @return {module:model/DeleteResourcePolicyRequest} The populated <code>DeleteResourcePolicyRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DeleteResourcePolicyRequest();

            if (data.hasOwnProperty('PolicyName')) {
                obj['PolicyName'] = ApiClient.convertToType(data['PolicyName'], 'String');
            }
            if (data.hasOwnProperty('PolicyRevisionId')) {
                obj['PolicyRevisionId'] = ApiClient.convertToType(data['PolicyRevisionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DeleteResourcePolicyRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DeleteResourcePolicyRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DeleteResourcePolicyRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['PolicyName'] && !(typeof data['PolicyName'] === 'string' || data['PolicyName'] instanceof String)) {
            throw new Error("Expected the field `PolicyName` to be a primitive type in the JSON string but got " + data['PolicyName']);
        }
        // ensure the json data is a string
        if (data['PolicyRevisionId'] && !(typeof data['PolicyRevisionId'] === 'string' || data['PolicyRevisionId'] instanceof String)) {
            throw new Error("Expected the field `PolicyRevisionId` to be a primitive type in the JSON string but got " + data['PolicyRevisionId']);
        }

        return true;
    }


}

DeleteResourcePolicyRequest.RequiredProperties = ["PolicyName"];

/**
 * The name of the resource policy to delete.
 * @member {String} PolicyName
 */
DeleteResourcePolicyRequest.prototype['PolicyName'] = undefined;

/**
 * Specifies a specific policy revision to delete. Provide a <code>PolicyRevisionId</code> to ensure an atomic delete operation. If the provided revision id does not match the latest policy revision id, an <code>InvalidPolicyRevisionIdException</code> exception is returned. 
 * @member {String} PolicyRevisionId
 */
DeleteResourcePolicyRequest.prototype['PolicyRevisionId'] = undefined;






export default DeleteResourcePolicyRequest;

