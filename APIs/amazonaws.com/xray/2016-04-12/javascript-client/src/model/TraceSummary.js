/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TraceSummaryEntryPoint from './TraceSummaryEntryPoint';
import TraceSummaryHttp from './TraceSummaryHttp';

/**
 * The TraceSummary model module.
 * @module model/TraceSummary
 * @version 2016-04-12
 */
class TraceSummary {
    /**
     * Constructs a new <code>TraceSummary</code>.
     * Metadata generated from the segment documents in a trace.
     * @alias module:model/TraceSummary
     */
    constructor() { 
        
        TraceSummary.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TraceSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TraceSummary} obj Optional instance to populate.
     * @return {module:model/TraceSummary} The populated <code>TraceSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TraceSummary();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('Duration')) {
                obj['Duration'] = ApiClient.convertToType(data['Duration'], 'Number');
            }
            if (data.hasOwnProperty('ResponseTime')) {
                obj['ResponseTime'] = ApiClient.convertToType(data['ResponseTime'], 'Number');
            }
            if (data.hasOwnProperty('HasFault')) {
                obj['HasFault'] = ApiClient.convertToType(data['HasFault'], 'Boolean');
            }
            if (data.hasOwnProperty('HasError')) {
                obj['HasError'] = ApiClient.convertToType(data['HasError'], 'Boolean');
            }
            if (data.hasOwnProperty('HasThrottle')) {
                obj['HasThrottle'] = ApiClient.convertToType(data['HasThrottle'], 'Boolean');
            }
            if (data.hasOwnProperty('IsPartial')) {
                obj['IsPartial'] = ApiClient.convertToType(data['IsPartial'], 'Boolean');
            }
            if (data.hasOwnProperty('Http')) {
                obj['Http'] = TraceSummaryHttp.constructFromObject(data['Http']);
            }
            if (data.hasOwnProperty('Annotations')) {
                obj['Annotations'] = ApiClient.convertToType(data['Annotations'], Object);
            }
            if (data.hasOwnProperty('Users')) {
                obj['Users'] = ApiClient.convertToType(data['Users'], Array);
            }
            if (data.hasOwnProperty('ServiceIds')) {
                obj['ServiceIds'] = ApiClient.convertToType(data['ServiceIds'], Array);
            }
            if (data.hasOwnProperty('ResourceARNs')) {
                obj['ResourceARNs'] = ApiClient.convertToType(data['ResourceARNs'], Array);
            }
            if (data.hasOwnProperty('InstanceIds')) {
                obj['InstanceIds'] = ApiClient.convertToType(data['InstanceIds'], Array);
            }
            if (data.hasOwnProperty('AvailabilityZones')) {
                obj['AvailabilityZones'] = ApiClient.convertToType(data['AvailabilityZones'], Array);
            }
            if (data.hasOwnProperty('EntryPoint')) {
                obj['EntryPoint'] = TraceSummaryEntryPoint.constructFromObject(data['EntryPoint']);
            }
            if (data.hasOwnProperty('FaultRootCauses')) {
                obj['FaultRootCauses'] = ApiClient.convertToType(data['FaultRootCauses'], Array);
            }
            if (data.hasOwnProperty('ErrorRootCauses')) {
                obj['ErrorRootCauses'] = ApiClient.convertToType(data['ErrorRootCauses'], Array);
            }
            if (data.hasOwnProperty('ResponseTimeRootCauses')) {
                obj['ResponseTimeRootCauses'] = ApiClient.convertToType(data['ResponseTimeRootCauses'], Array);
            }
            if (data.hasOwnProperty('Revision')) {
                obj['Revision'] = ApiClient.convertToType(data['Revision'], 'Number');
            }
            if (data.hasOwnProperty('MatchedEventTime')) {
                obj['MatchedEventTime'] = ApiClient.convertToType(data['MatchedEventTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TraceSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TraceSummary</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `Duration`
        if (data['Duration']) { // data not null
          Number.validateJSON(data['Duration']);
        }
        // validate the optional field `ResponseTime`
        if (data['ResponseTime']) { // data not null
          Number.validateJSON(data['ResponseTime']);
        }
        // validate the optional field `HasFault`
        if (data['HasFault']) { // data not null
          Boolean.validateJSON(data['HasFault']);
        }
        // validate the optional field `HasError`
        if (data['HasError']) { // data not null
          Boolean.validateJSON(data['HasError']);
        }
        // validate the optional field `HasThrottle`
        if (data['HasThrottle']) { // data not null
          Boolean.validateJSON(data['HasThrottle']);
        }
        // validate the optional field `IsPartial`
        if (data['IsPartial']) { // data not null
          Boolean.validateJSON(data['IsPartial']);
        }
        // validate the optional field `Http`
        if (data['Http']) { // data not null
          TraceSummaryHttp.validateJSON(data['Http']);
        }
        // validate the optional field `Annotations`
        if (data['Annotations']) { // data not null
          Object.validateJSON(data['Annotations']);
        }
        // validate the optional field `Users`
        if (data['Users']) { // data not null
          Array.validateJSON(data['Users']);
        }
        // validate the optional field `ServiceIds`
        if (data['ServiceIds']) { // data not null
          Array.validateJSON(data['ServiceIds']);
        }
        // validate the optional field `ResourceARNs`
        if (data['ResourceARNs']) { // data not null
          Array.validateJSON(data['ResourceARNs']);
        }
        // validate the optional field `InstanceIds`
        if (data['InstanceIds']) { // data not null
          Array.validateJSON(data['InstanceIds']);
        }
        // validate the optional field `AvailabilityZones`
        if (data['AvailabilityZones']) { // data not null
          Array.validateJSON(data['AvailabilityZones']);
        }
        // validate the optional field `EntryPoint`
        if (data['EntryPoint']) { // data not null
          TraceSummaryEntryPoint.validateJSON(data['EntryPoint']);
        }
        // validate the optional field `FaultRootCauses`
        if (data['FaultRootCauses']) { // data not null
          Array.validateJSON(data['FaultRootCauses']);
        }
        // validate the optional field `ErrorRootCauses`
        if (data['ErrorRootCauses']) { // data not null
          Array.validateJSON(data['ErrorRootCauses']);
        }
        // validate the optional field `ResponseTimeRootCauses`
        if (data['ResponseTimeRootCauses']) { // data not null
          Array.validateJSON(data['ResponseTimeRootCauses']);
        }
        // validate the optional field `Revision`
        if (data['Revision']) { // data not null
          Number.validateJSON(data['Revision']);
        }
        // validate the optional field `MatchedEventTime`
        if (data['MatchedEventTime']) { // data not null
          Date.validateJSON(data['MatchedEventTime']);
        }

        return true;
    }


}



/**
 * @member {String} Id
 */
TraceSummary.prototype['Id'] = undefined;

/**
 * @member {Number} Duration
 */
TraceSummary.prototype['Duration'] = undefined;

/**
 * @member {Number} ResponseTime
 */
TraceSummary.prototype['ResponseTime'] = undefined;

/**
 * @member {Boolean} HasFault
 */
TraceSummary.prototype['HasFault'] = undefined;

/**
 * @member {Boolean} HasError
 */
TraceSummary.prototype['HasError'] = undefined;

/**
 * @member {Boolean} HasThrottle
 */
TraceSummary.prototype['HasThrottle'] = undefined;

/**
 * @member {Boolean} IsPartial
 */
TraceSummary.prototype['IsPartial'] = undefined;

/**
 * @member {module:model/TraceSummaryHttp} Http
 */
TraceSummary.prototype['Http'] = undefined;

/**
 * @member {Object} Annotations
 */
TraceSummary.prototype['Annotations'] = undefined;

/**
 * @member {Array} Users
 */
TraceSummary.prototype['Users'] = undefined;

/**
 * @member {Array} ServiceIds
 */
TraceSummary.prototype['ServiceIds'] = undefined;

/**
 * @member {Array} ResourceARNs
 */
TraceSummary.prototype['ResourceARNs'] = undefined;

/**
 * @member {Array} InstanceIds
 */
TraceSummary.prototype['InstanceIds'] = undefined;

/**
 * @member {Array} AvailabilityZones
 */
TraceSummary.prototype['AvailabilityZones'] = undefined;

/**
 * @member {module:model/TraceSummaryEntryPoint} EntryPoint
 */
TraceSummary.prototype['EntryPoint'] = undefined;

/**
 * @member {Array} FaultRootCauses
 */
TraceSummary.prototype['FaultRootCauses'] = undefined;

/**
 * @member {Array} ErrorRootCauses
 */
TraceSummary.prototype['ErrorRootCauses'] = undefined;

/**
 * @member {Array} ResponseTimeRootCauses
 */
TraceSummary.prototype['ResponseTimeRootCauses'] = undefined;

/**
 * @member {Number} Revision
 */
TraceSummary.prototype['Revision'] = undefined;

/**
 * @member {Date} MatchedEventTime
 */
TraceSummary.prototype['MatchedEventTime'] = undefined;






export default TraceSummary;

