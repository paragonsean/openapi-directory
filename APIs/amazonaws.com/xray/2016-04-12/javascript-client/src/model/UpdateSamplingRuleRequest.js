/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateSamplingRuleRequestSamplingRuleUpdate from './UpdateSamplingRuleRequestSamplingRuleUpdate';

/**
 * The UpdateSamplingRuleRequest model module.
 * @module model/UpdateSamplingRuleRequest
 * @version 2016-04-12
 */
class UpdateSamplingRuleRequest {
    /**
     * Constructs a new <code>UpdateSamplingRuleRequest</code>.
     * @alias module:model/UpdateSamplingRuleRequest
     * @param samplingRuleUpdate {module:model/UpdateSamplingRuleRequestSamplingRuleUpdate} 
     */
    constructor(samplingRuleUpdate) { 
        
        UpdateSamplingRuleRequest.initialize(this, samplingRuleUpdate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, samplingRuleUpdate) { 
        obj['SamplingRuleUpdate'] = samplingRuleUpdate;
    }

    /**
     * Constructs a <code>UpdateSamplingRuleRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateSamplingRuleRequest} obj Optional instance to populate.
     * @return {module:model/UpdateSamplingRuleRequest} The populated <code>UpdateSamplingRuleRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateSamplingRuleRequest();

            if (data.hasOwnProperty('SamplingRuleUpdate')) {
                obj['SamplingRuleUpdate'] = UpdateSamplingRuleRequestSamplingRuleUpdate.constructFromObject(data['SamplingRuleUpdate']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateSamplingRuleRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateSamplingRuleRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateSamplingRuleRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `SamplingRuleUpdate`
        if (data['SamplingRuleUpdate']) { // data not null
          UpdateSamplingRuleRequestSamplingRuleUpdate.validateJSON(data['SamplingRuleUpdate']);
        }

        return true;
    }


}

UpdateSamplingRuleRequest.RequiredProperties = ["SamplingRuleUpdate"];

/**
 * @member {module:model/UpdateSamplingRuleRequestSamplingRuleUpdate} SamplingRuleUpdate
 */
UpdateSamplingRuleRequest.prototype['SamplingRuleUpdate'] = undefined;






export default UpdateSamplingRuleRequest;

