/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Trace model module.
 * @module model/Trace
 * @version 2016-04-12
 */
class Trace {
    /**
     * Constructs a new <code>Trace</code>.
     * A collection of segment documents with matching trace IDs.
     * @alias module:model/Trace
     */
    constructor() { 
        
        Trace.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Trace</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Trace} obj Optional instance to populate.
     * @return {module:model/Trace} The populated <code>Trace</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Trace();

            if (data.hasOwnProperty('Id')) {
                obj['Id'] = ApiClient.convertToType(data['Id'], 'String');
            }
            if (data.hasOwnProperty('Duration')) {
                obj['Duration'] = ApiClient.convertToType(data['Duration'], 'Number');
            }
            if (data.hasOwnProperty('LimitExceeded')) {
                obj['LimitExceeded'] = ApiClient.convertToType(data['LimitExceeded'], 'Boolean');
            }
            if (data.hasOwnProperty('Segments')) {
                obj['Segments'] = ApiClient.convertToType(data['Segments'], Array);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Trace</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Trace</code>.
     */
    static validateJSON(data) {
        // validate the optional field `Id`
        if (data['Id']) { // data not null
          String.validateJSON(data['Id']);
        }
        // validate the optional field `Duration`
        if (data['Duration']) { // data not null
          Number.validateJSON(data['Duration']);
        }
        // validate the optional field `LimitExceeded`
        if (data['LimitExceeded']) { // data not null
          Boolean.validateJSON(data['LimitExceeded']);
        }
        // validate the optional field `Segments`
        if (data['Segments']) { // data not null
          Array.validateJSON(data['Segments']);
        }

        return true;
    }


}



/**
 * @member {String} Id
 */
Trace.prototype['Id'] = undefined;

/**
 * @member {Number} Duration
 */
Trace.prototype['Duration'] = undefined;

/**
 * @member {Boolean} LimitExceeded
 */
Trace.prototype['LimitExceeded'] = undefined;

/**
 * @member {Array} Segments
 */
Trace.prototype['Segments'] = undefined;






export default Trace;

