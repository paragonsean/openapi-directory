/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EncryptionConfig from './EncryptionConfig';
import EncryptionStatus from './EncryptionStatus';
import EncryptionType from './EncryptionType';

/**
 * The PutEncryptionConfigResultEncryptionConfig model module.
 * @module model/PutEncryptionConfigResultEncryptionConfig
 * @version 2016-04-12
 */
class PutEncryptionConfigResultEncryptionConfig {
    /**
     * Constructs a new <code>PutEncryptionConfigResultEncryptionConfig</code>.
     * @alias module:model/PutEncryptionConfigResultEncryptionConfig
     * @implements module:model/EncryptionConfig
     */
    constructor() { 
        EncryptionConfig.initialize(this);
        PutEncryptionConfigResultEncryptionConfig.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PutEncryptionConfigResultEncryptionConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PutEncryptionConfigResultEncryptionConfig} obj Optional instance to populate.
     * @return {module:model/PutEncryptionConfigResultEncryptionConfig} The populated <code>PutEncryptionConfigResultEncryptionConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PutEncryptionConfigResultEncryptionConfig();
            EncryptionConfig.constructFromObject(data, obj);

            if (data.hasOwnProperty('KeyId')) {
                obj['KeyId'] = ApiClient.convertToType(data['KeyId'], 'String');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], EncryptionStatus);
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], EncryptionType);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PutEncryptionConfigResultEncryptionConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PutEncryptionConfigResultEncryptionConfig</code>.
     */
    static validateJSON(data) {
        // validate the optional field `KeyId`
        if (data['KeyId']) { // data not null
          String.validateJSON(data['KeyId']);
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          EncryptionStatus.validateJSON(data['Status']);
        }
        // validate the optional field `Type`
        if (data['Type']) { // data not null
          EncryptionType.validateJSON(data['Type']);
        }

        return true;
    }


}



/**
 * @member {String} KeyId
 */
PutEncryptionConfigResultEncryptionConfig.prototype['KeyId'] = undefined;

/**
 * @member {module:model/EncryptionStatus} Status
 */
PutEncryptionConfigResultEncryptionConfig.prototype['Status'] = undefined;

/**
 * @member {module:model/EncryptionType} Type
 */
PutEncryptionConfigResultEncryptionConfig.prototype['Type'] = undefined;


// Implement EncryptionConfig interface:
/**
 * @member {String} KeyId
 */
EncryptionConfig.prototype['KeyId'] = undefined;
/**
 * @member {module:model/EncryptionStatus} Status
 */
EncryptionConfig.prototype['Status'] = undefined;
/**
 * @member {module:model/EncryptionType} Type
 */
EncryptionConfig.prototype['Type'] = undefined;




export default PutEncryptionConfigResultEncryptionConfig;

