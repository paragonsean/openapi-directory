/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AwsXRay);
  }
}(this, function(expect, AwsXRay) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AwsXRay.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('batchGetTraces', function() {
      it('should call batchGetTraces successfully', function(done) {
        //uncomment below and update the code to test batchGetTraces
        //instance.batchGetTraces(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createGroup', function() {
      it('should call createGroup successfully', function(done) {
        //uncomment below and update the code to test createGroup
        //instance.createGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSamplingRule', function() {
      it('should call createSamplingRule successfully', function(done) {
        //uncomment below and update the code to test createSamplingRule
        //instance.createSamplingRule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteGroup', function() {
      it('should call deleteGroup successfully', function(done) {
        //uncomment below and update the code to test deleteGroup
        //instance.deleteGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteResourcePolicy', function() {
      it('should call deleteResourcePolicy successfully', function(done) {
        //uncomment below and update the code to test deleteResourcePolicy
        //instance.deleteResourcePolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSamplingRule', function() {
      it('should call deleteSamplingRule successfully', function(done) {
        //uncomment below and update the code to test deleteSamplingRule
        //instance.deleteSamplingRule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEncryptionConfig', function() {
      it('should call getEncryptionConfig successfully', function(done) {
        //uncomment below and update the code to test getEncryptionConfig
        //instance.getEncryptionConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroup', function() {
      it('should call getGroup successfully', function(done) {
        //uncomment below and update the code to test getGroup
        //instance.getGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getGroups', function() {
      it('should call getGroups successfully', function(done) {
        //uncomment below and update the code to test getGroups
        //instance.getGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInsight', function() {
      it('should call getInsight successfully', function(done) {
        //uncomment below and update the code to test getInsight
        //instance.getInsight(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInsightEvents', function() {
      it('should call getInsightEvents successfully', function(done) {
        //uncomment below and update the code to test getInsightEvents
        //instance.getInsightEvents(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInsightImpactGraph', function() {
      it('should call getInsightImpactGraph successfully', function(done) {
        //uncomment below and update the code to test getInsightImpactGraph
        //instance.getInsightImpactGraph(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getInsightSummaries', function() {
      it('should call getInsightSummaries successfully', function(done) {
        //uncomment below and update the code to test getInsightSummaries
        //instance.getInsightSummaries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSamplingRules', function() {
      it('should call getSamplingRules successfully', function(done) {
        //uncomment below and update the code to test getSamplingRules
        //instance.getSamplingRules(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSamplingStatisticSummaries', function() {
      it('should call getSamplingStatisticSummaries successfully', function(done) {
        //uncomment below and update the code to test getSamplingStatisticSummaries
        //instance.getSamplingStatisticSummaries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSamplingTargets', function() {
      it('should call getSamplingTargets successfully', function(done) {
        //uncomment below and update the code to test getSamplingTargets
        //instance.getSamplingTargets(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getServiceGraph', function() {
      it('should call getServiceGraph successfully', function(done) {
        //uncomment below and update the code to test getServiceGraph
        //instance.getServiceGraph(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTimeSeriesServiceStatistics', function() {
      it('should call getTimeSeriesServiceStatistics successfully', function(done) {
        //uncomment below and update the code to test getTimeSeriesServiceStatistics
        //instance.getTimeSeriesServiceStatistics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTraceGraph', function() {
      it('should call getTraceGraph successfully', function(done) {
        //uncomment below and update the code to test getTraceGraph
        //instance.getTraceGraph(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTraceSummaries', function() {
      it('should call getTraceSummaries successfully', function(done) {
        //uncomment below and update the code to test getTraceSummaries
        //instance.getTraceSummaries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listResourcePolicies', function() {
      it('should call listResourcePolicies successfully', function(done) {
        //uncomment below and update the code to test listResourcePolicies
        //instance.listResourcePolicies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTagsForResource', function() {
      it('should call listTagsForResource successfully', function(done) {
        //uncomment below and update the code to test listTagsForResource
        //instance.listTagsForResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putEncryptionConfig', function() {
      it('should call putEncryptionConfig successfully', function(done) {
        //uncomment below and update the code to test putEncryptionConfig
        //instance.putEncryptionConfig(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putResourcePolicy', function() {
      it('should call putResourcePolicy successfully', function(done) {
        //uncomment below and update the code to test putResourcePolicy
        //instance.putResourcePolicy(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putTelemetryRecords', function() {
      it('should call putTelemetryRecords successfully', function(done) {
        //uncomment below and update the code to test putTelemetryRecords
        //instance.putTelemetryRecords(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('putTraceSegments', function() {
      it('should call putTraceSegments successfully', function(done) {
        //uncomment below and update the code to test putTraceSegments
        //instance.putTraceSegments(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagResource', function() {
      it('should call tagResource successfully', function(done) {
        //uncomment below and update the code to test tagResource
        //instance.tagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('untagResource', function() {
      it('should call untagResource successfully', function(done) {
        //uncomment below and update the code to test untagResource
        //instance.untagResource(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateGroup', function() {
      it('should call updateGroup successfully', function(done) {
        //uncomment below and update the code to test updateGroup
        //instance.updateGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSamplingRule', function() {
      it('should call updateSamplingRule successfully', function(done) {
        //uncomment below and update the code to test updateSamplingRule
        //instance.updateSamplingRule(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
