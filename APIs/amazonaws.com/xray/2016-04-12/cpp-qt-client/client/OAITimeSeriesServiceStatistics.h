/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimeSeriesServiceStatistics.h
 *
 * A list of TimeSeriesStatistic structures.
 */

#ifndef OAITimeSeriesServiceStatistics_H
#define OAITimeSeriesServiceStatistics_H

#include <QJsonObject>

#include "OAIEdgeStatistics.h"
#include "OAIServiceStatistics.h"
#include "OAITimeSeriesServiceStatistics_ServiceForecastStatistics.h"
#include <QDateTime>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEdgeStatistics;
class OAIServiceStatistics;
class OAITimeSeriesServiceStatistics_ServiceForecastStatistics;

class OAITimeSeriesServiceStatistics : public OAIObject {
public:
    OAITimeSeriesServiceStatistics();
    OAITimeSeriesServiceStatistics(QString json);
    ~OAITimeSeriesServiceStatistics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    OAIEdgeStatistics getEdgeSummaryStatistics() const;
    void setEdgeSummaryStatistics(const OAIEdgeStatistics &edge_summary_statistics);
    bool is_edge_summary_statistics_Set() const;
    bool is_edge_summary_statistics_Valid() const;

    OAIServiceStatistics getServiceSummaryStatistics() const;
    void setServiceSummaryStatistics(const OAIServiceStatistics &service_summary_statistics);
    bool is_service_summary_statistics_Set() const;
    bool is_service_summary_statistics_Valid() const;

    OAITimeSeriesServiceStatistics_ServiceForecastStatistics getServiceForecastStatistics() const;
    void setServiceForecastStatistics(const OAITimeSeriesServiceStatistics_ServiceForecastStatistics &service_forecast_statistics);
    bool is_service_forecast_statistics_Set() const;
    bool is_service_forecast_statistics_Valid() const;

    QList getResponseTimeHistogram() const;
    void setResponseTimeHistogram(const QList &response_time_histogram);
    bool is_response_time_histogram_Set() const;
    bool is_response_time_histogram_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    OAIEdgeStatistics m_edge_summary_statistics;
    bool m_edge_summary_statistics_isSet;
    bool m_edge_summary_statistics_isValid;

    OAIServiceStatistics m_service_summary_statistics;
    bool m_service_summary_statistics_isSet;
    bool m_service_summary_statistics_isValid;

    OAITimeSeriesServiceStatistics_ServiceForecastStatistics m_service_forecast_statistics;
    bool m_service_forecast_statistics_isSet;
    bool m_service_forecast_statistics_isValid;

    QList m_response_time_histogram;
    bool m_response_time_histogram_isSet;
    bool m_response_time_histogram_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimeSeriesServiceStatistics)

#endif // OAITimeSeriesServiceStatistics_H
