/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPutTelemetryRecordsRequest.h
 *
 * 
 */

#ifndef OAIPutTelemetryRecordsRequest_H
#define OAIPutTelemetryRecordsRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPutTelemetryRecordsRequest : public OAIObject {
public:
    OAIPutTelemetryRecordsRequest();
    OAIPutTelemetryRecordsRequest(QString json);
    ~OAIPutTelemetryRecordsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getTelemetryRecords() const;
    void setTelemetryRecords(const QList &telemetry_records);
    bool is_telemetry_records_Set() const;
    bool is_telemetry_records_Valid() const;

    QString getEc2InstanceId() const;
    void setEc2InstanceId(const QString &ec2_instance_id);
    bool is_ec2_instance_id_Set() const;
    bool is_ec2_instance_id_Valid() const;

    QString getHostname() const;
    void setHostname(const QString &hostname);
    bool is_hostname_Set() const;
    bool is_hostname_Valid() const;

    QString getResourceArn() const;
    void setResourceArn(const QString &resource_arn);
    bool is_resource_arn_Set() const;
    bool is_resource_arn_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_telemetry_records;
    bool m_telemetry_records_isSet;
    bool m_telemetry_records_isValid;

    QString m_ec2_instance_id;
    bool m_ec2_instance_id_isSet;
    bool m_ec2_instance_id_isValid;

    QString m_hostname;
    bool m_hostname_isSet;
    bool m_hostname_isValid;

    QString m_resource_arn;
    bool m_resource_arn_isSet;
    bool m_resource_arn_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPutTelemetryRecordsRequest)

#endif // OAIPutTelemetryRecordsRequest_H
