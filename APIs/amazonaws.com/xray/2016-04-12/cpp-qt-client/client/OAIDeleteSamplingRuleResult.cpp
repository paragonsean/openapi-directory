/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeleteSamplingRuleResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeleteSamplingRuleResult::OAIDeleteSamplingRuleResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeleteSamplingRuleResult::OAIDeleteSamplingRuleResult() {
    this->initializeModel();
}

OAIDeleteSamplingRuleResult::~OAIDeleteSamplingRuleResult() {}

void OAIDeleteSamplingRuleResult::initializeModel() {

    m_sampling_rule_record_isSet = false;
    m_sampling_rule_record_isValid = false;
}

void OAIDeleteSamplingRuleResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDeleteSamplingRuleResult::fromJsonObject(QJsonObject json) {

    m_sampling_rule_record_isValid = ::OpenAPI::fromJsonValue(m_sampling_rule_record, json[QString("SamplingRuleRecord")]);
    m_sampling_rule_record_isSet = !json[QString("SamplingRuleRecord")].isNull() && m_sampling_rule_record_isValid;
}

QString OAIDeleteSamplingRuleResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDeleteSamplingRuleResult::asJsonObject() const {
    QJsonObject obj;
    if (m_sampling_rule_record.isSet()) {
        obj.insert(QString("SamplingRuleRecord"), ::OpenAPI::toJsonValue(m_sampling_rule_record));
    }
    return obj;
}

OAIDeleteSamplingRuleResult_SamplingRuleRecord OAIDeleteSamplingRuleResult::getSamplingRuleRecord() const {
    return m_sampling_rule_record;
}
void OAIDeleteSamplingRuleResult::setSamplingRuleRecord(const OAIDeleteSamplingRuleResult_SamplingRuleRecord &sampling_rule_record) {
    m_sampling_rule_record = sampling_rule_record;
    m_sampling_rule_record_isSet = true;
}

bool OAIDeleteSamplingRuleResult::is_sampling_rule_record_Set() const{
    return m_sampling_rule_record_isSet;
}

bool OAIDeleteSamplingRuleResult::is_sampling_rule_record_Valid() const{
    return m_sampling_rule_record_isValid;
}

bool OAIDeleteSamplingRuleResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_sampling_rule_record.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDeleteSamplingRuleResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
