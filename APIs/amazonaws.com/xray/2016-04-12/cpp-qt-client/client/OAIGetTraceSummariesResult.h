/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetTraceSummariesResult.h
 *
 * 
 */

#ifndef OAIGetTraceSummariesResult_H
#define OAIGetTraceSummariesResult_H

#include <QJsonObject>

#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetTraceSummariesResult : public OAIObject {
public:
    OAIGetTraceSummariesResult();
    OAIGetTraceSummariesResult(QString json);
    ~OAIGetTraceSummariesResult() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getTraceSummaries() const;
    void setTraceSummaries(const QList &trace_summaries);
    bool is_trace_summaries_Set() const;
    bool is_trace_summaries_Valid() const;

    QDateTime getApproximateTime() const;
    void setApproximateTime(const QDateTime &approximate_time);
    bool is_approximate_time_Set() const;
    bool is_approximate_time_Valid() const;

    qint32 getTracesProcessedCount() const;
    void setTracesProcessedCount(const qint32 &traces_processed_count);
    bool is_traces_processed_count_Set() const;
    bool is_traces_processed_count_Valid() const;

    QString getNextToken() const;
    void setNextToken(const QString &next_token);
    bool is_next_token_Set() const;
    bool is_next_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_trace_summaries;
    bool m_trace_summaries_isSet;
    bool m_trace_summaries_isValid;

    QDateTime m_approximate_time;
    bool m_approximate_time_isSet;
    bool m_approximate_time_isValid;

    qint32 m_traces_processed_count;
    bool m_traces_processed_count_isSet;
    bool m_traces_processed_count_isValid;

    QString m_next_token;
    bool m_next_token_isSet;
    bool m_next_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetTraceSummariesResult)

#endif // OAIGetTraceSummariesResult_H
