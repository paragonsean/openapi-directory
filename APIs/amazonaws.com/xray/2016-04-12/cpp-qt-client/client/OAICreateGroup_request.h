/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICreateGroup_request.h
 *
 * 
 */

#ifndef OAICreateGroup_request_H
#define OAICreateGroup_request_H

#include <QJsonObject>

#include "OAICreateGroup_request_InsightsConfiguration.h"
#include "OAITag.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICreateGroup_request_InsightsConfiguration;
class OAITag;

class OAICreateGroup_request : public OAIObject {
public:
    OAICreateGroup_request();
    OAICreateGroup_request(QString json);
    ~OAICreateGroup_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGroupName() const;
    void setGroupName(const QString &group_name);
    bool is_group_name_Set() const;
    bool is_group_name_Valid() const;

    QString getFilterExpression() const;
    void setFilterExpression(const QString &filter_expression);
    bool is_filter_expression_Set() const;
    bool is_filter_expression_Valid() const;

    OAICreateGroup_request_InsightsConfiguration getInsightsConfiguration() const;
    void setInsightsConfiguration(const OAICreateGroup_request_InsightsConfiguration &insights_configuration);
    bool is_insights_configuration_Set() const;
    bool is_insights_configuration_Valid() const;

    QList<OAITag> getTags() const;
    void setTags(const QList<OAITag> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_group_name;
    bool m_group_name_isSet;
    bool m_group_name_isValid;

    QString m_filter_expression;
    bool m_filter_expression_isSet;
    bool m_filter_expression_isValid;

    OAICreateGroup_request_InsightsConfiguration m_insights_configuration;
    bool m_insights_configuration_isSet;
    bool m_insights_configuration_isValid;

    QList<OAITag> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICreateGroup_request)

#endif // OAICreateGroup_request_H
