/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetGroupRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetGroupRequest::OAIGetGroupRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetGroupRequest::OAIGetGroupRequest() {
    this->initializeModel();
}

OAIGetGroupRequest::~OAIGetGroupRequest() {}

void OAIGetGroupRequest::initializeModel() {

    m_group_name_isSet = false;
    m_group_name_isValid = false;

    m_group_arn_isSet = false;
    m_group_arn_isValid = false;
}

void OAIGetGroupRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetGroupRequest::fromJsonObject(QJsonObject json) {

    m_group_name_isValid = ::OpenAPI::fromJsonValue(m_group_name, json[QString("GroupName")]);
    m_group_name_isSet = !json[QString("GroupName")].isNull() && m_group_name_isValid;

    m_group_arn_isValid = ::OpenAPI::fromJsonValue(m_group_arn, json[QString("GroupARN")]);
    m_group_arn_isSet = !json[QString("GroupARN")].isNull() && m_group_arn_isValid;
}

QString OAIGetGroupRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetGroupRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_group_name_isSet) {
        obj.insert(QString("GroupName"), ::OpenAPI::toJsonValue(m_group_name));
    }
    if (m_group_arn_isSet) {
        obj.insert(QString("GroupARN"), ::OpenAPI::toJsonValue(m_group_arn));
    }
    return obj;
}

QString OAIGetGroupRequest::getGroupName() const {
    return m_group_name;
}
void OAIGetGroupRequest::setGroupName(const QString &group_name) {
    m_group_name = group_name;
    m_group_name_isSet = true;
}

bool OAIGetGroupRequest::is_group_name_Set() const{
    return m_group_name_isSet;
}

bool OAIGetGroupRequest::is_group_name_Valid() const{
    return m_group_name_isValid;
}

QString OAIGetGroupRequest::getGroupArn() const {
    return m_group_arn;
}
void OAIGetGroupRequest::setGroupArn(const QString &group_arn) {
    m_group_arn = group_arn;
    m_group_arn_isSet = true;
}

bool OAIGetGroupRequest::is_group_arn_Set() const{
    return m_group_arn_isSet;
}

bool OAIGetGroupRequest::is_group_arn_Valid() const{
    return m_group_arn_isValid;
}

bool OAIGetGroupRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_arn_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetGroupRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
