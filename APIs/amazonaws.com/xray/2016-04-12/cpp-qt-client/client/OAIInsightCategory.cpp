/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInsightCategory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInsightCategory::OAIInsightCategory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInsightCategory::OAIInsightCategory() {
    this->initializeModel();
}

OAIInsightCategory::~OAIInsightCategory() {}

void OAIInsightCategory::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIInsightCategory::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIInsightCategory::fromJson(QString jsonString) {
    
    if ( jsonString.compare("FAULT", Qt::CaseInsensitive) == 0) {
        m_value = eOAIInsightCategory::FAULT;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIInsightCategory::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIInsightCategory::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIInsightCategory::FAULT:
            val = "FAULT";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIInsightCategory::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIInsightCategory::eOAIInsightCategory OAIInsightCategory::getValue() const {
    return m_value;
}

void OAIInsightCategory::setValue(const OAIInsightCategory::eOAIInsightCategory& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIInsightCategory::isSet() const {
    
    return m_value_isSet;
}

bool OAIInsightCategory::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
