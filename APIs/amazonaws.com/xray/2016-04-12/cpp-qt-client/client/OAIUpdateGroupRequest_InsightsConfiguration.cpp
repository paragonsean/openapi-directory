/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateGroupRequest_InsightsConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateGroupRequest_InsightsConfiguration::OAIUpdateGroupRequest_InsightsConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateGroupRequest_InsightsConfiguration::OAIUpdateGroupRequest_InsightsConfiguration() {
    this->initializeModel();
}

OAIUpdateGroupRequest_InsightsConfiguration::~OAIUpdateGroupRequest_InsightsConfiguration() {}

void OAIUpdateGroupRequest_InsightsConfiguration::initializeModel() {

    m_insights_enabled_isSet = false;
    m_insights_enabled_isValid = false;

    m_notifications_enabled_isSet = false;
    m_notifications_enabled_isValid = false;
}

void OAIUpdateGroupRequest_InsightsConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateGroupRequest_InsightsConfiguration::fromJsonObject(QJsonObject json) {

    m_insights_enabled_isValid = ::OpenAPI::fromJsonValue(m_insights_enabled, json[QString("InsightsEnabled")]);
    m_insights_enabled_isSet = !json[QString("InsightsEnabled")].isNull() && m_insights_enabled_isValid;

    m_notifications_enabled_isValid = ::OpenAPI::fromJsonValue(m_notifications_enabled, json[QString("NotificationsEnabled")]);
    m_notifications_enabled_isSet = !json[QString("NotificationsEnabled")].isNull() && m_notifications_enabled_isValid;
}

QString OAIUpdateGroupRequest_InsightsConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateGroupRequest_InsightsConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_insights_enabled_isSet) {
        obj.insert(QString("InsightsEnabled"), ::OpenAPI::toJsonValue(m_insights_enabled));
    }
    if (m_notifications_enabled_isSet) {
        obj.insert(QString("NotificationsEnabled"), ::OpenAPI::toJsonValue(m_notifications_enabled));
    }
    return obj;
}

bool OAIUpdateGroupRequest_InsightsConfiguration::getInsightsEnabled() const {
    return m_insights_enabled;
}
void OAIUpdateGroupRequest_InsightsConfiguration::setInsightsEnabled(const bool &insights_enabled) {
    m_insights_enabled = insights_enabled;
    m_insights_enabled_isSet = true;
}

bool OAIUpdateGroupRequest_InsightsConfiguration::is_insights_enabled_Set() const{
    return m_insights_enabled_isSet;
}

bool OAIUpdateGroupRequest_InsightsConfiguration::is_insights_enabled_Valid() const{
    return m_insights_enabled_isValid;
}

bool OAIUpdateGroupRequest_InsightsConfiguration::getNotificationsEnabled() const {
    return m_notifications_enabled;
}
void OAIUpdateGroupRequest_InsightsConfiguration::setNotificationsEnabled(const bool &notifications_enabled) {
    m_notifications_enabled = notifications_enabled;
    m_notifications_enabled_isSet = true;
}

bool OAIUpdateGroupRequest_InsightsConfiguration::is_notifications_enabled_Set() const{
    return m_notifications_enabled_isSet;
}

bool OAIUpdateGroupRequest_InsightsConfiguration::is_notifications_enabled_Valid() const{
    return m_notifications_enabled_isValid;
}

bool OAIUpdateGroupRequest_InsightsConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_insights_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notifications_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateGroupRequest_InsightsConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
