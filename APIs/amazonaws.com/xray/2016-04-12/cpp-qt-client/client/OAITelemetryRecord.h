/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITelemetryRecord.h
 *
 * &lt;p/&gt;
 */

#ifndef OAITelemetryRecord_H
#define OAITelemetryRecord_H

#include <QJsonObject>

#include "OAITelemetryRecord_BackendConnectionErrors.h"
#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITelemetryRecord_BackendConnectionErrors;

class OAITelemetryRecord : public OAIObject {
public:
    OAITelemetryRecord();
    OAITelemetryRecord(QString json);
    ~OAITelemetryRecord() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getTimestamp() const;
    void setTimestamp(const QDateTime &timestamp);
    bool is_timestamp_Set() const;
    bool is_timestamp_Valid() const;

    qint32 getSegmentsReceivedCount() const;
    void setSegmentsReceivedCount(const qint32 &segments_received_count);
    bool is_segments_received_count_Set() const;
    bool is_segments_received_count_Valid() const;

    qint32 getSegmentsSentCount() const;
    void setSegmentsSentCount(const qint32 &segments_sent_count);
    bool is_segments_sent_count_Set() const;
    bool is_segments_sent_count_Valid() const;

    qint32 getSegmentsSpilloverCount() const;
    void setSegmentsSpilloverCount(const qint32 &segments_spillover_count);
    bool is_segments_spillover_count_Set() const;
    bool is_segments_spillover_count_Valid() const;

    qint32 getSegmentsRejectedCount() const;
    void setSegmentsRejectedCount(const qint32 &segments_rejected_count);
    bool is_segments_rejected_count_Set() const;
    bool is_segments_rejected_count_Valid() const;

    OAITelemetryRecord_BackendConnectionErrors getBackendConnectionErrors() const;
    void setBackendConnectionErrors(const OAITelemetryRecord_BackendConnectionErrors &backend_connection_errors);
    bool is_backend_connection_errors_Set() const;
    bool is_backend_connection_errors_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_timestamp;
    bool m_timestamp_isSet;
    bool m_timestamp_isValid;

    qint32 m_segments_received_count;
    bool m_segments_received_count_isSet;
    bool m_segments_received_count_isValid;

    qint32 m_segments_sent_count;
    bool m_segments_sent_count_isSet;
    bool m_segments_sent_count_isValid;

    qint32 m_segments_spillover_count;
    bool m_segments_spillover_count_isSet;
    bool m_segments_spillover_count_isValid;

    qint32 m_segments_rejected_count;
    bool m_segments_rejected_count_isSet;
    bool m_segments_rejected_count_isValid;

    OAITelemetryRecord_BackendConnectionErrors m_backend_connection_errors;
    bool m_backend_connection_errors_isSet;
    bool m_backend_connection_errors_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITelemetryRecord)

#endif // OAITelemetryRecord_H
