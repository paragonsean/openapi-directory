/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIPutResourcePolicyResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIPutResourcePolicyResult::OAIPutResourcePolicyResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIPutResourcePolicyResult::OAIPutResourcePolicyResult() {
    this->initializeModel();
}

OAIPutResourcePolicyResult::~OAIPutResourcePolicyResult() {}

void OAIPutResourcePolicyResult::initializeModel() {

    m_resource_policy_isSet = false;
    m_resource_policy_isValid = false;
}

void OAIPutResourcePolicyResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIPutResourcePolicyResult::fromJsonObject(QJsonObject json) {

    m_resource_policy_isValid = ::OpenAPI::fromJsonValue(m_resource_policy, json[QString("ResourcePolicy")]);
    m_resource_policy_isSet = !json[QString("ResourcePolicy")].isNull() && m_resource_policy_isValid;
}

QString OAIPutResourcePolicyResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIPutResourcePolicyResult::asJsonObject() const {
    QJsonObject obj;
    if (m_resource_policy.isSet()) {
        obj.insert(QString("ResourcePolicy"), ::OpenAPI::toJsonValue(m_resource_policy));
    }
    return obj;
}

OAIPutResourcePolicyResult_ResourcePolicy OAIPutResourcePolicyResult::getResourcePolicy() const {
    return m_resource_policy;
}
void OAIPutResourcePolicyResult::setResourcePolicy(const OAIPutResourcePolicyResult_ResourcePolicy &resource_policy) {
    m_resource_policy = resource_policy;
    m_resource_policy_isSet = true;
}

bool OAIPutResourcePolicyResult::is_resource_policy_Set() const{
    return m_resource_policy_isSet;
}

bool OAIPutResourcePolicyResult::is_resource_policy_Valid() const{
    return m_resource_policy_isValid;
}

bool OAIPutResourcePolicyResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_resource_policy.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIPutResourcePolicyResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
