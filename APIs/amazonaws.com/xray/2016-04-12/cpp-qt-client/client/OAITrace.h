/**
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITrace.h
 *
 * A collection of segment documents with matching trace IDs.
 */

#ifndef OAITrace_H
#define OAITrace_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITrace : public OAIObject {
public:
    OAITrace();
    OAITrace(QString json);
    ~OAITrace() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    double getDuration() const;
    void setDuration(const double &duration);
    bool is_duration_Set() const;
    bool is_duration_Valid() const;

    bool getLimitExceeded() const;
    void setLimitExceeded(const bool &limit_exceeded);
    bool is_limit_exceeded_Set() const;
    bool is_limit_exceeded_Valid() const;

    QList getSegments() const;
    void setSegments(const QList &segments);
    bool is_segments_Set() const;
    bool is_segments_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    double m_duration;
    bool m_duration_isSet;
    bool m_duration_isValid;

    bool m_limit_exceeded;
    bool m_limit_exceeded_isSet;
    bool m_limit_exceeded_isValid;

    QList m_segments;
    bool m_segments_isSet;
    bool m_segments_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITrace)

#endif // OAITrace_H
