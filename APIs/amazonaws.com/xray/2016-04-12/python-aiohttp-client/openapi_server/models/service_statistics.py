# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.edge_statistics_error_statistics import EdgeStatisticsErrorStatistics
from openapi_server.models.edge_statistics_fault_statistics import EdgeStatisticsFaultStatistics
from openapi_server import util


class ServiceStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ok_count: int=None, error_statistics: EdgeStatisticsErrorStatistics=None, fault_statistics: EdgeStatisticsFaultStatistics=None, total_count: int=None, total_response_time: float=None):
        """ServiceStatistics - a model defined in OpenAPI

        :param ok_count: The ok_count of this ServiceStatistics.
        :param error_statistics: The error_statistics of this ServiceStatistics.
        :param fault_statistics: The fault_statistics of this ServiceStatistics.
        :param total_count: The total_count of this ServiceStatistics.
        :param total_response_time: The total_response_time of this ServiceStatistics.
        """
        self.openapi_types = {
            'ok_count': int,
            'error_statistics': EdgeStatisticsErrorStatistics,
            'fault_statistics': EdgeStatisticsFaultStatistics,
            'total_count': int,
            'total_response_time': float
        }

        self.attribute_map = {
            'ok_count': 'OkCount',
            'error_statistics': 'ErrorStatistics',
            'fault_statistics': 'FaultStatistics',
            'total_count': 'TotalCount',
            'total_response_time': 'TotalResponseTime'
        }

        self._ok_count = ok_count
        self._error_statistics = error_statistics
        self._fault_statistics = fault_statistics
        self._total_count = total_count
        self._total_response_time = total_response_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceStatistics of this ServiceStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ok_count(self):
        """Gets the ok_count of this ServiceStatistics.


        :return: The ok_count of this ServiceStatistics.
        :rtype: int
        """
        return self._ok_count

    @ok_count.setter
    def ok_count(self, ok_count):
        """Sets the ok_count of this ServiceStatistics.


        :param ok_count: The ok_count of this ServiceStatistics.
        :type ok_count: int
        """

        self._ok_count = ok_count

    @property
    def error_statistics(self):
        """Gets the error_statistics of this ServiceStatistics.


        :return: The error_statistics of this ServiceStatistics.
        :rtype: EdgeStatisticsErrorStatistics
        """
        return self._error_statistics

    @error_statistics.setter
    def error_statistics(self, error_statistics):
        """Sets the error_statistics of this ServiceStatistics.


        :param error_statistics: The error_statistics of this ServiceStatistics.
        :type error_statistics: EdgeStatisticsErrorStatistics
        """

        self._error_statistics = error_statistics

    @property
    def fault_statistics(self):
        """Gets the fault_statistics of this ServiceStatistics.


        :return: The fault_statistics of this ServiceStatistics.
        :rtype: EdgeStatisticsFaultStatistics
        """
        return self._fault_statistics

    @fault_statistics.setter
    def fault_statistics(self, fault_statistics):
        """Sets the fault_statistics of this ServiceStatistics.


        :param fault_statistics: The fault_statistics of this ServiceStatistics.
        :type fault_statistics: EdgeStatisticsFaultStatistics
        """

        self._fault_statistics = fault_statistics

    @property
    def total_count(self):
        """Gets the total_count of this ServiceStatistics.


        :return: The total_count of this ServiceStatistics.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this ServiceStatistics.


        :param total_count: The total_count of this ServiceStatistics.
        :type total_count: int
        """

        self._total_count = total_count

    @property
    def total_response_time(self):
        """Gets the total_response_time of this ServiceStatistics.


        :return: The total_response_time of this ServiceStatistics.
        :rtype: float
        """
        return self._total_response_time

    @total_response_time.setter
    def total_response_time(self, total_response_time):
        """Sets the total_response_time of this ServiceStatistics.


        :param total_response_time: The total_response_time of this ServiceStatistics.
        :type total_response_time: float
        """

        self._total_response_time = total_response_time
