# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.value_with_service_ids_annotation_value import ValueWithServiceIdsAnnotationValue
from openapi_server import util


class ValueWithServiceIds(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, annotation_value: ValueWithServiceIdsAnnotationValue=None, service_ids: List=None):
        """ValueWithServiceIds - a model defined in OpenAPI

        :param annotation_value: The annotation_value of this ValueWithServiceIds.
        :param service_ids: The service_ids of this ValueWithServiceIds.
        """
        self.openapi_types = {
            'annotation_value': ValueWithServiceIdsAnnotationValue,
            'service_ids': List
        }

        self.attribute_map = {
            'annotation_value': 'AnnotationValue',
            'service_ids': 'ServiceIds'
        }

        self._annotation_value = annotation_value
        self._service_ids = service_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ValueWithServiceIds':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ValueWithServiceIds of this ValueWithServiceIds.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def annotation_value(self):
        """Gets the annotation_value of this ValueWithServiceIds.


        :return: The annotation_value of this ValueWithServiceIds.
        :rtype: ValueWithServiceIdsAnnotationValue
        """
        return self._annotation_value

    @annotation_value.setter
    def annotation_value(self, annotation_value):
        """Sets the annotation_value of this ValueWithServiceIds.


        :param annotation_value: The annotation_value of this ValueWithServiceIds.
        :type annotation_value: ValueWithServiceIdsAnnotationValue
        """

        self._annotation_value = annotation_value

    @property
    def service_ids(self):
        """Gets the service_ids of this ValueWithServiceIds.


        :return: The service_ids of this ValueWithServiceIds.
        :rtype: List
        """
        return self._service_ids

    @service_ids.setter
    def service_ids(self, service_ids):
        """Sets the service_ids of this ValueWithServiceIds.


        :param service_ids: The service_ids of this ValueWithServiceIds.
        :type service_ids: List
        """

        self._service_ids = service_ids
