# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchGetTracesResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, traces: List=None, unprocessed_trace_ids: List=None, next_token: str=None):
        """BatchGetTracesResult - a model defined in OpenAPI

        :param traces: The traces of this BatchGetTracesResult.
        :param unprocessed_trace_ids: The unprocessed_trace_ids of this BatchGetTracesResult.
        :param next_token: The next_token of this BatchGetTracesResult.
        """
        self.openapi_types = {
            'traces': List,
            'unprocessed_trace_ids': List,
            'next_token': str
        }

        self.attribute_map = {
            'traces': 'Traces',
            'unprocessed_trace_ids': 'UnprocessedTraceIds',
            'next_token': 'NextToken'
        }

        self._traces = traces
        self._unprocessed_trace_ids = unprocessed_trace_ids
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchGetTracesResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchGetTracesResult of this BatchGetTracesResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def traces(self):
        """Gets the traces of this BatchGetTracesResult.


        :return: The traces of this BatchGetTracesResult.
        :rtype: List
        """
        return self._traces

    @traces.setter
    def traces(self, traces):
        """Sets the traces of this BatchGetTracesResult.


        :param traces: The traces of this BatchGetTracesResult.
        :type traces: List
        """

        self._traces = traces

    @property
    def unprocessed_trace_ids(self):
        """Gets the unprocessed_trace_ids of this BatchGetTracesResult.


        :return: The unprocessed_trace_ids of this BatchGetTracesResult.
        :rtype: List
        """
        return self._unprocessed_trace_ids

    @unprocessed_trace_ids.setter
    def unprocessed_trace_ids(self, unprocessed_trace_ids):
        """Sets the unprocessed_trace_ids of this BatchGetTracesResult.


        :param unprocessed_trace_ids: The unprocessed_trace_ids of this BatchGetTracesResult.
        :type unprocessed_trace_ids: List
        """

        self._unprocessed_trace_ids = unprocessed_trace_ids

    @property
    def next_token(self):
        """Gets the next_token of this BatchGetTracesResult.


        :return: The next_token of this BatchGetTracesResult.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this BatchGetTracesResult.


        :param next_token: The next_token of this BatchGetTracesResult.
        :type next_token: str
        """

        self._next_token = next_token
