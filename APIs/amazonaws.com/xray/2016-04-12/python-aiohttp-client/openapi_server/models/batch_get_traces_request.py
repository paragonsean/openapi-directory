# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BatchGetTracesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, trace_ids: List[str]=None, next_token: str=None):
        """BatchGetTracesRequest - a model defined in OpenAPI

        :param trace_ids: The trace_ids of this BatchGetTracesRequest.
        :param next_token: The next_token of this BatchGetTracesRequest.
        """
        self.openapi_types = {
            'trace_ids': List[str],
            'next_token': str
        }

        self.attribute_map = {
            'trace_ids': 'TraceIds',
            'next_token': 'NextToken'
        }

        self._trace_ids = trace_ids
        self._next_token = next_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchGetTracesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchGetTraces_request of this BatchGetTracesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def trace_ids(self):
        """Gets the trace_ids of this BatchGetTracesRequest.

        Specify the trace IDs of requests for which to retrieve segments.

        :return: The trace_ids of this BatchGetTracesRequest.
        :rtype: List[str]
        """
        return self._trace_ids

    @trace_ids.setter
    def trace_ids(self, trace_ids):
        """Sets the trace_ids of this BatchGetTracesRequest.

        Specify the trace IDs of requests for which to retrieve segments.

        :param trace_ids: The trace_ids of this BatchGetTracesRequest.
        :type trace_ids: List[str]
        """
        if trace_ids is None:
            raise ValueError("Invalid value for `trace_ids`, must not be `None`")

        self._trace_ids = trace_ids

    @property
    def next_token(self):
        """Gets the next_token of this BatchGetTracesRequest.

        Pagination token.

        :return: The next_token of this BatchGetTracesRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this BatchGetTracesRequest.

        Pagination token.

        :param next_token: The next_token of this BatchGetTracesRequest.
        :type next_token: str
        """

        self._next_token = next_token
