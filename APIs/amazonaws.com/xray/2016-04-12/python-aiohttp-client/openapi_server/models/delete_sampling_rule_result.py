# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.delete_sampling_rule_result_sampling_rule_record import DeleteSamplingRuleResultSamplingRuleRecord
from openapi_server import util


class DeleteSamplingRuleResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sampling_rule_record: DeleteSamplingRuleResultSamplingRuleRecord=None):
        """DeleteSamplingRuleResult - a model defined in OpenAPI

        :param sampling_rule_record: The sampling_rule_record of this DeleteSamplingRuleResult.
        """
        self.openapi_types = {
            'sampling_rule_record': DeleteSamplingRuleResultSamplingRuleRecord
        }

        self.attribute_map = {
            'sampling_rule_record': 'SamplingRuleRecord'
        }

        self._sampling_rule_record = sampling_rule_record

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteSamplingRuleResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DeleteSamplingRuleResult of this DeleteSamplingRuleResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sampling_rule_record(self):
        """Gets the sampling_rule_record of this DeleteSamplingRuleResult.


        :return: The sampling_rule_record of this DeleteSamplingRuleResult.
        :rtype: DeleteSamplingRuleResultSamplingRuleRecord
        """
        return self._sampling_rule_record

    @sampling_rule_record.setter
    def sampling_rule_record(self, sampling_rule_record):
        """Sets the sampling_rule_record of this DeleteSamplingRuleResult.


        :param sampling_rule_record: The sampling_rule_record of this DeleteSamplingRuleResult.
        :type sampling_rule_record: DeleteSamplingRuleResultSamplingRuleRecord
        """

        self._sampling_rule_record = sampling_rule_record
