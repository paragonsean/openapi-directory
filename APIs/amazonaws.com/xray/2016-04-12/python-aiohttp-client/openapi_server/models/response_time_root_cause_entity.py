# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ResponseTimeRootCauseEntity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, coverage: float=None, remote: bool=None):
        """ResponseTimeRootCauseEntity - a model defined in OpenAPI

        :param name: The name of this ResponseTimeRootCauseEntity.
        :param coverage: The coverage of this ResponseTimeRootCauseEntity.
        :param remote: The remote of this ResponseTimeRootCauseEntity.
        """
        self.openapi_types = {
            'name': str,
            'coverage': float,
            'remote': bool
        }

        self.attribute_map = {
            'name': 'Name',
            'coverage': 'Coverage',
            'remote': 'Remote'
        }

        self._name = name
        self._coverage = coverage
        self._remote = remote

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ResponseTimeRootCauseEntity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ResponseTimeRootCauseEntity of this ResponseTimeRootCauseEntity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ResponseTimeRootCauseEntity.


        :return: The name of this ResponseTimeRootCauseEntity.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ResponseTimeRootCauseEntity.


        :param name: The name of this ResponseTimeRootCauseEntity.
        :type name: str
        """

        self._name = name

    @property
    def coverage(self):
        """Gets the coverage of this ResponseTimeRootCauseEntity.


        :return: The coverage of this ResponseTimeRootCauseEntity.
        :rtype: float
        """
        return self._coverage

    @coverage.setter
    def coverage(self, coverage):
        """Sets the coverage of this ResponseTimeRootCauseEntity.


        :param coverage: The coverage of this ResponseTimeRootCauseEntity.
        :type coverage: float
        """

        self._coverage = coverage

    @property
    def remote(self):
        """Gets the remote of this ResponseTimeRootCauseEntity.


        :return: The remote of this ResponseTimeRootCauseEntity.
        :rtype: bool
        """
        return self._remote

    @remote.setter
    def remote(self, remote):
        """Sets the remote of this ResponseTimeRootCauseEntity.


        :param remote: The remote of this ResponseTimeRootCauseEntity.
        :type remote: bool
        """

        self._remote = remote
