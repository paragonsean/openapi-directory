# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EdgeStatisticsErrorStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, throttle_count: int=None, other_count: int=None, total_count: int=None):
        """EdgeStatisticsErrorStatistics - a model defined in OpenAPI

        :param throttle_count: The throttle_count of this EdgeStatisticsErrorStatistics.
        :param other_count: The other_count of this EdgeStatisticsErrorStatistics.
        :param total_count: The total_count of this EdgeStatisticsErrorStatistics.
        """
        self.openapi_types = {
            'throttle_count': int,
            'other_count': int,
            'total_count': int
        }

        self.attribute_map = {
            'throttle_count': 'ThrottleCount',
            'other_count': 'OtherCount',
            'total_count': 'TotalCount'
        }

        self._throttle_count = throttle_count
        self._other_count = other_count
        self._total_count = total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EdgeStatisticsErrorStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EdgeStatistics_ErrorStatistics of this EdgeStatisticsErrorStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def throttle_count(self):
        """Gets the throttle_count of this EdgeStatisticsErrorStatistics.


        :return: The throttle_count of this EdgeStatisticsErrorStatistics.
        :rtype: int
        """
        return self._throttle_count

    @throttle_count.setter
    def throttle_count(self, throttle_count):
        """Sets the throttle_count of this EdgeStatisticsErrorStatistics.


        :param throttle_count: The throttle_count of this EdgeStatisticsErrorStatistics.
        :type throttle_count: int
        """

        self._throttle_count = throttle_count

    @property
    def other_count(self):
        """Gets the other_count of this EdgeStatisticsErrorStatistics.


        :return: The other_count of this EdgeStatisticsErrorStatistics.
        :rtype: int
        """
        return self._other_count

    @other_count.setter
    def other_count(self, other_count):
        """Sets the other_count of this EdgeStatisticsErrorStatistics.


        :param other_count: The other_count of this EdgeStatisticsErrorStatistics.
        :type other_count: int
        """

        self._other_count = other_count

    @property
    def total_count(self):
        """Gets the total_count of this EdgeStatisticsErrorStatistics.


        :return: The total_count of this EdgeStatisticsErrorStatistics.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this EdgeStatisticsErrorStatistics.


        :param total_count: The total_count of this EdgeStatisticsErrorStatistics.
        :type total_count: int
        """

        self._total_count = total_count
