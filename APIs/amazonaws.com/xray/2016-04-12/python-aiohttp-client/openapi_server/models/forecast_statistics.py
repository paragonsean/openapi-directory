# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ForecastStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fault_count_high: int=None, fault_count_low: int=None):
        """ForecastStatistics - a model defined in OpenAPI

        :param fault_count_high: The fault_count_high of this ForecastStatistics.
        :param fault_count_low: The fault_count_low of this ForecastStatistics.
        """
        self.openapi_types = {
            'fault_count_high': int,
            'fault_count_low': int
        }

        self.attribute_map = {
            'fault_count_high': 'FaultCountHigh',
            'fault_count_low': 'FaultCountLow'
        }

        self._fault_count_high = fault_count_high
        self._fault_count_low = fault_count_low

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ForecastStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ForecastStatistics of this ForecastStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fault_count_high(self):
        """Gets the fault_count_high of this ForecastStatistics.


        :return: The fault_count_high of this ForecastStatistics.
        :rtype: int
        """
        return self._fault_count_high

    @fault_count_high.setter
    def fault_count_high(self, fault_count_high):
        """Sets the fault_count_high of this ForecastStatistics.


        :param fault_count_high: The fault_count_high of this ForecastStatistics.
        :type fault_count_high: int
        """

        self._fault_count_high = fault_count_high

    @property
    def fault_count_low(self):
        """Gets the fault_count_low of this ForecastStatistics.


        :return: The fault_count_low of this ForecastStatistics.
        :rtype: int
        """
        return self._fault_count_low

    @fault_count_low.setter
    def fault_count_low(self, fault_count_low):
        """Sets the fault_count_low of this ForecastStatistics.


        :param fault_count_low: The fault_count_low of this ForecastStatistics.
        :type fault_count_low: int
        """

        self._fault_count_low = fault_count_low
