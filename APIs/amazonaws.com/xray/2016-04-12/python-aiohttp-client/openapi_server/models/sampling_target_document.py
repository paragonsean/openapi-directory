# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SamplingTargetDocument(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rule_name: str=None, fixed_rate: float=None, reservoir_quota: int=None, reservoir_quota_ttl: datetime=None, interval: int=None):
        """SamplingTargetDocument - a model defined in OpenAPI

        :param rule_name: The rule_name of this SamplingTargetDocument.
        :param fixed_rate: The fixed_rate of this SamplingTargetDocument.
        :param reservoir_quota: The reservoir_quota of this SamplingTargetDocument.
        :param reservoir_quota_ttl: The reservoir_quota_ttl of this SamplingTargetDocument.
        :param interval: The interval of this SamplingTargetDocument.
        """
        self.openapi_types = {
            'rule_name': str,
            'fixed_rate': float,
            'reservoir_quota': int,
            'reservoir_quota_ttl': datetime,
            'interval': int
        }

        self.attribute_map = {
            'rule_name': 'RuleName',
            'fixed_rate': 'FixedRate',
            'reservoir_quota': 'ReservoirQuota',
            'reservoir_quota_ttl': 'ReservoirQuotaTTL',
            'interval': 'Interval'
        }

        self._rule_name = rule_name
        self._fixed_rate = fixed_rate
        self._reservoir_quota = reservoir_quota
        self._reservoir_quota_ttl = reservoir_quota_ttl
        self._interval = interval

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SamplingTargetDocument':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SamplingTargetDocument of this SamplingTargetDocument.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rule_name(self):
        """Gets the rule_name of this SamplingTargetDocument.


        :return: The rule_name of this SamplingTargetDocument.
        :rtype: str
        """
        return self._rule_name

    @rule_name.setter
    def rule_name(self, rule_name):
        """Sets the rule_name of this SamplingTargetDocument.


        :param rule_name: The rule_name of this SamplingTargetDocument.
        :type rule_name: str
        """

        self._rule_name = rule_name

    @property
    def fixed_rate(self):
        """Gets the fixed_rate of this SamplingTargetDocument.


        :return: The fixed_rate of this SamplingTargetDocument.
        :rtype: float
        """
        return self._fixed_rate

    @fixed_rate.setter
    def fixed_rate(self, fixed_rate):
        """Sets the fixed_rate of this SamplingTargetDocument.


        :param fixed_rate: The fixed_rate of this SamplingTargetDocument.
        :type fixed_rate: float
        """

        self._fixed_rate = fixed_rate

    @property
    def reservoir_quota(self):
        """Gets the reservoir_quota of this SamplingTargetDocument.


        :return: The reservoir_quota of this SamplingTargetDocument.
        :rtype: int
        """
        return self._reservoir_quota

    @reservoir_quota.setter
    def reservoir_quota(self, reservoir_quota):
        """Sets the reservoir_quota of this SamplingTargetDocument.


        :param reservoir_quota: The reservoir_quota of this SamplingTargetDocument.
        :type reservoir_quota: int
        """

        self._reservoir_quota = reservoir_quota

    @property
    def reservoir_quota_ttl(self):
        """Gets the reservoir_quota_ttl of this SamplingTargetDocument.


        :return: The reservoir_quota_ttl of this SamplingTargetDocument.
        :rtype: datetime
        """
        return self._reservoir_quota_ttl

    @reservoir_quota_ttl.setter
    def reservoir_quota_ttl(self, reservoir_quota_ttl):
        """Sets the reservoir_quota_ttl of this SamplingTargetDocument.


        :param reservoir_quota_ttl: The reservoir_quota_ttl of this SamplingTargetDocument.
        :type reservoir_quota_ttl: datetime
        """

        self._reservoir_quota_ttl = reservoir_quota_ttl

    @property
    def interval(self):
        """Gets the interval of this SamplingTargetDocument.


        :return: The interval of this SamplingTargetDocument.
        :rtype: int
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this SamplingTargetDocument.


        :param interval: The interval of this SamplingTargetDocument.
        :type interval: int
        """

        self._interval = interval
