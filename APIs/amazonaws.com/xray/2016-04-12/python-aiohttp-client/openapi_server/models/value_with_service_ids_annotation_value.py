# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ValueWithServiceIdsAnnotationValue(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, number_value: float=None, boolean_value: bool=None, string_value: str=None):
        """ValueWithServiceIdsAnnotationValue - a model defined in OpenAPI

        :param number_value: The number_value of this ValueWithServiceIdsAnnotationValue.
        :param boolean_value: The boolean_value of this ValueWithServiceIdsAnnotationValue.
        :param string_value: The string_value of this ValueWithServiceIdsAnnotationValue.
        """
        self.openapi_types = {
            'number_value': float,
            'boolean_value': bool,
            'string_value': str
        }

        self.attribute_map = {
            'number_value': 'NumberValue',
            'boolean_value': 'BooleanValue',
            'string_value': 'StringValue'
        }

        self._number_value = number_value
        self._boolean_value = boolean_value
        self._string_value = string_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ValueWithServiceIdsAnnotationValue':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ValueWithServiceIds_AnnotationValue of this ValueWithServiceIdsAnnotationValue.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def number_value(self):
        """Gets the number_value of this ValueWithServiceIdsAnnotationValue.


        :return: The number_value of this ValueWithServiceIdsAnnotationValue.
        :rtype: float
        """
        return self._number_value

    @number_value.setter
    def number_value(self, number_value):
        """Sets the number_value of this ValueWithServiceIdsAnnotationValue.


        :param number_value: The number_value of this ValueWithServiceIdsAnnotationValue.
        :type number_value: float
        """

        self._number_value = number_value

    @property
    def boolean_value(self):
        """Gets the boolean_value of this ValueWithServiceIdsAnnotationValue.


        :return: The boolean_value of this ValueWithServiceIdsAnnotationValue.
        :rtype: bool
        """
        return self._boolean_value

    @boolean_value.setter
    def boolean_value(self, boolean_value):
        """Sets the boolean_value of this ValueWithServiceIdsAnnotationValue.


        :param boolean_value: The boolean_value of this ValueWithServiceIdsAnnotationValue.
        :type boolean_value: bool
        """

        self._boolean_value = boolean_value

    @property
    def string_value(self):
        """Gets the string_value of this ValueWithServiceIdsAnnotationValue.


        :return: The string_value of this ValueWithServiceIdsAnnotationValue.
        :rtype: str
        """
        return self._string_value

    @string_value.setter
    def string_value(self, string_value):
        """Sets the string_value of this ValueWithServiceIdsAnnotationValue.


        :param string_value: The string_value of this ValueWithServiceIdsAnnotationValue.
        :type string_value: str
        """

        self._string_value = string_value
