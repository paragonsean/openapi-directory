# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceId(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, names: List=None, account_id: str=None, type: str=None):
        """ServiceId - a model defined in OpenAPI

        :param name: The name of this ServiceId.
        :param names: The names of this ServiceId.
        :param account_id: The account_id of this ServiceId.
        :param type: The type of this ServiceId.
        """
        self.openapi_types = {
            'name': str,
            'names': List,
            'account_id': str,
            'type': str
        }

        self.attribute_map = {
            'name': 'Name',
            'names': 'Names',
            'account_id': 'AccountId',
            'type': 'Type'
        }

        self._name = name
        self._names = names
        self._account_id = account_id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceId':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceId of this ServiceId.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this ServiceId.


        :return: The name of this ServiceId.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ServiceId.


        :param name: The name of this ServiceId.
        :type name: str
        """

        self._name = name

    @property
    def names(self):
        """Gets the names of this ServiceId.


        :return: The names of this ServiceId.
        :rtype: List
        """
        return self._names

    @names.setter
    def names(self, names):
        """Sets the names of this ServiceId.


        :param names: The names of this ServiceId.
        :type names: List
        """

        self._names = names

    @property
    def account_id(self):
        """Gets the account_id of this ServiceId.


        :return: The account_id of this ServiceId.
        :rtype: str
        """
        return self._account_id

    @account_id.setter
    def account_id(self, account_id):
        """Sets the account_id of this ServiceId.


        :param account_id: The account_id of this ServiceId.
        :type account_id: str
        """

        self._account_id = account_id

    @property
    def type(self):
        """Gets the type of this ServiceId.


        :return: The type of this ServiceId.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ServiceId.


        :param type: The type of this ServiceId.
        :type type: str
        """

        self._type = type
