# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PutTraceSegmentsResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, unprocessed_trace_segments: List=None):
        """PutTraceSegmentsResult - a model defined in OpenAPI

        :param unprocessed_trace_segments: The unprocessed_trace_segments of this PutTraceSegmentsResult.
        """
        self.openapi_types = {
            'unprocessed_trace_segments': List
        }

        self.attribute_map = {
            'unprocessed_trace_segments': 'UnprocessedTraceSegments'
        }

        self._unprocessed_trace_segments = unprocessed_trace_segments

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PutTraceSegmentsResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PutTraceSegmentsResult of this PutTraceSegmentsResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def unprocessed_trace_segments(self):
        """Gets the unprocessed_trace_segments of this PutTraceSegmentsResult.


        :return: The unprocessed_trace_segments of this PutTraceSegmentsResult.
        :rtype: List
        """
        return self._unprocessed_trace_segments

    @unprocessed_trace_segments.setter
    def unprocessed_trace_segments(self, unprocessed_trace_segments):
        """Sets the unprocessed_trace_segments of this PutTraceSegmentsResult.


        :param unprocessed_trace_segments: The unprocessed_trace_segments of this PutTraceSegmentsResult.
        :type unprocessed_trace_segments: List
        """

        self._unprocessed_trace_segments = unprocessed_trace_segments
