# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.sampling_statistics_document import SamplingStatisticsDocument
from openapi_server import util


class GetSamplingTargetsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, sampling_statistics_documents: List[SamplingStatisticsDocument]=None):
        """GetSamplingTargetsRequest - a model defined in OpenAPI

        :param sampling_statistics_documents: The sampling_statistics_documents of this GetSamplingTargetsRequest.
        """
        self.openapi_types = {
            'sampling_statistics_documents': List[SamplingStatisticsDocument]
        }

        self.attribute_map = {
            'sampling_statistics_documents': 'SamplingStatisticsDocuments'
        }

        self._sampling_statistics_documents = sampling_statistics_documents

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSamplingTargetsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSamplingTargets_request of this GetSamplingTargetsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def sampling_statistics_documents(self):
        """Gets the sampling_statistics_documents of this GetSamplingTargetsRequest.

        Information about rules that the service is using to sample requests.

        :return: The sampling_statistics_documents of this GetSamplingTargetsRequest.
        :rtype: List[SamplingStatisticsDocument]
        """
        return self._sampling_statistics_documents

    @sampling_statistics_documents.setter
    def sampling_statistics_documents(self, sampling_statistics_documents):
        """Sets the sampling_statistics_documents of this GetSamplingTargetsRequest.

        Information about rules that the service is using to sample requests.

        :param sampling_statistics_documents: The sampling_statistics_documents of this GetSamplingTargetsRequest.
        :type sampling_statistics_documents: List[SamplingStatisticsDocument]
        """
        if sampling_statistics_documents is None:
            raise ValueError("Invalid value for `sampling_statistics_documents`, must not be `None`")
        if sampling_statistics_documents is not None and len(sampling_statistics_documents) > 25:
            raise ValueError("Invalid value for `sampling_statistics_documents`, number of items must be less than or equal to `25`")

        self._sampling_statistics_documents = sampling_statistics_documents
