openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: Amazon Web Services X-Ray provides APIs for managing debug traces and
    retrieving service maps and other data created by processing those traces.
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: AWS X-Ray
  version: 2016-04-12
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: xray
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/xray-2016-04-12.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/xray/
servers:
- description: The AWS X-Ray multi-region endpoint
  url: "http://xray.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS X-Ray multi-region endpoint
  url: "https://xray.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The AWS X-Ray endpoint for China (Beijing) and China (Ningxia)
  url: "http://xray.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The AWS X-Ray endpoint for China (Beijing) and China (Ningxia)
  url: "https://xray.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /CreateGroup:
    post:
      description: 'Creates a group resource with a name and a filter expression. '
      operationId: create_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateGroup_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateGroupResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /CreateSamplingRule:
    post:
      description: "Creates a rule to control sampling behavior for instrumented applications.\
        \ Services retrieve rules with <a href=\"https://docs.aws.amazon.com/xray/latest/api/API_GetSamplingRules.html\"\
        >GetSamplingRules</a>, and evaluate each rule in ascending order of <i>priority</i>\
        \ for each request. If a rule matches, the service records a trace, borrowing\
        \ it from the reservoir size. After 10 seconds, the service reports back to\
        \ X-Ray with <a href=\"https://docs.aws.amazon.com/xray/latest/api/API_GetSamplingTargets.html\"\
        >GetSamplingTargets</a> to get updated versions of each in-use rule. The updated\
        \ rule contains a trace quota that the service can use instead of borrowing\
        \ from the reservoir."
      operationId: create_sampling_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSamplingRule_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateSamplingRuleResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RuleLimitExceededException'
          description: RuleLimitExceededException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /DeleteGroup:
    post:
      description: Deletes a group resource.
      operationId: delete_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteGroup_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteGroupResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /DeleteResourcePolicy:
    post:
      description: Deletes a resource policy from the target Amazon Web Services account.
      operationId: delete_resource_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteResourcePolicy_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteResourcePolicyResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPolicyRevisionIdException'
          description: InvalidPolicyRevisionIdException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /DeleteSamplingRule:
    post:
      description: Deletes a sampling rule.
      operationId: delete_sampling_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteSamplingRule_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeleteSamplingRuleResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /EncryptionConfig:
    post:
      description: Retrieves the current encryption configuration for X-Ray data.
      operationId: get_encryption_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetEncryptionConfigResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /GetGroup:
    post:
      description: Retrieves group resource details.
      operationId: get_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteGroup_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /GetSamplingRules:
    post:
      description: Retrieves all sampling rules.
      operationId: get_sampling_rules
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSamplingRules_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSamplingRulesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /Groups:
    post:
      description: Retrieves all active group details.
      operationId: get_groups
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetGroups_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetGroupsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /Insight:
    post:
      description: "Retrieves the summary information of an insight. This includes\
        \ impact to clients and root cause services, the top anomalous services, the\
        \ category, the state of the insight, and the start and end time of the insight."
      operationId: get_insight
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInsight_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInsightResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /InsightEvents:
    post:
      description: "X-Ray reevaluates insights periodically until they're resolved,\
        \ and records each intermediate state as an event. You can review an insight's\
        \ events in the Impact Timeline on the Inspect page in the X-Ray console."
      operationId: get_insight_events
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInsightEvents_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInsightEventsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /InsightImpactGraph:
    post:
      description: "Retrieves a service graph structure filtered by the specified\
        \ insight. The service graph is limited to only structural information. For\
        \ a complete service graph, use this API with the GetServiceGraph API."
      operationId: get_insight_impact_graph
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInsightImpactGraph_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInsightImpactGraphResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /InsightSummaries:
    post:
      description: Retrieves the summaries of all insights in the specified group
        matching the provided filter values.
      operationId: get_insight_summaries
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetInsightSummaries_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetInsightSummariesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /ListResourcePolicies:
    post:
      description: Returns the list of resource policies in the target Amazon Web
        Services account.
      operationId: list_resource_policies
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListResourcePolicies_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListResourcePoliciesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /ListTagsForResource:
    post:
      description: Returns a list of tags that are applied to the specified Amazon
        Web Services X-Ray group or sampling rule.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListTagsForResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /PutEncryptionConfig:
    post:
      description: Updates the encryption configuration for X-Ray data.
      operationId: put_encryption_config
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutEncryptionConfig_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutEncryptionConfigResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /PutResourcePolicy:
    post:
      description: " Sets the resource policy to grant one or more Amazon Web Services\
        \ services and accounts permissions to access X-Ray. Each resource policy\
        \ will be associated with a specific Amazon Web Services account. Each Amazon\
        \ Web Services account can have a maximum of 5 resource policies, and each\
        \ policy name must be unique within that account. The maximum size of each\
        \ resource policy is 5KB. "
      operationId: put_resource_policy
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutResourcePolicy_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutResourcePolicyResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MalformedPolicyDocumentException'
          description: MalformedPolicyDocumentException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LockoutPreventionException'
          description: LockoutPreventionException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidPolicyRevisionIdException'
          description: InvalidPolicyRevisionIdException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicySizeLimitExceededException'
          description: PolicySizeLimitExceededException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyCountLimitExceededException'
          description: PolicyCountLimitExceededException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /SamplingStatisticSummaries:
    post:
      description: Retrieves information about recent sampling results for all sampling
        rules.
      operationId: get_sampling_statistic_summaries
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSamplingRules_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSamplingStatisticSummariesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /SamplingTargets:
    post:
      description: 'Requests a sampling quota for rules that the service is using
        to sample requests. '
      operationId: get_sampling_targets
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetSamplingTargets_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetSamplingTargetsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /ServiceGraph:
    post:
      description: "Retrieves a document that describes services that process incoming\
        \ requests, and downstream services that they call as a result. Root services\
        \ process incoming requests and make calls to downstream services. Root services\
        \ are applications that use the <a href=\"https://docs.aws.amazon.com/xray/index.html\"\
        >Amazon Web Services X-Ray SDK</a>. Downstream services can be other applications,\
        \ Amazon Web Services resources, HTTP web APIs, or SQL databases."
      operationId: get_service_graph
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetServiceGraph_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetServiceGraphResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /TagResource:
    post:
      description: Applies tags to an existing Amazon Web Services X-Ray group or
        sampling rule.
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TooManyTagsException'
          description: TooManyTagsException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /TelemetryRecords:
    post:
      description: Used by the Amazon Web Services X-Ray daemon to upload telemetry.
      operationId: put_telemetry_records
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTelemetryRecords_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTelemetryRecordsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /TimeSeriesServiceStatistics:
    post:
      description: Get an aggregation of service statistics defined by a specific
        time range.
      operationId: get_time_series_service_statistics
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTimeSeriesServiceStatistics_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTimeSeriesServiceStatisticsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /TraceGraph:
    post:
      description: Retrieves a service graph for one or more specific trace IDs.
      operationId: get_trace_graph
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTraceGraph_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTraceGraphResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /TraceSegments:
    post:
      description: "<p>Uploads segment documents to Amazon Web Services X-Ray. The\
        \ <a href=\"https://docs.aws.amazon.com/xray/index.html\">X-Ray SDK</a> generates\
        \ segment documents and sends them to the X-Ray daemon, which uploads them\
        \ in batches. A segment document can be a completed segment, an in-progress\
        \ segment, or an array of subsegments.</p> <p>Segments must include the following\
        \ fields. For the full segment document schema, see <a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html\"\
        >Amazon Web Services X-Ray Segment Documents</a> in the <i>Amazon Web Services\
        \ X-Ray Developer Guide</i>.</p> <p class=\"title\"> <b>Required segment document\
        \ fields</b> </p> <ul> <li> <p> <code>name</code> - The name of the service\
        \ that handled the request.</p> </li> <li> <p> <code>id</code> - A 64-bit\
        \ identifier for the segment, unique among segments in the same trace, in\
        \ 16 hexadecimal digits.</p> </li> <li> <p> <code>trace_id</code> - A unique\
        \ identifier that connects all segments and subsegments originating from a\
        \ single client request.</p> </li> <li> <p> <code>start_time</code> - Time\
        \ the segment or subsegment was created, in floating point seconds in epoch\
        \ time, accurate to milliseconds. For example, <code>1480615200.010</code>\
        \ or <code>1.480615200010E9</code>.</p> </li> <li> <p> <code>end_time</code>\
        \ - Time the segment or subsegment was closed. For example, <code>1480615200.090</code>\
        \ or <code>1.480615200090E9</code>. Specify either an <code>end_time</code>\
        \ or <code>in_progress</code>.</p> </li> <li> <p> <code>in_progress</code>\
        \ - Set to <code>true</code> instead of specifying an <code>end_time</code>\
        \ to record that a segment has been started, but is not complete. Send an\
        \ in-progress segment when your application receives a request that will take\
        \ a long time to serve, to trace that the request was received. When the response\
        \ is sent, send the complete segment to overwrite the in-progress segment.</p>\
        \ </li> </ul> <p>A <code>trace_id</code> consists of three numbers separated\
        \ by hyphens. For example, 1-58406520-a006649127e371903a2de979. This includes:</p>\
        \ <p class=\"title\"> <b>Trace ID Format</b> </p> <ul> <li> <p>The version\
        \ number, for instance, <code>1</code>.</p> </li> <li> <p>The time of the\
        \ original request, in Unix epoch time, in 8 hexadecimal digits. For example,\
        \ 10:00AM December 2nd, 2016 PST in epoch time is <code>1480615200</code>\
        \ seconds, or <code>58406520</code> in hexadecimal.</p> </li> <li> <p>A 96-bit\
        \ identifier for the trace, globally unique, in 24 hexadecimal digits.</p>\
        \ </li> </ul>"
      operationId: put_trace_segments
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PutTraceSegments_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PutTraceSegmentsResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /TraceSummaries:
    post:
      description: "<p>Retrieves IDs and annotations for traces available for a specified\
        \ time frame using an optional filter. To get the full traces, pass the trace\
        \ IDs to <code>BatchGetTraces</code>.</p> <p>A filter expression can target\
        \ traced requests that hit specific service nodes or edges, have errors, or\
        \ come from a known user. For example, the following filter expression targets\
        \ traces that pass through <code>api.example.com</code>:</p> <p> <code>service(\"\
        api.example.com\")</code> </p> <p>This filter expression finds traces that\
        \ have an annotation named <code>account</code> with the value <code>12345</code>:</p>\
        \ <p> <code>annotation.account = \"12345\"</code> </p> <p>For a full list\
        \ of indexed fields and keywords that you can use in filter expressions, see\
        \ <a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-console-filters.html\"\
        >Using Filter Expressions</a> in the <i>Amazon Web Services X-Ray Developer\
        \ Guide</i>.</p>"
      operationId: get_trace_summaries
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetTraceSummaries_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetTraceSummariesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /Traces:
    post:
      description: Retrieves a list of traces specified by ID. Each trace is a collection
        of segment documents that originates from a single request. Use <code>GetTraceSummaries</code>
        to get a list of trace IDs.
      operationId: batch_get_traces
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination token
        explode: true
        in: query
        name: NextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchGetTraces_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BatchGetTracesResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /UntagResource:
    post:
      description: Removes tags from an Amazon Web Services X-Ray group or sampling
        rule. You cannot edit or delete system tags (those with an <code>aws:</code>
        prefix).
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UntagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /UpdateGroup:
    post:
      description: Updates a group resource.
      operationId: update_group
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateGroup_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateGroupResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /UpdateSamplingRule:
    post:
      description: Modifies a sampling rule's configuration.
      operationId: update_sampling_rule
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSamplingRule_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateSamplingRuleResult'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvalidRequestException'
          description: InvalidRequestException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottledException'
          description: ThrottledException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    BatchGetTracesResult:
      example:
        NextToken: ""
        Traces: ""
        UnprocessedTraceIds: ""
      properties:
        Traces:
          allOf:
          - $ref: '#/components/schemas/TraceList'
          - description: Full traces for the specified requests.
          title: Traces
        UnprocessedTraceIds:
          allOf:
          - $ref: '#/components/schemas/UnprocessedTraceIdList'
          - description: Trace IDs of requests that haven't been processed.
          title: UnprocessedTraceIds
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Pagination token.
          title: NextToken
      title: BatchGetTracesResult
      type: object
    TraceId:
      maxLength: 35
      minLength: 1
      title: TraceId
      type: string
    InvalidRequestException: {}
    ThrottledException: {}
    CreateGroupResult:
      example:
        Group:
          GroupName: ""
          GroupARN: ""
          InsightsConfiguration:
            NotificationsEnabled: ""
            InsightsEnabled: ""
          FilterExpression: ""
      properties:
        Group:
          $ref: '#/components/schemas/CreateGroupResult_Group'
      title: CreateGroupResult
      type: object
    NullableBoolean:
      type: boolean
    Tag:
      description: "<p>A map that contains tag keys and tag values to attach to an\
        \ Amazon Web Services X-Ray group or sampling rule. For more information about\
        \ ways to use tags, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
        >Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services General\
        \ Reference</i>.</p> <p>The following restrictions apply to tags:</p> <ul>\
        \ <li> <p>Maximum number of user-applied tags per resource: 50</p> </li> <li>\
        \ <p>Tag keys and values are case sensitive.</p> </li> <li> <p>Don't use <code>aws:</code>\
        \ as a prefix for keys; it's reserved for Amazon Web Services use. You cannot\
        \ edit or delete system tags.</p> </li> </ul>"
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/TagKey'
          - description: "A tag key, such as <code>Stage</code> or <code>Name</code>.\
              \ A tag key cannot be empty. The key can be a maximum of 128 characters,\
              \ and can contain only Unicode letters, numbers, or separators, or the\
              \ following special characters: <code>+ - = . _ : /</code> "
          title: Key
        Value:
          allOf:
          - $ref: '#/components/schemas/TagValue'
          - description: "An optional tag value, such as <code>Production</code> or\
              \ <code>test-only</code>. The value can be a maximum of 255 characters,\
              \ and contain only Unicode letters, numbers, or separators, or the following\
              \ special characters: <code>+ - = . _ : /</code> "
          title: Value
      required:
      - Key
      - Value
      title: Tag
      type: object
    CreateSamplingRuleResult:
      example:
        SamplingRuleRecord:
          ModifiedAt: ""
          CreatedAt: ""
          SamplingRule:
            Priority: ""
            ReservoirSize: ""
            RuleARN: ""
            URLPath: ""
            Attributes: ""
            FixedRate: ""
            Host: ""
            ResourceARN: ""
            ServiceName: ""
            HTTPMethod: ""
            Version: ""
            ServiceType: ""
            RuleName: ""
      properties:
        SamplingRuleRecord:
          $ref: '#/components/schemas/CreateSamplingRuleResult_SamplingRuleRecord'
      title: CreateSamplingRuleResult
      type: object
    RuleName:
      maxLength: 32
      minLength: 1
      type: string
    String:
      title: String
      type: string
    ResourceARN:
      maxLength: 500
      type: string
    Priority:
      maximum: 9999
      minimum: 1
      type: integer
    FixedRate:
      format: double
      maximum: 1
      minimum: 0
      type: number
    ReservoirSize:
      minimum: 0
      type: integer
    ServiceName:
      maxLength: 64
      type: string
    ServiceType:
      maxLength: 64
      type: string
    Host:
      maxLength: 64
      type: string
    HTTPMethod:
      maxLength: 10
      type: string
    URLPath:
      maxLength: 128
      type: string
    Version:
      minimum: 1
      type: integer
    AttributeMap:
      additionalProperties:
        $ref: '#/components/schemas/AttributeValue'
      maxProperties: 5
      type: object
    RuleLimitExceededException: {}
    DeleteGroupResult:
      properties: {}
      type: object
    DeleteResourcePolicyResult:
      properties: {}
      type: object
    InvalidPolicyRevisionIdException: {}
    DeleteSamplingRuleResult:
      example:
        SamplingRuleRecord:
          ModifiedAt: ""
          CreatedAt: ""
          SamplingRule:
            Priority: ""
            ReservoirSize: ""
            RuleARN: ""
            URLPath: ""
            Attributes: ""
            FixedRate: ""
            Host: ""
            ResourceARN: ""
            ServiceName: ""
            HTTPMethod: ""
            Version: ""
            ServiceType: ""
            RuleName: ""
      properties:
        SamplingRuleRecord:
          $ref: '#/components/schemas/DeleteSamplingRuleResult_SamplingRuleRecord'
      title: DeleteSamplingRuleResult
      type: object
    GetEncryptionConfigResult:
      example:
        EncryptionConfig:
          Status: ""
          Type: ""
          KeyId: ""
      properties:
        EncryptionConfig:
          $ref: '#/components/schemas/GetEncryptionConfigResult_EncryptionConfig'
      title: GetEncryptionConfigResult
      type: object
    GetGroupResult:
      example:
        Group:
          GroupName: ""
          GroupARN: ""
          InsightsConfiguration:
            NotificationsEnabled: ""
            InsightsEnabled: ""
          FilterExpression: ""
      properties:
        Group:
          $ref: '#/components/schemas/GetGroupResult_Group'
      title: GetGroupResult
      type: object
    GetGroupsResult:
      example:
        NextToken: ""
        Groups: ""
      properties:
        Groups:
          allOf:
          - $ref: '#/components/schemas/GroupSummaryList'
          - description: The collection of all active groups.
          title: Groups
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Pagination token.
          title: NextToken
      title: GetGroupsResult
      type: object
    GetInsightResult:
      example:
        Insight:
          GroupName: ""
          EndTime: ""
          Categories: ""
          GroupARN: ""
          State: ""
          RootCauseServiceRequestImpactStatistics:
            TotalCount: ""
            OkCount: ""
            FaultCount: ""
          ClientRequestImpactStatistics:
            TotalCount: ""
            OkCount: ""
            FaultCount: ""
          StartTime: ""
          InsightId: ""
          Summary: ""
          RootCauseServiceId:
            Names: ""
            Type: ""
            AccountId: ""
            Name: ""
          TopAnomalousServices: ""
      properties:
        Insight:
          $ref: '#/components/schemas/GetInsightResult_Insight'
      title: GetInsightResult
      type: object
    GetInsightEventsResult:
      example:
        InsightEvents: ""
        NextToken: ""
      properties:
        InsightEvents:
          allOf:
          - $ref: '#/components/schemas/InsightEventList'
          - description: "A detailed description of the event. This includes the time\
              \ of the event, client and root cause impact statistics, and the top\
              \ anomalous service at the time of the event."
          title: InsightEvents
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: Use this token to retrieve the next page of insight events.
          title: NextToken
      title: GetInsightEventsResult
      type: object
    GetInsightImpactGraphResult:
      example:
        Services: ""
        EndTime: ""
        NextToken: ""
        ServiceGraphEndTime: ""
        StartTime: ""
        InsightId: ""
        ServiceGraphStartTime: ""
      properties:
        InsightId:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          - description: The insight's unique identifier.
          title: InsightId
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The provided start time.
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: 'The provided end time. '
          title: EndTime
        ServiceGraphStartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time, in Unix seconds, at which the service graph started."
          title: ServiceGraphStartTime
        ServiceGraphEndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time, in Unix seconds, at which the service graph ended."
          title: ServiceGraphEndTime
        Services:
          allOf:
          - $ref: '#/components/schemas/InsightImpactGraphServiceList'
          - description: The Amazon Web Services instrumented services related to
              the insight.
          title: Services
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: Pagination token.
          title: NextToken
      title: GetInsightImpactGraphResult
      type: object
    GetInsightSummariesResult:
      example:
        NextToken: ""
        InsightSummaries: ""
      properties:
        InsightSummaries:
          allOf:
          - $ref: '#/components/schemas/InsightSummaryList'
          - description: "The summary of each insight within the group matching the\
              \ provided filters. The summary contains the InsightID, start and end\
              \ time, the root cause service, the root cause and client impact statistics,\
              \ the top anomalous services, and the status of the insight."
          title: InsightSummaries
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: Pagination token.
          title: NextToken
      title: GetInsightSummariesResult
      type: object
    InsightState:
      enum:
      - ACTIVE
      - CLOSED
      title: InsightState
      type: string
    GetSamplingRulesResult:
      example:
        SamplingRuleRecords: ""
        NextToken: ""
      properties:
        SamplingRuleRecords:
          allOf:
          - $ref: '#/components/schemas/SamplingRuleRecordList'
          - description: Rule definitions and metadata.
          title: SamplingRuleRecords
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Pagination token.
          title: NextToken
      title: GetSamplingRulesResult
      type: object
    GetSamplingStatisticSummariesResult:
      example:
        SamplingStatisticSummaries: ""
        NextToken: ""
      properties:
        SamplingStatisticSummaries:
          allOf:
          - $ref: '#/components/schemas/SamplingStatisticSummaryList'
          - description: Information about the number of requests instrumented for
              each sampling rule.
          title: SamplingStatisticSummaries
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Pagination token.
          title: NextToken
      title: GetSamplingStatisticSummariesResult
      type: object
    GetSamplingTargetsResult:
      example:
        LastRuleModification: ""
        UnprocessedStatistics: ""
        SamplingTargetDocuments: ""
      properties:
        SamplingTargetDocuments:
          allOf:
          - $ref: '#/components/schemas/SamplingTargetDocumentList'
          - description: Updated rules that the service should use to sample requests.
          title: SamplingTargetDocuments
        LastRuleModification:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The last time a user changed the sampling rule configuration.\
              \ If the sampling rule configuration changed since the service last\
              \ retrieved it, the service should call <a href=\"https://docs.aws.amazon.com/xray/latest/api/API_GetSamplingRules.html\"\
              >GetSamplingRules</a> to get the latest version."
          title: LastRuleModification
        UnprocessedStatistics:
          allOf:
          - $ref: '#/components/schemas/UnprocessedStatisticsList'
          - description: Information about <a href="https://docs.aws.amazon.com/xray/latest/api/API_SamplingStatisticsDocument.html">SamplingStatisticsDocument</a>
              that X-Ray could not process.
          title: UnprocessedStatistics
      title: GetSamplingTargetsResult
      type: object
    SamplingStatisticsDocument:
      description: Request sampling results for a single rule from a service. Results
        are for the last 10 seconds unless the service has been assigned a longer
        reporting interval after a previous call to <a href="https://docs.aws.amazon.com/xray/latest/api/API_GetSamplingTargets.html">GetSamplingTargets</a>.
      properties:
        RuleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: The name of the sampling rule.
          title: RuleName
        ClientID:
          allOf:
          - $ref: '#/components/schemas/ClientID'
          - description: A unique identifier for the service in hexadecimal.
          title: ClientID
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The current time.
          title: Timestamp
        RequestCount:
          allOf:
          - $ref: '#/components/schemas/RequestCount'
          - description: The number of requests that matched the rule.
          title: RequestCount
        SampledCount:
          allOf:
          - $ref: '#/components/schemas/SampledCount'
          - description: The number of requests recorded.
          title: SampledCount
        BorrowCount:
          allOf:
          - $ref: '#/components/schemas/BorrowCount'
          - description: The number of requests recorded with borrowed reservoir quota.
          title: BorrowCount
      required:
      - ClientID
      - RequestCount
      - RuleName
      - SampledCount
      - Timestamp
      title: SamplingStatisticsDocument
      type: object
    GetServiceGraphResult:
      example:
        Services: ""
        EndTime: ""
        NextToken: ""
        StartTime: ""
        ContainsOldGroupVersions: ""
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The start of the time frame for which the graph was generated.
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The end of the time frame for which the graph was generated.
          title: EndTime
        Services:
          allOf:
          - $ref: '#/components/schemas/ServiceList'
          - description: The services that have processed a traced request during
              the specified time frame.
          title: Services
        ContainsOldGroupVersions:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "A flag indicating whether the group's filter expression\
              \ has been consistent, or if the returned service graph may show traces\
              \ from an older version of the group's filter expression."
          title: ContainsOldGroupVersions
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Pagination token.
          title: NextToken
      title: GetServiceGraphResult
      type: object
    GetTimeSeriesServiceStatisticsResult:
      example:
        NextToken: ""
        ContainsOldGroupVersions: ""
        TimeSeriesServiceStatistics: ""
      properties:
        TimeSeriesServiceStatistics:
          allOf:
          - $ref: '#/components/schemas/TimeSeriesServiceStatisticsList'
          - description: The collection of statistics.
          title: TimeSeriesServiceStatistics
        ContainsOldGroupVersions:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: "A flag indicating whether or not a group's filter expression\
              \ has been consistent, or if a returned aggregation might show statistics\
              \ from an older version of the group's filter expression."
          title: ContainsOldGroupVersions
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Pagination token.
          title: NextToken
      title: GetTimeSeriesServiceStatisticsResult
      type: object
    GetTraceGraphResult:
      example:
        Services: ""
        NextToken: ""
      properties:
        Services:
          allOf:
          - $ref: '#/components/schemas/ServiceList'
          - description: The services that have processed one of the specified requests.
          title: Services
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Pagination token.
          title: NextToken
      title: GetTraceGraphResult
      type: object
    GetTraceSummariesResult:
      example:
        TracesProcessedCount: ""
        NextToken: ""
        TraceSummaries: ""
        ApproximateTime: ""
      properties:
        TraceSummaries:
          allOf:
          - $ref: '#/components/schemas/TraceSummaryList'
          - description: Trace IDs and annotations for traces that were found in the
              specified time frame.
          title: TraceSummaries
        ApproximateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The start time of this page of results.
          title: ApproximateTime
        TracesProcessedCount:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          - description: "The total number of traces processed, including traces that\
              \ did not match the specified filter expression."
          title: TracesProcessedCount
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "If the requested time frame contained more than one page\
              \ of results, you can use this token to retrieve the next page. The\
              \ first page contains the most recent results, closest to the end of\
              \ the time frame."
          title: NextToken
      title: GetTraceSummariesResult
      type: object
    SamplingStrategyName:
      enum:
      - PartialScan
      - FixedRate
      title: SamplingStrategyName
      type: string
    NullableDouble:
      format: double
      type: number
    ListResourcePoliciesResult:
      example:
        ResourcePolicies: ""
        NextToken: ""
      properties:
        ResourcePolicies:
          allOf:
          - $ref: '#/components/schemas/ResourcePolicyList'
          - description: The list of resource policies in the target Amazon Web Services
              account.
          title: ResourcePolicies
        NextToken:
          allOf:
          - $ref: '#/components/schemas/ResourcePolicyNextToken'
          - description: Pagination token. Not currently supported.
          title: NextToken
      title: ListResourcePoliciesResult
      type: object
    ListTagsForResourceResponse:
      example:
        NextToken: ""
        Tags: ""
      properties:
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "A list of tags, as key and value pairs, that is associated\
              \ with the specified X-Ray group or sampling rule."
          title: Tags
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A pagination token. If multiple pages of results are returned,\
              \ use the <code>NextToken</code> value returned with the current page\
              \ of results to get the next page of results."
          title: NextToken
      title: ListTagsForResourceResponse
      type: object
    ResourceNotFoundException: {}
    PutEncryptionConfigResult:
      example:
        EncryptionConfig:
          Status: ""
          Type: ""
          KeyId: ""
      properties:
        EncryptionConfig:
          $ref: '#/components/schemas/PutEncryptionConfigResult_EncryptionConfig'
      title: PutEncryptionConfigResult
      type: object
    PutResourcePolicyResult:
      example:
        ResourcePolicy:
          PolicyRevisionId: ""
          PolicyName: ""
          PolicyDocument: ""
          LastUpdatedTime: ""
      properties:
        ResourcePolicy:
          $ref: '#/components/schemas/PutResourcePolicyResult_ResourcePolicy'
      title: PutResourcePolicyResult
      type: object
    MalformedPolicyDocumentException: {}
    LockoutPreventionException: {}
    PolicySizeLimitExceededException: {}
    PolicyCountLimitExceededException: {}
    PutTelemetryRecordsResult:
      properties: {}
      type: object
    TelemetryRecord:
      description: <p/>
      properties:
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: <p/>
          title: Timestamp
        SegmentsReceivedCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: <p/>
          title: SegmentsReceivedCount
        SegmentsSentCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: <p/>
          title: SegmentsSentCount
        SegmentsSpilloverCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: <p/>
          title: SegmentsSpilloverCount
        SegmentsRejectedCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: <p/>
          title: SegmentsRejectedCount
        BackendConnectionErrors:
          $ref: '#/components/schemas/TelemetryRecord_BackendConnectionErrors'
      required:
      - Timestamp
      title: TelemetryRecord
      type: object
    PutTraceSegmentsResult:
      example:
        UnprocessedTraceSegments: ""
      properties:
        UnprocessedTraceSegments:
          allOf:
          - $ref: '#/components/schemas/UnprocessedTraceSegmentList'
          - description: Segments that failed processing.
          title: UnprocessedTraceSegments
      title: PutTraceSegmentsResult
      type: object
    TraceSegmentDocument:
      title: TraceSegmentDocument
      type: string
    TagResourceResponse:
      properties: {}
      type: object
    TooManyTagsException: {}
    UntagResourceResponse:
      properties: {}
      type: object
    TagKey:
      maxLength: 128
      minLength: 1
      title: TagKey
      type: string
    UpdateGroupResult:
      example:
        Group:
          GroupName: ""
          GroupARN: ""
          InsightsConfiguration:
            NotificationsEnabled: ""
            InsightsEnabled: ""
          FilterExpression: ""
      properties:
        Group:
          $ref: '#/components/schemas/UpdateGroupResult_Group'
      title: UpdateGroupResult
      type: object
    UpdateSamplingRuleResult:
      example:
        SamplingRuleRecord:
          ModifiedAt: ""
          CreatedAt: ""
          SamplingRule:
            Priority: ""
            ReservoirSize: ""
            RuleARN: ""
            URLPath: ""
            Attributes: ""
            FixedRate: ""
            Host: ""
            ResourceARN: ""
            ServiceName: ""
            HTTPMethod: ""
            Version: ""
            ServiceType: ""
            RuleName: ""
      properties:
        SamplingRuleRecord:
          $ref: '#/components/schemas/UpdateSamplingRuleResult_SamplingRuleRecord'
      title: UpdateSamplingRuleResult
      type: object
    NullableInteger:
      type: integer
    AliasNames:
      items:
        $ref: '#/components/schemas/String'
      type: array
    Alias:
      description: An alias for an edge.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The canonical name of the alias.
          title: Name
        Names:
          allOf:
          - $ref: '#/components/schemas/AliasNames'
          - description: "A list of names for the alias, including the canonical name."
          title: Names
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The type of the alias.
          title: Type
      title: Alias
      type: object
    AliasList:
      items:
        $ref: '#/components/schemas/Alias'
      type: array
    AmazonResourceName:
      maxLength: 1011
      minLength: 1
      type: string
    AnnotationKey:
      type: string
    AnnotationValue:
      description: "Value of a segment annotation. Has one of three value types: Number,\
        \ Boolean, or String."
      properties:
        NumberValue:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: Value for a Number annotation.
          title: NumberValue
        BooleanValue:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Value for a Boolean annotation.
          title: BooleanValue
        StringValue:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Value for a String annotation.
          title: StringValue
      title: AnnotationValue
      type: object
    ValuesWithServiceIds:
      items:
        $ref: '#/components/schemas/ValueWithServiceIds'
      title: ValuesWithServiceIds
      type: array
    Annotations:
      additionalProperties:
        $ref: '#/components/schemas/ValuesWithServiceIds'
      type: object
    ServiceId:
      description: <p/>
      example:
        Names: ""
        Type: ""
        AccountId: ""
        Name: ""
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p/>
          title: Name
        Names:
          allOf:
          - $ref: '#/components/schemas/ServiceNames'
          - description: <p/>
          title: Names
        AccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p/>
          title: AccountId
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: <p/>
          title: Type
      title: ServiceId
      type: object
    AnomalousService:
      description: 'The service within the service graph that has anomalously high
        fault rates. '
      properties:
        ServiceId:
          $ref: '#/components/schemas/ServiceId'
      title: AnomalousService
      type: object
    AnomalousServiceList:
      items:
        $ref: '#/components/schemas/AnomalousService'
      type: array
    AttributeKey:
      maxLength: 32
      minLength: 1
      type: string
    AttributeValue:
      maxLength: 32
      minLength: 1
      title: AttributeValue
      type: string
    AvailabilityZoneDetail:
      description: A list of Availability Zones corresponding to the segments in a
        trace.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of a corresponding Availability Zone.
          title: Name
      title: AvailabilityZoneDetail
      type: object
    BackendConnectionErrors:
      description: <p/>
      properties:
        TimeoutCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: <p/>
          title: TimeoutCount
        ConnectionRefusedCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: <p/>
          title: ConnectionRefusedCount
        HTTPCode4XXCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: <p/>
          title: HTTPCode4XXCount
        HTTPCode5XXCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: <p/>
          title: HTTPCode5XXCount
        UnknownHostCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: <p/>
          title: UnknownHostCount
        OtherCount:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: <p/>
          title: OtherCount
      title: BackendConnectionErrors
      type: object
    TraceIdList:
      items:
        $ref: '#/components/schemas/TraceId'
      type: array
    BatchGetTracesRequest:
      example:
        TraceIds: ""
        NextToken: ""
      properties:
        TraceIds:
          allOf:
          - $ref: '#/components/schemas/TraceIdList'
          - description: Specify the trace IDs of requests for which to retrieve segments.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Pagination token.
      required:
      - TraceIds
      title: BatchGetTracesRequest
      type: object
    TraceList:
      items:
        $ref: '#/components/schemas/Trace'
      type: array
    UnprocessedTraceIdList:
      items:
        $ref: '#/components/schemas/TraceId'
      type: array
    Boolean:
      type: boolean
    BorrowCount:
      minimum: 0
      type: integer
    ClientID:
      maxLength: 24
      minLength: 24
      type: string
    GroupName:
      maxLength: 32
      minLength: 1
      type: string
    FilterExpression:
      type: string
    InsightsConfiguration:
      description: The structure containing configurations related to insights.
      properties:
        InsightsEnabled:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Set the InsightsEnabled value to true to enable insights
              or false to disable insights.
          title: InsightsEnabled
        NotificationsEnabled:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Set the NotificationsEnabled value to true to enable insights
              notifications. Notifications can only be enabled on a group with InsightsEnabled
              set to true.
          title: NotificationsEnabled
      title: InsightsConfiguration
      type: object
    TagList:
      items:
        $ref: '#/components/schemas/Tag'
      maxItems: 200
      minItems: 0
      type: array
    CreateGroupRequest:
      example:
        GroupName: ""
        InsightsConfiguration:
          NotificationsEnabled: ""
          InsightsEnabled: ""
        FilterExpression: ""
        Tags: ""
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: The case-sensitive name of the new group. Default is a reserved
              name and names must be unique.
        FilterExpression:
          allOf:
          - $ref: '#/components/schemas/FilterExpression'
          - description: The filter expression defining criteria by which to group
              traces.
        InsightsConfiguration:
          $ref: '#/components/schemas/CreateGroupRequest_InsightsConfiguration'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>A map that contains one or more tag keys and tag values\
              \ to attach to an X-Ray group. For more information about ways to use\
              \ tags, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
              >Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services\
              \ General Reference</i>.</p> <p>The following restrictions apply to\
              \ tags:</p> <ul> <li> <p>Maximum number of user-applied tags per resource:\
              \ 50</p> </li> <li> <p>Maximum tag key length: 128 Unicode characters</p>\
              \ </li> <li> <p>Maximum tag value length: 256 Unicode characters</p>\
              \ </li> <li> <p>Valid values for key and value: a-z, A-Z, 0-9, space,\
              \ and the following characters: _ . : / = + - and @</p> </li> <li> <p>Tag\
              \ keys and values are case sensitive.</p> </li> <li> <p>Don't use <code>aws:</code>\
              \ as a prefix for keys; it's reserved for Amazon Web Services use.</p>\
              \ </li> </ul>"
      required:
      - GroupName
      title: CreateGroupRequest
      type: object
    Group:
      description: Details and metadata for a group.
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique case-sensitive name of the group.
          title: GroupName
        GroupARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The Amazon Resource Name (ARN) of the group generated based
              on the GroupName.
          title: GroupARN
        FilterExpression:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The filter expression defining the parameters to include
              traces.
          title: FilterExpression
        InsightsConfiguration:
          $ref: '#/components/schemas/Group_InsightsConfiguration'
      title: Group
      type: object
    SamplingRule:
      description: "A sampling rule that services use to decide whether to instrument\
        \ a request. Rule fields can match properties of the service, or properties\
        \ of a request. The service can ignore rules that don't match its properties."
      properties:
        RuleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: "The name of the sampling rule. Specify a rule by either\
              \ name or ARN, but not both."
          title: RuleName
        RuleARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The ARN of the sampling rule. Specify a rule by either name\
              \ or ARN, but not both."
          title: RuleARN
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: Matches the ARN of the Amazon Web Services resource on which
              the service runs.
          title: ResourceARN
        Priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          - description: The priority of the sampling rule.
          title: Priority
        FixedRate:
          allOf:
          - $ref: '#/components/schemas/FixedRate'
          - description: "The percentage of matching requests to instrument, after\
              \ the reservoir is exhausted."
          title: FixedRate
        ReservoirSize:
          allOf:
          - $ref: '#/components/schemas/ReservoirSize'
          - description: "A fixed number of matching requests to instrument per second,\
              \ prior to applying the fixed rate. The reservoir is not used directly\
              \ by services, but applies to all services using the rule collectively."
          title: ReservoirSize
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: Matches the <code>name</code> that the service uses to identify
              itself in segments.
          title: ServiceName
        ServiceType:
          allOf:
          - $ref: '#/components/schemas/ServiceType'
          - description: Matches the <code>origin</code> that the service uses to
              identify its type in segments.
          title: ServiceType
        Host:
          allOf:
          - $ref: '#/components/schemas/Host'
          - description: Matches the hostname from a request URL.
          title: Host
        HTTPMethod:
          allOf:
          - $ref: '#/components/schemas/HTTPMethod'
          - description: Matches the HTTP method of a request.
          title: HTTPMethod
        URLPath:
          allOf:
          - $ref: '#/components/schemas/URLPath'
          - description: Matches the path from a request URL.
          title: URLPath
        Version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the sampling rule format (<code>1</code>).
          title: Version
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeMap'
          - description: Matches attributes derived from the request.
          title: Attributes
      required:
      - FixedRate
      - HTTPMethod
      - Host
      - Priority
      - ReservoirSize
      - ResourceARN
      - ServiceName
      - ServiceType
      - URLPath
      - Version
      title: SamplingRule
      type: object
    CreateSamplingRuleRequest:
      example:
        SamplingRule:
          Priority: ""
          ReservoirSize: ""
          RuleARN: ""
          URLPath: ""
          Attributes: ""
          FixedRate: ""
          Host: ""
          ResourceARN: ""
          ServiceName: ""
          HTTPMethod: ""
          Version: ""
          ServiceType: ""
          RuleName: ""
        Tags: ""
      properties:
        SamplingRule:
          $ref: '#/components/schemas/CreateSamplingRuleRequest_SamplingRule'
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>A map that contains one or more tag keys and tag values\
              \ to attach to an X-Ray sampling rule. For more information about ways\
              \ to use tags, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
              >Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services\
              \ General Reference</i>.</p> <p>The following restrictions apply to\
              \ tags:</p> <ul> <li> <p>Maximum number of user-applied tags per resource:\
              \ 50</p> </li> <li> <p>Maximum tag key length: 128 Unicode characters</p>\
              \ </li> <li> <p>Maximum tag value length: 256 Unicode characters</p>\
              \ </li> <li> <p>Valid values for key and value: a-z, A-Z, 0-9, space,\
              \ and the following characters: _ . : / = + - and @</p> </li> <li> <p>Tag\
              \ keys and values are case sensitive.</p> </li> <li> <p>Don't use <code>aws:</code>\
              \ as a prefix for keys; it's reserved for Amazon Web Services use.</p>\
              \ </li> </ul>"
      required:
      - SamplingRule
      title: CreateSamplingRuleRequest
      type: object
    SamplingRuleRecord:
      description: A <a href="https://docs.aws.amazon.com/xray/latest/api/API_SamplingRule.html">SamplingRule</a>
        and its metadata.
      properties:
        SamplingRule:
          $ref: '#/components/schemas/SamplingRuleRecord_SamplingRule'
        CreatedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the rule was created.
          title: CreatedAt
        ModifiedAt:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the rule was last modified.
          title: ModifiedAt
      title: SamplingRuleRecord
      type: object
    GroupARN:
      maxLength: 400
      minLength: 1
      type: string
    DeleteGroupRequest:
      example:
        GroupName: ""
        GroupARN: ""
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: The case-sensitive name of the group.
        GroupARN:
          allOf:
          - $ref: '#/components/schemas/GroupARN'
          - description: The ARN of the group that was generated on creation.
      title: DeleteGroupRequest
      type: object
    PolicyName:
      maxLength: 128
      minLength: 1
      pattern: "[\\w+=,.@-]+"
      type: string
    PolicyRevisionId:
      type: string
    DeleteResourcePolicyRequest:
      example:
        PolicyRevisionId: ""
        PolicyName: ""
      properties:
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          - description: The name of the resource policy to delete.
        PolicyRevisionId:
          allOf:
          - $ref: '#/components/schemas/PolicyRevisionId'
          - description: "Specifies a specific policy revision to delete. Provide\
              \ a <code>PolicyRevisionId</code> to ensure an atomic delete operation.\
              \ If the provided revision id does not match the latest policy revision\
              \ id, an <code>InvalidPolicyRevisionIdException</code> exception is\
              \ returned. "
      required:
      - PolicyName
      title: DeleteResourcePolicyRequest
      type: object
    DeleteSamplingRuleRequest:
      example:
        RuleARN: ""
        RuleName: ""
      properties:
        RuleName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The name of the sampling rule. Specify a rule by either\
              \ name or ARN, but not both."
        RuleARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The ARN of the sampling rule. Specify a rule by either name\
              \ or ARN, but not both."
      title: DeleteSamplingRuleRequest
      type: object
    Double:
      format: double
      type: number
    EC2InstanceId:
      maxLength: 20
      type: string
    Timestamp:
      format: date-time
      type: string
    EdgeStatistics:
      description: Response statistics for an edge.
      properties:
        OkCount:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          - description: The number of requests that completed with a 2xx Success
              status code.
          title: OkCount
        ErrorStatistics:
          $ref: '#/components/schemas/EdgeStatistics_ErrorStatistics'
        FaultStatistics:
          $ref: '#/components/schemas/EdgeStatistics_FaultStatistics'
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          - description: The total number of completed requests.
          title: TotalCount
        TotalResponseTime:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: The aggregate response time of completed requests.
          title: TotalResponseTime
      title: EdgeStatistics
      type: object
    Histogram:
      items:
        $ref: '#/components/schemas/HistogramEntry'
      type: array
    Edge:
      description: "Information about a connection between two services. An edge can\
        \ be a synchronous connection, such as typical call between client and service,\
        \ or an asynchronous link, such as a Lambda function which retrieves an event\
        \ from an SNS queue."
      properties:
        ReferenceId:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: Identifier of the edge. Unique within a service map.
          title: ReferenceId
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The start time of the first segment on the edge.
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The end time of the last segment on the edge.
          title: EndTime
        SummaryStatistics:
          $ref: '#/components/schemas/Edge_SummaryStatistics'
        ResponseTimeHistogram:
          allOf:
          - $ref: '#/components/schemas/Histogram'
          - description: A histogram that maps the spread of client response times
              on an edge. Only populated for synchronous edges.
          title: ResponseTimeHistogram
        Aliases:
          allOf:
          - $ref: '#/components/schemas/AliasList'
          - description: Aliases for the edge.
          title: Aliases
        EdgeType:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "Describes an asynchronous connection, with a value of <code>link</code>."
          title: EdgeType
        ReceivedEventAgeHistogram:
          allOf:
          - $ref: '#/components/schemas/Histogram'
          - description: A histogram that maps the spread of event age when received
              by consumers. Age is calculated each time an event is received. Only
              populated when <i>EdgeType</i> is <code>link</code>.
          title: ReceivedEventAgeHistogram
      title: Edge
      type: object
    EdgeList:
      items:
        $ref: '#/components/schemas/Edge'
      type: array
    NullableLong:
      type: integer
    ErrorStatistics:
      description: Information about requests that failed with a 4xx Client Error
        status code.
      properties:
        ThrottleCount:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          - description: The number of requests that failed with a 419 throttling
              status code.
          title: ThrottleCount
        OtherCount:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          - description: The number of requests that failed with untracked 4xx Client
              Error status codes.
          title: OtherCount
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          - description: The total number of requests that failed with a 4xx Client
              Error status code.
          title: TotalCount
      title: ErrorStatistics
      type: object
    FaultStatistics:
      description: Information about requests that failed with a 5xx Server Error
        status code.
      properties:
        OtherCount:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          - description: The number of requests that failed with untracked 5xx Server
              Error status codes.
          title: OtherCount
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          - description: The total number of requests that failed with a 5xx Server
              Error status code.
          title: TotalCount
      title: FaultStatistics
      type: object
    EncryptionStatus:
      enum:
      - UPDATING
      - ACTIVE
      title: EncryptionStatus
      type: string
    EncryptionType:
      enum:
      - NONE
      - KMS
      title: EncryptionType
      type: string
    EncryptionConfig:
      description: A configuration document that specifies encryption configuration
        settings.
      properties:
        KeyId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The ID of the KMS key used for encryption, if applicable."
          title: KeyId
        Status:
          allOf:
          - $ref: '#/components/schemas/EncryptionStatus'
          - description: "The encryption status. While the status is <code>UPDATING</code>,\
              \ X-Ray may encrypt data with a combination of the new and old settings."
          title: Status
        Type:
          allOf:
          - $ref: '#/components/schemas/EncryptionType'
          - description: The type of encryption. Set to <code>KMS</code> for encryption
              with KMS keys. Set to <code>NONE</code> for default encryption.
          title: Type
      title: EncryptionConfig
      type: object
    EncryptionKeyId:
      maxLength: 3000
      minLength: 1
      type: string
    EntitySelectorExpression:
      maxLength: 500
      minLength: 1
      type: string
    ErrorRootCauseServices:
      items:
        $ref: '#/components/schemas/ErrorRootCauseService'
      type: array
    ErrorRootCause:
      description: The root cause of a trace summary error.
      properties:
        Services:
          allOf:
          - $ref: '#/components/schemas/ErrorRootCauseServices'
          - description: "A list of services corresponding to an error. A service\
              \ identifies a segment and it contains a name, account ID, type, and\
              \ inferred flag."
          title: Services
        ClientImpacting:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: A flag that denotes that the root cause impacts the trace
              client.
          title: ClientImpacting
      title: ErrorRootCause
      type: object
    RootCauseExceptions:
      items:
        $ref: '#/components/schemas/RootCauseException'
      type: array
    ErrorRootCauseEntity:
      description: A collection of segments and corresponding subsegments associated
        to a trace summary error.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the entity.
          title: Name
        Exceptions:
          allOf:
          - $ref: '#/components/schemas/RootCauseExceptions'
          - description: The types and messages of the exceptions.
          title: Exceptions
        Remote:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: A flag that denotes a remote subsegment.
          title: Remote
      title: ErrorRootCauseEntity
      type: object
    ErrorRootCauseEntityPath:
      items:
        $ref: '#/components/schemas/ErrorRootCauseEntity'
      type: array
    ServiceNames:
      items:
        $ref: '#/components/schemas/String'
      type: array
    ErrorRootCauseService:
      description: A collection of fields identifying the services in a trace summary
        error.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The service name.
          title: Name
        Names:
          allOf:
          - $ref: '#/components/schemas/ServiceNames'
          - description: A collection of associated service names.
          title: Names
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The type associated to the service.
          title: Type
        AccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The account ID associated to the service.
          title: AccountId
        EntityPath:
          allOf:
          - $ref: '#/components/schemas/ErrorRootCauseEntityPath'
          - description: 'The path of root cause entities found on the service. '
          title: EntityPath
        Inferred:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: A Boolean value indicating if the service is inferred from
              the trace.
          title: Inferred
      title: ErrorRootCauseService
      type: object
    ErrorRootCauses:
      items:
        $ref: '#/components/schemas/ErrorRootCause'
      type: array
    EventSummaryText:
      type: string
    FaultRootCauseServices:
      items:
        $ref: '#/components/schemas/FaultRootCauseService'
      type: array
    FaultRootCause:
      description: The root cause information for a trace summary fault.
      properties:
        Services:
          allOf:
          - $ref: '#/components/schemas/FaultRootCauseServices'
          - description: "A list of corresponding services. A service identifies a\
              \ segment and it contains a name, account ID, type, and inferred flag."
          title: Services
        ClientImpacting:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: A flag that denotes that the root cause impacts the trace
              client.
          title: ClientImpacting
      title: FaultRootCause
      type: object
    FaultRootCauseEntity:
      description: A collection of segments and corresponding subsegments associated
        to a trace summary fault error.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the entity.
          title: Name
        Exceptions:
          allOf:
          - $ref: '#/components/schemas/RootCauseExceptions'
          - description: The types and messages of the exceptions.
          title: Exceptions
        Remote:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: A flag that denotes a remote subsegment.
          title: Remote
      title: FaultRootCauseEntity
      type: object
    FaultRootCauseEntityPath:
      items:
        $ref: '#/components/schemas/FaultRootCauseEntity'
      type: array
    FaultRootCauseService:
      description: A collection of fields identifying the services in a trace summary
        fault.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The service name.
          title: Name
        Names:
          allOf:
          - $ref: '#/components/schemas/ServiceNames'
          - description: A collection of associated service names.
          title: Names
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The type associated to the service.
          title: Type
        AccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The account ID associated to the service.
          title: AccountId
        EntityPath:
          allOf:
          - $ref: '#/components/schemas/FaultRootCauseEntityPath'
          - description: 'The path of root cause entities found on the service. '
          title: EntityPath
        Inferred:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: A Boolean value indicating if the service is inferred from
              the trace.
          title: Inferred
      title: FaultRootCauseService
      type: object
    FaultRootCauses:
      items:
        $ref: '#/components/schemas/FaultRootCause'
      type: array
    ForecastStatistics:
      description: The predicted high and low fault count. This is used to determine
        if a service has become anomalous and if an insight should be created.
      properties:
        FaultCountHigh:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          - description: The upper limit of fault counts for a service.
          title: FaultCountHigh
        FaultCountLow:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          - description: The lower limit of fault counts for a service.
          title: FaultCountLow
      title: ForecastStatistics
      type: object
    GetEncryptionConfigRequest:
      properties: {}
      title: GetEncryptionConfigRequest
      type: object
    GetGroupRequest:
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: The case-sensitive name of the group.
        GroupARN:
          allOf:
          - $ref: '#/components/schemas/GroupARN'
          - description: The ARN of the group that was generated on creation.
      title: GetGroupRequest
      type: object
    GetGroupsNextToken:
      maxLength: 100
      minLength: 1
      type: string
    GetGroupsRequest:
      example:
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/GetGroupsNextToken'
          - description: Pagination token.
      title: GetGroupsRequest
      type: object
    GroupSummaryList:
      items:
        $ref: '#/components/schemas/GroupSummary'
      type: array
    GetInsightEventsMaxResults:
      maximum: 50
      minimum: 1
      type: integer
    InsightId:
      pattern: "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}"
      type: string
    Token:
      maxLength: 2000
      minLength: 1
      type: string
    GetInsightEventsRequest:
      example:
        NextToken: ""
        MaxResults: ""
        InsightId: ""
      properties:
        InsightId:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          - description: The insight's unique identifier. Use the GetInsightSummaries
              action to retrieve an InsightId.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/GetInsightEventsMaxResults'
          - description: Used to retrieve at most the specified value of events.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: 'Specify the pagination token returned by a previous request
              to retrieve the next page of events. '
      required:
      - InsightId
      title: GetInsightEventsRequest
      type: object
    InsightEventList:
      items:
        $ref: '#/components/schemas/InsightEvent'
      type: array
    GetInsightImpactGraphRequest:
      example:
        EndTime: ""
        NextToken: ""
        StartTime: ""
        InsightId: ""
      properties:
        InsightId:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          - description: The insight's unique identifier. Use the GetInsightSummaries
              action to retrieve an InsightId.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The estimated start time of the insight, in Unix time seconds.\
              \ The StartTime is inclusive of the value provided and can't be more\
              \ than 30 days old."
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The estimated end time of the insight, in Unix time seconds.\
              \ The EndTime is exclusive of the value provided. The time range between\
              \ the start time and end time can't be more than six hours. "
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: 'Specify the pagination token returned by a previous request
              to retrieve the next page of results. '
      required:
      - EndTime
      - InsightId
      - StartTime
      title: GetInsightImpactGraphRequest
      type: object
    InsightImpactGraphServiceList:
      items:
        $ref: '#/components/schemas/InsightImpactGraphService'
      type: array
    GetInsightRequest:
      example:
        InsightId: ""
      properties:
        InsightId:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          - description: The insight's unique identifier. Use the GetInsightSummaries
              action to retrieve an InsightId.
      required:
      - InsightId
      title: GetInsightRequest
      type: object
    Insight:
      description: "When fault rates go outside of the expected range, X-Ray creates\
        \ an insight. Insights tracks emergent issues within your applications."
      properties:
        InsightId:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          - description: 'The insights unique identifier. '
          title: InsightId
        GroupARN:
          allOf:
          - $ref: '#/components/schemas/GroupARN'
          - description: The Amazon Resource Name (ARN) of the group that the insight
              belongs to.
          title: GroupARN
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: The name of the group that the insight belongs to.
          title: GroupName
        RootCauseServiceId:
          $ref: '#/components/schemas/ServiceId'
        Categories:
          allOf:
          - $ref: '#/components/schemas/InsightCategoryList'
          - description: The categories that label and describe the type of insight.
          title: Categories
        State:
          allOf:
          - $ref: '#/components/schemas/InsightState'
          - description: The current state of the insight.
          title: State
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time, in Unix seconds, at which the insight began."
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time, in Unix seconds, at which the insight ended."
          title: EndTime
        Summary:
          allOf:
          - $ref: '#/components/schemas/InsightSummaryText'
          - description: A brief description of the insight.
          title: Summary
        ClientRequestImpactStatistics:
          $ref: '#/components/schemas/Insight_ClientRequestImpactStatistics'
        RootCauseServiceRequestImpactStatistics:
          $ref: '#/components/schemas/Insight_RootCauseServiceRequestImpactStatistics'
        TopAnomalousServices:
          allOf:
          - $ref: '#/components/schemas/AnomalousServiceList'
          - description: The service within the insight that is most impacted by the
              incident.
          title: TopAnomalousServices
      title: Insight
      type: object
    GetInsightSummariesMaxResults:
      maximum: 100
      minimum: 1
      type: integer
    InsightStateList:
      items:
        $ref: '#/components/schemas/InsightState'
      maxItems: 1
      minItems: 0
      type: array
    GetInsightSummariesRequest:
      example:
        States: ""
        GroupName: ""
        EndTime: ""
        NextToken: ""
        GroupARN: ""
        MaxResults: ""
        StartTime: ""
      properties:
        States:
          allOf:
          - $ref: '#/components/schemas/InsightStateList'
          - description: 'The list of insight states. '
        GroupARN:
          allOf:
          - $ref: '#/components/schemas/GroupARN'
          - description: The Amazon Resource Name (ARN) of the group. Required if
              the GroupName isn't provided.
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: The name of the group. Required if the GroupARN isn't provided.
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The beginning of the time frame in which the insights started.
              The start time can't be more than 30 days old.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The end of the time frame in which the insights ended. The
              end time can't be more than 30 days old.
        MaxResults:
          allOf:
          - $ref: '#/components/schemas/GetInsightSummariesMaxResults'
          - description: The maximum number of results to display.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: Pagination token.
      required:
      - EndTime
      - StartTime
      title: GetInsightSummariesRequest
      type: object
    InsightSummaryList:
      items:
        $ref: '#/components/schemas/InsightSummary'
      type: array
    GetSamplingRulesRequest:
      example:
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Pagination token.
      title: GetSamplingRulesRequest
      type: object
    SamplingRuleRecordList:
      items:
        $ref: '#/components/schemas/SamplingRuleRecord'
      type: array
    GetSamplingStatisticSummariesRequest:
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Pagination token.
      title: GetSamplingStatisticSummariesRequest
      type: object
    SamplingStatisticSummaryList:
      items:
        $ref: '#/components/schemas/SamplingStatisticSummary'
      type: array
    SamplingStatisticsDocumentList:
      items:
        $ref: '#/components/schemas/SamplingStatisticsDocument'
      maxItems: 25
      type: array
    GetSamplingTargetsRequest:
      example:
        SamplingStatisticsDocuments: ""
      properties:
        SamplingStatisticsDocuments:
          allOf:
          - $ref: '#/components/schemas/SamplingStatisticsDocumentList'
          - description: Information about rules that the service is using to sample
              requests.
      required:
      - SamplingStatisticsDocuments
      title: GetSamplingTargetsRequest
      type: object
    SamplingTargetDocumentList:
      items:
        $ref: '#/components/schemas/SamplingTargetDocument'
      type: array
    UnprocessedStatisticsList:
      items:
        $ref: '#/components/schemas/UnprocessedStatistics'
      type: array
    GetServiceGraphRequest:
      example:
        GroupName: ""
        EndTime: ""
        NextToken: ""
        GroupARN: ""
        StartTime: ""
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The start of the time frame for which to generate a graph.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The end of the timeframe for which to generate a graph.
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: The name of a group based on which you want to generate a
              graph.
        GroupARN:
          allOf:
          - $ref: '#/components/schemas/GroupARN'
          - description: The Amazon Resource Name (ARN) of a group based on which
              you want to generate a graph.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Pagination token.
      required:
      - EndTime
      - StartTime
      title: GetServiceGraphRequest
      type: object
    ServiceList:
      items:
        $ref: '#/components/schemas/Service'
      type: array
    GetTimeSeriesServiceStatisticsRequest:
      example:
        GroupName: ""
        EntitySelectorExpression: ""
        EndTime: ""
        NextToken: ""
        GroupARN: ""
        ForecastStatistics: ""
        StartTime: ""
        Period: ""
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The start of the time frame for which to aggregate statistics.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The end of the time frame for which to aggregate statistics.
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: The case-sensitive name of the group for which to pull statistics
              from.
        GroupARN:
          allOf:
          - $ref: '#/components/schemas/GroupARN'
          - description: The Amazon Resource Name (ARN) of the group for which to
              pull statistics from.
        EntitySelectorExpression:
          allOf:
          - $ref: '#/components/schemas/EntitySelectorExpression'
          - description: "A filter expression defining entities that will be aggregated\
              \ for statistics. Supports ID, service, and edge functions. If no selector\
              \ expression is specified, edge statistics are returned. "
        Period:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: Aggregation period in seconds.
        ForecastStatistics:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: The forecasted high and low fault count values. Forecast
              enabled requests require the EntitySelectorExpression ID be provided.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Pagination token.
      required:
      - EndTime
      - StartTime
      title: GetTimeSeriesServiceStatisticsRequest
      type: object
    TimeSeriesServiceStatisticsList:
      items:
        $ref: '#/components/schemas/TimeSeriesServiceStatistics'
      type: array
    GetTraceGraphRequest:
      example:
        TraceIds: ""
        NextToken: ""
      properties:
        TraceIds:
          allOf:
          - $ref: '#/components/schemas/TraceIdList'
          - description: Trace IDs of requests for which to generate a service graph.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Pagination token.
      required:
      - TraceIds
      title: GetTraceGraphRequest
      type: object
    TimeRangeType:
      enum:
      - TraceId
      - Event
      title: TimeRangeType
      type: string
    SamplingStrategy:
      description: The name and value of a sampling rule to apply to a trace summary.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/SamplingStrategyName'
          - description: The name of a sampling rule.
          title: Name
        Value:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: The value of a sampling rule.
          title: Value
      title: SamplingStrategy
      type: object
    GetTraceSummariesRequest:
      example:
        TimeRangeType: ""
        EndTime: ""
        NextToken: ""
        StartTime: ""
        SamplingStrategy:
          Value: ""
          Name: ""
        Sampling: ""
        FilterExpression: ""
      properties:
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The start of the time frame for which to retrieve traces.
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The end of the time frame for which to retrieve traces.
        TimeRangeType:
          allOf:
          - $ref: '#/components/schemas/TimeRangeType'
          - description: A parameter to indicate whether to query trace summaries
              by TraceId or Event time.
        Sampling:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Set to <code>true</code> to get summaries for only a subset
              of available traces.
        SamplingStrategy:
          $ref: '#/components/schemas/GetTraceSummariesRequest_SamplingStrategy'
        FilterExpression:
          allOf:
          - $ref: '#/components/schemas/FilterExpression'
          - description: Specify a filter expression to retrieve trace summaries for
              services or requests that meet certain requirements.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Specify the pagination token returned by a previous request
              to retrieve the next page of results.
      required:
      - EndTime
      - StartTime
      title: GetTraceSummariesRequest
      type: object
    TraceSummaryList:
      items:
        $ref: '#/components/schemas/TraceSummary'
      type: array
    GroupSummary:
      description: Details for a group without metadata.
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The unique case-sensitive name of the group.
          title: GroupName
        GroupARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of the group generated based on the GroupName.
          title: GroupARN
        FilterExpression:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The filter expression defining the parameters to include
              traces.
          title: FilterExpression
        InsightsConfiguration:
          $ref: '#/components/schemas/GroupSummary_InsightsConfiguration'
      title: GroupSummary
      type: object
    HistogramEntry:
      description: "An entry in a histogram for a statistic. A histogram maps the\
        \ range of observed values on the X axis, and the prevalence of each value\
        \ on the Y axis."
      properties:
        Value:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: The value of the entry.
          title: Value
        Count:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The prevalence of the entry.
          title: Count
      title: HistogramEntry
      type: object
    Integer:
      type: integer
    Hostname:
      maxLength: 255
      type: string
    Http:
      description: Information about an HTTP request.
      properties:
        HttpURL:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The request URL.
          title: HttpURL
        HttpStatus:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The response status.
          title: HttpStatus
        HttpMethod:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The request method.
          title: HttpMethod
        UserAgent:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The request's user agent string.
          title: UserAgent
        ClientIp:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The IP address of the requestor.
          title: ClientIp
      title: Http
      type: object
    InsightCategoryList:
      items:
        $ref: '#/components/schemas/InsightCategory'
      type: array
    InsightSummaryText:
      type: string
    RequestImpactStatistics:
      description: Statistics that describe how the incident has impacted a service.
      properties:
        FaultCount:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          - description: "The number of requests that have resulted in a fault,"
          title: FaultCount
        OkCount:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          - description: The number of successful requests.
          title: OkCount
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          - description: The total number of requests to the service.
          title: TotalCount
      title: RequestImpactStatistics
      type: object
    InsightCategory:
      enum:
      - FAULT
      title: InsightCategory
      type: string
    InsightEvent:
      description: "X-Ray reevaluates insights periodically until they are resolved,\
        \ and records each intermediate state in an event. You can review incident\
        \ events in the Impact Timeline on the Inspect page in the X-Ray console."
      properties:
        Summary:
          allOf:
          - $ref: '#/components/schemas/EventSummaryText'
          - description: A brief description of the event.
          title: Summary
        EventTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time, in Unix seconds, at which the event was recorded."
          title: EventTime
        ClientRequestImpactStatistics:
          $ref: '#/components/schemas/Insight_ClientRequestImpactStatistics'
        RootCauseServiceRequestImpactStatistics:
          $ref: '#/components/schemas/Insight_RootCauseServiceRequestImpactStatistics'
        TopAnomalousServices:
          allOf:
          - $ref: '#/components/schemas/AnomalousServiceList'
          - description: The service during the event that is most impacted by the
              incident.
          title: TopAnomalousServices
      title: InsightEvent
      type: object
    InsightImpactGraphEdge:
      description: The connection between two service in an insight impact graph.
      properties:
        ReferenceId:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: Identifier of the edge. Unique within a service map.
          title: ReferenceId
      title: InsightImpactGraphEdge
      type: object
    InsightImpactGraphEdgeList:
      items:
        $ref: '#/components/schemas/InsightImpactGraphEdge'
      type: array
    InsightImpactGraphService:
      description: "Information about an application that processed requests, users\
        \ that made requests, or downstream services, resources, and applications\
        \ that an application used. "
      properties:
        ReferenceId:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: Identifier for the service. Unique within the service map.
          title: ReferenceId
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>Identifier for the service. Unique within the service\
              \ map.</p> <ul> <li> <p>Amazon Web Services Resource - The type of an\
              \ Amazon Web Services resource. For example, AWS::EC2::Instance for\
              \ an application running on Amazon EC2 or AWS::DynamoDB::Table for an\
              \ Amazon DynamoDB table that the application used. </p> </li> <li> <p>Amazon\
              \ Web Services Service - The type of an Amazon Web Services service.\
              \ For example, AWS::DynamoDB for downstream calls to Amazon DynamoDB\
              \ that didn't target a specific table. </p> </li> <li> <p>Amazon Web\
              \ Services Service - The type of an Amazon Web Services service. For\
              \ example, AWS::DynamoDB for downstream calls to Amazon DynamoDB that\
              \ didn't target a specific table. </p> </li> <li> <p>remote - A downstream\
              \ service of indeterminate type.</p> </li> </ul>"
          title: Type
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The canonical name of the service.
          title: Name
        Names:
          allOf:
          - $ref: '#/components/schemas/ServiceNames'
          - description: "A list of names for the service, including the canonical\
              \ name."
          title: Names
        AccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Identifier of the Amazon Web Services account in which the
              service runs.
          title: AccountId
        Edges:
          allOf:
          - $ref: '#/components/schemas/InsightImpactGraphEdgeList'
          - description: Connections to downstream services.
          title: Edges
      title: InsightImpactGraphService
      type: object
    InsightSummary:
      description: Information that describes an insight.
      properties:
        InsightId:
          allOf:
          - $ref: '#/components/schemas/InsightId'
          - description: 'The insights unique identifier. '
          title: InsightId
        GroupARN:
          allOf:
          - $ref: '#/components/schemas/GroupARN'
          - description: The Amazon Resource Name (ARN) of the group that the insight
              belongs to.
          title: GroupARN
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: The name of the group that the insight belongs to.
          title: GroupName
        RootCauseServiceId:
          $ref: '#/components/schemas/ServiceId'
        Categories:
          allOf:
          - $ref: '#/components/schemas/InsightCategoryList'
          - description: ' Categories The categories that label and describe the type
              of insight.'
          title: Categories
        State:
          allOf:
          - $ref: '#/components/schemas/InsightState'
          - description: The current state of the insight.
          title: State
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time, in Unix seconds, at which the insight began."
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time, in Unix seconds, at which the insight ended."
          title: EndTime
        Summary:
          allOf:
          - $ref: '#/components/schemas/InsightSummaryText'
          - description: A brief description of the insight.
          title: Summary
        ClientRequestImpactStatistics:
          $ref: '#/components/schemas/InsightSummary_ClientRequestImpactStatistics'
        RootCauseServiceRequestImpactStatistics:
          $ref: '#/components/schemas/InsightSummary_RootCauseServiceRequestImpactStatistics'
        TopAnomalousServices:
          allOf:
          - $ref: '#/components/schemas/AnomalousServiceList'
          - description: The service within the insight that is most impacted by the
              incident.
          title: TopAnomalousServices
        LastUpdateTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "The time, in Unix seconds, that the insight was last updated."
          title: LastUpdateTime
      title: InsightSummary
      type: object
    InstanceIdDetail:
      description: 'A list of EC2 instance IDs corresponding to the segments in a
        trace. '
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ID of a corresponding EC2 instance.
          title: Id
      title: InstanceIdDetail
      type: object
    ResourcePolicyNextToken:
      maxLength: 100
      minLength: 1
      type: string
    ListResourcePoliciesRequest:
      example:
        NextToken: ""
      properties:
        NextToken:
          allOf:
          - $ref: '#/components/schemas/ResourcePolicyNextToken'
          - description: Not currently supported.
      title: ListResourcePoliciesRequest
      type: object
    ResourcePolicyList:
      items:
        $ref: '#/components/schemas/ResourcePolicy'
      type: array
    ListTagsForResourceRequest:
      example:
        ResourceARN: ""
        NextToken: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Number (ARN) of an X-Ray group or sampling
              rule.
        NextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A pagination token. If multiple pages of results are returned,\
              \ use the <code>NextToken</code> value returned with the current page\
              \ of results as the value of this parameter to get the next page of\
              \ results."
      required:
      - ResourceARN
      title: ListTagsForResourceRequest
      type: object
    PolicyDocument:
      type: string
    PutEncryptionConfigRequest:
      example:
        Type: ""
        KeyId: ""
      properties:
        KeyId:
          allOf:
          - $ref: '#/components/schemas/EncryptionKeyId'
          - description: "<p>An Amazon Web Services KMS key in one of the following\
              \ formats:</p> <ul> <li> <p> <b>Alias</b> - The name of the key. For\
              \ example, <code>alias/MyKey</code>.</p> </li> <li> <p> <b>Key ID</b>\
              \ - The KMS key ID of the key. For example, <code>ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>.\
              \ Amazon Web Services X-Ray does not support asymmetric KMS keys.</p>\
              \ </li> <li> <p> <b>ARN</b> - The full Amazon Resource Name of the key\
              \ ID or alias. For example, <code>arn:aws:kms:us-east-2:123456789012:key/ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>.\
              \ Use this format to specify a key in a different account.</p> </li>\
              \ </ul> <p>Omit this key if you set <code>Type</code> to <code>NONE</code>.</p>"
        Type:
          allOf:
          - $ref: '#/components/schemas/EncryptionType'
          - description: The type of encryption. Set to <code>KMS</code> to use your
              own key for encryption. Set to <code>NONE</code> for default encryption.
      required:
      - Type
      title: PutEncryptionConfigRequest
      type: object
    PutResourcePolicyRequest:
      example:
        PolicyRevisionId: ""
        BypassPolicyLockoutCheck: ""
        PolicyName: ""
        PolicyDocument: ""
      properties:
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          - description: The name of the resource policy. Must be unique within a
              specific Amazon Web Services account.
        PolicyDocument:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          - description: "The resource policy document, which can be up to 5kb in\
              \ size."
        PolicyRevisionId:
          allOf:
          - $ref: '#/components/schemas/PolicyRevisionId'
          - description: "<p>Specifies a specific policy revision, to ensure an atomic\
              \ create operation. By default the resource policy is created if it\
              \ does not exist, or updated with an incremented revision id. The revision\
              \ id is unique to each policy in the account.</p> <p>If the policy revision\
              \ id does not match the latest revision id, the operation will fail\
              \ with an <code>InvalidPolicyRevisionIdException</code> exception. You\
              \ can also provide a <code>PolicyRevisionId</code> of 0. In this case,\
              \ the operation will fail with an <code>InvalidPolicyRevisionIdException</code>\
              \ exception if a resource policy with the same name already exists.\
              \ </p>"
        BypassPolicyLockoutCheck:
          allOf:
          - $ref: '#/components/schemas/Boolean'
          - description: <p>A flag to indicate whether to bypass the resource policy
              lockout safety check.</p> <important> <p>Setting this value to true
              increases the risk that the policy becomes unmanageable. Do not set
              this value to true indiscriminately.</p> </important> <p>Use this parameter
              only when you include a policy in the request and you intend to prevent
              the principal that is making the request from making a subsequent <code>PutResourcePolicy</code>
              request.</p> <p>The default value is false.</p>
      required:
      - PolicyDocument
      - PolicyName
      title: PutResourcePolicyRequest
      type: object
    ResourcePolicy:
      description: A resource policy grants one or more Amazon Web Services services
        and accounts permissions to access X-Ray. Each resource policy is associated
        with a specific Amazon Web Services account.
      properties:
        PolicyName:
          allOf:
          - $ref: '#/components/schemas/PolicyName'
          - description: The name of the resource policy. Must be unique within a
              specific Amazon Web Services account.
          title: PolicyName
        PolicyDocument:
          allOf:
          - $ref: '#/components/schemas/PolicyDocument'
          - description: "The resource policy document, which can be up to 5kb in\
              \ size."
          title: PolicyDocument
        PolicyRevisionId:
          allOf:
          - $ref: '#/components/schemas/PolicyRevisionId'
          - description: Returns the current policy revision id for this policy name.
          title: PolicyRevisionId
        LastUpdatedTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: "When the policy was last updated, in Unix time seconds."
          title: LastUpdatedTime
      title: ResourcePolicy
      type: object
    TelemetryRecordList:
      items:
        $ref: '#/components/schemas/TelemetryRecord'
      type: array
    PutTelemetryRecordsRequest:
      example:
        ResourceARN: ""
        TelemetryRecords: ""
        Hostname: ""
        EC2InstanceId: ""
      properties:
        TelemetryRecords:
          allOf:
          - $ref: '#/components/schemas/TelemetryRecordList'
          - description: <p/>
        EC2InstanceId:
          allOf:
          - $ref: '#/components/schemas/EC2InstanceId'
          - description: <p/>
        Hostname:
          allOf:
          - $ref: '#/components/schemas/Hostname'
          - description: <p/>
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: <p/>
      required:
      - TelemetryRecords
      title: PutTelemetryRecordsRequest
      type: object
    TraceSegmentDocumentList:
      items:
        $ref: '#/components/schemas/TraceSegmentDocument'
      type: array
    PutTraceSegmentsRequest:
      example:
        TraceSegmentDocuments: ""
      properties:
        TraceSegmentDocuments:
          allOf:
          - $ref: '#/components/schemas/TraceSegmentDocumentList'
          - description: A string containing a JSON document defining one or more
              segments or subsegments.
      required:
      - TraceSegmentDocuments
      title: PutTraceSegmentsRequest
      type: object
    UnprocessedTraceSegmentList:
      items:
        $ref: '#/components/schemas/UnprocessedTraceSegment'
      type: array
    RequestCount:
      minimum: 0
      type: integer
    ResourceARNDetail:
      description: A list of resources ARNs corresponding to the segments in a trace.
      properties:
        ARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The ARN of a corresponding resource.
          title: ARN
      title: ResourceARNDetail
      type: object
    ResponseTimeRootCauseServices:
      items:
        $ref: '#/components/schemas/ResponseTimeRootCauseService'
      type: array
    ResponseTimeRootCause:
      description: The root cause information for a response time warning.
      properties:
        Services:
          allOf:
          - $ref: '#/components/schemas/ResponseTimeRootCauseServices'
          - description: "A list of corresponding services. A service identifies a\
              \ segment and contains a name, account ID, type, and inferred flag."
          title: Services
        ClientImpacting:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: A flag that denotes that the root cause impacts the trace
              client.
          title: ClientImpacting
      title: ResponseTimeRootCause
      type: object
    ResponseTimeRootCauseEntity:
      description: A collection of segments and corresponding subsegments associated
        to a response time warning.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the entity.
          title: Name
        Coverage:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: The type and messages of the exceptions.
          title: Coverage
        Remote:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: A flag that denotes a remote subsegment.
          title: Remote
      title: ResponseTimeRootCauseEntity
      type: object
    ResponseTimeRootCauseEntityPath:
      items:
        $ref: '#/components/schemas/ResponseTimeRootCauseEntity'
      type: array
    ResponseTimeRootCauseService:
      description: A collection of fields identifying the service in a response time
        warning.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The service name.
          title: Name
        Names:
          allOf:
          - $ref: '#/components/schemas/ServiceNames'
          - description: A collection of associated service names.
          title: Names
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The type associated to the service.
          title: Type
        AccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The account ID associated to the service.
          title: AccountId
        EntityPath:
          allOf:
          - $ref: '#/components/schemas/ResponseTimeRootCauseEntityPath'
          - description: 'The path of root cause entities found on the service. '
          title: EntityPath
        Inferred:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: A Boolean value indicating if the service is inferred from
              the trace.
          title: Inferred
      title: ResponseTimeRootCauseService
      type: object
    ResponseTimeRootCauses:
      items:
        $ref: '#/components/schemas/ResponseTimeRootCause'
      type: array
    RootCauseException:
      description: The exception associated with a root cause.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the exception.
          title: Name
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The message of the exception.
          title: Message
      title: RootCauseException
      type: object
    SampledCount:
      minimum: 0
      type: integer
    SamplingRuleUpdate:
      description: A document specifying changes to a sampling rule's configuration.
      properties:
        RuleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: "The name of the sampling rule. Specify a rule by either\
              \ name or ARN, but not both."
          title: RuleName
        RuleARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The ARN of the sampling rule. Specify a rule by either name\
              \ or ARN, but not both."
          title: RuleARN
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: Matches the ARN of the Amazon Web Services resource on which
              the service runs.
          title: ResourceARN
        Priority:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The priority of the sampling rule.
          title: Priority
        FixedRate:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: "The percentage of matching requests to instrument, after\
              \ the reservoir is exhausted."
          title: FixedRate
        ReservoirSize:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: "A fixed number of matching requests to instrument per second,\
              \ prior to applying the fixed rate. The reservoir is not used directly\
              \ by services, but applies to all services using the rule collectively."
          title: ReservoirSize
        Host:
          allOf:
          - $ref: '#/components/schemas/Host'
          - description: Matches the hostname from a request URL.
          title: Host
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: Matches the <code>name</code> that the service uses to identify
              itself in segments.
          title: ServiceName
        ServiceType:
          allOf:
          - $ref: '#/components/schemas/ServiceType'
          - description: Matches the <code>origin</code> that the service uses to
              identify its type in segments.
          title: ServiceType
        HTTPMethod:
          allOf:
          - $ref: '#/components/schemas/HTTPMethod'
          - description: Matches the HTTP method of a request.
          title: HTTPMethod
        URLPath:
          allOf:
          - $ref: '#/components/schemas/URLPath'
          - description: Matches the path from a request URL.
          title: URLPath
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeMap'
          - description: Matches attributes derived from the request.
          title: Attributes
      title: SamplingRuleUpdate
      type: object
    SamplingStatisticSummary:
      description: Aggregated request sampling data for a sampling rule across all
        services for a 10-second window.
      properties:
        RuleName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the sampling rule.
          title: RuleName
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The start time of the reporting window.
          title: Timestamp
        RequestCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of requests that matched the rule.
          title: RequestCount
        BorrowCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of requests recorded with borrowed reservoir quota.
          title: BorrowCount
        SampledCount:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The number of requests recorded.
          title: SampledCount
      title: SamplingStatisticSummary
      type: object
    SamplingTargetDocument:
      description: "Temporary changes to a sampling rule configuration. To meet the\
        \ global sampling target for a rule, X-Ray calculates a new reservoir for\
        \ each service based on the recent sampling results of all services that called\
        \ <a href=\"https://docs.aws.amazon.com/xray/latest/api/API_GetSamplingTargets.html\"\
        >GetSamplingTargets</a>."
      properties:
        RuleName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the sampling rule.
          title: RuleName
        FixedRate:
          allOf:
          - $ref: '#/components/schemas/Double'
          - description: "The percentage of matching requests to instrument, after\
              \ the reservoir is exhausted."
          title: FixedRate
        ReservoirQuota:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The number of requests per second that X-Ray allocated for
              this service.
          title: ReservoirQuota
        ReservoirQuotaTTL:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: When the reservoir quota expires.
          title: ReservoirQuotaTTL
        Interval:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The number of seconds for the service to wait before getting
              sampling targets again.
          title: Interval
      title: SamplingTargetDocument
      type: object
    SegmentId:
      type: string
    SegmentDocument:
      minLength: 1
      type: string
    Segment:
      description: "<p>A segment from a trace that has been ingested by the X-Ray\
        \ service. The segment can be compiled from documents uploaded with <a href=\"\
        https://docs.aws.amazon.com/xray/latest/api/API_PutTraceSegments.html\">PutTraceSegments</a>,\
        \ or an <code>inferred</code> segment for a downstream service, generated\
        \ from a subsegment sent by the service that called it.</p> <p>For the full\
        \ segment document schema, see <a href=\"https://docs.aws.amazon.com/xray/latest/devguide/xray-api-segmentdocuments.html\"\
        >Amazon Web Services X-Ray Segment Documents</a> in the <i>Amazon Web Services\
        \ X-Ray Developer Guide</i>.</p>"
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/SegmentId'
          - description: The segment's ID.
          title: Id
        Document:
          allOf:
          - $ref: '#/components/schemas/SegmentDocument'
          - description: The segment document.
          title: Document
      title: Segment
      type: object
    SegmentList:
      items:
        $ref: '#/components/schemas/Segment'
      type: array
    ServiceStatistics:
      description: Response statistics for a service.
      properties:
        OkCount:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          - description: The number of requests that completed with a 2xx Success
              status code.
          title: OkCount
        ErrorStatistics:
          $ref: '#/components/schemas/EdgeStatistics_ErrorStatistics'
        FaultStatistics:
          $ref: '#/components/schemas/EdgeStatistics_FaultStatistics'
        TotalCount:
          allOf:
          - $ref: '#/components/schemas/NullableLong'
          - description: The total number of completed requests.
          title: TotalCount
        TotalResponseTime:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: The aggregate response time of completed requests.
          title: TotalResponseTime
      title: ServiceStatistics
      type: object
    Service:
      description: "Information about an application that processed requests, users\
        \ that made requests, or downstream services, resources, and applications\
        \ that an application used."
      properties:
        ReferenceId:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: Identifier for the service. Unique within the service map.
          title: ReferenceId
        Name:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The canonical name of the service.
          title: Name
        Names:
          allOf:
          - $ref: '#/components/schemas/ServiceNames'
          - description: "A list of names for the service, including the canonical\
              \ name."
          title: Names
        Root:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Indicates that the service was the first service to process
              a request.
          title: Root
        AccountId:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: Identifier of the Amazon Web Services account in which the
              service runs.
          title: AccountId
        Type:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "<p>The type of service.</p> <ul> <li> <p>Amazon Web Services\
              \ Resource - The type of an Amazon Web Services resource. For example,\
              \ <code>AWS::EC2::Instance</code> for an application running on Amazon\
              \ EC2 or <code>AWS::DynamoDB::Table</code> for an Amazon DynamoDB table\
              \ that the application used.</p> </li> <li> <p>Amazon Web Services Service\
              \ - The type of an Amazon Web Services service. For example, <code>AWS::DynamoDB</code>\
              \ for downstream calls to Amazon DynamoDB that didn't target a specific\
              \ table.</p> </li> <li> <p> <code>client</code> - Represents the clients\
              \ that sent requests to a root service.</p> </li> <li> <p> <code>remote</code>\
              \ - A downstream service of indeterminate type.</p> </li> </ul>"
          title: Type
        State:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The service's state.
          title: State
        StartTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The start time of the first segment that the service generated.
          title: StartTime
        EndTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The end time of the last segment that the service generated.
          title: EndTime
        Edges:
          allOf:
          - $ref: '#/components/schemas/EdgeList'
          - description: Connections to downstream services.
          title: Edges
        SummaryStatistics:
          $ref: '#/components/schemas/Service_SummaryStatistics'
        DurationHistogram:
          allOf:
          - $ref: '#/components/schemas/Histogram'
          - description: A histogram that maps the spread of service durations.
          title: DurationHistogram
        ResponseTimeHistogram:
          allOf:
          - $ref: '#/components/schemas/Histogram'
          - description: A histogram that maps the spread of service response times.
          title: ResponseTimeHistogram
      title: Service
      type: object
    ServiceIds:
      items:
        $ref: '#/components/schemas/ServiceId'
      type: array
    TagValue:
      maxLength: 256
      minLength: 0
      type: string
    TagKeyList:
      items:
        $ref: '#/components/schemas/TagKey'
      maxItems: 200
      minItems: 0
      type: array
    TagResourceRequest:
      example:
        ResourceARN: ""
        Tags: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Number (ARN) of an X-Ray group or sampling
              rule.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagList'
          - description: "<p>A map that contains one or more tag keys and tag values\
              \ to attach to an X-Ray group or sampling rule. For more information\
              \ about ways to use tags, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
              >Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services\
              \ General Reference</i>.</p> <p>The following restrictions apply to\
              \ tags:</p> <ul> <li> <p>Maximum number of user-applied tags per resource:\
              \ 50</p> </li> <li> <p>Maximum tag key length: 128 Unicode characters</p>\
              \ </li> <li> <p>Maximum tag value length: 256 Unicode characters</p>\
              \ </li> <li> <p>Valid values for key and value: a-z, A-Z, 0-9, space,\
              \ and the following characters: _ . : / = + - and @</p> </li> <li> <p>Tag\
              \ keys and values are case sensitive.</p> </li> <li> <p>Don't use <code>aws:</code>\
              \ as a prefix for keys; it's reserved for Amazon Web Services use. You\
              \ cannot edit or delete system tags.</p> </li> </ul>"
      required:
      - ResourceARN
      - Tags
      title: TagResourceRequest
      type: object
    TimeSeriesServiceStatistics:
      description: A list of TimeSeriesStatistic structures.
      properties:
        Timestamp:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: Timestamp of the window for which statistics are aggregated.
          title: Timestamp
        EdgeSummaryStatistics:
          $ref: '#/components/schemas/EdgeStatistics'
        ServiceSummaryStatistics:
          $ref: '#/components/schemas/ServiceStatistics'
        ServiceForecastStatistics:
          $ref: '#/components/schemas/TimeSeriesServiceStatistics_ServiceForecastStatistics'
        ResponseTimeHistogram:
          allOf:
          - $ref: '#/components/schemas/Histogram'
          - description: The response time histogram for the selected entities.
          title: ResponseTimeHistogram
      title: TimeSeriesServiceStatistics
      type: object
    Trace:
      description: A collection of segment documents with matching trace IDs.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/TraceId'
          - description: The unique identifier for the request that generated the
              trace's segments and subsegments.
          title: Id
        Duration:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: The length of time in seconds between the start time of the
              root segment and the end time of the last segment that completed.
          title: Duration
        LimitExceeded:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: "LimitExceeded is set to true when the trace has exceeded\
              \ the <code>Trace document size</code> limit. For more information about\
              \ this limit and other X-Ray limits and quotas, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/xray.html\"\
              >Amazon Web Services X-Ray endpoints and quotas</a>."
          title: LimitExceeded
        Segments:
          allOf:
          - $ref: '#/components/schemas/SegmentList'
          - description: Segment documents for the segments and subsegments that comprise
              the trace.
          title: Segments
      title: Trace
      type: object
    TraceAvailabilityZones:
      items:
        $ref: '#/components/schemas/AvailabilityZoneDetail'
      type: array
    TraceInstanceIds:
      items:
        $ref: '#/components/schemas/InstanceIdDetail'
      type: array
    TraceResourceARNs:
      items:
        $ref: '#/components/schemas/ResourceARNDetail'
      type: array
    TraceUsers:
      items:
        $ref: '#/components/schemas/TraceUser'
      type: array
    TraceSummary:
      description: Metadata generated from the segment documents in a trace.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/TraceId'
          - description: The unique identifier for the request that generated the
              trace's segments and subsegments.
          title: Id
        Duration:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: The length of time in seconds between the start time of the
              root segment and the end time of the last segment that completed.
          title: Duration
        ResponseTime:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: "The length of time in seconds between the start and end\
              \ times of the root segment. If the service performs work asynchronously,\
              \ the response time measures the time before the response is sent to\
              \ the user, while the duration measures the amount of time before the\
              \ last traced activity completes."
          title: ResponseTime
        HasFault:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: The root segment document has a 500 series error.
          title: HasFault
        HasError:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: The root segment document has a 400 series error.
          title: HasError
        HasThrottle:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: One or more of the segment documents has a 429 throttling
              error.
          title: HasThrottle
        IsPartial:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: One or more of the segment documents is in progress.
          title: IsPartial
        Http:
          $ref: '#/components/schemas/TraceSummary_Http'
        Annotations:
          allOf:
          - $ref: '#/components/schemas/Annotations'
          - description: Annotations from the trace's segment documents.
          title: Annotations
        Users:
          allOf:
          - $ref: '#/components/schemas/TraceUsers'
          - description: Users from the trace's segment documents.
          title: Users
        ServiceIds:
          allOf:
          - $ref: '#/components/schemas/ServiceIds'
          - description: Service IDs from the trace's segment documents.
          title: ServiceIds
        ResourceARNs:
          allOf:
          - $ref: '#/components/schemas/TraceResourceARNs'
          - description: A list of resource ARNs for any resource corresponding to
              the trace segments.
          title: ResourceARNs
        InstanceIds:
          allOf:
          - $ref: '#/components/schemas/TraceInstanceIds'
          - description: A list of EC2 instance IDs for any instance corresponding
              to the trace segments.
          title: InstanceIds
        AvailabilityZones:
          allOf:
          - $ref: '#/components/schemas/TraceAvailabilityZones'
          - description: A list of Availability Zones for any zone corresponding to
              the trace segments.
          title: AvailabilityZones
        EntryPoint:
          $ref: '#/components/schemas/TraceSummary_EntryPoint'
        FaultRootCauses:
          allOf:
          - $ref: '#/components/schemas/FaultRootCauses'
          - description: A collection of FaultRootCause structures corresponding to
              the trace segments.
          title: FaultRootCauses
        ErrorRootCauses:
          allOf:
          - $ref: '#/components/schemas/ErrorRootCauses'
          - description: A collection of ErrorRootCause structures corresponding to
              the trace segments.
          title: ErrorRootCauses
        ResponseTimeRootCauses:
          allOf:
          - $ref: '#/components/schemas/ResponseTimeRootCauses'
          - description: A collection of ResponseTimeRootCause structures corresponding
              to the trace segments.
          title: ResponseTimeRootCauses
        Revision:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The revision number of a trace.
          title: Revision
        MatchedEventTime:
          allOf:
          - $ref: '#/components/schemas/Timestamp'
          - description: The matched time stamp of a defined event.
          title: MatchedEventTime
      title: TraceSummary
      type: object
    TraceUser:
      description: Information about a user recorded in segment documents.
      properties:
        UserName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The user's name.
          title: UserName
        ServiceIds:
          allOf:
          - $ref: '#/components/schemas/ServiceIds'
          - description: Services that the user's request hit.
          title: ServiceIds
      title: TraceUser
      type: object
    UnprocessedStatistics:
      description: Sampling statistics from a call to <a href="https://docs.aws.amazon.com/xray/latest/api/API_GetSamplingTargets.html">GetSamplingTargets</a>
        that X-Ray could not process.
      properties:
        RuleName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the sampling rule.
          title: RuleName
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error code.
          title: ErrorCode
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error message.
          title: Message
      title: UnprocessedStatistics
      type: object
    UnprocessedTraceSegment:
      description: Information about a segment that failed processing.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The segment's ID.
          title: Id
        ErrorCode:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error that caused processing to fail.
          title: ErrorCode
        Message:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The error message.
          title: Message
      title: UnprocessedTraceSegment
      type: object
    UntagResourceRequest:
      example:
        ResourceARN: ""
        TagKeys: ""
      properties:
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/AmazonResourceName'
          - description: The Amazon Resource Number (ARN) of an X-Ray group or sampling
              rule.
        TagKeys:
          allOf:
          - $ref: '#/components/schemas/TagKeyList'
          - description: Keys for one or more tags that you want to remove from an
              X-Ray group or sampling rule.
      required:
      - ResourceARN
      - TagKeys
      title: UntagResourceRequest
      type: object
    UpdateGroupRequest:
      example:
        GroupName: ""
        GroupARN: ""
        InsightsConfiguration:
          NotificationsEnabled: ""
          InsightsEnabled: ""
        FilterExpression: ""
      properties:
        GroupName:
          allOf:
          - $ref: '#/components/schemas/GroupName'
          - description: The case-sensitive name of the group.
        GroupARN:
          allOf:
          - $ref: '#/components/schemas/GroupARN'
          - description: The ARN that was generated upon creation.
        FilterExpression:
          allOf:
          - $ref: '#/components/schemas/FilterExpression'
          - description: The updated filter expression defining criteria by which
              to group traces.
        InsightsConfiguration:
          $ref: '#/components/schemas/UpdateGroupRequest_InsightsConfiguration'
      title: UpdateGroupRequest
      type: object
    UpdateSamplingRuleRequest:
      example:
        SamplingRuleUpdate:
          ResourceARN: ""
          ServiceName: ""
          HTTPMethod: ""
          Priority: ""
          ReservoirSize: ""
          ServiceType: ""
          RuleARN: ""
          URLPath: ""
          Attributes: ""
          FixedRate: ""
          Host: ""
          RuleName: ""
      properties:
        SamplingRuleUpdate:
          $ref: '#/components/schemas/UpdateSamplingRuleRequest_SamplingRuleUpdate'
      required:
      - SamplingRuleUpdate
      title: UpdateSamplingRuleRequest
      type: object
    ValueWithServiceIds:
      description: Information about a segment annotation.
      properties:
        AnnotationValue:
          $ref: '#/components/schemas/ValueWithServiceIds_AnnotationValue'
        ServiceIds:
          allOf:
          - $ref: '#/components/schemas/ServiceIds'
          - description: Services to which the annotation applies.
          title: ServiceIds
      title: ValueWithServiceIds
      type: object
    BatchGetTraces_request:
      properties:
        TraceIds:
          description: Specify the trace IDs of requests for which to retrieve segments.
          items:
            $ref: '#/components/schemas/TraceId'
          title: TraceIds
          type: array
        NextToken:
          description: Pagination token.
          title: NextToken
          type: string
      required:
      - TraceIds
      title: BatchGetTraces_request
      type: object
    CreateGroup_request_InsightsConfiguration:
      description: The structure containing configurations related to insights.
      properties:
        InsightsEnabled:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Set the InsightsEnabled value to true to enable insights
              or false to disable insights.
          title: InsightsEnabled
        NotificationsEnabled:
          allOf:
          - $ref: '#/components/schemas/NullableBoolean'
          - description: Set the NotificationsEnabled value to true to enable insights
              notifications. Notifications can only be enabled on a group with InsightsEnabled
              set to true.
          title: NotificationsEnabled
      title: CreateGroup_request_InsightsConfiguration
      type: object
    CreateGroup_request:
      properties:
        GroupName:
          description: The case-sensitive name of the new group. Default is a reserved
            name and names must be unique.
          maxLength: 32
          minLength: 1
          title: GroupName
          type: string
        FilterExpression:
          description: The filter expression defining criteria by which to group traces.
          title: FilterExpression
          type: string
        InsightsConfiguration:
          $ref: '#/components/schemas/CreateGroup_request_InsightsConfiguration'
        Tags:
          description: "<p>A map that contains one or more tag keys and tag values\
            \ to attach to an X-Ray group. For more information about ways to use\
            \ tags, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
            >Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services\
            \ General Reference</i>.</p> <p>The following restrictions apply to tags:</p>\
            \ <ul> <li> <p>Maximum number of user-applied tags per resource: 50</p>\
            \ </li> <li> <p>Maximum tag key length: 128 Unicode characters</p> </li>\
            \ <li> <p>Maximum tag value length: 256 Unicode characters</p> </li> <li>\
            \ <p>Valid values for key and value: a-z, A-Z, 0-9, space, and the following\
            \ characters: _ . : / = + - and @</p> </li> <li> <p>Tag keys and values\
            \ are case sensitive.</p> </li> <li> <p>Don't use <code>aws:</code> as\
            \ a prefix for keys; it's reserved for Amazon Web Services use.</p> </li>\
            \ </ul>"
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          title: Tags
          type: array
      required:
      - GroupName
      title: CreateGroup_request
      type: object
    CreateSamplingRule_request_SamplingRule:
      description: "A sampling rule that services use to decide whether to instrument\
        \ a request. Rule fields can match properties of the service, or properties\
        \ of a request. The service can ignore rules that don't match its properties."
      properties:
        RuleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: "The name of the sampling rule. Specify a rule by either\
              \ name or ARN, but not both."
          title: RuleName
        RuleARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The ARN of the sampling rule. Specify a rule by either name\
              \ or ARN, but not both."
          title: RuleARN
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: Matches the ARN of the Amazon Web Services resource on which
              the service runs.
          title: ResourceARN
        Priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          - description: The priority of the sampling rule.
          title: Priority
        FixedRate:
          allOf:
          - $ref: '#/components/schemas/FixedRate'
          - description: "The percentage of matching requests to instrument, after\
              \ the reservoir is exhausted."
          title: FixedRate
        ReservoirSize:
          allOf:
          - $ref: '#/components/schemas/ReservoirSize'
          - description: "A fixed number of matching requests to instrument per second,\
              \ prior to applying the fixed rate. The reservoir is not used directly\
              \ by services, but applies to all services using the rule collectively."
          title: ReservoirSize
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: Matches the <code>name</code> that the service uses to identify
              itself in segments.
          title: ServiceName
        ServiceType:
          allOf:
          - $ref: '#/components/schemas/ServiceType'
          - description: Matches the <code>origin</code> that the service uses to
              identify its type in segments.
          title: ServiceType
        Host:
          allOf:
          - $ref: '#/components/schemas/Host'
          - description: Matches the hostname from a request URL.
          title: Host
        HTTPMethod:
          allOf:
          - $ref: '#/components/schemas/HTTPMethod'
          - description: Matches the HTTP method of a request.
          title: HTTPMethod
        URLPath:
          allOf:
          - $ref: '#/components/schemas/URLPath'
          - description: Matches the path from a request URL.
          title: URLPath
        Version:
          allOf:
          - $ref: '#/components/schemas/Version'
          - description: The version of the sampling rule format (<code>1</code>).
          title: Version
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeMap'
          - description: Matches attributes derived from the request.
          title: Attributes
      title: CreateSamplingRule_request_SamplingRule
      type: object
    CreateSamplingRule_request:
      properties:
        SamplingRule:
          $ref: '#/components/schemas/CreateSamplingRule_request_SamplingRule'
        Tags:
          description: "<p>A map that contains one or more tag keys and tag values\
            \ to attach to an X-Ray sampling rule. For more information about ways\
            \ to use tags, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
            >Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services\
            \ General Reference</i>.</p> <p>The following restrictions apply to tags:</p>\
            \ <ul> <li> <p>Maximum number of user-applied tags per resource: 50</p>\
            \ </li> <li> <p>Maximum tag key length: 128 Unicode characters</p> </li>\
            \ <li> <p>Maximum tag value length: 256 Unicode characters</p> </li> <li>\
            \ <p>Valid values for key and value: a-z, A-Z, 0-9, space, and the following\
            \ characters: _ . : / = + - and @</p> </li> <li> <p>Tag keys and values\
            \ are case sensitive.</p> </li> <li> <p>Don't use <code>aws:</code> as\
            \ a prefix for keys; it's reserved for Amazon Web Services use.</p> </li>\
            \ </ul>"
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          title: Tags
          type: array
      required:
      - SamplingRule
      title: CreateSamplingRule_request
      type: object
    DeleteGroup_request:
      properties:
        GroupName:
          description: The case-sensitive name of the group.
          maxLength: 32
          minLength: 1
          title: GroupName
          type: string
        GroupARN:
          description: The ARN of the group that was generated on creation.
          maxLength: 400
          minLength: 1
          title: GroupARN
          type: string
      title: DeleteGroup_request
      type: object
    DeleteResourcePolicy_request:
      properties:
        PolicyName:
          description: The name of the resource policy to delete.
          maxLength: 128
          minLength: 1
          pattern: "[\\w+=,.@-]+"
          title: PolicyName
          type: string
        PolicyRevisionId:
          description: "Specifies a specific policy revision to delete. Provide a\
            \ <code>PolicyRevisionId</code> to ensure an atomic delete operation.\
            \ If the provided revision id does not match the latest policy revision\
            \ id, an <code>InvalidPolicyRevisionIdException</code> exception is returned. "
          title: PolicyRevisionId
          type: string
      required:
      - PolicyName
      title: DeleteResourcePolicy_request
      type: object
    DeleteSamplingRule_request:
      properties:
        RuleName:
          description: "The name of the sampling rule. Specify a rule by either name\
            \ or ARN, but not both."
          title: RuleName
          type: string
        RuleARN:
          description: "The ARN of the sampling rule. Specify a rule by either name\
            \ or ARN, but not both."
          title: RuleARN
          type: string
      title: DeleteSamplingRule_request
      type: object
    GetGroups_request:
      properties:
        NextToken:
          description: Pagination token.
          maxLength: 100
          minLength: 1
          title: NextToken
          type: string
      title: GetGroups_request
      type: object
    GetInsight_request:
      properties:
        InsightId:
          description: The insight's unique identifier. Use the GetInsightSummaries
            action to retrieve an InsightId.
          pattern: "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}"
          title: InsightId
          type: string
      required:
      - InsightId
      title: GetInsight_request
      type: object
    GetInsightEvents_request:
      properties:
        InsightId:
          description: The insight's unique identifier. Use the GetInsightSummaries
            action to retrieve an InsightId.
          pattern: "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}"
          title: InsightId
          type: string
        MaxResults:
          description: Used to retrieve at most the specified value of events.
          maximum: 50
          minimum: 1
          title: MaxResults
          type: integer
        NextToken:
          description: 'Specify the pagination token returned by a previous request
            to retrieve the next page of events. '
          maxLength: 2000
          minLength: 1
          title: NextToken
          type: string
      required:
      - InsightId
      title: GetInsightEvents_request
      type: object
    GetInsightImpactGraph_request:
      properties:
        InsightId:
          description: The insight's unique identifier. Use the GetInsightSummaries
            action to retrieve an InsightId.
          pattern: "[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[1-5][0-9a-fA-F]{3}-[89abAB][0-9a-fA-F]{3}-[0-9a-fA-F]{12}"
          title: InsightId
          type: string
        StartTime:
          description: "The estimated start time of the insight, in Unix time seconds.\
            \ The StartTime is inclusive of the value provided and can't be more than\
            \ 30 days old."
          format: date-time
          title: StartTime
          type: string
        EndTime:
          description: "The estimated end time of the insight, in Unix time seconds.\
            \ The EndTime is exclusive of the value provided. The time range between\
            \ the start time and end time can't be more than six hours. "
          format: date-time
          title: EndTime
          type: string
        NextToken:
          description: 'Specify the pagination token returned by a previous request
            to retrieve the next page of results. '
          maxLength: 2000
          minLength: 1
          title: NextToken
          type: string
      required:
      - EndTime
      - InsightId
      - StartTime
      title: GetInsightImpactGraph_request
      type: object
    GetInsightSummaries_request:
      properties:
        States:
          description: 'The list of insight states. '
          items:
            $ref: '#/components/schemas/InsightState'
          maxItems: 1
          minItems: 0
          title: States
          type: array
        GroupARN:
          description: The Amazon Resource Name (ARN) of the group. Required if the
            GroupName isn't provided.
          maxLength: 400
          minLength: 1
          title: GroupARN
          type: string
        GroupName:
          description: The name of the group. Required if the GroupARN isn't provided.
          maxLength: 32
          minLength: 1
          title: GroupName
          type: string
        StartTime:
          description: The beginning of the time frame in which the insights started.
            The start time can't be more than 30 days old.
          format: date-time
          title: StartTime
          type: string
        EndTime:
          description: The end of the time frame in which the insights ended. The
            end time can't be more than 30 days old.
          format: date-time
          title: EndTime
          type: string
        MaxResults:
          description: The maximum number of results to display.
          maximum: 100
          minimum: 1
          title: MaxResults
          type: integer
        NextToken:
          description: Pagination token.
          maxLength: 2000
          minLength: 1
          title: NextToken
          type: string
      required:
      - EndTime
      - StartTime
      title: GetInsightSummaries_request
      type: object
    GetSamplingRules_request:
      properties:
        NextToken:
          description: Pagination token.
          title: NextToken
          type: string
      title: GetSamplingRules_request
      type: object
    GetSamplingTargets_request:
      properties:
        SamplingStatisticsDocuments:
          description: Information about rules that the service is using to sample
            requests.
          items:
            $ref: '#/components/schemas/SamplingStatisticsDocument'
          maxItems: 25
          title: SamplingStatisticsDocuments
          type: array
      required:
      - SamplingStatisticsDocuments
      title: GetSamplingTargets_request
      type: object
    GetServiceGraph_request:
      properties:
        StartTime:
          description: The start of the time frame for which to generate a graph.
          format: date-time
          title: StartTime
          type: string
        EndTime:
          description: The end of the timeframe for which to generate a graph.
          format: date-time
          title: EndTime
          type: string
        GroupName:
          description: The name of a group based on which you want to generate a graph.
          maxLength: 32
          minLength: 1
          title: GroupName
          type: string
        GroupARN:
          description: The Amazon Resource Name (ARN) of a group based on which you
            want to generate a graph.
          maxLength: 400
          minLength: 1
          title: GroupARN
          type: string
        NextToken:
          description: Pagination token.
          title: NextToken
          type: string
      required:
      - EndTime
      - StartTime
      title: GetServiceGraph_request
      type: object
    GetTimeSeriesServiceStatistics_request:
      properties:
        StartTime:
          description: The start of the time frame for which to aggregate statistics.
          format: date-time
          title: StartTime
          type: string
        EndTime:
          description: The end of the time frame for which to aggregate statistics.
          format: date-time
          title: EndTime
          type: string
        GroupName:
          description: The case-sensitive name of the group for which to pull statistics
            from.
          maxLength: 32
          minLength: 1
          title: GroupName
          type: string
        GroupARN:
          description: The Amazon Resource Name (ARN) of the group for which to pull
            statistics from.
          maxLength: 400
          minLength: 1
          title: GroupARN
          type: string
        EntitySelectorExpression:
          description: "A filter expression defining entities that will be aggregated\
            \ for statistics. Supports ID, service, and edge functions. If no selector\
            \ expression is specified, edge statistics are returned. "
          maxLength: 500
          minLength: 1
          title: EntitySelectorExpression
          type: string
        Period:
          description: Aggregation period in seconds.
          title: Period
          type: integer
        ForecastStatistics:
          description: The forecasted high and low fault count values. Forecast enabled
            requests require the EntitySelectorExpression ID be provided.
          title: ForecastStatistics
          type: boolean
        NextToken:
          description: Pagination token.
          title: NextToken
          type: string
      required:
      - EndTime
      - StartTime
      title: GetTimeSeriesServiceStatistics_request
      type: object
    GetTraceGraph_request:
      properties:
        TraceIds:
          description: Trace IDs of requests for which to generate a service graph.
          items:
            $ref: '#/components/schemas/TraceId'
          title: TraceIds
          type: array
        NextToken:
          description: Pagination token.
          title: NextToken
          type: string
      required:
      - TraceIds
      title: GetTraceGraph_request
      type: object
    GetTraceSummaries_request_SamplingStrategy:
      description: The name and value of a sampling rule to apply to a trace summary.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/SamplingStrategyName'
          - description: The name of a sampling rule.
          title: Name
        Value:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: The value of a sampling rule.
          title: Value
      title: GetTraceSummaries_request_SamplingStrategy
      type: object
    GetTraceSummaries_request:
      properties:
        StartTime:
          description: The start of the time frame for which to retrieve traces.
          format: date-time
          title: StartTime
          type: string
        EndTime:
          description: The end of the time frame for which to retrieve traces.
          format: date-time
          title: EndTime
          type: string
        TimeRangeType:
          description: A parameter to indicate whether to query trace summaries by
            TraceId or Event time.
          enum:
          - TraceId
          - Event
          title: TimeRangeType
          type: string
        Sampling:
          description: Set to <code>true</code> to get summaries for only a subset
            of available traces.
          title: Sampling
          type: boolean
        SamplingStrategy:
          $ref: '#/components/schemas/GetTraceSummaries_request_SamplingStrategy'
        FilterExpression:
          description: Specify a filter expression to retrieve trace summaries for
            services or requests that meet certain requirements.
          title: FilterExpression
          type: string
        NextToken:
          description: Specify the pagination token returned by a previous request
            to retrieve the next page of results.
          title: NextToken
          type: string
      required:
      - EndTime
      - StartTime
      title: GetTraceSummaries_request
      type: object
    ListResourcePolicies_request:
      properties:
        NextToken:
          description: Not currently supported.
          maxLength: 100
          minLength: 1
          title: NextToken
          type: string
      title: ListResourcePolicies_request
      type: object
    ListTagsForResource_request:
      properties:
        ResourceARN:
          description: The Amazon Resource Number (ARN) of an X-Ray group or sampling
            rule.
          maxLength: 1011
          minLength: 1
          title: ResourceARN
          type: string
        NextToken:
          description: "A pagination token. If multiple pages of results are returned,\
            \ use the <code>NextToken</code> value returned with the current page\
            \ of results as the value of this parameter to get the next page of results."
          title: NextToken
          type: string
      required:
      - ResourceARN
      title: ListTagsForResource_request
      type: object
    PutEncryptionConfig_request:
      properties:
        KeyId:
          description: "<p>An Amazon Web Services KMS key in one of the following\
            \ formats:</p> <ul> <li> <p> <b>Alias</b> - The name of the key. For example,\
            \ <code>alias/MyKey</code>.</p> </li> <li> <p> <b>Key ID</b> - The KMS\
            \ key ID of the key. For example, <code>ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>.\
            \ Amazon Web Services X-Ray does not support asymmetric KMS keys.</p>\
            \ </li> <li> <p> <b>ARN</b> - The full Amazon Resource Name of the key\
            \ ID or alias. For example, <code>arn:aws:kms:us-east-2:123456789012:key/ae4aa6d49-a4d8-9df9-a475-4ff6d7898456</code>.\
            \ Use this format to specify a key in a different account.</p> </li> </ul>\
            \ <p>Omit this key if you set <code>Type</code> to <code>NONE</code>.</p>"
          maxLength: 3000
          minLength: 1
          title: KeyId
          type: string
        Type:
          description: The type of encryption. Set to <code>KMS</code> to use your
            own key for encryption. Set to <code>NONE</code> for default encryption.
          enum:
          - NONE
          - KMS
          title: Type
          type: string
      required:
      - Type
      title: PutEncryptionConfig_request
      type: object
    PutResourcePolicy_request:
      properties:
        PolicyName:
          description: The name of the resource policy. Must be unique within a specific
            Amazon Web Services account.
          maxLength: 128
          minLength: 1
          pattern: "[\\w+=,.@-]+"
          title: PolicyName
          type: string
        PolicyDocument:
          description: "The resource policy document, which can be up to 5kb in size."
          title: PolicyDocument
          type: string
        PolicyRevisionId:
          description: "<p>Specifies a specific policy revision, to ensure an atomic\
            \ create operation. By default the resource policy is created if it does\
            \ not exist, or updated with an incremented revision id. The revision\
            \ id is unique to each policy in the account.</p> <p>If the policy revision\
            \ id does not match the latest revision id, the operation will fail with\
            \ an <code>InvalidPolicyRevisionIdException</code> exception. You can\
            \ also provide a <code>PolicyRevisionId</code> of 0. In this case, the\
            \ operation will fail with an <code>InvalidPolicyRevisionIdException</code>\
            \ exception if a resource policy with the same name already exists. </p>"
          title: PolicyRevisionId
          type: string
        BypassPolicyLockoutCheck:
          description: <p>A flag to indicate whether to bypass the resource policy
            lockout safety check.</p> <important> <p>Setting this value to true increases
            the risk that the policy becomes unmanageable. Do not set this value to
            true indiscriminately.</p> </important> <p>Use this parameter only when
            you include a policy in the request and you intend to prevent the principal
            that is making the request from making a subsequent <code>PutResourcePolicy</code>
            request.</p> <p>The default value is false.</p>
          title: BypassPolicyLockoutCheck
          type: boolean
      required:
      - PolicyDocument
      - PolicyName
      title: PutResourcePolicy_request
      type: object
    PutTelemetryRecords_request:
      properties:
        TelemetryRecords:
          description: <p/>
          items:
            $ref: '#/components/schemas/TelemetryRecord'
          title: TelemetryRecords
          type: array
        EC2InstanceId:
          description: <p/>
          maxLength: 20
          title: EC2InstanceId
          type: string
        Hostname:
          description: <p/>
          maxLength: 255
          title: Hostname
          type: string
        ResourceARN:
          description: <p/>
          maxLength: 500
          title: ResourceARN
          type: string
      required:
      - TelemetryRecords
      title: PutTelemetryRecords_request
      type: object
    PutTraceSegments_request:
      properties:
        TraceSegmentDocuments:
          description: A string containing a JSON document defining one or more segments
            or subsegments.
          items:
            $ref: '#/components/schemas/TraceSegmentDocument'
          title: TraceSegmentDocuments
          type: array
      required:
      - TraceSegmentDocuments
      title: PutTraceSegments_request
      type: object
    TagResource_request:
      properties:
        ResourceARN:
          description: The Amazon Resource Number (ARN) of an X-Ray group or sampling
            rule.
          maxLength: 1011
          minLength: 1
          title: ResourceARN
          type: string
        Tags:
          description: "<p>A map that contains one or more tag keys and tag values\
            \ to attach to an X-Ray group or sampling rule. For more information about\
            \ ways to use tags, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/aws_tagging.html\"\
            >Tagging Amazon Web Services resources</a> in the <i>Amazon Web Services\
            \ General Reference</i>.</p> <p>The following restrictions apply to tags:</p>\
            \ <ul> <li> <p>Maximum number of user-applied tags per resource: 50</p>\
            \ </li> <li> <p>Maximum tag key length: 128 Unicode characters</p> </li>\
            \ <li> <p>Maximum tag value length: 256 Unicode characters</p> </li> <li>\
            \ <p>Valid values for key and value: a-z, A-Z, 0-9, space, and the following\
            \ characters: _ . : / = + - and @</p> </li> <li> <p>Tag keys and values\
            \ are case sensitive.</p> </li> <li> <p>Don't use <code>aws:</code> as\
            \ a prefix for keys; it's reserved for Amazon Web Services use. You cannot\
            \ edit or delete system tags.</p> </li> </ul>"
          items:
            $ref: '#/components/schemas/Tag'
          maxItems: 200
          minItems: 0
          title: Tags
          type: array
      required:
      - ResourceARN
      - Tags
      title: TagResource_request
      type: object
    UntagResource_request:
      properties:
        ResourceARN:
          description: The Amazon Resource Number (ARN) of an X-Ray group or sampling
            rule.
          maxLength: 1011
          minLength: 1
          title: ResourceARN
          type: string
        TagKeys:
          description: Keys for one or more tags that you want to remove from an X-Ray
            group or sampling rule.
          items:
            $ref: '#/components/schemas/TagKey'
          maxItems: 200
          minItems: 0
          title: TagKeys
          type: array
      required:
      - ResourceARN
      - TagKeys
      title: UntagResource_request
      type: object
    UpdateGroup_request:
      properties:
        GroupName:
          description: The case-sensitive name of the group.
          maxLength: 32
          minLength: 1
          title: GroupName
          type: string
        GroupARN:
          description: The ARN that was generated upon creation.
          maxLength: 400
          minLength: 1
          title: GroupARN
          type: string
        FilterExpression:
          description: The updated filter expression defining criteria by which to
            group traces.
          title: FilterExpression
          type: string
        InsightsConfiguration:
          $ref: '#/components/schemas/CreateGroup_request_InsightsConfiguration'
      title: UpdateGroup_request
      type: object
    UpdateSamplingRule_request_SamplingRuleUpdate:
      description: A document specifying changes to a sampling rule's configuration.
      properties:
        RuleName:
          allOf:
          - $ref: '#/components/schemas/RuleName'
          - description: "The name of the sampling rule. Specify a rule by either\
              \ name or ARN, but not both."
          title: RuleName
        RuleARN:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "The ARN of the sampling rule. Specify a rule by either name\
              \ or ARN, but not both."
          title: RuleARN
        ResourceARN:
          allOf:
          - $ref: '#/components/schemas/ResourceARN'
          - description: Matches the ARN of the Amazon Web Services resource on which
              the service runs.
          title: ResourceARN
        Priority:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: The priority of the sampling rule.
          title: Priority
        FixedRate:
          allOf:
          - $ref: '#/components/schemas/NullableDouble'
          - description: "The percentage of matching requests to instrument, after\
              \ the reservoir is exhausted."
          title: FixedRate
        ReservoirSize:
          allOf:
          - $ref: '#/components/schemas/NullableInteger'
          - description: "A fixed number of matching requests to instrument per second,\
              \ prior to applying the fixed rate. The reservoir is not used directly\
              \ by services, but applies to all services using the rule collectively."
          title: ReservoirSize
        Host:
          allOf:
          - $ref: '#/components/schemas/Host'
          - description: Matches the hostname from a request URL.
          title: Host
        ServiceName:
          allOf:
          - $ref: '#/components/schemas/ServiceName'
          - description: Matches the <code>name</code> that the service uses to identify
              itself in segments.
          title: ServiceName
        ServiceType:
          allOf:
          - $ref: '#/components/schemas/ServiceType'
          - description: Matches the <code>origin</code> that the service uses to
              identify its type in segments.
          title: ServiceType
        HTTPMethod:
          allOf:
          - $ref: '#/components/schemas/HTTPMethod'
          - description: Matches the HTTP method of a request.
          title: HTTPMethod
        URLPath:
          allOf:
          - $ref: '#/components/schemas/URLPath'
          - description: Matches the path from a request URL.
          title: URLPath
        Attributes:
          allOf:
          - $ref: '#/components/schemas/AttributeMap'
          - description: Matches attributes derived from the request.
          title: Attributes
      title: UpdateSamplingRule_request_SamplingRuleUpdate
      type: object
    UpdateSamplingRule_request:
      properties:
        SamplingRuleUpdate:
          $ref: '#/components/schemas/UpdateSamplingRule_request_SamplingRuleUpdate'
      required:
      - SamplingRuleUpdate
      title: UpdateSamplingRule_request
      type: object
    CreateGroupResult_Group:
      allOf:
      - $ref: '#/components/schemas/Group'
      - description: "The group that was created. Contains the name of the group that\
          \ was created, the Amazon Resource Name (ARN) of the group that was generated\
          \ based on the group name, the filter expression, and the insight configuration\
          \ that was assigned to the group."
      example:
        GroupName: ""
        GroupARN: ""
        InsightsConfiguration:
          NotificationsEnabled: ""
          InsightsEnabled: ""
        FilterExpression: ""
      title: CreateGroupResult_Group
    CreateSamplingRuleResult_SamplingRuleRecord:
      allOf:
      - $ref: '#/components/schemas/SamplingRuleRecord'
      - description: The saved rule definition and metadata.
      example:
        ModifiedAt: ""
        CreatedAt: ""
        SamplingRule:
          Priority: ""
          ReservoirSize: ""
          RuleARN: ""
          URLPath: ""
          Attributes: ""
          FixedRate: ""
          Host: ""
          ResourceARN: ""
          ServiceName: ""
          HTTPMethod: ""
          Version: ""
          ServiceType: ""
          RuleName: ""
      title: CreateSamplingRuleResult_SamplingRuleRecord
    DeleteSamplingRuleResult_SamplingRuleRecord:
      allOf:
      - $ref: '#/components/schemas/SamplingRuleRecord'
      - description: The deleted rule definition and metadata.
      example:
        ModifiedAt: ""
        CreatedAt: ""
        SamplingRule:
          Priority: ""
          ReservoirSize: ""
          RuleARN: ""
          URLPath: ""
          Attributes: ""
          FixedRate: ""
          Host: ""
          ResourceARN: ""
          ServiceName: ""
          HTTPMethod: ""
          Version: ""
          ServiceType: ""
          RuleName: ""
      title: DeleteSamplingRuleResult_SamplingRuleRecord
    GetEncryptionConfigResult_EncryptionConfig:
      allOf:
      - $ref: '#/components/schemas/EncryptionConfig'
      - description: The encryption configuration document.
      example:
        Status: ""
        Type: ""
        KeyId: ""
      title: GetEncryptionConfigResult_EncryptionConfig
    GetGroupResult_Group:
      allOf:
      - $ref: '#/components/schemas/Group'
      - description: "The group that was requested. Contains the name of the group,\
          \ the ARN of the group, the filter expression, and the insight configuration\
          \ assigned to the group."
      example:
        GroupName: ""
        GroupARN: ""
        InsightsConfiguration:
          NotificationsEnabled: ""
          InsightsEnabled: ""
        FilterExpression: ""
      title: GetGroupResult_Group
    GetInsightResult_Insight:
      allOf:
      - $ref: '#/components/schemas/Insight'
      - description: The summary information of an insight.
      example:
        GroupName: ""
        EndTime: ""
        Categories: ""
        GroupARN: ""
        State: ""
        RootCauseServiceRequestImpactStatistics:
          TotalCount: ""
          OkCount: ""
          FaultCount: ""
        ClientRequestImpactStatistics:
          TotalCount: ""
          OkCount: ""
          FaultCount: ""
        StartTime: ""
        InsightId: ""
        Summary: ""
        RootCauseServiceId:
          Names: ""
          Type: ""
          AccountId: ""
          Name: ""
        TopAnomalousServices: ""
      title: GetInsightResult_Insight
    PutEncryptionConfigResult_EncryptionConfig:
      allOf:
      - $ref: '#/components/schemas/EncryptionConfig'
      - description: The new encryption configuration.
      example:
        Status: ""
        Type: ""
        KeyId: ""
      title: PutEncryptionConfigResult_EncryptionConfig
    PutResourcePolicyResult_ResourcePolicy:
      allOf:
      - $ref: '#/components/schemas/ResourcePolicy'
      - description: "The resource policy document, as provided in the <code>PutResourcePolicyRequest</code>."
      example:
        PolicyRevisionId: ""
        PolicyName: ""
        PolicyDocument: ""
        LastUpdatedTime: ""
      title: PutResourcePolicyResult_ResourcePolicy
    TelemetryRecord_BackendConnectionErrors:
      allOf:
      - $ref: '#/components/schemas/BackendConnectionErrors'
      - description: <p/>
      title: TelemetryRecord_BackendConnectionErrors
    UpdateGroupResult_Group:
      allOf:
      - $ref: '#/components/schemas/Group'
      - description: "The group that was updated. Contains the name of the group that\
          \ was updated, the ARN of the group that was updated, the updated filter\
          \ expression, and the updated insight configuration assigned to the group."
      example:
        GroupName: ""
        GroupARN: ""
        InsightsConfiguration:
          NotificationsEnabled: ""
          InsightsEnabled: ""
        FilterExpression: ""
      title: UpdateGroupResult_Group
    UpdateSamplingRuleResult_SamplingRuleRecord:
      allOf:
      - $ref: '#/components/schemas/SamplingRuleRecord'
      - description: The updated rule definition and metadata.
      example:
        ModifiedAt: ""
        CreatedAt: ""
        SamplingRule:
          Priority: ""
          ReservoirSize: ""
          RuleARN: ""
          URLPath: ""
          Attributes: ""
          FixedRate: ""
          Host: ""
          ResourceARN: ""
          ServiceName: ""
          HTTPMethod: ""
          Version: ""
          ServiceType: ""
          RuleName: ""
      title: UpdateSamplingRuleResult_SamplingRuleRecord
    CreateGroupRequest_InsightsConfiguration:
      allOf:
      - $ref: '#/components/schemas/InsightsConfiguration'
      - description: <p>The structure containing configurations related to insights.</p>
          <ul> <li> <p>The InsightsEnabled boolean can be set to true to enable insights
          for the new group or false to disable insights for the new group.</p> </li>
          <li> <p>The NotificationsEnabled boolean can be set to true to enable insights
          notifications for the new group. Notifications may only be enabled on a
          group with InsightsEnabled set to true.</p> </li> </ul>
      example:
        NotificationsEnabled: ""
        InsightsEnabled: ""
      title: CreateGroupRequest_InsightsConfiguration
    Group_InsightsConfiguration:
      allOf:
      - $ref: '#/components/schemas/InsightsConfiguration'
      - description: <p>The structure containing configurations related to insights.</p>
          <ul> <li> <p>The InsightsEnabled boolean can be set to true to enable insights
          for the group or false to disable insights for the group.</p> </li> <li>
          <p>The NotificationsEnabled boolean can be set to true to enable insights
          notifications through Amazon EventBridge for the group.</p> </li> </ul>
      example:
        NotificationsEnabled: ""
        InsightsEnabled: ""
      title: Group_InsightsConfiguration
    CreateSamplingRuleRequest_SamplingRule:
      allOf:
      - $ref: '#/components/schemas/SamplingRule'
      - description: The rule definition.
      example:
        Priority: ""
        ReservoirSize: ""
        RuleARN: ""
        URLPath: ""
        Attributes: ""
        FixedRate: ""
        Host: ""
        ResourceARN: ""
        ServiceName: ""
        HTTPMethod: ""
        Version: ""
        ServiceType: ""
        RuleName: ""
      title: CreateSamplingRuleRequest_SamplingRule
    SamplingRuleRecord_SamplingRule:
      allOf:
      - $ref: '#/components/schemas/SamplingRule'
      - description: The sampling rule.
      example:
        Priority: ""
        ReservoirSize: ""
        RuleARN: ""
        URLPath: ""
        Attributes: ""
        FixedRate: ""
        Host: ""
        ResourceARN: ""
        ServiceName: ""
        HTTPMethod: ""
        Version: ""
        ServiceType: ""
        RuleName: ""
      title: SamplingRuleRecord_SamplingRule
    EdgeStatistics_ErrorStatistics:
      allOf:
      - $ref: '#/components/schemas/ErrorStatistics'
      - description: Information about requests that failed with a 4xx Client Error
          status code.
      title: EdgeStatistics_ErrorStatistics
    EdgeStatistics_FaultStatistics:
      allOf:
      - $ref: '#/components/schemas/FaultStatistics'
      - description: Information about requests that failed with a 5xx Server Error
          status code.
      title: EdgeStatistics_FaultStatistics
    Edge_SummaryStatistics:
      allOf:
      - $ref: '#/components/schemas/EdgeStatistics'
      - description: Response statistics for segments on the edge.
      title: Edge_SummaryStatistics
    Insight_ClientRequestImpactStatistics:
      allOf:
      - $ref: '#/components/schemas/RequestImpactStatistics'
      - description: The impact statistics of the client side service. This includes
          the number of requests to the client service and whether the requests were
          faults or okay.
      example:
        TotalCount: ""
        OkCount: ""
        FaultCount: ""
      title: Insight_ClientRequestImpactStatistics
    Insight_RootCauseServiceRequestImpactStatistics:
      allOf:
      - $ref: '#/components/schemas/RequestImpactStatistics'
      - description: The impact statistics of the root cause service. This includes
          the number of requests to the client service and whether the requests were
          faults or okay.
      example:
        TotalCount: ""
        OkCount: ""
        FaultCount: ""
      title: Insight_RootCauseServiceRequestImpactStatistics
    GetTraceSummariesRequest_SamplingStrategy:
      allOf:
      - $ref: '#/components/schemas/SamplingStrategy'
      - description: A parameter to indicate whether to enable sampling on trace summaries.
          Input parameters are Name and Value.
      example:
        Value: ""
        Name: ""
      title: GetTraceSummariesRequest_SamplingStrategy
    GroupSummary_InsightsConfiguration:
      allOf:
      - $ref: '#/components/schemas/InsightsConfiguration'
      - description: <p>The structure containing configurations related to insights.</p>
          <ul> <li> <p>The InsightsEnabled boolean can be set to true to enable insights
          for the group or false to disable insights for the group.</p> </li> <li>
          <p>The NotificationsEnabled boolean can be set to true to enable insights
          notifications. Notifications can only be enabled on a group with InsightsEnabled
          set to true.</p> </li> </ul>
      title: GroupSummary_InsightsConfiguration
    InsightSummary_ClientRequestImpactStatistics:
      allOf:
      - $ref: '#/components/schemas/RequestImpactStatistics'
      - description: 'The impact statistics of the client side service. This includes
          the number of requests to the client service and whether the requests were
          faults or okay. '
      title: InsightSummary_ClientRequestImpactStatistics
    InsightSummary_RootCauseServiceRequestImpactStatistics:
      allOf:
      - $ref: '#/components/schemas/RequestImpactStatistics'
      - description: 'The impact statistics of the root cause service. This includes
          the number of requests to the client service and whether the requests were
          faults or okay. '
      title: InsightSummary_RootCauseServiceRequestImpactStatistics
    Service_SummaryStatistics:
      allOf:
      - $ref: '#/components/schemas/ServiceStatistics'
      - description: Aggregated statistics for the service.
      title: Service_SummaryStatistics
    TimeSeriesServiceStatistics_ServiceForecastStatistics:
      allOf:
      - $ref: '#/components/schemas/ForecastStatistics'
      - description: The forecasted high and low fault count values.
      title: TimeSeriesServiceStatistics_ServiceForecastStatistics
    TraceSummary_Http:
      allOf:
      - $ref: '#/components/schemas/Http'
      - description: Information about the HTTP request served by the trace.
      title: TraceSummary_Http
    TraceSummary_EntryPoint:
      allOf:
      - $ref: '#/components/schemas/ServiceId'
      - description: The root of a trace.
      title: TraceSummary_EntryPoint
    UpdateGroupRequest_InsightsConfiguration:
      allOf:
      - $ref: '#/components/schemas/InsightsConfiguration'
      - description: <p>The structure containing configurations related to insights.</p>
          <ul> <li> <p>The InsightsEnabled boolean can be set to true to enable insights
          for the group or false to disable insights for the group.</p> </li> <li>
          <p>The NotificationsEnabled boolean can be set to true to enable insights
          notifications for the group. Notifications can only be enabled on a group
          with InsightsEnabled set to true.</p> </li> </ul>
      example:
        NotificationsEnabled: ""
        InsightsEnabled: ""
      title: UpdateGroupRequest_InsightsConfiguration
    UpdateSamplingRuleRequest_SamplingRuleUpdate:
      allOf:
      - $ref: '#/components/schemas/SamplingRuleUpdate'
      - description: The rule and fields to change.
      example:
        ResourceARN: ""
        ServiceName: ""
        HTTPMethod: ""
        Priority: ""
        ReservoirSize: ""
        ServiceType: ""
        RuleARN: ""
        URLPath: ""
        Attributes: ""
        FixedRate: ""
        Host: ""
        RuleName: ""
      title: UpdateSamplingRuleRequest_SamplingRuleUpdate
    ValueWithServiceIds_AnnotationValue:
      allOf:
      - $ref: '#/components/schemas/AnnotationValue'
      - description: Values of the annotation.
      title: ValueWithServiceIds_AnnotationValue
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
