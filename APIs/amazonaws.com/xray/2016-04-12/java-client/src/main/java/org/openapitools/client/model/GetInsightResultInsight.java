/*
 * AWS X-Ray
 * Amazon Web Services X-Ray provides APIs for managing debug traces and retrieving service maps and other data created by processing those traces.
 *
 * The version of the OpenAPI document: 2016-04-12
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.InsightClientRequestImpactStatistics;
import org.openapitools.client.model.InsightRootCauseServiceRequestImpactStatistics;
import org.openapitools.client.model.InsightState;
import org.openapitools.client.model.ServiceId;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetInsightResultInsight
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:01:52.416359-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetInsightResultInsight {
  public static final String SERIALIZED_NAME_INSIGHT_ID = "InsightId";
  @SerializedName(SERIALIZED_NAME_INSIGHT_ID)
  private String insightId;

  public static final String SERIALIZED_NAME_GROUP_A_R_N = "GroupARN";
  @SerializedName(SERIALIZED_NAME_GROUP_A_R_N)
  private String groupARN;

  public static final String SERIALIZED_NAME_GROUP_NAME = "GroupName";
  @SerializedName(SERIALIZED_NAME_GROUP_NAME)
  private String groupName;

  public static final String SERIALIZED_NAME_ROOT_CAUSE_SERVICE_ID = "RootCauseServiceId";
  @SerializedName(SERIALIZED_NAME_ROOT_CAUSE_SERVICE_ID)
  private ServiceId rootCauseServiceId;

  public static final String SERIALIZED_NAME_CATEGORIES = "Categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List categories;

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private InsightState state;

  public static final String SERIALIZED_NAME_START_TIME = "StartTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_END_TIME = "EndTime";
  @SerializedName(SERIALIZED_NAME_END_TIME)
  private OffsetDateTime endTime;

  public static final String SERIALIZED_NAME_SUMMARY = "Summary";
  @SerializedName(SERIALIZED_NAME_SUMMARY)
  private String summary;

  public static final String SERIALIZED_NAME_CLIENT_REQUEST_IMPACT_STATISTICS = "ClientRequestImpactStatistics";
  @SerializedName(SERIALIZED_NAME_CLIENT_REQUEST_IMPACT_STATISTICS)
  private InsightClientRequestImpactStatistics clientRequestImpactStatistics;

  public static final String SERIALIZED_NAME_ROOT_CAUSE_SERVICE_REQUEST_IMPACT_STATISTICS = "RootCauseServiceRequestImpactStatistics";
  @SerializedName(SERIALIZED_NAME_ROOT_CAUSE_SERVICE_REQUEST_IMPACT_STATISTICS)
  private InsightRootCauseServiceRequestImpactStatistics rootCauseServiceRequestImpactStatistics;

  public static final String SERIALIZED_NAME_TOP_ANOMALOUS_SERVICES = "TopAnomalousServices";
  @SerializedName(SERIALIZED_NAME_TOP_ANOMALOUS_SERVICES)
  private List topAnomalousServices;

  public GetInsightResultInsight() {
  }

  public GetInsightResultInsight insightId(String insightId) {
    this.insightId = insightId;
    return this;
  }

  /**
   * Get insightId
   * @return insightId
   */
  @javax.annotation.Nullable
  public String getInsightId() {
    return insightId;
  }

  public void setInsightId(String insightId) {
    this.insightId = insightId;
  }


  public GetInsightResultInsight groupARN(String groupARN) {
    this.groupARN = groupARN;
    return this;
  }

  /**
   * Get groupARN
   * @return groupARN
   */
  @javax.annotation.Nullable
  public String getGroupARN() {
    return groupARN;
  }

  public void setGroupARN(String groupARN) {
    this.groupARN = groupARN;
  }


  public GetInsightResultInsight groupName(String groupName) {
    this.groupName = groupName;
    return this;
  }

  /**
   * Get groupName
   * @return groupName
   */
  @javax.annotation.Nullable
  public String getGroupName() {
    return groupName;
  }

  public void setGroupName(String groupName) {
    this.groupName = groupName;
  }


  public GetInsightResultInsight rootCauseServiceId(ServiceId rootCauseServiceId) {
    this.rootCauseServiceId = rootCauseServiceId;
    return this;
  }

  /**
   * Get rootCauseServiceId
   * @return rootCauseServiceId
   */
  @javax.annotation.Nullable
  public ServiceId getRootCauseServiceId() {
    return rootCauseServiceId;
  }

  public void setRootCauseServiceId(ServiceId rootCauseServiceId) {
    this.rootCauseServiceId = rootCauseServiceId;
  }


  public GetInsightResultInsight categories(List categories) {
    this.categories = categories;
    return this;
  }

  /**
   * Get categories
   * @return categories
   */
  @javax.annotation.Nullable
  public List getCategories() {
    return categories;
  }

  public void setCategories(List categories) {
    this.categories = categories;
  }


  public GetInsightResultInsight state(InsightState state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public InsightState getState() {
    return state;
  }

  public void setState(InsightState state) {
    this.state = state;
  }


  public GetInsightResultInsight startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public GetInsightResultInsight endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

  /**
   * Get endTime
   * @return endTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  public GetInsightResultInsight summary(String summary) {
    this.summary = summary;
    return this;
  }

  /**
   * Get summary
   * @return summary
   */
  @javax.annotation.Nullable
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }


  public GetInsightResultInsight clientRequestImpactStatistics(InsightClientRequestImpactStatistics clientRequestImpactStatistics) {
    this.clientRequestImpactStatistics = clientRequestImpactStatistics;
    return this;
  }

  /**
   * Get clientRequestImpactStatistics
   * @return clientRequestImpactStatistics
   */
  @javax.annotation.Nullable
  public InsightClientRequestImpactStatistics getClientRequestImpactStatistics() {
    return clientRequestImpactStatistics;
  }

  public void setClientRequestImpactStatistics(InsightClientRequestImpactStatistics clientRequestImpactStatistics) {
    this.clientRequestImpactStatistics = clientRequestImpactStatistics;
  }


  public GetInsightResultInsight rootCauseServiceRequestImpactStatistics(InsightRootCauseServiceRequestImpactStatistics rootCauseServiceRequestImpactStatistics) {
    this.rootCauseServiceRequestImpactStatistics = rootCauseServiceRequestImpactStatistics;
    return this;
  }

  /**
   * Get rootCauseServiceRequestImpactStatistics
   * @return rootCauseServiceRequestImpactStatistics
   */
  @javax.annotation.Nullable
  public InsightRootCauseServiceRequestImpactStatistics getRootCauseServiceRequestImpactStatistics() {
    return rootCauseServiceRequestImpactStatistics;
  }

  public void setRootCauseServiceRequestImpactStatistics(InsightRootCauseServiceRequestImpactStatistics rootCauseServiceRequestImpactStatistics) {
    this.rootCauseServiceRequestImpactStatistics = rootCauseServiceRequestImpactStatistics;
  }


  public GetInsightResultInsight topAnomalousServices(List topAnomalousServices) {
    this.topAnomalousServices = topAnomalousServices;
    return this;
  }

  /**
   * Get topAnomalousServices
   * @return topAnomalousServices
   */
  @javax.annotation.Nullable
  public List getTopAnomalousServices() {
    return topAnomalousServices;
  }

  public void setTopAnomalousServices(List topAnomalousServices) {
    this.topAnomalousServices = topAnomalousServices;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetInsightResultInsight getInsightResultInsight = (GetInsightResultInsight) o;
    return Objects.equals(this.insightId, getInsightResultInsight.insightId) &&
        Objects.equals(this.groupARN, getInsightResultInsight.groupARN) &&
        Objects.equals(this.groupName, getInsightResultInsight.groupName) &&
        Objects.equals(this.rootCauseServiceId, getInsightResultInsight.rootCauseServiceId) &&
        Objects.equals(this.categories, getInsightResultInsight.categories) &&
        Objects.equals(this.state, getInsightResultInsight.state) &&
        Objects.equals(this.startTime, getInsightResultInsight.startTime) &&
        Objects.equals(this.endTime, getInsightResultInsight.endTime) &&
        Objects.equals(this.summary, getInsightResultInsight.summary) &&
        Objects.equals(this.clientRequestImpactStatistics, getInsightResultInsight.clientRequestImpactStatistics) &&
        Objects.equals(this.rootCauseServiceRequestImpactStatistics, getInsightResultInsight.rootCauseServiceRequestImpactStatistics) &&
        Objects.equals(this.topAnomalousServices, getInsightResultInsight.topAnomalousServices);
  }

  @Override
  public int hashCode() {
    return Objects.hash(insightId, groupARN, groupName, rootCauseServiceId, categories, state, startTime, endTime, summary, clientRequestImpactStatistics, rootCauseServiceRequestImpactStatistics, topAnomalousServices);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetInsightResultInsight {\n");
    sb.append("    insightId: ").append(toIndentedString(insightId)).append("\n");
    sb.append("    groupARN: ").append(toIndentedString(groupARN)).append("\n");
    sb.append("    groupName: ").append(toIndentedString(groupName)).append("\n");
    sb.append("    rootCauseServiceId: ").append(toIndentedString(rootCauseServiceId)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    clientRequestImpactStatistics: ").append(toIndentedString(clientRequestImpactStatistics)).append("\n");
    sb.append("    rootCauseServiceRequestImpactStatistics: ").append(toIndentedString(rootCauseServiceRequestImpactStatistics)).append("\n");
    sb.append("    topAnomalousServices: ").append(toIndentedString(topAnomalousServices)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("InsightId");
    openapiFields.add("GroupARN");
    openapiFields.add("GroupName");
    openapiFields.add("RootCauseServiceId");
    openapiFields.add("Categories");
    openapiFields.add("State");
    openapiFields.add("StartTime");
    openapiFields.add("EndTime");
    openapiFields.add("Summary");
    openapiFields.add("ClientRequestImpactStatistics");
    openapiFields.add("RootCauseServiceRequestImpactStatistics");
    openapiFields.add("TopAnomalousServices");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetInsightResultInsight
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetInsightResultInsight.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetInsightResultInsight is not found in the empty JSON string", GetInsightResultInsight.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetInsightResultInsight.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetInsightResultInsight` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `InsightId`
      if (jsonObj.get("InsightId") != null && !jsonObj.get("InsightId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("InsightId"));
      }
      // validate the optional field `GroupARN`
      if (jsonObj.get("GroupARN") != null && !jsonObj.get("GroupARN").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("GroupARN"));
      }
      // validate the optional field `GroupName`
      if (jsonObj.get("GroupName") != null && !jsonObj.get("GroupName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("GroupName"));
      }
      // validate the optional field `RootCauseServiceId`
      if (jsonObj.get("RootCauseServiceId") != null && !jsonObj.get("RootCauseServiceId").isJsonNull()) {
        ServiceId.validateJsonElement(jsonObj.get("RootCauseServiceId"));
      }
      // validate the optional field `Categories`
      if (jsonObj.get("Categories") != null && !jsonObj.get("Categories").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("Categories"));
      }
      // validate the optional field `State`
      if (jsonObj.get("State") != null && !jsonObj.get("State").isJsonNull()) {
        InsightState.validateJsonElement(jsonObj.get("State"));
      }
      // validate the optional field `StartTime`
      if (jsonObj.get("StartTime") != null && !jsonObj.get("StartTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("StartTime"));
      }
      // validate the optional field `EndTime`
      if (jsonObj.get("EndTime") != null && !jsonObj.get("EndTime").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("EndTime"));
      }
      // validate the optional field `Summary`
      if (jsonObj.get("Summary") != null && !jsonObj.get("Summary").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Summary"));
      }
      // validate the optional field `ClientRequestImpactStatistics`
      if (jsonObj.get("ClientRequestImpactStatistics") != null && !jsonObj.get("ClientRequestImpactStatistics").isJsonNull()) {
        InsightClientRequestImpactStatistics.validateJsonElement(jsonObj.get("ClientRequestImpactStatistics"));
      }
      // validate the optional field `RootCauseServiceRequestImpactStatistics`
      if (jsonObj.get("RootCauseServiceRequestImpactStatistics") != null && !jsonObj.get("RootCauseServiceRequestImpactStatistics").isJsonNull()) {
        InsightRootCauseServiceRequestImpactStatistics.validateJsonElement(jsonObj.get("RootCauseServiceRequestImpactStatistics"));
      }
      // validate the optional field `TopAnomalousServices`
      if (jsonObj.get("TopAnomalousServices") != null && !jsonObj.get("TopAnomalousServices").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("TopAnomalousServices"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetInsightResultInsight.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetInsightResultInsight' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetInsightResultInsight> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetInsightResultInsight.class));

       return (TypeAdapter<T>) new TypeAdapter<GetInsightResultInsight>() {
           @Override
           public void write(JsonWriter out, GetInsightResultInsight value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetInsightResultInsight read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetInsightResultInsight given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetInsightResultInsight
   * @throws IOException if the JSON string is invalid with respect to GetInsightResultInsight
   */
  public static GetInsightResultInsight fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetInsightResultInsight.class);
  }

  /**
   * Convert an instance of GetInsightResultInsight to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

