# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.job_event_type import JobEventType
from openapi_server import util


class JobEventDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, event_type: JobEventType=None, message: str=None, time_of_event: datetime=None):
        """JobEventDetails - a model defined in OpenAPI

        :param event_type: The event_type of this JobEventDetails.
        :param message: The message of this JobEventDetails.
        :param time_of_event: The time_of_event of this JobEventDetails.
        """
        self.openapi_types = {
            'event_type': JobEventType,
            'message': str,
            'time_of_event': datetime
        }

        self.attribute_map = {
            'event_type': 'eventType',
            'message': 'message',
            'time_of_event': 'timeOfEvent'
        }

        self._event_type = event_type
        self._message = message
        self._time_of_event = time_of_event

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobEventDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobEventDetails of this JobEventDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def event_type(self):
        """Gets the event_type of this JobEventDetails.


        :return: The event_type of this JobEventDetails.
        :rtype: JobEventType
        """
        return self._event_type

    @event_type.setter
    def event_type(self, event_type):
        """Sets the event_type of this JobEventDetails.


        :param event_type: The event_type of this JobEventDetails.
        :type event_type: JobEventType
        """

        self._event_type = event_type

    @property
    def message(self):
        """Gets the message of this JobEventDetails.


        :return: The message of this JobEventDetails.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this JobEventDetails.


        :param message: The message of this JobEventDetails.
        :type message: str
        """

        self._message = message

    @property
    def time_of_event(self):
        """Gets the time_of_event of this JobEventDetails.


        :return: The time_of_event of this JobEventDetails.
        :rtype: datetime
        """
        return self._time_of_event

    @time_of_event.setter
    def time_of_event(self, time_of_event):
        """Sets the time_of_event of this JobEventDetails.


        :param time_of_event: The time_of_event of this JobEventDetails.
        :type time_of_event: datetime
        """

        self._time_of_event = time_of_event
