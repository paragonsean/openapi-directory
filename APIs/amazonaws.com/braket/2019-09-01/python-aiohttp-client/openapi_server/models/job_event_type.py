# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JobEventType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    WAITING_FOR_PRIORITY = 'WAITING_FOR_PRIORITY'
    QUEUED_FOR_EXECUTION = 'QUEUED_FOR_EXECUTION'
    STARTING_INSTANCE = 'STARTING_INSTANCE'
    DOWNLOADING_DATA = 'DOWNLOADING_DATA'
    RUNNING = 'RUNNING'
    DEPRIORITIZED_DUE_TO_INACTIVITY = 'DEPRIORITIZED_DUE_TO_INACTIVITY'
    UPLOADING_RESULTS = 'UPLOADING_RESULTS'
    COMPLETED = 'COMPLETED'
    FAILED = 'FAILED'
    MAX_RUNTIME_EXCEEDED = 'MAX_RUNTIME_EXCEEDED'
    CANCELLED = 'CANCELLED'

    def __init__(self):
        """JobEventType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobEventType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobEventType of this JobEventType.
        """
        return util.deserialize_model(dikt, cls)
