openapi: 3.0.0
info:
  contact:
    email: mike.ralphson@gmail.com
    name: Mike Ralphson
    url: https://github.com/mermade/aws2openapi
    x-twitter: PermittedSoc
  description: <p>The Amazon Braket API Reference provides information about the operations
    and structures supported in Amazon Braket.</p> <p>Additional Resources:</p> <ul>
    <li> <p> <a href="https://docs.aws.amazon.com/braket/latest/developerguide/what-is-braket.html">Amazon
    Braket Developer Guide</a> </p> </li> </ul>
  license:
    name: Apache 2.0 License
    url: http://www.apache.org/licenses/
  termsOfService: https://aws.amazon.com/service-terms/
  title: Braket
  version: 2019-09-01
  x-release: v4
  x-logo:
    url: https://twitter.com/awscloud/profile_image?size=original
    backgroundColor: '#FFFFFF'
  x-providerName: amazonaws.com
  x-serviceName: braket
  x-aws-signingName: braket
  x-origin:
  - contentType: application/json
    url: https://raw.githubusercontent.com/aws/aws-sdk-js/master/apis/braket-2019-09-01.normal.json
    converter:
      url: https://github.com/mermade/aws2openapi
      version: 1.0.0
    x-apisguru-driver: external
  x-apiClientRegistration:
    url: https://portal.aws.amazon.com/gp/aws/developer/registration/index.html?nc2=h_ct
  x-apisguru-categories:
  - cloud
  x-preferred: true
externalDocs:
  description: Amazon Web Services documentation
  url: https://docs.aws.amazon.com/braket/
servers:
- description: The Braket multi-region endpoint
  url: "http://braket.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Braket multi-region endpoint
  url: "https://braket.{region}.amazonaws.com"
  variables:
    region:
      default: us-east-1
      description: The AWS region
      enum:
      - us-east-1
      - us-east-2
      - us-west-1
      - us-west-2
      - us-gov-west-1
      - us-gov-east-1
      - ca-central-1
      - eu-north-1
      - eu-west-1
      - eu-west-2
      - eu-west-3
      - eu-central-1
      - eu-south-1
      - af-south-1
      - ap-northeast-1
      - ap-northeast-2
      - ap-northeast-3
      - ap-southeast-1
      - ap-southeast-2
      - ap-east-1
      - ap-south-1
      - sa-east-1
      - me-south-1
- description: The Braket endpoint for China (Beijing) and China (Ningxia)
  url: "http://braket.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
- description: The Braket endpoint for China (Beijing) and China (Ningxia)
  url: "https://braket.{region}.amazonaws.com.cn"
  variables:
    region:
      default: cn-north-1
      description: The AWS region
      enum:
      - cn-north-1
      - cn-northwest-1
security:
- hmac: []
paths:
  /device/{deviceArn}:
    get:
      description: "<p>Retrieves the devices available in Amazon Braket.</p> <note>\
        \ <p>For backwards compatibility with older versions of BraketSchemas, OpenQASM\
        \ information is omitted from GetDevice API calls. To get this information\
        \ the user-agent needs to present a recent version of the BraketSchemas (1.8.0\
        \ or later). The Braket SDK automatically reports this for you. If you do\
        \ not see OpenQASM results in the GetDevice response when using a Braket SDK,\
        \ you may need to set AWS_EXECUTION_ENV environment variable to configure\
        \ user-agent. See the code examples provided below for how to do this for\
        \ the AWS CLI, Boto3, and the Go, Java, and JavaScript/TypeScript SDKs.</p>\
        \ </note>"
      operationId: get_device
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the device to retrieve.
        explode: false
        in: path
        name: deviceArn
        required: true
        schema:
          maxLength: 256
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetDeviceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /devices:
    post:
      description: Searches for devices using the specified filters.
      operationId: search_devices
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchDevices_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchDevicesResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /job:
    post:
      description: Creates an Amazon Braket job.
      operationId: create_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateJob_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceRetiredException'
          description: DeviceRetiredException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /job/{jobArn}:
    get:
      description: Retrieves the specified Amazon Braket job.
      operationId: get_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the job to retrieve.
        explode: false
        in: path
        name: jobArn
        required: true
        schema:
          pattern: "^arn:aws[a-z\\-]*:braket:[a-z0-9\\-]*:[0-9]{12}:job/.*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /job/{jobArn}/cancel:
    put:
      description: Cancels an Amazon Braket job.
      operationId: cancel_job
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the Amazon Braket job to cancel.
        explode: false
        in: path
        name: jobArn
        required: true
        schema:
          pattern: "^arn:aws[a-z\\-]*:braket:[a-z0-9\\-]*:[0-9]{12}:job/.*$"
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelJobResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /jobs:
    post:
      description: Searches for Amazon Braket jobs that match the specified filter
        values.
      operationId: search_jobs
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchJobs_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchJobsResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /quantum-task:
    post:
      description: Creates a quantum task.
      operationId: create_quantum_task
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuantumTask_request'
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateQuantumTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceOfflineException'
          description: DeviceOfflineException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceRetiredException'
          description: DeviceRetiredException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceQuotaExceededException'
          description: ServiceQuotaExceededException
        "486":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /quantum-task/{quantumTaskArn}:
    get:
      description: Retrieves the specified quantum task.
      operationId: get_quantum_task
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: the ARN of the task to retrieve.
        explode: false
        in: path
        name: quantumTaskArn
        required: true
        schema:
          maxLength: 256
          minLength: 1
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetQuantumTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /quantum-task/{quantumTaskArn}/cancel:
    put:
      description: Cancels the specified task.
      operationId: cancel_quantum_task
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: The ARN of the task to cancel.
        explode: false
        in: path
        name: quantumTaskArn
        required: true
        schema:
          maxLength: 256
          minLength: 1
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelQuantumTask_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelQuantumTaskResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConflictException'
          description: ConflictException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "484":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "485":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /quantum-tasks:
    post:
      description: Searches for tasks that match the specified filter values.
      operationId: search_quantum_tasks
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: maxResults
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: nextToken
        required: false
        schema:
          type: string
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchQuantumTasks_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchQuantumTasksResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccessDeniedException'
          description: AccessDeniedException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThrottlingException'
          description: ThrottlingException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "483":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}:
    get:
      description: Shows the tags associated with this resource.
      operationId: list_tags_for_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Specify the <code>resourceArn</code> for the resource whose tags
          to display.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListTagsForResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
    post:
      description: Add a tag to the specified resource.
      operationId: tag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Specify the <code>resourceArn</code> of the resource to which
          a tag will be added.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagResource_request'
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
      x-codegen-request-body-name: body
  /tags/{resourceArn}#tagKeys:
    delete:
      description: Remove tags from a resource.
      operationId: untag_resource
      parameters:
      - explode: false
        in: header
        name: X-Amz-Content-Sha256
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Date
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Algorithm
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Credential
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Security-Token
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-Signature
        required: false
        schema:
          type: string
        style: simple
      - explode: false
        in: header
        name: X-Amz-SignedHeaders
        required: false
        schema:
          type: string
        style: simple
      - description: Specify the <code>resourceArn</code> for the resource from which
          to remove the tags.
        explode: false
        in: path
        name: resourceArn
        required: true
        schema:
          type: string
        style: simple
      - description: Specify the keys for the tags to remove from the resource.
        explode: true
        in: query
        name: tagKeys
        required: true
        schema:
          items:
            $ref: '#/components/schemas/String'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UntagResourceResponse'
          description: Success
        "480":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceNotFoundException'
          description: ResourceNotFoundException
        "481":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InternalServiceException'
          description: InternalServiceException
        "482":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationException'
          description: ValidationException
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  parameters:
    X-Amz-Content-Sha256:
      explode: false
      in: header
      name: X-Amz-Content-Sha256
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Date:
      explode: false
      in: header
      name: X-Amz-Date
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Algorithm:
      explode: false
      in: header
      name: X-Amz-Algorithm
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Credential:
      explode: false
      in: header
      name: X-Amz-Credential
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Security-Token:
      explode: false
      in: header
      name: X-Amz-Security-Token
      required: false
      schema:
        type: string
      style: simple
    X-Amz-Signature:
      explode: false
      in: header
      name: X-Amz-Signature
      required: false
      schema:
        type: string
      style: simple
    X-Amz-SignedHeaders:
      explode: false
      in: header
      name: X-Amz-SignedHeaders
      required: false
      schema:
        type: string
      style: simple
  schemas:
    CancelJobResponse:
      example:
        jobArn: ""
        cancellationStatus: ""
      properties:
        cancellationStatus:
          allOf:
          - $ref: '#/components/schemas/CancellationStatus'
          - description: The status of the job cancellation request.
          title: cancellationStatus
        jobArn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          - description: The ARN of the Amazon Braket job.
          title: jobArn
      required:
      - cancellationStatus
      - jobArn
      title: CancelJobResponse
      type: object
    ResourceNotFoundException: {}
    AccessDeniedException: {}
    ConflictException: {}
    ThrottlingException: {}
    InternalServiceException: {}
    ValidationException: {}
    CancelQuantumTaskResponse:
      example:
        cancellationStatus: ""
        quantumTaskArn: ""
      properties:
        cancellationStatus:
          allOf:
          - $ref: '#/components/schemas/CancellationStatus'
          - description: The status of the cancellation request.
          title: cancellationStatus
        quantumTaskArn:
          allOf:
          - $ref: '#/components/schemas/QuantumTaskArn'
          - description: The ARN of the task.
          title: quantumTaskArn
      required:
      - cancellationStatus
      - quantumTaskArn
      title: CancelQuantumTaskResponse
      type: object
    CreateJobResponse:
      example:
        jobArn: ""
      properties:
        jobArn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          - description: The ARN of the Amazon Braket job created.
          title: jobArn
      required:
      - jobArn
      title: CreateJobResponse
      type: object
    ContainerImage:
      description: The container image used to create an Amazon Braket job.
      properties:
        uri:
          allOf:
          - $ref: '#/components/schemas/Uri'
          - description: The URI locating the container image.
          title: uri
      required:
      - uri
      title: ContainerImage
      type: object
    ScriptModeConfig:
      description: Contains information about the Python scripts used for entry and
        by an Amazon Braket job.
      properties:
        compressionType:
          allOf:
          - $ref: '#/components/schemas/CompressionType'
          - description: The type of compression used by the Python scripts for an
              Amazon Braket job.
          title: compressionType
        entryPoint:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The path to the Python script that serves as the entry point
              for an Amazon Braket job.
          title: entryPoint
        s3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Path'
          - description: The URI that specifies the S3 path to the Python script module
              that contains the training script used by an Amazon Braket job.
          title: s3Uri
      required:
      - entryPoint
      - s3Uri
      title: ScriptModeConfig
      type: object
    String4096:
      maxLength: 4096
      minLength: 1
      type: string
    S3Path:
      maxLength: 1024
      minLength: 0
      pattern: "^(https|s3)://([^/]+)/?(.*)$"
      type: string
    String256:
      maxLength: 256
      minLength: 1
      title: String256
      type: string
    HyperParametersValueString:
      maxLength: 2500
      minLength: 1
      title: HyperParametersValueString
      type: string
    InputFileConfig:
      description: "A list of parameters that specify the input channels, type of\
        \ input data, and where it is located."
      properties:
        channelName:
          allOf:
          - $ref: '#/components/schemas/InputFileConfigChannelNameString'
          - description: A named input source that an Amazon Braket job can consume.
          title: channelName
        contentType:
          allOf:
          - $ref: '#/components/schemas/String256'
          - description: The MIME type of the data.
          title: contentType
        dataSource:
          $ref: '#/components/schemas/InputFileConfig_dataSource'
      required:
      - channelName
      - dataSource
      title: InputFileConfig
      type: object
    InstanceConfigInstanceCountInteger:
      minimum: 1
      type: integer
    InstanceType:
      enum:
      - ml.m4.xlarge
      - ml.m4.2xlarge
      - ml.m4.4xlarge
      - ml.m4.10xlarge
      - ml.m4.16xlarge
      - ml.g4dn.xlarge
      - ml.g4dn.2xlarge
      - ml.g4dn.4xlarge
      - ml.g4dn.8xlarge
      - ml.g4dn.12xlarge
      - ml.g4dn.16xlarge
      - ml.m5.large
      - ml.m5.xlarge
      - ml.m5.2xlarge
      - ml.m5.4xlarge
      - ml.m5.12xlarge
      - ml.m5.24xlarge
      - ml.c4.xlarge
      - ml.c4.2xlarge
      - ml.c4.4xlarge
      - ml.c4.8xlarge
      - ml.p2.xlarge
      - ml.p2.8xlarge
      - ml.p2.16xlarge
      - ml.p3.2xlarge
      - ml.p3.8xlarge
      - ml.p3.16xlarge
      - ml.p3dn.24xlarge
      - ml.p4d.24xlarge
      - ml.c5.xlarge
      - ml.c5.2xlarge
      - ml.c5.4xlarge
      - ml.c5.9xlarge
      - ml.c5.18xlarge
      - ml.c5n.xlarge
      - ml.c5n.2xlarge
      - ml.c5n.4xlarge
      - ml.c5n.9xlarge
      - ml.c5n.18xlarge
      title: InstanceType
      type: string
    InstanceConfigVolumeSizeInGbInteger:
      minimum: 1
      type: integer
    String2048:
      maxLength: 2048
      minLength: 1
      type: string
    JobStoppingConditionMaxRuntimeInSecondsInteger:
      maximum: 432000
      minimum: 1
      type: integer
    String:
      title: String
      type: string
    DeviceRetiredException: {}
    ServiceQuotaExceededException: {}
    CreateQuantumTaskResponse:
      example:
        quantumTaskArn: ""
      properties:
        quantumTaskArn:
          allOf:
          - $ref: '#/components/schemas/QuantumTaskArn'
          - description: The ARN of the task created by the request.
          title: quantumTaskArn
      required:
      - quantumTaskArn
      title: CreateQuantumTaskResponse
      type: object
    DeviceOfflineException: {}
    GetDeviceResponse:
      example:
        deviceType: ""
        deviceArn: ""
        deviceName: ""
        deviceCapabilities: ""
        providerName: ""
        deviceStatus: ""
      properties:
        deviceArn:
          allOf:
          - $ref: '#/components/schemas/DeviceArn'
          - description: The ARN of the device.
          title: deviceArn
        deviceCapabilities:
          allOf:
          - $ref: '#/components/schemas/JsonValue'
          - description: Details about the capabilities of the device.
          title: deviceCapabilities
        deviceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the device.
          title: deviceName
        deviceStatus:
          allOf:
          - $ref: '#/components/schemas/DeviceStatus'
          - description: The status of the device.
          title: deviceStatus
        deviceType:
          allOf:
          - $ref: '#/components/schemas/DeviceType'
          - description: The type of the device.
          title: deviceType
        providerName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the partner company for the device.
          title: providerName
      required:
      - deviceArn
      - deviceCapabilities
      - deviceName
      - deviceStatus
      - deviceType
      - providerName
      title: GetDeviceResponse
      type: object
    GetJobResponse:
      example:
        deviceConfig:
          device: ""
        jobName: ""
        checkpointConfig:
          s3Uri: ""
          localPath: ""
        stoppingCondition:
          maxRuntimeInSeconds: ""
        startedAt: ""
        instanceConfig:
          volumeSizeInGb: ""
          instanceCount: ""
          instanceType: ""
        jobArn: ""
        outputDataConfig:
          s3Path: ""
          kmsKeyId: ""
        tags: ""
        createdAt: ""
        algorithmSpecification:
          containerImage:
            uri: ""
          scriptModeConfig:
            s3Uri: ""
            compressionType: ""
            entryPoint: ""
        billableDuration: ""
        endedAt: ""
        roleArn: ""
        failureReason: ""
        hyperParameters: ""
        events: ""
        inputDataConfig: ""
        status: ""
      properties:
        algorithmSpecification:
          $ref: '#/components/schemas/GetJobResponse_algorithmSpecification'
        billableDuration:
          allOf:
          - $ref: '#/components/schemas/Integer'
          - description: The billable time the Amazon Braket job used to complete.
          title: billableDuration
        checkpointConfig:
          $ref: '#/components/schemas/GetJobResponse_checkpointConfig'
        createdAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date and time that the Amazon Braket job was created.
          title: createdAt
        deviceConfig:
          $ref: '#/components/schemas/GetJobResponse_deviceConfig'
        endedAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date and time that the Amazon Braket job ended.
          title: endedAt
        events:
          allOf:
          - $ref: '#/components/schemas/JobEvents'
          - description: Details about the type and time events occurred related to
              the Amazon Braket job.
          title: events
        failureReason:
          allOf:
          - $ref: '#/components/schemas/String1024'
          - description: "A description of the reason why an Amazon Braket job failed,\
              \ if it failed."
          title: failureReason
        hyperParameters:
          allOf:
          - $ref: '#/components/schemas/HyperParameters'
          - description: "Algorithm-specific parameters used by an Amazon Braket job\
              \ that influence the quality of the traiing job. The values are set\
              \ with a string of JSON key:value pairs, where the key is the name of\
              \ the hyperparameter and the value is the value of th hyperparameter."
          title: hyperParameters
        inputDataConfig:
          allOf:
          - $ref: '#/components/schemas/InputConfigList'
          - description: A list of parameters that specify the name and type of input
              data and where it is located.
          title: inputDataConfig
        instanceConfig:
          $ref: '#/components/schemas/GetJobResponse_instanceConfig'
        jobArn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          - description: The ARN of the Amazon Braket job.
          title: jobArn
        jobName:
          allOf:
          - $ref: '#/components/schemas/GetJobResponseJobNameString'
          - description: The name of the Amazon Braket job.
          title: jobName
        outputDataConfig:
          $ref: '#/components/schemas/GetJobResponse_outputDataConfig'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: "The Amazon Resource Name (ARN) of an IAM role that Amazon\
              \ Braket can assume to perform tasks on behalf of a user. It can access\
              \ user resources, run an Amazon Braket job container on behalf of user,\
              \ and output resources to the s3 buckets of a user."
          title: roleArn
        startedAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date and time that the Amazon Braket job was started.
          title: startedAt
        status:
          allOf:
          - $ref: '#/components/schemas/JobPrimaryStatus'
          - description: The status of the Amazon Braket job.
          title: status
        stoppingCondition:
          $ref: '#/components/schemas/GetJobResponse_stoppingCondition'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: "A tag object that consists of a key and an optional value,\
              \ used to manage metadata for Amazon Braket resources."
          title: tags
      required:
      - algorithmSpecification
      - createdAt
      - instanceConfig
      - jobArn
      - jobName
      - outputDataConfig
      - roleArn
      - status
      title: GetJobResponse
      type: object
    GetQuantumTaskResponse:
      example:
        outputS3Bucket: ""
        createdAt: ""
        endedAt: ""
        deviceArn: ""
        failureReason: ""
        deviceParameters: ""
        jobArn: ""
        outputS3Directory: ""
        shots: ""
        quantumTaskArn: ""
        status: ""
        tags: ""
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The time at which the task was created.
          title: createdAt
        deviceArn:
          allOf:
          - $ref: '#/components/schemas/DeviceArn'
          - description: The ARN of the device the task was run on.
          title: deviceArn
        deviceParameters:
          allOf:
          - $ref: '#/components/schemas/JsonValue'
          - description: The parameters for the device on which the task ran.
          title: deviceParameters
        endedAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The time at which the task ended.
          title: endedAt
        failureReason:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The reason that a task failed.
          title: failureReason
        jobArn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          - description: The ARN of the Amazon Braket job associated with the quantum
              task.
          title: jobArn
        outputS3Bucket:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The S3 bucket where task results are stored.
          title: outputS3Bucket
        outputS3Directory:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The folder in the S3 bucket where task results are stored.
          title: outputS3Directory
        quantumTaskArn:
          allOf:
          - $ref: '#/components/schemas/QuantumTaskArn'
          - description: The ARN of the task.
          title: quantumTaskArn
        shots:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The number of shots used in the task.
          title: shots
        status:
          allOf:
          - $ref: '#/components/schemas/QuantumTaskStatus'
          - description: The status of the task.
          title: status
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: The tags that belong to this task.
          title: tags
      required:
      - createdAt
      - deviceArn
      - deviceParameters
      - outputS3Bucket
      - outputS3Directory
      - quantumTaskArn
      - shots
      - status
      title: GetQuantumTaskResponse
      type: object
    ListTagsForResourceResponse:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: "Displays the key, value pairs of tags associated with this\
              \ resource."
          title: tags
      title: ListTagsForResourceResponse
      type: object
    SearchDevicesResponse:
      example:
        devices: ""
        nextToken: ""
      properties:
        devices:
          allOf:
          - $ref: '#/components/schemas/DeviceSummaryList'
          - description: An array of <code>DeviceSummary</code> objects for devices
              that match the specified filter values.
          title: devices
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A token used for pagination of results, or null if there\
              \ are no additional results. Use the token value in a subsequent request\
              \ to continue results where the previous request ended."
          title: nextToken
      required:
      - devices
      title: SearchDevicesResponse
      type: object
    SearchDevicesFilter:
      description: The filter to use for searching devices.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/SearchDevicesFilterNameString'
          - description: The name to use to filter results.
          title: name
        values:
          allOf:
          - $ref: '#/components/schemas/SearchDevicesFilterValuesList'
          - description: The values to use to filter results.
          title: values
      required:
      - name
      - values
      title: SearchDevicesFilter
      type: object
    SearchJobsResponse:
      example:
        nextToken: ""
        jobs: ""
      properties:
        jobs:
          allOf:
          - $ref: '#/components/schemas/JobSummaryList'
          - description: An array of <code>JobSummary</code> objects for devices that
              match the specified filter values.
          title: jobs
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A token used for pagination of results, or <code>null</code>\
              \ if there are no additional results. Use the token value in a subsequent\
              \ request to continue results where the previous request ended."
          title: nextToken
      required:
      - jobs
      title: SearchJobsResponse
      type: object
    SearchJobsFilter:
      description: A filter used to search for Amazon Braket jobs.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String64'
          - description: The name to use for the jobs filter.
          title: name
        operator:
          allOf:
          - $ref: '#/components/schemas/SearchJobsFilterOperator'
          - description: An operator to use for the jobs filter.
          title: operator
        values:
          allOf:
          - $ref: '#/components/schemas/SearchJobsFilterValuesList'
          - description: The values to use for the jobs filter.
          title: values
      required:
      - name
      - operator
      - values
      title: SearchJobsFilter
      type: object
    SearchQuantumTasksResponse:
      example:
        nextToken: ""
        quantumTasks: ""
      properties:
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: "A token used for pagination of results, or null if there\
              \ are no additional results. Use the token value in a subsequent request\
              \ to continue results where the previous request ended."
          title: nextToken
        quantumTasks:
          allOf:
          - $ref: '#/components/schemas/QuantumTaskSummaryList'
          - description: An array of <code>QuantumTaskSummary</code> objects for tasks
              that match the specified filters.
          title: quantumTasks
      required:
      - quantumTasks
      title: SearchQuantumTasksResponse
      type: object
    SearchQuantumTasksFilter:
      description: A filter to use to search for tasks.
      properties:
        name:
          allOf:
          - $ref: '#/components/schemas/String64'
          - description: The name of the device used for the task.
          title: name
        operator:
          allOf:
          - $ref: '#/components/schemas/SearchQuantumTasksFilterOperator'
          - description: An operator to use in the filter.
          title: operator
        values:
          allOf:
          - $ref: '#/components/schemas/SearchQuantumTasksFilterValuesList'
          - description: The values to use for the filter.
          title: values
      required:
      - name
      - operator
      - values
      title: SearchQuantumTasksFilter
      type: object
    TagResourceResponse:
      properties: {}
      type: object
    UntagResourceResponse:
      properties: {}
      type: object
    AlgorithmSpecification:
      description: Defines the Amazon Braket job to be created. Specifies the container
        image the job uses and the paths to the Python scripts used for entry and
        training.
      properties:
        containerImage:
          $ref: '#/components/schemas/CreateJob_request_algorithmSpecification_containerImage'
        scriptModeConfig:
          $ref: '#/components/schemas/CreateJob_request_algorithmSpecification_scriptModeConfig'
      title: AlgorithmSpecification
      type: object
    JobArn:
      pattern: "^arn:aws[a-z\\-]*:braket:[a-z0-9\\-]*:[0-9]{12}:job/.*$"
      type: string
    CancelJobRequest:
      properties: {}
      title: CancelJobRequest
      type: object
    CancellationStatus:
      enum:
      - CANCELLING
      - CANCELLED
      title: CancellationStatus
      type: string
    String64:
      maxLength: 64
      minLength: 1
      type: string
    QuantumTaskArn:
      maxLength: 256
      minLength: 1
      type: string
    CancelQuantumTaskRequest:
      example:
        clientToken: ""
      properties:
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String64'
          - description: The client token associated with the request.
      required:
      - clientToken
      title: CancelQuantumTaskRequest
      type: object
    CompressionType:
      enum:
      - NONE
      - GZIP
      title: CompressionType
      type: string
    Uri:
      maxLength: 255
      minLength: 1
      pattern: "\\d{10,14}\\.dkr\\.ecr.[a-z0-9-]+\\.amazonaws\\.com\\/.+(@sha256)?:.+"
      type: string
    JobCheckpointConfig:
      description: Contains information about the output locations for job checkpoint
        data.
      properties:
        localPath:
          allOf:
          - $ref: '#/components/schemas/String4096'
          - description: (Optional) The local directory where checkpoints are written.
              The default directory is <code>/opt/braket/checkpoints/</code>.
          title: localPath
        s3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Path'
          - description: "Identifies the S3 path where you want Amazon Braket to store\
              \ checkpoints. For example, <code>s3://bucket-name/key-name-prefix</code>."
          title: s3Uri
      required:
      - s3Uri
      title: JobCheckpointConfig
      type: object
    DeviceConfig:
      description: Configures the quantum processing units (QPUs) or simulator used
        to create and run an Amazon Braket job.
      properties:
        device:
          allOf:
          - $ref: '#/components/schemas/String256'
          - description: The primary quantum processing unit (QPU) or simulator used
              to create and run an Amazon Braket job.
          title: device
      required:
      - device
      title: DeviceConfig
      type: object
    HyperParameters:
      additionalProperties:
        $ref: '#/components/schemas/HyperParametersValueString'
      maxProperties: 100
      minProperties: 0
      type: object
    CreateJobRequestInputDataConfigList:
      items:
        $ref: '#/components/schemas/InputFileConfig'
      maxItems: 20
      minItems: 0
      type: array
    InstanceConfig:
      description: Configures the resource instances to use while running the Amazon
        Braket hybrid job on Amazon Braket.
      properties:
        instanceCount:
          allOf:
          - $ref: '#/components/schemas/InstanceConfigInstanceCountInteger'
          - description: Configures the number of resource instances to use while
              running an Amazon Braket job on Amazon Braket. The default value is
              1.
          title: instanceCount
        instanceType:
          allOf:
          - $ref: '#/components/schemas/InstanceType'
          - description: Configures the type resource instances to use while running
              an Amazon Braket hybrid job.
          title: instanceType
        volumeSizeInGb:
          allOf:
          - $ref: '#/components/schemas/InstanceConfigVolumeSizeInGbInteger'
          - description: "The size of the storage volume, in GB, that user wants to\
              \ provision."
          title: volumeSizeInGb
      required:
      - instanceType
      - volumeSizeInGb
      title: InstanceConfig
      type: object
    CreateJobRequestJobNameString:
      maxLength: 50
      minLength: 1
      pattern: "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,50}$"
      type: string
    JobOutputDataConfig:
      description: Specifies the path to the S3 location where you want to store job
        artifacts and the encryption key used to store them.
      properties:
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String2048'
          - description: The AWS Key Management Service (AWS KMS) key that Amazon
              Braket uses to encrypt the job training artifacts at rest using Amazon
              S3 server-side encryption.
          title: kmsKeyId
        s3Path:
          allOf:
          - $ref: '#/components/schemas/S3Path'
          - description: "Identifies the S3 path where you want Amazon Braket to store\
              \ the job training artifacts. For example, <code>s3://bucket-name/key-name-prefix</code>."
          title: s3Path
      required:
      - s3Path
      title: JobOutputDataConfig
      type: object
    RoleArn:
      pattern: "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$"
      type: string
    JobStoppingCondition:
      description: 'Specifies limits for how long an Amazon Braket job can run. '
      properties:
        maxRuntimeInSeconds:
          allOf:
          - $ref: '#/components/schemas/JobStoppingConditionMaxRuntimeInSecondsInteger'
          - description: "The maximum length of time, in seconds, that an Amazon Braket\
              \ job can run."
          title: maxRuntimeInSeconds
      title: JobStoppingCondition
      type: object
    TagsMap:
      additionalProperties:
        $ref: '#/components/schemas/String'
      type: object
    CreateJobRequest:
      example:
        deviceConfig:
          device: ""
        jobName: ""
        checkpointConfig:
          s3Uri: ""
          localPath: ""
        algorithmSpecification:
          containerImage:
            uri: ""
          scriptModeConfig:
            s3Uri: ""
            compressionType: ""
            entryPoint: ""
        clientToken: ""
        roleArn: ""
        hyperParameters: ""
        stoppingCondition:
          maxRuntimeInSeconds: ""
        instanceConfig:
          volumeSizeInGb: ""
          instanceCount: ""
          instanceType: ""
        inputDataConfig: ""
        outputDataConfig:
          s3Path: ""
          kmsKeyId: ""
        tags: ""
      properties:
        algorithmSpecification:
          $ref: '#/components/schemas/CreateJobRequest_algorithmSpecification'
        checkpointConfig:
          $ref: '#/components/schemas/GetJobResponse_checkpointConfig'
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String64'
          - description: A unique token that guarantees that the call to this API
              is idempotent.
        deviceConfig:
          $ref: '#/components/schemas/CreateJobRequest_deviceConfig'
        hyperParameters:
          allOf:
          - $ref: '#/components/schemas/HyperParameters'
          - description: "Algorithm-specific parameters used by an Amazon Braket job\
              \ that influence the quality of the training job. The values are set\
              \ with a string of JSON key:value pairs, where the key is the name of\
              \ the hyperparameter and the value is the value of th hyperparameter."
        inputDataConfig:
          allOf:
          - $ref: '#/components/schemas/CreateJobRequestInputDataConfigList'
          - description: A list of parameters that specify the name and type of input
              data and where it is located.
        instanceConfig:
          $ref: '#/components/schemas/CreateJobRequest_instanceConfig'
        jobName:
          allOf:
          - $ref: '#/components/schemas/CreateJobRequestJobNameString'
          - description: The name of the Amazon Braket job.
        outputDataConfig:
          $ref: '#/components/schemas/CreateJobRequest_outputDataConfig'
        roleArn:
          allOf:
          - $ref: '#/components/schemas/RoleArn'
          - description: "The Amazon Resource Name (ARN) of an IAM role that Amazon\
              \ Braket can assume to perform tasks on behalf of a user. It can access\
              \ user resources, run an Amazon Braket job container on behalf of user,\
              \ and output resources to the users' s3 buckets."
        stoppingCondition:
          $ref: '#/components/schemas/CreateJobRequest_stoppingCondition'
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: "A tag object that consists of a key and an optional value,\
              \ used to manage metadata for Amazon Braket resources."
      required:
      - algorithmSpecification
      - clientToken
      - deviceConfig
      - instanceConfig
      - jobName
      - outputDataConfig
      - roleArn
      title: CreateJobRequest
      type: object
    JsonValue:
      type: string
    DeviceArn:
      maxLength: 256
      minLength: 1
      type: string
    CreateQuantumTaskRequestDeviceParametersString:
      maxLength: 48000
      minLength: 1
      type: string
    JobToken:
      maxLength: 128
      minLength: 1
      type: string
    CreateQuantumTaskRequestOutputS3BucketString:
      maxLength: 63
      minLength: 3
      type: string
    CreateQuantumTaskRequestOutputS3KeyPrefixString:
      maxLength: 1024
      minLength: 1
      type: string
    CreateQuantumTaskRequestShotsLong:
      minimum: 0
      type: integer
    CreateQuantumTaskRequest:
      example:
        outputS3Bucket: ""
        jobToken: ""
        clientToken: ""
        deviceArn: ""
        action: ""
        deviceParameters: ""
        shots: ""
        outputS3KeyPrefix: ""
        tags: ""
      properties:
        action:
          allOf:
          - $ref: '#/components/schemas/JsonValue'
          - description: The action associated with the task.
        clientToken:
          allOf:
          - $ref: '#/components/schemas/String64'
          - description: The client token associated with the request.
        deviceArn:
          allOf:
          - $ref: '#/components/schemas/DeviceArn'
          - description: The ARN of the device to run the task on.
        deviceParameters:
          allOf:
          - $ref: '#/components/schemas/CreateQuantumTaskRequestDeviceParametersString'
          - description: The parameters for the device to run the task on.
        jobToken:
          allOf:
          - $ref: '#/components/schemas/JobToken'
          - description: The token for an Amazon Braket job that associates it with
              the quantum task.
        outputS3Bucket:
          allOf:
          - $ref: '#/components/schemas/CreateQuantumTaskRequestOutputS3BucketString'
          - description: The S3 bucket to store task result files in.
        outputS3KeyPrefix:
          allOf:
          - $ref: '#/components/schemas/CreateQuantumTaskRequestOutputS3KeyPrefixString'
          - description: The key prefix for the location in the S3 bucket to store
              task results in.
        shots:
          allOf:
          - $ref: '#/components/schemas/CreateQuantumTaskRequestShotsLong'
          - description: The number of shots to use for the task.
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Tags to be added to the quantum task you're creating.
      required:
      - action
      - clientToken
      - deviceArn
      - outputS3Bucket
      - outputS3KeyPrefix
      - shots
      title: CreateQuantumTaskRequest
      type: object
    S3DataSource:
      description: Information about the data stored in Amazon S3 used by the Amazon
        Braket job.
      properties:
        s3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Path'
          - description: "Depending on the value specified for the <code>S3DataType</code>,\
              \ identifies either a key name prefix or a manifest that locates the\
              \ S3 data source."
          title: s3Uri
      required:
      - s3Uri
      title: S3DataSource
      type: object
    DataSource:
      description: Information about the source of the data used by the Amazon Braket
        job.
      properties:
        s3DataSource:
          $ref: '#/components/schemas/DataSource_s3DataSource'
      required:
      - s3DataSource
      title: DataSource
      type: object
    DeviceStatus:
      enum:
      - ONLINE
      - OFFLINE
      - RETIRED
      title: DeviceStatus
      type: string
    DeviceType:
      enum:
      - QPU
      - SIMULATOR
      title: DeviceType
      type: string
    DeviceSummary:
      description: Includes information about the device.
      properties:
        deviceArn:
          allOf:
          - $ref: '#/components/schemas/DeviceArn'
          - description: The ARN of the device.
          title: deviceArn
        deviceName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the device.
          title: deviceName
        deviceStatus:
          allOf:
          - $ref: '#/components/schemas/DeviceStatus'
          - description: The status of the device.
          title: deviceStatus
        deviceType:
          allOf:
          - $ref: '#/components/schemas/DeviceType'
          - description: The type of the device.
          title: deviceType
        providerName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The provider of the device.
          title: providerName
      required:
      - deviceArn
      - deviceName
      - deviceStatus
      - deviceType
      - providerName
      title: DeviceSummary
      type: object
    DeviceSummaryList:
      items:
        $ref: '#/components/schemas/DeviceSummary'
      type: array
    GetDeviceRequest:
      properties: {}
      title: GetDeviceRequest
      type: object
    GetJobRequest:
      properties: {}
      title: GetJobRequest
      type: object
    Integer:
      type: integer
    SyntheticTimestamp_date_time:
      format: date-time
      type: string
    JobEvents:
      items:
        $ref: '#/components/schemas/JobEventDetails'
      maxItems: 20
      minItems: 0
      type: array
    String1024:
      maxLength: 1024
      minLength: 1
      type: string
    InputConfigList:
      items:
        $ref: '#/components/schemas/InputFileConfig'
      type: array
    GetJobResponseJobNameString:
      maxLength: 50
      minLength: 1
      pattern: "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,50}$"
      type: string
    JobPrimaryStatus:
      enum:
      - QUEUED
      - RUNNING
      - COMPLETED
      - FAILED
      - CANCELLING
      - CANCELLED
      title: JobPrimaryStatus
      type: string
    GetQuantumTaskRequest:
      properties: {}
      title: GetQuantumTaskRequest
      type: object
    Long:
      type: integer
    QuantumTaskStatus:
      enum:
      - CREATED
      - QUEUED
      - RUNNING
      - COMPLETED
      - FAILED
      - CANCELLING
      - CANCELLED
      title: QuantumTaskStatus
      type: string
    InputFileConfigChannelNameString:
      maxLength: 64
      minLength: 1
      pattern: "^[A-Za-z0-9\\.\\-_]+$"
      type: string
    JobEventType:
      enum:
      - WAITING_FOR_PRIORITY
      - QUEUED_FOR_EXECUTION
      - STARTING_INSTANCE
      - DOWNLOADING_DATA
      - RUNNING
      - DEPRIORITIZED_DUE_TO_INACTIVITY
      - UPLOADING_RESULTS
      - COMPLETED
      - FAILED
      - MAX_RUNTIME_EXCEEDED
      - CANCELLED
      title: JobEventType
      type: string
    JobEventDetailsMessageString:
      maxLength: 2500
      minLength: 0
      type: string
    JobEventDetails:
      description: Details about the type and time events occurred related to the
        Amazon Braket job.
      properties:
        eventType:
          allOf:
          - $ref: '#/components/schemas/JobEventType'
          - description: The type of event that occurred related to the Amazon Braket
              job.
          title: eventType
        message:
          allOf:
          - $ref: '#/components/schemas/JobEventDetailsMessageString'
          - description: A message describing the event that occurred related to the
              Amazon Braket job.
          title: message
        timeOfEvent:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: TThe type of event that occurred related to the Amazon Braket
              job.
          title: timeOfEvent
      title: JobEventDetails
      type: object
    JobSummary:
      description: Provides summary information about an Amazon Braket job.
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date and time that the Amazon Braket job was created.
          title: createdAt
        device:
          allOf:
          - $ref: '#/components/schemas/String256'
          - description: Provides summary information about the primary device used
              by an Amazon Braket job.
          title: device
        endedAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date and time that the Amazon Braket job ended.
          title: endedAt
        jobArn:
          allOf:
          - $ref: '#/components/schemas/JobArn'
          - description: The ARN of the Amazon Braket job.
          title: jobArn
        jobName:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The name of the Amazon Braket job.
          title: jobName
        startedAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The date and time that the Amazon Braket job was started.
          title: startedAt
        status:
          allOf:
          - $ref: '#/components/schemas/JobPrimaryStatus'
          - description: The status of the Amazon Braket job.
          title: status
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: "A tag object that consists of a key and an optional value,\
              \ used to manage metadata for Amazon Braket resources."
          title: tags
      required:
      - createdAt
      - device
      - jobArn
      - jobName
      - status
      title: JobSummary
      type: object
    JobSummaryList:
      items:
        $ref: '#/components/schemas/JobSummary'
      type: array
    ListTagsForResourceRequest:
      properties: {}
      title: ListTagsForResourceRequest
      type: object
    QuantumTaskSummary:
      description: Includes information about a quantum task.
      properties:
        createdAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The time at which the task was created.
          title: createdAt
        deviceArn:
          allOf:
          - $ref: '#/components/schemas/DeviceArn'
          - description: The ARN of the device the task ran on.
          title: deviceArn
        endedAt:
          allOf:
          - $ref: '#/components/schemas/SyntheticTimestamp_date_time'
          - description: The time at which the task finished.
          title: endedAt
        outputS3Bucket:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The S3 bucket where the task result file is stored..
          title: outputS3Bucket
        outputS3Directory:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: The folder in the S3 bucket where the task result file is
              stored.
          title: outputS3Directory
        quantumTaskArn:
          allOf:
          - $ref: '#/components/schemas/QuantumTaskArn'
          - description: The ARN of the task.
          title: quantumTaskArn
        shots:
          allOf:
          - $ref: '#/components/schemas/Long'
          - description: The shots used for the task.
          title: shots
        status:
          allOf:
          - $ref: '#/components/schemas/QuantumTaskStatus'
          - description: The status of the task.
          title: status
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: "Displays the key, value pairs of tags associated with this\
              \ quantum task."
          title: tags
      required:
      - createdAt
      - deviceArn
      - outputS3Bucket
      - outputS3Directory
      - quantumTaskArn
      - shots
      - status
      title: QuantumTaskSummary
      type: object
    QuantumTaskSummaryList:
      items:
        $ref: '#/components/schemas/QuantumTaskSummary'
      type: array
    SearchDevicesFilterNameString:
      maxLength: 64
      minLength: 1
      type: string
    SearchDevicesFilterValuesList:
      items:
        $ref: '#/components/schemas/String256'
      maxItems: 10
      minItems: 1
      type: array
    SearchDevicesRequestFiltersList:
      items:
        $ref: '#/components/schemas/SearchDevicesFilter'
      maxItems: 10
      minItems: 0
      type: array
    SearchDevicesRequestMaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    SearchDevicesRequest:
      example:
        maxResults: ""
        nextToken: ""
        filters: ""
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/SearchDevicesRequestFiltersList'
          - description: The filter values to use to search for a device.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/SearchDevicesRequestMaxResultsInteger'
          - description: The maximum number of results to return in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A token used for pagination of results returned in the response.
              Use the token returned from the previous request continue results where
              the previous request ended.
      required:
      - filters
      title: SearchDevicesRequest
      type: object
    SearchJobsFilterOperator:
      enum:
      - LT
      - LTE
      - EQUAL
      - GT
      - GTE
      - BETWEEN
      - CONTAINS
      title: SearchJobsFilterOperator
      type: string
    SearchJobsFilterValuesList:
      items:
        $ref: '#/components/schemas/String256'
      maxItems: 10
      minItems: 1
      type: array
    SearchJobsRequestFiltersList:
      items:
        $ref: '#/components/schemas/SearchJobsFilter'
      maxItems: 10
      minItems: 0
      type: array
    SearchJobsRequestMaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    SearchJobsRequest:
      example:
        maxResults: ""
        nextToken: ""
        filters: ""
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/SearchJobsRequestFiltersList'
          - description: The filter values to use when searching for a job.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/SearchJobsRequestMaxResultsInteger'
          - description: The maximum number of results to return in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A token used for pagination of results returned in the response.
              Use the token returned from the previous request to continue results
              where the previous request ended.
      required:
      - filters
      title: SearchJobsRequest
      type: object
    SearchQuantumTasksFilterOperator:
      enum:
      - LT
      - LTE
      - EQUAL
      - GT
      - GTE
      - BETWEEN
      title: SearchQuantumTasksFilterOperator
      type: string
    SearchQuantumTasksFilterValuesList:
      items:
        $ref: '#/components/schemas/String256'
      maxItems: 10
      minItems: 1
      type: array
    SearchQuantumTasksRequestFiltersList:
      items:
        $ref: '#/components/schemas/SearchQuantumTasksFilter'
      maxItems: 10
      minItems: 0
      type: array
    SearchQuantumTasksRequestMaxResultsInteger:
      maximum: 100
      minimum: 1
      type: integer
    SearchQuantumTasksRequest:
      example:
        maxResults: ""
        nextToken: ""
        filters: ""
      properties:
        filters:
          allOf:
          - $ref: '#/components/schemas/SearchQuantumTasksRequestFiltersList'
          - description: Array of <code>SearchQuantumTasksFilter</code> objects.
        maxResults:
          allOf:
          - $ref: '#/components/schemas/SearchQuantumTasksRequestMaxResultsInteger'
          - description: Maximum number of results to return in the response.
        nextToken:
          allOf:
          - $ref: '#/components/schemas/String'
          - description: A token used for pagination of results returned in the response.
              Use the token returned from the previous request continue results where
              the previous request ended.
      required:
      - filters
      title: SearchQuantumTasksRequest
      type: object
    TagKeys:
      items:
        $ref: '#/components/schemas/String'
      type: array
    TagResourceRequest:
      example:
        tags: ""
      properties:
        tags:
          allOf:
          - $ref: '#/components/schemas/TagsMap'
          - description: Specify the tags to add to the resource.
      required:
      - tags
      title: TagResourceRequest
      type: object
    UntagResourceRequest:
      properties: {}
      title: UntagResourceRequest
      type: object
    CancelQuantumTask_request:
      properties:
        clientToken:
          description: The client token associated with the request.
          maxLength: 64
          minLength: 1
          title: clientToken
          type: string
      required:
      - clientToken
      title: CancelQuantumTask_request
      type: object
    CreateJob_request_algorithmSpecification_containerImage:
      allOf:
      - $ref: '#/components/schemas/ContainerImage'
      - description: The container image used to create an Amazon Braket job.
      example:
        uri: ""
      title: CreateJob_request_algorithmSpecification_containerImage
    CreateJob_request_algorithmSpecification_scriptModeConfig:
      allOf:
      - $ref: '#/components/schemas/ScriptModeConfig'
      - description: Configures the paths to the Python scripts used for entry and
          training.
      example:
        s3Uri: ""
        compressionType: ""
        entryPoint: ""
      title: CreateJob_request_algorithmSpecification_scriptModeConfig
    CreateJob_request_algorithmSpecification:
      description: Defines the Amazon Braket job to be created. Specifies the container
        image the job uses and the paths to the Python scripts used for entry and
        training.
      properties:
        containerImage:
          $ref: '#/components/schemas/CreateJob_request_algorithmSpecification_containerImage'
        scriptModeConfig:
          $ref: '#/components/schemas/CreateJob_request_algorithmSpecification_scriptModeConfig'
      title: CreateJob_request_algorithmSpecification
      type: object
    CreateJob_request_checkpointConfig:
      description: Contains information about the output locations for job checkpoint
        data.
      properties:
        localPath:
          allOf:
          - $ref: '#/components/schemas/String4096'
          - description: (Optional) The local directory where checkpoints are written.
              The default directory is <code>/opt/braket/checkpoints/</code>.
          title: localPath
        s3Uri:
          allOf:
          - $ref: '#/components/schemas/S3Path'
          - description: "Identifies the S3 path where you want Amazon Braket to store\
              \ checkpoints. For example, <code>s3://bucket-name/key-name-prefix</code>."
          title: s3Uri
      title: CreateJob_request_checkpointConfig
      type: object
    CreateJob_request_deviceConfig:
      description: Configures the quantum processing units (QPUs) or simulator used
        to create and run an Amazon Braket job.
      properties:
        device:
          allOf:
          - $ref: '#/components/schemas/String256'
          - description: The primary quantum processing unit (QPU) or simulator used
              to create and run an Amazon Braket job.
          title: device
      title: CreateJob_request_deviceConfig
      type: object
    CreateJob_request_instanceConfig:
      description: Configures the resource instances to use while running the Amazon
        Braket hybrid job on Amazon Braket.
      properties:
        instanceCount:
          allOf:
          - $ref: '#/components/schemas/InstanceConfigInstanceCountInteger'
          - description: Configures the number of resource instances to use while
              running an Amazon Braket job on Amazon Braket. The default value is
              1.
          title: instanceCount
        instanceType:
          allOf:
          - $ref: '#/components/schemas/InstanceType'
          - description: Configures the type resource instances to use while running
              an Amazon Braket hybrid job.
          title: instanceType
        volumeSizeInGb:
          allOf:
          - $ref: '#/components/schemas/InstanceConfigVolumeSizeInGbInteger'
          - description: "The size of the storage volume, in GB, that user wants to\
              \ provision."
          title: volumeSizeInGb
      title: CreateJob_request_instanceConfig
      type: object
    CreateJob_request_outputDataConfig:
      description: Specifies the path to the S3 location where you want to store job
        artifacts and the encryption key used to store them.
      properties:
        kmsKeyId:
          allOf:
          - $ref: '#/components/schemas/String2048'
          - description: The AWS Key Management Service (AWS KMS) key that Amazon
              Braket uses to encrypt the job training artifacts at rest using Amazon
              S3 server-side encryption.
          title: kmsKeyId
        s3Path:
          allOf:
          - $ref: '#/components/schemas/S3Path'
          - description: "Identifies the S3 path where you want Amazon Braket to store\
              \ the job training artifacts. For example, <code>s3://bucket-name/key-name-prefix</code>."
          title: s3Path
      title: CreateJob_request_outputDataConfig
      type: object
    CreateJob_request_stoppingCondition:
      description: 'Specifies limits for how long an Amazon Braket job can run. '
      properties:
        maxRuntimeInSeconds:
          allOf:
          - $ref: '#/components/schemas/JobStoppingConditionMaxRuntimeInSecondsInteger'
          - description: "The maximum length of time, in seconds, that an Amazon Braket\
              \ job can run."
          title: maxRuntimeInSeconds
      title: CreateJob_request_stoppingCondition
      type: object
    CreateJob_request:
      properties:
        algorithmSpecification:
          $ref: '#/components/schemas/CreateJob_request_algorithmSpecification'
        checkpointConfig:
          $ref: '#/components/schemas/CreateJob_request_checkpointConfig'
        clientToken:
          description: A unique token that guarantees that the call to this API is
            idempotent.
          maxLength: 64
          minLength: 1
          title: clientToken
          type: string
        deviceConfig:
          $ref: '#/components/schemas/CreateJob_request_deviceConfig'
        hyperParameters:
          additionalProperties:
            $ref: '#/components/schemas/HyperParametersValueString'
          description: "Algorithm-specific parameters used by an Amazon Braket job\
            \ that influence the quality of the training job. The values are set with\
            \ a string of JSON key:value pairs, where the key is the name of the hyperparameter\
            \ and the value is the value of th hyperparameter."
          maxProperties: 100
          minProperties: 0
          title: hyperParameters
          type: object
        inputDataConfig:
          description: A list of parameters that specify the name and type of input
            data and where it is located.
          items:
            $ref: '#/components/schemas/InputFileConfig'
          maxItems: 20
          minItems: 0
          title: inputDataConfig
          type: array
        instanceConfig:
          $ref: '#/components/schemas/CreateJob_request_instanceConfig'
        jobName:
          description: The name of the Amazon Braket job.
          maxLength: 50
          minLength: 1
          pattern: "^[a-zA-Z0-9](-*[a-zA-Z0-9]){0,50}$"
          title: jobName
          type: string
        outputDataConfig:
          $ref: '#/components/schemas/CreateJob_request_outputDataConfig'
        roleArn:
          description: "The Amazon Resource Name (ARN) of an IAM role that Amazon\
            \ Braket can assume to perform tasks on behalf of a user. It can access\
            \ user resources, run an Amazon Braket job container on behalf of user,\
            \ and output resources to the users' s3 buckets."
          pattern: "^arn:aws[a-z\\-]*:iam::\\d{12}:role/?[a-zA-Z_0-9+=,.@\\-_/]+$"
          title: roleArn
          type: string
        stoppingCondition:
          $ref: '#/components/schemas/CreateJob_request_stoppingCondition'
        tags:
          additionalProperties:
            $ref: '#/components/schemas/String'
          description: "A tag object that consists of a key and an optional value,\
            \ used to manage metadata for Amazon Braket resources."
          title: tags
          type: object
      required:
      - algorithmSpecification
      - clientToken
      - deviceConfig
      - instanceConfig
      - jobName
      - outputDataConfig
      - roleArn
      title: CreateJob_request
      type: object
    CreateQuantumTask_request:
      properties:
        action:
          description: The action associated with the task.
          title: action
          type: string
        clientToken:
          description: The client token associated with the request.
          maxLength: 64
          minLength: 1
          title: clientToken
          type: string
        deviceArn:
          description: The ARN of the device to run the task on.
          maxLength: 256
          minLength: 1
          title: deviceArn
          type: string
        deviceParameters:
          description: The parameters for the device to run the task on.
          maxLength: 48000
          minLength: 1
          title: deviceParameters
          type: string
        jobToken:
          description: The token for an Amazon Braket job that associates it with
            the quantum task.
          maxLength: 128
          minLength: 1
          title: jobToken
          type: string
        outputS3Bucket:
          description: The S3 bucket to store task result files in.
          maxLength: 63
          minLength: 3
          title: outputS3Bucket
          type: string
        outputS3KeyPrefix:
          description: The key prefix for the location in the S3 bucket to store task
            results in.
          maxLength: 1024
          minLength: 1
          title: outputS3KeyPrefix
          type: string
        shots:
          description: The number of shots to use for the task.
          minimum: 0
          title: shots
          type: integer
        tags:
          additionalProperties:
            $ref: '#/components/schemas/String'
          description: Tags to be added to the quantum task you're creating.
          title: tags
          type: object
      required:
      - action
      - clientToken
      - deviceArn
      - outputS3Bucket
      - outputS3KeyPrefix
      - shots
      title: CreateQuantumTask_request
      type: object
    TagResource_request:
      properties:
        tags:
          additionalProperties:
            $ref: '#/components/schemas/String'
          description: Specify the tags to add to the resource.
          title: tags
          type: object
      required:
      - tags
      title: TagResource_request
      type: object
    SearchDevices_request:
      properties:
        filters:
          description: The filter values to use to search for a device.
          items:
            $ref: '#/components/schemas/SearchDevicesFilter'
          maxItems: 10
          minItems: 0
          title: filters
          type: array
        maxResults:
          description: The maximum number of results to return in the response.
          maximum: 100
          minimum: 1
          title: maxResults
          type: integer
        nextToken:
          description: A token used for pagination of results returned in the response.
            Use the token returned from the previous request continue results where
            the previous request ended.
          title: nextToken
          type: string
      required:
      - filters
      title: SearchDevices_request
      type: object
    SearchJobs_request:
      properties:
        filters:
          description: The filter values to use when searching for a job.
          items:
            $ref: '#/components/schemas/SearchJobsFilter'
          maxItems: 10
          minItems: 0
          title: filters
          type: array
        maxResults:
          description: The maximum number of results to return in the response.
          maximum: 100
          minimum: 1
          title: maxResults
          type: integer
        nextToken:
          description: A token used for pagination of results returned in the response.
            Use the token returned from the previous request to continue results where
            the previous request ended.
          title: nextToken
          type: string
      required:
      - filters
      title: SearchJobs_request
      type: object
    SearchQuantumTasks_request:
      properties:
        filters:
          description: Array of <code>SearchQuantumTasksFilter</code> objects.
          items:
            $ref: '#/components/schemas/SearchQuantumTasksFilter'
          maxItems: 10
          minItems: 0
          title: filters
          type: array
        maxResults:
          description: Maximum number of results to return in the response.
          maximum: 100
          minimum: 1
          title: maxResults
          type: integer
        nextToken:
          description: A token used for pagination of results returned in the response.
            Use the token returned from the previous request continue results where
            the previous request ended.
          title: nextToken
          type: string
      required:
      - filters
      title: SearchQuantumTasks_request
      type: object
    InputFileConfig_dataSource:
      allOf:
      - $ref: '#/components/schemas/DataSource'
      - description: The location of the channel data.
      title: InputFileConfig_dataSource
    GetJobResponse_algorithmSpecification:
      allOf:
      - $ref: '#/components/schemas/AlgorithmSpecification'
      - description: "Definition of the Amazon Braket job created. Specifies the container\
          \ image the job uses, information about the Python scripts used for entry\
          \ and training, and the user-defined metrics used to evaluation the job."
      example:
        containerImage:
          uri: ""
        scriptModeConfig:
          s3Uri: ""
          compressionType: ""
          entryPoint: ""
      title: GetJobResponse_algorithmSpecification
    GetJobResponse_checkpointConfig:
      allOf:
      - $ref: '#/components/schemas/JobCheckpointConfig'
      - description: Information about the output locations for job checkpoint data.
      example:
        s3Uri: ""
        localPath: ""
      title: GetJobResponse_checkpointConfig
    GetJobResponse_deviceConfig:
      allOf:
      - $ref: '#/components/schemas/DeviceConfig'
      - description: The quantum processing unit (QPU) or simulator used to run the
          Amazon Braket job.
      example:
        device: ""
      title: GetJobResponse_deviceConfig
    GetJobResponse_instanceConfig:
      allOf:
      - $ref: '#/components/schemas/InstanceConfig'
      - description: The resource instances to use while running the hybrid job on
          Amazon Braket.
      example:
        volumeSizeInGb: ""
        instanceCount: ""
        instanceType: ""
      title: GetJobResponse_instanceConfig
    GetJobResponse_outputDataConfig:
      allOf:
      - $ref: '#/components/schemas/JobOutputDataConfig'
      - description: The path to the S3 location where job artifacts are stored and
          the encryption key used to store them there.
      example:
        s3Path: ""
        kmsKeyId: ""
      title: GetJobResponse_outputDataConfig
    GetJobResponse_stoppingCondition:
      allOf:
      - $ref: '#/components/schemas/JobStoppingCondition'
      - description: The user-defined criteria that specifies when to stop a job running.
      example:
        maxRuntimeInSeconds: ""
      title: GetJobResponse_stoppingCondition
    CreateJobRequest_algorithmSpecification:
      allOf:
      - $ref: '#/components/schemas/AlgorithmSpecification'
      - description: Definition of the Amazon Braket job to be created. Specifies
          the container image the job uses and information about the Python scripts
          used for entry and training.
      example:
        containerImage:
          uri: ""
        scriptModeConfig:
          s3Uri: ""
          compressionType: ""
          entryPoint: ""
      title: CreateJobRequest_algorithmSpecification
    CreateJobRequest_deviceConfig:
      allOf:
      - $ref: '#/components/schemas/DeviceConfig'
      - description: The quantum processing unit (QPU) or simulator used to create
          an Amazon Braket job.
      example:
        device: ""
      title: CreateJobRequest_deviceConfig
    CreateJobRequest_instanceConfig:
      allOf:
      - $ref: '#/components/schemas/InstanceConfig'
      - description: Configuration of the resource instances to use while running
          the hybrid job on Amazon Braket.
      example:
        volumeSizeInGb: ""
        instanceCount: ""
        instanceType: ""
      title: CreateJobRequest_instanceConfig
    CreateJobRequest_outputDataConfig:
      allOf:
      - $ref: '#/components/schemas/JobOutputDataConfig'
      - description: The path to the S3 location where you want to store job artifacts
          and the encryption key used to store them.
      example:
        s3Path: ""
        kmsKeyId: ""
      title: CreateJobRequest_outputDataConfig
    CreateJobRequest_stoppingCondition:
      allOf:
      - $ref: '#/components/schemas/JobStoppingCondition'
      - description: ' The user-defined criteria that specifies when a job stops running.'
      example:
        maxRuntimeInSeconds: ""
      title: CreateJobRequest_stoppingCondition
    DataSource_s3DataSource:
      allOf:
      - $ref: '#/components/schemas/S3DataSource'
      - description: Information about the data stored in Amazon S3 used by the Amazon
          Braket job.
      title: DataSource_s3DataSource
  securitySchemes:
    hmac:
      description: Amazon Signature authorization v4
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsSigv4
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_hmac
x-hasEquivalentPaths: true
