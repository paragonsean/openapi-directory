/**
 * Braket
 * <p>The Amazon Braket API Reference provides information about the operations and structures supported in Amazon Braket.</p> <p>Additional Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/braket/latest/developerguide/what-is-braket.html\">Amazon Braket Developer Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2019-09-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobPrimaryStatus from './JobPrimaryStatus';

/**
 * The JobSummary model module.
 * @module model/JobSummary
 * @version 2019-09-01
 */
class JobSummary {
    /**
     * Constructs a new <code>JobSummary</code>.
     * Provides summary information about an Amazon Braket job.
     * @alias module:model/JobSummary
     * @param createdAt {Date} 
     * @param device {String} 
     * @param jobArn {String} 
     * @param jobName {String} 
     * @param status {module:model/JobPrimaryStatus} 
     */
    constructor(createdAt, device, jobArn, jobName, status) { 
        
        JobSummary.initialize(this, createdAt, device, jobArn, jobName, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdAt, device, jobArn, jobName, status) { 
        obj['createdAt'] = createdAt;
        obj['device'] = device;
        obj['jobArn'] = jobArn;
        obj['jobName'] = jobName;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>JobSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobSummary} obj Optional instance to populate.
     * @return {module:model/JobSummary} The populated <code>JobSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobSummary();

            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('device')) {
                obj['device'] = ApiClient.convertToType(data['device'], 'String');
            }
            if (data.hasOwnProperty('endedAt')) {
                obj['endedAt'] = ApiClient.convertToType(data['endedAt'], 'Date');
            }
            if (data.hasOwnProperty('jobArn')) {
                obj['jobArn'] = ApiClient.convertToType(data['jobArn'], 'String');
            }
            if (data.hasOwnProperty('jobName')) {
                obj['jobName'] = ApiClient.convertToType(data['jobName'], 'String');
            }
            if (data.hasOwnProperty('startedAt')) {
                obj['startedAt'] = ApiClient.convertToType(data['startedAt'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], JobPrimaryStatus);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JobSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `createdAt`
        if (data['createdAt']) { // data not null
          Date.validateJSON(data['createdAt']);
        }
        // validate the optional field `device`
        if (data['device']) { // data not null
          String.validateJSON(data['device']);
        }
        // validate the optional field `endedAt`
        if (data['endedAt']) { // data not null
          Date.validateJSON(data['endedAt']);
        }
        // validate the optional field `jobArn`
        if (data['jobArn']) { // data not null
          String.validateJSON(data['jobArn']);
        }
        // validate the optional field `jobName`
        if (data['jobName']) { // data not null
          String.validateJSON(data['jobName']);
        }
        // validate the optional field `startedAt`
        if (data['startedAt']) { // data not null
          Date.validateJSON(data['startedAt']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          JobPrimaryStatus.validateJSON(data['status']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }

        return true;
    }


}

JobSummary.RequiredProperties = ["createdAt", "device", "jobArn", "jobName", "status"];

/**
 * @member {Date} createdAt
 */
JobSummary.prototype['createdAt'] = undefined;

/**
 * @member {String} device
 */
JobSummary.prototype['device'] = undefined;

/**
 * @member {Date} endedAt
 */
JobSummary.prototype['endedAt'] = undefined;

/**
 * @member {String} jobArn
 */
JobSummary.prototype['jobArn'] = undefined;

/**
 * @member {String} jobName
 */
JobSummary.prototype['jobName'] = undefined;

/**
 * @member {Date} startedAt
 */
JobSummary.prototype['startedAt'] = undefined;

/**
 * @member {module:model/JobPrimaryStatus} status
 */
JobSummary.prototype['status'] = undefined;

/**
 * @member {Object} tags
 */
JobSummary.prototype['tags'] = undefined;






export default JobSummary;

