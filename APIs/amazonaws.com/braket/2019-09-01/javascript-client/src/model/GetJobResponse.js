/**
 * Braket
 * <p>The Amazon Braket API Reference provides information about the operations and structures supported in Amazon Braket.</p> <p>Additional Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/braket/latest/developerguide/what-is-braket.html\">Amazon Braket Developer Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2019-09-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetJobResponseAlgorithmSpecification from './GetJobResponseAlgorithmSpecification';
import GetJobResponseCheckpointConfig from './GetJobResponseCheckpointConfig';
import GetJobResponseDeviceConfig from './GetJobResponseDeviceConfig';
import GetJobResponseInstanceConfig from './GetJobResponseInstanceConfig';
import GetJobResponseOutputDataConfig from './GetJobResponseOutputDataConfig';
import GetJobResponseStoppingCondition from './GetJobResponseStoppingCondition';
import JobPrimaryStatus from './JobPrimaryStatus';

/**
 * The GetJobResponse model module.
 * @module model/GetJobResponse
 * @version 2019-09-01
 */
class GetJobResponse {
    /**
     * Constructs a new <code>GetJobResponse</code>.
     * @alias module:model/GetJobResponse
     * @param algorithmSpecification {module:model/GetJobResponseAlgorithmSpecification} 
     * @param createdAt {Date} 
     * @param instanceConfig {module:model/GetJobResponseInstanceConfig} 
     * @param jobArn {String} 
     * @param jobName {String} 
     * @param outputDataConfig {module:model/GetJobResponseOutputDataConfig} 
     * @param roleArn {String} 
     * @param status {module:model/JobPrimaryStatus} 
     */
    constructor(algorithmSpecification, createdAt, instanceConfig, jobArn, jobName, outputDataConfig, roleArn, status) { 
        
        GetJobResponse.initialize(this, algorithmSpecification, createdAt, instanceConfig, jobArn, jobName, outputDataConfig, roleArn, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, algorithmSpecification, createdAt, instanceConfig, jobArn, jobName, outputDataConfig, roleArn, status) { 
        obj['algorithmSpecification'] = algorithmSpecification;
        obj['createdAt'] = createdAt;
        obj['instanceConfig'] = instanceConfig;
        obj['jobArn'] = jobArn;
        obj['jobName'] = jobName;
        obj['outputDataConfig'] = outputDataConfig;
        obj['roleArn'] = roleArn;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>GetJobResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetJobResponse} obj Optional instance to populate.
     * @return {module:model/GetJobResponse} The populated <code>GetJobResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetJobResponse();

            if (data.hasOwnProperty('algorithmSpecification')) {
                obj['algorithmSpecification'] = GetJobResponseAlgorithmSpecification.constructFromObject(data['algorithmSpecification']);
            }
            if (data.hasOwnProperty('billableDuration')) {
                obj['billableDuration'] = ApiClient.convertToType(data['billableDuration'], 'Number');
            }
            if (data.hasOwnProperty('checkpointConfig')) {
                obj['checkpointConfig'] = GetJobResponseCheckpointConfig.constructFromObject(data['checkpointConfig']);
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('deviceConfig')) {
                obj['deviceConfig'] = GetJobResponseDeviceConfig.constructFromObject(data['deviceConfig']);
            }
            if (data.hasOwnProperty('endedAt')) {
                obj['endedAt'] = ApiClient.convertToType(data['endedAt'], 'Date');
            }
            if (data.hasOwnProperty('events')) {
                obj['events'] = ApiClient.convertToType(data['events'], Array);
            }
            if (data.hasOwnProperty('failureReason')) {
                obj['failureReason'] = ApiClient.convertToType(data['failureReason'], 'String');
            }
            if (data.hasOwnProperty('hyperParameters')) {
                obj['hyperParameters'] = ApiClient.convertToType(data['hyperParameters'], Object);
            }
            if (data.hasOwnProperty('inputDataConfig')) {
                obj['inputDataConfig'] = ApiClient.convertToType(data['inputDataConfig'], Array);
            }
            if (data.hasOwnProperty('instanceConfig')) {
                obj['instanceConfig'] = GetJobResponseInstanceConfig.constructFromObject(data['instanceConfig']);
            }
            if (data.hasOwnProperty('jobArn')) {
                obj['jobArn'] = ApiClient.convertToType(data['jobArn'], 'String');
            }
            if (data.hasOwnProperty('jobName')) {
                obj['jobName'] = ApiClient.convertToType(data['jobName'], 'String');
            }
            if (data.hasOwnProperty('outputDataConfig')) {
                obj['outputDataConfig'] = GetJobResponseOutputDataConfig.constructFromObject(data['outputDataConfig']);
            }
            if (data.hasOwnProperty('roleArn')) {
                obj['roleArn'] = ApiClient.convertToType(data['roleArn'], 'String');
            }
            if (data.hasOwnProperty('startedAt')) {
                obj['startedAt'] = ApiClient.convertToType(data['startedAt'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], JobPrimaryStatus);
            }
            if (data.hasOwnProperty('stoppingCondition')) {
                obj['stoppingCondition'] = GetJobResponseStoppingCondition.constructFromObject(data['stoppingCondition']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], Object);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetJobResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetJobResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GetJobResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `algorithmSpecification`
        if (data['algorithmSpecification']) { // data not null
          GetJobResponseAlgorithmSpecification.validateJSON(data['algorithmSpecification']);
        }
        // validate the optional field `billableDuration`
        if (data['billableDuration']) { // data not null
          Number.validateJSON(data['billableDuration']);
        }
        // validate the optional field `checkpointConfig`
        if (data['checkpointConfig']) { // data not null
          GetJobResponseCheckpointConfig.validateJSON(data['checkpointConfig']);
        }
        // validate the optional field `createdAt`
        if (data['createdAt']) { // data not null
          Date.validateJSON(data['createdAt']);
        }
        // validate the optional field `deviceConfig`
        if (data['deviceConfig']) { // data not null
          GetJobResponseDeviceConfig.validateJSON(data['deviceConfig']);
        }
        // validate the optional field `endedAt`
        if (data['endedAt']) { // data not null
          Date.validateJSON(data['endedAt']);
        }
        // validate the optional field `events`
        if (data['events']) { // data not null
          Array.validateJSON(data['events']);
        }
        // validate the optional field `failureReason`
        if (data['failureReason']) { // data not null
          String.validateJSON(data['failureReason']);
        }
        // validate the optional field `hyperParameters`
        if (data['hyperParameters']) { // data not null
          Object.validateJSON(data['hyperParameters']);
        }
        // validate the optional field `inputDataConfig`
        if (data['inputDataConfig']) { // data not null
          Array.validateJSON(data['inputDataConfig']);
        }
        // validate the optional field `instanceConfig`
        if (data['instanceConfig']) { // data not null
          GetJobResponseInstanceConfig.validateJSON(data['instanceConfig']);
        }
        // validate the optional field `jobArn`
        if (data['jobArn']) { // data not null
          String.validateJSON(data['jobArn']);
        }
        // validate the optional field `jobName`
        if (data['jobName']) { // data not null
          String.validateJSON(data['jobName']);
        }
        // validate the optional field `outputDataConfig`
        if (data['outputDataConfig']) { // data not null
          GetJobResponseOutputDataConfig.validateJSON(data['outputDataConfig']);
        }
        // validate the optional field `roleArn`
        if (data['roleArn']) { // data not null
          String.validateJSON(data['roleArn']);
        }
        // validate the optional field `startedAt`
        if (data['startedAt']) { // data not null
          Date.validateJSON(data['startedAt']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          JobPrimaryStatus.validateJSON(data['status']);
        }
        // validate the optional field `stoppingCondition`
        if (data['stoppingCondition']) { // data not null
          GetJobResponseStoppingCondition.validateJSON(data['stoppingCondition']);
        }
        // validate the optional field `tags`
        if (data['tags']) { // data not null
          Object.validateJSON(data['tags']);
        }

        return true;
    }


}

GetJobResponse.RequiredProperties = ["algorithmSpecification", "createdAt", "instanceConfig", "jobArn", "jobName", "outputDataConfig", "roleArn", "status"];

/**
 * @member {module:model/GetJobResponseAlgorithmSpecification} algorithmSpecification
 */
GetJobResponse.prototype['algorithmSpecification'] = undefined;

/**
 * @member {Number} billableDuration
 */
GetJobResponse.prototype['billableDuration'] = undefined;

/**
 * @member {module:model/GetJobResponseCheckpointConfig} checkpointConfig
 */
GetJobResponse.prototype['checkpointConfig'] = undefined;

/**
 * @member {Date} createdAt
 */
GetJobResponse.prototype['createdAt'] = undefined;

/**
 * @member {module:model/GetJobResponseDeviceConfig} deviceConfig
 */
GetJobResponse.prototype['deviceConfig'] = undefined;

/**
 * @member {Date} endedAt
 */
GetJobResponse.prototype['endedAt'] = undefined;

/**
 * @member {Array} events
 */
GetJobResponse.prototype['events'] = undefined;

/**
 * @member {String} failureReason
 */
GetJobResponse.prototype['failureReason'] = undefined;

/**
 * @member {Object} hyperParameters
 */
GetJobResponse.prototype['hyperParameters'] = undefined;

/**
 * @member {Array} inputDataConfig
 */
GetJobResponse.prototype['inputDataConfig'] = undefined;

/**
 * @member {module:model/GetJobResponseInstanceConfig} instanceConfig
 */
GetJobResponse.prototype['instanceConfig'] = undefined;

/**
 * @member {String} jobArn
 */
GetJobResponse.prototype['jobArn'] = undefined;

/**
 * @member {String} jobName
 */
GetJobResponse.prototype['jobName'] = undefined;

/**
 * @member {module:model/GetJobResponseOutputDataConfig} outputDataConfig
 */
GetJobResponse.prototype['outputDataConfig'] = undefined;

/**
 * @member {String} roleArn
 */
GetJobResponse.prototype['roleArn'] = undefined;

/**
 * @member {Date} startedAt
 */
GetJobResponse.prototype['startedAt'] = undefined;

/**
 * @member {module:model/JobPrimaryStatus} status
 */
GetJobResponse.prototype['status'] = undefined;

/**
 * @member {module:model/GetJobResponseStoppingCondition} stoppingCondition
 */
GetJobResponse.prototype['stoppingCondition'] = undefined;

/**
 * @member {Object} tags
 */
GetJobResponse.prototype['tags'] = undefined;






export default GetJobResponse;

