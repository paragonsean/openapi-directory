/**
 * Braket
 * <p>The Amazon Braket API Reference provides information about the operations and structures supported in Amazon Braket.</p> <p>Additional Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/braket/latest/developerguide/what-is-braket.html\">Amazon Braket Developer Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2019-09-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InputFileConfigDataSource from './InputFileConfigDataSource';

/**
 * The InputFileConfig model module.
 * @module model/InputFileConfig
 * @version 2019-09-01
 */
class InputFileConfig {
    /**
     * Constructs a new <code>InputFileConfig</code>.
     * A list of parameters that specify the input channels, type of input data, and where it is located.
     * @alias module:model/InputFileConfig
     * @param channelName {String} 
     * @param dataSource {module:model/InputFileConfigDataSource} 
     */
    constructor(channelName, dataSource) { 
        
        InputFileConfig.initialize(this, channelName, dataSource);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, channelName, dataSource) { 
        obj['channelName'] = channelName;
        obj['dataSource'] = dataSource;
    }

    /**
     * Constructs a <code>InputFileConfig</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InputFileConfig} obj Optional instance to populate.
     * @return {module:model/InputFileConfig} The populated <code>InputFileConfig</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InputFileConfig();

            if (data.hasOwnProperty('channelName')) {
                obj['channelName'] = ApiClient.convertToType(data['channelName'], 'String');
            }
            if (data.hasOwnProperty('contentType')) {
                obj['contentType'] = ApiClient.convertToType(data['contentType'], 'String');
            }
            if (data.hasOwnProperty('dataSource')) {
                obj['dataSource'] = InputFileConfigDataSource.constructFromObject(data['dataSource']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InputFileConfig</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InputFileConfig</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InputFileConfig.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `channelName`
        if (data['channelName']) { // data not null
          String.validateJSON(data['channelName']);
        }
        // validate the optional field `contentType`
        if (data['contentType']) { // data not null
          String.validateJSON(data['contentType']);
        }
        // validate the optional field `dataSource`
        if (data['dataSource']) { // data not null
          InputFileConfigDataSource.validateJSON(data['dataSource']);
        }

        return true;
    }


}

InputFileConfig.RequiredProperties = ["channelName", "dataSource"];

/**
 * @member {String} channelName
 */
InputFileConfig.prototype['channelName'] = undefined;

/**
 * @member {String} contentType
 */
InputFileConfig.prototype['contentType'] = undefined;

/**
 * @member {module:model/InputFileConfigDataSource} dataSource
 */
InputFileConfig.prototype['dataSource'] = undefined;






export default InputFileConfig;

