/**
 * Braket
 * <p>The Amazon Braket API Reference provides information about the operations and structures supported in Amazon Braket.</p> <p>Additional Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/braket/latest/developerguide/what-is-braket.html\">Amazon Braket Developer Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2019-09-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SearchQuantumTasksFilter from './SearchQuantumTasksFilter';

/**
 * The SearchQuantumTasksRequest model module.
 * @module model/SearchQuantumTasksRequest
 * @version 2019-09-01
 */
class SearchQuantumTasksRequest {
    /**
     * Constructs a new <code>SearchQuantumTasksRequest</code>.
     * @alias module:model/SearchQuantumTasksRequest
     * @param filters {Array.<module:model/SearchQuantumTasksFilter>} Array of <code>SearchQuantumTasksFilter</code> objects.
     */
    constructor(filters) { 
        
        SearchQuantumTasksRequest.initialize(this, filters);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, filters) { 
        obj['filters'] = filters;
    }

    /**
     * Constructs a <code>SearchQuantumTasksRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SearchQuantumTasksRequest} obj Optional instance to populate.
     * @return {module:model/SearchQuantumTasksRequest} The populated <code>SearchQuantumTasksRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SearchQuantumTasksRequest();

            if (data.hasOwnProperty('filters')) {
                obj['filters'] = ApiClient.convertToType(data['filters'], [SearchQuantumTasksFilter]);
            }
            if (data.hasOwnProperty('maxResults')) {
                obj['maxResults'] = ApiClient.convertToType(data['maxResults'], 'Number');
            }
            if (data.hasOwnProperty('nextToken')) {
                obj['nextToken'] = ApiClient.convertToType(data['nextToken'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SearchQuantumTasksRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SearchQuantumTasksRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SearchQuantumTasksRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['filters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['filters'])) {
                throw new Error("Expected the field `filters` to be an array in the JSON data but got " + data['filters']);
            }
            // validate the optional field `filters` (array)
            for (const item of data['filters']) {
                SearchQuantumTasksFilter.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['nextToken'] && !(typeof data['nextToken'] === 'string' || data['nextToken'] instanceof String)) {
            throw new Error("Expected the field `nextToken` to be a primitive type in the JSON string but got " + data['nextToken']);
        }

        return true;
    }


}

SearchQuantumTasksRequest.RequiredProperties = ["filters"];

/**
 * Array of <code>SearchQuantumTasksFilter</code> objects.
 * @member {Array.<module:model/SearchQuantumTasksFilter>} filters
 */
SearchQuantumTasksRequest.prototype['filters'] = undefined;

/**
 * Maximum number of results to return in the response.
 * @member {Number} maxResults
 */
SearchQuantumTasksRequest.prototype['maxResults'] = undefined;

/**
 * A token used for pagination of results returned in the response. Use the token returned from the previous request continue results where the previous request ended.
 * @member {String} nextToken
 */
SearchQuantumTasksRequest.prototype['nextToken'] = undefined;






export default SearchQuantumTasksRequest;

