/**
 * Braket
 * <p>The Amazon Braket API Reference provides information about the operations and structures supported in Amazon Braket.</p> <p>Additional Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/braket/latest/developerguide/what-is-braket.html\">Amazon Braket Developer Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2019-09-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDataSource.h
 *
 * Information about the source of the data used by the Amazon Braket job.
 */

#ifndef OAIDataSource_H
#define OAIDataSource_H

#include <QJsonObject>

#include "OAIDataSource_s3DataSource.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDataSource_s3DataSource;

class OAIDataSource : public OAIObject {
public:
    OAIDataSource();
    OAIDataSource(QString json);
    ~OAIDataSource() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDataSource_s3DataSource getS3DataSource() const;
    void setS3DataSource(const OAIDataSource_s3DataSource &s3_data_source);
    bool is_s3_data_source_Set() const;
    bool is_s3_data_source_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDataSource_s3DataSource m_s3_data_source;
    bool m_s3_data_source_isSet;
    bool m_s3_data_source_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDataSource)

#endif // OAIDataSource_H
