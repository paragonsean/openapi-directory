/**
 * Braket
 * <p>The Amazon Braket API Reference provides information about the operations and structures supported in Amazon Braket.</p> <p>Additional Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/braket/latest/developerguide/what-is-braket.html\">Amazon Braket Developer Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2019-09-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDeviceStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDeviceStatus::OAIDeviceStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDeviceStatus::OAIDeviceStatus() {
    this->initializeModel();
}

OAIDeviceStatus::~OAIDeviceStatus() {}

void OAIDeviceStatus::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIDeviceStatus::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIDeviceStatus::fromJson(QString jsonString) {
    
    if ( jsonString.compare("ONLINE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeviceStatus::ONLINE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("OFFLINE", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeviceStatus::OFFLINE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("RETIRED", Qt::CaseInsensitive) == 0) {
        m_value = eOAIDeviceStatus::RETIRED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIDeviceStatus::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIDeviceStatus::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIDeviceStatus::ONLINE:
            val = "ONLINE";
            break;
        case eOAIDeviceStatus::OFFLINE:
            val = "OFFLINE";
            break;
        case eOAIDeviceStatus::RETIRED:
            val = "RETIRED";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIDeviceStatus::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIDeviceStatus::eOAIDeviceStatus OAIDeviceStatus::getValue() const {
    return m_value;
}

void OAIDeviceStatus::setValue(const OAIDeviceStatus::eOAIDeviceStatus& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIDeviceStatus::isSet() const {
    
    return m_value_isSet;
}

bool OAIDeviceStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
