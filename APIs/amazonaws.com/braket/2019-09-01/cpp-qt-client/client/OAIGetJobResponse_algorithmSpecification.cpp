/**
 * Braket
 * <p>The Amazon Braket API Reference provides information about the operations and structures supported in Amazon Braket.</p> <p>Additional Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/braket/latest/developerguide/what-is-braket.html\">Amazon Braket Developer Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2019-09-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetJobResponse_algorithmSpecification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetJobResponse_algorithmSpecification::OAIGetJobResponse_algorithmSpecification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetJobResponse_algorithmSpecification::OAIGetJobResponse_algorithmSpecification() {
    this->initializeModel();
}

OAIGetJobResponse_algorithmSpecification::~OAIGetJobResponse_algorithmSpecification() {}

void OAIGetJobResponse_algorithmSpecification::initializeModel() {

    m_container_image_isSet = false;
    m_container_image_isValid = false;

    m_script_mode_config_isSet = false;
    m_script_mode_config_isValid = false;
}

void OAIGetJobResponse_algorithmSpecification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetJobResponse_algorithmSpecification::fromJsonObject(QJsonObject json) {

    m_container_image_isValid = ::OpenAPI::fromJsonValue(m_container_image, json[QString("containerImage")]);
    m_container_image_isSet = !json[QString("containerImage")].isNull() && m_container_image_isValid;

    m_script_mode_config_isValid = ::OpenAPI::fromJsonValue(m_script_mode_config, json[QString("scriptModeConfig")]);
    m_script_mode_config_isSet = !json[QString("scriptModeConfig")].isNull() && m_script_mode_config_isValid;
}

QString OAIGetJobResponse_algorithmSpecification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetJobResponse_algorithmSpecification::asJsonObject() const {
    QJsonObject obj;
    if (m_container_image.isSet()) {
        obj.insert(QString("containerImage"), ::OpenAPI::toJsonValue(m_container_image));
    }
    if (m_script_mode_config.isSet()) {
        obj.insert(QString("scriptModeConfig"), ::OpenAPI::toJsonValue(m_script_mode_config));
    }
    return obj;
}

OAICreateJob_request_algorithmSpecification_containerImage OAIGetJobResponse_algorithmSpecification::getContainerImage() const {
    return m_container_image;
}
void OAIGetJobResponse_algorithmSpecification::setContainerImage(const OAICreateJob_request_algorithmSpecification_containerImage &container_image) {
    m_container_image = container_image;
    m_container_image_isSet = true;
}

bool OAIGetJobResponse_algorithmSpecification::is_container_image_Set() const{
    return m_container_image_isSet;
}

bool OAIGetJobResponse_algorithmSpecification::is_container_image_Valid() const{
    return m_container_image_isValid;
}

OAICreateJob_request_algorithmSpecification_scriptModeConfig OAIGetJobResponse_algorithmSpecification::getScriptModeConfig() const {
    return m_script_mode_config;
}
void OAIGetJobResponse_algorithmSpecification::setScriptModeConfig(const OAICreateJob_request_algorithmSpecification_scriptModeConfig &script_mode_config) {
    m_script_mode_config = script_mode_config;
    m_script_mode_config_isSet = true;
}

bool OAIGetJobResponse_algorithmSpecification::is_script_mode_config_Set() const{
    return m_script_mode_config_isSet;
}

bool OAIGetJobResponse_algorithmSpecification::is_script_mode_config_Valid() const{
    return m_script_mode_config_isValid;
}

bool OAIGetJobResponse_algorithmSpecification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_container_image.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_script_mode_config.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetJobResponse_algorithmSpecification::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
