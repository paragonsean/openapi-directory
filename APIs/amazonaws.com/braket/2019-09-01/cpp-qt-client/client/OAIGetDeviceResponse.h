/**
 * Braket
 * <p>The Amazon Braket API Reference provides information about the operations and structures supported in Amazon Braket.</p> <p>Additional Resources:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/braket/latest/developerguide/what-is-braket.html\">Amazon Braket Developer Guide</a> </p> </li> </ul>
 *
 * The version of the OpenAPI document: 2019-09-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetDeviceResponse.h
 *
 * 
 */

#ifndef OAIGetDeviceResponse_H
#define OAIGetDeviceResponse_H

#include <QJsonObject>

#include "OAIDeviceStatus.h"
#include "OAIDeviceType.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetDeviceResponse : public OAIObject {
public:
    OAIGetDeviceResponse();
    OAIGetDeviceResponse(QString json);
    ~OAIGetDeviceResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDeviceArn() const;
    void setDeviceArn(const QString &device_arn);
    bool is_device_arn_Set() const;
    bool is_device_arn_Valid() const;

    QString getDeviceCapabilities() const;
    void setDeviceCapabilities(const QString &device_capabilities);
    bool is_device_capabilities_Set() const;
    bool is_device_capabilities_Valid() const;

    QString getDeviceName() const;
    void setDeviceName(const QString &device_name);
    bool is_device_name_Set() const;
    bool is_device_name_Valid() const;

    OAIDeviceStatus getDeviceStatus() const;
    void setDeviceStatus(const OAIDeviceStatus &device_status);
    bool is_device_status_Set() const;
    bool is_device_status_Valid() const;

    OAIDeviceType getDeviceType() const;
    void setDeviceType(const OAIDeviceType &device_type);
    bool is_device_type_Set() const;
    bool is_device_type_Valid() const;

    QString getProviderName() const;
    void setProviderName(const QString &provider_name);
    bool is_provider_name_Set() const;
    bool is_provider_name_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_device_arn;
    bool m_device_arn_isSet;
    bool m_device_arn_isValid;

    QString m_device_capabilities;
    bool m_device_capabilities_isSet;
    bool m_device_capabilities_isValid;

    QString m_device_name;
    bool m_device_name_isSet;
    bool m_device_name_isValid;

    OAIDeviceStatus m_device_status;
    bool m_device_status_isSet;
    bool m_device_status_isValid;

    OAIDeviceType m_device_type;
    bool m_device_type_isSet;
    bool m_device_type_isValid;

    QString m_provider_name;
    bool m_provider_name_isSet;
    bool m_provider_name_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetDeviceResponse)

#endif // OAIGetDeviceResponse_H
