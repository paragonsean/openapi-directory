# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnomalousLogGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, log_group_name: str=None, impact_start_time: datetime=None, impact_end_time: datetime=None, number_of_log_lines_scanned: int=None, log_anomaly_showcases: List=None):
        """AnomalousLogGroup - a model defined in OpenAPI

        :param log_group_name: The log_group_name of this AnomalousLogGroup.
        :param impact_start_time: The impact_start_time of this AnomalousLogGroup.
        :param impact_end_time: The impact_end_time of this AnomalousLogGroup.
        :param number_of_log_lines_scanned: The number_of_log_lines_scanned of this AnomalousLogGroup.
        :param log_anomaly_showcases: The log_anomaly_showcases of this AnomalousLogGroup.
        """
        self.openapi_types = {
            'log_group_name': str,
            'impact_start_time': datetime,
            'impact_end_time': datetime,
            'number_of_log_lines_scanned': int,
            'log_anomaly_showcases': List
        }

        self.attribute_map = {
            'log_group_name': 'LogGroupName',
            'impact_start_time': 'ImpactStartTime',
            'impact_end_time': 'ImpactEndTime',
            'number_of_log_lines_scanned': 'NumberOfLogLinesScanned',
            'log_anomaly_showcases': 'LogAnomalyShowcases'
        }

        self._log_group_name = log_group_name
        self._impact_start_time = impact_start_time
        self._impact_end_time = impact_end_time
        self._number_of_log_lines_scanned = number_of_log_lines_scanned
        self._log_anomaly_showcases = log_anomaly_showcases

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnomalousLogGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnomalousLogGroup of this AnomalousLogGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def log_group_name(self):
        """Gets the log_group_name of this AnomalousLogGroup.


        :return: The log_group_name of this AnomalousLogGroup.
        :rtype: str
        """
        return self._log_group_name

    @log_group_name.setter
    def log_group_name(self, log_group_name):
        """Sets the log_group_name of this AnomalousLogGroup.


        :param log_group_name: The log_group_name of this AnomalousLogGroup.
        :type log_group_name: str
        """

        self._log_group_name = log_group_name

    @property
    def impact_start_time(self):
        """Gets the impact_start_time of this AnomalousLogGroup.


        :return: The impact_start_time of this AnomalousLogGroup.
        :rtype: datetime
        """
        return self._impact_start_time

    @impact_start_time.setter
    def impact_start_time(self, impact_start_time):
        """Sets the impact_start_time of this AnomalousLogGroup.


        :param impact_start_time: The impact_start_time of this AnomalousLogGroup.
        :type impact_start_time: datetime
        """

        self._impact_start_time = impact_start_time

    @property
    def impact_end_time(self):
        """Gets the impact_end_time of this AnomalousLogGroup.


        :return: The impact_end_time of this AnomalousLogGroup.
        :rtype: datetime
        """
        return self._impact_end_time

    @impact_end_time.setter
    def impact_end_time(self, impact_end_time):
        """Sets the impact_end_time of this AnomalousLogGroup.


        :param impact_end_time: The impact_end_time of this AnomalousLogGroup.
        :type impact_end_time: datetime
        """

        self._impact_end_time = impact_end_time

    @property
    def number_of_log_lines_scanned(self):
        """Gets the number_of_log_lines_scanned of this AnomalousLogGroup.


        :return: The number_of_log_lines_scanned of this AnomalousLogGroup.
        :rtype: int
        """
        return self._number_of_log_lines_scanned

    @number_of_log_lines_scanned.setter
    def number_of_log_lines_scanned(self, number_of_log_lines_scanned):
        """Sets the number_of_log_lines_scanned of this AnomalousLogGroup.


        :param number_of_log_lines_scanned: The number_of_log_lines_scanned of this AnomalousLogGroup.
        :type number_of_log_lines_scanned: int
        """

        self._number_of_log_lines_scanned = number_of_log_lines_scanned

    @property
    def log_anomaly_showcases(self):
        """Gets the log_anomaly_showcases of this AnomalousLogGroup.


        :return: The log_anomaly_showcases of this AnomalousLogGroup.
        :rtype: List
        """
        return self._log_anomaly_showcases

    @log_anomaly_showcases.setter
    def log_anomaly_showcases(self, log_anomaly_showcases):
        """Sets the log_anomaly_showcases of this AnomalousLogGroup.


        :param log_anomaly_showcases: The log_anomaly_showcases of this AnomalousLogGroup.
        :type log_anomaly_showcases: List
        """

        self._log_anomaly_showcases = log_anomaly_showcases
