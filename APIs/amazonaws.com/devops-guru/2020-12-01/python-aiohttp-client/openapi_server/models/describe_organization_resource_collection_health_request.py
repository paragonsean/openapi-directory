# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class DescribeOrganizationResourceCollectionHealthRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, organization_resource_collection_type: str=None, account_ids: List[str]=None, organizational_unit_ids: List[str]=None, next_token: str=None, max_results: int=None):
        """DescribeOrganizationResourceCollectionHealthRequest - a model defined in OpenAPI

        :param organization_resource_collection_type: The organization_resource_collection_type of this DescribeOrganizationResourceCollectionHealthRequest.
        :param account_ids: The account_ids of this DescribeOrganizationResourceCollectionHealthRequest.
        :param organizational_unit_ids: The organizational_unit_ids of this DescribeOrganizationResourceCollectionHealthRequest.
        :param next_token: The next_token of this DescribeOrganizationResourceCollectionHealthRequest.
        :param max_results: The max_results of this DescribeOrganizationResourceCollectionHealthRequest.
        """
        self.openapi_types = {
            'organization_resource_collection_type': str,
            'account_ids': List[str],
            'organizational_unit_ids': List[str],
            'next_token': str,
            'max_results': int
        }

        self.attribute_map = {
            'organization_resource_collection_type': 'OrganizationResourceCollectionType',
            'account_ids': 'AccountIds',
            'organizational_unit_ids': 'OrganizationalUnitIds',
            'next_token': 'NextToken',
            'max_results': 'MaxResults'
        }

        self._organization_resource_collection_type = organization_resource_collection_type
        self._account_ids = account_ids
        self._organizational_unit_ids = organizational_unit_ids
        self._next_token = next_token
        self._max_results = max_results

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeOrganizationResourceCollectionHealthRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeOrganizationResourceCollectionHealth_request of this DescribeOrganizationResourceCollectionHealthRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def organization_resource_collection_type(self):
        """Gets the organization_resource_collection_type of this DescribeOrganizationResourceCollectionHealthRequest.

         An Amazon Web Services resource collection type. This type specifies how analyzed Amazon Web Services resources are defined. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 

        :return: The organization_resource_collection_type of this DescribeOrganizationResourceCollectionHealthRequest.
        :rtype: str
        """
        return self._organization_resource_collection_type

    @organization_resource_collection_type.setter
    def organization_resource_collection_type(self, organization_resource_collection_type):
        """Sets the organization_resource_collection_type of this DescribeOrganizationResourceCollectionHealthRequest.

         An Amazon Web Services resource collection type. This type specifies how analyzed Amazon Web Services resources are defined. The two types of Amazon Web Services resource collections supported are Amazon Web Services CloudFormation stacks and Amazon Web Services resources that contain the same Amazon Web Services tag. DevOps Guru can be configured to analyze the Amazon Web Services resources that are defined in the stacks or that are tagged using the same tag <i>key</i>. You can specify up to 500 Amazon Web Services CloudFormation stacks. 

        :param organization_resource_collection_type: The organization_resource_collection_type of this DescribeOrganizationResourceCollectionHealthRequest.
        :type organization_resource_collection_type: str
        """
        allowed_values = ["AWS_CLOUD_FORMATION", "AWS_SERVICE", "AWS_ACCOUNT", "AWS_TAGS"]  # noqa: E501
        if organization_resource_collection_type not in allowed_values:
            raise ValueError(
                "Invalid value for `organization_resource_collection_type` ({0}), must be one of {1}"
                .format(organization_resource_collection_type, allowed_values)
            )

        self._organization_resource_collection_type = organization_resource_collection_type

    @property
    def account_ids(self):
        """Gets the account_ids of this DescribeOrganizationResourceCollectionHealthRequest.

        The ID of the Amazon Web Services account.

        :return: The account_ids of this DescribeOrganizationResourceCollectionHealthRequest.
        :rtype: List[str]
        """
        return self._account_ids

    @account_ids.setter
    def account_ids(self, account_ids):
        """Sets the account_ids of this DescribeOrganizationResourceCollectionHealthRequest.

        The ID of the Amazon Web Services account.

        :param account_ids: The account_ids of this DescribeOrganizationResourceCollectionHealthRequest.
        :type account_ids: List[str]
        """
        if account_ids is not None and len(account_ids) > 5:
            raise ValueError("Invalid value for `account_ids`, number of items must be less than or equal to `5`")
        if account_ids is not None and len(account_ids) < 0:
            raise ValueError("Invalid value for `account_ids`, number of items must be greater than or equal to `0`")

        self._account_ids = account_ids

    @property
    def organizational_unit_ids(self):
        """Gets the organizational_unit_ids of this DescribeOrganizationResourceCollectionHealthRequest.

        The ID of the organizational unit.

        :return: The organizational_unit_ids of this DescribeOrganizationResourceCollectionHealthRequest.
        :rtype: List[str]
        """
        return self._organizational_unit_ids

    @organizational_unit_ids.setter
    def organizational_unit_ids(self, organizational_unit_ids):
        """Sets the organizational_unit_ids of this DescribeOrganizationResourceCollectionHealthRequest.

        The ID of the organizational unit.

        :param organizational_unit_ids: The organizational_unit_ids of this DescribeOrganizationResourceCollectionHealthRequest.
        :type organizational_unit_ids: List[str]
        """
        if organizational_unit_ids is not None and len(organizational_unit_ids) > 5:
            raise ValueError("Invalid value for `organizational_unit_ids`, number of items must be less than or equal to `5`")
        if organizational_unit_ids is not None and len(organizational_unit_ids) < 0:
            raise ValueError("Invalid value for `organizational_unit_ids`, number of items must be greater than or equal to `0`")

        self._organizational_unit_ids = organizational_unit_ids

    @property
    def next_token(self):
        """Gets the next_token of this DescribeOrganizationResourceCollectionHealthRequest.

        The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.

        :return: The next_token of this DescribeOrganizationResourceCollectionHealthRequest.
        :rtype: str
        """
        return self._next_token

    @next_token.setter
    def next_token(self, next_token):
        """Sets the next_token of this DescribeOrganizationResourceCollectionHealthRequest.

        The pagination token to use to retrieve the next page of results for this operation. If this value is null, it retrieves the first page.

        :param next_token: The next_token of this DescribeOrganizationResourceCollectionHealthRequest.
        :type next_token: str
        """
        if next_token is not None and len(next_token) > 36:
            raise ValueError("Invalid value for `next_token`, length must be less than or equal to `36`")
        if next_token is not None and len(next_token) < 36:
            raise ValueError("Invalid value for `next_token`, length must be greater than or equal to `36`")
        if next_token is not None and not re.search(r'^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$', next_token):
            raise ValueError("Invalid value for `next_token`, must be a follow pattern or equal to `/^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$/`")

        self._next_token = next_token

    @property
    def max_results(self):
        """Gets the max_results of this DescribeOrganizationResourceCollectionHealthRequest.

        The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.

        :return: The max_results of this DescribeOrganizationResourceCollectionHealthRequest.
        :rtype: int
        """
        return self._max_results

    @max_results.setter
    def max_results(self, max_results):
        """Sets the max_results of this DescribeOrganizationResourceCollectionHealthRequest.

        The maximum number of results to return with a single call. To retrieve the remaining results, make another call with the returned <code>nextToken</code> value.

        :param max_results: The max_results of this DescribeOrganizationResourceCollectionHealthRequest.
        :type max_results: int
        """
        if max_results is not None and max_results > 500:
            raise ValueError("Invalid value for `max_results`, must be a value less than or equal to `500`")
        if max_results is not None and max_results < 1:
            raise ValueError("Invalid value for `max_results`, must be a value greater than or equal to `1`")

        self._max_results = max_results
