# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.add_notification_channel_request_config import AddNotificationChannelRequestConfig
from openapi_server import util


class AddNotificationChannelRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config: AddNotificationChannelRequestConfig=None):
        """AddNotificationChannelRequest - a model defined in OpenAPI

        :param config: The config of this AddNotificationChannelRequest.
        """
        self.openapi_types = {
            'config': AddNotificationChannelRequestConfig
        }

        self.attribute_map = {
            'config': 'Config'
        }

        self._config = config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddNotificationChannelRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddNotificationChannel_request of this AddNotificationChannelRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config(self):
        """Gets the config of this AddNotificationChannelRequest.


        :return: The config of this AddNotificationChannelRequest.
        :rtype: AddNotificationChannelRequestConfig
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this AddNotificationChannelRequest.


        :param config: The config of this AddNotificationChannelRequest.
        :type config: AddNotificationChannelRequestConfig
        """
        if config is None:
            raise ValueError("Invalid value for `config`, must not be `None`")

        self._config = config
