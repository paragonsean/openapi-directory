# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_class import EventClass
from openapi_server.models.event_data_source import EventDataSource
from openapi_server.models.list_events_request_filters_event_time_range import ListEventsRequestFiltersEventTimeRange
from openapi_server.models.resource_collection import ResourceCollection
from openapi_server import util


class ListEventsFilters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, insight_id: str=None, event_time_range: ListEventsRequestFiltersEventTimeRange=None, event_class: EventClass=None, event_source: str=None, data_source: EventDataSource=None, resource_collection: ResourceCollection=None):
        """ListEventsFilters - a model defined in OpenAPI

        :param insight_id: The insight_id of this ListEventsFilters.
        :param event_time_range: The event_time_range of this ListEventsFilters.
        :param event_class: The event_class of this ListEventsFilters.
        :param event_source: The event_source of this ListEventsFilters.
        :param data_source: The data_source of this ListEventsFilters.
        :param resource_collection: The resource_collection of this ListEventsFilters.
        """
        self.openapi_types = {
            'insight_id': str,
            'event_time_range': ListEventsRequestFiltersEventTimeRange,
            'event_class': EventClass,
            'event_source': str,
            'data_source': EventDataSource,
            'resource_collection': ResourceCollection
        }

        self.attribute_map = {
            'insight_id': 'InsightId',
            'event_time_range': 'EventTimeRange',
            'event_class': 'EventClass',
            'event_source': 'EventSource',
            'data_source': 'DataSource',
            'resource_collection': 'ResourceCollection'
        }

        self._insight_id = insight_id
        self._event_time_range = event_time_range
        self._event_class = event_class
        self._event_source = event_source
        self._data_source = data_source
        self._resource_collection = resource_collection

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListEventsFilters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListEventsFilters of this ListEventsFilters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def insight_id(self):
        """Gets the insight_id of this ListEventsFilters.


        :return: The insight_id of this ListEventsFilters.
        :rtype: str
        """
        return self._insight_id

    @insight_id.setter
    def insight_id(self, insight_id):
        """Sets the insight_id of this ListEventsFilters.


        :param insight_id: The insight_id of this ListEventsFilters.
        :type insight_id: str
        """

        self._insight_id = insight_id

    @property
    def event_time_range(self):
        """Gets the event_time_range of this ListEventsFilters.


        :return: The event_time_range of this ListEventsFilters.
        :rtype: ListEventsRequestFiltersEventTimeRange
        """
        return self._event_time_range

    @event_time_range.setter
    def event_time_range(self, event_time_range):
        """Sets the event_time_range of this ListEventsFilters.


        :param event_time_range: The event_time_range of this ListEventsFilters.
        :type event_time_range: ListEventsRequestFiltersEventTimeRange
        """

        self._event_time_range = event_time_range

    @property
    def event_class(self):
        """Gets the event_class of this ListEventsFilters.


        :return: The event_class of this ListEventsFilters.
        :rtype: EventClass
        """
        return self._event_class

    @event_class.setter
    def event_class(self, event_class):
        """Sets the event_class of this ListEventsFilters.


        :param event_class: The event_class of this ListEventsFilters.
        :type event_class: EventClass
        """

        self._event_class = event_class

    @property
    def event_source(self):
        """Gets the event_source of this ListEventsFilters.


        :return: The event_source of this ListEventsFilters.
        :rtype: str
        """
        return self._event_source

    @event_source.setter
    def event_source(self, event_source):
        """Sets the event_source of this ListEventsFilters.


        :param event_source: The event_source of this ListEventsFilters.
        :type event_source: str
        """

        self._event_source = event_source

    @property
    def data_source(self):
        """Gets the data_source of this ListEventsFilters.


        :return: The data_source of this ListEventsFilters.
        :rtype: EventDataSource
        """
        return self._data_source

    @data_source.setter
    def data_source(self, data_source):
        """Sets the data_source of this ListEventsFilters.


        :param data_source: The data_source of this ListEventsFilters.
        :type data_source: EventDataSource
        """

        self._data_source = data_source

    @property
    def resource_collection(self):
        """Gets the resource_collection of this ListEventsFilters.


        :return: The resource_collection of this ListEventsFilters.
        :rtype: ResourceCollection
        """
        return self._resource_collection

    @resource_collection.setter
    def resource_collection(self, resource_collection):
        """Sets the resource_collection of this ListEventsFilters.


        :param resource_collection: The resource_collection of this ListEventsFilters.
        :type resource_collection: ResourceCollection
        """

        self._resource_collection = resource_collection
