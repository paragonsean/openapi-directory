# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_collection import ResourceCollection
from openapi_server.models.resource_permission import ResourcePermission
from openapi_server import util


class MonitoredResourceIdentifier(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, monitored_resource_name: str=None, type: str=None, resource_permission: ResourcePermission=None, last_updated: datetime=None, resource_collection: ResourceCollection=None):
        """MonitoredResourceIdentifier - a model defined in OpenAPI

        :param monitored_resource_name: The monitored_resource_name of this MonitoredResourceIdentifier.
        :param type: The type of this MonitoredResourceIdentifier.
        :param resource_permission: The resource_permission of this MonitoredResourceIdentifier.
        :param last_updated: The last_updated of this MonitoredResourceIdentifier.
        :param resource_collection: The resource_collection of this MonitoredResourceIdentifier.
        """
        self.openapi_types = {
            'monitored_resource_name': str,
            'type': str,
            'resource_permission': ResourcePermission,
            'last_updated': datetime,
            'resource_collection': ResourceCollection
        }

        self.attribute_map = {
            'monitored_resource_name': 'MonitoredResourceName',
            'type': 'Type',
            'resource_permission': 'ResourcePermission',
            'last_updated': 'LastUpdated',
            'resource_collection': 'ResourceCollection'
        }

        self._monitored_resource_name = monitored_resource_name
        self._type = type
        self._resource_permission = resource_permission
        self._last_updated = last_updated
        self._resource_collection = resource_collection

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MonitoredResourceIdentifier':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MonitoredResourceIdentifier of this MonitoredResourceIdentifier.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def monitored_resource_name(self):
        """Gets the monitored_resource_name of this MonitoredResourceIdentifier.


        :return: The monitored_resource_name of this MonitoredResourceIdentifier.
        :rtype: str
        """
        return self._monitored_resource_name

    @monitored_resource_name.setter
    def monitored_resource_name(self, monitored_resource_name):
        """Sets the monitored_resource_name of this MonitoredResourceIdentifier.


        :param monitored_resource_name: The monitored_resource_name of this MonitoredResourceIdentifier.
        :type monitored_resource_name: str
        """

        self._monitored_resource_name = monitored_resource_name

    @property
    def type(self):
        """Gets the type of this MonitoredResourceIdentifier.


        :return: The type of this MonitoredResourceIdentifier.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this MonitoredResourceIdentifier.


        :param type: The type of this MonitoredResourceIdentifier.
        :type type: str
        """

        self._type = type

    @property
    def resource_permission(self):
        """Gets the resource_permission of this MonitoredResourceIdentifier.


        :return: The resource_permission of this MonitoredResourceIdentifier.
        :rtype: ResourcePermission
        """
        return self._resource_permission

    @resource_permission.setter
    def resource_permission(self, resource_permission):
        """Sets the resource_permission of this MonitoredResourceIdentifier.


        :param resource_permission: The resource_permission of this MonitoredResourceIdentifier.
        :type resource_permission: ResourcePermission
        """

        self._resource_permission = resource_permission

    @property
    def last_updated(self):
        """Gets the last_updated of this MonitoredResourceIdentifier.


        :return: The last_updated of this MonitoredResourceIdentifier.
        :rtype: datetime
        """
        return self._last_updated

    @last_updated.setter
    def last_updated(self, last_updated):
        """Sets the last_updated of this MonitoredResourceIdentifier.


        :param last_updated: The last_updated of this MonitoredResourceIdentifier.
        :type last_updated: datetime
        """

        self._last_updated = last_updated

    @property
    def resource_collection(self):
        """Gets the resource_collection of this MonitoredResourceIdentifier.


        :return: The resource_collection of this MonitoredResourceIdentifier.
        :rtype: ResourceCollection
        """
        return self._resource_collection

    @resource_collection.setter
    def resource_collection(self, resource_collection):
        """Sets the resource_collection of this MonitoredResourceIdentifier.


        :param resource_collection: The resource_collection of this MonitoredResourceIdentifier.
        :type resource_collection: ResourceCollection
        """

        self._resource_collection = resource_collection
