# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tag_health_insight import TagHealthInsight
from openapi_server import util


class TagHealth(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_boundary_key: str=None, tag_value: str=None, insight: TagHealthInsight=None, analyzed_resource_count: int=None):
        """TagHealth - a model defined in OpenAPI

        :param app_boundary_key: The app_boundary_key of this TagHealth.
        :param tag_value: The tag_value of this TagHealth.
        :param insight: The insight of this TagHealth.
        :param analyzed_resource_count: The analyzed_resource_count of this TagHealth.
        """
        self.openapi_types = {
            'app_boundary_key': str,
            'tag_value': str,
            'insight': TagHealthInsight,
            'analyzed_resource_count': int
        }

        self.attribute_map = {
            'app_boundary_key': 'AppBoundaryKey',
            'tag_value': 'TagValue',
            'insight': 'Insight',
            'analyzed_resource_count': 'AnalyzedResourceCount'
        }

        self._app_boundary_key = app_boundary_key
        self._tag_value = tag_value
        self._insight = insight
        self._analyzed_resource_count = analyzed_resource_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TagHealth':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TagHealth of this TagHealth.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_boundary_key(self):
        """Gets the app_boundary_key of this TagHealth.


        :return: The app_boundary_key of this TagHealth.
        :rtype: str
        """
        return self._app_boundary_key

    @app_boundary_key.setter
    def app_boundary_key(self, app_boundary_key):
        """Sets the app_boundary_key of this TagHealth.


        :param app_boundary_key: The app_boundary_key of this TagHealth.
        :type app_boundary_key: str
        """

        self._app_boundary_key = app_boundary_key

    @property
    def tag_value(self):
        """Gets the tag_value of this TagHealth.


        :return: The tag_value of this TagHealth.
        :rtype: str
        """
        return self._tag_value

    @tag_value.setter
    def tag_value(self, tag_value):
        """Sets the tag_value of this TagHealth.


        :param tag_value: The tag_value of this TagHealth.
        :type tag_value: str
        """

        self._tag_value = tag_value

    @property
    def insight(self):
        """Gets the insight of this TagHealth.


        :return: The insight of this TagHealth.
        :rtype: TagHealthInsight
        """
        return self._insight

    @insight.setter
    def insight(self, insight):
        """Sets the insight of this TagHealth.


        :param insight: The insight of this TagHealth.
        :type insight: TagHealthInsight
        """

        self._insight = insight

    @property
    def analyzed_resource_count(self):
        """Gets the analyzed_resource_count of this TagHealth.


        :return: The analyzed_resource_count of this TagHealth.
        :rtype: int
        """
        return self._analyzed_resource_count

    @analyzed_resource_count.setter
    def analyzed_resource_count(self, analyzed_resource_count):
        """Sets the analyzed_resource_count of this TagHealth.


        :param analyzed_resource_count: The analyzed_resource_count of this TagHealth.
        :type analyzed_resource_count: int
        """

        self._analyzed_resource_count = analyzed_resource_count
