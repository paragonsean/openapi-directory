# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TimestampMetricValuePair(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, timestamp: datetime=None, metric_value: float=None):
        """TimestampMetricValuePair - a model defined in OpenAPI

        :param timestamp: The timestamp of this TimestampMetricValuePair.
        :param metric_value: The metric_value of this TimestampMetricValuePair.
        """
        self.openapi_types = {
            'timestamp': datetime,
            'metric_value': float
        }

        self.attribute_map = {
            'timestamp': 'Timestamp',
            'metric_value': 'MetricValue'
        }

        self._timestamp = timestamp
        self._metric_value = metric_value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimestampMetricValuePair':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimestampMetricValuePair of this TimestampMetricValuePair.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def timestamp(self):
        """Gets the timestamp of this TimestampMetricValuePair.


        :return: The timestamp of this TimestampMetricValuePair.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this TimestampMetricValuePair.


        :param timestamp: The timestamp of this TimestampMetricValuePair.
        :type timestamp: datetime
        """

        self._timestamp = timestamp

    @property
    def metric_value(self):
        """Gets the metric_value of this TimestampMetricValuePair.


        :return: The metric_value of this TimestampMetricValuePair.
        :rtype: float
        """
        return self._metric_value

    @metric_value.setter
    def metric_value(self, metric_value):
        """Sets the metric_value of this TimestampMetricValuePair.


        :param metric_value: The metric_value of this TimestampMetricValuePair.
        :type metric_value: float
        """

        self._metric_value = metric_value
