# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.performance_insights_reference_comparison_values_reference_metric import PerformanceInsightsReferenceComparisonValuesReferenceMetric
from openapi_server.models.performance_insights_reference_comparison_values_reference_scalar import PerformanceInsightsReferenceComparisonValuesReferenceScalar
from openapi_server import util


class PerformanceInsightsReferenceDataComparisonValues(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reference_scalar: PerformanceInsightsReferenceComparisonValuesReferenceScalar=None, reference_metric: PerformanceInsightsReferenceComparisonValuesReferenceMetric=None):
        """PerformanceInsightsReferenceDataComparisonValues - a model defined in OpenAPI

        :param reference_scalar: The reference_scalar of this PerformanceInsightsReferenceDataComparisonValues.
        :param reference_metric: The reference_metric of this PerformanceInsightsReferenceDataComparisonValues.
        """
        self.openapi_types = {
            'reference_scalar': PerformanceInsightsReferenceComparisonValuesReferenceScalar,
            'reference_metric': PerformanceInsightsReferenceComparisonValuesReferenceMetric
        }

        self.attribute_map = {
            'reference_scalar': 'ReferenceScalar',
            'reference_metric': 'ReferenceMetric'
        }

        self._reference_scalar = reference_scalar
        self._reference_metric = reference_metric

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PerformanceInsightsReferenceDataComparisonValues':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PerformanceInsightsReferenceData_ComparisonValues of this PerformanceInsightsReferenceDataComparisonValues.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reference_scalar(self):
        """Gets the reference_scalar of this PerformanceInsightsReferenceDataComparisonValues.


        :return: The reference_scalar of this PerformanceInsightsReferenceDataComparisonValues.
        :rtype: PerformanceInsightsReferenceComparisonValuesReferenceScalar
        """
        return self._reference_scalar

    @reference_scalar.setter
    def reference_scalar(self, reference_scalar):
        """Sets the reference_scalar of this PerformanceInsightsReferenceDataComparisonValues.


        :param reference_scalar: The reference_scalar of this PerformanceInsightsReferenceDataComparisonValues.
        :type reference_scalar: PerformanceInsightsReferenceComparisonValuesReferenceScalar
        """

        self._reference_scalar = reference_scalar

    @property
    def reference_metric(self):
        """Gets the reference_metric of this PerformanceInsightsReferenceDataComparisonValues.


        :return: The reference_metric of this PerformanceInsightsReferenceDataComparisonValues.
        :rtype: PerformanceInsightsReferenceComparisonValuesReferenceMetric
        """
        return self._reference_metric

    @reference_metric.setter
    def reference_metric(self, reference_metric):
        """Sets the reference_metric of this PerformanceInsightsReferenceDataComparisonValues.


        :param reference_metric: The reference_metric of this PerformanceInsightsReferenceDataComparisonValues.
        :type reference_metric: PerformanceInsightsReferenceComparisonValuesReferenceMetric
        """

        self._reference_metric = reference_metric
