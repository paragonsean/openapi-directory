# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DescribeOrganizationOverviewRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, from_time: datetime=None, to_time: datetime=None, account_ids: List[str]=None, organizational_unit_ids: List[str]=None):
        """DescribeOrganizationOverviewRequest - a model defined in OpenAPI

        :param from_time: The from_time of this DescribeOrganizationOverviewRequest.
        :param to_time: The to_time of this DescribeOrganizationOverviewRequest.
        :param account_ids: The account_ids of this DescribeOrganizationOverviewRequest.
        :param organizational_unit_ids: The organizational_unit_ids of this DescribeOrganizationOverviewRequest.
        """
        self.openapi_types = {
            'from_time': datetime,
            'to_time': datetime,
            'account_ids': List[str],
            'organizational_unit_ids': List[str]
        }

        self.attribute_map = {
            'from_time': 'FromTime',
            'to_time': 'ToTime',
            'account_ids': 'AccountIds',
            'organizational_unit_ids': 'OrganizationalUnitIds'
        }

        self._from_time = from_time
        self._to_time = to_time
        self._account_ids = account_ids
        self._organizational_unit_ids = organizational_unit_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DescribeOrganizationOverviewRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DescribeOrganizationOverview_request of this DescribeOrganizationOverviewRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def from_time(self):
        """Gets the from_time of this DescribeOrganizationOverviewRequest.

         The start of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred after this day. 

        :return: The from_time of this DescribeOrganizationOverviewRequest.
        :rtype: datetime
        """
        return self._from_time

    @from_time.setter
    def from_time(self, from_time):
        """Sets the from_time of this DescribeOrganizationOverviewRequest.

         The start of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred after this day. 

        :param from_time: The from_time of this DescribeOrganizationOverviewRequest.
        :type from_time: datetime
        """
        if from_time is None:
            raise ValueError("Invalid value for `from_time`, must not be `None`")

        self._from_time = from_time

    @property
    def to_time(self):
        """Gets the to_time of this DescribeOrganizationOverviewRequest.

         The end of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred before this day. If this is not specified, then the current day is used. 

        :return: The to_time of this DescribeOrganizationOverviewRequest.
        :rtype: datetime
        """
        return self._to_time

    @to_time.setter
    def to_time(self, to_time):
        """Sets the to_time of this DescribeOrganizationOverviewRequest.

         The end of the time range passed in. The start time granularity is at the day level. The floor of the start time is used. Returned information occurred before this day. If this is not specified, then the current day is used. 

        :param to_time: The to_time of this DescribeOrganizationOverviewRequest.
        :type to_time: datetime
        """

        self._to_time = to_time

    @property
    def account_ids(self):
        """Gets the account_ids of this DescribeOrganizationOverviewRequest.

        The ID of the Amazon Web Services account.

        :return: The account_ids of this DescribeOrganizationOverviewRequest.
        :rtype: List[str]
        """
        return self._account_ids

    @account_ids.setter
    def account_ids(self, account_ids):
        """Sets the account_ids of this DescribeOrganizationOverviewRequest.

        The ID of the Amazon Web Services account.

        :param account_ids: The account_ids of this DescribeOrganizationOverviewRequest.
        :type account_ids: List[str]
        """
        if account_ids is not None and len(account_ids) > 5:
            raise ValueError("Invalid value for `account_ids`, number of items must be less than or equal to `5`")
        if account_ids is not None and len(account_ids) < 0:
            raise ValueError("Invalid value for `account_ids`, number of items must be greater than or equal to `0`")

        self._account_ids = account_ids

    @property
    def organizational_unit_ids(self):
        """Gets the organizational_unit_ids of this DescribeOrganizationOverviewRequest.

        The ID of the organizational unit.

        :return: The organizational_unit_ids of this DescribeOrganizationOverviewRequest.
        :rtype: List[str]
        """
        return self._organizational_unit_ids

    @organizational_unit_ids.setter
    def organizational_unit_ids(self, organizational_unit_ids):
        """Sets the organizational_unit_ids of this DescribeOrganizationOverviewRequest.

        The ID of the organizational unit.

        :param organizational_unit_ids: The organizational_unit_ids of this DescribeOrganizationOverviewRequest.
        :type organizational_unit_ids: List[str]
        """
        if organizational_unit_ids is not None and len(organizational_unit_ids) > 5:
            raise ValueError("Invalid value for `organizational_unit_ids`, number of items must be less than or equal to `5`")
        if organizational_unit_ids is not None and len(organizational_unit_ids) < 0:
            raise ValueError("Invalid value for `organizational_unit_ids`, number of items must be greater than or equal to `0`")

        self._organizational_unit_ids = organizational_unit_ids
