# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LogAnomalyType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    KEYWORD = 'KEYWORD'
    KEYWORD_TOKEN = 'KEYWORD_TOKEN'
    FORMAT = 'FORMAT'
    HTTP_CODE = 'HTTP_CODE'
    BLOCK_FORMAT = 'BLOCK_FORMAT'
    NUMERICAL_POINT = 'NUMERICAL_POINT'
    NUMERICAL_NAN = 'NUMERICAL_NAN'
    NEW_FIELD_NAME = 'NEW_FIELD_NAME'

    def __init__(self):
        """LogAnomalyType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LogAnomalyType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LogAnomalyType of this LogAnomalyType.
        """
        return util.deserialize_model(dikt, cls)
