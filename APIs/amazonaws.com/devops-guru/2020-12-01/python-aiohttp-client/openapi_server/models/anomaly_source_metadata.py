# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AnomalySourceMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, source: str=None, source_resource_name: str=None, source_resource_type: str=None):
        """AnomalySourceMetadata - a model defined in OpenAPI

        :param source: The source of this AnomalySourceMetadata.
        :param source_resource_name: The source_resource_name of this AnomalySourceMetadata.
        :param source_resource_type: The source_resource_type of this AnomalySourceMetadata.
        """
        self.openapi_types = {
            'source': str,
            'source_resource_name': str,
            'source_resource_type': str
        }

        self.attribute_map = {
            'source': 'Source',
            'source_resource_name': 'SourceResourceName',
            'source_resource_type': 'SourceResourceType'
        }

        self._source = source
        self._source_resource_name = source_resource_name
        self._source_resource_type = source_resource_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnomalySourceMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AnomalySourceMetadata of this AnomalySourceMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def source(self):
        """Gets the source of this AnomalySourceMetadata.


        :return: The source of this AnomalySourceMetadata.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this AnomalySourceMetadata.


        :param source: The source of this AnomalySourceMetadata.
        :type source: str
        """

        self._source = source

    @property
    def source_resource_name(self):
        """Gets the source_resource_name of this AnomalySourceMetadata.


        :return: The source_resource_name of this AnomalySourceMetadata.
        :rtype: str
        """
        return self._source_resource_name

    @source_resource_name.setter
    def source_resource_name(self, source_resource_name):
        """Sets the source_resource_name of this AnomalySourceMetadata.


        :param source_resource_name: The source_resource_name of this AnomalySourceMetadata.
        :type source_resource_name: str
        """

        self._source_resource_name = source_resource_name

    @property
    def source_resource_type(self):
        """Gets the source_resource_type of this AnomalySourceMetadata.


        :return: The source_resource_type of this AnomalySourceMetadata.
        :rtype: str
        """
        return self._source_resource_type

    @source_resource_type.setter
    def source_resource_type(self, source_resource_type):
        """Sets the source_resource_type of this AnomalySourceMetadata.


        :param source_resource_type: The source_resource_type of this AnomalySourceMetadata.
        :type source_resource_type: str
        """

        self._source_resource_type = source_resource_type
