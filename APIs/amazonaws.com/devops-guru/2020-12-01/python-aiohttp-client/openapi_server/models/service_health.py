# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_health_insight import ServiceHealthInsight
from openapi_server.models.service_name import ServiceName
from openapi_server import util


class ServiceHealth(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_name: ServiceName=None, insight: ServiceHealthInsight=None, analyzed_resource_count: int=None):
        """ServiceHealth - a model defined in OpenAPI

        :param service_name: The service_name of this ServiceHealth.
        :param insight: The insight of this ServiceHealth.
        :param analyzed_resource_count: The analyzed_resource_count of this ServiceHealth.
        """
        self.openapi_types = {
            'service_name': ServiceName,
            'insight': ServiceHealthInsight,
            'analyzed_resource_count': int
        }

        self.attribute_map = {
            'service_name': 'ServiceName',
            'insight': 'Insight',
            'analyzed_resource_count': 'AnalyzedResourceCount'
        }

        self._service_name = service_name
        self._insight = insight
        self._analyzed_resource_count = analyzed_resource_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceHealth':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceHealth of this ServiceHealth.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_name(self):
        """Gets the service_name of this ServiceHealth.


        :return: The service_name of this ServiceHealth.
        :rtype: ServiceName
        """
        return self._service_name

    @service_name.setter
    def service_name(self, service_name):
        """Sets the service_name of this ServiceHealth.


        :param service_name: The service_name of this ServiceHealth.
        :type service_name: ServiceName
        """

        self._service_name = service_name

    @property
    def insight(self):
        """Gets the insight of this ServiceHealth.


        :return: The insight of this ServiceHealth.
        :rtype: ServiceHealthInsight
        """
        return self._insight

    @insight.setter
    def insight(self, insight):
        """Sets the insight of this ServiceHealth.


        :param insight: The insight of this ServiceHealth.
        :type insight: ServiceHealthInsight
        """

        self._insight = insight

    @property
    def analyzed_resource_count(self):
        """Gets the analyzed_resource_count of this ServiceHealth.


        :return: The analyzed_resource_count of this ServiceHealth.
        :rtype: int
        """
        return self._analyzed_resource_count

    @analyzed_resource_count.setter
    def analyzed_resource_count(self, analyzed_resource_count):
        """Sets the analyzed_resource_count of this ServiceHealth.


        :param analyzed_resource_count: The analyzed_resource_count of this ServiceHealth.
        :type analyzed_resource_count: int
        """

        self._analyzed_resource_count = analyzed_resource_count
