# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.service_collection import ServiceCollection
from openapi_server import util


class ListAnomaliesForInsightFilters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, service_collection: ServiceCollection=None):
        """ListAnomaliesForInsightFilters - a model defined in OpenAPI

        :param service_collection: The service_collection of this ListAnomaliesForInsightFilters.
        """
        self.openapi_types = {
            'service_collection': ServiceCollection
        }

        self.attribute_map = {
            'service_collection': 'ServiceCollection'
        }

        self._service_collection = service_collection

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListAnomaliesForInsightFilters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListAnomaliesForInsightFilters of this ListAnomaliesForInsightFilters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_collection(self):
        """Gets the service_collection of this ListAnomaliesForInsightFilters.


        :return: The service_collection of this ListAnomaliesForInsightFilters.
        :rtype: ServiceCollection
        """
        return self._service_collection

    @service_collection.setter
    def service_collection(self, service_collection):
        """Sets the service_collection of this ListAnomaliesForInsightFilters.


        :param service_collection: The service_collection of this ListAnomaliesForInsightFilters.
        :type service_collection: ServiceCollection
        """

        self._service_collection = service_collection
