# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EndTimeRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, from_time: datetime=None, to_time: datetime=None):
        """EndTimeRange - a model defined in OpenAPI

        :param from_time: The from_time of this EndTimeRange.
        :param to_time: The to_time of this EndTimeRange.
        """
        self.openapi_types = {
            'from_time': datetime,
            'to_time': datetime
        }

        self.attribute_map = {
            'from_time': 'FromTime',
            'to_time': 'ToTime'
        }

        self._from_time = from_time
        self._to_time = to_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EndTimeRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EndTimeRange of this EndTimeRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def from_time(self):
        """Gets the from_time of this EndTimeRange.


        :return: The from_time of this EndTimeRange.
        :rtype: datetime
        """
        return self._from_time

    @from_time.setter
    def from_time(self, from_time):
        """Sets the from_time of this EndTimeRange.


        :param from_time: The from_time of this EndTimeRange.
        :type from_time: datetime
        """

        self._from_time = from_time

    @property
    def to_time(self):
        """Gets the to_time of this EndTimeRange.


        :return: The to_time of this EndTimeRange.
        :rtype: datetime
        """
        return self._to_time

    @to_time.setter
    def to_time(self, to_time):
        """Sets the to_time of this EndTimeRange.


        :param to_time: The to_time of this EndTimeRange.
        :type to_time: datetime
        """

        self._to_time = to_time
