# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AccountInsightHealth(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, open_proactive_insights: int=None, open_reactive_insights: int=None):
        """AccountInsightHealth - a model defined in OpenAPI

        :param open_proactive_insights: The open_proactive_insights of this AccountInsightHealth.
        :param open_reactive_insights: The open_reactive_insights of this AccountInsightHealth.
        """
        self.openapi_types = {
            'open_proactive_insights': int,
            'open_reactive_insights': int
        }

        self.attribute_map = {
            'open_proactive_insights': 'OpenProactiveInsights',
            'open_reactive_insights': 'OpenReactiveInsights'
        }

        self._open_proactive_insights = open_proactive_insights
        self._open_reactive_insights = open_reactive_insights

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountInsightHealth':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountInsightHealth of this AccountInsightHealth.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def open_proactive_insights(self):
        """Gets the open_proactive_insights of this AccountInsightHealth.


        :return: The open_proactive_insights of this AccountInsightHealth.
        :rtype: int
        """
        return self._open_proactive_insights

    @open_proactive_insights.setter
    def open_proactive_insights(self, open_proactive_insights):
        """Sets the open_proactive_insights of this AccountInsightHealth.


        :param open_proactive_insights: The open_proactive_insights of this AccountInsightHealth.
        :type open_proactive_insights: int
        """

        self._open_proactive_insights = open_proactive_insights

    @property
    def open_reactive_insights(self):
        """Gets the open_reactive_insights of this AccountInsightHealth.


        :return: The open_reactive_insights of this AccountInsightHealth.
        :rtype: int
        """
        return self._open_reactive_insights

    @open_reactive_insights.setter
    def open_reactive_insights(self, open_reactive_insights):
        """Sets the open_reactive_insights of this AccountInsightHealth.


        :param open_reactive_insights: The open_reactive_insights of this AccountInsightHealth.
        :type open_reactive_insights: int
        """

        self._open_reactive_insights = open_reactive_insights
