# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServiceName(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    API_GATEWAY = 'API_GATEWAY'
    APPLICATION_ELB = 'APPLICATION_ELB'
    AUTO_SCALING_GROUP = 'AUTO_SCALING_GROUP'
    CLOUD_FRONT = 'CLOUD_FRONT'
    DYNAMO_DB = 'DYNAMO_DB'
    EC2 = 'EC2'
    ECS = 'ECS'
    EKS = 'EKS'
    ELASTIC_BEANSTALK = 'ELASTIC_BEANSTALK'
    ELASTI_CACHE = 'ELASTI_CACHE'
    ELB = 'ELB'
    ES = 'ES'
    KINESIS = 'KINESIS'
    LAMBDA = 'LAMBDA'
    NAT_GATEWAY = 'NAT_GATEWAY'
    NETWORK_ELB = 'NETWORK_ELB'
    RDS = 'RDS'
    REDSHIFT = 'REDSHIFT'
    ROUTE_53 = 'ROUTE_53'
    S3 = 'S3'
    SAGE_MAKER = 'SAGE_MAKER'
    SNS = 'SNS'
    SQS = 'SQS'
    STEP_FUNCTIONS = 'STEP_FUNCTIONS'
    SWF = 'SWF'

    def __init__(self):
        """ServiceName - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServiceName':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ServiceName of this ServiceName.
        """
        return util.deserialize_model(dikt, cls)
