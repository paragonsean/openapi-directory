# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProactiveAnomalyAnomalyReportedTimeRange(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, open_time: datetime=None, close_time: datetime=None):
        """ProactiveAnomalyAnomalyReportedTimeRange - a model defined in OpenAPI

        :param open_time: The open_time of this ProactiveAnomalyAnomalyReportedTimeRange.
        :param close_time: The close_time of this ProactiveAnomalyAnomalyReportedTimeRange.
        """
        self.openapi_types = {
            'open_time': datetime,
            'close_time': datetime
        }

        self.attribute_map = {
            'open_time': 'OpenTime',
            'close_time': 'CloseTime'
        }

        self._open_time = open_time
        self._close_time = close_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProactiveAnomalyAnomalyReportedTimeRange':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProactiveAnomaly_AnomalyReportedTimeRange of this ProactiveAnomalyAnomalyReportedTimeRange.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def open_time(self):
        """Gets the open_time of this ProactiveAnomalyAnomalyReportedTimeRange.


        :return: The open_time of this ProactiveAnomalyAnomalyReportedTimeRange.
        :rtype: datetime
        """
        return self._open_time

    @open_time.setter
    def open_time(self, open_time):
        """Sets the open_time of this ProactiveAnomalyAnomalyReportedTimeRange.


        :param open_time: The open_time of this ProactiveAnomalyAnomalyReportedTimeRange.
        :type open_time: datetime
        """
        if open_time is None:
            raise ValueError("Invalid value for `open_time`, must not be `None`")

        self._open_time = open_time

    @property
    def close_time(self):
        """Gets the close_time of this ProactiveAnomalyAnomalyReportedTimeRange.


        :return: The close_time of this ProactiveAnomalyAnomalyReportedTimeRange.
        :rtype: datetime
        """
        return self._close_time

    @close_time.setter
    def close_time(self, close_time):
        """Sets the close_time of this ProactiveAnomalyAnomalyReportedTimeRange.


        :param close_time: The close_time of this ProactiveAnomalyAnomalyReportedTimeRange.
        :type close_time: datetime
        """

        self._close_time = close_time
