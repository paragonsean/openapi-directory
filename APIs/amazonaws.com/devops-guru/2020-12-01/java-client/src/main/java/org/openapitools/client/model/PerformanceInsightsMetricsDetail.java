/*
 * Amazon DevOps Guru
 * <p> Amazon DevOps Guru is a fully managed service that helps you identify anomalous behavior in business critical operational applications. You specify the Amazon Web Services resources that you want DevOps Guru to cover, then the Amazon CloudWatch metrics and Amazon Web Services CloudTrail events related to those resources are analyzed. When anomalous behavior is detected, DevOps Guru creates an <i>insight</i> that includes recommendations, related events, and related metrics that can help you improve your operational applications. For more information, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html\">What is Amazon DevOps Guru</a>. </p> <p> You can specify 1 or 2 Amazon Simple Notification Service topics so you are notified every time a new insight is created. You can also enable DevOps Guru to generate an OpsItem in Amazon Web Services Systems Manager for each insight to help you manage and track your work addressing insights. </p> <p> To learn about the DevOps Guru workflow, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html#how-it-works\">How DevOps Guru works</a>. To learn about DevOps Guru concepts, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/concepts.html\">Concepts in DevOps Guru</a>. </p>
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.PerformanceInsightsMetricsDetailMetricQuery;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * &lt;p&gt;Details about Performance Insights metrics.&lt;/p&gt; &lt;p&gt;Amazon RDS Performance Insights enables you to monitor and explore different dimensions of database load based on data captured from a running DB instance. DB load is measured as average active sessions. Performance Insights provides the data to API consumers as a two-dimensional time-series dataset. The time dimension provides DB load data for each time point in the queried time range. Each time point decomposes overall load in relation to the requested dimensions, measured at that time point. Examples include SQL, Wait event, User, and Host. &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;To learn more about Performance Insights and Amazon Aurora DB instances, go to the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights.html\&quot;&gt; Amazon Aurora User Guide&lt;/a&gt;. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;To learn more about Performance Insights and Amazon RDS DB instances, go to the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html\&quot;&gt; Amazon RDS User Guide&lt;/a&gt;. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:27:48.558602-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class PerformanceInsightsMetricsDetail {
  public static final String SERIALIZED_NAME_METRIC_DISPLAY_NAME = "MetricDisplayName";
  @SerializedName(SERIALIZED_NAME_METRIC_DISPLAY_NAME)
  private String metricDisplayName;

  public static final String SERIALIZED_NAME_UNIT = "Unit";
  @SerializedName(SERIALIZED_NAME_UNIT)
  private String unit;

  public static final String SERIALIZED_NAME_METRIC_QUERY = "MetricQuery";
  @SerializedName(SERIALIZED_NAME_METRIC_QUERY)
  private PerformanceInsightsMetricsDetailMetricQuery metricQuery;

  public static final String SERIALIZED_NAME_REFERENCE_DATA = "ReferenceData";
  @SerializedName(SERIALIZED_NAME_REFERENCE_DATA)
  private List referenceData;

  public static final String SERIALIZED_NAME_STATS_AT_ANOMALY = "StatsAtAnomaly";
  @SerializedName(SERIALIZED_NAME_STATS_AT_ANOMALY)
  private List statsAtAnomaly;

  public static final String SERIALIZED_NAME_STATS_AT_BASELINE = "StatsAtBaseline";
  @SerializedName(SERIALIZED_NAME_STATS_AT_BASELINE)
  private List statsAtBaseline;

  public PerformanceInsightsMetricsDetail() {
  }

  public PerformanceInsightsMetricsDetail metricDisplayName(String metricDisplayName) {
    this.metricDisplayName = metricDisplayName;
    return this;
  }

  /**
   * Get metricDisplayName
   * @return metricDisplayName
   */
  @javax.annotation.Nullable
  public String getMetricDisplayName() {
    return metricDisplayName;
  }

  public void setMetricDisplayName(String metricDisplayName) {
    this.metricDisplayName = metricDisplayName;
  }


  public PerformanceInsightsMetricsDetail unit(String unit) {
    this.unit = unit;
    return this;
  }

  /**
   * Get unit
   * @return unit
   */
  @javax.annotation.Nullable
  public String getUnit() {
    return unit;
  }

  public void setUnit(String unit) {
    this.unit = unit;
  }


  public PerformanceInsightsMetricsDetail metricQuery(PerformanceInsightsMetricsDetailMetricQuery metricQuery) {
    this.metricQuery = metricQuery;
    return this;
  }

  /**
   * Get metricQuery
   * @return metricQuery
   */
  @javax.annotation.Nullable
  public PerformanceInsightsMetricsDetailMetricQuery getMetricQuery() {
    return metricQuery;
  }

  public void setMetricQuery(PerformanceInsightsMetricsDetailMetricQuery metricQuery) {
    this.metricQuery = metricQuery;
  }


  public PerformanceInsightsMetricsDetail referenceData(List referenceData) {
    this.referenceData = referenceData;
    return this;
  }

  /**
   * Get referenceData
   * @return referenceData
   */
  @javax.annotation.Nullable
  public List getReferenceData() {
    return referenceData;
  }

  public void setReferenceData(List referenceData) {
    this.referenceData = referenceData;
  }


  public PerformanceInsightsMetricsDetail statsAtAnomaly(List statsAtAnomaly) {
    this.statsAtAnomaly = statsAtAnomaly;
    return this;
  }

  /**
   * Get statsAtAnomaly
   * @return statsAtAnomaly
   */
  @javax.annotation.Nullable
  public List getStatsAtAnomaly() {
    return statsAtAnomaly;
  }

  public void setStatsAtAnomaly(List statsAtAnomaly) {
    this.statsAtAnomaly = statsAtAnomaly;
  }


  public PerformanceInsightsMetricsDetail statsAtBaseline(List statsAtBaseline) {
    this.statsAtBaseline = statsAtBaseline;
    return this;
  }

  /**
   * Get statsAtBaseline
   * @return statsAtBaseline
   */
  @javax.annotation.Nullable
  public List getStatsAtBaseline() {
    return statsAtBaseline;
  }

  public void setStatsAtBaseline(List statsAtBaseline) {
    this.statsAtBaseline = statsAtBaseline;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PerformanceInsightsMetricsDetail performanceInsightsMetricsDetail = (PerformanceInsightsMetricsDetail) o;
    return Objects.equals(this.metricDisplayName, performanceInsightsMetricsDetail.metricDisplayName) &&
        Objects.equals(this.unit, performanceInsightsMetricsDetail.unit) &&
        Objects.equals(this.metricQuery, performanceInsightsMetricsDetail.metricQuery) &&
        Objects.equals(this.referenceData, performanceInsightsMetricsDetail.referenceData) &&
        Objects.equals(this.statsAtAnomaly, performanceInsightsMetricsDetail.statsAtAnomaly) &&
        Objects.equals(this.statsAtBaseline, performanceInsightsMetricsDetail.statsAtBaseline);
  }

  @Override
  public int hashCode() {
    return Objects.hash(metricDisplayName, unit, metricQuery, referenceData, statsAtAnomaly, statsAtBaseline);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PerformanceInsightsMetricsDetail {\n");
    sb.append("    metricDisplayName: ").append(toIndentedString(metricDisplayName)).append("\n");
    sb.append("    unit: ").append(toIndentedString(unit)).append("\n");
    sb.append("    metricQuery: ").append(toIndentedString(metricQuery)).append("\n");
    sb.append("    referenceData: ").append(toIndentedString(referenceData)).append("\n");
    sb.append("    statsAtAnomaly: ").append(toIndentedString(statsAtAnomaly)).append("\n");
    sb.append("    statsAtBaseline: ").append(toIndentedString(statsAtBaseline)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MetricDisplayName");
    openapiFields.add("Unit");
    openapiFields.add("MetricQuery");
    openapiFields.add("ReferenceData");
    openapiFields.add("StatsAtAnomaly");
    openapiFields.add("StatsAtBaseline");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to PerformanceInsightsMetricsDetail
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!PerformanceInsightsMetricsDetail.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in PerformanceInsightsMetricsDetail is not found in the empty JSON string", PerformanceInsightsMetricsDetail.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!PerformanceInsightsMetricsDetail.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `PerformanceInsightsMetricsDetail` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `MetricDisplayName`
      if (jsonObj.get("MetricDisplayName") != null && !jsonObj.get("MetricDisplayName").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("MetricDisplayName"));
      }
      // validate the optional field `Unit`
      if (jsonObj.get("Unit") != null && !jsonObj.get("Unit").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("Unit"));
      }
      // validate the optional field `MetricQuery`
      if (jsonObj.get("MetricQuery") != null && !jsonObj.get("MetricQuery").isJsonNull()) {
        PerformanceInsightsMetricsDetailMetricQuery.validateJsonElement(jsonObj.get("MetricQuery"));
      }
      // validate the optional field `ReferenceData`
      if (jsonObj.get("ReferenceData") != null && !jsonObj.get("ReferenceData").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("ReferenceData"));
      }
      // validate the optional field `StatsAtAnomaly`
      if (jsonObj.get("StatsAtAnomaly") != null && !jsonObj.get("StatsAtAnomaly").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("StatsAtAnomaly"));
      }
      // validate the optional field `StatsAtBaseline`
      if (jsonObj.get("StatsAtBaseline") != null && !jsonObj.get("StatsAtBaseline").isJsonNull()) {
        List.validateJsonElement(jsonObj.get("StatsAtBaseline"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PerformanceInsightsMetricsDetail.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PerformanceInsightsMetricsDetail' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PerformanceInsightsMetricsDetail> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PerformanceInsightsMetricsDetail.class));

       return (TypeAdapter<T>) new TypeAdapter<PerformanceInsightsMetricsDetail>() {
           @Override
           public void write(JsonWriter out, PerformanceInsightsMetricsDetail value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public PerformanceInsightsMetricsDetail read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of PerformanceInsightsMetricsDetail given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of PerformanceInsightsMetricsDetail
   * @throws IOException if the JSON string is invalid with respect to PerformanceInsightsMetricsDetail
   */
  public static PerformanceInsightsMetricsDetail fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PerformanceInsightsMetricsDetail.class);
  }

  /**
   * Convert an instance of PerformanceInsightsMetricsDetail to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

