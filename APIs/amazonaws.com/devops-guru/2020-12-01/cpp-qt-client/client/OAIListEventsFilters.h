/**
 * Amazon DevOps Guru
 * <p> Amazon DevOps Guru is a fully managed service that helps you identify anomalous behavior in business critical operational applications. You specify the Amazon Web Services resources that you want DevOps Guru to cover, then the Amazon CloudWatch metrics and Amazon Web Services CloudTrail events related to those resources are analyzed. When anomalous behavior is detected, DevOps Guru creates an <i>insight</i> that includes recommendations, related events, and related metrics that can help you improve your operational applications. For more information, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html\">What is Amazon DevOps Guru</a>. </p> <p> You can specify 1 or 2 Amazon Simple Notification Service topics so you are notified every time a new insight is created. You can also enable DevOps Guru to generate an OpsItem in Amazon Web Services Systems Manager for each insight to help you manage and track your work addressing insights. </p> <p> To learn about the DevOps Guru workflow, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html#how-it-works\">How DevOps Guru works</a>. To learn about DevOps Guru concepts, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/concepts.html\">Concepts in DevOps Guru</a>. </p>
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListEventsFilters.h
 *
 *  Filters you can use to specify which events are returned when &lt;code&gt;ListEvents&lt;/code&gt; is called. 
 */

#ifndef OAIListEventsFilters_H
#define OAIListEventsFilters_H

#include <QJsonObject>

#include "OAIEventClass.h"
#include "OAIEventDataSource.h"
#include "OAIListEvents_request_Filters_EventTimeRange.h"
#include "OAIResourceCollection.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIListEvents_request_Filters_EventTimeRange;
class OAIResourceCollection;

class OAIListEventsFilters : public OAIObject {
public:
    OAIListEventsFilters();
    OAIListEventsFilters(QString json);
    ~OAIListEventsFilters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getInsightId() const;
    void setInsightId(const QString &insight_id);
    bool is_insight_id_Set() const;
    bool is_insight_id_Valid() const;

    OAIListEvents_request_Filters_EventTimeRange getEventTimeRange() const;
    void setEventTimeRange(const OAIListEvents_request_Filters_EventTimeRange &event_time_range);
    bool is_event_time_range_Set() const;
    bool is_event_time_range_Valid() const;

    OAIEventClass getEventClass() const;
    void setEventClass(const OAIEventClass &event_class);
    bool is_event_class_Set() const;
    bool is_event_class_Valid() const;

    QString getEventSource() const;
    void setEventSource(const QString &event_source);
    bool is_event_source_Set() const;
    bool is_event_source_Valid() const;

    OAIEventDataSource getDataSource() const;
    void setDataSource(const OAIEventDataSource &data_source);
    bool is_data_source_Set() const;
    bool is_data_source_Valid() const;

    OAIResourceCollection getResourceCollection() const;
    void setResourceCollection(const OAIResourceCollection &resource_collection);
    bool is_resource_collection_Set() const;
    bool is_resource_collection_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_insight_id;
    bool m_insight_id_isSet;
    bool m_insight_id_isValid;

    OAIListEvents_request_Filters_EventTimeRange m_event_time_range;
    bool m_event_time_range_isSet;
    bool m_event_time_range_isValid;

    OAIEventClass m_event_class;
    bool m_event_class_isSet;
    bool m_event_class_isValid;

    QString m_event_source;
    bool m_event_source_isSet;
    bool m_event_source_isValid;

    OAIEventDataSource m_data_source;
    bool m_data_source_isSet;
    bool m_data_source_isValid;

    OAIResourceCollection m_resource_collection;
    bool m_resource_collection_isSet;
    bool m_resource_collection_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListEventsFilters)

#endif // OAIListEventsFilters_H
