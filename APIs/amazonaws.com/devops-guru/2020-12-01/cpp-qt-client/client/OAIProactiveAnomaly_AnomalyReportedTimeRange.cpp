/**
 * Amazon DevOps Guru
 * <p> Amazon DevOps Guru is a fully managed service that helps you identify anomalous behavior in business critical operational applications. You specify the Amazon Web Services resources that you want DevOps Guru to cover, then the Amazon CloudWatch metrics and Amazon Web Services CloudTrail events related to those resources are analyzed. When anomalous behavior is detected, DevOps Guru creates an <i>insight</i> that includes recommendations, related events, and related metrics that can help you improve your operational applications. For more information, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html\">What is Amazon DevOps Guru</a>. </p> <p> You can specify 1 or 2 Amazon Simple Notification Service topics so you are notified every time a new insight is created. You can also enable DevOps Guru to generate an OpsItem in Amazon Web Services Systems Manager for each insight to help you manage and track your work addressing insights. </p> <p> To learn about the DevOps Guru workflow, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html#how-it-works\">How DevOps Guru works</a>. To learn about DevOps Guru concepts, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/concepts.html\">Concepts in DevOps Guru</a>. </p>
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProactiveAnomaly_AnomalyReportedTimeRange.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProactiveAnomaly_AnomalyReportedTimeRange::OAIProactiveAnomaly_AnomalyReportedTimeRange(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProactiveAnomaly_AnomalyReportedTimeRange::OAIProactiveAnomaly_AnomalyReportedTimeRange() {
    this->initializeModel();
}

OAIProactiveAnomaly_AnomalyReportedTimeRange::~OAIProactiveAnomaly_AnomalyReportedTimeRange() {}

void OAIProactiveAnomaly_AnomalyReportedTimeRange::initializeModel() {

    m_open_time_isSet = false;
    m_open_time_isValid = false;

    m_close_time_isSet = false;
    m_close_time_isValid = false;
}

void OAIProactiveAnomaly_AnomalyReportedTimeRange::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProactiveAnomaly_AnomalyReportedTimeRange::fromJsonObject(QJsonObject json) {

    m_open_time_isValid = ::OpenAPI::fromJsonValue(m_open_time, json[QString("OpenTime")]);
    m_open_time_isSet = !json[QString("OpenTime")].isNull() && m_open_time_isValid;

    m_close_time_isValid = ::OpenAPI::fromJsonValue(m_close_time, json[QString("CloseTime")]);
    m_close_time_isSet = !json[QString("CloseTime")].isNull() && m_close_time_isValid;
}

QString OAIProactiveAnomaly_AnomalyReportedTimeRange::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProactiveAnomaly_AnomalyReportedTimeRange::asJsonObject() const {
    QJsonObject obj;
    if (m_open_time_isSet) {
        obj.insert(QString("OpenTime"), ::OpenAPI::toJsonValue(m_open_time));
    }
    if (m_close_time_isSet) {
        obj.insert(QString("CloseTime"), ::OpenAPI::toJsonValue(m_close_time));
    }
    return obj;
}

QDateTime OAIProactiveAnomaly_AnomalyReportedTimeRange::getOpenTime() const {
    return m_open_time;
}
void OAIProactiveAnomaly_AnomalyReportedTimeRange::setOpenTime(const QDateTime &open_time) {
    m_open_time = open_time;
    m_open_time_isSet = true;
}

bool OAIProactiveAnomaly_AnomalyReportedTimeRange::is_open_time_Set() const{
    return m_open_time_isSet;
}

bool OAIProactiveAnomaly_AnomalyReportedTimeRange::is_open_time_Valid() const{
    return m_open_time_isValid;
}

QDateTime OAIProactiveAnomaly_AnomalyReportedTimeRange::getCloseTime() const {
    return m_close_time;
}
void OAIProactiveAnomaly_AnomalyReportedTimeRange::setCloseTime(const QDateTime &close_time) {
    m_close_time = close_time;
    m_close_time_isSet = true;
}

bool OAIProactiveAnomaly_AnomalyReportedTimeRange::is_close_time_Set() const{
    return m_close_time_isSet;
}

bool OAIProactiveAnomaly_AnomalyReportedTimeRange::is_close_time_Valid() const{
    return m_close_time_isValid;
}

bool OAIProactiveAnomaly_AnomalyReportedTimeRange::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_open_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_close_time_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProactiveAnomaly_AnomalyReportedTimeRange::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_open_time_isValid && true;
}

} // namespace OpenAPI
