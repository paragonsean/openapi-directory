/**
 * Amazon DevOps Guru
 * <p> Amazon DevOps Guru is a fully managed service that helps you identify anomalous behavior in business critical operational applications. You specify the Amazon Web Services resources that you want DevOps Guru to cover, then the Amazon CloudWatch metrics and Amazon Web Services CloudTrail events related to those resources are analyzed. When anomalous behavior is detected, DevOps Guru creates an <i>insight</i> that includes recommendations, related events, and related metrics that can help you improve your operational applications. For more information, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html\">What is Amazon DevOps Guru</a>. </p> <p> You can specify 1 or 2 Amazon Simple Notification Service topics so you are notified every time a new insight is created. You can also enable DevOps Guru to generate an OpsItem in Amazon Web Services Systems Manager for each insight to help you manage and track your work addressing insights. </p> <p> To learn about the DevOps Guru workflow, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html#how-it-works\">How DevOps Guru works</a>. To learn about DevOps Guru concepts, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/concepts.html\">Concepts in DevOps Guru</a>. </p>
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListOrganizationInsightsRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListOrganizationInsightsRequest::OAIListOrganizationInsightsRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListOrganizationInsightsRequest::OAIListOrganizationInsightsRequest() {
    this->initializeModel();
}

OAIListOrganizationInsightsRequest::~OAIListOrganizationInsightsRequest() {}

void OAIListOrganizationInsightsRequest::initializeModel() {

    m_status_filter_isSet = false;
    m_status_filter_isValid = false;

    m_max_results_isSet = false;
    m_max_results_isValid = false;

    m_account_ids_isSet = false;
    m_account_ids_isValid = false;

    m_organizational_unit_ids_isSet = false;
    m_organizational_unit_ids_isValid = false;

    m_next_token_isSet = false;
    m_next_token_isValid = false;
}

void OAIListOrganizationInsightsRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListOrganizationInsightsRequest::fromJsonObject(QJsonObject json) {

    m_status_filter_isValid = ::OpenAPI::fromJsonValue(m_status_filter, json[QString("StatusFilter")]);
    m_status_filter_isSet = !json[QString("StatusFilter")].isNull() && m_status_filter_isValid;

    m_max_results_isValid = ::OpenAPI::fromJsonValue(m_max_results, json[QString("MaxResults")]);
    m_max_results_isSet = !json[QString("MaxResults")].isNull() && m_max_results_isValid;

    m_account_ids_isValid = ::OpenAPI::fromJsonValue(m_account_ids, json[QString("AccountIds")]);
    m_account_ids_isSet = !json[QString("AccountIds")].isNull() && m_account_ids_isValid;

    m_organizational_unit_ids_isValid = ::OpenAPI::fromJsonValue(m_organizational_unit_ids, json[QString("OrganizationalUnitIds")]);
    m_organizational_unit_ids_isSet = !json[QString("OrganizationalUnitIds")].isNull() && m_organizational_unit_ids_isValid;

    m_next_token_isValid = ::OpenAPI::fromJsonValue(m_next_token, json[QString("NextToken")]);
    m_next_token_isSet = !json[QString("NextToken")].isNull() && m_next_token_isValid;
}

QString OAIListOrganizationInsightsRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListOrganizationInsightsRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_status_filter.isSet()) {
        obj.insert(QString("StatusFilter"), ::OpenAPI::toJsonValue(m_status_filter));
    }
    if (m_max_results_isSet) {
        obj.insert(QString("MaxResults"), ::OpenAPI::toJsonValue(m_max_results));
    }
    if (m_account_ids.isSet()) {
        obj.insert(QString("AccountIds"), ::OpenAPI::toJsonValue(m_account_ids));
    }
    if (m_organizational_unit_ids.isSet()) {
        obj.insert(QString("OrganizationalUnitIds"), ::OpenAPI::toJsonValue(m_organizational_unit_ids));
    }
    if (m_next_token_isSet) {
        obj.insert(QString("NextToken"), ::OpenAPI::toJsonValue(m_next_token));
    }
    return obj;
}

OAIListInsightsStatusFilter OAIListOrganizationInsightsRequest::getStatusFilter() const {
    return m_status_filter;
}
void OAIListOrganizationInsightsRequest::setStatusFilter(const OAIListInsightsStatusFilter &status_filter) {
    m_status_filter = status_filter;
    m_status_filter_isSet = true;
}

bool OAIListOrganizationInsightsRequest::is_status_filter_Set() const{
    return m_status_filter_isSet;
}

bool OAIListOrganizationInsightsRequest::is_status_filter_Valid() const{
    return m_status_filter_isValid;
}

qint32 OAIListOrganizationInsightsRequest::getMaxResults() const {
    return m_max_results;
}
void OAIListOrganizationInsightsRequest::setMaxResults(const qint32 &max_results) {
    m_max_results = max_results;
    m_max_results_isSet = true;
}

bool OAIListOrganizationInsightsRequest::is_max_results_Set() const{
    return m_max_results_isSet;
}

bool OAIListOrganizationInsightsRequest::is_max_results_Valid() const{
    return m_max_results_isValid;
}

QList OAIListOrganizationInsightsRequest::getAccountIds() const {
    return m_account_ids;
}
void OAIListOrganizationInsightsRequest::setAccountIds(const QList &account_ids) {
    m_account_ids = account_ids;
    m_account_ids_isSet = true;
}

bool OAIListOrganizationInsightsRequest::is_account_ids_Set() const{
    return m_account_ids_isSet;
}

bool OAIListOrganizationInsightsRequest::is_account_ids_Valid() const{
    return m_account_ids_isValid;
}

QList OAIListOrganizationInsightsRequest::getOrganizationalUnitIds() const {
    return m_organizational_unit_ids;
}
void OAIListOrganizationInsightsRequest::setOrganizationalUnitIds(const QList &organizational_unit_ids) {
    m_organizational_unit_ids = organizational_unit_ids;
    m_organizational_unit_ids_isSet = true;
}

bool OAIListOrganizationInsightsRequest::is_organizational_unit_ids_Set() const{
    return m_organizational_unit_ids_isSet;
}

bool OAIListOrganizationInsightsRequest::is_organizational_unit_ids_Valid() const{
    return m_organizational_unit_ids_isValid;
}

QString OAIListOrganizationInsightsRequest::getNextToken() const {
    return m_next_token;
}
void OAIListOrganizationInsightsRequest::setNextToken(const QString &next_token) {
    m_next_token = next_token;
    m_next_token_isSet = true;
}

bool OAIListOrganizationInsightsRequest::is_next_token_Set() const{
    return m_next_token_isSet;
}

bool OAIListOrganizationInsightsRequest::is_next_token_Valid() const{
    return m_next_token_isValid;
}

bool OAIListOrganizationInsightsRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_status_filter.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_results_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_account_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_organizational_unit_ids.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListOrganizationInsightsRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_status_filter_isValid && true;
}

} // namespace OpenAPI
