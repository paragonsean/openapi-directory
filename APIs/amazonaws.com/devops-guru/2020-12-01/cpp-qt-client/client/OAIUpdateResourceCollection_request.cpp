/**
 * Amazon DevOps Guru
 * <p> Amazon DevOps Guru is a fully managed service that helps you identify anomalous behavior in business critical operational applications. You specify the Amazon Web Services resources that you want DevOps Guru to cover, then the Amazon CloudWatch metrics and Amazon Web Services CloudTrail events related to those resources are analyzed. When anomalous behavior is detected, DevOps Guru creates an <i>insight</i> that includes recommendations, related events, and related metrics that can help you improve your operational applications. For more information, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html\">What is Amazon DevOps Guru</a>. </p> <p> You can specify 1 or 2 Amazon Simple Notification Service topics so you are notified every time a new insight is created. You can also enable DevOps Guru to generate an OpsItem in Amazon Web Services Systems Manager for each insight to help you manage and track your work addressing insights. </p> <p> To learn about the DevOps Guru workflow, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html#how-it-works\">How DevOps Guru works</a>. To learn about DevOps Guru concepts, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/concepts.html\">Concepts in DevOps Guru</a>. </p>
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateResourceCollection_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateResourceCollection_request::OAIUpdateResourceCollection_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateResourceCollection_request::OAIUpdateResourceCollection_request() {
    this->initializeModel();
}

OAIUpdateResourceCollection_request::~OAIUpdateResourceCollection_request() {}

void OAIUpdateResourceCollection_request::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_resource_collection_isSet = false;
    m_resource_collection_isValid = false;
}

void OAIUpdateResourceCollection_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateResourceCollection_request::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("Action")]);
    m_action_isSet = !json[QString("Action")].isNull() && m_action_isValid;

    m_resource_collection_isValid = ::OpenAPI::fromJsonValue(m_resource_collection, json[QString("ResourceCollection")]);
    m_resource_collection_isSet = !json[QString("ResourceCollection")].isNull() && m_resource_collection_isValid;
}

QString OAIUpdateResourceCollection_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateResourceCollection_request::asJsonObject() const {
    QJsonObject obj;
    if (m_action_isSet) {
        obj.insert(QString("Action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_resource_collection.isSet()) {
        obj.insert(QString("ResourceCollection"), ::OpenAPI::toJsonValue(m_resource_collection));
    }
    return obj;
}

QString OAIUpdateResourceCollection_request::getAction() const {
    return m_action;
}
void OAIUpdateResourceCollection_request::setAction(const QString &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAIUpdateResourceCollection_request::is_action_Set() const{
    return m_action_isSet;
}

bool OAIUpdateResourceCollection_request::is_action_Valid() const{
    return m_action_isValid;
}

OAIUpdateResourceCollection_request_ResourceCollection OAIUpdateResourceCollection_request::getResourceCollection() const {
    return m_resource_collection;
}
void OAIUpdateResourceCollection_request::setResourceCollection(const OAIUpdateResourceCollection_request_ResourceCollection &resource_collection) {
    m_resource_collection = resource_collection;
    m_resource_collection_isSet = true;
}

bool OAIUpdateResourceCollection_request::is_resource_collection_Set() const{
    return m_resource_collection_isSet;
}

bool OAIUpdateResourceCollection_request::is_resource_collection_Valid() const{
    return m_resource_collection_isValid;
}

bool OAIUpdateResourceCollection_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resource_collection.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateResourceCollection_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_action_isValid && m_resource_collection_isValid && true;
}

} // namespace OpenAPI
