/**
 * Amazon DevOps Guru
 * <p> Amazon DevOps Guru is a fully managed service that helps you identify anomalous behavior in business critical operational applications. You specify the Amazon Web Services resources that you want DevOps Guru to cover, then the Amazon CloudWatch metrics and Amazon Web Services CloudTrail events related to those resources are analyzed. When anomalous behavior is detected, DevOps Guru creates an <i>insight</i> that includes recommendations, related events, and related metrics that can help you improve your operational applications. For more information, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html\">What is Amazon DevOps Guru</a>. </p> <p> You can specify 1 or 2 Amazon Simple Notification Service topics so you are notified every time a new insight is created. You can also enable DevOps Guru to generate an OpsItem in Amazon Web Services Systems Manager for each insight to help you manage and track your work addressing insights. </p> <p> To learn about the DevOps Guru workflow, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html#how-it-works\">How DevOps Guru works</a>. To learn about DevOps Guru concepts, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/concepts.html\">Concepts in DevOps Guru</a>. </p>
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIReactiveOrganizationInsightSummary.h
 *
 * Information about a reactive insight. This object is returned by &lt;code&gt;DescribeInsight&lt;/code&gt;.
 */

#ifndef OAIReactiveOrganizationInsightSummary_H
#define OAIReactiveOrganizationInsightSummary_H

#include <QJsonObject>

#include "OAIInsightSeverity.h"
#include "OAIInsightStatus.h"
#include "OAIInsightTimeRange.h"
#include "OAIResourceCollection.h"
#include "OAIServiceCollection.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIInsightTimeRange;
class OAIResourceCollection;
class OAIServiceCollection;

class OAIReactiveOrganizationInsightSummary : public OAIObject {
public:
    OAIReactiveOrganizationInsightSummary();
    OAIReactiveOrganizationInsightSummary(QString json);
    ~OAIReactiveOrganizationInsightSummary() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getAccountId() const;
    void setAccountId(const QString &account_id);
    bool is_account_id_Set() const;
    bool is_account_id_Valid() const;

    QString getOrganizationalUnitId() const;
    void setOrganizationalUnitId(const QString &organizational_unit_id);
    bool is_organizational_unit_id_Set() const;
    bool is_organizational_unit_id_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIInsightSeverity getSeverity() const;
    void setSeverity(const OAIInsightSeverity &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    OAIInsightStatus getStatus() const;
    void setStatus(const OAIInsightStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIInsightTimeRange getInsightTimeRange() const;
    void setInsightTimeRange(const OAIInsightTimeRange &insight_time_range);
    bool is_insight_time_range_Set() const;
    bool is_insight_time_range_Valid() const;

    OAIResourceCollection getResourceCollection() const;
    void setResourceCollection(const OAIResourceCollection &resource_collection);
    bool is_resource_collection_Set() const;
    bool is_resource_collection_Valid() const;

    OAIServiceCollection getServiceCollection() const;
    void setServiceCollection(const OAIServiceCollection &service_collection);
    bool is_service_collection_Set() const;
    bool is_service_collection_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_account_id;
    bool m_account_id_isSet;
    bool m_account_id_isValid;

    QString m_organizational_unit_id;
    bool m_organizational_unit_id_isSet;
    bool m_organizational_unit_id_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIInsightSeverity m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    OAIInsightStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIInsightTimeRange m_insight_time_range;
    bool m_insight_time_range_isSet;
    bool m_insight_time_range_isValid;

    OAIResourceCollection m_resource_collection;
    bool m_resource_collection_isSet;
    bool m_resource_collection_isValid;

    OAIServiceCollection m_service_collection;
    bool m_service_collection_isSet;
    bool m_service_collection_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIReactiveOrganizationInsightSummary)

#endif // OAIReactiveOrganizationInsightSummary_H
