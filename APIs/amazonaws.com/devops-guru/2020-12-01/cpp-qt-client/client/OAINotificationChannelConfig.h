/**
 * Amazon DevOps Guru
 * <p> Amazon DevOps Guru is a fully managed service that helps you identify anomalous behavior in business critical operational applications. You specify the Amazon Web Services resources that you want DevOps Guru to cover, then the Amazon CloudWatch metrics and Amazon Web Services CloudTrail events related to those resources are analyzed. When anomalous behavior is detected, DevOps Guru creates an <i>insight</i> that includes recommendations, related events, and related metrics that can help you improve your operational applications. For more information, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html\">What is Amazon DevOps Guru</a>. </p> <p> You can specify 1 or 2 Amazon Simple Notification Service topics so you are notified every time a new insight is created. You can also enable DevOps Guru to generate an OpsItem in Amazon Web Services Systems Manager for each insight to help you manage and track your work addressing insights. </p> <p> To learn about the DevOps Guru workflow, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html#how-it-works\">How DevOps Guru works</a>. To learn about DevOps Guru concepts, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/concepts.html\">Concepts in DevOps Guru</a>. </p>
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINotificationChannelConfig.h
 *
 *  Information about notification channels you have configured with DevOps Guru. The one supported notification channel is Amazon Simple Notification Service (Amazon SNS).
 */

#ifndef OAINotificationChannelConfig_H
#define OAINotificationChannelConfig_H

#include <QJsonObject>

#include "OAIAddNotificationChannel_request_Config_Filters.h"
#include "OAIAddNotificationChannel_request_Config_Sns.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddNotificationChannel_request_Config_Sns;
class OAIAddNotificationChannel_request_Config_Filters;

class OAINotificationChannelConfig : public OAIObject {
public:
    OAINotificationChannelConfig();
    OAINotificationChannelConfig(QString json);
    ~OAINotificationChannelConfig() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAddNotificationChannel_request_Config_Sns getSns() const;
    void setSns(const OAIAddNotificationChannel_request_Config_Sns &sns);
    bool is_sns_Set() const;
    bool is_sns_Valid() const;

    OAIAddNotificationChannel_request_Config_Filters getFilters() const;
    void setFilters(const OAIAddNotificationChannel_request_Config_Filters &filters);
    bool is_filters_Set() const;
    bool is_filters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAddNotificationChannel_request_Config_Sns m_sns;
    bool m_sns_isSet;
    bool m_sns_isValid;

    OAIAddNotificationChannel_request_Config_Filters m_filters;
    bool m_filters_isSet;
    bool m_filters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINotificationChannelConfig)

#endif // OAINotificationChannelConfig_H
