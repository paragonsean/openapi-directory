/**
 * Amazon DevOps Guru
 * <p> Amazon DevOps Guru is a fully managed service that helps you identify anomalous behavior in business critical operational applications. You specify the Amazon Web Services resources that you want DevOps Guru to cover, then the Amazon CloudWatch metrics and Amazon Web Services CloudTrail events related to those resources are analyzed. When anomalous behavior is detected, DevOps Guru creates an <i>insight</i> that includes recommendations, related events, and related metrics that can help you improve your operational applications. For more information, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html\">What is Amazon DevOps Guru</a>. </p> <p> You can specify 1 or 2 Amazon Simple Notification Service topics so you are notified every time a new insight is created. You can also enable DevOps Guru to generate an OpsItem in Amazon Web Services Systems Manager for each insight to help you manage and track your work addressing insights. </p> <p> To learn about the DevOps Guru workflow, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html#how-it-works\">How DevOps Guru works</a>. To learn about DevOps Guru concepts, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/concepts.html\">Concepts in DevOps Guru</a>. </p>
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAnomalousLogGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAnomalousLogGroup::OAIAnomalousLogGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAnomalousLogGroup::OAIAnomalousLogGroup() {
    this->initializeModel();
}

OAIAnomalousLogGroup::~OAIAnomalousLogGroup() {}

void OAIAnomalousLogGroup::initializeModel() {

    m_log_group_name_isSet = false;
    m_log_group_name_isValid = false;

    m_impact_start_time_isSet = false;
    m_impact_start_time_isValid = false;

    m_impact_end_time_isSet = false;
    m_impact_end_time_isValid = false;

    m_number_of_log_lines_scanned_isSet = false;
    m_number_of_log_lines_scanned_isValid = false;

    m_log_anomaly_showcases_isSet = false;
    m_log_anomaly_showcases_isValid = false;
}

void OAIAnomalousLogGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAnomalousLogGroup::fromJsonObject(QJsonObject json) {

    m_log_group_name_isValid = ::OpenAPI::fromJsonValue(m_log_group_name, json[QString("LogGroupName")]);
    m_log_group_name_isSet = !json[QString("LogGroupName")].isNull() && m_log_group_name_isValid;

    m_impact_start_time_isValid = ::OpenAPI::fromJsonValue(m_impact_start_time, json[QString("ImpactStartTime")]);
    m_impact_start_time_isSet = !json[QString("ImpactStartTime")].isNull() && m_impact_start_time_isValid;

    m_impact_end_time_isValid = ::OpenAPI::fromJsonValue(m_impact_end_time, json[QString("ImpactEndTime")]);
    m_impact_end_time_isSet = !json[QString("ImpactEndTime")].isNull() && m_impact_end_time_isValid;

    m_number_of_log_lines_scanned_isValid = ::OpenAPI::fromJsonValue(m_number_of_log_lines_scanned, json[QString("NumberOfLogLinesScanned")]);
    m_number_of_log_lines_scanned_isSet = !json[QString("NumberOfLogLinesScanned")].isNull() && m_number_of_log_lines_scanned_isValid;

    m_log_anomaly_showcases_isValid = ::OpenAPI::fromJsonValue(m_log_anomaly_showcases, json[QString("LogAnomalyShowcases")]);
    m_log_anomaly_showcases_isSet = !json[QString("LogAnomalyShowcases")].isNull() && m_log_anomaly_showcases_isValid;
}

QString OAIAnomalousLogGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAnomalousLogGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_log_group_name_isSet) {
        obj.insert(QString("LogGroupName"), ::OpenAPI::toJsonValue(m_log_group_name));
    }
    if (m_impact_start_time_isSet) {
        obj.insert(QString("ImpactStartTime"), ::OpenAPI::toJsonValue(m_impact_start_time));
    }
    if (m_impact_end_time_isSet) {
        obj.insert(QString("ImpactEndTime"), ::OpenAPI::toJsonValue(m_impact_end_time));
    }
    if (m_number_of_log_lines_scanned_isSet) {
        obj.insert(QString("NumberOfLogLinesScanned"), ::OpenAPI::toJsonValue(m_number_of_log_lines_scanned));
    }
    if (m_log_anomaly_showcases.isSet()) {
        obj.insert(QString("LogAnomalyShowcases"), ::OpenAPI::toJsonValue(m_log_anomaly_showcases));
    }
    return obj;
}

QString OAIAnomalousLogGroup::getLogGroupName() const {
    return m_log_group_name;
}
void OAIAnomalousLogGroup::setLogGroupName(const QString &log_group_name) {
    m_log_group_name = log_group_name;
    m_log_group_name_isSet = true;
}

bool OAIAnomalousLogGroup::is_log_group_name_Set() const{
    return m_log_group_name_isSet;
}

bool OAIAnomalousLogGroup::is_log_group_name_Valid() const{
    return m_log_group_name_isValid;
}

QDateTime OAIAnomalousLogGroup::getImpactStartTime() const {
    return m_impact_start_time;
}
void OAIAnomalousLogGroup::setImpactStartTime(const QDateTime &impact_start_time) {
    m_impact_start_time = impact_start_time;
    m_impact_start_time_isSet = true;
}

bool OAIAnomalousLogGroup::is_impact_start_time_Set() const{
    return m_impact_start_time_isSet;
}

bool OAIAnomalousLogGroup::is_impact_start_time_Valid() const{
    return m_impact_start_time_isValid;
}

QDateTime OAIAnomalousLogGroup::getImpactEndTime() const {
    return m_impact_end_time;
}
void OAIAnomalousLogGroup::setImpactEndTime(const QDateTime &impact_end_time) {
    m_impact_end_time = impact_end_time;
    m_impact_end_time_isSet = true;
}

bool OAIAnomalousLogGroup::is_impact_end_time_Set() const{
    return m_impact_end_time_isSet;
}

bool OAIAnomalousLogGroup::is_impact_end_time_Valid() const{
    return m_impact_end_time_isValid;
}

qint32 OAIAnomalousLogGroup::getNumberOfLogLinesScanned() const {
    return m_number_of_log_lines_scanned;
}
void OAIAnomalousLogGroup::setNumberOfLogLinesScanned(const qint32 &number_of_log_lines_scanned) {
    m_number_of_log_lines_scanned = number_of_log_lines_scanned;
    m_number_of_log_lines_scanned_isSet = true;
}

bool OAIAnomalousLogGroup::is_number_of_log_lines_scanned_Set() const{
    return m_number_of_log_lines_scanned_isSet;
}

bool OAIAnomalousLogGroup::is_number_of_log_lines_scanned_Valid() const{
    return m_number_of_log_lines_scanned_isValid;
}

QList OAIAnomalousLogGroup::getLogAnomalyShowcases() const {
    return m_log_anomaly_showcases;
}
void OAIAnomalousLogGroup::setLogAnomalyShowcases(const QList &log_anomaly_showcases) {
    m_log_anomaly_showcases = log_anomaly_showcases;
    m_log_anomaly_showcases_isSet = true;
}

bool OAIAnomalousLogGroup::is_log_anomaly_showcases_Set() const{
    return m_log_anomaly_showcases_isSet;
}

bool OAIAnomalousLogGroup::is_log_anomaly_showcases_Valid() const{
    return m_log_anomaly_showcases_isValid;
}

bool OAIAnomalousLogGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_log_group_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_impact_start_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_impact_end_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_number_of_log_lines_scanned_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_log_anomaly_showcases.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAnomalousLogGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
