/**
 * Amazon DevOps Guru
 * <p> Amazon DevOps Guru is a fully managed service that helps you identify anomalous behavior in business critical operational applications. You specify the Amazon Web Services resources that you want DevOps Guru to cover, then the Amazon CloudWatch metrics and Amazon Web Services CloudTrail events related to those resources are analyzed. When anomalous behavior is detected, DevOps Guru creates an <i>insight</i> that includes recommendations, related events, and related metrics that can help you improve your operational applications. For more information, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html\">What is Amazon DevOps Guru</a>. </p> <p> You can specify 1 or 2 Amazon Simple Notification Service topics so you are notified every time a new insight is created. You can also enable DevOps Guru to generate an OpsItem in Amazon Web Services Systems Manager for each insight to help you manage and track your work addressing insights. </p> <p> To learn about the DevOps Guru workflow, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html#how-it-works\">How DevOps Guru works</a>. To learn about DevOps Guru concepts, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/concepts.html\">Concepts in DevOps Guru</a>. </p>
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMonitoredResourceIdentifier.h
 *
 *  Information about the resource that is being monitored, including the name of the resource, the type of resource, and whether or not permission is given to DevOps Guru to access that resource. 
 */

#ifndef OAIMonitoredResourceIdentifier_H
#define OAIMonitoredResourceIdentifier_H

#include <QJsonObject>

#include "OAIResourceCollection.h"
#include "OAIResourcePermission.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResourceCollection;

class OAIMonitoredResourceIdentifier : public OAIObject {
public:
    OAIMonitoredResourceIdentifier();
    OAIMonitoredResourceIdentifier(QString json);
    ~OAIMonitoredResourceIdentifier() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getMonitoredResourceName() const;
    void setMonitoredResourceName(const QString &monitored_resource_name);
    bool is_monitored_resource_name_Set() const;
    bool is_monitored_resource_name_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    OAIResourcePermission getResourcePermission() const;
    void setResourcePermission(const OAIResourcePermission &resource_permission);
    bool is_resource_permission_Set() const;
    bool is_resource_permission_Valid() const;

    QDateTime getLastUpdated() const;
    void setLastUpdated(const QDateTime &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    OAIResourceCollection getResourceCollection() const;
    void setResourceCollection(const OAIResourceCollection &resource_collection);
    bool is_resource_collection_Set() const;
    bool is_resource_collection_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_monitored_resource_name;
    bool m_monitored_resource_name_isSet;
    bool m_monitored_resource_name_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    OAIResourcePermission m_resource_permission;
    bool m_resource_permission_isSet;
    bool m_resource_permission_isValid;

    QDateTime m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    OAIResourceCollection m_resource_collection;
    bool m_resource_collection_isSet;
    bool m_resource_collection_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMonitoredResourceIdentifier)

#endif // OAIMonitoredResourceIdentifier_H
