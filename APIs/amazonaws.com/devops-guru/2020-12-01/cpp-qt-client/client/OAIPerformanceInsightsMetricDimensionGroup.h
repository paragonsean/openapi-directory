/**
 * Amazon DevOps Guru
 * <p> Amazon DevOps Guru is a fully managed service that helps you identify anomalous behavior in business critical operational applications. You specify the Amazon Web Services resources that you want DevOps Guru to cover, then the Amazon CloudWatch metrics and Amazon Web Services CloudTrail events related to those resources are analyzed. When anomalous behavior is detected, DevOps Guru creates an <i>insight</i> that includes recommendations, related events, and related metrics that can help you improve your operational applications. For more information, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html\">What is Amazon DevOps Guru</a>. </p> <p> You can specify 1 or 2 Amazon Simple Notification Service topics so you are notified every time a new insight is created. You can also enable DevOps Guru to generate an OpsItem in Amazon Web Services Systems Manager for each insight to help you manage and track your work addressing insights. </p> <p> To learn about the DevOps Guru workflow, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html#how-it-works\">How DevOps Guru works</a>. To learn about DevOps Guru concepts, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/concepts.html\">Concepts in DevOps Guru</a>. </p>
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPerformanceInsightsMetricDimensionGroup.h
 *
 * &lt;p&gt;A logical grouping of Performance Insights metrics for a related subject area. For example, the &lt;code&gt;db.sql&lt;/code&gt; dimension group consists of the following dimensions: &lt;code&gt;db.sql.id&lt;/code&gt;, &lt;code&gt;db.sql.db_id&lt;/code&gt;, &lt;code&gt;db.sql.statement&lt;/code&gt;, and &lt;code&gt;db.sql.tokenized_id&lt;/code&gt;.&lt;/p&gt; &lt;note&gt; &lt;p&gt;Each response element returns a maximum of 500 bytes. For larger elements, such as SQL statements, only the first 500 bytes are returned.&lt;/p&gt; &lt;/note&gt; &lt;p&gt;Amazon RDS Performance Insights enables you to monitor and explore different dimensions of database load based on data captured from a running DB instance. DB load is measured as average active sessions. Performance Insights provides the data to API consumers as a two-dimensional time-series dataset. The time dimension provides DB load data for each time point in the queried time range. Each time point decomposes overall load in relation to the requested dimensions, measured at that time point. Examples include SQL, Wait event, User, and Host. &lt;/p&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;To learn more about Performance Insights and Amazon Aurora DB instances, go to the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonRDS/latest/AuroraUserGuide/USER_PerfInsights.html\&quot;&gt; Amazon Aurora User Guide&lt;/a&gt;. &lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;To learn more about Performance Insights and Amazon RDS DB instances, go to the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/USER_PerfInsights.html\&quot;&gt; Amazon RDS User Guide&lt;/a&gt;. &lt;/p&gt; &lt;/li&gt; &lt;/ul&gt;
 */

#ifndef OAIPerformanceInsightsMetricDimensionGroup_H
#define OAIPerformanceInsightsMetricDimensionGroup_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPerformanceInsightsMetricDimensionGroup : public OAIObject {
public:
    OAIPerformanceInsightsMetricDimensionGroup();
    OAIPerformanceInsightsMetricDimensionGroup(QString json);
    ~OAIPerformanceInsightsMetricDimensionGroup() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getGroup() const;
    void setGroup(const QString &group);
    bool is_group_Set() const;
    bool is_group_Valid() const;

    QList getDimensions() const;
    void setDimensions(const QList &dimensions);
    bool is_dimensions_Set() const;
    bool is_dimensions_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_group;
    bool m_group_isSet;
    bool m_group_isValid;

    QList m_dimensions;
    bool m_dimensions_isSet;
    bool m_dimensions_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPerformanceInsightsMetricDimensionGroup)

#endif // OAIPerformanceInsightsMetricDimensionGroup_H
