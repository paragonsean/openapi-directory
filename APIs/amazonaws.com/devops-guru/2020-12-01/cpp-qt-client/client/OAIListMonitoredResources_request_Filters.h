/**
 * Amazon DevOps Guru
 * <p> Amazon DevOps Guru is a fully managed service that helps you identify anomalous behavior in business critical operational applications. You specify the Amazon Web Services resources that you want DevOps Guru to cover, then the Amazon CloudWatch metrics and Amazon Web Services CloudTrail events related to those resources are analyzed. When anomalous behavior is detected, DevOps Guru creates an <i>insight</i> that includes recommendations, related events, and related metrics that can help you improve your operational applications. For more information, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html\">What is Amazon DevOps Guru</a>. </p> <p> You can specify 1 or 2 Amazon Simple Notification Service topics so you are notified every time a new insight is created. You can also enable DevOps Guru to generate an OpsItem in Amazon Web Services Systems Manager for each insight to help you manage and track your work addressing insights. </p> <p> To learn about the DevOps Guru workflow, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html#how-it-works\">How DevOps Guru works</a>. To learn about DevOps Guru concepts, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/concepts.html\">Concepts in DevOps Guru</a>. </p>
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIListMonitoredResources_request_Filters.h
 *
 *  Filters to determine which monitored resources you want to retrieve. You can filter by resource type or resource permission status. 
 */

#ifndef OAIListMonitoredResources_request_Filters_H
#define OAIListMonitoredResources_request_Filters_H

#include <QJsonObject>

#include "OAIResourcePermission.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIListMonitoredResources_request_Filters : public OAIObject {
public:
    OAIListMonitoredResources_request_Filters();
    OAIListMonitoredResources_request_Filters(QString json);
    ~OAIListMonitoredResources_request_Filters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIResourcePermission getResourcePermission() const;
    void setResourcePermission(const OAIResourcePermission &resource_permission);
    bool is_resource_permission_Set() const;
    bool is_resource_permission_Valid() const;

    QList getResourceTypeFilters() const;
    void setResourceTypeFilters(const QList &resource_type_filters);
    bool is_resource_type_filters_Set() const;
    bool is_resource_type_filters_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIResourcePermission m_resource_permission;
    bool m_resource_permission_isSet;
    bool m_resource_permission_isValid;

    QList m_resource_type_filters;
    bool m_resource_type_filters_isSet;
    bool m_resource_type_filters_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIListMonitoredResources_request_Filters)

#endif // OAIListMonitoredResources_request_Filters_H
