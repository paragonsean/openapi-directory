/**
 * Amazon DevOps Guru
 * <p> Amazon DevOps Guru is a fully managed service that helps you identify anomalous behavior in business critical operational applications. You specify the Amazon Web Services resources that you want DevOps Guru to cover, then the Amazon CloudWatch metrics and Amazon Web Services CloudTrail events related to those resources are analyzed. When anomalous behavior is detected, DevOps Guru creates an <i>insight</i> that includes recommendations, related events, and related metrics that can help you improve your operational applications. For more information, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html\">What is Amazon DevOps Guru</a>. </p> <p> You can specify 1 or 2 Amazon Simple Notification Service topics so you are notified every time a new insight is created. You can also enable DevOps Guru to generate an OpsItem in Amazon Web Services Systems Manager for each insight to help you manage and track your work addressing insights. </p> <p> To learn about the DevOps Guru workflow, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html#how-it-works\">How DevOps Guru works</a>. To learn about DevOps Guru concepts, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/concepts.html\">Concepts in DevOps Guru</a>. </p>
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIListInsightsClosedStatusFilter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIListInsightsClosedStatusFilter::OAIListInsightsClosedStatusFilter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIListInsightsClosedStatusFilter::OAIListInsightsClosedStatusFilter() {
    this->initializeModel();
}

OAIListInsightsClosedStatusFilter::~OAIListInsightsClosedStatusFilter() {}

void OAIListInsightsClosedStatusFilter::initializeModel() {

    m_type_isSet = false;
    m_type_isValid = false;

    m_end_time_range_isSet = false;
    m_end_time_range_isValid = false;
}

void OAIListInsightsClosedStatusFilter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIListInsightsClosedStatusFilter::fromJsonObject(QJsonObject json) {

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;

    m_end_time_range_isValid = ::OpenAPI::fromJsonValue(m_end_time_range, json[QString("EndTimeRange")]);
    m_end_time_range_isSet = !json[QString("EndTimeRange")].isNull() && m_end_time_range_isValid;
}

QString OAIListInsightsClosedStatusFilter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIListInsightsClosedStatusFilter::asJsonObject() const {
    QJsonObject obj;
    if (m_type.isSet()) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_end_time_range.isSet()) {
        obj.insert(QString("EndTimeRange"), ::OpenAPI::toJsonValue(m_end_time_range));
    }
    return obj;
}

OAIInsightType OAIListInsightsClosedStatusFilter::getType() const {
    return m_type;
}
void OAIListInsightsClosedStatusFilter::setType(const OAIInsightType &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIListInsightsClosedStatusFilter::is_type_Set() const{
    return m_type_isSet;
}

bool OAIListInsightsClosedStatusFilter::is_type_Valid() const{
    return m_type_isValid;
}

OAIListInsightsClosedStatusFilter_EndTimeRange OAIListInsightsClosedStatusFilter::getEndTimeRange() const {
    return m_end_time_range;
}
void OAIListInsightsClosedStatusFilter::setEndTimeRange(const OAIListInsightsClosedStatusFilter_EndTimeRange &end_time_range) {
    m_end_time_range = end_time_range;
    m_end_time_range_isSet = true;
}

bool OAIListInsightsClosedStatusFilter::is_end_time_range_Set() const{
    return m_end_time_range_isSet;
}

bool OAIListInsightsClosedStatusFilter::is_end_time_range_Valid() const{
    return m_end_time_range_isValid;
}

bool OAIListInsightsClosedStatusFilter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_time_range.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIListInsightsClosedStatusFilter::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_type_isValid && m_end_time_range_isValid && true;
}

} // namespace OpenAPI
