/**
 * Amazon DevOps Guru
 * <p> Amazon DevOps Guru is a fully managed service that helps you identify anomalous behavior in business critical operational applications. You specify the Amazon Web Services resources that you want DevOps Guru to cover, then the Amazon CloudWatch metrics and Amazon Web Services CloudTrail events related to those resources are analyzed. When anomalous behavior is detected, DevOps Guru creates an <i>insight</i> that includes recommendations, related events, and related metrics that can help you improve your operational applications. For more information, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html\">What is Amazon DevOps Guru</a>. </p> <p> You can specify 1 or 2 Amazon Simple Notification Service topics so you are notified every time a new insight is created. You can also enable DevOps Guru to generate an OpsItem in Amazon Web Services Systems Manager for each insight to help you manage and track your work addressing insights. </p> <p> To learn about the DevOps Guru workflow, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html#how-it-works\">How DevOps Guru works</a>. To learn about DevOps Guru concepts, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/concepts.html\">Concepts in DevOps Guru</a>. </p>
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITagHealth.h
 *
 *  Information about the health of Amazon Web Services resources in your account that are specified by an Amazon Web Services tag &lt;i&gt;key&lt;/i&gt;. 
 */

#ifndef OAITagHealth_H
#define OAITagHealth_H

#include <QJsonObject>

#include "OAITagHealth_Insight.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITagHealth_Insight;

class OAITagHealth : public OAIObject {
public:
    OAITagHealth();
    OAITagHealth(QString json);
    ~OAITagHealth() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppBoundaryKey() const;
    void setAppBoundaryKey(const QString &app_boundary_key);
    bool is_app_boundary_key_Set() const;
    bool is_app_boundary_key_Valid() const;

    QString getTagValue() const;
    void setTagValue(const QString &tag_value);
    bool is_tag_value_Set() const;
    bool is_tag_value_Valid() const;

    OAITagHealth_Insight getInsight() const;
    void setInsight(const OAITagHealth_Insight &insight);
    bool is_insight_Set() const;
    bool is_insight_Valid() const;

    qint32 getAnalyzedResourceCount() const;
    void setAnalyzedResourceCount(const qint32 &analyzed_resource_count);
    bool is_analyzed_resource_count_Set() const;
    bool is_analyzed_resource_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_boundary_key;
    bool m_app_boundary_key_isSet;
    bool m_app_boundary_key_isValid;

    QString m_tag_value;
    bool m_tag_value_isSet;
    bool m_tag_value_isValid;

    OAITagHealth_Insight m_insight;
    bool m_insight_isSet;
    bool m_insight_isValid;

    qint32 m_analyzed_resource_count;
    bool m_analyzed_resource_count_isSet;
    bool m_analyzed_resource_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITagHealth)

#endif // OAITagHealth_H
