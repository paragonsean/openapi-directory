/**
 * Amazon DevOps Guru
 * <p> Amazon DevOps Guru is a fully managed service that helps you identify anomalous behavior in business critical operational applications. You specify the Amazon Web Services resources that you want DevOps Guru to cover, then the Amazon CloudWatch metrics and Amazon Web Services CloudTrail events related to those resources are analyzed. When anomalous behavior is detected, DevOps Guru creates an <i>insight</i> that includes recommendations, related events, and related metrics that can help you improve your operational applications. For more information, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html\">What is Amazon DevOps Guru</a>. </p> <p> You can specify 1 or 2 Amazon Simple Notification Service topics so you are notified every time a new insight is created. You can also enable DevOps Guru to generate an OpsItem in Amazon Web Services Systems Manager for each insight to help you manage and track your work addressing insights. </p> <p> To learn about the DevOps Guru workflow, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html#how-it-works\">How DevOps Guru works</a>. To learn about DevOps Guru concepts, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/concepts.html\">Concepts in DevOps Guru</a>. </p>
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeAnomalyResponse_ReactiveAnomaly.h
 *
 * 
 */

#ifndef OAIDescribeAnomalyResponse_ReactiveAnomaly_H
#define OAIDescribeAnomalyResponse_ReactiveAnomaly_H

#include <QJsonObject>

#include "OAIAnomalySeverity.h"
#include "OAIAnomalyStatus.h"
#include "OAIAnomalyTimeRange.h"
#include "OAIAnomalyType.h"
#include "OAIProactiveAnomaly_AnomalyReportedTimeRange.h"
#include "OAIProactiveAnomaly_SourceDetails.h"
#include "OAIResourceCollection.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAnomalyTimeRange;
class OAIProactiveAnomaly_AnomalyReportedTimeRange;
class OAIProactiveAnomaly_SourceDetails;
class OAIResourceCollection;

class OAIDescribeAnomalyResponse_ReactiveAnomaly : public OAIObject {
public:
    OAIDescribeAnomalyResponse_ReactiveAnomaly();
    OAIDescribeAnomalyResponse_ReactiveAnomaly(QString json);
    ~OAIDescribeAnomalyResponse_ReactiveAnomaly() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIAnomalySeverity getSeverity() const;
    void setSeverity(const OAIAnomalySeverity &severity);
    bool is_severity_Set() const;
    bool is_severity_Valid() const;

    OAIAnomalyStatus getStatus() const;
    void setStatus(const OAIAnomalyStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    OAIAnomalyTimeRange getAnomalyTimeRange() const;
    void setAnomalyTimeRange(const OAIAnomalyTimeRange &anomaly_time_range);
    bool is_anomaly_time_range_Set() const;
    bool is_anomaly_time_range_Valid() const;

    OAIProactiveAnomaly_AnomalyReportedTimeRange getAnomalyReportedTimeRange() const;
    void setAnomalyReportedTimeRange(const OAIProactiveAnomaly_AnomalyReportedTimeRange &anomaly_reported_time_range);
    bool is_anomaly_reported_time_range_Set() const;
    bool is_anomaly_reported_time_range_Valid() const;

    OAIProactiveAnomaly_SourceDetails getSourceDetails() const;
    void setSourceDetails(const OAIProactiveAnomaly_SourceDetails &source_details);
    bool is_source_details_Set() const;
    bool is_source_details_Valid() const;

    QString getAssociatedInsightId() const;
    void setAssociatedInsightId(const QString &associated_insight_id);
    bool is_associated_insight_id_Set() const;
    bool is_associated_insight_id_Valid() const;

    OAIResourceCollection getResourceCollection() const;
    void setResourceCollection(const OAIResourceCollection &resource_collection);
    bool is_resource_collection_Set() const;
    bool is_resource_collection_Valid() const;

    OAIAnomalyType getType() const;
    void setType(const OAIAnomalyType &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getCausalAnomalyId() const;
    void setCausalAnomalyId(const QString &causal_anomaly_id);
    bool is_causal_anomaly_id_Set() const;
    bool is_causal_anomaly_id_Valid() const;

    QList getAnomalyResources() const;
    void setAnomalyResources(const QList &anomaly_resources);
    bool is_anomaly_resources_Set() const;
    bool is_anomaly_resources_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIAnomalySeverity m_severity;
    bool m_severity_isSet;
    bool m_severity_isValid;

    OAIAnomalyStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    OAIAnomalyTimeRange m_anomaly_time_range;
    bool m_anomaly_time_range_isSet;
    bool m_anomaly_time_range_isValid;

    OAIProactiveAnomaly_AnomalyReportedTimeRange m_anomaly_reported_time_range;
    bool m_anomaly_reported_time_range_isSet;
    bool m_anomaly_reported_time_range_isValid;

    OAIProactiveAnomaly_SourceDetails m_source_details;
    bool m_source_details_isSet;
    bool m_source_details_isValid;

    QString m_associated_insight_id;
    bool m_associated_insight_id_isSet;
    bool m_associated_insight_id_isValid;

    OAIResourceCollection m_resource_collection;
    bool m_resource_collection_isSet;
    bool m_resource_collection_isValid;

    OAIAnomalyType m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_causal_anomaly_id;
    bool m_causal_anomaly_id_isSet;
    bool m_causal_anomaly_id_isValid;

    QList m_anomaly_resources;
    bool m_anomaly_resources_isSet;
    bool m_anomaly_resources_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeAnomalyResponse_ReactiveAnomaly)

#endif // OAIDescribeAnomalyResponse_ReactiveAnomaly_H
