/**
 * Amazon DevOps Guru
 * <p> Amazon DevOps Guru is a fully managed service that helps you identify anomalous behavior in business critical operational applications. You specify the Amazon Web Services resources that you want DevOps Guru to cover, then the Amazon CloudWatch metrics and Amazon Web Services CloudTrail events related to those resources are analyzed. When anomalous behavior is detected, DevOps Guru creates an <i>insight</i> that includes recommendations, related events, and related metrics that can help you improve your operational applications. For more information, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html\">What is Amazon DevOps Guru</a>. </p> <p> You can specify 1 or 2 Amazon Simple Notification Service topics so you are notified every time a new insight is created. You can also enable DevOps Guru to generate an OpsItem in Amazon Web Services Systems Manager for each insight to help you manage and track your work addressing insights. </p> <p> To learn about the DevOps Guru workflow, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html#how-it-works\">How DevOps Guru works</a>. To learn about DevOps Guru concepts, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/concepts.html\">Concepts in DevOps Guru</a>. </p>
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISearchInsightsFilters.h
 *
 * Specifies values used to filter responses when searching for insights. You can use a &lt;code&gt;ResourceCollection&lt;/code&gt;, &lt;code&gt;ServiceCollection&lt;/code&gt;, array of severities, and an array of status values. Each filter type contains one or more values to search for. If you specify multiple filter types, the filter types are joined with an &lt;code&gt;AND&lt;/code&gt;, and the request returns only results that match all of the specified filters.
 */

#ifndef OAISearchInsightsFilters_H
#define OAISearchInsightsFilters_H

#include <QJsonObject>

#include "OAIResourceCollection.h"
#include "OAISearchInsights_request_Filters_ServiceCollection.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResourceCollection;
class OAISearchInsights_request_Filters_ServiceCollection;

class OAISearchInsightsFilters : public OAIObject {
public:
    OAISearchInsightsFilters();
    OAISearchInsightsFilters(QString json);
    ~OAISearchInsightsFilters() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList getSeverities() const;
    void setSeverities(const QList &severities);
    bool is_severities_Set() const;
    bool is_severities_Valid() const;

    QList getStatuses() const;
    void setStatuses(const QList &statuses);
    bool is_statuses_Set() const;
    bool is_statuses_Valid() const;

    OAIResourceCollection getResourceCollection() const;
    void setResourceCollection(const OAIResourceCollection &resource_collection);
    bool is_resource_collection_Set() const;
    bool is_resource_collection_Valid() const;

    OAISearchInsights_request_Filters_ServiceCollection getServiceCollection() const;
    void setServiceCollection(const OAISearchInsights_request_Filters_ServiceCollection &service_collection);
    bool is_service_collection_Set() const;
    bool is_service_collection_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList m_severities;
    bool m_severities_isSet;
    bool m_severities_isValid;

    QList m_statuses;
    bool m_statuses_isSet;
    bool m_statuses_isValid;

    OAIResourceCollection m_resource_collection;
    bool m_resource_collection_isSet;
    bool m_resource_collection_isValid;

    OAISearchInsights_request_Filters_ServiceCollection m_service_collection;
    bool m_service_collection_isSet;
    bool m_service_collection_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISearchInsightsFilters)

#endif // OAISearchInsightsFilters_H
