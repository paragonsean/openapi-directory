/**
 * Amazon DevOps Guru
 * <p> Amazon DevOps Guru is a fully managed service that helps you identify anomalous behavior in business critical operational applications. You specify the Amazon Web Services resources that you want DevOps Guru to cover, then the Amazon CloudWatch metrics and Amazon Web Services CloudTrail events related to those resources are analyzed. When anomalous behavior is detected, DevOps Guru creates an <i>insight</i> that includes recommendations, related events, and related metrics that can help you improve your operational applications. For more information, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html\">What is Amazon DevOps Guru</a>. </p> <p> You can specify 1 or 2 Amazon Simple Notification Service topics so you are notified every time a new insight is created. You can also enable DevOps Guru to generate an OpsItem in Amazon Web Services Systems Manager for each insight to help you manage and track your work addressing insights. </p> <p> To learn about the DevOps Guru workflow, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/welcome.html#how-it-works\">How DevOps Guru works</a>. To learn about DevOps Guru concepts, see <a href=\"https://docs.aws.amazon.com/devops-guru/latest/userguide/concepts.html\">Concepts in DevOps Guru</a>. </p>
 *
 * The version of the OpenAPI document: 2020-12-01
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICloudFormationHealth_Insight.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICloudFormationHealth_Insight::OAICloudFormationHealth_Insight(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICloudFormationHealth_Insight::OAICloudFormationHealth_Insight() {
    this->initializeModel();
}

OAICloudFormationHealth_Insight::~OAICloudFormationHealth_Insight() {}

void OAICloudFormationHealth_Insight::initializeModel() {

    m_open_proactive_insights_isSet = false;
    m_open_proactive_insights_isValid = false;

    m_open_reactive_insights_isSet = false;
    m_open_reactive_insights_isValid = false;

    m_mean_time_to_recover_in_milliseconds_isSet = false;
    m_mean_time_to_recover_in_milliseconds_isValid = false;
}

void OAICloudFormationHealth_Insight::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICloudFormationHealth_Insight::fromJsonObject(QJsonObject json) {

    m_open_proactive_insights_isValid = ::OpenAPI::fromJsonValue(m_open_proactive_insights, json[QString("OpenProactiveInsights")]);
    m_open_proactive_insights_isSet = !json[QString("OpenProactiveInsights")].isNull() && m_open_proactive_insights_isValid;

    m_open_reactive_insights_isValid = ::OpenAPI::fromJsonValue(m_open_reactive_insights, json[QString("OpenReactiveInsights")]);
    m_open_reactive_insights_isSet = !json[QString("OpenReactiveInsights")].isNull() && m_open_reactive_insights_isValid;

    m_mean_time_to_recover_in_milliseconds_isValid = ::OpenAPI::fromJsonValue(m_mean_time_to_recover_in_milliseconds, json[QString("MeanTimeToRecoverInMilliseconds")]);
    m_mean_time_to_recover_in_milliseconds_isSet = !json[QString("MeanTimeToRecoverInMilliseconds")].isNull() && m_mean_time_to_recover_in_milliseconds_isValid;
}

QString OAICloudFormationHealth_Insight::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICloudFormationHealth_Insight::asJsonObject() const {
    QJsonObject obj;
    if (m_open_proactive_insights_isSet) {
        obj.insert(QString("OpenProactiveInsights"), ::OpenAPI::toJsonValue(m_open_proactive_insights));
    }
    if (m_open_reactive_insights_isSet) {
        obj.insert(QString("OpenReactiveInsights"), ::OpenAPI::toJsonValue(m_open_reactive_insights));
    }
    if (m_mean_time_to_recover_in_milliseconds_isSet) {
        obj.insert(QString("MeanTimeToRecoverInMilliseconds"), ::OpenAPI::toJsonValue(m_mean_time_to_recover_in_milliseconds));
    }
    return obj;
}

qint32 OAICloudFormationHealth_Insight::getOpenProactiveInsights() const {
    return m_open_proactive_insights;
}
void OAICloudFormationHealth_Insight::setOpenProactiveInsights(const qint32 &open_proactive_insights) {
    m_open_proactive_insights = open_proactive_insights;
    m_open_proactive_insights_isSet = true;
}

bool OAICloudFormationHealth_Insight::is_open_proactive_insights_Set() const{
    return m_open_proactive_insights_isSet;
}

bool OAICloudFormationHealth_Insight::is_open_proactive_insights_Valid() const{
    return m_open_proactive_insights_isValid;
}

qint32 OAICloudFormationHealth_Insight::getOpenReactiveInsights() const {
    return m_open_reactive_insights;
}
void OAICloudFormationHealth_Insight::setOpenReactiveInsights(const qint32 &open_reactive_insights) {
    m_open_reactive_insights = open_reactive_insights;
    m_open_reactive_insights_isSet = true;
}

bool OAICloudFormationHealth_Insight::is_open_reactive_insights_Set() const{
    return m_open_reactive_insights_isSet;
}

bool OAICloudFormationHealth_Insight::is_open_reactive_insights_Valid() const{
    return m_open_reactive_insights_isValid;
}

qint32 OAICloudFormationHealth_Insight::getMeanTimeToRecoverInMilliseconds() const {
    return m_mean_time_to_recover_in_milliseconds;
}
void OAICloudFormationHealth_Insight::setMeanTimeToRecoverInMilliseconds(const qint32 &mean_time_to_recover_in_milliseconds) {
    m_mean_time_to_recover_in_milliseconds = mean_time_to_recover_in_milliseconds;
    m_mean_time_to_recover_in_milliseconds_isSet = true;
}

bool OAICloudFormationHealth_Insight::is_mean_time_to_recover_in_milliseconds_Set() const{
    return m_mean_time_to_recover_in_milliseconds_isSet;
}

bool OAICloudFormationHealth_Insight::is_mean_time_to_recover_in_milliseconds_Valid() const{
    return m_mean_time_to_recover_in_milliseconds_isValid;
}

bool OAICloudFormationHealth_Insight::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_open_proactive_insights_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_open_reactive_insights_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mean_time_to_recover_in_milliseconds_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICloudFormationHealth_Insight::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
