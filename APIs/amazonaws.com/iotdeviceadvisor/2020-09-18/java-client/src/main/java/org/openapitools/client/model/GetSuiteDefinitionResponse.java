/*
 * AWS IoT Core Device Advisor
 * Amazon Web Services IoT Core Device Advisor is a cloud-based, fully managed test capability for validating IoT devices during device software development. Device Advisor provides pre-built tests that you can use to validate IoT devices for reliable and secure connectivity with Amazon Web Services IoT Core before deploying devices to production. By using Device Advisor, you can confirm that your devices can connect to Amazon Web Services IoT Core, follow security best practices and, if applicable, receive software updates from IoT Device Management. You can also download signed qualification reports to submit to the Amazon Web Services Partner Network to get your device qualified for the Amazon Web Services Partner Device Catalog without the need to send your device in and wait for it to be tested.
 *
 * The version of the OpenAPI document: 2020-09-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import java.util.Map;
import org.openapitools.client.model.GetSuiteDefinitionResponseSuiteDefinitionConfiguration;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetSuiteDefinitionResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:23:36.168228-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetSuiteDefinitionResponse {
  public static final String SERIALIZED_NAME_SUITE_DEFINITION_ID = "suiteDefinitionId";
  @SerializedName(SERIALIZED_NAME_SUITE_DEFINITION_ID)
  private String suiteDefinitionId;

  public static final String SERIALIZED_NAME_SUITE_DEFINITION_ARN = "suiteDefinitionArn";
  @SerializedName(SERIALIZED_NAME_SUITE_DEFINITION_ARN)
  private String suiteDefinitionArn;

  public static final String SERIALIZED_NAME_SUITE_DEFINITION_VERSION = "suiteDefinitionVersion";
  @SerializedName(SERIALIZED_NAME_SUITE_DEFINITION_VERSION)
  private String suiteDefinitionVersion;

  public static final String SERIALIZED_NAME_LATEST_VERSION = "latestVersion";
  @SerializedName(SERIALIZED_NAME_LATEST_VERSION)
  private String latestVersion;

  public static final String SERIALIZED_NAME_SUITE_DEFINITION_CONFIGURATION = "suiteDefinitionConfiguration";
  @SerializedName(SERIALIZED_NAME_SUITE_DEFINITION_CONFIGURATION)
  private GetSuiteDefinitionResponseSuiteDefinitionConfiguration suiteDefinitionConfiguration;

  public static final String SERIALIZED_NAME_CREATED_AT = "createdAt";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_LAST_MODIFIED_AT = "lastModifiedAt";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED_AT)
  private OffsetDateTime lastModifiedAt;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private Map tags;

  public GetSuiteDefinitionResponse() {
  }

  public GetSuiteDefinitionResponse suiteDefinitionId(String suiteDefinitionId) {
    this.suiteDefinitionId = suiteDefinitionId;
    return this;
  }

  /**
   * Get suiteDefinitionId
   * @return suiteDefinitionId
   */
  @javax.annotation.Nullable
  public String getSuiteDefinitionId() {
    return suiteDefinitionId;
  }

  public void setSuiteDefinitionId(String suiteDefinitionId) {
    this.suiteDefinitionId = suiteDefinitionId;
  }


  public GetSuiteDefinitionResponse suiteDefinitionArn(String suiteDefinitionArn) {
    this.suiteDefinitionArn = suiteDefinitionArn;
    return this;
  }

  /**
   * Get suiteDefinitionArn
   * @return suiteDefinitionArn
   */
  @javax.annotation.Nullable
  public String getSuiteDefinitionArn() {
    return suiteDefinitionArn;
  }

  public void setSuiteDefinitionArn(String suiteDefinitionArn) {
    this.suiteDefinitionArn = suiteDefinitionArn;
  }


  public GetSuiteDefinitionResponse suiteDefinitionVersion(String suiteDefinitionVersion) {
    this.suiteDefinitionVersion = suiteDefinitionVersion;
    return this;
  }

  /**
   * Get suiteDefinitionVersion
   * @return suiteDefinitionVersion
   */
  @javax.annotation.Nullable
  public String getSuiteDefinitionVersion() {
    return suiteDefinitionVersion;
  }

  public void setSuiteDefinitionVersion(String suiteDefinitionVersion) {
    this.suiteDefinitionVersion = suiteDefinitionVersion;
  }


  public GetSuiteDefinitionResponse latestVersion(String latestVersion) {
    this.latestVersion = latestVersion;
    return this;
  }

  /**
   * Get latestVersion
   * @return latestVersion
   */
  @javax.annotation.Nullable
  public String getLatestVersion() {
    return latestVersion;
  }

  public void setLatestVersion(String latestVersion) {
    this.latestVersion = latestVersion;
  }


  public GetSuiteDefinitionResponse suiteDefinitionConfiguration(GetSuiteDefinitionResponseSuiteDefinitionConfiguration suiteDefinitionConfiguration) {
    this.suiteDefinitionConfiguration = suiteDefinitionConfiguration;
    return this;
  }

  /**
   * Get suiteDefinitionConfiguration
   * @return suiteDefinitionConfiguration
   */
  @javax.annotation.Nullable
  public GetSuiteDefinitionResponseSuiteDefinitionConfiguration getSuiteDefinitionConfiguration() {
    return suiteDefinitionConfiguration;
  }

  public void setSuiteDefinitionConfiguration(GetSuiteDefinitionResponseSuiteDefinitionConfiguration suiteDefinitionConfiguration) {
    this.suiteDefinitionConfiguration = suiteDefinitionConfiguration;
  }


  public GetSuiteDefinitionResponse createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public GetSuiteDefinitionResponse lastModifiedAt(OffsetDateTime lastModifiedAt) {
    this.lastModifiedAt = lastModifiedAt;
    return this;
  }

  /**
   * Get lastModifiedAt
   * @return lastModifiedAt
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModifiedAt() {
    return lastModifiedAt;
  }

  public void setLastModifiedAt(OffsetDateTime lastModifiedAt) {
    this.lastModifiedAt = lastModifiedAt;
  }


  public GetSuiteDefinitionResponse tags(Map tags) {
    this.tags = tags;
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public Map getTags() {
    return tags;
  }

  public void setTags(Map tags) {
    this.tags = tags;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetSuiteDefinitionResponse getSuiteDefinitionResponse = (GetSuiteDefinitionResponse) o;
    return Objects.equals(this.suiteDefinitionId, getSuiteDefinitionResponse.suiteDefinitionId) &&
        Objects.equals(this.suiteDefinitionArn, getSuiteDefinitionResponse.suiteDefinitionArn) &&
        Objects.equals(this.suiteDefinitionVersion, getSuiteDefinitionResponse.suiteDefinitionVersion) &&
        Objects.equals(this.latestVersion, getSuiteDefinitionResponse.latestVersion) &&
        Objects.equals(this.suiteDefinitionConfiguration, getSuiteDefinitionResponse.suiteDefinitionConfiguration) &&
        Objects.equals(this.createdAt, getSuiteDefinitionResponse.createdAt) &&
        Objects.equals(this.lastModifiedAt, getSuiteDefinitionResponse.lastModifiedAt) &&
        Objects.equals(this.tags, getSuiteDefinitionResponse.tags);
  }

  @Override
  public int hashCode() {
    return Objects.hash(suiteDefinitionId, suiteDefinitionArn, suiteDefinitionVersion, latestVersion, suiteDefinitionConfiguration, createdAt, lastModifiedAt, tags);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetSuiteDefinitionResponse {\n");
    sb.append("    suiteDefinitionId: ").append(toIndentedString(suiteDefinitionId)).append("\n");
    sb.append("    suiteDefinitionArn: ").append(toIndentedString(suiteDefinitionArn)).append("\n");
    sb.append("    suiteDefinitionVersion: ").append(toIndentedString(suiteDefinitionVersion)).append("\n");
    sb.append("    latestVersion: ").append(toIndentedString(latestVersion)).append("\n");
    sb.append("    suiteDefinitionConfiguration: ").append(toIndentedString(suiteDefinitionConfiguration)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    lastModifiedAt: ").append(toIndentedString(lastModifiedAt)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("suiteDefinitionId");
    openapiFields.add("suiteDefinitionArn");
    openapiFields.add("suiteDefinitionVersion");
    openapiFields.add("latestVersion");
    openapiFields.add("suiteDefinitionConfiguration");
    openapiFields.add("createdAt");
    openapiFields.add("lastModifiedAt");
    openapiFields.add("tags");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetSuiteDefinitionResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetSuiteDefinitionResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetSuiteDefinitionResponse is not found in the empty JSON string", GetSuiteDefinitionResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetSuiteDefinitionResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetSuiteDefinitionResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `suiteDefinitionId`
      if (jsonObj.get("suiteDefinitionId") != null && !jsonObj.get("suiteDefinitionId").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("suiteDefinitionId"));
      }
      // validate the optional field `suiteDefinitionArn`
      if (jsonObj.get("suiteDefinitionArn") != null && !jsonObj.get("suiteDefinitionArn").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("suiteDefinitionArn"));
      }
      // validate the optional field `suiteDefinitionVersion`
      if (jsonObj.get("suiteDefinitionVersion") != null && !jsonObj.get("suiteDefinitionVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("suiteDefinitionVersion"));
      }
      // validate the optional field `latestVersion`
      if (jsonObj.get("latestVersion") != null && !jsonObj.get("latestVersion").isJsonNull()) {
        String.validateJsonElement(jsonObj.get("latestVersion"));
      }
      // validate the optional field `suiteDefinitionConfiguration`
      if (jsonObj.get("suiteDefinitionConfiguration") != null && !jsonObj.get("suiteDefinitionConfiguration").isJsonNull()) {
        GetSuiteDefinitionResponseSuiteDefinitionConfiguration.validateJsonElement(jsonObj.get("suiteDefinitionConfiguration"));
      }
      // validate the optional field `createdAt`
      if (jsonObj.get("createdAt") != null && !jsonObj.get("createdAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("createdAt"));
      }
      // validate the optional field `lastModifiedAt`
      if (jsonObj.get("lastModifiedAt") != null && !jsonObj.get("lastModifiedAt").isJsonNull()) {
        OffsetDateTime.validateJsonElement(jsonObj.get("lastModifiedAt"));
      }
      // validate the optional field `tags`
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull()) {
        Map.validateJsonElement(jsonObj.get("tags"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetSuiteDefinitionResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetSuiteDefinitionResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetSuiteDefinitionResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetSuiteDefinitionResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<GetSuiteDefinitionResponse>() {
           @Override
           public void write(JsonWriter out, GetSuiteDefinitionResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetSuiteDefinitionResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetSuiteDefinitionResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetSuiteDefinitionResponse
   * @throws IOException if the JSON string is invalid with respect to GetSuiteDefinitionResponse
   */
  public static GetSuiteDefinitionResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetSuiteDefinitionResponse.class);
  }

  /**
   * Convert an instance of GetSuiteDefinitionResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

