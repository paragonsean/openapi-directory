/**
 * AWS IoT Core Device Advisor
 * Amazon Web Services IoT Core Device Advisor is a cloud-based, fully managed test capability for validating IoT devices during device software development. Device Advisor provides pre-built tests that you can use to validate IoT devices for reliable and secure connectivity with Amazon Web Services IoT Core before deploying devices to production. By using Device Advisor, you can confirm that your devices can connect to Amazon Web Services IoT Core, follow security best practices and, if applicable, receive software updates from IoT Device Management. You can also download signed qualification reports to submit to the Amazon Web Services Partner Network to get your device qualified for the Amazon Web Services Partner Device Catalog without the need to send your device in and wait for it to be tested.
 *
 * The version of the OpenAPI document: 2020-09-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISuiteRunInformation.h
 *
 * &lt;p&gt;Information about the suite run.&lt;/p&gt; &lt;p&gt;Requires permission to access the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\&quot;&gt;SuiteRunInformation&lt;/a&gt; action.&lt;/p&gt;
 */

#ifndef OAISuiteRunInformation_H
#define OAISuiteRunInformation_H

#include <QJsonObject>

#include "OAISuiteRunStatus.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISuiteRunInformation : public OAIObject {
public:
    OAISuiteRunInformation();
    OAISuiteRunInformation(QString json);
    ~OAISuiteRunInformation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getSuiteDefinitionId() const;
    void setSuiteDefinitionId(const QString &suite_definition_id);
    bool is_suite_definition_id_Set() const;
    bool is_suite_definition_id_Valid() const;

    QString getSuiteDefinitionVersion() const;
    void setSuiteDefinitionVersion(const QString &suite_definition_version);
    bool is_suite_definition_version_Set() const;
    bool is_suite_definition_version_Valid() const;

    QString getSuiteDefinitionName() const;
    void setSuiteDefinitionName(const QString &suite_definition_name);
    bool is_suite_definition_name_Set() const;
    bool is_suite_definition_name_Valid() const;

    QString getSuiteRunId() const;
    void setSuiteRunId(const QString &suite_run_id);
    bool is_suite_run_id_Set() const;
    bool is_suite_run_id_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QDateTime getStartedAt() const;
    void setStartedAt(const QDateTime &started_at);
    bool is_started_at_Set() const;
    bool is_started_at_Valid() const;

    QDateTime getEndAt() const;
    void setEndAt(const QDateTime &end_at);
    bool is_end_at_Set() const;
    bool is_end_at_Valid() const;

    OAISuiteRunStatus getStatus() const;
    void setStatus(const OAISuiteRunStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getPassed() const;
    void setPassed(const qint32 &passed);
    bool is_passed_Set() const;
    bool is_passed_Valid() const;

    qint32 getFailed() const;
    void setFailed(const qint32 &failed);
    bool is_failed_Set() const;
    bool is_failed_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_suite_definition_id;
    bool m_suite_definition_id_isSet;
    bool m_suite_definition_id_isValid;

    QString m_suite_definition_version;
    bool m_suite_definition_version_isSet;
    bool m_suite_definition_version_isValid;

    QString m_suite_definition_name;
    bool m_suite_definition_name_isSet;
    bool m_suite_definition_name_isValid;

    QString m_suite_run_id;
    bool m_suite_run_id_isSet;
    bool m_suite_run_id_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QDateTime m_started_at;
    bool m_started_at_isSet;
    bool m_started_at_isValid;

    QDateTime m_end_at;
    bool m_end_at_isSet;
    bool m_end_at_isValid;

    OAISuiteRunStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_passed;
    bool m_passed_isSet;
    bool m_passed_isValid;

    qint32 m_failed;
    bool m_failed_isSet;
    bool m_failed_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISuiteRunInformation)

#endif // OAISuiteRunInformation_H
