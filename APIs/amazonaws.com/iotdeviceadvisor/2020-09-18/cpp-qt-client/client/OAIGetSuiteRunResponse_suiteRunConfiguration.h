/**
 * AWS IoT Core Device Advisor
 * Amazon Web Services IoT Core Device Advisor is a cloud-based, fully managed test capability for validating IoT devices during device software development. Device Advisor provides pre-built tests that you can use to validate IoT devices for reliable and secure connectivity with Amazon Web Services IoT Core before deploying devices to production. By using Device Advisor, you can confirm that your devices can connect to Amazon Web Services IoT Core, follow security best practices and, if applicable, receive software updates from IoT Device Management. You can also download signed qualification reports to submit to the Amazon Web Services Partner Network to get your device qualified for the Amazon Web Services Partner Device Catalog without the need to send your device in and wait for it to be tested.
 *
 * The version of the OpenAPI document: 2020-09-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetSuiteRunResponse_suiteRunConfiguration.h
 *
 * 
 */

#ifndef OAIGetSuiteRunResponse_suiteRunConfiguration_H
#define OAIGetSuiteRunResponse_suiteRunConfiguration_H

#include <QJsonObject>

#include "OAIStartSuiteRun_request_suiteRunConfiguration_primaryDevice.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIStartSuiteRun_request_suiteRunConfiguration_primaryDevice;

class OAIGetSuiteRunResponse_suiteRunConfiguration : public OAIObject {
public:
    OAIGetSuiteRunResponse_suiteRunConfiguration();
    OAIGetSuiteRunResponse_suiteRunConfiguration(QString json);
    ~OAIGetSuiteRunResponse_suiteRunConfiguration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIStartSuiteRun_request_suiteRunConfiguration_primaryDevice getPrimaryDevice() const;
    void setPrimaryDevice(const OAIStartSuiteRun_request_suiteRunConfiguration_primaryDevice &primary_device);
    bool is_primary_device_Set() const;
    bool is_primary_device_Valid() const;

    QList getSelectedTestList() const;
    void setSelectedTestList(const QList &selected_test_list);
    bool is_selected_test_list_Set() const;
    bool is_selected_test_list_Valid() const;

    bool getParallelRun() const;
    void setParallelRun(const bool &parallel_run);
    bool is_parallel_run_Set() const;
    bool is_parallel_run_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIStartSuiteRun_request_suiteRunConfiguration_primaryDevice m_primary_device;
    bool m_primary_device_isSet;
    bool m_primary_device_isValid;

    QList m_selected_test_list;
    bool m_selected_test_list_isSet;
    bool m_selected_test_list_isValid;

    bool m_parallel_run;
    bool m_parallel_run_isSet;
    bool m_parallel_run_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetSuiteRunResponse_suiteRunConfiguration)

#endif // OAIGetSuiteRunResponse_suiteRunConfiguration_H
