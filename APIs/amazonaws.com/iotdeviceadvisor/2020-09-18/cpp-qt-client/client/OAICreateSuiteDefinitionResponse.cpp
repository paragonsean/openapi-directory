/**
 * AWS IoT Core Device Advisor
 * Amazon Web Services IoT Core Device Advisor is a cloud-based, fully managed test capability for validating IoT devices during device software development. Device Advisor provides pre-built tests that you can use to validate IoT devices for reliable and secure connectivity with Amazon Web Services IoT Core before deploying devices to production. By using Device Advisor, you can confirm that your devices can connect to Amazon Web Services IoT Core, follow security best practices and, if applicable, receive software updates from IoT Device Management. You can also download signed qualification reports to submit to the Amazon Web Services Partner Network to get your device qualified for the Amazon Web Services Partner Device Catalog without the need to send your device in and wait for it to be tested.
 *
 * The version of the OpenAPI document: 2020-09-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateSuiteDefinitionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateSuiteDefinitionResponse::OAICreateSuiteDefinitionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateSuiteDefinitionResponse::OAICreateSuiteDefinitionResponse() {
    this->initializeModel();
}

OAICreateSuiteDefinitionResponse::~OAICreateSuiteDefinitionResponse() {}

void OAICreateSuiteDefinitionResponse::initializeModel() {

    m_suite_definition_id_isSet = false;
    m_suite_definition_id_isValid = false;

    m_suite_definition_arn_isSet = false;
    m_suite_definition_arn_isValid = false;

    m_suite_definition_name_isSet = false;
    m_suite_definition_name_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;
}

void OAICreateSuiteDefinitionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateSuiteDefinitionResponse::fromJsonObject(QJsonObject json) {

    m_suite_definition_id_isValid = ::OpenAPI::fromJsonValue(m_suite_definition_id, json[QString("suiteDefinitionId")]);
    m_suite_definition_id_isSet = !json[QString("suiteDefinitionId")].isNull() && m_suite_definition_id_isValid;

    m_suite_definition_arn_isValid = ::OpenAPI::fromJsonValue(m_suite_definition_arn, json[QString("suiteDefinitionArn")]);
    m_suite_definition_arn_isSet = !json[QString("suiteDefinitionArn")].isNull() && m_suite_definition_arn_isValid;

    m_suite_definition_name_isValid = ::OpenAPI::fromJsonValue(m_suite_definition_name, json[QString("suiteDefinitionName")]);
    m_suite_definition_name_isSet = !json[QString("suiteDefinitionName")].isNull() && m_suite_definition_name_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;
}

QString OAICreateSuiteDefinitionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateSuiteDefinitionResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_suite_definition_id_isSet) {
        obj.insert(QString("suiteDefinitionId"), ::OpenAPI::toJsonValue(m_suite_definition_id));
    }
    if (m_suite_definition_arn_isSet) {
        obj.insert(QString("suiteDefinitionArn"), ::OpenAPI::toJsonValue(m_suite_definition_arn));
    }
    if (m_suite_definition_name_isSet) {
        obj.insert(QString("suiteDefinitionName"), ::OpenAPI::toJsonValue(m_suite_definition_name));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    return obj;
}

QString OAICreateSuiteDefinitionResponse::getSuiteDefinitionId() const {
    return m_suite_definition_id;
}
void OAICreateSuiteDefinitionResponse::setSuiteDefinitionId(const QString &suite_definition_id) {
    m_suite_definition_id = suite_definition_id;
    m_suite_definition_id_isSet = true;
}

bool OAICreateSuiteDefinitionResponse::is_suite_definition_id_Set() const{
    return m_suite_definition_id_isSet;
}

bool OAICreateSuiteDefinitionResponse::is_suite_definition_id_Valid() const{
    return m_suite_definition_id_isValid;
}

QString OAICreateSuiteDefinitionResponse::getSuiteDefinitionArn() const {
    return m_suite_definition_arn;
}
void OAICreateSuiteDefinitionResponse::setSuiteDefinitionArn(const QString &suite_definition_arn) {
    m_suite_definition_arn = suite_definition_arn;
    m_suite_definition_arn_isSet = true;
}

bool OAICreateSuiteDefinitionResponse::is_suite_definition_arn_Set() const{
    return m_suite_definition_arn_isSet;
}

bool OAICreateSuiteDefinitionResponse::is_suite_definition_arn_Valid() const{
    return m_suite_definition_arn_isValid;
}

QString OAICreateSuiteDefinitionResponse::getSuiteDefinitionName() const {
    return m_suite_definition_name;
}
void OAICreateSuiteDefinitionResponse::setSuiteDefinitionName(const QString &suite_definition_name) {
    m_suite_definition_name = suite_definition_name;
    m_suite_definition_name_isSet = true;
}

bool OAICreateSuiteDefinitionResponse::is_suite_definition_name_Set() const{
    return m_suite_definition_name_isSet;
}

bool OAICreateSuiteDefinitionResponse::is_suite_definition_name_Valid() const{
    return m_suite_definition_name_isValid;
}

QDateTime OAICreateSuiteDefinitionResponse::getCreatedAt() const {
    return m_created_at;
}
void OAICreateSuiteDefinitionResponse::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAICreateSuiteDefinitionResponse::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAICreateSuiteDefinitionResponse::is_created_at_Valid() const{
    return m_created_at_isValid;
}

bool OAICreateSuiteDefinitionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_suite_definition_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suite_definition_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suite_definition_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateSuiteDefinitionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
