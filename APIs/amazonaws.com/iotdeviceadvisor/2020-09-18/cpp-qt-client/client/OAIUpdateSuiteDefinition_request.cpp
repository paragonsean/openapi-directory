/**
 * AWS IoT Core Device Advisor
 * Amazon Web Services IoT Core Device Advisor is a cloud-based, fully managed test capability for validating IoT devices during device software development. Device Advisor provides pre-built tests that you can use to validate IoT devices for reliable and secure connectivity with Amazon Web Services IoT Core before deploying devices to production. By using Device Advisor, you can confirm that your devices can connect to Amazon Web Services IoT Core, follow security best practices and, if applicable, receive software updates from IoT Device Management. You can also download signed qualification reports to submit to the Amazon Web Services Partner Network to get your device qualified for the Amazon Web Services Partner Device Catalog without the need to send your device in and wait for it to be tested.
 *
 * The version of the OpenAPI document: 2020-09-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSuiteDefinition_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSuiteDefinition_request::OAIUpdateSuiteDefinition_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSuiteDefinition_request::OAIUpdateSuiteDefinition_request() {
    this->initializeModel();
}

OAIUpdateSuiteDefinition_request::~OAIUpdateSuiteDefinition_request() {}

void OAIUpdateSuiteDefinition_request::initializeModel() {

    m_suite_definition_configuration_isSet = false;
    m_suite_definition_configuration_isValid = false;
}

void OAIUpdateSuiteDefinition_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSuiteDefinition_request::fromJsonObject(QJsonObject json) {

    m_suite_definition_configuration_isValid = ::OpenAPI::fromJsonValue(m_suite_definition_configuration, json[QString("suiteDefinitionConfiguration")]);
    m_suite_definition_configuration_isSet = !json[QString("suiteDefinitionConfiguration")].isNull() && m_suite_definition_configuration_isValid;
}

QString OAIUpdateSuiteDefinition_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSuiteDefinition_request::asJsonObject() const {
    QJsonObject obj;
    if (m_suite_definition_configuration.isSet()) {
        obj.insert(QString("suiteDefinitionConfiguration"), ::OpenAPI::toJsonValue(m_suite_definition_configuration));
    }
    return obj;
}

OAICreateSuiteDefinition_request_suiteDefinitionConfiguration OAIUpdateSuiteDefinition_request::getSuiteDefinitionConfiguration() const {
    return m_suite_definition_configuration;
}
void OAIUpdateSuiteDefinition_request::setSuiteDefinitionConfiguration(const OAICreateSuiteDefinition_request_suiteDefinitionConfiguration &suite_definition_configuration) {
    m_suite_definition_configuration = suite_definition_configuration;
    m_suite_definition_configuration_isSet = true;
}

bool OAIUpdateSuiteDefinition_request::is_suite_definition_configuration_Set() const{
    return m_suite_definition_configuration_isSet;
}

bool OAIUpdateSuiteDefinition_request::is_suite_definition_configuration_Valid() const{
    return m_suite_definition_configuration_isValid;
}

bool OAIUpdateSuiteDefinition_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_suite_definition_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSuiteDefinition_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_suite_definition_configuration_isValid && true;
}

} // namespace OpenAPI
