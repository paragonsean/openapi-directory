/**
 * AWS IoT Core Device Advisor
 * Amazon Web Services IoT Core Device Advisor is a cloud-based, fully managed test capability for validating IoT devices during device software development. Device Advisor provides pre-built tests that you can use to validate IoT devices for reliable and secure connectivity with Amazon Web Services IoT Core before deploying devices to production. By using Device Advisor, you can confirm that your devices can connect to Amazon Web Services IoT Core, follow security best practices and, if applicable, receive software updates from IoT Device Management. You can also download signed qualification reports to submit to the Amazon Web Services Partner Network to get your device qualified for the Amazon Web Services Partner Device Catalog without the need to send your device in and wait for it to be tested.
 *
 * The version of the OpenAPI document: 2020-09-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetSuiteDefinitionResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetSuiteDefinitionResponse::OAIGetSuiteDefinitionResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetSuiteDefinitionResponse::OAIGetSuiteDefinitionResponse() {
    this->initializeModel();
}

OAIGetSuiteDefinitionResponse::~OAIGetSuiteDefinitionResponse() {}

void OAIGetSuiteDefinitionResponse::initializeModel() {

    m_suite_definition_id_isSet = false;
    m_suite_definition_id_isValid = false;

    m_suite_definition_arn_isSet = false;
    m_suite_definition_arn_isValid = false;

    m_suite_definition_version_isSet = false;
    m_suite_definition_version_isValid = false;

    m_latest_version_isSet = false;
    m_latest_version_isValid = false;

    m_suite_definition_configuration_isSet = false;
    m_suite_definition_configuration_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_last_modified_at_isSet = false;
    m_last_modified_at_isValid = false;

    m_tags_isSet = false;
    m_tags_isValid = false;
}

void OAIGetSuiteDefinitionResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetSuiteDefinitionResponse::fromJsonObject(QJsonObject json) {

    m_suite_definition_id_isValid = ::OpenAPI::fromJsonValue(m_suite_definition_id, json[QString("suiteDefinitionId")]);
    m_suite_definition_id_isSet = !json[QString("suiteDefinitionId")].isNull() && m_suite_definition_id_isValid;

    m_suite_definition_arn_isValid = ::OpenAPI::fromJsonValue(m_suite_definition_arn, json[QString("suiteDefinitionArn")]);
    m_suite_definition_arn_isSet = !json[QString("suiteDefinitionArn")].isNull() && m_suite_definition_arn_isValid;

    m_suite_definition_version_isValid = ::OpenAPI::fromJsonValue(m_suite_definition_version, json[QString("suiteDefinitionVersion")]);
    m_suite_definition_version_isSet = !json[QString("suiteDefinitionVersion")].isNull() && m_suite_definition_version_isValid;

    m_latest_version_isValid = ::OpenAPI::fromJsonValue(m_latest_version, json[QString("latestVersion")]);
    m_latest_version_isSet = !json[QString("latestVersion")].isNull() && m_latest_version_isValid;

    m_suite_definition_configuration_isValid = ::OpenAPI::fromJsonValue(m_suite_definition_configuration, json[QString("suiteDefinitionConfiguration")]);
    m_suite_definition_configuration_isSet = !json[QString("suiteDefinitionConfiguration")].isNull() && m_suite_definition_configuration_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_last_modified_at_isValid = ::OpenAPI::fromJsonValue(m_last_modified_at, json[QString("lastModifiedAt")]);
    m_last_modified_at_isSet = !json[QString("lastModifiedAt")].isNull() && m_last_modified_at_isValid;

    m_tags_isValid = ::OpenAPI::fromJsonValue(m_tags, json[QString("tags")]);
    m_tags_isSet = !json[QString("tags")].isNull() && m_tags_isValid;
}

QString OAIGetSuiteDefinitionResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetSuiteDefinitionResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_suite_definition_id_isSet) {
        obj.insert(QString("suiteDefinitionId"), ::OpenAPI::toJsonValue(m_suite_definition_id));
    }
    if (m_suite_definition_arn_isSet) {
        obj.insert(QString("suiteDefinitionArn"), ::OpenAPI::toJsonValue(m_suite_definition_arn));
    }
    if (m_suite_definition_version_isSet) {
        obj.insert(QString("suiteDefinitionVersion"), ::OpenAPI::toJsonValue(m_suite_definition_version));
    }
    if (m_latest_version_isSet) {
        obj.insert(QString("latestVersion"), ::OpenAPI::toJsonValue(m_latest_version));
    }
    if (m_suite_definition_configuration.isSet()) {
        obj.insert(QString("suiteDefinitionConfiguration"), ::OpenAPI::toJsonValue(m_suite_definition_configuration));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_last_modified_at_isSet) {
        obj.insert(QString("lastModifiedAt"), ::OpenAPI::toJsonValue(m_last_modified_at));
    }
    if (m_tags.isSet()) {
        obj.insert(QString("tags"), ::OpenAPI::toJsonValue(m_tags));
    }
    return obj;
}

QString OAIGetSuiteDefinitionResponse::getSuiteDefinitionId() const {
    return m_suite_definition_id;
}
void OAIGetSuiteDefinitionResponse::setSuiteDefinitionId(const QString &suite_definition_id) {
    m_suite_definition_id = suite_definition_id;
    m_suite_definition_id_isSet = true;
}

bool OAIGetSuiteDefinitionResponse::is_suite_definition_id_Set() const{
    return m_suite_definition_id_isSet;
}

bool OAIGetSuiteDefinitionResponse::is_suite_definition_id_Valid() const{
    return m_suite_definition_id_isValid;
}

QString OAIGetSuiteDefinitionResponse::getSuiteDefinitionArn() const {
    return m_suite_definition_arn;
}
void OAIGetSuiteDefinitionResponse::setSuiteDefinitionArn(const QString &suite_definition_arn) {
    m_suite_definition_arn = suite_definition_arn;
    m_suite_definition_arn_isSet = true;
}

bool OAIGetSuiteDefinitionResponse::is_suite_definition_arn_Set() const{
    return m_suite_definition_arn_isSet;
}

bool OAIGetSuiteDefinitionResponse::is_suite_definition_arn_Valid() const{
    return m_suite_definition_arn_isValid;
}

QString OAIGetSuiteDefinitionResponse::getSuiteDefinitionVersion() const {
    return m_suite_definition_version;
}
void OAIGetSuiteDefinitionResponse::setSuiteDefinitionVersion(const QString &suite_definition_version) {
    m_suite_definition_version = suite_definition_version;
    m_suite_definition_version_isSet = true;
}

bool OAIGetSuiteDefinitionResponse::is_suite_definition_version_Set() const{
    return m_suite_definition_version_isSet;
}

bool OAIGetSuiteDefinitionResponse::is_suite_definition_version_Valid() const{
    return m_suite_definition_version_isValid;
}

QString OAIGetSuiteDefinitionResponse::getLatestVersion() const {
    return m_latest_version;
}
void OAIGetSuiteDefinitionResponse::setLatestVersion(const QString &latest_version) {
    m_latest_version = latest_version;
    m_latest_version_isSet = true;
}

bool OAIGetSuiteDefinitionResponse::is_latest_version_Set() const{
    return m_latest_version_isSet;
}

bool OAIGetSuiteDefinitionResponse::is_latest_version_Valid() const{
    return m_latest_version_isValid;
}

OAIGetSuiteDefinitionResponse_suiteDefinitionConfiguration OAIGetSuiteDefinitionResponse::getSuiteDefinitionConfiguration() const {
    return m_suite_definition_configuration;
}
void OAIGetSuiteDefinitionResponse::setSuiteDefinitionConfiguration(const OAIGetSuiteDefinitionResponse_suiteDefinitionConfiguration &suite_definition_configuration) {
    m_suite_definition_configuration = suite_definition_configuration;
    m_suite_definition_configuration_isSet = true;
}

bool OAIGetSuiteDefinitionResponse::is_suite_definition_configuration_Set() const{
    return m_suite_definition_configuration_isSet;
}

bool OAIGetSuiteDefinitionResponse::is_suite_definition_configuration_Valid() const{
    return m_suite_definition_configuration_isValid;
}

QDateTime OAIGetSuiteDefinitionResponse::getCreatedAt() const {
    return m_created_at;
}
void OAIGetSuiteDefinitionResponse::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIGetSuiteDefinitionResponse::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIGetSuiteDefinitionResponse::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QDateTime OAIGetSuiteDefinitionResponse::getLastModifiedAt() const {
    return m_last_modified_at;
}
void OAIGetSuiteDefinitionResponse::setLastModifiedAt(const QDateTime &last_modified_at) {
    m_last_modified_at = last_modified_at;
    m_last_modified_at_isSet = true;
}

bool OAIGetSuiteDefinitionResponse::is_last_modified_at_Set() const{
    return m_last_modified_at_isSet;
}

bool OAIGetSuiteDefinitionResponse::is_last_modified_at_Valid() const{
    return m_last_modified_at_isValid;
}

QMap OAIGetSuiteDefinitionResponse::getTags() const {
    return m_tags;
}
void OAIGetSuiteDefinitionResponse::setTags(const QMap &tags) {
    m_tags = tags;
    m_tags_isSet = true;
}

bool OAIGetSuiteDefinitionResponse::is_tags_Set() const{
    return m_tags_isSet;
}

bool OAIGetSuiteDefinitionResponse::is_tags_Valid() const{
    return m_tags_isValid;
}

bool OAIGetSuiteDefinitionResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_suite_definition_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suite_definition_arn_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suite_definition_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_latest_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suite_definition_configuration.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tags.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetSuiteDefinitionResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
