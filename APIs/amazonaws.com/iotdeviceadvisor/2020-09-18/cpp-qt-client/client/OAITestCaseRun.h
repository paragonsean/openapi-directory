/**
 * AWS IoT Core Device Advisor
 * Amazon Web Services IoT Core Device Advisor is a cloud-based, fully managed test capability for validating IoT devices during device software development. Device Advisor provides pre-built tests that you can use to validate IoT devices for reliable and secure connectivity with Amazon Web Services IoT Core before deploying devices to production. By using Device Advisor, you can confirm that your devices can connect to Amazon Web Services IoT Core, follow security best practices and, if applicable, receive software updates from IoT Device Management. You can also download signed qualification reports to submit to the Amazon Web Services Partner Network to get your device qualified for the Amazon Web Services Partner Device Catalog without the need to send your device in and wait for it to be tested.
 *
 * The version of the OpenAPI document: 2020-09-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITestCaseRun.h
 *
 * Provides the test case run.
 */

#ifndef OAITestCaseRun_H
#define OAITestCaseRun_H

#include <QJsonObject>

#include "OAIStatus.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITestCaseRun : public OAIObject {
public:
    OAITestCaseRun();
    OAITestCaseRun(QString json);
    ~OAITestCaseRun() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getTestCaseRunId() const;
    void setTestCaseRunId(const QString &test_case_run_id);
    bool is_test_case_run_id_Set() const;
    bool is_test_case_run_id_Valid() const;

    QString getTestCaseDefinitionId() const;
    void setTestCaseDefinitionId(const QString &test_case_definition_id);
    bool is_test_case_definition_id_Set() const;
    bool is_test_case_definition_id_Valid() const;

    QString getTestCaseDefinitionName() const;
    void setTestCaseDefinitionName(const QString &test_case_definition_name);
    bool is_test_case_definition_name_Set() const;
    bool is_test_case_definition_name_Valid() const;

    OAIStatus getStatus() const;
    void setStatus(const OAIStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    QString getLogUrl() const;
    void setLogUrl(const QString &log_url);
    bool is_log_url_Set() const;
    bool is_log_url_Valid() const;

    QString getWarnings() const;
    void setWarnings(const QString &warnings);
    bool is_warnings_Set() const;
    bool is_warnings_Valid() const;

    QString getFailure() const;
    void setFailure(const QString &failure);
    bool is_failure_Set() const;
    bool is_failure_Valid() const;

    QList getTestScenarios() const;
    void setTestScenarios(const QList &test_scenarios);
    bool is_test_scenarios_Set() const;
    bool is_test_scenarios_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_test_case_run_id;
    bool m_test_case_run_id_isSet;
    bool m_test_case_run_id_isValid;

    QString m_test_case_definition_id;
    bool m_test_case_definition_id_isSet;
    bool m_test_case_definition_id_isValid;

    QString m_test_case_definition_name;
    bool m_test_case_definition_name_isSet;
    bool m_test_case_definition_name_isValid;

    OAIStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    QString m_log_url;
    bool m_log_url_isSet;
    bool m_log_url_isValid;

    QString m_warnings;
    bool m_warnings_isSet;
    bool m_warnings_isValid;

    QString m_failure;
    bool m_failure_isSet;
    bool m_failure_isValid;

    QList m_test_scenarios;
    bool m_test_scenarios_isSet;
    bool m_test_scenarios_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITestCaseRun)

#endif // OAITestCaseRun_H
