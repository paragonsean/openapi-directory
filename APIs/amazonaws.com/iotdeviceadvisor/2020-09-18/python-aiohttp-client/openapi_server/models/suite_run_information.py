# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.suite_run_status import SuiteRunStatus
from openapi_server import util


class SuiteRunInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, suite_definition_id: str=None, suite_definition_version: str=None, suite_definition_name: str=None, suite_run_id: str=None, created_at: datetime=None, started_at: datetime=None, end_at: datetime=None, status: SuiteRunStatus=None, passed: int=None, failed: int=None):
        """SuiteRunInformation - a model defined in OpenAPI

        :param suite_definition_id: The suite_definition_id of this SuiteRunInformation.
        :param suite_definition_version: The suite_definition_version of this SuiteRunInformation.
        :param suite_definition_name: The suite_definition_name of this SuiteRunInformation.
        :param suite_run_id: The suite_run_id of this SuiteRunInformation.
        :param created_at: The created_at of this SuiteRunInformation.
        :param started_at: The started_at of this SuiteRunInformation.
        :param end_at: The end_at of this SuiteRunInformation.
        :param status: The status of this SuiteRunInformation.
        :param passed: The passed of this SuiteRunInformation.
        :param failed: The failed of this SuiteRunInformation.
        """
        self.openapi_types = {
            'suite_definition_id': str,
            'suite_definition_version': str,
            'suite_definition_name': str,
            'suite_run_id': str,
            'created_at': datetime,
            'started_at': datetime,
            'end_at': datetime,
            'status': SuiteRunStatus,
            'passed': int,
            'failed': int
        }

        self.attribute_map = {
            'suite_definition_id': 'suiteDefinitionId',
            'suite_definition_version': 'suiteDefinitionVersion',
            'suite_definition_name': 'suiteDefinitionName',
            'suite_run_id': 'suiteRunId',
            'created_at': 'createdAt',
            'started_at': 'startedAt',
            'end_at': 'endAt',
            'status': 'status',
            'passed': 'passed',
            'failed': 'failed'
        }

        self._suite_definition_id = suite_definition_id
        self._suite_definition_version = suite_definition_version
        self._suite_definition_name = suite_definition_name
        self._suite_run_id = suite_run_id
        self._created_at = created_at
        self._started_at = started_at
        self._end_at = end_at
        self._status = status
        self._passed = passed
        self._failed = failed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SuiteRunInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SuiteRunInformation of this SuiteRunInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def suite_definition_id(self):
        """Gets the suite_definition_id of this SuiteRunInformation.


        :return: The suite_definition_id of this SuiteRunInformation.
        :rtype: str
        """
        return self._suite_definition_id

    @suite_definition_id.setter
    def suite_definition_id(self, suite_definition_id):
        """Sets the suite_definition_id of this SuiteRunInformation.


        :param suite_definition_id: The suite_definition_id of this SuiteRunInformation.
        :type suite_definition_id: str
        """

        self._suite_definition_id = suite_definition_id

    @property
    def suite_definition_version(self):
        """Gets the suite_definition_version of this SuiteRunInformation.


        :return: The suite_definition_version of this SuiteRunInformation.
        :rtype: str
        """
        return self._suite_definition_version

    @suite_definition_version.setter
    def suite_definition_version(self, suite_definition_version):
        """Sets the suite_definition_version of this SuiteRunInformation.


        :param suite_definition_version: The suite_definition_version of this SuiteRunInformation.
        :type suite_definition_version: str
        """

        self._suite_definition_version = suite_definition_version

    @property
    def suite_definition_name(self):
        """Gets the suite_definition_name of this SuiteRunInformation.


        :return: The suite_definition_name of this SuiteRunInformation.
        :rtype: str
        """
        return self._suite_definition_name

    @suite_definition_name.setter
    def suite_definition_name(self, suite_definition_name):
        """Sets the suite_definition_name of this SuiteRunInformation.


        :param suite_definition_name: The suite_definition_name of this SuiteRunInformation.
        :type suite_definition_name: str
        """

        self._suite_definition_name = suite_definition_name

    @property
    def suite_run_id(self):
        """Gets the suite_run_id of this SuiteRunInformation.


        :return: The suite_run_id of this SuiteRunInformation.
        :rtype: str
        """
        return self._suite_run_id

    @suite_run_id.setter
    def suite_run_id(self, suite_run_id):
        """Sets the suite_run_id of this SuiteRunInformation.


        :param suite_run_id: The suite_run_id of this SuiteRunInformation.
        :type suite_run_id: str
        """

        self._suite_run_id = suite_run_id

    @property
    def created_at(self):
        """Gets the created_at of this SuiteRunInformation.


        :return: The created_at of this SuiteRunInformation.
        :rtype: datetime
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this SuiteRunInformation.


        :param created_at: The created_at of this SuiteRunInformation.
        :type created_at: datetime
        """

        self._created_at = created_at

    @property
    def started_at(self):
        """Gets the started_at of this SuiteRunInformation.


        :return: The started_at of this SuiteRunInformation.
        :rtype: datetime
        """
        return self._started_at

    @started_at.setter
    def started_at(self, started_at):
        """Sets the started_at of this SuiteRunInformation.


        :param started_at: The started_at of this SuiteRunInformation.
        :type started_at: datetime
        """

        self._started_at = started_at

    @property
    def end_at(self):
        """Gets the end_at of this SuiteRunInformation.


        :return: The end_at of this SuiteRunInformation.
        :rtype: datetime
        """
        return self._end_at

    @end_at.setter
    def end_at(self, end_at):
        """Sets the end_at of this SuiteRunInformation.


        :param end_at: The end_at of this SuiteRunInformation.
        :type end_at: datetime
        """

        self._end_at = end_at

    @property
    def status(self):
        """Gets the status of this SuiteRunInformation.


        :return: The status of this SuiteRunInformation.
        :rtype: SuiteRunStatus
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SuiteRunInformation.


        :param status: The status of this SuiteRunInformation.
        :type status: SuiteRunStatus
        """

        self._status = status

    @property
    def passed(self):
        """Gets the passed of this SuiteRunInformation.


        :return: The passed of this SuiteRunInformation.
        :rtype: int
        """
        return self._passed

    @passed.setter
    def passed(self, passed):
        """Sets the passed of this SuiteRunInformation.


        :param passed: The passed of this SuiteRunInformation.
        :type passed: int
        """

        self._passed = passed

    @property
    def failed(self):
        """Gets the failed of this SuiteRunInformation.


        :return: The failed of this SuiteRunInformation.
        :rtype: int
        """
        return self._failed

    @failed.setter
    def failed(self, failed):
        """Sets the failed of this SuiteRunInformation.


        :param failed: The failed of this SuiteRunInformation.
        :type failed: int
        """

        self._failed = failed
