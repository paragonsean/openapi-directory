# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.protocol import Protocol
from openapi_server import util


class GetSuiteDefinitionResponseSuiteDefinitionConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, suite_definition_name: str=None, devices: List=None, intended_for_qualification: bool=None, is_long_duration_test: bool=None, root_group: str=None, device_permission_role_arn: str=None, protocol: Protocol=None):
        """GetSuiteDefinitionResponseSuiteDefinitionConfiguration - a model defined in OpenAPI

        :param suite_definition_name: The suite_definition_name of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :param devices: The devices of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :param intended_for_qualification: The intended_for_qualification of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :param is_long_duration_test: The is_long_duration_test of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :param root_group: The root_group of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :param device_permission_role_arn: The device_permission_role_arn of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :param protocol: The protocol of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        """
        self.openapi_types = {
            'suite_definition_name': str,
            'devices': List,
            'intended_for_qualification': bool,
            'is_long_duration_test': bool,
            'root_group': str,
            'device_permission_role_arn': str,
            'protocol': Protocol
        }

        self.attribute_map = {
            'suite_definition_name': 'suiteDefinitionName',
            'devices': 'devices',
            'intended_for_qualification': 'intendedForQualification',
            'is_long_duration_test': 'isLongDurationTest',
            'root_group': 'rootGroup',
            'device_permission_role_arn': 'devicePermissionRoleArn',
            'protocol': 'protocol'
        }

        self._suite_definition_name = suite_definition_name
        self._devices = devices
        self._intended_for_qualification = intended_for_qualification
        self._is_long_duration_test = is_long_duration_test
        self._root_group = root_group
        self._device_permission_role_arn = device_permission_role_arn
        self._protocol = protocol

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSuiteDefinitionResponseSuiteDefinitionConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSuiteDefinitionResponse_suiteDefinitionConfiguration of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def suite_definition_name(self):
        """Gets the suite_definition_name of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.


        :return: The suite_definition_name of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :rtype: str
        """
        return self._suite_definition_name

    @suite_definition_name.setter
    def suite_definition_name(self, suite_definition_name):
        """Sets the suite_definition_name of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.


        :param suite_definition_name: The suite_definition_name of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :type suite_definition_name: str
        """
        if suite_definition_name is None:
            raise ValueError("Invalid value for `suite_definition_name`, must not be `None`")

        self._suite_definition_name = suite_definition_name

    @property
    def devices(self):
        """Gets the devices of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.


        :return: The devices of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :rtype: List
        """
        return self._devices

    @devices.setter
    def devices(self, devices):
        """Sets the devices of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.


        :param devices: The devices of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :type devices: List
        """

        self._devices = devices

    @property
    def intended_for_qualification(self):
        """Gets the intended_for_qualification of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.


        :return: The intended_for_qualification of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :rtype: bool
        """
        return self._intended_for_qualification

    @intended_for_qualification.setter
    def intended_for_qualification(self, intended_for_qualification):
        """Sets the intended_for_qualification of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.


        :param intended_for_qualification: The intended_for_qualification of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :type intended_for_qualification: bool
        """

        self._intended_for_qualification = intended_for_qualification

    @property
    def is_long_duration_test(self):
        """Gets the is_long_duration_test of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.


        :return: The is_long_duration_test of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :rtype: bool
        """
        return self._is_long_duration_test

    @is_long_duration_test.setter
    def is_long_duration_test(self, is_long_duration_test):
        """Sets the is_long_duration_test of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.


        :param is_long_duration_test: The is_long_duration_test of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :type is_long_duration_test: bool
        """

        self._is_long_duration_test = is_long_duration_test

    @property
    def root_group(self):
        """Gets the root_group of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.


        :return: The root_group of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :rtype: str
        """
        return self._root_group

    @root_group.setter
    def root_group(self, root_group):
        """Sets the root_group of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.


        :param root_group: The root_group of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :type root_group: str
        """
        if root_group is None:
            raise ValueError("Invalid value for `root_group`, must not be `None`")

        self._root_group = root_group

    @property
    def device_permission_role_arn(self):
        """Gets the device_permission_role_arn of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.


        :return: The device_permission_role_arn of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :rtype: str
        """
        return self._device_permission_role_arn

    @device_permission_role_arn.setter
    def device_permission_role_arn(self, device_permission_role_arn):
        """Sets the device_permission_role_arn of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.


        :param device_permission_role_arn: The device_permission_role_arn of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :type device_permission_role_arn: str
        """
        if device_permission_role_arn is None:
            raise ValueError("Invalid value for `device_permission_role_arn`, must not be `None`")

        self._device_permission_role_arn = device_permission_role_arn

    @property
    def protocol(self):
        """Gets the protocol of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.


        :return: The protocol of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :rtype: Protocol
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.


        :param protocol: The protocol of this GetSuiteDefinitionResponseSuiteDefinitionConfiguration.
        :type protocol: Protocol
        """

        self._protocol = protocol
