# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.status import Status
from openapi_server import util


class TestCaseRun(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, test_case_run_id: str=None, test_case_definition_id: str=None, test_case_definition_name: str=None, status: Status=None, start_time: datetime=None, end_time: datetime=None, log_url: str=None, warnings: str=None, failure: str=None, test_scenarios: List=None):
        """TestCaseRun - a model defined in OpenAPI

        :param test_case_run_id: The test_case_run_id of this TestCaseRun.
        :param test_case_definition_id: The test_case_definition_id of this TestCaseRun.
        :param test_case_definition_name: The test_case_definition_name of this TestCaseRun.
        :param status: The status of this TestCaseRun.
        :param start_time: The start_time of this TestCaseRun.
        :param end_time: The end_time of this TestCaseRun.
        :param log_url: The log_url of this TestCaseRun.
        :param warnings: The warnings of this TestCaseRun.
        :param failure: The failure of this TestCaseRun.
        :param test_scenarios: The test_scenarios of this TestCaseRun.
        """
        self.openapi_types = {
            'test_case_run_id': str,
            'test_case_definition_id': str,
            'test_case_definition_name': str,
            'status': Status,
            'start_time': datetime,
            'end_time': datetime,
            'log_url': str,
            'warnings': str,
            'failure': str,
            'test_scenarios': List
        }

        self.attribute_map = {
            'test_case_run_id': 'testCaseRunId',
            'test_case_definition_id': 'testCaseDefinitionId',
            'test_case_definition_name': 'testCaseDefinitionName',
            'status': 'status',
            'start_time': 'startTime',
            'end_time': 'endTime',
            'log_url': 'logUrl',
            'warnings': 'warnings',
            'failure': 'failure',
            'test_scenarios': 'testScenarios'
        }

        self._test_case_run_id = test_case_run_id
        self._test_case_definition_id = test_case_definition_id
        self._test_case_definition_name = test_case_definition_name
        self._status = status
        self._start_time = start_time
        self._end_time = end_time
        self._log_url = log_url
        self._warnings = warnings
        self._failure = failure
        self._test_scenarios = test_scenarios

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestCaseRun':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestCaseRun of this TestCaseRun.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def test_case_run_id(self):
        """Gets the test_case_run_id of this TestCaseRun.


        :return: The test_case_run_id of this TestCaseRun.
        :rtype: str
        """
        return self._test_case_run_id

    @test_case_run_id.setter
    def test_case_run_id(self, test_case_run_id):
        """Sets the test_case_run_id of this TestCaseRun.


        :param test_case_run_id: The test_case_run_id of this TestCaseRun.
        :type test_case_run_id: str
        """

        self._test_case_run_id = test_case_run_id

    @property
    def test_case_definition_id(self):
        """Gets the test_case_definition_id of this TestCaseRun.


        :return: The test_case_definition_id of this TestCaseRun.
        :rtype: str
        """
        return self._test_case_definition_id

    @test_case_definition_id.setter
    def test_case_definition_id(self, test_case_definition_id):
        """Sets the test_case_definition_id of this TestCaseRun.


        :param test_case_definition_id: The test_case_definition_id of this TestCaseRun.
        :type test_case_definition_id: str
        """

        self._test_case_definition_id = test_case_definition_id

    @property
    def test_case_definition_name(self):
        """Gets the test_case_definition_name of this TestCaseRun.


        :return: The test_case_definition_name of this TestCaseRun.
        :rtype: str
        """
        return self._test_case_definition_name

    @test_case_definition_name.setter
    def test_case_definition_name(self, test_case_definition_name):
        """Sets the test_case_definition_name of this TestCaseRun.


        :param test_case_definition_name: The test_case_definition_name of this TestCaseRun.
        :type test_case_definition_name: str
        """

        self._test_case_definition_name = test_case_definition_name

    @property
    def status(self):
        """Gets the status of this TestCaseRun.


        :return: The status of this TestCaseRun.
        :rtype: Status
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this TestCaseRun.


        :param status: The status of this TestCaseRun.
        :type status: Status
        """

        self._status = status

    @property
    def start_time(self):
        """Gets the start_time of this TestCaseRun.


        :return: The start_time of this TestCaseRun.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this TestCaseRun.


        :param start_time: The start_time of this TestCaseRun.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def end_time(self):
        """Gets the end_time of this TestCaseRun.


        :return: The end_time of this TestCaseRun.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this TestCaseRun.


        :param end_time: The end_time of this TestCaseRun.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def log_url(self):
        """Gets the log_url of this TestCaseRun.


        :return: The log_url of this TestCaseRun.
        :rtype: str
        """
        return self._log_url

    @log_url.setter
    def log_url(self, log_url):
        """Sets the log_url of this TestCaseRun.


        :param log_url: The log_url of this TestCaseRun.
        :type log_url: str
        """

        self._log_url = log_url

    @property
    def warnings(self):
        """Gets the warnings of this TestCaseRun.


        :return: The warnings of this TestCaseRun.
        :rtype: str
        """
        return self._warnings

    @warnings.setter
    def warnings(self, warnings):
        """Sets the warnings of this TestCaseRun.


        :param warnings: The warnings of this TestCaseRun.
        :type warnings: str
        """

        self._warnings = warnings

    @property
    def failure(self):
        """Gets the failure of this TestCaseRun.


        :return: The failure of this TestCaseRun.
        :rtype: str
        """
        return self._failure

    @failure.setter
    def failure(self, failure):
        """Sets the failure of this TestCaseRun.


        :param failure: The failure of this TestCaseRun.
        :type failure: str
        """

        self._failure = failure

    @property
    def test_scenarios(self):
        """Gets the test_scenarios of this TestCaseRun.


        :return: The test_scenarios of this TestCaseRun.
        :rtype: List
        """
        return self._test_scenarios

    @test_scenarios.setter
    def test_scenarios(self, test_scenarios):
        """Sets the test_scenarios of this TestCaseRun.


        :param test_scenarios: The test_scenarios of this TestCaseRun.
        :type test_scenarios: List
        """

        self._test_scenarios = test_scenarios
