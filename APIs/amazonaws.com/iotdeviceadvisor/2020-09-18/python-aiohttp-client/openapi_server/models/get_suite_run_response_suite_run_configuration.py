# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.start_suite_run_request_suite_run_configuration_primary_device import StartSuiteRunRequestSuiteRunConfigurationPrimaryDevice
from openapi_server import util


class GetSuiteRunResponseSuiteRunConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, primary_device: StartSuiteRunRequestSuiteRunConfigurationPrimaryDevice=None, selected_test_list: List=None, parallel_run: bool=None):
        """GetSuiteRunResponseSuiteRunConfiguration - a model defined in OpenAPI

        :param primary_device: The primary_device of this GetSuiteRunResponseSuiteRunConfiguration.
        :param selected_test_list: The selected_test_list of this GetSuiteRunResponseSuiteRunConfiguration.
        :param parallel_run: The parallel_run of this GetSuiteRunResponseSuiteRunConfiguration.
        """
        self.openapi_types = {
            'primary_device': StartSuiteRunRequestSuiteRunConfigurationPrimaryDevice,
            'selected_test_list': List,
            'parallel_run': bool
        }

        self.attribute_map = {
            'primary_device': 'primaryDevice',
            'selected_test_list': 'selectedTestList',
            'parallel_run': 'parallelRun'
        }

        self._primary_device = primary_device
        self._selected_test_list = selected_test_list
        self._parallel_run = parallel_run

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSuiteRunResponseSuiteRunConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSuiteRunResponse_suiteRunConfiguration of this GetSuiteRunResponseSuiteRunConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def primary_device(self):
        """Gets the primary_device of this GetSuiteRunResponseSuiteRunConfiguration.


        :return: The primary_device of this GetSuiteRunResponseSuiteRunConfiguration.
        :rtype: StartSuiteRunRequestSuiteRunConfigurationPrimaryDevice
        """
        return self._primary_device

    @primary_device.setter
    def primary_device(self, primary_device):
        """Sets the primary_device of this GetSuiteRunResponseSuiteRunConfiguration.


        :param primary_device: The primary_device of this GetSuiteRunResponseSuiteRunConfiguration.
        :type primary_device: StartSuiteRunRequestSuiteRunConfigurationPrimaryDevice
        """
        if primary_device is None:
            raise ValueError("Invalid value for `primary_device`, must not be `None`")

        self._primary_device = primary_device

    @property
    def selected_test_list(self):
        """Gets the selected_test_list of this GetSuiteRunResponseSuiteRunConfiguration.


        :return: The selected_test_list of this GetSuiteRunResponseSuiteRunConfiguration.
        :rtype: List
        """
        return self._selected_test_list

    @selected_test_list.setter
    def selected_test_list(self, selected_test_list):
        """Sets the selected_test_list of this GetSuiteRunResponseSuiteRunConfiguration.


        :param selected_test_list: The selected_test_list of this GetSuiteRunResponseSuiteRunConfiguration.
        :type selected_test_list: List
        """

        self._selected_test_list = selected_test_list

    @property
    def parallel_run(self):
        """Gets the parallel_run of this GetSuiteRunResponseSuiteRunConfiguration.


        :return: The parallel_run of this GetSuiteRunResponseSuiteRunConfiguration.
        :rtype: bool
        """
        return self._parallel_run

    @parallel_run.setter
    def parallel_run(self, parallel_run):
        """Sets the parallel_run of this GetSuiteRunResponseSuiteRunConfiguration.


        :param parallel_run: The parallel_run of this GetSuiteRunResponseSuiteRunConfiguration.
        :type parallel_run: bool
        """

        self._parallel_run = parallel_run
