/**
 * AWS IoT Core Device Advisor
 * Amazon Web Services IoT Core Device Advisor is a cloud-based, fully managed test capability for validating IoT devices during device software development. Device Advisor provides pre-built tests that you can use to validate IoT devices for reliable and secure connectivity with Amazon Web Services IoT Core before deploying devices to production. By using Device Advisor, you can confirm that your devices can connect to Amazon Web Services IoT Core, follow security best practices and, if applicable, receive software updates from IoT Device Management. You can also download signed qualification reports to submit to the Amazon Web Services Partner Network to get your device qualified for the Amazon Web Services Partner Device Catalog without the need to send your device in and wait for it to be tested.
 *
 * The version of the OpenAPI document: 2020-09-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import SuiteRunStatus from './SuiteRunStatus';

/**
 * The SuiteRunInformation model module.
 * @module model/SuiteRunInformation
 * @version 2020-09-18
 */
class SuiteRunInformation {
    /**
     * Constructs a new <code>SuiteRunInformation</code>.
     * &lt;p&gt;Information about the suite run.&lt;/p&gt; &lt;p&gt;Requires permission to access the &lt;a href&#x3D;\&quot;https://docs.aws.amazon.com/service-authorization/latest/reference/list_awsiot.html#awsiot-actions-as-permissions\&quot;&gt;SuiteRunInformation&lt;/a&gt; action.&lt;/p&gt;
     * @alias module:model/SuiteRunInformation
     */
    constructor() { 
        
        SuiteRunInformation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>SuiteRunInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SuiteRunInformation} obj Optional instance to populate.
     * @return {module:model/SuiteRunInformation} The populated <code>SuiteRunInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SuiteRunInformation();

            if (data.hasOwnProperty('suiteDefinitionId')) {
                obj['suiteDefinitionId'] = ApiClient.convertToType(data['suiteDefinitionId'], 'String');
            }
            if (data.hasOwnProperty('suiteDefinitionVersion')) {
                obj['suiteDefinitionVersion'] = ApiClient.convertToType(data['suiteDefinitionVersion'], 'String');
            }
            if (data.hasOwnProperty('suiteDefinitionName')) {
                obj['suiteDefinitionName'] = ApiClient.convertToType(data['suiteDefinitionName'], 'String');
            }
            if (data.hasOwnProperty('suiteRunId')) {
                obj['suiteRunId'] = ApiClient.convertToType(data['suiteRunId'], 'String');
            }
            if (data.hasOwnProperty('createdAt')) {
                obj['createdAt'] = ApiClient.convertToType(data['createdAt'], 'Date');
            }
            if (data.hasOwnProperty('startedAt')) {
                obj['startedAt'] = ApiClient.convertToType(data['startedAt'], 'Date');
            }
            if (data.hasOwnProperty('endAt')) {
                obj['endAt'] = ApiClient.convertToType(data['endAt'], 'Date');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], SuiteRunStatus);
            }
            if (data.hasOwnProperty('passed')) {
                obj['passed'] = ApiClient.convertToType(data['passed'], 'Number');
            }
            if (data.hasOwnProperty('failed')) {
                obj['failed'] = ApiClient.convertToType(data['failed'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SuiteRunInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SuiteRunInformation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `suiteDefinitionId`
        if (data['suiteDefinitionId']) { // data not null
          String.validateJSON(data['suiteDefinitionId']);
        }
        // validate the optional field `suiteDefinitionVersion`
        if (data['suiteDefinitionVersion']) { // data not null
          String.validateJSON(data['suiteDefinitionVersion']);
        }
        // validate the optional field `suiteDefinitionName`
        if (data['suiteDefinitionName']) { // data not null
          String.validateJSON(data['suiteDefinitionName']);
        }
        // validate the optional field `suiteRunId`
        if (data['suiteRunId']) { // data not null
          String.validateJSON(data['suiteRunId']);
        }
        // validate the optional field `createdAt`
        if (data['createdAt']) { // data not null
          Date.validateJSON(data['createdAt']);
        }
        // validate the optional field `startedAt`
        if (data['startedAt']) { // data not null
          Date.validateJSON(data['startedAt']);
        }
        // validate the optional field `endAt`
        if (data['endAt']) { // data not null
          Date.validateJSON(data['endAt']);
        }
        // validate the optional field `status`
        if (data['status']) { // data not null
          SuiteRunStatus.validateJSON(data['status']);
        }
        // validate the optional field `passed`
        if (data['passed']) { // data not null
          Number.validateJSON(data['passed']);
        }
        // validate the optional field `failed`
        if (data['failed']) { // data not null
          Number.validateJSON(data['failed']);
        }

        return true;
    }


}



/**
 * @member {String} suiteDefinitionId
 */
SuiteRunInformation.prototype['suiteDefinitionId'] = undefined;

/**
 * @member {String} suiteDefinitionVersion
 */
SuiteRunInformation.prototype['suiteDefinitionVersion'] = undefined;

/**
 * @member {String} suiteDefinitionName
 */
SuiteRunInformation.prototype['suiteDefinitionName'] = undefined;

/**
 * @member {String} suiteRunId
 */
SuiteRunInformation.prototype['suiteRunId'] = undefined;

/**
 * @member {Date} createdAt
 */
SuiteRunInformation.prototype['createdAt'] = undefined;

/**
 * @member {Date} startedAt
 */
SuiteRunInformation.prototype['startedAt'] = undefined;

/**
 * @member {Date} endAt
 */
SuiteRunInformation.prototype['endAt'] = undefined;

/**
 * @member {module:model/SuiteRunStatus} status
 */
SuiteRunInformation.prototype['status'] = undefined;

/**
 * @member {Number} passed
 */
SuiteRunInformation.prototype['passed'] = undefined;

/**
 * @member {Number} failed
 */
SuiteRunInformation.prototype['failed'] = undefined;






export default SuiteRunInformation;

