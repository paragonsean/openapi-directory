/**
 * AWS IoT Core Device Advisor
 * Amazon Web Services IoT Core Device Advisor is a cloud-based, fully managed test capability for validating IoT devices during device software development. Device Advisor provides pre-built tests that you can use to validate IoT devices for reliable and secure connectivity with Amazon Web Services IoT Core before deploying devices to production. By using Device Advisor, you can confirm that your devices can connect to Amazon Web Services IoT Core, follow security best practices and, if applicable, receive software updates from IoT Device Management. You can also download signed qualification reports to submit to the Amazon Web Services Partner Network to get your device qualified for the Amazon Web Services Partner Device Catalog without the need to send your device in and wait for it to be tested.
 *
 * The version of the OpenAPI document: 2020-09-18
 * Contact: mike.ralphson@gmail.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AuthenticationMethod from './model/AuthenticationMethod';
import CreateSuiteDefinitionRequest from './model/CreateSuiteDefinitionRequest';
import CreateSuiteDefinitionRequestSuiteDefinitionConfiguration from './model/CreateSuiteDefinitionRequestSuiteDefinitionConfiguration';
import CreateSuiteDefinitionResponse from './model/CreateSuiteDefinitionResponse';
import DeviceUnderTest from './model/DeviceUnderTest';
import GetEndpointResponse from './model/GetEndpointResponse';
import GetSuiteDefinitionResponse from './model/GetSuiteDefinitionResponse';
import GetSuiteDefinitionResponseSuiteDefinitionConfiguration from './model/GetSuiteDefinitionResponseSuiteDefinitionConfiguration';
import GetSuiteRunReportResponse from './model/GetSuiteRunReportResponse';
import GetSuiteRunResponse from './model/GetSuiteRunResponse';
import GetSuiteRunResponseSuiteRunConfiguration from './model/GetSuiteRunResponseSuiteRunConfiguration';
import GetSuiteRunResponseTestResult from './model/GetSuiteRunResponseTestResult';
import GroupResult from './model/GroupResult';
import ListSuiteDefinitionsResponse from './model/ListSuiteDefinitionsResponse';
import ListSuiteRunsResponse from './model/ListSuiteRunsResponse';
import ListTagsForResourceResponse from './model/ListTagsForResourceResponse';
import Protocol from './model/Protocol';
import StartSuiteRunRequest from './model/StartSuiteRunRequest';
import StartSuiteRunRequestSuiteRunConfiguration from './model/StartSuiteRunRequestSuiteRunConfiguration';
import StartSuiteRunRequestSuiteRunConfigurationPrimaryDevice from './model/StartSuiteRunRequestSuiteRunConfigurationPrimaryDevice';
import StartSuiteRunResponse from './model/StartSuiteRunResponse';
import Status from './model/Status';
import SuiteDefinitionConfiguration from './model/SuiteDefinitionConfiguration';
import SuiteDefinitionInformation from './model/SuiteDefinitionInformation';
import SuiteRunConfiguration from './model/SuiteRunConfiguration';
import SuiteRunInformation from './model/SuiteRunInformation';
import SuiteRunStatus from './model/SuiteRunStatus';
import TagResourceRequest from './model/TagResourceRequest';
import TestCaseRun from './model/TestCaseRun';
import TestCaseScenario from './model/TestCaseScenario';
import TestCaseScenarioStatus from './model/TestCaseScenarioStatus';
import TestCaseScenarioType from './model/TestCaseScenarioType';
import TestResult from './model/TestResult';
import UpdateSuiteDefinitionRequest from './model/UpdateSuiteDefinitionRequest';
import UpdateSuiteDefinitionRequestSuiteDefinitionConfiguration from './model/UpdateSuiteDefinitionRequestSuiteDefinitionConfiguration';
import UpdateSuiteDefinitionResponse from './model/UpdateSuiteDefinitionResponse';
import DefaultApi from './api/DefaultApi';


/**
* Amazon Web Services IoT Core Device Advisor is a cloud-based, fully managed test capability for validating IoT devices during device software development. Device Advisor provides pre-built tests that you can use to validate IoT devices for reliable and secure connectivity with Amazon Web Services IoT Core before deploying devices to production. By using Device Advisor, you can confirm that your devices can connect to Amazon Web Services IoT Core, follow security best practices and, if applicable, receive software updates from IoT Device Management. You can also download signed qualification reports to submit to the Amazon Web Services Partner Network to get your device qualified for the Amazon Web Services Partner Device Catalog without the need to send your device in and wait for it to be tested..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var AwsIoTCoreDeviceAdvisor = require('index'); // See note below*.
* var xxxSvc = new AwsIoTCoreDeviceAdvisor.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new AwsIoTCoreDeviceAdvisor.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new AwsIoTCoreDeviceAdvisor.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new AwsIoTCoreDeviceAdvisor.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 2020-09-18
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AuthenticationMethod model constructor.
     * @property {module:model/AuthenticationMethod}
     */
    AuthenticationMethod,

    /**
     * The CreateSuiteDefinitionRequest model constructor.
     * @property {module:model/CreateSuiteDefinitionRequest}
     */
    CreateSuiteDefinitionRequest,

    /**
     * The CreateSuiteDefinitionRequestSuiteDefinitionConfiguration model constructor.
     * @property {module:model/CreateSuiteDefinitionRequestSuiteDefinitionConfiguration}
     */
    CreateSuiteDefinitionRequestSuiteDefinitionConfiguration,

    /**
     * The CreateSuiteDefinitionResponse model constructor.
     * @property {module:model/CreateSuiteDefinitionResponse}
     */
    CreateSuiteDefinitionResponse,

    /**
     * The DeviceUnderTest model constructor.
     * @property {module:model/DeviceUnderTest}
     */
    DeviceUnderTest,

    /**
     * The GetEndpointResponse model constructor.
     * @property {module:model/GetEndpointResponse}
     */
    GetEndpointResponse,

    /**
     * The GetSuiteDefinitionResponse model constructor.
     * @property {module:model/GetSuiteDefinitionResponse}
     */
    GetSuiteDefinitionResponse,

    /**
     * The GetSuiteDefinitionResponseSuiteDefinitionConfiguration model constructor.
     * @property {module:model/GetSuiteDefinitionResponseSuiteDefinitionConfiguration}
     */
    GetSuiteDefinitionResponseSuiteDefinitionConfiguration,

    /**
     * The GetSuiteRunReportResponse model constructor.
     * @property {module:model/GetSuiteRunReportResponse}
     */
    GetSuiteRunReportResponse,

    /**
     * The GetSuiteRunResponse model constructor.
     * @property {module:model/GetSuiteRunResponse}
     */
    GetSuiteRunResponse,

    /**
     * The GetSuiteRunResponseSuiteRunConfiguration model constructor.
     * @property {module:model/GetSuiteRunResponseSuiteRunConfiguration}
     */
    GetSuiteRunResponseSuiteRunConfiguration,

    /**
     * The GetSuiteRunResponseTestResult model constructor.
     * @property {module:model/GetSuiteRunResponseTestResult}
     */
    GetSuiteRunResponseTestResult,

    /**
     * The GroupResult model constructor.
     * @property {module:model/GroupResult}
     */
    GroupResult,

    /**
     * The ListSuiteDefinitionsResponse model constructor.
     * @property {module:model/ListSuiteDefinitionsResponse}
     */
    ListSuiteDefinitionsResponse,

    /**
     * The ListSuiteRunsResponse model constructor.
     * @property {module:model/ListSuiteRunsResponse}
     */
    ListSuiteRunsResponse,

    /**
     * The ListTagsForResourceResponse model constructor.
     * @property {module:model/ListTagsForResourceResponse}
     */
    ListTagsForResourceResponse,

    /**
     * The Protocol model constructor.
     * @property {module:model/Protocol}
     */
    Protocol,

    /**
     * The StartSuiteRunRequest model constructor.
     * @property {module:model/StartSuiteRunRequest}
     */
    StartSuiteRunRequest,

    /**
     * The StartSuiteRunRequestSuiteRunConfiguration model constructor.
     * @property {module:model/StartSuiteRunRequestSuiteRunConfiguration}
     */
    StartSuiteRunRequestSuiteRunConfiguration,

    /**
     * The StartSuiteRunRequestSuiteRunConfigurationPrimaryDevice model constructor.
     * @property {module:model/StartSuiteRunRequestSuiteRunConfigurationPrimaryDevice}
     */
    StartSuiteRunRequestSuiteRunConfigurationPrimaryDevice,

    /**
     * The StartSuiteRunResponse model constructor.
     * @property {module:model/StartSuiteRunResponse}
     */
    StartSuiteRunResponse,

    /**
     * The Status model constructor.
     * @property {module:model/Status}
     */
    Status,

    /**
     * The SuiteDefinitionConfiguration model constructor.
     * @property {module:model/SuiteDefinitionConfiguration}
     */
    SuiteDefinitionConfiguration,

    /**
     * The SuiteDefinitionInformation model constructor.
     * @property {module:model/SuiteDefinitionInformation}
     */
    SuiteDefinitionInformation,

    /**
     * The SuiteRunConfiguration model constructor.
     * @property {module:model/SuiteRunConfiguration}
     */
    SuiteRunConfiguration,

    /**
     * The SuiteRunInformation model constructor.
     * @property {module:model/SuiteRunInformation}
     */
    SuiteRunInformation,

    /**
     * The SuiteRunStatus model constructor.
     * @property {module:model/SuiteRunStatus}
     */
    SuiteRunStatus,

    /**
     * The TagResourceRequest model constructor.
     * @property {module:model/TagResourceRequest}
     */
    TagResourceRequest,

    /**
     * The TestCaseRun model constructor.
     * @property {module:model/TestCaseRun}
     */
    TestCaseRun,

    /**
     * The TestCaseScenario model constructor.
     * @property {module:model/TestCaseScenario}
     */
    TestCaseScenario,

    /**
     * The TestCaseScenarioStatus model constructor.
     * @property {module:model/TestCaseScenarioStatus}
     */
    TestCaseScenarioStatus,

    /**
     * The TestCaseScenarioType model constructor.
     * @property {module:model/TestCaseScenarioType}
     */
    TestCaseScenarioType,

    /**
     * The TestResult model constructor.
     * @property {module:model/TestResult}
     */
    TestResult,

    /**
     * The UpdateSuiteDefinitionRequest model constructor.
     * @property {module:model/UpdateSuiteDefinitionRequest}
     */
    UpdateSuiteDefinitionRequest,

    /**
     * The UpdateSuiteDefinitionRequestSuiteDefinitionConfiguration model constructor.
     * @property {module:model/UpdateSuiteDefinitionRequestSuiteDefinitionConfiguration}
     */
    UpdateSuiteDefinitionRequestSuiteDefinitionConfiguration,

    /**
     * The UpdateSuiteDefinitionResponse model constructor.
     * @property {module:model/UpdateSuiteDefinitionResponse}
     */
    UpdateSuiteDefinitionResponse,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi
};
