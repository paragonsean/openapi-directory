/**
 * Data API
 * Serves the Clever Data API
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DistrictAdminResponse from '../model/DistrictAdminResponse';
import DistrictAdminsResponse from '../model/DistrictAdminsResponse';
import NotFound from '../model/NotFound';

/**
* DistrictAdmins service.
* @module api/DistrictAdminsApi
* @version 1.2.0
*/
export default class DistrictAdminsApi {

    /**
    * Constructs a new DistrictAdminsApi. 
    * @alias module:api/DistrictAdminsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getDistrictAdmin operation.
     * @callback module:api/DistrictAdminsApi~getDistrictAdminCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DistrictAdminResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a specific district admin
     * @param {String} id 
     * @param {module:api/DistrictAdminsApi~getDistrictAdminCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DistrictAdminResponse}
     */
    getDistrictAdmin(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getDistrictAdmin");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DistrictAdminResponse;
      return this.apiClient.callApi(
        '/district_admins/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDistrictAdmins operation.
     * @callback module:api/DistrictAdminsApi~getDistrictAdminsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DistrictAdminsResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of district admins
     * @param {Object} opts Optional parameters
     * @param {String} [startingAfter] 
     * @param {String} [endingBefore] 
     * @param {String} [showLinks] 
     * @param {module:api/DistrictAdminsApi~getDistrictAdminsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DistrictAdminsResponse}
     */
    getDistrictAdmins(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'starting_after': opts['startingAfter'],
        'ending_before': opts['endingBefore'],
        'show_links': opts['showLinks']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['oauth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = DistrictAdminsResponse;
      return this.apiClient.callApi(
        '/district_admins', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
