/**
 * Data API
 * Serves the Clever Data API
 *
 * The version of the OpenAPI document: 1.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISection.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISection::OAISection(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISection::OAISection() {
    this->initializeModel();
}

OAISection::~OAISection() {}

void OAISection::initializeModel() {

    m_course_description_isSet = false;
    m_course_description_isValid = false;

    m_course_name_isSet = false;
    m_course_name_isValid = false;

    m_course_number_isSet = false;
    m_course_number_isValid = false;

    m_created_isSet = false;
    m_created_isValid = false;

    m_district_isSet = false;
    m_district_isValid = false;

    m_grade_isSet = false;
    m_grade_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_modified_isSet = false;
    m_last_modified_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_period_isSet = false;
    m_period_isValid = false;

    m_school_isSet = false;
    m_school_isValid = false;

    m_section_number_isSet = false;
    m_section_number_isValid = false;

    m_sis_id_isSet = false;
    m_sis_id_isValid = false;

    m_students_isSet = false;
    m_students_isValid = false;

    m_subject_isSet = false;
    m_subject_isValid = false;

    m_teacher_isSet = false;
    m_teacher_isValid = false;

    m_teachers_isSet = false;
    m_teachers_isValid = false;

    m_term_isSet = false;
    m_term_isValid = false;
}

void OAISection::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISection::fromJsonObject(QJsonObject json) {

    m_course_description_isValid = ::OpenAPI::fromJsonValue(m_course_description, json[QString("course_description")]);
    m_course_description_isSet = !json[QString("course_description")].isNull() && m_course_description_isValid;

    m_course_name_isValid = ::OpenAPI::fromJsonValue(m_course_name, json[QString("course_name")]);
    m_course_name_isSet = !json[QString("course_name")].isNull() && m_course_name_isValid;

    m_course_number_isValid = ::OpenAPI::fromJsonValue(m_course_number, json[QString("course_number")]);
    m_course_number_isSet = !json[QString("course_number")].isNull() && m_course_number_isValid;

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_district_isValid = ::OpenAPI::fromJsonValue(m_district, json[QString("district")]);
    m_district_isSet = !json[QString("district")].isNull() && m_district_isValid;

    m_grade_isValid = ::OpenAPI::fromJsonValue(m_grade, json[QString("grade")]);
    m_grade_isSet = !json[QString("grade")].isNull() && m_grade_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_modified_isValid = ::OpenAPI::fromJsonValue(m_last_modified, json[QString("last_modified")]);
    m_last_modified_isSet = !json[QString("last_modified")].isNull() && m_last_modified_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_period_isValid = ::OpenAPI::fromJsonValue(m_period, json[QString("period")]);
    m_period_isSet = !json[QString("period")].isNull() && m_period_isValid;

    m_school_isValid = ::OpenAPI::fromJsonValue(m_school, json[QString("school")]);
    m_school_isSet = !json[QString("school")].isNull() && m_school_isValid;

    m_section_number_isValid = ::OpenAPI::fromJsonValue(m_section_number, json[QString("section_number")]);
    m_section_number_isSet = !json[QString("section_number")].isNull() && m_section_number_isValid;

    m_sis_id_isValid = ::OpenAPI::fromJsonValue(m_sis_id, json[QString("sis_id")]);
    m_sis_id_isSet = !json[QString("sis_id")].isNull() && m_sis_id_isValid;

    m_students_isValid = ::OpenAPI::fromJsonValue(m_students, json[QString("students")]);
    m_students_isSet = !json[QString("students")].isNull() && m_students_isValid;

    m_subject_isValid = ::OpenAPI::fromJsonValue(m_subject, json[QString("subject")]);
    m_subject_isSet = !json[QString("subject")].isNull() && m_subject_isValid;

    m_teacher_isValid = ::OpenAPI::fromJsonValue(m_teacher, json[QString("teacher")]);
    m_teacher_isSet = !json[QString("teacher")].isNull() && m_teacher_isValid;

    m_teachers_isValid = ::OpenAPI::fromJsonValue(m_teachers, json[QString("teachers")]);
    m_teachers_isSet = !json[QString("teachers")].isNull() && m_teachers_isValid;

    m_term_isValid = ::OpenAPI::fromJsonValue(m_term, json[QString("term")]);
    m_term_isSet = !json[QString("term")].isNull() && m_term_isValid;
}

QString OAISection::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISection::asJsonObject() const {
    QJsonObject obj;
    if (m_course_description_isSet) {
        obj.insert(QString("course_description"), ::OpenAPI::toJsonValue(m_course_description));
    }
    if (m_course_name_isSet) {
        obj.insert(QString("course_name"), ::OpenAPI::toJsonValue(m_course_name));
    }
    if (m_course_number_isSet) {
        obj.insert(QString("course_number"), ::OpenAPI::toJsonValue(m_course_number));
    }
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_district_isSet) {
        obj.insert(QString("district"), ::OpenAPI::toJsonValue(m_district));
    }
    if (m_grade_isSet) {
        obj.insert(QString("grade"), ::OpenAPI::toJsonValue(m_grade));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_modified_isSet) {
        obj.insert(QString("last_modified"), ::OpenAPI::toJsonValue(m_last_modified));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_period_isSet) {
        obj.insert(QString("period"), ::OpenAPI::toJsonValue(m_period));
    }
    if (m_school_isSet) {
        obj.insert(QString("school"), ::OpenAPI::toJsonValue(m_school));
    }
    if (m_section_number_isSet) {
        obj.insert(QString("section_number"), ::OpenAPI::toJsonValue(m_section_number));
    }
    if (m_sis_id_isSet) {
        obj.insert(QString("sis_id"), ::OpenAPI::toJsonValue(m_sis_id));
    }
    if (m_students.size() > 0) {
        obj.insert(QString("students"), ::OpenAPI::toJsonValue(m_students));
    }
    if (m_subject_isSet) {
        obj.insert(QString("subject"), ::OpenAPI::toJsonValue(m_subject));
    }
    if (m_teacher_isSet) {
        obj.insert(QString("teacher"), ::OpenAPI::toJsonValue(m_teacher));
    }
    if (m_teachers.size() > 0) {
        obj.insert(QString("teachers"), ::OpenAPI::toJsonValue(m_teachers));
    }
    if (m_term.isSet()) {
        obj.insert(QString("term"), ::OpenAPI::toJsonValue(m_term));
    }
    return obj;
}

QString OAISection::getCourseDescription() const {
    return m_course_description;
}
void OAISection::setCourseDescription(const QString &course_description) {
    m_course_description = course_description;
    m_course_description_isSet = true;
}

bool OAISection::is_course_description_Set() const{
    return m_course_description_isSet;
}

bool OAISection::is_course_description_Valid() const{
    return m_course_description_isValid;
}

QString OAISection::getCourseName() const {
    return m_course_name;
}
void OAISection::setCourseName(const QString &course_name) {
    m_course_name = course_name;
    m_course_name_isSet = true;
}

bool OAISection::is_course_name_Set() const{
    return m_course_name_isSet;
}

bool OAISection::is_course_name_Valid() const{
    return m_course_name_isValid;
}

QString OAISection::getCourseNumber() const {
    return m_course_number;
}
void OAISection::setCourseNumber(const QString &course_number) {
    m_course_number = course_number;
    m_course_number_isSet = true;
}

bool OAISection::is_course_number_Set() const{
    return m_course_number_isSet;
}

bool OAISection::is_course_number_Valid() const{
    return m_course_number_isValid;
}

QString OAISection::getCreated() const {
    return m_created;
}
void OAISection::setCreated(const QString &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAISection::is_created_Set() const{
    return m_created_isSet;
}

bool OAISection::is_created_Valid() const{
    return m_created_isValid;
}

QString OAISection::getDistrict() const {
    return m_district;
}
void OAISection::setDistrict(const QString &district) {
    m_district = district;
    m_district_isSet = true;
}

bool OAISection::is_district_Set() const{
    return m_district_isSet;
}

bool OAISection::is_district_Valid() const{
    return m_district_isValid;
}

QString OAISection::getGrade() const {
    return m_grade;
}
void OAISection::setGrade(const QString &grade) {
    m_grade = grade;
    m_grade_isSet = true;
}

bool OAISection::is_grade_Set() const{
    return m_grade_isSet;
}

bool OAISection::is_grade_Valid() const{
    return m_grade_isValid;
}

QString OAISection::getId() const {
    return m_id;
}
void OAISection::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAISection::is_id_Set() const{
    return m_id_isSet;
}

bool OAISection::is_id_Valid() const{
    return m_id_isValid;
}

QString OAISection::getLastModified() const {
    return m_last_modified;
}
void OAISection::setLastModified(const QString &last_modified) {
    m_last_modified = last_modified;
    m_last_modified_isSet = true;
}

bool OAISection::is_last_modified_Set() const{
    return m_last_modified_isSet;
}

bool OAISection::is_last_modified_Valid() const{
    return m_last_modified_isValid;
}

QString OAISection::getName() const {
    return m_name;
}
void OAISection::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISection::is_name_Set() const{
    return m_name_isSet;
}

bool OAISection::is_name_Valid() const{
    return m_name_isValid;
}

QString OAISection::getPeriod() const {
    return m_period;
}
void OAISection::setPeriod(const QString &period) {
    m_period = period;
    m_period_isSet = true;
}

bool OAISection::is_period_Set() const{
    return m_period_isSet;
}

bool OAISection::is_period_Valid() const{
    return m_period_isValid;
}

QString OAISection::getSchool() const {
    return m_school;
}
void OAISection::setSchool(const QString &school) {
    m_school = school;
    m_school_isSet = true;
}

bool OAISection::is_school_Set() const{
    return m_school_isSet;
}

bool OAISection::is_school_Valid() const{
    return m_school_isValid;
}

QString OAISection::getSectionNumber() const {
    return m_section_number;
}
void OAISection::setSectionNumber(const QString &section_number) {
    m_section_number = section_number;
    m_section_number_isSet = true;
}

bool OAISection::is_section_number_Set() const{
    return m_section_number_isSet;
}

bool OAISection::is_section_number_Valid() const{
    return m_section_number_isValid;
}

QString OAISection::getSisId() const {
    return m_sis_id;
}
void OAISection::setSisId(const QString &sis_id) {
    m_sis_id = sis_id;
    m_sis_id_isSet = true;
}

bool OAISection::is_sis_id_Set() const{
    return m_sis_id_isSet;
}

bool OAISection::is_sis_id_Valid() const{
    return m_sis_id_isValid;
}

QList<QString> OAISection::getStudents() const {
    return m_students;
}
void OAISection::setStudents(const QList<QString> &students) {
    m_students = students;
    m_students_isSet = true;
}

bool OAISection::is_students_Set() const{
    return m_students_isSet;
}

bool OAISection::is_students_Valid() const{
    return m_students_isValid;
}

QString OAISection::getSubject() const {
    return m_subject;
}
void OAISection::setSubject(const QString &subject) {
    m_subject = subject;
    m_subject_isSet = true;
}

bool OAISection::is_subject_Set() const{
    return m_subject_isSet;
}

bool OAISection::is_subject_Valid() const{
    return m_subject_isValid;
}

QString OAISection::getTeacher() const {
    return m_teacher;
}
void OAISection::setTeacher(const QString &teacher) {
    m_teacher = teacher;
    m_teacher_isSet = true;
}

bool OAISection::is_teacher_Set() const{
    return m_teacher_isSet;
}

bool OAISection::is_teacher_Valid() const{
    return m_teacher_isValid;
}

QList<QString> OAISection::getTeachers() const {
    return m_teachers;
}
void OAISection::setTeachers(const QList<QString> &teachers) {
    m_teachers = teachers;
    m_teachers_isSet = true;
}

bool OAISection::is_teachers_Set() const{
    return m_teachers_isSet;
}

bool OAISection::is_teachers_Valid() const{
    return m_teachers_isValid;
}

OAITerm OAISection::getTerm() const {
    return m_term;
}
void OAISection::setTerm(const OAITerm &term) {
    m_term = term;
    m_term_isSet = true;
}

bool OAISection::is_term_Set() const{
    return m_term_isSet;
}

bool OAISection::is_term_Valid() const{
    return m_term_isValid;
}

bool OAISection::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_course_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_course_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_course_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_district_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_grade_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_period_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_school_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_section_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sis_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_students.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_subject_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_teacher_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_teachers.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_term.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISection::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
