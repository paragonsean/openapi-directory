/**
 * Data API
 * Serves the Clever Data API
 *
 * The version of the OpenAPI document: 1.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStudentContact.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStudentContact::OAIStudentContact(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStudentContact::OAIStudentContact() {
    this->initializeModel();
}

OAIStudentContact::~OAIStudentContact() {}

void OAIStudentContact::initializeModel() {

    m_district_isSet = false;
    m_district_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;

    m_phone_type_isSet = false;
    m_phone_type_isValid = false;

    m_relationship_isSet = false;
    m_relationship_isValid = false;

    m_sis_id_isSet = false;
    m_sis_id_isValid = false;

    m_student_isSet = false;
    m_student_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIStudentContact::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStudentContact::fromJsonObject(QJsonObject json) {

    m_district_isValid = ::OpenAPI::fromJsonValue(m_district, json[QString("district")]);
    m_district_isSet = !json[QString("district")].isNull() && m_district_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;

    m_phone_type_isValid = ::OpenAPI::fromJsonValue(m_phone_type, json[QString("phone_type")]);
    m_phone_type_isSet = !json[QString("phone_type")].isNull() && m_phone_type_isValid;

    m_relationship_isValid = ::OpenAPI::fromJsonValue(m_relationship, json[QString("relationship")]);
    m_relationship_isSet = !json[QString("relationship")].isNull() && m_relationship_isValid;

    m_sis_id_isValid = ::OpenAPI::fromJsonValue(m_sis_id, json[QString("sis_id")]);
    m_sis_id_isSet = !json[QString("sis_id")].isNull() && m_sis_id_isValid;

    m_student_isValid = ::OpenAPI::fromJsonValue(m_student, json[QString("student")]);
    m_student_isSet = !json[QString("student")].isNull() && m_student_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIStudentContact::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStudentContact::asJsonObject() const {
    QJsonObject obj;
    if (m_district_isSet) {
        obj.insert(QString("district"), ::OpenAPI::toJsonValue(m_district));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_phone_isSet) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    if (m_phone_type_isSet) {
        obj.insert(QString("phone_type"), ::OpenAPI::toJsonValue(m_phone_type));
    }
    if (m_relationship_isSet) {
        obj.insert(QString("relationship"), ::OpenAPI::toJsonValue(m_relationship));
    }
    if (m_sis_id_isSet) {
        obj.insert(QString("sis_id"), ::OpenAPI::toJsonValue(m_sis_id));
    }
    if (m_student_isSet) {
        obj.insert(QString("student"), ::OpenAPI::toJsonValue(m_student));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIStudentContact::getDistrict() const {
    return m_district;
}
void OAIStudentContact::setDistrict(const QString &district) {
    m_district = district;
    m_district_isSet = true;
}

bool OAIStudentContact::is_district_Set() const{
    return m_district_isSet;
}

bool OAIStudentContact::is_district_Valid() const{
    return m_district_isValid;
}

QString OAIStudentContact::getEmail() const {
    return m_email;
}
void OAIStudentContact::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIStudentContact::is_email_Set() const{
    return m_email_isSet;
}

bool OAIStudentContact::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIStudentContact::getId() const {
    return m_id;
}
void OAIStudentContact::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIStudentContact::is_id_Set() const{
    return m_id_isSet;
}

bool OAIStudentContact::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIStudentContact::getName() const {
    return m_name;
}
void OAIStudentContact::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIStudentContact::is_name_Set() const{
    return m_name_isSet;
}

bool OAIStudentContact::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIStudentContact::getPhone() const {
    return m_phone;
}
void OAIStudentContact::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAIStudentContact::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAIStudentContact::is_phone_Valid() const{
    return m_phone_isValid;
}

QString OAIStudentContact::getPhoneType() const {
    return m_phone_type;
}
void OAIStudentContact::setPhoneType(const QString &phone_type) {
    m_phone_type = phone_type;
    m_phone_type_isSet = true;
}

bool OAIStudentContact::is_phone_type_Set() const{
    return m_phone_type_isSet;
}

bool OAIStudentContact::is_phone_type_Valid() const{
    return m_phone_type_isValid;
}

QString OAIStudentContact::getRelationship() const {
    return m_relationship;
}
void OAIStudentContact::setRelationship(const QString &relationship) {
    m_relationship = relationship;
    m_relationship_isSet = true;
}

bool OAIStudentContact::is_relationship_Set() const{
    return m_relationship_isSet;
}

bool OAIStudentContact::is_relationship_Valid() const{
    return m_relationship_isValid;
}

QString OAIStudentContact::getSisId() const {
    return m_sis_id;
}
void OAIStudentContact::setSisId(const QString &sis_id) {
    m_sis_id = sis_id;
    m_sis_id_isSet = true;
}

bool OAIStudentContact::is_sis_id_Set() const{
    return m_sis_id_isSet;
}

bool OAIStudentContact::is_sis_id_Valid() const{
    return m_sis_id_isValid;
}

QString OAIStudentContact::getStudent() const {
    return m_student;
}
void OAIStudentContact::setStudent(const QString &student) {
    m_student = student;
    m_student_isSet = true;
}

bool OAIStudentContact::is_student_Set() const{
    return m_student_isSet;
}

bool OAIStudentContact::is_student_Valid() const{
    return m_student_isValid;
}

QString OAIStudentContact::getType() const {
    return m_type;
}
void OAIStudentContact::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIStudentContact::is_type_Set() const{
    return m_type_isSet;
}

bool OAIStudentContact::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIStudentContact::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_district_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_relationship_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sis_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_student_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStudentContact::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
