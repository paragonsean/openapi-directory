/**
 * Data API
 * Serves the Clever Data API
 *
 * The version of the OpenAPI document: 1.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStudent.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStudent::OAIStudent(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStudent::OAIStudent() {
    this->initializeModel();
}

OAIStudent::~OAIStudent() {}

void OAIStudent::initializeModel() {

    m_created_isSet = false;
    m_created_isValid = false;

    m_credentials_isSet = false;
    m_credentials_isValid = false;

    m_district_isSet = false;
    m_district_isValid = false;

    m_dob_isSet = false;
    m_dob_isValid = false;

    m_ell_status_isSet = false;
    m_ell_status_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_gender_isSet = false;
    m_gender_isValid = false;

    m_grade_isSet = false;
    m_grade_isValid = false;

    m_graduation_year_isSet = false;
    m_graduation_year_isValid = false;

    m_hispanic_ethnicity_isSet = false;
    m_hispanic_ethnicity_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_modified_isSet = false;
    m_last_modified_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_race_isSet = false;
    m_race_isValid = false;

    m_school_isSet = false;
    m_school_isValid = false;

    m_schools_isSet = false;
    m_schools_isValid = false;

    m_sis_id_isSet = false;
    m_sis_id_isValid = false;

    m_state_id_isSet = false;
    m_state_id_isValid = false;

    m_student_number_isSet = false;
    m_student_number_isValid = false;
}

void OAIStudent::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStudent::fromJsonObject(QJsonObject json) {

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_credentials_isValid = ::OpenAPI::fromJsonValue(m_credentials, json[QString("credentials")]);
    m_credentials_isSet = !json[QString("credentials")].isNull() && m_credentials_isValid;

    m_district_isValid = ::OpenAPI::fromJsonValue(m_district, json[QString("district")]);
    m_district_isSet = !json[QString("district")].isNull() && m_district_isValid;

    m_dob_isValid = ::OpenAPI::fromJsonValue(m_dob, json[QString("dob")]);
    m_dob_isSet = !json[QString("dob")].isNull() && m_dob_isValid;

    m_ell_status_isValid = ::OpenAPI::fromJsonValue(m_ell_status, json[QString("ell_status")]);
    m_ell_status_isSet = !json[QString("ell_status")].isNull() && m_ell_status_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_gender_isValid = ::OpenAPI::fromJsonValue(m_gender, json[QString("gender")]);
    m_gender_isSet = !json[QString("gender")].isNull() && m_gender_isValid;

    m_grade_isValid = ::OpenAPI::fromJsonValue(m_grade, json[QString("grade")]);
    m_grade_isSet = !json[QString("grade")].isNull() && m_grade_isValid;

    m_graduation_year_isValid = ::OpenAPI::fromJsonValue(m_graduation_year, json[QString("graduation_year")]);
    m_graduation_year_isSet = !json[QString("graduation_year")].isNull() && m_graduation_year_isValid;

    m_hispanic_ethnicity_isValid = ::OpenAPI::fromJsonValue(m_hispanic_ethnicity, json[QString("hispanic_ethnicity")]);
    m_hispanic_ethnicity_isSet = !json[QString("hispanic_ethnicity")].isNull() && m_hispanic_ethnicity_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_modified_isValid = ::OpenAPI::fromJsonValue(m_last_modified, json[QString("last_modified")]);
    m_last_modified_isSet = !json[QString("last_modified")].isNull() && m_last_modified_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_race_isValid = ::OpenAPI::fromJsonValue(m_race, json[QString("race")]);
    m_race_isSet = !json[QString("race")].isNull() && m_race_isValid;

    m_school_isValid = ::OpenAPI::fromJsonValue(m_school, json[QString("school")]);
    m_school_isSet = !json[QString("school")].isNull() && m_school_isValid;

    m_schools_isValid = ::OpenAPI::fromJsonValue(m_schools, json[QString("schools")]);
    m_schools_isSet = !json[QString("schools")].isNull() && m_schools_isValid;

    m_sis_id_isValid = ::OpenAPI::fromJsonValue(m_sis_id, json[QString("sis_id")]);
    m_sis_id_isSet = !json[QString("sis_id")].isNull() && m_sis_id_isValid;

    m_state_id_isValid = ::OpenAPI::fromJsonValue(m_state_id, json[QString("state_id")]);
    m_state_id_isSet = !json[QString("state_id")].isNull() && m_state_id_isValid;

    m_student_number_isValid = ::OpenAPI::fromJsonValue(m_student_number, json[QString("student_number")]);
    m_student_number_isSet = !json[QString("student_number")].isNull() && m_student_number_isValid;
}

QString OAIStudent::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStudent::asJsonObject() const {
    QJsonObject obj;
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_credentials.isSet()) {
        obj.insert(QString("credentials"), ::OpenAPI::toJsonValue(m_credentials));
    }
    if (m_district_isSet) {
        obj.insert(QString("district"), ::OpenAPI::toJsonValue(m_district));
    }
    if (m_dob_isSet) {
        obj.insert(QString("dob"), ::OpenAPI::toJsonValue(m_dob));
    }
    if (m_ell_status_isSet) {
        obj.insert(QString("ell_status"), ::OpenAPI::toJsonValue(m_ell_status));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_gender_isSet) {
        obj.insert(QString("gender"), ::OpenAPI::toJsonValue(m_gender));
    }
    if (m_grade_isSet) {
        obj.insert(QString("grade"), ::OpenAPI::toJsonValue(m_grade));
    }
    if (m_graduation_year_isSet) {
        obj.insert(QString("graduation_year"), ::OpenAPI::toJsonValue(m_graduation_year));
    }
    if (m_hispanic_ethnicity_isSet) {
        obj.insert(QString("hispanic_ethnicity"), ::OpenAPI::toJsonValue(m_hispanic_ethnicity));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_modified_isSet) {
        obj.insert(QString("last_modified"), ::OpenAPI::toJsonValue(m_last_modified));
    }
    if (m_location.isSet()) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_name.isSet()) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_race_isSet) {
        obj.insert(QString("race"), ::OpenAPI::toJsonValue(m_race));
    }
    if (m_school_isSet) {
        obj.insert(QString("school"), ::OpenAPI::toJsonValue(m_school));
    }
    if (m_schools.size() > 0) {
        obj.insert(QString("schools"), ::OpenAPI::toJsonValue(m_schools));
    }
    if (m_sis_id_isSet) {
        obj.insert(QString("sis_id"), ::OpenAPI::toJsonValue(m_sis_id));
    }
    if (m_state_id_isSet) {
        obj.insert(QString("state_id"), ::OpenAPI::toJsonValue(m_state_id));
    }
    if (m_student_number_isSet) {
        obj.insert(QString("student_number"), ::OpenAPI::toJsonValue(m_student_number));
    }
    return obj;
}

QString OAIStudent::getCreated() const {
    return m_created;
}
void OAIStudent::setCreated(const QString &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAIStudent::is_created_Set() const{
    return m_created_isSet;
}

bool OAIStudent::is_created_Valid() const{
    return m_created_isValid;
}

OAICredentials OAIStudent::getCredentials() const {
    return m_credentials;
}
void OAIStudent::setCredentials(const OAICredentials &credentials) {
    m_credentials = credentials;
    m_credentials_isSet = true;
}

bool OAIStudent::is_credentials_Set() const{
    return m_credentials_isSet;
}

bool OAIStudent::is_credentials_Valid() const{
    return m_credentials_isValid;
}

QString OAIStudent::getDistrict() const {
    return m_district;
}
void OAIStudent::setDistrict(const QString &district) {
    m_district = district;
    m_district_isSet = true;
}

bool OAIStudent::is_district_Set() const{
    return m_district_isSet;
}

bool OAIStudent::is_district_Valid() const{
    return m_district_isValid;
}

QString OAIStudent::getDob() const {
    return m_dob;
}
void OAIStudent::setDob(const QString &dob) {
    m_dob = dob;
    m_dob_isSet = true;
}

bool OAIStudent::is_dob_Set() const{
    return m_dob_isSet;
}

bool OAIStudent::is_dob_Valid() const{
    return m_dob_isValid;
}

QString OAIStudent::getEllStatus() const {
    return m_ell_status;
}
void OAIStudent::setEllStatus(const QString &ell_status) {
    m_ell_status = ell_status;
    m_ell_status_isSet = true;
}

bool OAIStudent::is_ell_status_Set() const{
    return m_ell_status_isSet;
}

bool OAIStudent::is_ell_status_Valid() const{
    return m_ell_status_isValid;
}

QString OAIStudent::getEmail() const {
    return m_email;
}
void OAIStudent::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIStudent::is_email_Set() const{
    return m_email_isSet;
}

bool OAIStudent::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIStudent::getGender() const {
    return m_gender;
}
void OAIStudent::setGender(const QString &gender) {
    m_gender = gender;
    m_gender_isSet = true;
}

bool OAIStudent::is_gender_Set() const{
    return m_gender_isSet;
}

bool OAIStudent::is_gender_Valid() const{
    return m_gender_isValid;
}

QString OAIStudent::getGrade() const {
    return m_grade;
}
void OAIStudent::setGrade(const QString &grade) {
    m_grade = grade;
    m_grade_isSet = true;
}

bool OAIStudent::is_grade_Set() const{
    return m_grade_isSet;
}

bool OAIStudent::is_grade_Valid() const{
    return m_grade_isValid;
}

QString OAIStudent::getGraduationYear() const {
    return m_graduation_year;
}
void OAIStudent::setGraduationYear(const QString &graduation_year) {
    m_graduation_year = graduation_year;
    m_graduation_year_isSet = true;
}

bool OAIStudent::is_graduation_year_Set() const{
    return m_graduation_year_isSet;
}

bool OAIStudent::is_graduation_year_Valid() const{
    return m_graduation_year_isValid;
}

QString OAIStudent::getHispanicEthnicity() const {
    return m_hispanic_ethnicity;
}
void OAIStudent::setHispanicEthnicity(const QString &hispanic_ethnicity) {
    m_hispanic_ethnicity = hispanic_ethnicity;
    m_hispanic_ethnicity_isSet = true;
}

bool OAIStudent::is_hispanic_ethnicity_Set() const{
    return m_hispanic_ethnicity_isSet;
}

bool OAIStudent::is_hispanic_ethnicity_Valid() const{
    return m_hispanic_ethnicity_isValid;
}

QString OAIStudent::getId() const {
    return m_id;
}
void OAIStudent::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIStudent::is_id_Set() const{
    return m_id_isSet;
}

bool OAIStudent::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIStudent::getLastModified() const {
    return m_last_modified;
}
void OAIStudent::setLastModified(const QString &last_modified) {
    m_last_modified = last_modified;
    m_last_modified_isSet = true;
}

bool OAIStudent::is_last_modified_Set() const{
    return m_last_modified_isSet;
}

bool OAIStudent::is_last_modified_Valid() const{
    return m_last_modified_isValid;
}

OAILocation OAIStudent::getLocation() const {
    return m_location;
}
void OAIStudent::setLocation(const OAILocation &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIStudent::is_location_Set() const{
    return m_location_isSet;
}

bool OAIStudent::is_location_Valid() const{
    return m_location_isValid;
}

OAIName OAIStudent::getName() const {
    return m_name;
}
void OAIStudent::setName(const OAIName &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIStudent::is_name_Set() const{
    return m_name_isSet;
}

bool OAIStudent::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIStudent::getRace() const {
    return m_race;
}
void OAIStudent::setRace(const QString &race) {
    m_race = race;
    m_race_isSet = true;
}

bool OAIStudent::is_race_Set() const{
    return m_race_isSet;
}

bool OAIStudent::is_race_Valid() const{
    return m_race_isValid;
}

QString OAIStudent::getSchool() const {
    return m_school;
}
void OAIStudent::setSchool(const QString &school) {
    m_school = school;
    m_school_isSet = true;
}

bool OAIStudent::is_school_Set() const{
    return m_school_isSet;
}

bool OAIStudent::is_school_Valid() const{
    return m_school_isValid;
}

QList<QString> OAIStudent::getSchools() const {
    return m_schools;
}
void OAIStudent::setSchools(const QList<QString> &schools) {
    m_schools = schools;
    m_schools_isSet = true;
}

bool OAIStudent::is_schools_Set() const{
    return m_schools_isSet;
}

bool OAIStudent::is_schools_Valid() const{
    return m_schools_isValid;
}

QString OAIStudent::getSisId() const {
    return m_sis_id;
}
void OAIStudent::setSisId(const QString &sis_id) {
    m_sis_id = sis_id;
    m_sis_id_isSet = true;
}

bool OAIStudent::is_sis_id_Set() const{
    return m_sis_id_isSet;
}

bool OAIStudent::is_sis_id_Valid() const{
    return m_sis_id_isValid;
}

QString OAIStudent::getStateId() const {
    return m_state_id;
}
void OAIStudent::setStateId(const QString &state_id) {
    m_state_id = state_id;
    m_state_id_isSet = true;
}

bool OAIStudent::is_state_id_Set() const{
    return m_state_id_isSet;
}

bool OAIStudent::is_state_id_Valid() const{
    return m_state_id_isValid;
}

QString OAIStudent::getStudentNumber() const {
    return m_student_number;
}
void OAIStudent::setStudentNumber(const QString &student_number) {
    m_student_number = student_number;
    m_student_number_isSet = true;
}

bool OAIStudent::is_student_number_Set() const{
    return m_student_number_isSet;
}

bool OAIStudent::is_student_number_Valid() const{
    return m_student_number_isValid;
}

bool OAIStudent::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_credentials.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_district_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dob_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ell_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gender_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_grade_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_graduation_year_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hispanic_ethnicity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_race_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_school_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schools.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_sis_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_student_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStudent::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
