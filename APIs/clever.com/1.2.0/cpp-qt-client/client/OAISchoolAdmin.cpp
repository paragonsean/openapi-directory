/**
 * Data API
 * Serves the Clever Data API
 *
 * The version of the OpenAPI document: 1.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISchoolAdmin.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISchoolAdmin::OAISchoolAdmin(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISchoolAdmin::OAISchoolAdmin() {
    this->initializeModel();
}

OAISchoolAdmin::~OAISchoolAdmin() {}

void OAISchoolAdmin::initializeModel() {

    m_credentials_isSet = false;
    m_credentials_isValid = false;

    m_district_isSet = false;
    m_district_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_schools_isSet = false;
    m_schools_isValid = false;

    m_staff_id_isSet = false;
    m_staff_id_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAISchoolAdmin::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISchoolAdmin::fromJsonObject(QJsonObject json) {

    m_credentials_isValid = ::OpenAPI::fromJsonValue(m_credentials, json[QString("credentials")]);
    m_credentials_isSet = !json[QString("credentials")].isNull() && m_credentials_isValid;

    m_district_isValid = ::OpenAPI::fromJsonValue(m_district, json[QString("district")]);
    m_district_isSet = !json[QString("district")].isNull() && m_district_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_schools_isValid = ::OpenAPI::fromJsonValue(m_schools, json[QString("schools")]);
    m_schools_isSet = !json[QString("schools")].isNull() && m_schools_isValid;

    m_staff_id_isValid = ::OpenAPI::fromJsonValue(m_staff_id, json[QString("staff_id")]);
    m_staff_id_isSet = !json[QString("staff_id")].isNull() && m_staff_id_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAISchoolAdmin::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISchoolAdmin::asJsonObject() const {
    QJsonObject obj;
    if (m_credentials.isSet()) {
        obj.insert(QString("credentials"), ::OpenAPI::toJsonValue(m_credentials));
    }
    if (m_district_isSet) {
        obj.insert(QString("district"), ::OpenAPI::toJsonValue(m_district));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_name.isSet()) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_schools.size() > 0) {
        obj.insert(QString("schools"), ::OpenAPI::toJsonValue(m_schools));
    }
    if (m_staff_id_isSet) {
        obj.insert(QString("staff_id"), ::OpenAPI::toJsonValue(m_staff_id));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

OAICredentials OAISchoolAdmin::getCredentials() const {
    return m_credentials;
}
void OAISchoolAdmin::setCredentials(const OAICredentials &credentials) {
    m_credentials = credentials;
    m_credentials_isSet = true;
}

bool OAISchoolAdmin::is_credentials_Set() const{
    return m_credentials_isSet;
}

bool OAISchoolAdmin::is_credentials_Valid() const{
    return m_credentials_isValid;
}

QString OAISchoolAdmin::getDistrict() const {
    return m_district;
}
void OAISchoolAdmin::setDistrict(const QString &district) {
    m_district = district;
    m_district_isSet = true;
}

bool OAISchoolAdmin::is_district_Set() const{
    return m_district_isSet;
}

bool OAISchoolAdmin::is_district_Valid() const{
    return m_district_isValid;
}

QString OAISchoolAdmin::getEmail() const {
    return m_email;
}
void OAISchoolAdmin::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAISchoolAdmin::is_email_Set() const{
    return m_email_isSet;
}

bool OAISchoolAdmin::is_email_Valid() const{
    return m_email_isValid;
}

QString OAISchoolAdmin::getId() const {
    return m_id;
}
void OAISchoolAdmin::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAISchoolAdmin::is_id_Set() const{
    return m_id_isSet;
}

bool OAISchoolAdmin::is_id_Valid() const{
    return m_id_isValid;
}

OAIName OAISchoolAdmin::getName() const {
    return m_name;
}
void OAISchoolAdmin::setName(const OAIName &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISchoolAdmin::is_name_Set() const{
    return m_name_isSet;
}

bool OAISchoolAdmin::is_name_Valid() const{
    return m_name_isValid;
}

QList<QString> OAISchoolAdmin::getSchools() const {
    return m_schools;
}
void OAISchoolAdmin::setSchools(const QList<QString> &schools) {
    m_schools = schools;
    m_schools_isSet = true;
}

bool OAISchoolAdmin::is_schools_Set() const{
    return m_schools_isSet;
}

bool OAISchoolAdmin::is_schools_Valid() const{
    return m_schools_isValid;
}

QString OAISchoolAdmin::getStaffId() const {
    return m_staff_id;
}
void OAISchoolAdmin::setStaffId(const QString &staff_id) {
    m_staff_id = staff_id;
    m_staff_id_isSet = true;
}

bool OAISchoolAdmin::is_staff_id_Set() const{
    return m_staff_id_isSet;
}

bool OAISchoolAdmin::is_staff_id_Valid() const{
    return m_staff_id_isValid;
}

QString OAISchoolAdmin::getTitle() const {
    return m_title;
}
void OAISchoolAdmin::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAISchoolAdmin::is_title_Set() const{
    return m_title_isSet;
}

bool OAISchoolAdmin::is_title_Valid() const{
    return m_title_isValid;
}

bool OAISchoolAdmin::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_credentials.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_district_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_schools.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_staff_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISchoolAdmin::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
