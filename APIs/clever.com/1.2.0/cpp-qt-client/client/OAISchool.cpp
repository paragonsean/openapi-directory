/**
 * Data API
 * Serves the Clever Data API
 *
 * The version of the OpenAPI document: 1.2.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISchool.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISchool::OAISchool(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISchool::OAISchool() {
    this->initializeModel();
}

OAISchool::~OAISchool() {}

void OAISchool::initializeModel() {

    m_created_isSet = false;
    m_created_isValid = false;

    m_district_isSet = false;
    m_district_isValid = false;

    m_high_grade_isSet = false;
    m_high_grade_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_modified_isSet = false;
    m_last_modified_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;

    m_low_grade_isSet = false;
    m_low_grade_isValid = false;

    m_mdr_number_isSet = false;
    m_mdr_number_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_nces_id_isSet = false;
    m_nces_id_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;

    m_principal_isSet = false;
    m_principal_isValid = false;

    m_school_number_isSet = false;
    m_school_number_isValid = false;

    m_sis_id_isSet = false;
    m_sis_id_isValid = false;

    m_state_id_isSet = false;
    m_state_id_isValid = false;
}

void OAISchool::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISchool::fromJsonObject(QJsonObject json) {

    m_created_isValid = ::OpenAPI::fromJsonValue(m_created, json[QString("created")]);
    m_created_isSet = !json[QString("created")].isNull() && m_created_isValid;

    m_district_isValid = ::OpenAPI::fromJsonValue(m_district, json[QString("district")]);
    m_district_isSet = !json[QString("district")].isNull() && m_district_isValid;

    m_high_grade_isValid = ::OpenAPI::fromJsonValue(m_high_grade, json[QString("high_grade")]);
    m_high_grade_isSet = !json[QString("high_grade")].isNull() && m_high_grade_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_modified_isValid = ::OpenAPI::fromJsonValue(m_last_modified, json[QString("last_modified")]);
    m_last_modified_isSet = !json[QString("last_modified")].isNull() && m_last_modified_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_low_grade_isValid = ::OpenAPI::fromJsonValue(m_low_grade, json[QString("low_grade")]);
    m_low_grade_isSet = !json[QString("low_grade")].isNull() && m_low_grade_isValid;

    m_mdr_number_isValid = ::OpenAPI::fromJsonValue(m_mdr_number, json[QString("mdr_number")]);
    m_mdr_number_isSet = !json[QString("mdr_number")].isNull() && m_mdr_number_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_nces_id_isValid = ::OpenAPI::fromJsonValue(m_nces_id, json[QString("nces_id")]);
    m_nces_id_isSet = !json[QString("nces_id")].isNull() && m_nces_id_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("phone")]);
    m_phone_isSet = !json[QString("phone")].isNull() && m_phone_isValid;

    m_principal_isValid = ::OpenAPI::fromJsonValue(m_principal, json[QString("principal")]);
    m_principal_isSet = !json[QString("principal")].isNull() && m_principal_isValid;

    m_school_number_isValid = ::OpenAPI::fromJsonValue(m_school_number, json[QString("school_number")]);
    m_school_number_isSet = !json[QString("school_number")].isNull() && m_school_number_isValid;

    m_sis_id_isValid = ::OpenAPI::fromJsonValue(m_sis_id, json[QString("sis_id")]);
    m_sis_id_isSet = !json[QString("sis_id")].isNull() && m_sis_id_isValid;

    m_state_id_isValid = ::OpenAPI::fromJsonValue(m_state_id, json[QString("state_id")]);
    m_state_id_isSet = !json[QString("state_id")].isNull() && m_state_id_isValid;
}

QString OAISchool::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISchool::asJsonObject() const {
    QJsonObject obj;
    if (m_created_isSet) {
        obj.insert(QString("created"), ::OpenAPI::toJsonValue(m_created));
    }
    if (m_district_isSet) {
        obj.insert(QString("district"), ::OpenAPI::toJsonValue(m_district));
    }
    if (m_high_grade_isSet) {
        obj.insert(QString("high_grade"), ::OpenAPI::toJsonValue(m_high_grade));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_modified_isSet) {
        obj.insert(QString("last_modified"), ::OpenAPI::toJsonValue(m_last_modified));
    }
    if (m_location.isSet()) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_low_grade_isSet) {
        obj.insert(QString("low_grade"), ::OpenAPI::toJsonValue(m_low_grade));
    }
    if (m_mdr_number_isSet) {
        obj.insert(QString("mdr_number"), ::OpenAPI::toJsonValue(m_mdr_number));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_nces_id_isSet) {
        obj.insert(QString("nces_id"), ::OpenAPI::toJsonValue(m_nces_id));
    }
    if (m_phone_isSet) {
        obj.insert(QString("phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    if (m_principal.isSet()) {
        obj.insert(QString("principal"), ::OpenAPI::toJsonValue(m_principal));
    }
    if (m_school_number_isSet) {
        obj.insert(QString("school_number"), ::OpenAPI::toJsonValue(m_school_number));
    }
    if (m_sis_id_isSet) {
        obj.insert(QString("sis_id"), ::OpenAPI::toJsonValue(m_sis_id));
    }
    if (m_state_id_isSet) {
        obj.insert(QString("state_id"), ::OpenAPI::toJsonValue(m_state_id));
    }
    return obj;
}

QString OAISchool::getCreated() const {
    return m_created;
}
void OAISchool::setCreated(const QString &created) {
    m_created = created;
    m_created_isSet = true;
}

bool OAISchool::is_created_Set() const{
    return m_created_isSet;
}

bool OAISchool::is_created_Valid() const{
    return m_created_isValid;
}

QString OAISchool::getDistrict() const {
    return m_district;
}
void OAISchool::setDistrict(const QString &district) {
    m_district = district;
    m_district_isSet = true;
}

bool OAISchool::is_district_Set() const{
    return m_district_isSet;
}

bool OAISchool::is_district_Valid() const{
    return m_district_isValid;
}

QString OAISchool::getHighGrade() const {
    return m_high_grade;
}
void OAISchool::setHighGrade(const QString &high_grade) {
    m_high_grade = high_grade;
    m_high_grade_isSet = true;
}

bool OAISchool::is_high_grade_Set() const{
    return m_high_grade_isSet;
}

bool OAISchool::is_high_grade_Valid() const{
    return m_high_grade_isValid;
}

QString OAISchool::getId() const {
    return m_id;
}
void OAISchool::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAISchool::is_id_Set() const{
    return m_id_isSet;
}

bool OAISchool::is_id_Valid() const{
    return m_id_isValid;
}

QString OAISchool::getLastModified() const {
    return m_last_modified;
}
void OAISchool::setLastModified(const QString &last_modified) {
    m_last_modified = last_modified;
    m_last_modified_isSet = true;
}

bool OAISchool::is_last_modified_Set() const{
    return m_last_modified_isSet;
}

bool OAISchool::is_last_modified_Valid() const{
    return m_last_modified_isValid;
}

OAILocation OAISchool::getLocation() const {
    return m_location;
}
void OAISchool::setLocation(const OAILocation &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAISchool::is_location_Set() const{
    return m_location_isSet;
}

bool OAISchool::is_location_Valid() const{
    return m_location_isValid;
}

QString OAISchool::getLowGrade() const {
    return m_low_grade;
}
void OAISchool::setLowGrade(const QString &low_grade) {
    m_low_grade = low_grade;
    m_low_grade_isSet = true;
}

bool OAISchool::is_low_grade_Set() const{
    return m_low_grade_isSet;
}

bool OAISchool::is_low_grade_Valid() const{
    return m_low_grade_isValid;
}

QString OAISchool::getMdrNumber() const {
    return m_mdr_number;
}
void OAISchool::setMdrNumber(const QString &mdr_number) {
    m_mdr_number = mdr_number;
    m_mdr_number_isSet = true;
}

bool OAISchool::is_mdr_number_Set() const{
    return m_mdr_number_isSet;
}

bool OAISchool::is_mdr_number_Valid() const{
    return m_mdr_number_isValid;
}

QString OAISchool::getName() const {
    return m_name;
}
void OAISchool::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISchool::is_name_Set() const{
    return m_name_isSet;
}

bool OAISchool::is_name_Valid() const{
    return m_name_isValid;
}

QString OAISchool::getNcesId() const {
    return m_nces_id;
}
void OAISchool::setNcesId(const QString &nces_id) {
    m_nces_id = nces_id;
    m_nces_id_isSet = true;
}

bool OAISchool::is_nces_id_Set() const{
    return m_nces_id_isSet;
}

bool OAISchool::is_nces_id_Valid() const{
    return m_nces_id_isValid;
}

QString OAISchool::getPhone() const {
    return m_phone;
}
void OAISchool::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAISchool::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAISchool::is_phone_Valid() const{
    return m_phone_isValid;
}

OAIPrincipal OAISchool::getPrincipal() const {
    return m_principal;
}
void OAISchool::setPrincipal(const OAIPrincipal &principal) {
    m_principal = principal;
    m_principal_isSet = true;
}

bool OAISchool::is_principal_Set() const{
    return m_principal_isSet;
}

bool OAISchool::is_principal_Valid() const{
    return m_principal_isValid;
}

QString OAISchool::getSchoolNumber() const {
    return m_school_number;
}
void OAISchool::setSchoolNumber(const QString &school_number) {
    m_school_number = school_number;
    m_school_number_isSet = true;
}

bool OAISchool::is_school_number_Set() const{
    return m_school_number_isSet;
}

bool OAISchool::is_school_number_Valid() const{
    return m_school_number_isValid;
}

QString OAISchool::getSisId() const {
    return m_sis_id;
}
void OAISchool::setSisId(const QString &sis_id) {
    m_sis_id = sis_id;
    m_sis_id_isSet = true;
}

bool OAISchool::is_sis_id_Set() const{
    return m_sis_id_isSet;
}

bool OAISchool::is_sis_id_Valid() const{
    return m_sis_id_isValid;
}

QString OAISchool::getStateId() const {
    return m_state_id;
}
void OAISchool::setStateId(const QString &state_id) {
    m_state_id = state_id;
    m_state_id_isSet = true;
}

bool OAISchool::is_state_id_Set() const{
    return m_state_id_isSet;
}

bool OAISchool::is_state_id_Valid() const{
    return m_state_id_isValid;
}

bool OAISchool::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_district_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_high_grade_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_low_grade_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mdr_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_nces_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_principal.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_school_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sis_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISchool::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
