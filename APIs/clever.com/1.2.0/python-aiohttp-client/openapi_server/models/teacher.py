# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.credentials import Credentials
from openapi_server.models.name import Name
from openapi_server import util


class Teacher(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: str=None, credentials: Credentials=None, district: str=None, email: str=None, id: str=None, last_modified: str=None, name: Name=None, school: str=None, schools: List[str]=None, sis_id: str=None, state_id: str=None, teacher_number: str=None, title: str=None):
        """Teacher - a model defined in OpenAPI

        :param created: The created of this Teacher.
        :param credentials: The credentials of this Teacher.
        :param district: The district of this Teacher.
        :param email: The email of this Teacher.
        :param id: The id of this Teacher.
        :param last_modified: The last_modified of this Teacher.
        :param name: The name of this Teacher.
        :param school: The school of this Teacher.
        :param schools: The schools of this Teacher.
        :param sis_id: The sis_id of this Teacher.
        :param state_id: The state_id of this Teacher.
        :param teacher_number: The teacher_number of this Teacher.
        :param title: The title of this Teacher.
        """
        self.openapi_types = {
            'created': str,
            'credentials': Credentials,
            'district': str,
            'email': str,
            'id': str,
            'last_modified': str,
            'name': Name,
            'school': str,
            'schools': List[str],
            'sis_id': str,
            'state_id': str,
            'teacher_number': str,
            'title': str
        }

        self.attribute_map = {
            'created': 'created',
            'credentials': 'credentials',
            'district': 'district',
            'email': 'email',
            'id': 'id',
            'last_modified': 'last_modified',
            'name': 'name',
            'school': 'school',
            'schools': 'schools',
            'sis_id': 'sis_id',
            'state_id': 'state_id',
            'teacher_number': 'teacher_number',
            'title': 'title'
        }

        self._created = created
        self._credentials = credentials
        self._district = district
        self._email = email
        self._id = id
        self._last_modified = last_modified
        self._name = name
        self._school = school
        self._schools = schools
        self._sis_id = sis_id
        self._state_id = state_id
        self._teacher_number = teacher_number
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Teacher':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Teacher of this Teacher.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this Teacher.


        :return: The created of this Teacher.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this Teacher.


        :param created: The created of this Teacher.
        :type created: str
        """

        self._created = created

    @property
    def credentials(self):
        """Gets the credentials of this Teacher.


        :return: The credentials of this Teacher.
        :rtype: Credentials
        """
        return self._credentials

    @credentials.setter
    def credentials(self, credentials):
        """Sets the credentials of this Teacher.


        :param credentials: The credentials of this Teacher.
        :type credentials: Credentials
        """

        self._credentials = credentials

    @property
    def district(self):
        """Gets the district of this Teacher.


        :return: The district of this Teacher.
        :rtype: str
        """
        return self._district

    @district.setter
    def district(self, district):
        """Sets the district of this Teacher.


        :param district: The district of this Teacher.
        :type district: str
        """

        self._district = district

    @property
    def email(self):
        """Gets the email of this Teacher.


        :return: The email of this Teacher.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this Teacher.


        :param email: The email of this Teacher.
        :type email: str
        """

        self._email = email

    @property
    def id(self):
        """Gets the id of this Teacher.


        :return: The id of this Teacher.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Teacher.


        :param id: The id of this Teacher.
        :type id: str
        """

        self._id = id

    @property
    def last_modified(self):
        """Gets the last_modified of this Teacher.


        :return: The last_modified of this Teacher.
        :rtype: str
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this Teacher.


        :param last_modified: The last_modified of this Teacher.
        :type last_modified: str
        """

        self._last_modified = last_modified

    @property
    def name(self):
        """Gets the name of this Teacher.


        :return: The name of this Teacher.
        :rtype: Name
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Teacher.


        :param name: The name of this Teacher.
        :type name: Name
        """

        self._name = name

    @property
    def school(self):
        """Gets the school of this Teacher.


        :return: The school of this Teacher.
        :rtype: str
        """
        return self._school

    @school.setter
    def school(self, school):
        """Sets the school of this Teacher.


        :param school: The school of this Teacher.
        :type school: str
        """

        self._school = school

    @property
    def schools(self):
        """Gets the schools of this Teacher.


        :return: The schools of this Teacher.
        :rtype: List[str]
        """
        return self._schools

    @schools.setter
    def schools(self, schools):
        """Sets the schools of this Teacher.


        :param schools: The schools of this Teacher.
        :type schools: List[str]
        """

        self._schools = schools

    @property
    def sis_id(self):
        """Gets the sis_id of this Teacher.


        :return: The sis_id of this Teacher.
        :rtype: str
        """
        return self._sis_id

    @sis_id.setter
    def sis_id(self, sis_id):
        """Sets the sis_id of this Teacher.


        :param sis_id: The sis_id of this Teacher.
        :type sis_id: str
        """

        self._sis_id = sis_id

    @property
    def state_id(self):
        """Gets the state_id of this Teacher.


        :return: The state_id of this Teacher.
        :rtype: str
        """
        return self._state_id

    @state_id.setter
    def state_id(self, state_id):
        """Sets the state_id of this Teacher.


        :param state_id: The state_id of this Teacher.
        :type state_id: str
        """

        self._state_id = state_id

    @property
    def teacher_number(self):
        """Gets the teacher_number of this Teacher.


        :return: The teacher_number of this Teacher.
        :rtype: str
        """
        return self._teacher_number

    @teacher_number.setter
    def teacher_number(self, teacher_number):
        """Sets the teacher_number of this Teacher.


        :param teacher_number: The teacher_number of this Teacher.
        :type teacher_number: str
        """

        self._teacher_number = teacher_number

    @property
    def title(self):
        """Gets the title of this Teacher.


        :return: The title of this Teacher.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Teacher.


        :param title: The title of this Teacher.
        :type title: str
        """

        self._title = title
