# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.credentials import Credentials
from openapi_server.models.name import Name
from openapi_server import util


class SchoolAdmin(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, credentials: Credentials=None, district: str=None, email: str=None, id: str=None, name: Name=None, schools: List[str]=None, staff_id: str=None, title: str=None):
        """SchoolAdmin - a model defined in OpenAPI

        :param credentials: The credentials of this SchoolAdmin.
        :param district: The district of this SchoolAdmin.
        :param email: The email of this SchoolAdmin.
        :param id: The id of this SchoolAdmin.
        :param name: The name of this SchoolAdmin.
        :param schools: The schools of this SchoolAdmin.
        :param staff_id: The staff_id of this SchoolAdmin.
        :param title: The title of this SchoolAdmin.
        """
        self.openapi_types = {
            'credentials': Credentials,
            'district': str,
            'email': str,
            'id': str,
            'name': Name,
            'schools': List[str],
            'staff_id': str,
            'title': str
        }

        self.attribute_map = {
            'credentials': 'credentials',
            'district': 'district',
            'email': 'email',
            'id': 'id',
            'name': 'name',
            'schools': 'schools',
            'staff_id': 'staff_id',
            'title': 'title'
        }

        self._credentials = credentials
        self._district = district
        self._email = email
        self._id = id
        self._name = name
        self._schools = schools
        self._staff_id = staff_id
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SchoolAdmin':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SchoolAdmin of this SchoolAdmin.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def credentials(self):
        """Gets the credentials of this SchoolAdmin.


        :return: The credentials of this SchoolAdmin.
        :rtype: Credentials
        """
        return self._credentials

    @credentials.setter
    def credentials(self, credentials):
        """Sets the credentials of this SchoolAdmin.


        :param credentials: The credentials of this SchoolAdmin.
        :type credentials: Credentials
        """

        self._credentials = credentials

    @property
    def district(self):
        """Gets the district of this SchoolAdmin.


        :return: The district of this SchoolAdmin.
        :rtype: str
        """
        return self._district

    @district.setter
    def district(self, district):
        """Sets the district of this SchoolAdmin.


        :param district: The district of this SchoolAdmin.
        :type district: str
        """

        self._district = district

    @property
    def email(self):
        """Gets the email of this SchoolAdmin.


        :return: The email of this SchoolAdmin.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this SchoolAdmin.


        :param email: The email of this SchoolAdmin.
        :type email: str
        """

        self._email = email

    @property
    def id(self):
        """Gets the id of this SchoolAdmin.


        :return: The id of this SchoolAdmin.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SchoolAdmin.


        :param id: The id of this SchoolAdmin.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this SchoolAdmin.


        :return: The name of this SchoolAdmin.
        :rtype: Name
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SchoolAdmin.


        :param name: The name of this SchoolAdmin.
        :type name: Name
        """

        self._name = name

    @property
    def schools(self):
        """Gets the schools of this SchoolAdmin.


        :return: The schools of this SchoolAdmin.
        :rtype: List[str]
        """
        return self._schools

    @schools.setter
    def schools(self, schools):
        """Sets the schools of this SchoolAdmin.


        :param schools: The schools of this SchoolAdmin.
        :type schools: List[str]
        """

        self._schools = schools

    @property
    def staff_id(self):
        """Gets the staff_id of this SchoolAdmin.


        :return: The staff_id of this SchoolAdmin.
        :rtype: str
        """
        return self._staff_id

    @staff_id.setter
    def staff_id(self, staff_id):
        """Sets the staff_id of this SchoolAdmin.


        :param staff_id: The staff_id of this SchoolAdmin.
        :type staff_id: str
        """

        self._staff_id = staff_id

    @property
    def title(self):
        """Gets the title of this SchoolAdmin.


        :return: The title of this SchoolAdmin.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this SchoolAdmin.


        :param title: The title of this SchoolAdmin.
        :type title: str
        """

        self._title = title
