/*
 * Data API
 * Serves the Clever Data API
 *
 * The version of the OpenAPI document: 1.2.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DistrictAdminsResponse;
import org.openapitools.client.model.DistrictResponse;
import org.openapitools.client.model.DistrictStatusResponses;
import org.openapitools.client.model.DistrictsResponse;
import org.openapitools.client.model.NotFound;
import org.openapitools.client.model.SchoolsResponse;
import org.openapitools.client.model.SectionsResponse;
import org.openapitools.client.model.StudentsResponse;
import org.openapitools.client.model.TeachersResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DistrictsApi
 */
@Disabled
public class DistrictsApiTest {

    private final DistrictsApi api = new DistrictsApi();

    /**
     * Returns the admins for a district
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAdminsForDistrictTest() throws ApiException {
        String id = null;
        DistrictAdminsResponse response = api.getAdminsForDistrict(id);
        // TODO: test validations
    }

    /**
     * Returns a specific district
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDistrictTest() throws ApiException {
        String id = null;
        String include = null;
        DistrictResponse response = api.getDistrict(id, include);
        // TODO: test validations
    }

    /**
     * Returns the status of the district
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDistrictStatusTest() throws ApiException {
        String id = null;
        DistrictStatusResponses response = api.getDistrictStatus(id);
        // TODO: test validations
    }

    /**
     * Returns a list of districts. In practice this will only return the one district associated with the bearer token
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDistrictsTest() throws ApiException {
        DistrictsResponse response = api.getDistricts();
        // TODO: test validations
    }

    /**
     * Returns the schools for a district
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSchoolsForDistrictTest() throws ApiException {
        String id = null;
        Integer limit = null;
        String startingAfter = null;
        String endingBefore = null;
        String where = null;
        SchoolsResponse response = api.getSchoolsForDistrict(id, limit, startingAfter, endingBefore, where);
        // TODO: test validations
    }

    /**
     * Returns the sections for a district
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSectionsForDistrictTest() throws ApiException {
        String id = null;
        Integer limit = null;
        String startingAfter = null;
        String endingBefore = null;
        String where = null;
        SectionsResponse response = api.getSectionsForDistrict(id, limit, startingAfter, endingBefore, where);
        // TODO: test validations
    }

    /**
     * Returns the students for a district
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getStudentsForDistrictTest() throws ApiException {
        String id = null;
        Integer limit = null;
        String startingAfter = null;
        String endingBefore = null;
        String where = null;
        StudentsResponse response = api.getStudentsForDistrict(id, limit, startingAfter, endingBefore, where);
        // TODO: test validations
    }

    /**
     * Returns the teachers for a district
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTeachersForDistrictTest() throws ApiException {
        String id = null;
        Integer limit = null;
        String startingAfter = null;
        String endingBefore = null;
        String where = null;
        TeachersResponse response = api.getTeachersForDistrict(id, limit, startingAfter, endingBefore, where);
        // TODO: test validations
    }

}
