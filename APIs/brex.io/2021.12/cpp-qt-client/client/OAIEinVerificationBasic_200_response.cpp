/**
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEinVerificationBasic_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEinVerificationBasic_200_response::OAIEinVerificationBasic_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEinVerificationBasic_200_response::OAIEinVerificationBasic_200_response() {
    this->initializeModel();
}

OAIEinVerificationBasic_200_response::~OAIEinVerificationBasic_200_response() {}

void OAIEinVerificationBasic_200_response::initializeModel() {

    m_confidence_score_isSet = false;
    m_confidence_score_isValid = false;

    m_confidence_score_explanation_isSet = false;
    m_confidence_score_explanation_isValid = false;

    m_dba_score_isSet = false;
    m_dba_score_isValid = false;

    m_dba_score_explanation_isSet = false;
    m_dba_score_explanation_isValid = false;

    m_ein_isSet = false;
    m_ein_isValid = false;

    m_irs_score_isSet = false;
    m_irs_score_isValid = false;

    m_irs_score_explanation_isSet = false;
    m_irs_score_explanation_isValid = false;

    m_timestamp_isSet = false;
    m_timestamp_isValid = false;

    m_validation_status_isSet = false;
    m_validation_status_isValid = false;
}

void OAIEinVerificationBasic_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEinVerificationBasic_200_response::fromJsonObject(QJsonObject json) {

    m_confidence_score_isValid = ::OpenAPI::fromJsonValue(m_confidence_score, json[QString("confidence_score")]);
    m_confidence_score_isSet = !json[QString("confidence_score")].isNull() && m_confidence_score_isValid;

    m_confidence_score_explanation_isValid = ::OpenAPI::fromJsonValue(m_confidence_score_explanation, json[QString("confidence_score_explanation")]);
    m_confidence_score_explanation_isSet = !json[QString("confidence_score_explanation")].isNull() && m_confidence_score_explanation_isValid;

    m_dba_score_isValid = ::OpenAPI::fromJsonValue(m_dba_score, json[QString("dba_score")]);
    m_dba_score_isSet = !json[QString("dba_score")].isNull() && m_dba_score_isValid;

    m_dba_score_explanation_isValid = ::OpenAPI::fromJsonValue(m_dba_score_explanation, json[QString("dba_score_explanation")]);
    m_dba_score_explanation_isSet = !json[QString("dba_score_explanation")].isNull() && m_dba_score_explanation_isValid;

    m_ein_isValid = ::OpenAPI::fromJsonValue(m_ein, json[QString("ein")]);
    m_ein_isSet = !json[QString("ein")].isNull() && m_ein_isValid;

    m_irs_score_isValid = ::OpenAPI::fromJsonValue(m_irs_score, json[QString("irs_score")]);
    m_irs_score_isSet = !json[QString("irs_score")].isNull() && m_irs_score_isValid;

    m_irs_score_explanation_isValid = ::OpenAPI::fromJsonValue(m_irs_score_explanation, json[QString("irs_score_explanation")]);
    m_irs_score_explanation_isSet = !json[QString("irs_score_explanation")].isNull() && m_irs_score_explanation_isValid;

    m_timestamp_isValid = ::OpenAPI::fromJsonValue(m_timestamp, json[QString("timestamp")]);
    m_timestamp_isSet = !json[QString("timestamp")].isNull() && m_timestamp_isValid;

    m_validation_status_isValid = ::OpenAPI::fromJsonValue(m_validation_status, json[QString("validationStatus")]);
    m_validation_status_isSet = !json[QString("validationStatus")].isNull() && m_validation_status_isValid;
}

QString OAIEinVerificationBasic_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEinVerificationBasic_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_confidence_score_isSet) {
        obj.insert(QString("confidence_score"), ::OpenAPI::toJsonValue(m_confidence_score));
    }
    if (m_confidence_score_explanation_isSet) {
        obj.insert(QString("confidence_score_explanation"), ::OpenAPI::toJsonValue(m_confidence_score_explanation));
    }
    if (m_dba_score_isSet) {
        obj.insert(QString("dba_score"), ::OpenAPI::toJsonValue(m_dba_score));
    }
    if (m_dba_score_explanation_isSet) {
        obj.insert(QString("dba_score_explanation"), ::OpenAPI::toJsonValue(m_dba_score_explanation));
    }
    if (m_ein_isSet) {
        obj.insert(QString("ein"), ::OpenAPI::toJsonValue(m_ein));
    }
    if (m_irs_score_isSet) {
        obj.insert(QString("irs_score"), ::OpenAPI::toJsonValue(m_irs_score));
    }
    if (m_irs_score_explanation_isSet) {
        obj.insert(QString("irs_score_explanation"), ::OpenAPI::toJsonValue(m_irs_score_explanation));
    }
    if (m_timestamp_isSet) {
        obj.insert(QString("timestamp"), ::OpenAPI::toJsonValue(m_timestamp));
    }
    if (m_validation_status_isSet) {
        obj.insert(QString("validationStatus"), ::OpenAPI::toJsonValue(m_validation_status));
    }
    return obj;
}

QString OAIEinVerificationBasic_200_response::getConfidenceScore() const {
    return m_confidence_score;
}
void OAIEinVerificationBasic_200_response::setConfidenceScore(const QString &confidence_score) {
    m_confidence_score = confidence_score;
    m_confidence_score_isSet = true;
}

bool OAIEinVerificationBasic_200_response::is_confidence_score_Set() const{
    return m_confidence_score_isSet;
}

bool OAIEinVerificationBasic_200_response::is_confidence_score_Valid() const{
    return m_confidence_score_isValid;
}

QString OAIEinVerificationBasic_200_response::getConfidenceScoreExplanation() const {
    return m_confidence_score_explanation;
}
void OAIEinVerificationBasic_200_response::setConfidenceScoreExplanation(const QString &confidence_score_explanation) {
    m_confidence_score_explanation = confidence_score_explanation;
    m_confidence_score_explanation_isSet = true;
}

bool OAIEinVerificationBasic_200_response::is_confidence_score_explanation_Set() const{
    return m_confidence_score_explanation_isSet;
}

bool OAIEinVerificationBasic_200_response::is_confidence_score_explanation_Valid() const{
    return m_confidence_score_explanation_isValid;
}

QString OAIEinVerificationBasic_200_response::getDbaScore() const {
    return m_dba_score;
}
void OAIEinVerificationBasic_200_response::setDbaScore(const QString &dba_score) {
    m_dba_score = dba_score;
    m_dba_score_isSet = true;
}

bool OAIEinVerificationBasic_200_response::is_dba_score_Set() const{
    return m_dba_score_isSet;
}

bool OAIEinVerificationBasic_200_response::is_dba_score_Valid() const{
    return m_dba_score_isValid;
}

QString OAIEinVerificationBasic_200_response::getDbaScoreExplanation() const {
    return m_dba_score_explanation;
}
void OAIEinVerificationBasic_200_response::setDbaScoreExplanation(const QString &dba_score_explanation) {
    m_dba_score_explanation = dba_score_explanation;
    m_dba_score_explanation_isSet = true;
}

bool OAIEinVerificationBasic_200_response::is_dba_score_explanation_Set() const{
    return m_dba_score_explanation_isSet;
}

bool OAIEinVerificationBasic_200_response::is_dba_score_explanation_Valid() const{
    return m_dba_score_explanation_isValid;
}

QString OAIEinVerificationBasic_200_response::getEin() const {
    return m_ein;
}
void OAIEinVerificationBasic_200_response::setEin(const QString &ein) {
    m_ein = ein;
    m_ein_isSet = true;
}

bool OAIEinVerificationBasic_200_response::is_ein_Set() const{
    return m_ein_isSet;
}

bool OAIEinVerificationBasic_200_response::is_ein_Valid() const{
    return m_ein_isValid;
}

QString OAIEinVerificationBasic_200_response::getIrsScore() const {
    return m_irs_score;
}
void OAIEinVerificationBasic_200_response::setIrsScore(const QString &irs_score) {
    m_irs_score = irs_score;
    m_irs_score_isSet = true;
}

bool OAIEinVerificationBasic_200_response::is_irs_score_Set() const{
    return m_irs_score_isSet;
}

bool OAIEinVerificationBasic_200_response::is_irs_score_Valid() const{
    return m_irs_score_isValid;
}

QString OAIEinVerificationBasic_200_response::getIrsScoreExplanation() const {
    return m_irs_score_explanation;
}
void OAIEinVerificationBasic_200_response::setIrsScoreExplanation(const QString &irs_score_explanation) {
    m_irs_score_explanation = irs_score_explanation;
    m_irs_score_explanation_isSet = true;
}

bool OAIEinVerificationBasic_200_response::is_irs_score_explanation_Set() const{
    return m_irs_score_explanation_isSet;
}

bool OAIEinVerificationBasic_200_response::is_irs_score_explanation_Valid() const{
    return m_irs_score_explanation_isValid;
}

double OAIEinVerificationBasic_200_response::getTimestamp() const {
    return m_timestamp;
}
void OAIEinVerificationBasic_200_response::setTimestamp(const double &timestamp) {
    m_timestamp = timestamp;
    m_timestamp_isSet = true;
}

bool OAIEinVerificationBasic_200_response::is_timestamp_Set() const{
    return m_timestamp_isSet;
}

bool OAIEinVerificationBasic_200_response::is_timestamp_Valid() const{
    return m_timestamp_isValid;
}

bool OAIEinVerificationBasic_200_response::isValidationStatus() const {
    return m_validation_status;
}
void OAIEinVerificationBasic_200_response::setValidationStatus(const bool &validation_status) {
    m_validation_status = validation_status;
    m_validation_status_isSet = true;
}

bool OAIEinVerificationBasic_200_response::is_validation_status_Set() const{
    return m_validation_status_isSet;
}

bool OAIEinVerificationBasic_200_response::is_validation_status_Valid() const{
    return m_validation_status_isValid;
}

bool OAIEinVerificationBasic_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_confidence_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_confidence_score_explanation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dba_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dba_score_explanation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ein_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_irs_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_irs_score_explanation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_validation_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEinVerificationBasic_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_confidence_score_isValid && m_confidence_score_explanation_isValid && m_dba_score_isValid && m_dba_score_explanation_isValid && m_ein_isValid && m_irs_score_isValid && m_irs_score_explanation_isValid && m_timestamp_isValid && m_validation_status_isValid && true;
}

} // namespace OpenAPI
