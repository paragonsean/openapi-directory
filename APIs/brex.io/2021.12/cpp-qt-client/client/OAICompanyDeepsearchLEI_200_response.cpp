/**
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompanyDeepsearchLEI_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompanyDeepsearchLEI_200_response::OAICompanyDeepsearchLEI_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompanyDeepsearchLEI_200_response::OAICompanyDeepsearchLEI_200_response() {
    this->initializeModel();
}

OAICompanyDeepsearchLEI_200_response::~OAICompanyDeepsearchLEI_200_response() {}

void OAICompanyDeepsearchLEI_200_response::initializeModel() {

    m_company_isSet = false;
    m_company_isValid = false;

    m_current_page_isSet = false;
    m_current_page_isValid = false;

    m_isins_isSet = false;
    m_isins_isValid = false;

    m_last_page_isSet = false;
    m_last_page_isValid = false;

    m_lei_isSet = false;
    m_lei_isValid = false;

    m_next_page_isSet = false;
    m_next_page_isValid = false;

    m_total_num_isins_isSet = false;
    m_total_num_isins_isValid = false;

    m_valid_lei_isSet = false;
    m_valid_lei_isValid = false;
}

void OAICompanyDeepsearchLEI_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompanyDeepsearchLEI_200_response::fromJsonObject(QJsonObject json) {

    m_company_isValid = ::OpenAPI::fromJsonValue(m_company, json[QString("company")]);
    m_company_isSet = !json[QString("company")].isNull() && m_company_isValid;

    m_current_page_isValid = ::OpenAPI::fromJsonValue(m_current_page, json[QString("current_page")]);
    m_current_page_isSet = !json[QString("current_page")].isNull() && m_current_page_isValid;

    m_isins_isValid = ::OpenAPI::fromJsonValue(m_isins, json[QString("isins")]);
    m_isins_isSet = !json[QString("isins")].isNull() && m_isins_isValid;

    m_last_page_isValid = ::OpenAPI::fromJsonValue(m_last_page, json[QString("last_page")]);
    m_last_page_isSet = !json[QString("last_page")].isNull() && m_last_page_isValid;

    m_lei_isValid = ::OpenAPI::fromJsonValue(m_lei, json[QString("lei")]);
    m_lei_isSet = !json[QString("lei")].isNull() && m_lei_isValid;

    m_next_page_isValid = ::OpenAPI::fromJsonValue(m_next_page, json[QString("next_page")]);
    m_next_page_isSet = !json[QString("next_page")].isNull() && m_next_page_isValid;

    m_total_num_isins_isValid = ::OpenAPI::fromJsonValue(m_total_num_isins, json[QString("total_num_isins")]);
    m_total_num_isins_isSet = !json[QString("total_num_isins")].isNull() && m_total_num_isins_isValid;

    m_valid_lei_isValid = ::OpenAPI::fromJsonValue(m_valid_lei, json[QString("validLei")]);
    m_valid_lei_isSet = !json[QString("validLei")].isNull() && m_valid_lei_isValid;
}

QString OAICompanyDeepsearchLEI_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompanyDeepsearchLEI_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_company.isSet()) {
        obj.insert(QString("company"), ::OpenAPI::toJsonValue(m_company));
    }
    if (m_current_page_isSet) {
        obj.insert(QString("current_page"), ::OpenAPI::toJsonValue(m_current_page));
    }
    if (m_isins.size() > 0) {
        obj.insert(QString("isins"), ::OpenAPI::toJsonValue(m_isins));
    }
    if (m_last_page_isSet) {
        obj.insert(QString("last_page"), ::OpenAPI::toJsonValue(m_last_page));
    }
    if (m_lei_isSet) {
        obj.insert(QString("lei"), ::OpenAPI::toJsonValue(m_lei));
    }
    if (m_next_page_isSet) {
        obj.insert(QString("next_page"), ::OpenAPI::toJsonValue(m_next_page));
    }
    if (m_total_num_isins_isSet) {
        obj.insert(QString("total_num_isins"), ::OpenAPI::toJsonValue(m_total_num_isins));
    }
    if (m_valid_lei_isSet) {
        obj.insert(QString("validLei"), ::OpenAPI::toJsonValue(m_valid_lei));
    }
    return obj;
}

OAICompanyDeepsearchLEI_200_response_company OAICompanyDeepsearchLEI_200_response::getCompany() const {
    return m_company;
}
void OAICompanyDeepsearchLEI_200_response::setCompany(const OAICompanyDeepsearchLEI_200_response_company &company) {
    m_company = company;
    m_company_isSet = true;
}

bool OAICompanyDeepsearchLEI_200_response::is_company_Set() const{
    return m_company_isSet;
}

bool OAICompanyDeepsearchLEI_200_response::is_company_Valid() const{
    return m_company_isValid;
}

qint32 OAICompanyDeepsearchLEI_200_response::getCurrentPage() const {
    return m_current_page;
}
void OAICompanyDeepsearchLEI_200_response::setCurrentPage(const qint32 &current_page) {
    m_current_page = current_page;
    m_current_page_isSet = true;
}

bool OAICompanyDeepsearchLEI_200_response::is_current_page_Set() const{
    return m_current_page_isSet;
}

bool OAICompanyDeepsearchLEI_200_response::is_current_page_Valid() const{
    return m_current_page_isValid;
}

QList<QString> OAICompanyDeepsearchLEI_200_response::getIsins() const {
    return m_isins;
}
void OAICompanyDeepsearchLEI_200_response::setIsins(const QList<QString> &isins) {
    m_isins = isins;
    m_isins_isSet = true;
}

bool OAICompanyDeepsearchLEI_200_response::is_isins_Set() const{
    return m_isins_isSet;
}

bool OAICompanyDeepsearchLEI_200_response::is_isins_Valid() const{
    return m_isins_isValid;
}

qint32 OAICompanyDeepsearchLEI_200_response::getLastPage() const {
    return m_last_page;
}
void OAICompanyDeepsearchLEI_200_response::setLastPage(const qint32 &last_page) {
    m_last_page = last_page;
    m_last_page_isSet = true;
}

bool OAICompanyDeepsearchLEI_200_response::is_last_page_Set() const{
    return m_last_page_isSet;
}

bool OAICompanyDeepsearchLEI_200_response::is_last_page_Valid() const{
    return m_last_page_isValid;
}

QString OAICompanyDeepsearchLEI_200_response::getLei() const {
    return m_lei;
}
void OAICompanyDeepsearchLEI_200_response::setLei(const QString &lei) {
    m_lei = lei;
    m_lei_isSet = true;
}

bool OAICompanyDeepsearchLEI_200_response::is_lei_Set() const{
    return m_lei_isSet;
}

bool OAICompanyDeepsearchLEI_200_response::is_lei_Valid() const{
    return m_lei_isValid;
}

QString OAICompanyDeepsearchLEI_200_response::getNextPage() const {
    return m_next_page;
}
void OAICompanyDeepsearchLEI_200_response::setNextPage(const QString &next_page) {
    m_next_page = next_page;
    m_next_page_isSet = true;
}

bool OAICompanyDeepsearchLEI_200_response::is_next_page_Set() const{
    return m_next_page_isSet;
}

bool OAICompanyDeepsearchLEI_200_response::is_next_page_Valid() const{
    return m_next_page_isValid;
}

qint32 OAICompanyDeepsearchLEI_200_response::getTotalNumIsins() const {
    return m_total_num_isins;
}
void OAICompanyDeepsearchLEI_200_response::setTotalNumIsins(const qint32 &total_num_isins) {
    m_total_num_isins = total_num_isins;
    m_total_num_isins_isSet = true;
}

bool OAICompanyDeepsearchLEI_200_response::is_total_num_isins_Set() const{
    return m_total_num_isins_isSet;
}

bool OAICompanyDeepsearchLEI_200_response::is_total_num_isins_Valid() const{
    return m_total_num_isins_isValid;
}

bool OAICompanyDeepsearchLEI_200_response::isValidLei() const {
    return m_valid_lei;
}
void OAICompanyDeepsearchLEI_200_response::setValidLei(const bool &valid_lei) {
    m_valid_lei = valid_lei;
    m_valid_lei_isSet = true;
}

bool OAICompanyDeepsearchLEI_200_response::is_valid_lei_Set() const{
    return m_valid_lei_isSet;
}

bool OAICompanyDeepsearchLEI_200_response::is_valid_lei_Valid() const{
    return m_valid_lei_isValid;
}

bool OAICompanyDeepsearchLEI_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_company.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_current_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_isins.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lei_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_next_page_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_num_isins_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_valid_lei_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompanyDeepsearchLEI_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
