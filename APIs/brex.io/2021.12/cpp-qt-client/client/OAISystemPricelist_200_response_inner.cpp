/**
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISystemPricelist_200_response_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISystemPricelist_200_response_inner::OAISystemPricelist_200_response_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISystemPricelist_200_response_inner::OAISystemPricelist_200_response_inner() {
    this->initializeModel();
}

OAISystemPricelist_200_response_inner::~OAISystemPricelist_200_response_inner() {}

void OAISystemPricelist_200_response_inner::initializeModel() {

    m_cost_per_unit_isSet = false;
    m_cost_per_unit_isValid = false;

    m_max_isSet = false;
    m_max_isValid = false;

    m_metric_id_isSet = false;
    m_metric_id_isValid = false;

    m_min_isSet = false;
    m_min_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;
}

void OAISystemPricelist_200_response_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISystemPricelist_200_response_inner::fromJsonObject(QJsonObject json) {

    m_cost_per_unit_isValid = ::OpenAPI::fromJsonValue(m_cost_per_unit, json[QString("cost_per_unit")]);
    m_cost_per_unit_isSet = !json[QString("cost_per_unit")].isNull() && m_cost_per_unit_isValid;

    m_max_isValid = ::OpenAPI::fromJsonValue(m_max, json[QString("max")]);
    m_max_isSet = !json[QString("max")].isNull() && m_max_isValid;

    m_metric_id_isValid = ::OpenAPI::fromJsonValue(m_metric_id, json[QString("metric_id")]);
    m_metric_id_isSet = !json[QString("metric_id")].isNull() && m_metric_id_isValid;

    m_min_isValid = ::OpenAPI::fromJsonValue(m_min, json[QString("min")]);
    m_min_isSet = !json[QString("min")].isNull() && m_min_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("sku")]);
    m_sku_isSet = !json[QString("sku")].isNull() && m_sku_isValid;
}

QString OAISystemPricelist_200_response_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISystemPricelist_200_response_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_cost_per_unit_isSet) {
        obj.insert(QString("cost_per_unit"), ::OpenAPI::toJsonValue(m_cost_per_unit));
    }
    if (m_max_isSet) {
        obj.insert(QString("max"), ::OpenAPI::toJsonValue(m_max));
    }
    if (m_metric_id_isSet) {
        obj.insert(QString("metric_id"), ::OpenAPI::toJsonValue(m_metric_id));
    }
    if (m_min_isSet) {
        obj.insert(QString("min"), ::OpenAPI::toJsonValue(m_min));
    }
    if (m_sku_isSet) {
        obj.insert(QString("sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    return obj;
}

QString OAISystemPricelist_200_response_inner::getCostPerUnit() const {
    return m_cost_per_unit;
}
void OAISystemPricelist_200_response_inner::setCostPerUnit(const QString &cost_per_unit) {
    m_cost_per_unit = cost_per_unit;
    m_cost_per_unit_isSet = true;
}

bool OAISystemPricelist_200_response_inner::is_cost_per_unit_Set() const{
    return m_cost_per_unit_isSet;
}

bool OAISystemPricelist_200_response_inner::is_cost_per_unit_Valid() const{
    return m_cost_per_unit_isValid;
}

QString OAISystemPricelist_200_response_inner::getMax() const {
    return m_max;
}
void OAISystemPricelist_200_response_inner::setMax(const QString &max) {
    m_max = max;
    m_max_isSet = true;
}

bool OAISystemPricelist_200_response_inner::is_max_Set() const{
    return m_max_isSet;
}

bool OAISystemPricelist_200_response_inner::is_max_Valid() const{
    return m_max_isValid;
}

QString OAISystemPricelist_200_response_inner::getMetricId() const {
    return m_metric_id;
}
void OAISystemPricelist_200_response_inner::setMetricId(const QString &metric_id) {
    m_metric_id = metric_id;
    m_metric_id_isSet = true;
}

bool OAISystemPricelist_200_response_inner::is_metric_id_Set() const{
    return m_metric_id_isSet;
}

bool OAISystemPricelist_200_response_inner::is_metric_id_Valid() const{
    return m_metric_id_isValid;
}

QString OAISystemPricelist_200_response_inner::getMin() const {
    return m_min;
}
void OAISystemPricelist_200_response_inner::setMin(const QString &min) {
    m_min = min;
    m_min_isSet = true;
}

bool OAISystemPricelist_200_response_inner::is_min_Set() const{
    return m_min_isSet;
}

bool OAISystemPricelist_200_response_inner::is_min_Valid() const{
    return m_min_isValid;
}

QString OAISystemPricelist_200_response_inner::getSku() const {
    return m_sku;
}
void OAISystemPricelist_200_response_inner::setSku(const QString &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAISystemPricelist_200_response_inner::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAISystemPricelist_200_response_inner::is_sku_Valid() const{
    return m_sku_isValid;
}

bool OAISystemPricelist_200_response_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cost_per_unit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metric_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISystemPricelist_200_response_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
