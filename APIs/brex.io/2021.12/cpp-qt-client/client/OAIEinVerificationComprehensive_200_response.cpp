/**
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEinVerificationComprehensive_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEinVerificationComprehensive_200_response::OAIEinVerificationComprehensive_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEinVerificationComprehensive_200_response::OAIEinVerificationComprehensive_200_response() {
    this->initializeModel();
}

OAIEinVerificationComprehensive_200_response::~OAIEinVerificationComprehensive_200_response() {}

void OAIEinVerificationComprehensive_200_response::initializeModel() {

    m_ein_isSet = false;
    m_ein_isValid = false;

    m_matched_ein_companies_isSet = false;
    m_matched_ein_companies_isValid = false;

    m_timestamp_isSet = false;
    m_timestamp_isValid = false;

    m_validation_status_isSet = false;
    m_validation_status_isValid = false;
}

void OAIEinVerificationComprehensive_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEinVerificationComprehensive_200_response::fromJsonObject(QJsonObject json) {

    m_ein_isValid = ::OpenAPI::fromJsonValue(m_ein, json[QString("ein")]);
    m_ein_isSet = !json[QString("ein")].isNull() && m_ein_isValid;

    m_matched_ein_companies_isValid = ::OpenAPI::fromJsonValue(m_matched_ein_companies, json[QString("matched_ein_companies")]);
    m_matched_ein_companies_isSet = !json[QString("matched_ein_companies")].isNull() && m_matched_ein_companies_isValid;

    m_timestamp_isValid = ::OpenAPI::fromJsonValue(m_timestamp, json[QString("timestamp")]);
    m_timestamp_isSet = !json[QString("timestamp")].isNull() && m_timestamp_isValid;

    m_validation_status_isValid = ::OpenAPI::fromJsonValue(m_validation_status, json[QString("validationStatus")]);
    m_validation_status_isSet = !json[QString("validationStatus")].isNull() && m_validation_status_isValid;
}

QString OAIEinVerificationComprehensive_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEinVerificationComprehensive_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_ein_isSet) {
        obj.insert(QString("ein"), ::OpenAPI::toJsonValue(m_ein));
    }
    if (m_matched_ein_companies.isSet()) {
        obj.insert(QString("matched_ein_companies"), ::OpenAPI::toJsonValue(m_matched_ein_companies));
    }
    if (m_timestamp_isSet) {
        obj.insert(QString("timestamp"), ::OpenAPI::toJsonValue(m_timestamp));
    }
    if (m_validation_status_isSet) {
        obj.insert(QString("validationStatus"), ::OpenAPI::toJsonValue(m_validation_status));
    }
    return obj;
}

QString OAIEinVerificationComprehensive_200_response::getEin() const {
    return m_ein;
}
void OAIEinVerificationComprehensive_200_response::setEin(const QString &ein) {
    m_ein = ein;
    m_ein_isSet = true;
}

bool OAIEinVerificationComprehensive_200_response::is_ein_Set() const{
    return m_ein_isSet;
}

bool OAIEinVerificationComprehensive_200_response::is_ein_Valid() const{
    return m_ein_isValid;
}

OAIObject OAIEinVerificationComprehensive_200_response::getMatchedEinCompanies() const {
    return m_matched_ein_companies;
}
void OAIEinVerificationComprehensive_200_response::setMatchedEinCompanies(const OAIObject &matched_ein_companies) {
    m_matched_ein_companies = matched_ein_companies;
    m_matched_ein_companies_isSet = true;
}

bool OAIEinVerificationComprehensive_200_response::is_matched_ein_companies_Set() const{
    return m_matched_ein_companies_isSet;
}

bool OAIEinVerificationComprehensive_200_response::is_matched_ein_companies_Valid() const{
    return m_matched_ein_companies_isValid;
}

double OAIEinVerificationComprehensive_200_response::getTimestamp() const {
    return m_timestamp;
}
void OAIEinVerificationComprehensive_200_response::setTimestamp(const double &timestamp) {
    m_timestamp = timestamp;
    m_timestamp_isSet = true;
}

bool OAIEinVerificationComprehensive_200_response::is_timestamp_Set() const{
    return m_timestamp_isSet;
}

bool OAIEinVerificationComprehensive_200_response::is_timestamp_Valid() const{
    return m_timestamp_isValid;
}

bool OAIEinVerificationComprehensive_200_response::isValidationStatus() const {
    return m_validation_status;
}
void OAIEinVerificationComprehensive_200_response::setValidationStatus(const bool &validation_status) {
    m_validation_status = validation_status;
    m_validation_status_isSet = true;
}

bool OAIEinVerificationComprehensive_200_response::is_validation_status_Set() const{
    return m_validation_status_isSet;
}

bool OAIEinVerificationComprehensive_200_response::is_validation_status_Valid() const{
    return m_validation_status_isValid;
}

bool OAIEinVerificationComprehensive_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ein_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_matched_ein_companies.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_validation_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEinVerificationComprehensive_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_ein_isValid && m_matched_ein_companies_isValid && m_timestamp_isValid && m_validation_status_isValid && true;
}

} // namespace OpenAPI
