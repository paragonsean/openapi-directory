/**
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEinVerificationLookup_200_response_matched_ein_companies_inner.h
 *
 * 
 */

#ifndef OAIEinVerificationLookup_200_response_matched_ein_companies_inner_H
#define OAIEinVerificationLookup_200_response_matched_ein_companies_inner_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIEinVerificationLookup_200_response_matched_ein_companies_inner : public OAIObject {
public:
    OAIEinVerificationLookup_200_response_matched_ein_companies_inner();
    OAIEinVerificationLookup_200_response_matched_ein_companies_inner(QString json);
    ~OAIEinVerificationLookup_200_response_matched_ein_companies_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAddress() const;
    void setAddress(const QList<QString> &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    double getCompanyScore() const;
    void setCompanyScore(const double &company_score);
    bool is_company_score_Set() const;
    bool is_company_score_Valid() const;

    QString getCompanyScoreExplanation() const;
    void setCompanyScoreExplanation(const QString &company_score_explanation);
    bool is_company_score_explanation_Set() const;
    bool is_company_score_explanation_Valid() const;

    double getConfidenceScore() const;
    void setConfidenceScore(const double &confidence_score);
    bool is_confidence_score_Set() const;
    bool is_confidence_score_Valid() const;

    QString getConfidenceScoreExplanation() const;
    void setConfidenceScoreExplanation(const QString &confidence_score_explanation);
    bool is_confidence_score_explanation_Set() const;
    bool is_confidence_score_explanation_Valid() const;

    QString getDbaScore() const;
    void setDbaScore(const QString &dba_score);
    bool is_dba_score_Set() const;
    bool is_dba_score_Valid() const;

    QString getDbaScoreExplanation() const;
    void setDbaScoreExplanation(const QString &dba_score_explanation);
    bool is_dba_score_explanation_Set() const;
    bool is_dba_score_explanation_Valid() const;

    QString getEin() const;
    void setEin(const QString &ein);
    bool is_ein_Set() const;
    bool is_ein_Valid() const;

    QList<QString> getFormattedAddress() const;
    void setFormattedAddress(const QList<QString> &formatted_address);
    bool is_formatted_address_Set() const;
    bool is_formatted_address_Valid() const;

    QString getIrsScore() const;
    void setIrsScore(const QString &irs_score);
    bool is_irs_score_Set() const;
    bool is_irs_score_Valid() const;

    QString getIrsScoreExplanation() const;
    void setIrsScoreExplanation(const QString &irs_score_explanation);
    bool is_irs_score_explanation_Set() const;
    bool is_irs_score_explanation_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getProvidedStatus() const;
    void setProvidedStatus(const QString &provided_status);
    bool is_provided_status_Set() const;
    bool is_provided_status_Valid() const;

    QString getProvidedStatusExplanation() const;
    void setProvidedStatusExplanation(const QString &provided_status_explanation);
    bool is_provided_status_explanation_Set() const;
    bool is_provided_status_explanation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    double m_company_score;
    bool m_company_score_isSet;
    bool m_company_score_isValid;

    QString m_company_score_explanation;
    bool m_company_score_explanation_isSet;
    bool m_company_score_explanation_isValid;

    double m_confidence_score;
    bool m_confidence_score_isSet;
    bool m_confidence_score_isValid;

    QString m_confidence_score_explanation;
    bool m_confidence_score_explanation_isSet;
    bool m_confidence_score_explanation_isValid;

    QString m_dba_score;
    bool m_dba_score_isSet;
    bool m_dba_score_isValid;

    QString m_dba_score_explanation;
    bool m_dba_score_explanation_isSet;
    bool m_dba_score_explanation_isValid;

    QString m_ein;
    bool m_ein_isSet;
    bool m_ein_isValid;

    QList<QString> m_formatted_address;
    bool m_formatted_address_isSet;
    bool m_formatted_address_isValid;

    QString m_irs_score;
    bool m_irs_score_isSet;
    bool m_irs_score_isValid;

    QString m_irs_score_explanation;
    bool m_irs_score_explanation_isSet;
    bool m_irs_score_explanation_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_provided_status;
    bool m_provided_status_isSet;
    bool m_provided_status_isValid;

    QString m_provided_status_explanation;
    bool m_provided_status_explanation_isSet;
    bool m_provided_status_explanation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEinVerificationLookup_200_response_matched_ein_companies_inner)

#endif // OAIEinVerificationLookup_200_response_matched_ein_companies_inner_H
