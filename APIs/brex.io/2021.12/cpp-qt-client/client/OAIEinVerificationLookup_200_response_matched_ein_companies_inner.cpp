/**
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEinVerificationLookup_200_response_matched_ein_companies_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEinVerificationLookup_200_response_matched_ein_companies_inner::OAIEinVerificationLookup_200_response_matched_ein_companies_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEinVerificationLookup_200_response_matched_ein_companies_inner::OAIEinVerificationLookup_200_response_matched_ein_companies_inner() {
    this->initializeModel();
}

OAIEinVerificationLookup_200_response_matched_ein_companies_inner::~OAIEinVerificationLookup_200_response_matched_ein_companies_inner() {}

void OAIEinVerificationLookup_200_response_matched_ein_companies_inner::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_company_score_isSet = false;
    m_company_score_isValid = false;

    m_company_score_explanation_isSet = false;
    m_company_score_explanation_isValid = false;

    m_confidence_score_isSet = false;
    m_confidence_score_isValid = false;

    m_confidence_score_explanation_isSet = false;
    m_confidence_score_explanation_isValid = false;

    m_dba_score_isSet = false;
    m_dba_score_isValid = false;

    m_dba_score_explanation_isSet = false;
    m_dba_score_explanation_isValid = false;

    m_ein_isSet = false;
    m_ein_isValid = false;

    m_formatted_address_isSet = false;
    m_formatted_address_isValid = false;

    m_irs_score_isSet = false;
    m_irs_score_isValid = false;

    m_irs_score_explanation_isSet = false;
    m_irs_score_explanation_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_provided_status_isSet = false;
    m_provided_status_isValid = false;

    m_provided_status_explanation_isSet = false;
    m_provided_status_explanation_isValid = false;
}

void OAIEinVerificationLookup_200_response_matched_ein_companies_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEinVerificationLookup_200_response_matched_ein_companies_inner::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_company_score_isValid = ::OpenAPI::fromJsonValue(m_company_score, json[QString("company_score")]);
    m_company_score_isSet = !json[QString("company_score")].isNull() && m_company_score_isValid;

    m_company_score_explanation_isValid = ::OpenAPI::fromJsonValue(m_company_score_explanation, json[QString("company_score_explanation")]);
    m_company_score_explanation_isSet = !json[QString("company_score_explanation")].isNull() && m_company_score_explanation_isValid;

    m_confidence_score_isValid = ::OpenAPI::fromJsonValue(m_confidence_score, json[QString("confidence_score")]);
    m_confidence_score_isSet = !json[QString("confidence_score")].isNull() && m_confidence_score_isValid;

    m_confidence_score_explanation_isValid = ::OpenAPI::fromJsonValue(m_confidence_score_explanation, json[QString("confidence_score_explanation")]);
    m_confidence_score_explanation_isSet = !json[QString("confidence_score_explanation")].isNull() && m_confidence_score_explanation_isValid;

    m_dba_score_isValid = ::OpenAPI::fromJsonValue(m_dba_score, json[QString("dba_score")]);
    m_dba_score_isSet = !json[QString("dba_score")].isNull() && m_dba_score_isValid;

    m_dba_score_explanation_isValid = ::OpenAPI::fromJsonValue(m_dba_score_explanation, json[QString("dba_score_explanation")]);
    m_dba_score_explanation_isSet = !json[QString("dba_score_explanation")].isNull() && m_dba_score_explanation_isValid;

    m_ein_isValid = ::OpenAPI::fromJsonValue(m_ein, json[QString("ein")]);
    m_ein_isSet = !json[QString("ein")].isNull() && m_ein_isValid;

    m_formatted_address_isValid = ::OpenAPI::fromJsonValue(m_formatted_address, json[QString("formattedAddress")]);
    m_formatted_address_isSet = !json[QString("formattedAddress")].isNull() && m_formatted_address_isValid;

    m_irs_score_isValid = ::OpenAPI::fromJsonValue(m_irs_score, json[QString("irs_score")]);
    m_irs_score_isSet = !json[QString("irs_score")].isNull() && m_irs_score_isValid;

    m_irs_score_explanation_isValid = ::OpenAPI::fromJsonValue(m_irs_score_explanation, json[QString("irs_score_explanation")]);
    m_irs_score_explanation_isSet = !json[QString("irs_score_explanation")].isNull() && m_irs_score_explanation_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_provided_status_isValid = ::OpenAPI::fromJsonValue(m_provided_status, json[QString("provided_status")]);
    m_provided_status_isSet = !json[QString("provided_status")].isNull() && m_provided_status_isValid;

    m_provided_status_explanation_isValid = ::OpenAPI::fromJsonValue(m_provided_status_explanation, json[QString("provided_status_explanation")]);
    m_provided_status_explanation_isSet = !json[QString("provided_status_explanation")].isNull() && m_provided_status_explanation_isValid;
}

QString OAIEinVerificationLookup_200_response_matched_ein_companies_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEinVerificationLookup_200_response_matched_ein_companies_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_address.size() > 0) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_company_score_isSet) {
        obj.insert(QString("company_score"), ::OpenAPI::toJsonValue(m_company_score));
    }
    if (m_company_score_explanation_isSet) {
        obj.insert(QString("company_score_explanation"), ::OpenAPI::toJsonValue(m_company_score_explanation));
    }
    if (m_confidence_score_isSet) {
        obj.insert(QString("confidence_score"), ::OpenAPI::toJsonValue(m_confidence_score));
    }
    if (m_confidence_score_explanation_isSet) {
        obj.insert(QString("confidence_score_explanation"), ::OpenAPI::toJsonValue(m_confidence_score_explanation));
    }
    if (m_dba_score_isSet) {
        obj.insert(QString("dba_score"), ::OpenAPI::toJsonValue(m_dba_score));
    }
    if (m_dba_score_explanation_isSet) {
        obj.insert(QString("dba_score_explanation"), ::OpenAPI::toJsonValue(m_dba_score_explanation));
    }
    if (m_ein_isSet) {
        obj.insert(QString("ein"), ::OpenAPI::toJsonValue(m_ein));
    }
    if (m_formatted_address.size() > 0) {
        obj.insert(QString("formattedAddress"), ::OpenAPI::toJsonValue(m_formatted_address));
    }
    if (m_irs_score_isSet) {
        obj.insert(QString("irs_score"), ::OpenAPI::toJsonValue(m_irs_score));
    }
    if (m_irs_score_explanation_isSet) {
        obj.insert(QString("irs_score_explanation"), ::OpenAPI::toJsonValue(m_irs_score_explanation));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_provided_status_isSet) {
        obj.insert(QString("provided_status"), ::OpenAPI::toJsonValue(m_provided_status));
    }
    if (m_provided_status_explanation_isSet) {
        obj.insert(QString("provided_status_explanation"), ::OpenAPI::toJsonValue(m_provided_status_explanation));
    }
    return obj;
}

QList<QString> OAIEinVerificationLookup_200_response_matched_ein_companies_inner::getAddress() const {
    return m_address;
}
void OAIEinVerificationLookup_200_response_matched_ein_companies_inner::setAddress(const QList<QString> &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_address_Set() const{
    return m_address_isSet;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_address_Valid() const{
    return m_address_isValid;
}

double OAIEinVerificationLookup_200_response_matched_ein_companies_inner::getCompanyScore() const {
    return m_company_score;
}
void OAIEinVerificationLookup_200_response_matched_ein_companies_inner::setCompanyScore(const double &company_score) {
    m_company_score = company_score;
    m_company_score_isSet = true;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_company_score_Set() const{
    return m_company_score_isSet;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_company_score_Valid() const{
    return m_company_score_isValid;
}

QString OAIEinVerificationLookup_200_response_matched_ein_companies_inner::getCompanyScoreExplanation() const {
    return m_company_score_explanation;
}
void OAIEinVerificationLookup_200_response_matched_ein_companies_inner::setCompanyScoreExplanation(const QString &company_score_explanation) {
    m_company_score_explanation = company_score_explanation;
    m_company_score_explanation_isSet = true;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_company_score_explanation_Set() const{
    return m_company_score_explanation_isSet;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_company_score_explanation_Valid() const{
    return m_company_score_explanation_isValid;
}

double OAIEinVerificationLookup_200_response_matched_ein_companies_inner::getConfidenceScore() const {
    return m_confidence_score;
}
void OAIEinVerificationLookup_200_response_matched_ein_companies_inner::setConfidenceScore(const double &confidence_score) {
    m_confidence_score = confidence_score;
    m_confidence_score_isSet = true;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_confidence_score_Set() const{
    return m_confidence_score_isSet;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_confidence_score_Valid() const{
    return m_confidence_score_isValid;
}

QString OAIEinVerificationLookup_200_response_matched_ein_companies_inner::getConfidenceScoreExplanation() const {
    return m_confidence_score_explanation;
}
void OAIEinVerificationLookup_200_response_matched_ein_companies_inner::setConfidenceScoreExplanation(const QString &confidence_score_explanation) {
    m_confidence_score_explanation = confidence_score_explanation;
    m_confidence_score_explanation_isSet = true;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_confidence_score_explanation_Set() const{
    return m_confidence_score_explanation_isSet;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_confidence_score_explanation_Valid() const{
    return m_confidence_score_explanation_isValid;
}

QString OAIEinVerificationLookup_200_response_matched_ein_companies_inner::getDbaScore() const {
    return m_dba_score;
}
void OAIEinVerificationLookup_200_response_matched_ein_companies_inner::setDbaScore(const QString &dba_score) {
    m_dba_score = dba_score;
    m_dba_score_isSet = true;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_dba_score_Set() const{
    return m_dba_score_isSet;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_dba_score_Valid() const{
    return m_dba_score_isValid;
}

QString OAIEinVerificationLookup_200_response_matched_ein_companies_inner::getDbaScoreExplanation() const {
    return m_dba_score_explanation;
}
void OAIEinVerificationLookup_200_response_matched_ein_companies_inner::setDbaScoreExplanation(const QString &dba_score_explanation) {
    m_dba_score_explanation = dba_score_explanation;
    m_dba_score_explanation_isSet = true;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_dba_score_explanation_Set() const{
    return m_dba_score_explanation_isSet;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_dba_score_explanation_Valid() const{
    return m_dba_score_explanation_isValid;
}

QString OAIEinVerificationLookup_200_response_matched_ein_companies_inner::getEin() const {
    return m_ein;
}
void OAIEinVerificationLookup_200_response_matched_ein_companies_inner::setEin(const QString &ein) {
    m_ein = ein;
    m_ein_isSet = true;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_ein_Set() const{
    return m_ein_isSet;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_ein_Valid() const{
    return m_ein_isValid;
}

QList<QString> OAIEinVerificationLookup_200_response_matched_ein_companies_inner::getFormattedAddress() const {
    return m_formatted_address;
}
void OAIEinVerificationLookup_200_response_matched_ein_companies_inner::setFormattedAddress(const QList<QString> &formatted_address) {
    m_formatted_address = formatted_address;
    m_formatted_address_isSet = true;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_formatted_address_Set() const{
    return m_formatted_address_isSet;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_formatted_address_Valid() const{
    return m_formatted_address_isValid;
}

QString OAIEinVerificationLookup_200_response_matched_ein_companies_inner::getIrsScore() const {
    return m_irs_score;
}
void OAIEinVerificationLookup_200_response_matched_ein_companies_inner::setIrsScore(const QString &irs_score) {
    m_irs_score = irs_score;
    m_irs_score_isSet = true;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_irs_score_Set() const{
    return m_irs_score_isSet;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_irs_score_Valid() const{
    return m_irs_score_isValid;
}

QString OAIEinVerificationLookup_200_response_matched_ein_companies_inner::getIrsScoreExplanation() const {
    return m_irs_score_explanation;
}
void OAIEinVerificationLookup_200_response_matched_ein_companies_inner::setIrsScoreExplanation(const QString &irs_score_explanation) {
    m_irs_score_explanation = irs_score_explanation;
    m_irs_score_explanation_isSet = true;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_irs_score_explanation_Set() const{
    return m_irs_score_explanation_isSet;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_irs_score_explanation_Valid() const{
    return m_irs_score_explanation_isValid;
}

QString OAIEinVerificationLookup_200_response_matched_ein_companies_inner::getName() const {
    return m_name;
}
void OAIEinVerificationLookup_200_response_matched_ein_companies_inner::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_name_Set() const{
    return m_name_isSet;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIEinVerificationLookup_200_response_matched_ein_companies_inner::getProvidedStatus() const {
    return m_provided_status;
}
void OAIEinVerificationLookup_200_response_matched_ein_companies_inner::setProvidedStatus(const QString &provided_status) {
    m_provided_status = provided_status;
    m_provided_status_isSet = true;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_provided_status_Set() const{
    return m_provided_status_isSet;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_provided_status_Valid() const{
    return m_provided_status_isValid;
}

QString OAIEinVerificationLookup_200_response_matched_ein_companies_inner::getProvidedStatusExplanation() const {
    return m_provided_status_explanation;
}
void OAIEinVerificationLookup_200_response_matched_ein_companies_inner::setProvidedStatusExplanation(const QString &provided_status_explanation) {
    m_provided_status_explanation = provided_status_explanation;
    m_provided_status_explanation_isSet = true;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_provided_status_explanation_Set() const{
    return m_provided_status_explanation_isSet;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::is_provided_status_explanation_Valid() const{
    return m_provided_status_explanation_isValid;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_score_explanation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_confidence_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_confidence_score_explanation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dba_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dba_score_explanation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ein_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_formatted_address.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_irs_score_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_irs_score_explanation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provided_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_provided_status_explanation_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEinVerificationLookup_200_response_matched_ein_companies_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
