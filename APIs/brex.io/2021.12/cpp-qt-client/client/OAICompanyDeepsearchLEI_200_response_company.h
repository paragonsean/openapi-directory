/**
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICompanyDeepsearchLEI_200_response_company.h
 *
 * 
 */

#ifndef OAICompanyDeepsearchLEI_200_response_company_H
#define OAICompanyDeepsearchLEI_200_response_company_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICompanyDeepsearchLEI_200_response_company : public OAIObject {
public:
    OAICompanyDeepsearchLEI_200_response_company();
    OAICompanyDeepsearchLEI_200_response_company(QString json);
    ~OAICompanyDeepsearchLEI_200_response_company() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAddress() const;
    void setAddress(const QList<QString> &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    QString getDateOfIncorporation() const;
    void setDateOfIncorporation(const QString &date_of_incorporation);
    bool is_date_of_incorporation_Set() const;
    bool is_date_of_incorporation_Valid() const;

    OAIObject getExtraData() const;
    void setExtraData(const OAIObject &extra_data);
    bool is_extra_data_Set() const;
    bool is_extra_data_Valid() const;

    QList<QString> getFormattedAddress() const;
    void setFormattedAddress(const QList<QString> &formatted_address);
    bool is_formatted_address_Set() const;
    bool is_formatted_address_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLegalForm() const;
    void setLegalForm(const QString &legal_form);
    bool is_legal_form_Set() const;
    bool is_legal_form_Valid() const;

    QList<QString> getManagingDirectors() const;
    void setManagingDirectors(const QList<QString> &managing_directors);
    bool is_managing_directors_Set() const;
    bool is_managing_directors_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getRegistrationNumber() const;
    void setRegistrationNumber(const QString &registration_number);
    bool is_registration_number_Set() const;
    bool is_registration_number_Valid() const;

    qint32 getRequestTime() const;
    void setRequestTime(const qint32 &request_time);
    bool is_request_time_Set() const;
    bool is_request_time_Valid() const;

    QList<QString> getSecretaries() const;
    void setSecretaries(const QList<QString> &secretaries);
    bool is_secretaries_Set() const;
    bool is_secretaries_Valid() const;

    QList<QString> getSicNaceCodes() const;
    void setSicNaceCodes(const QList<QString> &sic_nace_codes);
    bool is_sic_nace_codes_Set() const;
    bool is_sic_nace_codes_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    QString m_date_of_incorporation;
    bool m_date_of_incorporation_isSet;
    bool m_date_of_incorporation_isValid;

    OAIObject m_extra_data;
    bool m_extra_data_isSet;
    bool m_extra_data_isValid;

    QList<QString> m_formatted_address;
    bool m_formatted_address_isSet;
    bool m_formatted_address_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_legal_form;
    bool m_legal_form_isSet;
    bool m_legal_form_isValid;

    QList<QString> m_managing_directors;
    bool m_managing_directors_isSet;
    bool m_managing_directors_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_registration_number;
    bool m_registration_number_isSet;
    bool m_registration_number_isValid;

    qint32 m_request_time;
    bool m_request_time_isSet;
    bool m_request_time_isValid;

    QList<QString> m_secretaries;
    bool m_secretaries_isSet;
    bool m_secretaries_isValid;

    QList<QString> m_sic_nace_codes;
    bool m_sic_nace_codes_isSet;
    bool m_sic_nace_codes_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICompanyDeepsearchLEI_200_response_company)

#endif // OAICompanyDeepsearchLEI_200_response_company_H
