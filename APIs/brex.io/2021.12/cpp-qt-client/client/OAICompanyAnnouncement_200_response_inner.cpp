/**
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompanyAnnouncement_200_response_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompanyAnnouncement_200_response_inner::OAICompanyAnnouncement_200_response_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompanyAnnouncement_200_response_inner::OAICompanyAnnouncement_200_response_inner() {
    this->initializeModel();
}

OAICompanyAnnouncement_200_response_inner::~OAICompanyAnnouncement_200_response_inner() {}

void OAICompanyAnnouncement_200_response_inner::initializeModel() {

    m_country_code_isSet = false;
    m_country_code_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_registration_number_isSet = false;
    m_registration_number_isValid = false;

    m_structured_isSet = false;
    m_structured_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;

    m_time_isSet = false;
    m_time_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAICompanyAnnouncement_200_response_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompanyAnnouncement_200_response_inner::fromJsonObject(QJsonObject json) {

    m_country_code_isValid = ::OpenAPI::fromJsonValue(m_country_code, json[QString("countryCode")]);
    m_country_code_isSet = !json[QString("countryCode")].isNull() && m_country_code_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_registration_number_isValid = ::OpenAPI::fromJsonValue(m_registration_number, json[QString("registrationNumber")]);
    m_registration_number_isSet = !json[QString("registrationNumber")].isNull() && m_registration_number_isValid;

    m_structured_isValid = ::OpenAPI::fromJsonValue(m_structured, json[QString("structured")]);
    m_structured_isSet = !json[QString("structured")].isNull() && m_structured_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;

    m_time_isValid = ::OpenAPI::fromJsonValue(m_time, json[QString("time")]);
    m_time_isSet = !json[QString("time")].isNull() && m_time_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAICompanyAnnouncement_200_response_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompanyAnnouncement_200_response_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_country_code_isSet) {
        obj.insert(QString("countryCode"), ::OpenAPI::toJsonValue(m_country_code));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_registration_number_isSet) {
        obj.insert(QString("registrationNumber"), ::OpenAPI::toJsonValue(m_registration_number));
    }
    if (m_structured_isSet) {
        obj.insert(QString("structured"), ::OpenAPI::toJsonValue(m_structured));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    if (m_time_isSet) {
        obj.insert(QString("time"), ::OpenAPI::toJsonValue(m_time));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAICompanyAnnouncement_200_response_inner::getCountryCode() const {
    return m_country_code;
}
void OAICompanyAnnouncement_200_response_inner::setCountryCode(const QString &country_code) {
    m_country_code = country_code;
    m_country_code_isSet = true;
}

bool OAICompanyAnnouncement_200_response_inner::is_country_code_Set() const{
    return m_country_code_isSet;
}

bool OAICompanyAnnouncement_200_response_inner::is_country_code_Valid() const{
    return m_country_code_isValid;
}

QString OAICompanyAnnouncement_200_response_inner::getId() const {
    return m_id;
}
void OAICompanyAnnouncement_200_response_inner::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICompanyAnnouncement_200_response_inner::is_id_Set() const{
    return m_id_isSet;
}

bool OAICompanyAnnouncement_200_response_inner::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICompanyAnnouncement_200_response_inner::getRegistrationNumber() const {
    return m_registration_number;
}
void OAICompanyAnnouncement_200_response_inner::setRegistrationNumber(const QString &registration_number) {
    m_registration_number = registration_number;
    m_registration_number_isSet = true;
}

bool OAICompanyAnnouncement_200_response_inner::is_registration_number_Set() const{
    return m_registration_number_isSet;
}

bool OAICompanyAnnouncement_200_response_inner::is_registration_number_Valid() const{
    return m_registration_number_isValid;
}

QString OAICompanyAnnouncement_200_response_inner::getStructured() const {
    return m_structured;
}
void OAICompanyAnnouncement_200_response_inner::setStructured(const QString &structured) {
    m_structured = structured;
    m_structured_isSet = true;
}

bool OAICompanyAnnouncement_200_response_inner::is_structured_Set() const{
    return m_structured_isSet;
}

bool OAICompanyAnnouncement_200_response_inner::is_structured_Valid() const{
    return m_structured_isValid;
}

QString OAICompanyAnnouncement_200_response_inner::getText() const {
    return m_text;
}
void OAICompanyAnnouncement_200_response_inner::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAICompanyAnnouncement_200_response_inner::is_text_Set() const{
    return m_text_isSet;
}

bool OAICompanyAnnouncement_200_response_inner::is_text_Valid() const{
    return m_text_isValid;
}

QDate OAICompanyAnnouncement_200_response_inner::getTime() const {
    return m_time;
}
void OAICompanyAnnouncement_200_response_inner::setTime(const QDate &time) {
    m_time = time;
    m_time_isSet = true;
}

bool OAICompanyAnnouncement_200_response_inner::is_time_Set() const{
    return m_time_isSet;
}

bool OAICompanyAnnouncement_200_response_inner::is_time_Valid() const{
    return m_time_isValid;
}

QString OAICompanyAnnouncement_200_response_inner::getType() const {
    return m_type;
}
void OAICompanyAnnouncement_200_response_inner::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAICompanyAnnouncement_200_response_inner::is_type_Set() const{
    return m_type_isSet;
}

bool OAICompanyAnnouncement_200_response_inner::is_type_Valid() const{
    return m_type_isValid;
}

bool OAICompanyAnnouncement_200_response_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_registration_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_structured_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompanyAnnouncement_200_response_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
