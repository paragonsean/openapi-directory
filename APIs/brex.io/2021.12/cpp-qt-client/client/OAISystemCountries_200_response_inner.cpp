/**
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISystemCountries_200_response_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISystemCountries_200_response_inner::OAISystemCountries_200_response_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISystemCountries_200_response_inner::OAISystemCountries_200_response_inner() {
    this->initializeModel();
}

OAISystemCountries_200_response_inner::~OAISystemCountries_200_response_inner() {}

void OAISystemCountries_200_response_inner::initializeModel() {

    m_country_code_isSet = false;
    m_country_code_isValid = false;

    m_country_name_isSet = false;
    m_country_name_isValid = false;
}

void OAISystemCountries_200_response_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISystemCountries_200_response_inner::fromJsonObject(QJsonObject json) {

    m_country_code_isValid = ::OpenAPI::fromJsonValue(m_country_code, json[QString("country_code")]);
    m_country_code_isSet = !json[QString("country_code")].isNull() && m_country_code_isValid;

    m_country_name_isValid = ::OpenAPI::fromJsonValue(m_country_name, json[QString("country_name")]);
    m_country_name_isSet = !json[QString("country_name")].isNull() && m_country_name_isValid;
}

QString OAISystemCountries_200_response_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISystemCountries_200_response_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_country_code_isSet) {
        obj.insert(QString("country_code"), ::OpenAPI::toJsonValue(m_country_code));
    }
    if (m_country_name_isSet) {
        obj.insert(QString("country_name"), ::OpenAPI::toJsonValue(m_country_name));
    }
    return obj;
}

QString OAISystemCountries_200_response_inner::getCountryCode() const {
    return m_country_code;
}
void OAISystemCountries_200_response_inner::setCountryCode(const QString &country_code) {
    m_country_code = country_code;
    m_country_code_isSet = true;
}

bool OAISystemCountries_200_response_inner::is_country_code_Set() const{
    return m_country_code_isSet;
}

bool OAISystemCountries_200_response_inner::is_country_code_Valid() const{
    return m_country_code_isValid;
}

QString OAISystemCountries_200_response_inner::getCountryName() const {
    return m_country_name;
}
void OAISystemCountries_200_response_inner::setCountryName(const QString &country_name) {
    m_country_name = country_name;
    m_country_name_isSet = true;
}

bool OAISystemCountries_200_response_inner::is_country_name_Set() const{
    return m_country_name_isSet;
}

bool OAISystemCountries_200_response_inner::is_country_name_Valid() const{
    return m_country_name_isValid;
}

bool OAISystemCountries_200_response_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_country_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_country_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISystemCountries_200_response_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
