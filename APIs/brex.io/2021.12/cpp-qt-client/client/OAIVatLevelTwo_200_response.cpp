/**
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVatLevelTwo_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVatLevelTwo_200_response::OAIVatLevelTwo_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVatLevelTwo_200_response::OAIVatLevelTwo_200_response() {
    this->initializeModel();
}

OAIVatLevelTwo_200_response::~OAIVatLevelTwo_200_response() {}

void OAIVatLevelTwo_200_response::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_confirmation_isSet = false;
    m_confirmation_isValid = false;

    m_level_isSet = false;
    m_level_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_validation_status_isSet = false;
    m_validation_status_isValid = false;
}

void OAIVatLevelTwo_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVatLevelTwo_200_response::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_confirmation_isValid = ::OpenAPI::fromJsonValue(m_confirmation, json[QString("confirmation")]);
    m_confirmation_isSet = !json[QString("confirmation")].isNull() && m_confirmation_isValid;

    m_level_isValid = ::OpenAPI::fromJsonValue(m_level, json[QString("level")]);
    m_level_isSet = !json[QString("level")].isNull() && m_level_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_validation_status_isValid = ::OpenAPI::fromJsonValue(m_validation_status, json[QString("validationStatus")]);
    m_validation_status_isSet = !json[QString("validationStatus")].isNull() && m_validation_status_isValid;
}

QString OAIVatLevelTwo_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVatLevelTwo_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_address_isSet) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_confirmation_isSet) {
        obj.insert(QString("confirmation"), ::OpenAPI::toJsonValue(m_confirmation));
    }
    if (m_level_isSet) {
        obj.insert(QString("level"), ::OpenAPI::toJsonValue(m_level));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_validation_status_isSet) {
        obj.insert(QString("validationStatus"), ::OpenAPI::toJsonValue(m_validation_status));
    }
    return obj;
}

QString OAIVatLevelTwo_200_response::getAddress() const {
    return m_address;
}
void OAIVatLevelTwo_200_response::setAddress(const QString &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIVatLevelTwo_200_response::is_address_Set() const{
    return m_address_isSet;
}

bool OAIVatLevelTwo_200_response::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIVatLevelTwo_200_response::getConfirmation() const {
    return m_confirmation;
}
void OAIVatLevelTwo_200_response::setConfirmation(const QString &confirmation) {
    m_confirmation = confirmation;
    m_confirmation_isSet = true;
}

bool OAIVatLevelTwo_200_response::is_confirmation_Set() const{
    return m_confirmation_isSet;
}

bool OAIVatLevelTwo_200_response::is_confirmation_Valid() const{
    return m_confirmation_isValid;
}

QString OAIVatLevelTwo_200_response::getLevel() const {
    return m_level;
}
void OAIVatLevelTwo_200_response::setLevel(const QString &level) {
    m_level = level;
    m_level_isSet = true;
}

bool OAIVatLevelTwo_200_response::is_level_Set() const{
    return m_level_isSet;
}

bool OAIVatLevelTwo_200_response::is_level_Valid() const{
    return m_level_isValid;
}

QString OAIVatLevelTwo_200_response::getName() const {
    return m_name;
}
void OAIVatLevelTwo_200_response::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIVatLevelTwo_200_response::is_name_Set() const{
    return m_name_isSet;
}

bool OAIVatLevelTwo_200_response::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIVatLevelTwo_200_response::isValidationStatus() const {
    return m_validation_status;
}
void OAIVatLevelTwo_200_response::setValidationStatus(const bool &validation_status) {
    m_validation_status = validation_status;
    m_validation_status_isSet = true;
}

bool OAIVatLevelTwo_200_response::is_validation_status_Set() const{
    return m_validation_status_isSet;
}

bool OAIVatLevelTwo_200_response::is_validation_status_Valid() const{
    return m_validation_status_isValid;
}

bool OAIVatLevelTwo_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_confirmation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_level_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_validation_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVatLevelTwo_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_level_isValid && m_validation_status_isValid && true;
}

} // namespace OpenAPI
