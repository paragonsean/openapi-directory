/**
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompanyNotificationRegister_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompanyNotificationRegister_200_response::OAICompanyNotificationRegister_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompanyNotificationRegister_200_response::OAICompanyNotificationRegister_200_response() {
    this->initializeModel();
}

OAICompanyNotificationRegister_200_response::~OAICompanyNotificationRegister_200_response() {}

void OAICompanyNotificationRegister_200_response::initializeModel() {

    m_monitor_status_isSet = false;
    m_monitor_status_isValid = false;

    m_notification_id_isSet = false;
    m_notification_id_isValid = false;
}

void OAICompanyNotificationRegister_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompanyNotificationRegister_200_response::fromJsonObject(QJsonObject json) {

    m_monitor_status_isValid = ::OpenAPI::fromJsonValue(m_monitor_status, json[QString("monitorStatus")]);
    m_monitor_status_isSet = !json[QString("monitorStatus")].isNull() && m_monitor_status_isValid;

    m_notification_id_isValid = ::OpenAPI::fromJsonValue(m_notification_id, json[QString("notificationId")]);
    m_notification_id_isSet = !json[QString("notificationId")].isNull() && m_notification_id_isValid;
}

QString OAICompanyNotificationRegister_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompanyNotificationRegister_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_monitor_status_isSet) {
        obj.insert(QString("monitorStatus"), ::OpenAPI::toJsonValue(m_monitor_status));
    }
    if (m_notification_id_isSet) {
        obj.insert(QString("notificationId"), ::OpenAPI::toJsonValue(m_notification_id));
    }
    return obj;
}

QString OAICompanyNotificationRegister_200_response::getMonitorStatus() const {
    return m_monitor_status;
}
void OAICompanyNotificationRegister_200_response::setMonitorStatus(const QString &monitor_status) {
    m_monitor_status = monitor_status;
    m_monitor_status_isSet = true;
}

bool OAICompanyNotificationRegister_200_response::is_monitor_status_Set() const{
    return m_monitor_status_isSet;
}

bool OAICompanyNotificationRegister_200_response::is_monitor_status_Valid() const{
    return m_monitor_status_isValid;
}

QString OAICompanyNotificationRegister_200_response::getNotificationId() const {
    return m_notification_id;
}
void OAICompanyNotificationRegister_200_response::setNotificationId(const QString &notification_id) {
    m_notification_id = notification_id;
    m_notification_id_isSet = true;
}

bool OAICompanyNotificationRegister_200_response::is_notification_id_Set() const{
    return m_notification_id_isSet;
}

bool OAICompanyNotificationRegister_200_response::is_notification_id_Valid() const{
    return m_notification_id_isValid;
}

bool OAICompanyNotificationRegister_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_monitor_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notification_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompanyNotificationRegister_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_monitor_status_isValid && m_notification_id_isValid && true;
}

} // namespace OpenAPI
