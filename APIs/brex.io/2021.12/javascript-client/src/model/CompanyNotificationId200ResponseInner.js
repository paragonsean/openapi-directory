/**
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CompanyNotificationId200ResponseInner model module.
 * @module model/CompanyNotificationId200ResponseInner
 * @version 2021.12
 */
class CompanyNotificationId200ResponseInner {
    /**
     * Constructs a new <code>CompanyNotificationId200ResponseInner</code>.
     * @alias module:model/CompanyNotificationId200ResponseInner
     */
    constructor() { 
        
        CompanyNotificationId200ResponseInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CompanyNotificationId200ResponseInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompanyNotificationId200ResponseInner} obj Optional instance to populate.
     * @return {module:model/CompanyNotificationId200ResponseInner} The populated <code>CompanyNotificationId200ResponseInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompanyNotificationId200ResponseInner();

            if (data.hasOwnProperty('callbackCount')) {
                obj['callbackCount'] = ApiClient.convertToType(data['callbackCount'], 'Number');
            }
            if (data.hasOwnProperty('callbackUrl')) {
                obj['callbackUrl'] = ApiClient.convertToType(data['callbackUrl'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = Object.constructFromObject(data['created']);
            }
            if (data.hasOwnProperty('monitorStatus')) {
                obj['monitorStatus'] = ApiClient.convertToType(data['monitorStatus'], 'String');
            }
            if (data.hasOwnProperty('notificationId')) {
                obj['notificationId'] = ApiClient.convertToType(data['notificationId'], 'String');
            }
            if (data.hasOwnProperty('subjectId')) {
                obj['subjectId'] = ApiClient.convertToType(data['subjectId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompanyNotificationId200ResponseInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompanyNotificationId200ResponseInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['callbackUrl'] && !(typeof data['callbackUrl'] === 'string' || data['callbackUrl'] instanceof String)) {
            throw new Error("Expected the field `callbackUrl` to be a primitive type in the JSON string but got " + data['callbackUrl']);
        }
        // ensure the json data is a string
        if (data['monitorStatus'] && !(typeof data['monitorStatus'] === 'string' || data['monitorStatus'] instanceof String)) {
            throw new Error("Expected the field `monitorStatus` to be a primitive type in the JSON string but got " + data['monitorStatus']);
        }
        // ensure the json data is a string
        if (data['notificationId'] && !(typeof data['notificationId'] === 'string' || data['notificationId'] instanceof String)) {
            throw new Error("Expected the field `notificationId` to be a primitive type in the JSON string but got " + data['notificationId']);
        }
        // ensure the json data is a string
        if (data['subjectId'] && !(typeof data['subjectId'] === 'string' || data['subjectId'] instanceof String)) {
            throw new Error("Expected the field `subjectId` to be a primitive type in the JSON string but got " + data['subjectId']);
        }

        return true;
    }


}



/**
 * @member {Number} callbackCount
 */
CompanyNotificationId200ResponseInner.prototype['callbackCount'] = undefined;

/**
 * @member {String} callbackUrl
 */
CompanyNotificationId200ResponseInner.prototype['callbackUrl'] = undefined;

/**
 * @member {Object} created
 */
CompanyNotificationId200ResponseInner.prototype['created'] = undefined;

/**
 * @member {String} monitorStatus
 */
CompanyNotificationId200ResponseInner.prototype['monitorStatus'] = undefined;

/**
 * @member {String} notificationId
 */
CompanyNotificationId200ResponseInner.prototype['notificationId'] = undefined;

/**
 * @member {String} subjectId
 */
CompanyNotificationId200ResponseInner.prototype['subjectId'] = undefined;






export default CompanyNotificationId200ResponseInner;

