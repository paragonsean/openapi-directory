/**
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import VatLookup200ResponseMatchesInner from './VatLookup200ResponseMatchesInner';

/**
 * The VatLookup200Response model module.
 * @module model/VatLookup200Response
 * @version 2021.12
 */
class VatLookup200Response {
    /**
     * Constructs a new <code>VatLookup200Response</code>.
     * @alias module:model/VatLookup200Response
     */
    constructor() { 
        
        VatLookup200Response.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>VatLookup200Response</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/VatLookup200Response} obj Optional instance to populate.
     * @return {module:model/VatLookup200Response} The populated <code>VatLookup200Response</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new VatLookup200Response();

            if (data.hasOwnProperty('matches')) {
                obj['matches'] = ApiClient.convertToType(data['matches'], [VatLookup200ResponseMatchesInner]);
            }
            if (data.hasOwnProperty('searchterm_address')) {
                obj['searchterm_address'] = ApiClient.convertToType(data['searchterm_address'], 'String');
            }
            if (data.hasOwnProperty('searchterm_country')) {
                obj['searchterm_country'] = ApiClient.convertToType(data['searchterm_country'], 'String');
            }
            if (data.hasOwnProperty('searchterm_name')) {
                obj['searchterm_name'] = ApiClient.convertToType(data['searchterm_name'], 'String');
            }
            if (data.hasOwnProperty('timestamp')) {
                obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>VatLookup200Response</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>VatLookup200Response</code>.
     */
    static validateJSON(data) {
        if (data['matches']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['matches'])) {
                throw new Error("Expected the field `matches` to be an array in the JSON data but got " + data['matches']);
            }
            // validate the optional field `matches` (array)
            for (const item of data['matches']) {
                VatLookup200ResponseMatchesInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['searchterm_address'] && !(typeof data['searchterm_address'] === 'string' || data['searchterm_address'] instanceof String)) {
            throw new Error("Expected the field `searchterm_address` to be a primitive type in the JSON string but got " + data['searchterm_address']);
        }
        // ensure the json data is a string
        if (data['searchterm_country'] && !(typeof data['searchterm_country'] === 'string' || data['searchterm_country'] instanceof String)) {
            throw new Error("Expected the field `searchterm_country` to be a primitive type in the JSON string but got " + data['searchterm_country']);
        }
        // ensure the json data is a string
        if (data['searchterm_name'] && !(typeof data['searchterm_name'] === 'string' || data['searchterm_name'] instanceof String)) {
            throw new Error("Expected the field `searchterm_name` to be a primitive type in the JSON string but got " + data['searchterm_name']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/VatLookup200ResponseMatchesInner>} matches
 */
VatLookup200Response.prototype['matches'] = undefined;

/**
 * @member {String} searchterm_address
 */
VatLookup200Response.prototype['searchterm_address'] = undefined;

/**
 * @member {String} searchterm_country
 */
VatLookup200Response.prototype['searchterm_country'] = undefined;

/**
 * @member {String} searchterm_name
 */
VatLookup200Response.prototype['searchterm_name'] = undefined;

/**
 * @member {Number} timestamp
 */
VatLookup200Response.prototype['timestamp'] = undefined;






export default VatLookup200Response;

