/**
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SystemCountriesDefaultResponse model module.
 * @module model/SystemCountriesDefaultResponse
 * @version 2021.12
 */
class SystemCountriesDefaultResponse {
    /**
     * Constructs a new <code>SystemCountriesDefaultResponse</code>.
     * @alias module:model/SystemCountriesDefaultResponse
     * @param code {Number} 
     * @param message {String} 
     * @param tag {String} 
     */
    constructor(code, message, tag) { 
        
        SystemCountriesDefaultResponse.initialize(this, code, message, tag);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, code, message, tag) { 
        obj['code'] = code;
        obj['message'] = message;
        obj['tag'] = tag;
    }

    /**
     * Constructs a <code>SystemCountriesDefaultResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SystemCountriesDefaultResponse} obj Optional instance to populate.
     * @return {module:model/SystemCountriesDefaultResponse} The populated <code>SystemCountriesDefaultResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SystemCountriesDefaultResponse();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'Number');
            }
            if (data.hasOwnProperty('fault')) {
                obj['fault'] = ApiClient.convertToType(data['fault'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
            if (data.hasOwnProperty('tag')) {
                obj['tag'] = ApiClient.convertToType(data['tag'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SystemCountriesDefaultResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SystemCountriesDefaultResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SystemCountriesDefaultResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['fault'] && !(typeof data['fault'] === 'string' || data['fault'] instanceof String)) {
            throw new Error("Expected the field `fault` to be a primitive type in the JSON string but got " + data['fault']);
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }
        // ensure the json data is a string
        if (data['tag'] && !(typeof data['tag'] === 'string' || data['tag'] instanceof String)) {
            throw new Error("Expected the field `tag` to be a primitive type in the JSON string but got " + data['tag']);
        }

        return true;
    }


}

SystemCountriesDefaultResponse.RequiredProperties = ["code", "message", "tag"];

/**
 * @member {Number} code
 */
SystemCountriesDefaultResponse.prototype['code'] = undefined;

/**
 * @member {String} fault
 */
SystemCountriesDefaultResponse.prototype['fault'] = undefined;

/**
 * @member {String} message
 */
SystemCountriesDefaultResponse.prototype['message'] = undefined;

/**
 * @member {String} tag
 */
SystemCountriesDefaultResponse.prototype['tag'] = undefined;






export default SystemCountriesDefaultResponse;

