/**
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CompanyAnnouncement200ResponseInner model module.
 * @module model/CompanyAnnouncement200ResponseInner
 * @version 2021.12
 */
class CompanyAnnouncement200ResponseInner {
    /**
     * Constructs a new <code>CompanyAnnouncement200ResponseInner</code>.
     * @alias module:model/CompanyAnnouncement200ResponseInner
     */
    constructor() { 
        
        CompanyAnnouncement200ResponseInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CompanyAnnouncement200ResponseInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CompanyAnnouncement200ResponseInner} obj Optional instance to populate.
     * @return {module:model/CompanyAnnouncement200ResponseInner} The populated <code>CompanyAnnouncement200ResponseInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CompanyAnnouncement200ResponseInner();

            if (data.hasOwnProperty('countryCode')) {
                obj['countryCode'] = ApiClient.convertToType(data['countryCode'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('registrationNumber')) {
                obj['registrationNumber'] = ApiClient.convertToType(data['registrationNumber'], 'String');
            }
            if (data.hasOwnProperty('structured')) {
                obj['structured'] = ApiClient.convertToType(data['structured'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('time')) {
                obj['time'] = ApiClient.convertToType(data['time'], 'Date');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CompanyAnnouncement200ResponseInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CompanyAnnouncement200ResponseInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['countryCode'] && !(typeof data['countryCode'] === 'string' || data['countryCode'] instanceof String)) {
            throw new Error("Expected the field `countryCode` to be a primitive type in the JSON string but got " + data['countryCode']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['registrationNumber'] && !(typeof data['registrationNumber'] === 'string' || data['registrationNumber'] instanceof String)) {
            throw new Error("Expected the field `registrationNumber` to be a primitive type in the JSON string but got " + data['registrationNumber']);
        }
        // ensure the json data is a string
        if (data['structured'] && !(typeof data['structured'] === 'string' || data['structured'] instanceof String)) {
            throw new Error("Expected the field `structured` to be a primitive type in the JSON string but got " + data['structured']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}



/**
 * @member {String} countryCode
 */
CompanyAnnouncement200ResponseInner.prototype['countryCode'] = undefined;

/**
 * @member {String} id
 */
CompanyAnnouncement200ResponseInner.prototype['id'] = undefined;

/**
 * @member {String} registrationNumber
 */
CompanyAnnouncement200ResponseInner.prototype['registrationNumber'] = undefined;

/**
 * @member {String} structured
 */
CompanyAnnouncement200ResponseInner.prototype['structured'] = undefined;

/**
 * @member {String} text
 */
CompanyAnnouncement200ResponseInner.prototype['text'] = undefined;

/**
 * @member {Date} time
 */
CompanyAnnouncement200ResponseInner.prototype['time'] = undefined;

/**
 * @member {String} type
 */
CompanyAnnouncement200ResponseInner.prototype['type'] = undefined;






export default CompanyAnnouncement200ResponseInner;

