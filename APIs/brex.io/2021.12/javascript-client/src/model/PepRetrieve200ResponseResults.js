/**
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PepRetrieve200ResponseResults model module.
 * @module model/PepRetrieve200ResponseResults
 * @version 2021.12
 */
class PepRetrieve200ResponseResults {
    /**
     * Constructs a new <code>PepRetrieve200ResponseResults</code>.
     * @alias module:model/PepRetrieve200ResponseResults
     */
    constructor() { 
        
        PepRetrieve200ResponseResults.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PepRetrieve200ResponseResults</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PepRetrieve200ResponseResults} obj Optional instance to populate.
     * @return {module:model/PepRetrieve200ResponseResults} The populated <code>PepRetrieve200ResponseResults</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PepRetrieve200ResponseResults();

            if (data.hasOwnProperty('Excerpts')) {
                obj['Excerpts'] = ApiClient.convertToType(data['Excerpts'], 'String');
            }
            if (data.hasOwnProperty('ResultsURL')) {
                obj['ResultsURL'] = ApiClient.convertToType(data['ResultsURL'], 'String');
            }
            if (data.hasOwnProperty('SearchType')) {
                obj['SearchType'] = ApiClient.convertToType(data['SearchType'], 'String');
            }
            if (data.hasOwnProperty('SourceAgency')) {
                obj['SourceAgency'] = ApiClient.convertToType(data['SourceAgency'], 'String');
            }
            if (data.hasOwnProperty('SourceEntity')) {
                obj['SourceEntity'] = ApiClient.convertToType(data['SourceEntity'], 'String');
            }
            if (data.hasOwnProperty('SourceID')) {
                obj['SourceID'] = ApiClient.convertToType(data['SourceID'], 'Number');
            }
            if (data.hasOwnProperty('SourceName')) {
                obj['SourceName'] = ApiClient.convertToType(data['SourceName'], 'String');
            }
            if (data.hasOwnProperty('SourceType')) {
                obj['SourceType'] = ApiClient.convertToType(data['SourceType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PepRetrieve200ResponseResults</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PepRetrieve200ResponseResults</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Excerpts'] && !(typeof data['Excerpts'] === 'string' || data['Excerpts'] instanceof String)) {
            throw new Error("Expected the field `Excerpts` to be a primitive type in the JSON string but got " + data['Excerpts']);
        }
        // ensure the json data is a string
        if (data['ResultsURL'] && !(typeof data['ResultsURL'] === 'string' || data['ResultsURL'] instanceof String)) {
            throw new Error("Expected the field `ResultsURL` to be a primitive type in the JSON string but got " + data['ResultsURL']);
        }
        // ensure the json data is a string
        if (data['SearchType'] && !(typeof data['SearchType'] === 'string' || data['SearchType'] instanceof String)) {
            throw new Error("Expected the field `SearchType` to be a primitive type in the JSON string but got " + data['SearchType']);
        }
        // ensure the json data is a string
        if (data['SourceAgency'] && !(typeof data['SourceAgency'] === 'string' || data['SourceAgency'] instanceof String)) {
            throw new Error("Expected the field `SourceAgency` to be a primitive type in the JSON string but got " + data['SourceAgency']);
        }
        // ensure the json data is a string
        if (data['SourceEntity'] && !(typeof data['SourceEntity'] === 'string' || data['SourceEntity'] instanceof String)) {
            throw new Error("Expected the field `SourceEntity` to be a primitive type in the JSON string but got " + data['SourceEntity']);
        }
        // ensure the json data is a string
        if (data['SourceName'] && !(typeof data['SourceName'] === 'string' || data['SourceName'] instanceof String)) {
            throw new Error("Expected the field `SourceName` to be a primitive type in the JSON string but got " + data['SourceName']);
        }
        // ensure the json data is a string
        if (data['SourceType'] && !(typeof data['SourceType'] === 'string' || data['SourceType'] instanceof String)) {
            throw new Error("Expected the field `SourceType` to be a primitive type in the JSON string but got " + data['SourceType']);
        }

        return true;
    }


}



/**
 * @member {String} Excerpts
 */
PepRetrieve200ResponseResults.prototype['Excerpts'] = undefined;

/**
 * @member {String} ResultsURL
 */
PepRetrieve200ResponseResults.prototype['ResultsURL'] = undefined;

/**
 * @member {String} SearchType
 */
PepRetrieve200ResponseResults.prototype['SearchType'] = undefined;

/**
 * @member {String} SourceAgency
 */
PepRetrieve200ResponseResults.prototype['SourceAgency'] = undefined;

/**
 * @member {String} SourceEntity
 */
PepRetrieve200ResponseResults.prototype['SourceEntity'] = undefined;

/**
 * @member {Number} SourceID
 */
PepRetrieve200ResponseResults.prototype['SourceID'] = undefined;

/**
 * @member {String} SourceName
 */
PepRetrieve200ResponseResults.prototype['SourceName'] = undefined;

/**
 * @member {String} SourceType
 */
PepRetrieve200ResponseResults.prototype['SourceType'] = undefined;






export default PepRetrieve200ResponseResults;

