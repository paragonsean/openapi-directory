/**
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PepMonitorList200ResponseInner model module.
 * @module model/PepMonitorList200ResponseInner
 * @version 2021.12
 */
class PepMonitorList200ResponseInner {
    /**
     * Constructs a new <code>PepMonitorList200ResponseInner</code>.
     * @alias module:model/PepMonitorList200ResponseInner
     */
    constructor() { 
        
        PepMonitorList200ResponseInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PepMonitorList200ResponseInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PepMonitorList200ResponseInner} obj Optional instance to populate.
     * @return {module:model/PepMonitorList200ResponseInner} The populated <code>PepMonitorList200ResponseInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PepMonitorList200ResponseInner();

            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
            if (data.hasOwnProperty('caseId')) {
                obj['caseId'] = ApiClient.convertToType(data['caseId'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = Object.constructFromObject(data['created']);
            }
            if (data.hasOwnProperty('identifier')) {
                obj['identifier'] = ApiClient.convertToType(data['identifier'], 'String');
            }
            if (data.hasOwnProperty('structured')) {
                obj['structured'] = ApiClient.convertToType(data['structured'], 'String');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'String');
            }
            if (data.hasOwnProperty('webhook')) {
                obj['webhook'] = ApiClient.convertToType(data['webhook'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PepMonitorList200ResponseInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PepMonitorList200ResponseInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['caseId'] && !(typeof data['caseId'] === 'string' || data['caseId'] instanceof String)) {
            throw new Error("Expected the field `caseId` to be a primitive type in the JSON string but got " + data['caseId']);
        }
        // ensure the json data is a string
        if (data['identifier'] && !(typeof data['identifier'] === 'string' || data['identifier'] instanceof String)) {
            throw new Error("Expected the field `identifier` to be a primitive type in the JSON string but got " + data['identifier']);
        }
        // ensure the json data is a string
        if (data['structured'] && !(typeof data['structured'] === 'string' || data['structured'] instanceof String)) {
            throw new Error("Expected the field `structured` to be a primitive type in the JSON string but got " + data['structured']);
        }
        // ensure the json data is a string
        if (data['updated'] && !(typeof data['updated'] === 'string' || data['updated'] instanceof String)) {
            throw new Error("Expected the field `updated` to be a primitive type in the JSON string but got " + data['updated']);
        }
        // ensure the json data is a string
        if (data['webhook'] && !(typeof data['webhook'] === 'string' || data['webhook'] instanceof String)) {
            throw new Error("Expected the field `webhook` to be a primitive type in the JSON string but got " + data['webhook']);
        }

        return true;
    }


}



/**
 * @member {Boolean} active
 */
PepMonitorList200ResponseInner.prototype['active'] = undefined;

/**
 * @member {String} caseId
 */
PepMonitorList200ResponseInner.prototype['caseId'] = undefined;

/**
 * @member {Object} created
 */
PepMonitorList200ResponseInner.prototype['created'] = undefined;

/**
 * @member {String} identifier
 */
PepMonitorList200ResponseInner.prototype['identifier'] = undefined;

/**
 * @member {String} structured
 */
PepMonitorList200ResponseInner.prototype['structured'] = undefined;

/**
 * @member {String} updated
 */
PepMonitorList200ResponseInner.prototype['updated'] = undefined;

/**
 * @member {String} webhook
 */
PepMonitorList200ResponseInner.prototype['webhook'] = undefined;






export default PepMonitorList200ResponseInner;

