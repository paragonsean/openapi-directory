/*
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CompanyDeepsearchISIN200ResponseInnerListingsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:29:26.420924-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CompanyDeepsearchISIN200ResponseInnerListingsInner {
  public static final String SERIALIZED_NAME_ADDITIONAL_SECURITY_TYPE = "additionalSecurityType";
  @SerializedName(SERIALIZED_NAME_ADDITIONAL_SECURITY_TYPE)
  private String additionalSecurityType;

  public static final String SERIALIZED_NAME_EXCH_CODE = "exchCode";
  @SerializedName(SERIALIZED_NAME_EXCH_CODE)
  private String exchCode;

  public static final String SERIALIZED_NAME_IDENTIFIER = "identifier";
  @SerializedName(SERIALIZED_NAME_IDENTIFIER)
  private String identifier;

  public static final String SERIALIZED_NAME_MARKET_SECTOR = "marketSector";
  @SerializedName(SERIALIZED_NAME_MARKET_SECTOR)
  private String marketSector;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_SECURITY_DESCRIPTION = "securityDescription";
  @SerializedName(SERIALIZED_NAME_SECURITY_DESCRIPTION)
  private String securityDescription;

  public static final String SERIALIZED_NAME_SECURITY_TYPE = "securityType";
  @SerializedName(SERIALIZED_NAME_SECURITY_TYPE)
  private String securityType;

  public static final String SERIALIZED_NAME_SHARE_CLASS_ID = "shareClassId";
  @SerializedName(SERIALIZED_NAME_SHARE_CLASS_ID)
  private String shareClassId;

  public static final String SERIALIZED_NAME_STOCK_ID = "stockId";
  @SerializedName(SERIALIZED_NAME_STOCK_ID)
  private String stockId;

  public static final String SERIALIZED_NAME_SYMBOL = "symbol";
  @SerializedName(SERIALIZED_NAME_SYMBOL)
  private String symbol;

  public CompanyDeepsearchISIN200ResponseInnerListingsInner() {
  }

  public CompanyDeepsearchISIN200ResponseInnerListingsInner additionalSecurityType(String additionalSecurityType) {
    this.additionalSecurityType = additionalSecurityType;
    return this;
  }

  /**
   * Get additionalSecurityType
   * @return additionalSecurityType
   */
  @javax.annotation.Nullable
  public String getAdditionalSecurityType() {
    return additionalSecurityType;
  }

  public void setAdditionalSecurityType(String additionalSecurityType) {
    this.additionalSecurityType = additionalSecurityType;
  }


  public CompanyDeepsearchISIN200ResponseInnerListingsInner exchCode(String exchCode) {
    this.exchCode = exchCode;
    return this;
  }

  /**
   * Get exchCode
   * @return exchCode
   */
  @javax.annotation.Nullable
  public String getExchCode() {
    return exchCode;
  }

  public void setExchCode(String exchCode) {
    this.exchCode = exchCode;
  }


  public CompanyDeepsearchISIN200ResponseInnerListingsInner identifier(String identifier) {
    this.identifier = identifier;
    return this;
  }

  /**
   * Get identifier
   * @return identifier
   */
  @javax.annotation.Nullable
  public String getIdentifier() {
    return identifier;
  }

  public void setIdentifier(String identifier) {
    this.identifier = identifier;
  }


  public CompanyDeepsearchISIN200ResponseInnerListingsInner marketSector(String marketSector) {
    this.marketSector = marketSector;
    return this;
  }

  /**
   * Get marketSector
   * @return marketSector
   */
  @javax.annotation.Nullable
  public String getMarketSector() {
    return marketSector;
  }

  public void setMarketSector(String marketSector) {
    this.marketSector = marketSector;
  }


  public CompanyDeepsearchISIN200ResponseInnerListingsInner name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public CompanyDeepsearchISIN200ResponseInnerListingsInner securityDescription(String securityDescription) {
    this.securityDescription = securityDescription;
    return this;
  }

  /**
   * Get securityDescription
   * @return securityDescription
   */
  @javax.annotation.Nullable
  public String getSecurityDescription() {
    return securityDescription;
  }

  public void setSecurityDescription(String securityDescription) {
    this.securityDescription = securityDescription;
  }


  public CompanyDeepsearchISIN200ResponseInnerListingsInner securityType(String securityType) {
    this.securityType = securityType;
    return this;
  }

  /**
   * Get securityType
   * @return securityType
   */
  @javax.annotation.Nullable
  public String getSecurityType() {
    return securityType;
  }

  public void setSecurityType(String securityType) {
    this.securityType = securityType;
  }


  public CompanyDeepsearchISIN200ResponseInnerListingsInner shareClassId(String shareClassId) {
    this.shareClassId = shareClassId;
    return this;
  }

  /**
   * Get shareClassId
   * @return shareClassId
   */
  @javax.annotation.Nullable
  public String getShareClassId() {
    return shareClassId;
  }

  public void setShareClassId(String shareClassId) {
    this.shareClassId = shareClassId;
  }


  public CompanyDeepsearchISIN200ResponseInnerListingsInner stockId(String stockId) {
    this.stockId = stockId;
    return this;
  }

  /**
   * Get stockId
   * @return stockId
   */
  @javax.annotation.Nullable
  public String getStockId() {
    return stockId;
  }

  public void setStockId(String stockId) {
    this.stockId = stockId;
  }


  public CompanyDeepsearchISIN200ResponseInnerListingsInner symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

  /**
   * Get symbol
   * @return symbol
   */
  @javax.annotation.Nullable
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompanyDeepsearchISIN200ResponseInnerListingsInner companyDeepsearchISIN200ResponseInnerListingsInner = (CompanyDeepsearchISIN200ResponseInnerListingsInner) o;
    return Objects.equals(this.additionalSecurityType, companyDeepsearchISIN200ResponseInnerListingsInner.additionalSecurityType) &&
        Objects.equals(this.exchCode, companyDeepsearchISIN200ResponseInnerListingsInner.exchCode) &&
        Objects.equals(this.identifier, companyDeepsearchISIN200ResponseInnerListingsInner.identifier) &&
        Objects.equals(this.marketSector, companyDeepsearchISIN200ResponseInnerListingsInner.marketSector) &&
        Objects.equals(this.name, companyDeepsearchISIN200ResponseInnerListingsInner.name) &&
        Objects.equals(this.securityDescription, companyDeepsearchISIN200ResponseInnerListingsInner.securityDescription) &&
        Objects.equals(this.securityType, companyDeepsearchISIN200ResponseInnerListingsInner.securityType) &&
        Objects.equals(this.shareClassId, companyDeepsearchISIN200ResponseInnerListingsInner.shareClassId) &&
        Objects.equals(this.stockId, companyDeepsearchISIN200ResponseInnerListingsInner.stockId) &&
        Objects.equals(this.symbol, companyDeepsearchISIN200ResponseInnerListingsInner.symbol);
  }

  @Override
  public int hashCode() {
    return Objects.hash(additionalSecurityType, exchCode, identifier, marketSector, name, securityDescription, securityType, shareClassId, stockId, symbol);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompanyDeepsearchISIN200ResponseInnerListingsInner {\n");
    sb.append("    additionalSecurityType: ").append(toIndentedString(additionalSecurityType)).append("\n");
    sb.append("    exchCode: ").append(toIndentedString(exchCode)).append("\n");
    sb.append("    identifier: ").append(toIndentedString(identifier)).append("\n");
    sb.append("    marketSector: ").append(toIndentedString(marketSector)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    securityDescription: ").append(toIndentedString(securityDescription)).append("\n");
    sb.append("    securityType: ").append(toIndentedString(securityType)).append("\n");
    sb.append("    shareClassId: ").append(toIndentedString(shareClassId)).append("\n");
    sb.append("    stockId: ").append(toIndentedString(stockId)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("additionalSecurityType");
    openapiFields.add("exchCode");
    openapiFields.add("identifier");
    openapiFields.add("marketSector");
    openapiFields.add("name");
    openapiFields.add("securityDescription");
    openapiFields.add("securityType");
    openapiFields.add("shareClassId");
    openapiFields.add("stockId");
    openapiFields.add("symbol");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CompanyDeepsearchISIN200ResponseInnerListingsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CompanyDeepsearchISIN200ResponseInnerListingsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CompanyDeepsearchISIN200ResponseInnerListingsInner is not found in the empty JSON string", CompanyDeepsearchISIN200ResponseInnerListingsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CompanyDeepsearchISIN200ResponseInnerListingsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CompanyDeepsearchISIN200ResponseInnerListingsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("additionalSecurityType") != null && !jsonObj.get("additionalSecurityType").isJsonNull()) && !jsonObj.get("additionalSecurityType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `additionalSecurityType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("additionalSecurityType").toString()));
      }
      if ((jsonObj.get("exchCode") != null && !jsonObj.get("exchCode").isJsonNull()) && !jsonObj.get("exchCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `exchCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("exchCode").toString()));
      }
      if ((jsonObj.get("identifier") != null && !jsonObj.get("identifier").isJsonNull()) && !jsonObj.get("identifier").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `identifier` to be a primitive type in the JSON string but got `%s`", jsonObj.get("identifier").toString()));
      }
      if ((jsonObj.get("marketSector") != null && !jsonObj.get("marketSector").isJsonNull()) && !jsonObj.get("marketSector").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketSector` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketSector").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("securityDescription") != null && !jsonObj.get("securityDescription").isJsonNull()) && !jsonObj.get("securityDescription").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `securityDescription` to be a primitive type in the JSON string but got `%s`", jsonObj.get("securityDescription").toString()));
      }
      if ((jsonObj.get("securityType") != null && !jsonObj.get("securityType").isJsonNull()) && !jsonObj.get("securityType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `securityType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("securityType").toString()));
      }
      if ((jsonObj.get("shareClassId") != null && !jsonObj.get("shareClassId").isJsonNull()) && !jsonObj.get("shareClassId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `shareClassId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("shareClassId").toString()));
      }
      if ((jsonObj.get("stockId") != null && !jsonObj.get("stockId").isJsonNull()) && !jsonObj.get("stockId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `stockId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("stockId").toString()));
      }
      if ((jsonObj.get("symbol") != null && !jsonObj.get("symbol").isJsonNull()) && !jsonObj.get("symbol").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `symbol` to be a primitive type in the JSON string but got `%s`", jsonObj.get("symbol").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CompanyDeepsearchISIN200ResponseInnerListingsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CompanyDeepsearchISIN200ResponseInnerListingsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CompanyDeepsearchISIN200ResponseInnerListingsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CompanyDeepsearchISIN200ResponseInnerListingsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<CompanyDeepsearchISIN200ResponseInnerListingsInner>() {
           @Override
           public void write(JsonWriter out, CompanyDeepsearchISIN200ResponseInnerListingsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CompanyDeepsearchISIN200ResponseInnerListingsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CompanyDeepsearchISIN200ResponseInnerListingsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CompanyDeepsearchISIN200ResponseInnerListingsInner
   * @throws IOException if the JSON string is invalid with respect to CompanyDeepsearchISIN200ResponseInnerListingsInner
   */
  public static CompanyDeepsearchISIN200ResponseInnerListingsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CompanyDeepsearchISIN200ResponseInnerListingsInner.class);
  }

  /**
   * Convert an instance of CompanyDeepsearchISIN200ResponseInnerListingsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

