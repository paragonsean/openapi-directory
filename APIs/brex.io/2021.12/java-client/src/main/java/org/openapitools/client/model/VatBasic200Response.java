/*
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * VatBasic200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:29:26.420924-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class VatBasic200Response {
  public static final String SERIALIZED_NAME_CANDIDATE = "candidate";
  @SerializedName(SERIALIZED_NAME_CANDIDATE)
  private List<Object> candidate = new ArrayList<>();

  public static final String SERIALIZED_NAME_COMPANY = "company";
  @SerializedName(SERIALIZED_NAME_COMPANY)
  private Object company = null;

  public static final String SERIALIZED_NAME_CONFIDENCE_SCORE = "confidenceScore";
  @SerializedName(SERIALIZED_NAME_CONFIDENCE_SCORE)
  private BigDecimal confidenceScore;

  public static final String SERIALIZED_NAME_VALIDATION_STATUS = "validationStatus";
  @SerializedName(SERIALIZED_NAME_VALIDATION_STATUS)
  private Boolean validationStatus;

  public VatBasic200Response() {
  }

  public VatBasic200Response candidate(List<Object> candidate) {
    this.candidate = candidate;
    return this;
  }

  public VatBasic200Response addCandidateItem(Object candidateItem) {
    if (this.candidate == null) {
      this.candidate = new ArrayList<>();
    }
    this.candidate.add(candidateItem);
    return this;
  }

  /**
   * Get candidate
   * @return candidate
   */
  @javax.annotation.Nullable
  public List<Object> getCandidate() {
    return candidate;
  }

  public void setCandidate(List<Object> candidate) {
    this.candidate = candidate;
  }


  public VatBasic200Response company(Object company) {
    this.company = company;
    return this;
  }

  /**
   * Get company
   * @return company
   */
  @javax.annotation.Nullable
  public Object getCompany() {
    return company;
  }

  public void setCompany(Object company) {
    this.company = company;
  }


  public VatBasic200Response confidenceScore(BigDecimal confidenceScore) {
    this.confidenceScore = confidenceScore;
    return this;
  }

  /**
   * Get confidenceScore
   * @return confidenceScore
   */
  @javax.annotation.Nonnull
  public BigDecimal getConfidenceScore() {
    return confidenceScore;
  }

  public void setConfidenceScore(BigDecimal confidenceScore) {
    this.confidenceScore = confidenceScore;
  }


  public VatBasic200Response validationStatus(Boolean validationStatus) {
    this.validationStatus = validationStatus;
    return this;
  }

  /**
   * Get validationStatus
   * @return validationStatus
   */
  @javax.annotation.Nonnull
  public Boolean getValidationStatus() {
    return validationStatus;
  }

  public void setValidationStatus(Boolean validationStatus) {
    this.validationStatus = validationStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VatBasic200Response vatBasic200Response = (VatBasic200Response) o;
    return Objects.equals(this.candidate, vatBasic200Response.candidate) &&
        Objects.equals(this.company, vatBasic200Response.company) &&
        Objects.equals(this.confidenceScore, vatBasic200Response.confidenceScore) &&
        Objects.equals(this.validationStatus, vatBasic200Response.validationStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(candidate, company, confidenceScore, validationStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VatBasic200Response {\n");
    sb.append("    candidate: ").append(toIndentedString(candidate)).append("\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    confidenceScore: ").append(toIndentedString(confidenceScore)).append("\n");
    sb.append("    validationStatus: ").append(toIndentedString(validationStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("candidate");
    openapiFields.add("company");
    openapiFields.add("confidenceScore");
    openapiFields.add("validationStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("confidenceScore");
    openapiRequiredFields.add("validationStatus");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to VatBasic200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!VatBasic200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in VatBasic200Response is not found in the empty JSON string", VatBasic200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!VatBasic200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `VatBasic200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : VatBasic200Response.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("candidate") != null && !jsonObj.get("candidate").isJsonNull() && !jsonObj.get("candidate").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `candidate` to be an array in the JSON string but got `%s`", jsonObj.get("candidate").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VatBasic200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VatBasic200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VatBasic200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VatBasic200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<VatBasic200Response>() {
           @Override
           public void write(JsonWriter out, VatBasic200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public VatBasic200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of VatBasic200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of VatBasic200Response
   * @throws IOException if the JSON string is invalid with respect to VatBasic200Response
   */
  public static VatBasic200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VatBasic200Response.class);
  }

  /**
   * Convert an instance of VatBasic200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

