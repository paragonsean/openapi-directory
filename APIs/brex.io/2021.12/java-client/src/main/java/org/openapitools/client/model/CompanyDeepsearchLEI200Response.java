/*
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.CompanyDeepsearchLEI200ResponseCompany;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CompanyDeepsearchLEI200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:29:26.420924-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CompanyDeepsearchLEI200Response {
  public static final String SERIALIZED_NAME_COMPANY = "company";
  @SerializedName(SERIALIZED_NAME_COMPANY)
  private CompanyDeepsearchLEI200ResponseCompany company;

  public static final String SERIALIZED_NAME_CURRENT_PAGE = "current_page";
  @SerializedName(SERIALIZED_NAME_CURRENT_PAGE)
  private Integer currentPage;

  public static final String SERIALIZED_NAME_ISINS = "isins";
  @SerializedName(SERIALIZED_NAME_ISINS)
  private List<String> isins = new ArrayList<>();

  public static final String SERIALIZED_NAME_LAST_PAGE = "last_page";
  @SerializedName(SERIALIZED_NAME_LAST_PAGE)
  private Integer lastPage;

  public static final String SERIALIZED_NAME_LEI = "lei";
  @SerializedName(SERIALIZED_NAME_LEI)
  private String lei;

  public static final String SERIALIZED_NAME_NEXT_PAGE = "next_page";
  @SerializedName(SERIALIZED_NAME_NEXT_PAGE)
  private String nextPage;

  public static final String SERIALIZED_NAME_TOTAL_NUM_ISINS = "total_num_isins";
  @SerializedName(SERIALIZED_NAME_TOTAL_NUM_ISINS)
  private Integer totalNumIsins;

  public static final String SERIALIZED_NAME_VALID_LEI = "validLei";
  @SerializedName(SERIALIZED_NAME_VALID_LEI)
  private Boolean validLei;

  public CompanyDeepsearchLEI200Response() {
  }

  public CompanyDeepsearchLEI200Response company(CompanyDeepsearchLEI200ResponseCompany company) {
    this.company = company;
    return this;
  }

  /**
   * Get company
   * @return company
   */
  @javax.annotation.Nullable
  public CompanyDeepsearchLEI200ResponseCompany getCompany() {
    return company;
  }

  public void setCompany(CompanyDeepsearchLEI200ResponseCompany company) {
    this.company = company;
  }


  public CompanyDeepsearchLEI200Response currentPage(Integer currentPage) {
    this.currentPage = currentPage;
    return this;
  }

  /**
   * Get currentPage
   * @return currentPage
   */
  @javax.annotation.Nullable
  public Integer getCurrentPage() {
    return currentPage;
  }

  public void setCurrentPage(Integer currentPage) {
    this.currentPage = currentPage;
  }


  public CompanyDeepsearchLEI200Response isins(List<String> isins) {
    this.isins = isins;
    return this;
  }

  public CompanyDeepsearchLEI200Response addIsinsItem(String isinsItem) {
    if (this.isins == null) {
      this.isins = new ArrayList<>();
    }
    this.isins.add(isinsItem);
    return this;
  }

  /**
   * Get isins
   * @return isins
   */
  @javax.annotation.Nullable
  public List<String> getIsins() {
    return isins;
  }

  public void setIsins(List<String> isins) {
    this.isins = isins;
  }


  public CompanyDeepsearchLEI200Response lastPage(Integer lastPage) {
    this.lastPage = lastPage;
    return this;
  }

  /**
   * Get lastPage
   * @return lastPage
   */
  @javax.annotation.Nullable
  public Integer getLastPage() {
    return lastPage;
  }

  public void setLastPage(Integer lastPage) {
    this.lastPage = lastPage;
  }


  public CompanyDeepsearchLEI200Response lei(String lei) {
    this.lei = lei;
    return this;
  }

  /**
   * Get lei
   * @return lei
   */
  @javax.annotation.Nullable
  public String getLei() {
    return lei;
  }

  public void setLei(String lei) {
    this.lei = lei;
  }


  public CompanyDeepsearchLEI200Response nextPage(String nextPage) {
    this.nextPage = nextPage;
    return this;
  }

  /**
   * Get nextPage
   * @return nextPage
   */
  @javax.annotation.Nullable
  public String getNextPage() {
    return nextPage;
  }

  public void setNextPage(String nextPage) {
    this.nextPage = nextPage;
  }


  public CompanyDeepsearchLEI200Response totalNumIsins(Integer totalNumIsins) {
    this.totalNumIsins = totalNumIsins;
    return this;
  }

  /**
   * Get totalNumIsins
   * @return totalNumIsins
   */
  @javax.annotation.Nullable
  public Integer getTotalNumIsins() {
    return totalNumIsins;
  }

  public void setTotalNumIsins(Integer totalNumIsins) {
    this.totalNumIsins = totalNumIsins;
  }


  public CompanyDeepsearchLEI200Response validLei(Boolean validLei) {
    this.validLei = validLei;
    return this;
  }

  /**
   * Get validLei
   * @return validLei
   */
  @javax.annotation.Nullable
  public Boolean getValidLei() {
    return validLei;
  }

  public void setValidLei(Boolean validLei) {
    this.validLei = validLei;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CompanyDeepsearchLEI200Response companyDeepsearchLEI200Response = (CompanyDeepsearchLEI200Response) o;
    return Objects.equals(this.company, companyDeepsearchLEI200Response.company) &&
        Objects.equals(this.currentPage, companyDeepsearchLEI200Response.currentPage) &&
        Objects.equals(this.isins, companyDeepsearchLEI200Response.isins) &&
        Objects.equals(this.lastPage, companyDeepsearchLEI200Response.lastPage) &&
        Objects.equals(this.lei, companyDeepsearchLEI200Response.lei) &&
        Objects.equals(this.nextPage, companyDeepsearchLEI200Response.nextPage) &&
        Objects.equals(this.totalNumIsins, companyDeepsearchLEI200Response.totalNumIsins) &&
        Objects.equals(this.validLei, companyDeepsearchLEI200Response.validLei);
  }

  @Override
  public int hashCode() {
    return Objects.hash(company, currentPage, isins, lastPage, lei, nextPage, totalNumIsins, validLei);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CompanyDeepsearchLEI200Response {\n");
    sb.append("    company: ").append(toIndentedString(company)).append("\n");
    sb.append("    currentPage: ").append(toIndentedString(currentPage)).append("\n");
    sb.append("    isins: ").append(toIndentedString(isins)).append("\n");
    sb.append("    lastPage: ").append(toIndentedString(lastPage)).append("\n");
    sb.append("    lei: ").append(toIndentedString(lei)).append("\n");
    sb.append("    nextPage: ").append(toIndentedString(nextPage)).append("\n");
    sb.append("    totalNumIsins: ").append(toIndentedString(totalNumIsins)).append("\n");
    sb.append("    validLei: ").append(toIndentedString(validLei)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("company");
    openapiFields.add("current_page");
    openapiFields.add("isins");
    openapiFields.add("last_page");
    openapiFields.add("lei");
    openapiFields.add("next_page");
    openapiFields.add("total_num_isins");
    openapiFields.add("validLei");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CompanyDeepsearchLEI200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CompanyDeepsearchLEI200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CompanyDeepsearchLEI200Response is not found in the empty JSON string", CompanyDeepsearchLEI200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CompanyDeepsearchLEI200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CompanyDeepsearchLEI200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `company`
      if (jsonObj.get("company") != null && !jsonObj.get("company").isJsonNull()) {
        CompanyDeepsearchLEI200ResponseCompany.validateJsonElement(jsonObj.get("company"));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("isins") != null && !jsonObj.get("isins").isJsonNull() && !jsonObj.get("isins").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `isins` to be an array in the JSON string but got `%s`", jsonObj.get("isins").toString()));
      }
      if ((jsonObj.get("lei") != null && !jsonObj.get("lei").isJsonNull()) && !jsonObj.get("lei").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lei` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lei").toString()));
      }
      if ((jsonObj.get("next_page") != null && !jsonObj.get("next_page").isJsonNull()) && !jsonObj.get("next_page").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `next_page` to be a primitive type in the JSON string but got `%s`", jsonObj.get("next_page").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CompanyDeepsearchLEI200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CompanyDeepsearchLEI200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CompanyDeepsearchLEI200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CompanyDeepsearchLEI200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<CompanyDeepsearchLEI200Response>() {
           @Override
           public void write(JsonWriter out, CompanyDeepsearchLEI200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CompanyDeepsearchLEI200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CompanyDeepsearchLEI200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CompanyDeepsearchLEI200Response
   * @throws IOException if the JSON string is invalid with respect to CompanyDeepsearchLEI200Response
   */
  public static CompanyDeepsearchLEI200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CompanyDeepsearchLEI200Response.class);
  }

  /**
   * Convert an instance of CompanyDeepsearchLEI200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

