/*
 * KYC API Documentation
 * API Interface to retrieve company data and products from business registers
 *
 * The version of the OpenAPI document: 2021.12
 * Contact: support@kompany.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.PepMonitorList200ResponseInner;
import org.openapitools.client.model.PepRetrieve200Response;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for V1PepsanctionApi
 */
@Disabled
public class V1PepsanctionApiTest {

    private final V1PepsanctionApi api = new V1PepsanctionApi();

    /**
     * Retrieves a list of monitor entries
     *
     * Retrieve a list of all active Pep Sanction Report monitors for this account
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pepMonitorListTest() throws ApiException {
        List<PepMonitorList200ResponseInner> response = api.pepMonitorList();
        // TODO: test validations
    }

    /**
     * Deactive a pep sanction monitor
     *
     * Unregister a previously created Pep Sanction Report Monitor
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pepMonitorUnregisterTest() throws ApiException {
        String id = null;
        api.pepMonitorUnregister(id);
        // TODO: test validations
    }

    /**
     * Update details of active Pep Sanction monitor
     *
     * Update the webhook URL of an active Pep Sanction Report Monitor
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pepMonitorUpdateTest() throws ApiException {
        String id = null;
        String webhook = null;
        PepMonitorList200ResponseInner response = api.pepMonitorUpdate(id, webhook);
        // TODO: test validations
    }

    /**
     * Orders a new Pep Sanction Check Report
     *
     * Order a new Pep Sanction Check by providing either a business or person name with some additional optional parameters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pepOrderTest() throws ApiException {
        String type = null;
        String search = null;
        String aliases = null;
        String country = null;
        String DOB = null;
        String familyName = null;
        String filters = null;
        String givenName = null;
        String LEI = null;
        String locale = null;
        String medialists = null;
        String middleName = null;
        Boolean monitoring = null;
        String peplists = null;
        String region = null;
        Boolean smartMatch = null;
        String watchlists = null;
        String webhook = null;
        api.pepOrder(type, search, aliases, country, DOB, familyName, filters, givenName, LEI, locale, medialists, middleName, monitoring, peplists, region, smartMatch, watchlists, webhook);
        // TODO: test validations
    }

    /**
     * Returns a json or pdf report
     *
     * Retrieve a completed Pep Sanction check structured or in pdf depending on given accept header
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void pepRetrieveTest() throws ApiException {
        String id = null;
        String accept = null;
        PepRetrieve200Response response = api.pepRetrieve(id, accept);
        // TODO: test validations
    }

}
