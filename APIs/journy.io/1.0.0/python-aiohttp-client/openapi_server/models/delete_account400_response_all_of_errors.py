# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.delete_account400_response_all_of_errors_parameters import DeleteAccount400ResponseAllOfErrorsParameters
from openapi_server import util


class DeleteAccount400ResponseAllOfErrors(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, fields: Dict[str, str]=None, parameters: DeleteAccount400ResponseAllOfErrorsParameters=None):
        """DeleteAccount400ResponseAllOfErrors - a model defined in OpenAPI

        :param fields: The fields of this DeleteAccount400ResponseAllOfErrors.
        :param parameters: The parameters of this DeleteAccount400ResponseAllOfErrors.
        """
        self.openapi_types = {
            'fields': Dict[str, str],
            'parameters': DeleteAccount400ResponseAllOfErrorsParameters
        }

        self.attribute_map = {
            'fields': 'fields',
            'parameters': 'parameters'
        }

        self._fields = fields
        self._parameters = parameters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DeleteAccount400ResponseAllOfErrors':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The deleteAccount_400_response_allOf_errors of this DeleteAccount400ResponseAllOfErrors.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def fields(self):
        """Gets the fields of this DeleteAccount400ResponseAllOfErrors.

        All input fields that seemed incorrect

        :return: The fields of this DeleteAccount400ResponseAllOfErrors.
        :rtype: Dict[str, str]
        """
        return self._fields

    @fields.setter
    def fields(self, fields):
        """Sets the fields of this DeleteAccount400ResponseAllOfErrors.

        All input fields that seemed incorrect

        :param fields: The fields of this DeleteAccount400ResponseAllOfErrors.
        :type fields: Dict[str, str]
        """

        self._fields = fields

    @property
    def parameters(self):
        """Gets the parameters of this DeleteAccount400ResponseAllOfErrors.


        :return: The parameters of this DeleteAccount400ResponseAllOfErrors.
        :rtype: DeleteAccount400ResponseAllOfErrorsParameters
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this DeleteAccount400ResponseAllOfErrors.


        :param parameters: The parameters of this DeleteAccount400ResponseAllOfErrors.
        :type parameters: DeleteAccount400ResponseAllOfErrorsParameters
        """

        self._parameters = parameters
