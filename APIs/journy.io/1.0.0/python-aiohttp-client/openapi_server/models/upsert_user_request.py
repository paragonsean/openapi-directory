# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.add_user_to_account_request_users_inner_identification import AddUserToAccountRequestUsersInnerIdentification
from openapi_server.models.upsert_account_request_properties_value import UpsertAccountRequestPropertiesValue
from openapi_server import util


class UpsertUserRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, identification: AddUserToAccountRequestUsersInnerIdentification=None, properties: Dict[str, UpsertAccountRequestPropertiesValue]=None):
        """UpsertUserRequest - a model defined in OpenAPI

        :param identification: The identification of this UpsertUserRequest.
        :param properties: The properties of this UpsertUserRequest.
        """
        self.openapi_types = {
            'identification': AddUserToAccountRequestUsersInnerIdentification,
            'properties': Dict[str, UpsertAccountRequestPropertiesValue]
        }

        self.attribute_map = {
            'identification': 'identification',
            'properties': 'properties'
        }

        self._identification = identification
        self._properties = properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpsertUserRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The upsertUser_request of this UpsertUserRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def identification(self):
        """Gets the identification of this UpsertUserRequest.


        :return: The identification of this UpsertUserRequest.
        :rtype: AddUserToAccountRequestUsersInnerIdentification
        """
        return self._identification

    @identification.setter
    def identification(self, identification):
        """Sets the identification of this UpsertUserRequest.


        :param identification: The identification of this UpsertUserRequest.
        :type identification: AddUserToAccountRequestUsersInnerIdentification
        """
        if identification is None:
            raise ValueError("Invalid value for `identification`, must not be `None`")

        self._identification = identification

    @property
    def properties(self):
        """Gets the properties of this UpsertUserRequest.

        The properties being set, possible values are strings, booleans, numbers and datetimes (ISO 8601)

        :return: The properties of this UpsertUserRequest.
        :rtype: Dict[str, UpsertAccountRequestPropertiesValue]
        """
        return self._properties

    @properties.setter
    def properties(self, properties):
        """Sets the properties of this UpsertUserRequest.

        The properties being set, possible values are strings, booleans, numbers and datetimes (ISO 8601)

        :param properties: The properties of this UpsertUserRequest.
        :type properties: Dict[str, UpsertAccountRequestPropertiesValue]
        """

        self._properties = properties
