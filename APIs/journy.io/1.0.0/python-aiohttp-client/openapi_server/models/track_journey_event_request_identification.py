# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.add_user_to_account_request_users_inner_identification import AddUserToAccountRequestUsersInnerIdentification
from openapi_server.models.delete_account_request_identification import DeleteAccountRequestIdentification
from openapi_server import util


class TrackJourneyEventRequestIdentification(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account: DeleteAccountRequestIdentification=None, user: AddUserToAccountRequestUsersInnerIdentification=None):
        """TrackJourneyEventRequestIdentification - a model defined in OpenAPI

        :param account: The account of this TrackJourneyEventRequestIdentification.
        :param user: The user of this TrackJourneyEventRequestIdentification.
        """
        self.openapi_types = {
            'account': DeleteAccountRequestIdentification,
            'user': AddUserToAccountRequestUsersInnerIdentification
        }

        self.attribute_map = {
            'account': 'account',
            'user': 'user'
        }

        self._account = account
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrackJourneyEventRequestIdentification':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The trackJourneyEvent_request_identification of this TrackJourneyEventRequestIdentification.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account(self):
        """Gets the account of this TrackJourneyEventRequestIdentification.


        :return: The account of this TrackJourneyEventRequestIdentification.
        :rtype: DeleteAccountRequestIdentification
        """
        return self._account

    @account.setter
    def account(self, account):
        """Sets the account of this TrackJourneyEventRequestIdentification.


        :param account: The account of this TrackJourneyEventRequestIdentification.
        :type account: DeleteAccountRequestIdentification
        """

        self._account = account

    @property
    def user(self):
        """Gets the user of this TrackJourneyEventRequestIdentification.


        :return: The user of this TrackJourneyEventRequestIdentification.
        :rtype: AddUserToAccountRequestUsersInnerIdentification
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this TrackJourneyEventRequestIdentification.


        :param user: The user of this TrackJourneyEventRequestIdentification.
        :type user: AddUserToAccountRequestUsersInnerIdentification
        """

        self._user = user
