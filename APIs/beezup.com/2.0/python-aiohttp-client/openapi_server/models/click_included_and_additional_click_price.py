# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClickIncludedAndAdditionalClickPrice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_click_price: float=None, click_included: int=None):
        """ClickIncludedAndAdditionalClickPrice - a model defined in OpenAPI

        :param additional_click_price: The additional_click_price of this ClickIncludedAndAdditionalClickPrice.
        :param click_included: The click_included of this ClickIncludedAndAdditionalClickPrice.
        """
        self.openapi_types = {
            'additional_click_price': float,
            'click_included': int
        }

        self.attribute_map = {
            'additional_click_price': 'additionalClickPrice',
            'click_included': 'clickIncluded'
        }

        self._additional_click_price = additional_click_price
        self._click_included = click_included

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClickIncludedAndAdditionalClickPrice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The clickIncludedAndAdditionalClickPrice of this ClickIncludedAndAdditionalClickPrice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_click_price(self):
        """Gets the additional_click_price of this ClickIncludedAndAdditionalClickPrice.

        The additional click price

        :return: The additional_click_price of this ClickIncludedAndAdditionalClickPrice.
        :rtype: float
        """
        return self._additional_click_price

    @additional_click_price.setter
    def additional_click_price(self, additional_click_price):
        """Sets the additional_click_price of this ClickIncludedAndAdditionalClickPrice.

        The additional click price

        :param additional_click_price: The additional_click_price of this ClickIncludedAndAdditionalClickPrice.
        :type additional_click_price: float
        """

        self._additional_click_price = additional_click_price

    @property
    def click_included(self):
        """Gets the click_included of this ClickIncludedAndAdditionalClickPrice.

        The click included

        :return: The click_included of this ClickIncludedAndAdditionalClickPrice.
        :rtype: int
        """
        return self._click_included

    @click_included.setter
    def click_included(self, click_included):
        """Sets the click_included of this ClickIncludedAndAdditionalClickPrice.

        The click included

        :param click_included: The click_included of this ClickIncludedAndAdditionalClickPrice.
        :type click_included: int
        """

        self._click_included = click_included
