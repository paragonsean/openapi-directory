# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.beez_up_common_pagination_result import BeezUPCommonPaginationResult
from openapi_server.models.channel_catalog_exportation_history_links import ChannelCatalogExportationHistoryLinks
from openapi_server.models.channel_catalog_exportation_reporting import ChannelCatalogExportationReporting
from openapi_server import util


class ChannelCatalogExportationHistory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exportations: List[ChannelCatalogExportationReporting]=None, links: ChannelCatalogExportationHistoryLinks=None, pagination_result: BeezUPCommonPaginationResult=None):
        """ChannelCatalogExportationHistory - a model defined in OpenAPI

        :param exportations: The exportations of this ChannelCatalogExportationHistory.
        :param links: The links of this ChannelCatalogExportationHistory.
        :param pagination_result: The pagination_result of this ChannelCatalogExportationHistory.
        """
        self.openapi_types = {
            'exportations': List[ChannelCatalogExportationReporting],
            'links': ChannelCatalogExportationHistoryLinks,
            'pagination_result': BeezUPCommonPaginationResult
        }

        self.attribute_map = {
            'exportations': 'exportations',
            'links': 'links',
            'pagination_result': 'paginationResult'
        }

        self._exportations = exportations
        self._links = links
        self._pagination_result = pagination_result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelCatalogExportationHistory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The channelCatalogExportationHistory of this ChannelCatalogExportationHistory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exportations(self):
        """Gets the exportations of this ChannelCatalogExportationHistory.


        :return: The exportations of this ChannelCatalogExportationHistory.
        :rtype: List[ChannelCatalogExportationReporting]
        """
        return self._exportations

    @exportations.setter
    def exportations(self, exportations):
        """Sets the exportations of this ChannelCatalogExportationHistory.


        :param exportations: The exportations of this ChannelCatalogExportationHistory.
        :type exportations: List[ChannelCatalogExportationReporting]
        """
        if exportations is None:
            raise ValueError("Invalid value for `exportations`, must not be `None`")

        self._exportations = exportations

    @property
    def links(self):
        """Gets the links of this ChannelCatalogExportationHistory.


        :return: The links of this ChannelCatalogExportationHistory.
        :rtype: ChannelCatalogExportationHistoryLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this ChannelCatalogExportationHistory.


        :param links: The links of this ChannelCatalogExportationHistory.
        :type links: ChannelCatalogExportationHistoryLinks
        """
        if links is None:
            raise ValueError("Invalid value for `links`, must not be `None`")

        self._links = links

    @property
    def pagination_result(self):
        """Gets the pagination_result of this ChannelCatalogExportationHistory.


        :return: The pagination_result of this ChannelCatalogExportationHistory.
        :rtype: BeezUPCommonPaginationResult
        """
        return self._pagination_result

    @pagination_result.setter
    def pagination_result(self, pagination_result):
        """Sets the pagination_result of this ChannelCatalogExportationHistory.


        :param pagination_result: The pagination_result of this ChannelCatalogExportationHistory.
        :type pagination_result: BeezUPCommonPaginationResult
        """

        self._pagination_result = pagination_result
