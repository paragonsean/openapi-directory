# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.export_order_list_format import ExportOrderListFormat
from openapi_server.models.order_list_request_without_pagination import OrderListRequestWithoutPagination
from openapi_server import util


class ExportOrderListRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, format: ExportOrderListFormat=ExportOrderListFormat.CSV, order_list_request_without_pagination: OrderListRequestWithoutPagination=None, store_id: str=None):
        """ExportOrderListRequest - a model defined in OpenAPI

        :param format: The format of this ExportOrderListRequest.
        :param order_list_request_without_pagination: The order_list_request_without_pagination of this ExportOrderListRequest.
        :param store_id: The store_id of this ExportOrderListRequest.
        """
        self.openapi_types = {
            'format': ExportOrderListFormat,
            'order_list_request_without_pagination': OrderListRequestWithoutPagination,
            'store_id': str
        }

        self.attribute_map = {
            'format': 'format',
            'order_list_request_without_pagination': 'orderListRequestWithoutPagination',
            'store_id': 'storeId'
        }

        self._format = format
        self._order_list_request_without_pagination = order_list_request_without_pagination
        self._store_id = store_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportOrderListRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The exportOrderListRequest of this ExportOrderListRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def format(self):
        """Gets the format of this ExportOrderListRequest.


        :return: The format of this ExportOrderListRequest.
        :rtype: ExportOrderListFormat
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this ExportOrderListRequest.


        :param format: The format of this ExportOrderListRequest.
        :type format: ExportOrderListFormat
        """

        self._format = format

    @property
    def order_list_request_without_pagination(self):
        """Gets the order_list_request_without_pagination of this ExportOrderListRequest.


        :return: The order_list_request_without_pagination of this ExportOrderListRequest.
        :rtype: OrderListRequestWithoutPagination
        """
        return self._order_list_request_without_pagination

    @order_list_request_without_pagination.setter
    def order_list_request_without_pagination(self, order_list_request_without_pagination):
        """Sets the order_list_request_without_pagination of this ExportOrderListRequest.


        :param order_list_request_without_pagination: The order_list_request_without_pagination of this ExportOrderListRequest.
        :type order_list_request_without_pagination: OrderListRequestWithoutPagination
        """
        if order_list_request_without_pagination is None:
            raise ValueError("Invalid value for `order_list_request_without_pagination`, must not be `None`")

        self._order_list_request_without_pagination = order_list_request_without_pagination

    @property
    def store_id(self):
        """Gets the store_id of this ExportOrderListRequest.

        The store identifier

        :return: The store_id of this ExportOrderListRequest.
        :rtype: str
        """
        return self._store_id

    @store_id.setter
    def store_id(self, store_id):
        """Sets the store_id of this ExportOrderListRequest.

        The store identifier

        :param store_id: The store_id of this ExportOrderListRequest.
        :type store_id: str
        """
        if store_id is None:
            raise ValueError("Invalid value for `store_id`, must not be `None`")

        self._store_id = store_id
