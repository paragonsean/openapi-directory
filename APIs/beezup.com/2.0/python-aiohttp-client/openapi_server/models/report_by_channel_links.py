# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.links_optimise_by_channel_link import LinksOptimiseByChannelLink
from openapi_server import util


class ReportByChannelLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disable_products: LinksOptimiseByChannelLink=None, enable_products: LinksOptimiseByChannelLink=None):
        """ReportByChannelLinks - a model defined in OpenAPI

        :param disable_products: The disable_products of this ReportByChannelLinks.
        :param enable_products: The enable_products of this ReportByChannelLinks.
        """
        self.openapi_types = {
            'disable_products': LinksOptimiseByChannelLink,
            'enable_products': LinksOptimiseByChannelLink
        }

        self.attribute_map = {
            'disable_products': 'disableProducts',
            'enable_products': 'enableProducts'
        }

        self._disable_products = disable_products
        self._enable_products = enable_products

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportByChannelLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The reportByChannelLinks of this ReportByChannelLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disable_products(self):
        """Gets the disable_products of this ReportByChannelLinks.


        :return: The disable_products of this ReportByChannelLinks.
        :rtype: LinksOptimiseByChannelLink
        """
        return self._disable_products

    @disable_products.setter
    def disable_products(self, disable_products):
        """Sets the disable_products of this ReportByChannelLinks.


        :param disable_products: The disable_products of this ReportByChannelLinks.
        :type disable_products: LinksOptimiseByChannelLink
        """

        self._disable_products = disable_products

    @property
    def enable_products(self):
        """Gets the enable_products of this ReportByChannelLinks.


        :return: The enable_products of this ReportByChannelLinks.
        :rtype: LinksOptimiseByChannelLink
        """
        return self._enable_products

    @enable_products.setter
    def enable_products(self, enable_products):
        """Sets the enable_products of this ReportByChannelLinks.


        :param enable_products: The enable_products of this ReportByChannelLinks.
        :type enable_products: LinksOptimiseByChannelLink
        """

        self._enable_products = enable_products
