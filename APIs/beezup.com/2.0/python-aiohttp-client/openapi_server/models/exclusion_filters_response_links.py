# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.links_configure_channel_catalog_exclusion_filters_link import LinksConfigureChannelCatalogExclusionFiltersLink
from openapi_server.models.links_get_channel_catalog_exclusion_filters_link import LinksGetChannelCatalogExclusionFiltersLink
from openapi_server import util


class ExclusionFiltersResponseLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, configure: LinksConfigureChannelCatalogExclusionFiltersLink=None, _self: LinksGetChannelCatalogExclusionFiltersLink=None):
        """ExclusionFiltersResponseLinks - a model defined in OpenAPI

        :param configure: The configure of this ExclusionFiltersResponseLinks.
        :param _self: The _self of this ExclusionFiltersResponseLinks.
        """
        self.openapi_types = {
            'configure': LinksConfigureChannelCatalogExclusionFiltersLink,
            '_self': LinksGetChannelCatalogExclusionFiltersLink
        }

        self.attribute_map = {
            'configure': 'configure',
            '_self': 'self'
        }

        self._configure = configure
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExclusionFiltersResponseLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The exclusionFiltersResponseLinks of this ExclusionFiltersResponseLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def configure(self):
        """Gets the configure of this ExclusionFiltersResponseLinks.


        :return: The configure of this ExclusionFiltersResponseLinks.
        :rtype: LinksConfigureChannelCatalogExclusionFiltersLink
        """
        return self._configure

    @configure.setter
    def configure(self, configure):
        """Sets the configure of this ExclusionFiltersResponseLinks.


        :param configure: The configure of this ExclusionFiltersResponseLinks.
        :type configure: LinksConfigureChannelCatalogExclusionFiltersLink
        """

        self._configure = configure

    @property
    def _self(self):
        """Gets the _self of this ExclusionFiltersResponseLinks.


        :return: The _self of this ExclusionFiltersResponseLinks.
        :rtype: LinksGetChannelCatalogExclusionFiltersLink
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this ExclusionFiltersResponseLinks.


        :param _self: The _self of this ExclusionFiltersResponseLinks.
        :type _self: LinksGetChannelCatalogExclusionFiltersLink
        """
        if _self is None:
            raise ValueError("Invalid value for `_self`, must not be `None`")

        self.__self = _self
