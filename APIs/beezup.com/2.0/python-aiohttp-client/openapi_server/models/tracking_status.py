# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TrackingStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, click_synchronization_utc_date: datetime=None, marketplace_order_synchonization_utc_date: datetime=None, order_synchonization_utc_date: datetime=None):
        """TrackingStatus - a model defined in OpenAPI

        :param click_synchronization_utc_date: The click_synchronization_utc_date of this TrackingStatus.
        :param marketplace_order_synchonization_utc_date: The marketplace_order_synchonization_utc_date of this TrackingStatus.
        :param order_synchonization_utc_date: The order_synchonization_utc_date of this TrackingStatus.
        """
        self.openapi_types = {
            'click_synchronization_utc_date': datetime,
            'marketplace_order_synchonization_utc_date': datetime,
            'order_synchonization_utc_date': datetime
        }

        self.attribute_map = {
            'click_synchronization_utc_date': 'clickSynchronizationUtcDate',
            'marketplace_order_synchonization_utc_date': 'marketplaceOrderSynchonizationUtcDate',
            'order_synchonization_utc_date': 'orderSynchonizationUtcDate'
        }

        self._click_synchronization_utc_date = click_synchronization_utc_date
        self._marketplace_order_synchonization_utc_date = marketplace_order_synchonization_utc_date
        self._order_synchonization_utc_date = order_synchonization_utc_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TrackingStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The trackingStatus of this TrackingStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def click_synchronization_utc_date(self):
        """Gets the click_synchronization_utc_date of this TrackingStatus.

        The utc date of the latest synchronized click

        :return: The click_synchronization_utc_date of this TrackingStatus.
        :rtype: datetime
        """
        return self._click_synchronization_utc_date

    @click_synchronization_utc_date.setter
    def click_synchronization_utc_date(self, click_synchronization_utc_date):
        """Sets the click_synchronization_utc_date of this TrackingStatus.

        The utc date of the latest synchronized click

        :param click_synchronization_utc_date: The click_synchronization_utc_date of this TrackingStatus.
        :type click_synchronization_utc_date: datetime
        """
        if click_synchronization_utc_date is None:
            raise ValueError("Invalid value for `click_synchronization_utc_date`, must not be `None`")

        self._click_synchronization_utc_date = click_synchronization_utc_date

    @property
    def marketplace_order_synchonization_utc_date(self):
        """Gets the marketplace_order_synchonization_utc_date of this TrackingStatus.

        The utc date of the latest synchronized marketplace order

        :return: The marketplace_order_synchonization_utc_date of this TrackingStatus.
        :rtype: datetime
        """
        return self._marketplace_order_synchonization_utc_date

    @marketplace_order_synchonization_utc_date.setter
    def marketplace_order_synchonization_utc_date(self, marketplace_order_synchonization_utc_date):
        """Sets the marketplace_order_synchonization_utc_date of this TrackingStatus.

        The utc date of the latest synchronized marketplace order

        :param marketplace_order_synchonization_utc_date: The marketplace_order_synchonization_utc_date of this TrackingStatus.
        :type marketplace_order_synchonization_utc_date: datetime
        """
        if marketplace_order_synchonization_utc_date is None:
            raise ValueError("Invalid value for `marketplace_order_synchonization_utc_date`, must not be `None`")

        self._marketplace_order_synchonization_utc_date = marketplace_order_synchonization_utc_date

    @property
    def order_synchonization_utc_date(self):
        """Gets the order_synchonization_utc_date of this TrackingStatus.

        The utc date of the latest synchronized order

        :return: The order_synchonization_utc_date of this TrackingStatus.
        :rtype: datetime
        """
        return self._order_synchonization_utc_date

    @order_synchonization_utc_date.setter
    def order_synchonization_utc_date(self, order_synchonization_utc_date):
        """Sets the order_synchonization_utc_date of this TrackingStatus.

        The utc date of the latest synchronized order

        :param order_synchonization_utc_date: The order_synchonization_utc_date of this TrackingStatus.
        :type order_synchonization_utc_date: datetime
        """
        if order_synchonization_utc_date is None:
            raise ValueError("Invalid value for `order_synchonization_utc_date`, must not be `None`")

        self._order_synchonization_utc_date = order_synchonization_utc_date
