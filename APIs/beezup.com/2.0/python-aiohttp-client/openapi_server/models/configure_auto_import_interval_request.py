# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ConfigureAutoImportIntervalRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, interval: str=None):
        """ConfigureAutoImportIntervalRequest - a model defined in OpenAPI

        :param interval: The interval of this ConfigureAutoImportIntervalRequest.
        """
        self.openapi_types = {
            'interval': str
        }

        self.attribute_map = {
            'interval': 'interval'
        }

        self._interval = interval

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigureAutoImportIntervalRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The configureAutoImportIntervalRequest of this ConfigureAutoImportIntervalRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def interval(self):
        """Gets the interval of this ConfigureAutoImportIntervalRequest.

        Indicate the interval in time span. (i.e. \"04:00:00\" for every 4 hours)

        :return: The interval of this ConfigureAutoImportIntervalRequest.
        :rtype: str
        """
        return self._interval

    @interval.setter
    def interval(self, interval):
        """Sets the interval of this ConfigureAutoImportIntervalRequest.

        Indicate the interval in time span. (i.e. \"04:00:00\" for every 4 hours)

        :param interval: The interval of this ConfigureAutoImportIntervalRequest.
        :type interval: str
        """
        if interval is None:
            raise ValueError("Invalid value for `interval`, must not be `None`")
        if interval is not None and not re.search(r'(00:1[5-9])|(00:[2-5][0-9])|(0[1-9]:[0-5][0-9])|(1[0-9]:[0-5][0-9])|(2[0-3]:[0-5][0-9])', interval):
            raise ValueError("Invalid value for `interval`, must be a follow pattern or equal to `/(00:1[5-9])|(00:[2-5][0-9])|(0[1-9]:[0-5][0-9])|(1[0-9]:[0-5][0-9])|(2[0-3]:[0-5][0-9])/`")

        self._interval = interval
