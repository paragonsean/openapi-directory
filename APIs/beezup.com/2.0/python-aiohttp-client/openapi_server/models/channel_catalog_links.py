# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.external_links_get_channel_catalog_marketplace_settings_link import ExternalLinksGetChannelCatalogMarketplaceSettingsLink
from openapi_server.models.external_links_get_channel_info_link import ExternalLinksGetChannelInfoLink
from openapi_server.models.links_configure_channel_catalog_column_mappings_link import LinksConfigureChannelCatalogColumnMappingsLink
from openapi_server.models.links_configure_channel_catalog_cost_settings_link import LinksConfigureChannelCatalogCostSettingsLink
from openapi_server.models.links_configure_channel_catalog_general_settings_link import LinksConfigureChannelCatalogGeneralSettingsLink
from openapi_server.models.links_delete_channel_catalog_link import LinksDeleteChannelCatalogLink
from openapi_server.models.links_disable_channel_catalog_category_mapping_link import LinksDisableChannelCatalogCategoryMappingLink
from openapi_server.models.links_disable_channel_catalog_link import LinksDisableChannelCatalogLink
from openapi_server.models.links_enable_channel_catalog_link import LinksEnableChannelCatalogLink
from openapi_server.models.links_get_channel_catalog_categories_link import LinksGetChannelCatalogCategoriesLink
from openapi_server.models.links_get_channel_catalog_exclusion_filters_link import LinksGetChannelCatalogExclusionFiltersLink
from openapi_server.models.links_get_channel_catalog_exportation_cache_info_link import LinksGetChannelCatalogExportationCacheInfoLink
from openapi_server.models.links_get_channel_catalog_link import LinksGetChannelCatalogLink
from openapi_server.models.links_get_channel_catalog_product_info_list_link import LinksGetChannelCatalogProductInfoListLink
from openapi_server.models.links_reenable_channel_catalog_category_mapping_link import LinksReenableChannelCatalogCategoryMappingLink
from openapi_server import util


class ChannelCatalogLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, category_mappings: LinksGetChannelCatalogCategoriesLink=None, channel_info: ExternalLinksGetChannelInfoLink=None, configure_column_mappings: LinksConfigureChannelCatalogColumnMappingsLink=None, configure_cost_settings: LinksConfigureChannelCatalogCostSettingsLink=None, configure_general_settings: LinksConfigureChannelCatalogGeneralSettingsLink=None, delete: LinksDeleteChannelCatalogLink=None, disable: LinksDisableChannelCatalogLink=None, disable_category_mappings: LinksDisableChannelCatalogCategoryMappingLink=None, enable: LinksEnableChannelCatalogLink=None, exclusion_filters: LinksGetChannelCatalogExclusionFiltersLink=None, exportation_cache_info: LinksGetChannelCatalogExportationCacheInfoLink=None, marketplace_settings: ExternalLinksGetChannelCatalogMarketplaceSettingsLink=None, products: LinksGetChannelCatalogProductInfoListLink=None, reenable_category_mappings: LinksReenableChannelCatalogCategoryMappingLink=None, _self: LinksGetChannelCatalogLink=None):
        """ChannelCatalogLinks - a model defined in OpenAPI

        :param category_mappings: The category_mappings of this ChannelCatalogLinks.
        :param channel_info: The channel_info of this ChannelCatalogLinks.
        :param configure_column_mappings: The configure_column_mappings of this ChannelCatalogLinks.
        :param configure_cost_settings: The configure_cost_settings of this ChannelCatalogLinks.
        :param configure_general_settings: The configure_general_settings of this ChannelCatalogLinks.
        :param delete: The delete of this ChannelCatalogLinks.
        :param disable: The disable of this ChannelCatalogLinks.
        :param disable_category_mappings: The disable_category_mappings of this ChannelCatalogLinks.
        :param enable: The enable of this ChannelCatalogLinks.
        :param exclusion_filters: The exclusion_filters of this ChannelCatalogLinks.
        :param exportation_cache_info: The exportation_cache_info of this ChannelCatalogLinks.
        :param marketplace_settings: The marketplace_settings of this ChannelCatalogLinks.
        :param products: The products of this ChannelCatalogLinks.
        :param reenable_category_mappings: The reenable_category_mappings of this ChannelCatalogLinks.
        :param _self: The _self of this ChannelCatalogLinks.
        """
        self.openapi_types = {
            'category_mappings': LinksGetChannelCatalogCategoriesLink,
            'channel_info': ExternalLinksGetChannelInfoLink,
            'configure_column_mappings': LinksConfigureChannelCatalogColumnMappingsLink,
            'configure_cost_settings': LinksConfigureChannelCatalogCostSettingsLink,
            'configure_general_settings': LinksConfigureChannelCatalogGeneralSettingsLink,
            'delete': LinksDeleteChannelCatalogLink,
            'disable': LinksDisableChannelCatalogLink,
            'disable_category_mappings': LinksDisableChannelCatalogCategoryMappingLink,
            'enable': LinksEnableChannelCatalogLink,
            'exclusion_filters': LinksGetChannelCatalogExclusionFiltersLink,
            'exportation_cache_info': LinksGetChannelCatalogExportationCacheInfoLink,
            'marketplace_settings': ExternalLinksGetChannelCatalogMarketplaceSettingsLink,
            'products': LinksGetChannelCatalogProductInfoListLink,
            'reenable_category_mappings': LinksReenableChannelCatalogCategoryMappingLink,
            '_self': LinksGetChannelCatalogLink
        }

        self.attribute_map = {
            'category_mappings': 'categoryMappings',
            'channel_info': 'channelInfo',
            'configure_column_mappings': 'configureColumnMappings',
            'configure_cost_settings': 'configureCostSettings',
            'configure_general_settings': 'configureGeneralSettings',
            'delete': 'delete',
            'disable': 'disable',
            'disable_category_mappings': 'disableCategoryMappings',
            'enable': 'enable',
            'exclusion_filters': 'exclusionFilters',
            'exportation_cache_info': 'exportationCacheInfo',
            'marketplace_settings': 'marketplaceSettings',
            'products': 'products',
            'reenable_category_mappings': 'reenableCategoryMappings',
            '_self': 'self'
        }

        self._category_mappings = category_mappings
        self._channel_info = channel_info
        self._configure_column_mappings = configure_column_mappings
        self._configure_cost_settings = configure_cost_settings
        self._configure_general_settings = configure_general_settings
        self._delete = delete
        self._disable = disable
        self._disable_category_mappings = disable_category_mappings
        self._enable = enable
        self._exclusion_filters = exclusion_filters
        self._exportation_cache_info = exportation_cache_info
        self._marketplace_settings = marketplace_settings
        self._products = products
        self._reenable_category_mappings = reenable_category_mappings
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelCatalogLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The channelCatalogLinks of this ChannelCatalogLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def category_mappings(self):
        """Gets the category_mappings of this ChannelCatalogLinks.


        :return: The category_mappings of this ChannelCatalogLinks.
        :rtype: LinksGetChannelCatalogCategoriesLink
        """
        return self._category_mappings

    @category_mappings.setter
    def category_mappings(self, category_mappings):
        """Sets the category_mappings of this ChannelCatalogLinks.


        :param category_mappings: The category_mappings of this ChannelCatalogLinks.
        :type category_mappings: LinksGetChannelCatalogCategoriesLink
        """

        self._category_mappings = category_mappings

    @property
    def channel_info(self):
        """Gets the channel_info of this ChannelCatalogLinks.


        :return: The channel_info of this ChannelCatalogLinks.
        :rtype: ExternalLinksGetChannelInfoLink
        """
        return self._channel_info

    @channel_info.setter
    def channel_info(self, channel_info):
        """Sets the channel_info of this ChannelCatalogLinks.


        :param channel_info: The channel_info of this ChannelCatalogLinks.
        :type channel_info: ExternalLinksGetChannelInfoLink
        """

        self._channel_info = channel_info

    @property
    def configure_column_mappings(self):
        """Gets the configure_column_mappings of this ChannelCatalogLinks.


        :return: The configure_column_mappings of this ChannelCatalogLinks.
        :rtype: LinksConfigureChannelCatalogColumnMappingsLink
        """
        return self._configure_column_mappings

    @configure_column_mappings.setter
    def configure_column_mappings(self, configure_column_mappings):
        """Sets the configure_column_mappings of this ChannelCatalogLinks.


        :param configure_column_mappings: The configure_column_mappings of this ChannelCatalogLinks.
        :type configure_column_mappings: LinksConfigureChannelCatalogColumnMappingsLink
        """

        self._configure_column_mappings = configure_column_mappings

    @property
    def configure_cost_settings(self):
        """Gets the configure_cost_settings of this ChannelCatalogLinks.


        :return: The configure_cost_settings of this ChannelCatalogLinks.
        :rtype: LinksConfigureChannelCatalogCostSettingsLink
        """
        return self._configure_cost_settings

    @configure_cost_settings.setter
    def configure_cost_settings(self, configure_cost_settings):
        """Sets the configure_cost_settings of this ChannelCatalogLinks.


        :param configure_cost_settings: The configure_cost_settings of this ChannelCatalogLinks.
        :type configure_cost_settings: LinksConfigureChannelCatalogCostSettingsLink
        """

        self._configure_cost_settings = configure_cost_settings

    @property
    def configure_general_settings(self):
        """Gets the configure_general_settings of this ChannelCatalogLinks.


        :return: The configure_general_settings of this ChannelCatalogLinks.
        :rtype: LinksConfigureChannelCatalogGeneralSettingsLink
        """
        return self._configure_general_settings

    @configure_general_settings.setter
    def configure_general_settings(self, configure_general_settings):
        """Sets the configure_general_settings of this ChannelCatalogLinks.


        :param configure_general_settings: The configure_general_settings of this ChannelCatalogLinks.
        :type configure_general_settings: LinksConfigureChannelCatalogGeneralSettingsLink
        """

        self._configure_general_settings = configure_general_settings

    @property
    def delete(self):
        """Gets the delete of this ChannelCatalogLinks.


        :return: The delete of this ChannelCatalogLinks.
        :rtype: LinksDeleteChannelCatalogLink
        """
        return self._delete

    @delete.setter
    def delete(self, delete):
        """Sets the delete of this ChannelCatalogLinks.


        :param delete: The delete of this ChannelCatalogLinks.
        :type delete: LinksDeleteChannelCatalogLink
        """

        self._delete = delete

    @property
    def disable(self):
        """Gets the disable of this ChannelCatalogLinks.


        :return: The disable of this ChannelCatalogLinks.
        :rtype: LinksDisableChannelCatalogLink
        """
        return self._disable

    @disable.setter
    def disable(self, disable):
        """Sets the disable of this ChannelCatalogLinks.


        :param disable: The disable of this ChannelCatalogLinks.
        :type disable: LinksDisableChannelCatalogLink
        """

        self._disable = disable

    @property
    def disable_category_mappings(self):
        """Gets the disable_category_mappings of this ChannelCatalogLinks.


        :return: The disable_category_mappings of this ChannelCatalogLinks.
        :rtype: LinksDisableChannelCatalogCategoryMappingLink
        """
        return self._disable_category_mappings

    @disable_category_mappings.setter
    def disable_category_mappings(self, disable_category_mappings):
        """Sets the disable_category_mappings of this ChannelCatalogLinks.


        :param disable_category_mappings: The disable_category_mappings of this ChannelCatalogLinks.
        :type disable_category_mappings: LinksDisableChannelCatalogCategoryMappingLink
        """

        self._disable_category_mappings = disable_category_mappings

    @property
    def enable(self):
        """Gets the enable of this ChannelCatalogLinks.


        :return: The enable of this ChannelCatalogLinks.
        :rtype: LinksEnableChannelCatalogLink
        """
        return self._enable

    @enable.setter
    def enable(self, enable):
        """Sets the enable of this ChannelCatalogLinks.


        :param enable: The enable of this ChannelCatalogLinks.
        :type enable: LinksEnableChannelCatalogLink
        """

        self._enable = enable

    @property
    def exclusion_filters(self):
        """Gets the exclusion_filters of this ChannelCatalogLinks.


        :return: The exclusion_filters of this ChannelCatalogLinks.
        :rtype: LinksGetChannelCatalogExclusionFiltersLink
        """
        return self._exclusion_filters

    @exclusion_filters.setter
    def exclusion_filters(self, exclusion_filters):
        """Sets the exclusion_filters of this ChannelCatalogLinks.


        :param exclusion_filters: The exclusion_filters of this ChannelCatalogLinks.
        :type exclusion_filters: LinksGetChannelCatalogExclusionFiltersLink
        """

        self._exclusion_filters = exclusion_filters

    @property
    def exportation_cache_info(self):
        """Gets the exportation_cache_info of this ChannelCatalogLinks.


        :return: The exportation_cache_info of this ChannelCatalogLinks.
        :rtype: LinksGetChannelCatalogExportationCacheInfoLink
        """
        return self._exportation_cache_info

    @exportation_cache_info.setter
    def exportation_cache_info(self, exportation_cache_info):
        """Sets the exportation_cache_info of this ChannelCatalogLinks.


        :param exportation_cache_info: The exportation_cache_info of this ChannelCatalogLinks.
        :type exportation_cache_info: LinksGetChannelCatalogExportationCacheInfoLink
        """

        self._exportation_cache_info = exportation_cache_info

    @property
    def marketplace_settings(self):
        """Gets the marketplace_settings of this ChannelCatalogLinks.


        :return: The marketplace_settings of this ChannelCatalogLinks.
        :rtype: ExternalLinksGetChannelCatalogMarketplaceSettingsLink
        """
        return self._marketplace_settings

    @marketplace_settings.setter
    def marketplace_settings(self, marketplace_settings):
        """Sets the marketplace_settings of this ChannelCatalogLinks.


        :param marketplace_settings: The marketplace_settings of this ChannelCatalogLinks.
        :type marketplace_settings: ExternalLinksGetChannelCatalogMarketplaceSettingsLink
        """

        self._marketplace_settings = marketplace_settings

    @property
    def products(self):
        """Gets the products of this ChannelCatalogLinks.


        :return: The products of this ChannelCatalogLinks.
        :rtype: LinksGetChannelCatalogProductInfoListLink
        """
        return self._products

    @products.setter
    def products(self, products):
        """Sets the products of this ChannelCatalogLinks.


        :param products: The products of this ChannelCatalogLinks.
        :type products: LinksGetChannelCatalogProductInfoListLink
        """

        self._products = products

    @property
    def reenable_category_mappings(self):
        """Gets the reenable_category_mappings of this ChannelCatalogLinks.


        :return: The reenable_category_mappings of this ChannelCatalogLinks.
        :rtype: LinksReenableChannelCatalogCategoryMappingLink
        """
        return self._reenable_category_mappings

    @reenable_category_mappings.setter
    def reenable_category_mappings(self, reenable_category_mappings):
        """Sets the reenable_category_mappings of this ChannelCatalogLinks.


        :param reenable_category_mappings: The reenable_category_mappings of this ChannelCatalogLinks.
        :type reenable_category_mappings: LinksReenableChannelCatalogCategoryMappingLink
        """

        self._reenable_category_mappings = reenable_category_mappings

    @property
    def _self(self):
        """Gets the _self of this ChannelCatalogLinks.


        :return: The _self of this ChannelCatalogLinks.
        :rtype: LinksGetChannelCatalogLink
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this ChannelCatalogLinks.


        :param _self: The _self of this ChannelCatalogLinks.
        :type _self: LinksGetChannelCatalogLink
        """
        if _self is None:
            raise ValueError("Invalid value for `_self`, must not be `None`")

        self.__self = _self
