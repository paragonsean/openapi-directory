# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_credential import ApiCredential
from openapi_server import util


class ApiCredentials(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, credentials: List[ApiCredential]=None):
        """ApiCredentials - a model defined in OpenAPI

        :param credentials: The credentials of this ApiCredentials.
        """
        self.openapi_types = {
            'credentials': List[ApiCredential]
        }

        self.attribute_map = {
            'credentials': 'credentials'
        }

        self._credentials = credentials

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiCredentials':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The apiCredentials of this ApiCredentials.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def credentials(self):
        """Gets the credentials of this ApiCredentials.

        Your API credential list

        :return: The credentials of this ApiCredentials.
        :rtype: List[ApiCredential]
        """
        return self._credentials

    @credentials.setter
    def credentials(self, credentials):
        """Sets the credentials of this ApiCredentials.

        Your API credential list

        :param credentials: The credentials of this ApiCredentials.
        :type credentials: List[ApiCredential]
        """

        self._credentials = credentials
