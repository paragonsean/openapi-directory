# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.date_search_type import DateSearchType
from openapi_server import util


class OrderListRequestWithoutPagination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, account_ids: List[int]=None, beez_up_order_statuses: List[str]=None, begin_period_utc_date: datetime=None, date_search_type: DateSearchType=DateSearchType.MODIFICATION, end_period_utc_date: datetime=None, invoice_availability_type: str=None, marketplace_business_codes: List[str]=None, marketplace_order_ids: List[str]=None, marketplace_technical_codes: List[str]=None, order_merchant_info_synchronization_status: str=None, order_buyer_name: str=None, order_merchant_order_ids: List[str]=None, store_ids: List[str]=None):
        """OrderListRequestWithoutPagination - a model defined in OpenAPI

        :param account_ids: The account_ids of this OrderListRequestWithoutPagination.
        :param beez_up_order_statuses: The beez_up_order_statuses of this OrderListRequestWithoutPagination.
        :param begin_period_utc_date: The begin_period_utc_date of this OrderListRequestWithoutPagination.
        :param date_search_type: The date_search_type of this OrderListRequestWithoutPagination.
        :param end_period_utc_date: The end_period_utc_date of this OrderListRequestWithoutPagination.
        :param invoice_availability_type: The invoice_availability_type of this OrderListRequestWithoutPagination.
        :param marketplace_business_codes: The marketplace_business_codes of this OrderListRequestWithoutPagination.
        :param marketplace_order_ids: The marketplace_order_ids of this OrderListRequestWithoutPagination.
        :param marketplace_technical_codes: The marketplace_technical_codes of this OrderListRequestWithoutPagination.
        :param order_merchant_info_synchronization_status: The order_merchant_info_synchronization_status of this OrderListRequestWithoutPagination.
        :param order_buyer_name: The order_buyer_name of this OrderListRequestWithoutPagination.
        :param order_merchant_order_ids: The order_merchant_order_ids of this OrderListRequestWithoutPagination.
        :param store_ids: The store_ids of this OrderListRequestWithoutPagination.
        """
        self.openapi_types = {
            'account_ids': List[int],
            'beez_up_order_statuses': List[str],
            'begin_period_utc_date': datetime,
            'date_search_type': DateSearchType,
            'end_period_utc_date': datetime,
            'invoice_availability_type': str,
            'marketplace_business_codes': List[str],
            'marketplace_order_ids': List[str],
            'marketplace_technical_codes': List[str],
            'order_merchant_info_synchronization_status': str,
            'order_buyer_name': str,
            'order_merchant_order_ids': List[str],
            'store_ids': List[str]
        }

        self.attribute_map = {
            'account_ids': 'accountIds',
            'beez_up_order_statuses': 'beezUPOrderStatuses',
            'begin_period_utc_date': 'beginPeriodUtcDate',
            'date_search_type': 'dateSearchType',
            'end_period_utc_date': 'endPeriodUtcDate',
            'invoice_availability_type': 'invoiceAvailabilityType',
            'marketplace_business_codes': 'marketplaceBusinessCodes',
            'marketplace_order_ids': 'marketplaceOrderIds',
            'marketplace_technical_codes': 'marketplaceTechnicalCodes',
            'order_merchant_info_synchronization_status': 'orderMerchantInfoSynchronizationStatus',
            'order_buyer_name': 'order_Buyer_Name',
            'order_merchant_order_ids': 'order_MerchantOrderIds',
            'store_ids': 'storeIds'
        }

        self._account_ids = account_ids
        self._beez_up_order_statuses = beez_up_order_statuses
        self._begin_period_utc_date = begin_period_utc_date
        self._date_search_type = date_search_type
        self._end_period_utc_date = end_period_utc_date
        self._invoice_availability_type = invoice_availability_type
        self._marketplace_business_codes = marketplace_business_codes
        self._marketplace_order_ids = marketplace_order_ids
        self._marketplace_technical_codes = marketplace_technical_codes
        self._order_merchant_info_synchronization_status = order_merchant_info_synchronization_status
        self._order_buyer_name = order_buyer_name
        self._order_merchant_order_ids = order_merchant_order_ids
        self._store_ids = store_ids

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderListRequestWithoutPagination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The orderListRequestWithoutPagination of this OrderListRequestWithoutPagination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def account_ids(self):
        """Gets the account_ids of this OrderListRequestWithoutPagination.

        Account Id list

        :return: The account_ids of this OrderListRequestWithoutPagination.
        :rtype: List[int]
        """
        return self._account_ids

    @account_ids.setter
    def account_ids(self, account_ids):
        """Sets the account_ids of this OrderListRequestWithoutPagination.

        Account Id list

        :param account_ids: The account_ids of this OrderListRequestWithoutPagination.
        :type account_ids: List[int]
        """

        self._account_ids = account_ids

    @property
    def beez_up_order_statuses(self):
        """Gets the beez_up_order_statuses of this OrderListRequestWithoutPagination.


        :return: The beez_up_order_statuses of this OrderListRequestWithoutPagination.
        :rtype: List[str]
        """
        return self._beez_up_order_statuses

    @beez_up_order_statuses.setter
    def beez_up_order_statuses(self, beez_up_order_statuses):
        """Sets the beez_up_order_statuses of this OrderListRequestWithoutPagination.


        :param beez_up_order_statuses: The beez_up_order_statuses of this OrderListRequestWithoutPagination.
        :type beez_up_order_statuses: List[str]
        """

        self._beez_up_order_statuses = beez_up_order_statuses

    @property
    def begin_period_utc_date(self):
        """Gets the begin_period_utc_date of this OrderListRequestWithoutPagination.

        The begin period you want to make the search. \\ The period MUST not be greater than 62 days. The begin period MUST be lower than the end period. 

        :return: The begin_period_utc_date of this OrderListRequestWithoutPagination.
        :rtype: datetime
        """
        return self._begin_period_utc_date

    @begin_period_utc_date.setter
    def begin_period_utc_date(self, begin_period_utc_date):
        """Sets the begin_period_utc_date of this OrderListRequestWithoutPagination.

        The begin period you want to make the search. \\ The period MUST not be greater than 62 days. The begin period MUST be lower than the end period. 

        :param begin_period_utc_date: The begin_period_utc_date of this OrderListRequestWithoutPagination.
        :type begin_period_utc_date: datetime
        """
        if begin_period_utc_date is None:
            raise ValueError("Invalid value for `begin_period_utc_date`, must not be `None`")

        self._begin_period_utc_date = begin_period_utc_date

    @property
    def date_search_type(self):
        """Gets the date_search_type of this OrderListRequestWithoutPagination.


        :return: The date_search_type of this OrderListRequestWithoutPagination.
        :rtype: DateSearchType
        """
        return self._date_search_type

    @date_search_type.setter
    def date_search_type(self, date_search_type):
        """Sets the date_search_type of this OrderListRequestWithoutPagination.


        :param date_search_type: The date_search_type of this OrderListRequestWithoutPagination.
        :type date_search_type: DateSearchType
        """

        self._date_search_type = date_search_type

    @property
    def end_period_utc_date(self):
        """Gets the end_period_utc_date of this OrderListRequestWithoutPagination.

        The end period of you search. \\ The period MUST not be greater than 62 days. \\ The end period MUST be greater than the begin period. The end period MUST be lower to the current date. 

        :return: The end_period_utc_date of this OrderListRequestWithoutPagination.
        :rtype: datetime
        """
        return self._end_period_utc_date

    @end_period_utc_date.setter
    def end_period_utc_date(self, end_period_utc_date):
        """Sets the end_period_utc_date of this OrderListRequestWithoutPagination.

        The end period of you search. \\ The period MUST not be greater than 62 days. \\ The end period MUST be greater than the begin period. The end period MUST be lower to the current date. 

        :param end_period_utc_date: The end_period_utc_date of this OrderListRequestWithoutPagination.
        :type end_period_utc_date: datetime
        """
        if end_period_utc_date is None:
            raise ValueError("Invalid value for `end_period_utc_date`, must not be `None`")

        self._end_period_utc_date = end_period_utc_date

    @property
    def invoice_availability_type(self):
        """Gets the invoice_availability_type of this OrderListRequestWithoutPagination.

        Indicates on which invoice availability to filter

        :return: The invoice_availability_type of this OrderListRequestWithoutPagination.
        :rtype: str
        """
        return self._invoice_availability_type

    @invoice_availability_type.setter
    def invoice_availability_type(self, invoice_availability_type):
        """Sets the invoice_availability_type of this OrderListRequestWithoutPagination.

        Indicates on which invoice availability to filter

        :param invoice_availability_type: The invoice_availability_type of this OrderListRequestWithoutPagination.
        :type invoice_availability_type: str
        """

        self._invoice_availability_type = invoice_availability_type

    @property
    def marketplace_business_codes(self):
        """Gets the marketplace_business_codes of this OrderListRequestWithoutPagination.


        :return: The marketplace_business_codes of this OrderListRequestWithoutPagination.
        :rtype: List[str]
        """
        return self._marketplace_business_codes

    @marketplace_business_codes.setter
    def marketplace_business_codes(self, marketplace_business_codes):
        """Sets the marketplace_business_codes of this OrderListRequestWithoutPagination.


        :param marketplace_business_codes: The marketplace_business_codes of this OrderListRequestWithoutPagination.
        :type marketplace_business_codes: List[str]
        """

        self._marketplace_business_codes = marketplace_business_codes

    @property
    def marketplace_order_ids(self):
        """Gets the marketplace_order_ids of this OrderListRequestWithoutPagination.


        :return: The marketplace_order_ids of this OrderListRequestWithoutPagination.
        :rtype: List[str]
        """
        return self._marketplace_order_ids

    @marketplace_order_ids.setter
    def marketplace_order_ids(self, marketplace_order_ids):
        """Sets the marketplace_order_ids of this OrderListRequestWithoutPagination.


        :param marketplace_order_ids: The marketplace_order_ids of this OrderListRequestWithoutPagination.
        :type marketplace_order_ids: List[str]
        """

        self._marketplace_order_ids = marketplace_order_ids

    @property
    def marketplace_technical_codes(self):
        """Gets the marketplace_technical_codes of this OrderListRequestWithoutPagination.


        :return: The marketplace_technical_codes of this OrderListRequestWithoutPagination.
        :rtype: List[str]
        """
        return self._marketplace_technical_codes

    @marketplace_technical_codes.setter
    def marketplace_technical_codes(self, marketplace_technical_codes):
        """Sets the marketplace_technical_codes of this OrderListRequestWithoutPagination.


        :param marketplace_technical_codes: The marketplace_technical_codes of this OrderListRequestWithoutPagination.
        :type marketplace_technical_codes: List[str]
        """

        self._marketplace_technical_codes = marketplace_technical_codes

    @property
    def order_merchant_info_synchronization_status(self):
        """Gets the order_merchant_info_synchronization_status of this OrderListRequestWithoutPagination.

        Indicates on which order merchant info synchronization status to filter

        :return: The order_merchant_info_synchronization_status of this OrderListRequestWithoutPagination.
        :rtype: str
        """
        return self._order_merchant_info_synchronization_status

    @order_merchant_info_synchronization_status.setter
    def order_merchant_info_synchronization_status(self, order_merchant_info_synchronization_status):
        """Sets the order_merchant_info_synchronization_status of this OrderListRequestWithoutPagination.

        Indicates on which order merchant info synchronization status to filter

        :param order_merchant_info_synchronization_status: The order_merchant_info_synchronization_status of this OrderListRequestWithoutPagination.
        :type order_merchant_info_synchronization_status: str
        """

        self._order_merchant_info_synchronization_status = order_merchant_info_synchronization_status

    @property
    def order_buyer_name(self):
        """Gets the order_buyer_name of this OrderListRequestWithoutPagination.

        Buyer full name

        :return: The order_buyer_name of this OrderListRequestWithoutPagination.
        :rtype: str
        """
        return self._order_buyer_name

    @order_buyer_name.setter
    def order_buyer_name(self, order_buyer_name):
        """Sets the order_buyer_name of this OrderListRequestWithoutPagination.

        Buyer full name

        :param order_buyer_name: The order_buyer_name of this OrderListRequestWithoutPagination.
        :type order_buyer_name: str
        """

        self._order_buyer_name = order_buyer_name

    @property
    def order_merchant_order_ids(self):
        """Gets the order_merchant_order_ids of this OrderListRequestWithoutPagination.

        Merchant order id list

        :return: The order_merchant_order_ids of this OrderListRequestWithoutPagination.
        :rtype: List[str]
        """
        return self._order_merchant_order_ids

    @order_merchant_order_ids.setter
    def order_merchant_order_ids(self, order_merchant_order_ids):
        """Sets the order_merchant_order_ids of this OrderListRequestWithoutPagination.

        Merchant order id list

        :param order_merchant_order_ids: The order_merchant_order_ids of this OrderListRequestWithoutPagination.
        :type order_merchant_order_ids: List[str]
        """

        self._order_merchant_order_ids = order_merchant_order_ids

    @property
    def store_ids(self):
        """Gets the store_ids of this OrderListRequestWithoutPagination.

        Store Id list

        :return: The store_ids of this OrderListRequestWithoutPagination.
        :rtype: List[str]
        """
        return self._store_ids

    @store_ids.setter
    def store_ids(self, store_ids):
        """Sets the store_ids of this OrderListRequestWithoutPagination.

        Store Id list

        :param store_ids: The store_ids of this OrderListRequestWithoutPagination.
        :type store_ids: List[str]
        """

        self._store_ids = store_ids
