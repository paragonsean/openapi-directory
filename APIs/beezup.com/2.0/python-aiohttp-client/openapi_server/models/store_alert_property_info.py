# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class StoreAlertPropertyInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, property_id: int=None, property_value: str=None, property_name: str=None, property_validation_expression: str=None):
        """StoreAlertPropertyInfo - a model defined in OpenAPI

        :param property_id: The property_id of this StoreAlertPropertyInfo.
        :param property_value: The property_value of this StoreAlertPropertyInfo.
        :param property_name: The property_name of this StoreAlertPropertyInfo.
        :param property_validation_expression: The property_validation_expression of this StoreAlertPropertyInfo.
        """
        self.openapi_types = {
            'property_id': int,
            'property_value': str,
            'property_name': str,
            'property_validation_expression': str
        }

        self.attribute_map = {
            'property_id': 'propertyId',
            'property_value': 'propertyValue',
            'property_name': 'propertyName',
            'property_validation_expression': 'propertyValidationExpression'
        }

        self._property_id = property_id
        self._property_value = property_value
        self._property_name = property_name
        self._property_validation_expression = property_validation_expression

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StoreAlertPropertyInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The storeAlertPropertyInfo of this StoreAlertPropertyInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def property_id(self):
        """Gets the property_id of this StoreAlertPropertyInfo.

        The property identifier of the alert

        :return: The property_id of this StoreAlertPropertyInfo.
        :rtype: int
        """
        return self._property_id

    @property_id.setter
    def property_id(self, property_id):
        """Sets the property_id of this StoreAlertPropertyInfo.

        The property identifier of the alert

        :param property_id: The property_id of this StoreAlertPropertyInfo.
        :type property_id: int
        """
        if property_id is None:
            raise ValueError("Invalid value for `property_id`, must not be `None`")

        self._property_id = property_id

    @property
    def property_value(self):
        """Gets the property_value of this StoreAlertPropertyInfo.

        The property value

        :return: The property_value of this StoreAlertPropertyInfo.
        :rtype: str
        """
        return self._property_value

    @property_value.setter
    def property_value(self, property_value):
        """Sets the property_value of this StoreAlertPropertyInfo.

        The property value

        :param property_value: The property_value of this StoreAlertPropertyInfo.
        :type property_value: str
        """
        if property_value is None:
            raise ValueError("Invalid value for `property_value`, must not be `None`")

        self._property_value = property_value

    @property
    def property_name(self):
        """Gets the property_name of this StoreAlertPropertyInfo.

        The property name of the alert

        :return: The property_name of this StoreAlertPropertyInfo.
        :rtype: str
        """
        return self._property_name

    @property_name.setter
    def property_name(self, property_name):
        """Sets the property_name of this StoreAlertPropertyInfo.

        The property name of the alert

        :param property_name: The property_name of this StoreAlertPropertyInfo.
        :type property_name: str
        """
        if property_name is None:
            raise ValueError("Invalid value for `property_name`, must not be `None`")

        self._property_name = property_name

    @property
    def property_validation_expression(self):
        """Gets the property_validation_expression of this StoreAlertPropertyInfo.

        The regular expression related to the alert property

        :return: The property_validation_expression of this StoreAlertPropertyInfo.
        :rtype: str
        """
        return self._property_validation_expression

    @property_validation_expression.setter
    def property_validation_expression(self, property_validation_expression):
        """Sets the property_validation_expression of this StoreAlertPropertyInfo.

        The regular expression related to the alert property

        :param property_validation_expression: The property_validation_expression of this StoreAlertPropertyInfo.
        :type property_validation_expression: str
        """

        self._property_validation_expression = property_validation_expression
