# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.links_catalog_change_catalog_column_user_name_link import LinksCatalogChangeCatalogColumnUserNameLink
from openapi_server import util


class CatalogColumnLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, rename: LinksCatalogChangeCatalogColumnUserNameLink=None):
        """CatalogColumnLinks - a model defined in OpenAPI

        :param rename: The rename of this CatalogColumnLinks.
        """
        self.openapi_types = {
            'rename': LinksCatalogChangeCatalogColumnUserNameLink
        }

        self.attribute_map = {
            'rename': 'rename'
        }

        self._rename = rename

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CatalogColumnLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The catalogColumnLinks of this CatalogColumnLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def rename(self):
        """Gets the rename of this CatalogColumnLinks.


        :return: The rename of this CatalogColumnLinks.
        :rtype: LinksCatalogChangeCatalogColumnUserNameLink
        """
        return self._rename

    @rename.setter
    def rename(self, rename):
        """Sets the rename of this CatalogColumnLinks.


        :param rename: The rename of this CatalogColumnLinks.
        :type rename: LinksCatalogChangeCatalogColumnUserNameLink
        """

        self._rename = rename
