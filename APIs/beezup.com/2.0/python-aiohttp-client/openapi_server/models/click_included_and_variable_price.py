# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClickIncludedAndVariablePrice(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, click_included: int=None, variable_price: float=None):
        """ClickIncludedAndVariablePrice - a model defined in OpenAPI

        :param click_included: The click_included of this ClickIncludedAndVariablePrice.
        :param variable_price: The variable_price of this ClickIncludedAndVariablePrice.
        """
        self.openapi_types = {
            'click_included': int,
            'variable_price': float
        }

        self.attribute_map = {
            'click_included': 'clickIncluded',
            'variable_price': 'variablePrice'
        }

        self._click_included = click_included
        self._variable_price = variable_price

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClickIncludedAndVariablePrice':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The clickIncludedAndVariablePrice of this ClickIncludedAndVariablePrice.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def click_included(self):
        """Gets the click_included of this ClickIncludedAndVariablePrice.

        Click included

        :return: The click_included of this ClickIncludedAndVariablePrice.
        :rtype: int
        """
        return self._click_included

    @click_included.setter
    def click_included(self, click_included):
        """Sets the click_included of this ClickIncludedAndVariablePrice.

        Click included

        :param click_included: The click_included of this ClickIncludedAndVariablePrice.
        :type click_included: int
        """

        self._click_included = click_included

    @property
    def variable_price(self):
        """Gets the variable_price of this ClickIncludedAndVariablePrice.

        The pricing applied for this range

        :return: The variable_price of this ClickIncludedAndVariablePrice.
        :rtype: float
        """
        return self._variable_price

    @variable_price.setter
    def variable_price(self, variable_price):
        """Sets the variable_price of this ClickIncludedAndVariablePrice.

        The pricing applied for this range

        :param variable_price: The variable_price of this ClickIncludedAndVariablePrice.
        :type variable_price: float
        """

        self._variable_price = variable_price
