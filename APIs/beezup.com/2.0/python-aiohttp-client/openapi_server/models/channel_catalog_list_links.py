# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.external_links_catalog_get_beez_up_columns_link import ExternalLinksCatalogGetBeezUPColumnsLink
from openapi_server.models.links_add_channel_catalog_link import LinksAddChannelCatalogLink
from openapi_server.models.links_get_channel_catalog_filter_operators_link import LinksGetChannelCatalogFilterOperatorsLink
from openapi_server.models.links_get_channel_catalogs_link import LinksGetChannelCatalogsLink
from openapi_server import util


class ChannelCatalogListLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, add: LinksAddChannelCatalogLink=None, beez_up_columns: ExternalLinksCatalogGetBeezUPColumnsLink=None, filter_operators: LinksGetChannelCatalogFilterOperatorsLink=None, _self: LinksGetChannelCatalogsLink=None):
        """ChannelCatalogListLinks - a model defined in OpenAPI

        :param add: The add of this ChannelCatalogListLinks.
        :param beez_up_columns: The beez_up_columns of this ChannelCatalogListLinks.
        :param filter_operators: The filter_operators of this ChannelCatalogListLinks.
        :param _self: The _self of this ChannelCatalogListLinks.
        """
        self.openapi_types = {
            'add': LinksAddChannelCatalogLink,
            'beez_up_columns': ExternalLinksCatalogGetBeezUPColumnsLink,
            'filter_operators': LinksGetChannelCatalogFilterOperatorsLink,
            '_self': LinksGetChannelCatalogsLink
        }

        self.attribute_map = {
            'add': 'add',
            'beez_up_columns': 'beezUPColumns',
            'filter_operators': 'filterOperators',
            '_self': 'self'
        }

        self._add = add
        self._beez_up_columns = beez_up_columns
        self._filter_operators = filter_operators
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelCatalogListLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The channelCatalogListLinks of this ChannelCatalogListLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def add(self):
        """Gets the add of this ChannelCatalogListLinks.


        :return: The add of this ChannelCatalogListLinks.
        :rtype: LinksAddChannelCatalogLink
        """
        return self._add

    @add.setter
    def add(self, add):
        """Sets the add of this ChannelCatalogListLinks.


        :param add: The add of this ChannelCatalogListLinks.
        :type add: LinksAddChannelCatalogLink
        """

        self._add = add

    @property
    def beez_up_columns(self):
        """Gets the beez_up_columns of this ChannelCatalogListLinks.


        :return: The beez_up_columns of this ChannelCatalogListLinks.
        :rtype: ExternalLinksCatalogGetBeezUPColumnsLink
        """
        return self._beez_up_columns

    @beez_up_columns.setter
    def beez_up_columns(self, beez_up_columns):
        """Sets the beez_up_columns of this ChannelCatalogListLinks.


        :param beez_up_columns: The beez_up_columns of this ChannelCatalogListLinks.
        :type beez_up_columns: ExternalLinksCatalogGetBeezUPColumnsLink
        """

        self._beez_up_columns = beez_up_columns

    @property
    def filter_operators(self):
        """Gets the filter_operators of this ChannelCatalogListLinks.


        :return: The filter_operators of this ChannelCatalogListLinks.
        :rtype: LinksGetChannelCatalogFilterOperatorsLink
        """
        return self._filter_operators

    @filter_operators.setter
    def filter_operators(self, filter_operators):
        """Sets the filter_operators of this ChannelCatalogListLinks.


        :param filter_operators: The filter_operators of this ChannelCatalogListLinks.
        :type filter_operators: LinksGetChannelCatalogFilterOperatorsLink
        """

        self._filter_operators = filter_operators

    @property
    def _self(self):
        """Gets the _self of this ChannelCatalogListLinks.


        :return: The _self of this ChannelCatalogListLinks.
        :rtype: LinksGetChannelCatalogsLink
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this ChannelCatalogListLinks.


        :param _self: The _self of this ChannelCatalogListLinks.
        :type _self: LinksGetChannelCatalogsLink
        """

        self.__self = _self
