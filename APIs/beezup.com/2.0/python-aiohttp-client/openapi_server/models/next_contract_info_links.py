# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.links_delete_next_contract_link import LinksDeleteNextContractLink
from openapi_server import util


class NextContractInfoLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delete: LinksDeleteNextContractLink=None):
        """NextContractInfoLinks - a model defined in OpenAPI

        :param delete: The delete of this NextContractInfoLinks.
        """
        self.openapi_types = {
            'delete': LinksDeleteNextContractLink
        }

        self.attribute_map = {
            'delete': 'delete'
        }

        self._delete = delete

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NextContractInfoLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The nextContractInfoLinks of this NextContractInfoLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delete(self):
        """Gets the delete of this NextContractInfoLinks.


        :return: The delete of this NextContractInfoLinks.
        :rtype: LinksDeleteNextContractLink
        """
        return self._delete

    @delete.setter
    def delete(self, delete):
        """Sets the delete of this NextContractInfoLinks.


        :param delete: The delete of this NextContractInfoLinks.
        :type delete: LinksDeleteNextContractLink
        """

        self._delete = delete
