# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.catalog_column import CatalogColumn
from openapi_server import util


class CatalogColumnList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, catalog_columns: List[CatalogColumn]=None):
        """CatalogColumnList - a model defined in OpenAPI

        :param catalog_columns: The catalog_columns of this CatalogColumnList.
        """
        self.openapi_types = {
            'catalog_columns': List[CatalogColumn]
        }

        self.attribute_map = {
            'catalog_columns': 'catalogColumns'
        }

        self._catalog_columns = catalog_columns

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CatalogColumnList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The catalogColumnList of this CatalogColumnList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def catalog_columns(self):
        """Gets the catalog_columns of this CatalogColumnList.


        :return: The catalog_columns of this CatalogColumnList.
        :rtype: List[CatalogColumn]
        """
        return self._catalog_columns

    @catalog_columns.setter
    def catalog_columns(self, catalog_columns):
        """Sets the catalog_columns of this CatalogColumnList.


        :param catalog_columns: The catalog_columns of this CatalogColumnList.
        :type catalog_columns: List[CatalogColumn]
        """
        if catalog_columns is None:
            raise ValueError("Invalid value for `catalog_columns`, must not be `None`")

        self._catalog_columns = catalog_columns
