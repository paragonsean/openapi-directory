# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BeezUPCommonExceptionDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, help_link: str=None, message: str=None, stack_trace: str=None, type: str=None):
        """BeezUPCommonExceptionDetail - a model defined in OpenAPI

        :param help_link: The help_link of this BeezUPCommonExceptionDetail.
        :param message: The message of this BeezUPCommonExceptionDetail.
        :param stack_trace: The stack_trace of this BeezUPCommonExceptionDetail.
        :param type: The type of this BeezUPCommonExceptionDetail.
        """
        self.openapi_types = {
            'help_link': str,
            'message': str,
            'stack_trace': str,
            'type': str
        }

        self.attribute_map = {
            'help_link': 'helpLink',
            'message': 'message',
            'stack_trace': 'stackTrace',
            'type': 'type'
        }

        self._help_link = help_link
        self._message = message
        self._stack_trace = stack_trace
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BeezUPCommonExceptionDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BeezUP.Common.ExceptionDetail of this BeezUPCommonExceptionDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def help_link(self):
        """Gets the help_link of this BeezUPCommonExceptionDetail.


        :return: The help_link of this BeezUPCommonExceptionDetail.
        :rtype: str
        """
        return self._help_link

    @help_link.setter
    def help_link(self, help_link):
        """Sets the help_link of this BeezUPCommonExceptionDetail.


        :param help_link: The help_link of this BeezUPCommonExceptionDetail.
        :type help_link: str
        """

        self._help_link = help_link

    @property
    def message(self):
        """Gets the message of this BeezUPCommonExceptionDetail.


        :return: The message of this BeezUPCommonExceptionDetail.
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this BeezUPCommonExceptionDetail.


        :param message: The message of this BeezUPCommonExceptionDetail.
        :type message: str
        """

        self._message = message

    @property
    def stack_trace(self):
        """Gets the stack_trace of this BeezUPCommonExceptionDetail.


        :return: The stack_trace of this BeezUPCommonExceptionDetail.
        :rtype: str
        """
        return self._stack_trace

    @stack_trace.setter
    def stack_trace(self, stack_trace):
        """Sets the stack_trace of this BeezUPCommonExceptionDetail.


        :param stack_trace: The stack_trace of this BeezUPCommonExceptionDetail.
        :type stack_trace: str
        """

        self._stack_trace = stack_trace

    @property
    def type(self):
        """Gets the type of this BeezUPCommonExceptionDetail.


        :return: The type of this BeezUPCommonExceptionDetail.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this BeezUPCommonExceptionDetail.


        :param type: The type of this BeezUPCommonExceptionDetail.
        :type type: str
        """

        self._type = type
