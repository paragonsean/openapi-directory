# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.order_identifier import OrderIdentifier
from openapi_server import util


class ChangeOrderListRequestItemV2(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, change_order_request: Dict[str, str]=None, order: OrderIdentifier=None):
        """ChangeOrderListRequestItemV2 - a model defined in OpenAPI

        :param change_order_request: The change_order_request of this ChangeOrderListRequestItemV2.
        :param order: The order of this ChangeOrderListRequestItemV2.
        """
        self.openapi_types = {
            'change_order_request': Dict[str, str],
            'order': OrderIdentifier
        }

        self.attribute_map = {
            'change_order_request': 'changeOrderRequest',
            'order': 'order'
        }

        self._change_order_request = change_order_request
        self._order = order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChangeOrderListRequestItemV2':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The changeOrderListRequestItemV2 of this ChangeOrderListRequestItemV2.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def change_order_request(self):
        """Gets the change_order_request of this ChangeOrderListRequestItemV2.

        All properties with the prefix order_ are translated in the list of values /user/lov#OrderMetaInfoPosted

        :return: The change_order_request of this ChangeOrderListRequestItemV2.
        :rtype: Dict[str, str]
        """
        return self._change_order_request

    @change_order_request.setter
    def change_order_request(self, change_order_request):
        """Sets the change_order_request of this ChangeOrderListRequestItemV2.

        All properties with the prefix order_ are translated in the list of values /user/lov#OrderMetaInfoPosted

        :param change_order_request: The change_order_request of this ChangeOrderListRequestItemV2.
        :type change_order_request: Dict[str, str]
        """

        self._change_order_request = change_order_request

    @property
    def order(self):
        """Gets the order of this ChangeOrderListRequestItemV2.


        :return: The order of this ChangeOrderListRequestItemV2.
        :rtype: OrderIdentifier
        """
        return self._order

    @order.setter
    def order(self, order):
        """Sets the order of this ChangeOrderListRequestItemV2.


        :param order: The order of this ChangeOrderListRequestItemV2.
        :type order: OrderIdentifier
        """
        if order is None:
            raise ValueError("Invalid value for `order`, must not be `None`")

        self._order = order
