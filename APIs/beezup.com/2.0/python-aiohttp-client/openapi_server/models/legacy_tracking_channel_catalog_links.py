# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.links_get_legacy_tracking_channel_catalog_link import LinksGetLegacyTrackingChannelCatalogLink
from openapi_server.models.links_migrate_legacy_tracking_channel_catalog_link import LinksMigrateLegacyTrackingChannelCatalogLink
from openapi_server import util


class LegacyTrackingChannelCatalogLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, migrate: LinksMigrateLegacyTrackingChannelCatalogLink=None, _self: LinksGetLegacyTrackingChannelCatalogLink=None):
        """LegacyTrackingChannelCatalogLinks - a model defined in OpenAPI

        :param migrate: The migrate of this LegacyTrackingChannelCatalogLinks.
        :param _self: The _self of this LegacyTrackingChannelCatalogLinks.
        """
        self.openapi_types = {
            'migrate': LinksMigrateLegacyTrackingChannelCatalogLink,
            '_self': LinksGetLegacyTrackingChannelCatalogLink
        }

        self.attribute_map = {
            'migrate': 'migrate',
            '_self': 'self'
        }

        self._migrate = migrate
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LegacyTrackingChannelCatalogLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The legacyTrackingChannelCatalogLinks of this LegacyTrackingChannelCatalogLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def migrate(self):
        """Gets the migrate of this LegacyTrackingChannelCatalogLinks.


        :return: The migrate of this LegacyTrackingChannelCatalogLinks.
        :rtype: LinksMigrateLegacyTrackingChannelCatalogLink
        """
        return self._migrate

    @migrate.setter
    def migrate(self, migrate):
        """Sets the migrate of this LegacyTrackingChannelCatalogLinks.


        :param migrate: The migrate of this LegacyTrackingChannelCatalogLinks.
        :type migrate: LinksMigrateLegacyTrackingChannelCatalogLink
        """

        self._migrate = migrate

    @property
    def _self(self):
        """Gets the _self of this LegacyTrackingChannelCatalogLinks.


        :return: The _self of this LegacyTrackingChannelCatalogLinks.
        :rtype: LinksGetLegacyTrackingChannelCatalogLink
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this LegacyTrackingChannelCatalogLinks.


        :param _self: The _self of this LegacyTrackingChannelCatalogLinks.
        :type _self: LinksGetLegacyTrackingChannelCatalogLink
        """
        if _self is None:
            raise ValueError("Invalid value for `_self`, must not be `None`")

        self.__self = _self
