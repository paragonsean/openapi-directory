# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InputFileReadXmlConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, flatten_xml_child_elements: bool=None, use_xml_attributes: bool=None):
        """InputFileReadXmlConfiguration - a model defined in OpenAPI

        :param flatten_xml_child_elements: The flatten_xml_child_elements of this InputFileReadXmlConfiguration.
        :param use_xml_attributes: The use_xml_attributes of this InputFileReadXmlConfiguration.
        """
        self.openapi_types = {
            'flatten_xml_child_elements': bool,
            'use_xml_attributes': bool
        }

        self.attribute_map = {
            'flatten_xml_child_elements': 'flattenXmlChildElements',
            'use_xml_attributes': 'useXmlAttributes'
        }

        self._flatten_xml_child_elements = flatten_xml_child_elements
        self._use_xml_attributes = use_xml_attributes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InputFileReadXmlConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The inputFileReadXmlConfiguration of this InputFileReadXmlConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def flatten_xml_child_elements(self):
        """Gets the flatten_xml_child_elements of this InputFileReadXmlConfiguration.

        Indicate if the children xml nodes should be flatten with there parent to take in account the sub node values.

        :return: The flatten_xml_child_elements of this InputFileReadXmlConfiguration.
        :rtype: bool
        """
        return self._flatten_xml_child_elements

    @flatten_xml_child_elements.setter
    def flatten_xml_child_elements(self, flatten_xml_child_elements):
        """Sets the flatten_xml_child_elements of this InputFileReadXmlConfiguration.

        Indicate if the children xml nodes should be flatten with there parent to take in account the sub node values.

        :param flatten_xml_child_elements: The flatten_xml_child_elements of this InputFileReadXmlConfiguration.
        :type flatten_xml_child_elements: bool
        """
        if flatten_xml_child_elements is None:
            raise ValueError("Invalid value for `flatten_xml_child_elements`, must not be `None`")

        self._flatten_xml_child_elements = flatten_xml_child_elements

    @property
    def use_xml_attributes(self):
        """Gets the use_xml_attributes of this InputFileReadXmlConfiguration.

        Indicate if the importation should take in account the attribute in the xml nodes.

        :return: The use_xml_attributes of this InputFileReadXmlConfiguration.
        :rtype: bool
        """
        return self._use_xml_attributes

    @use_xml_attributes.setter
    def use_xml_attributes(self, use_xml_attributes):
        """Sets the use_xml_attributes of this InputFileReadXmlConfiguration.

        Indicate if the importation should take in account the attribute in the xml nodes.

        :param use_xml_attributes: The use_xml_attributes of this InputFileReadXmlConfiguration.
        :type use_xml_attributes: bool
        """
        if use_xml_attributes is None:
            raise ValueError("Invalid value for `use_xml_attributes`, must not be `None`")

        self._use_xml_attributes = use_xml_attributes
