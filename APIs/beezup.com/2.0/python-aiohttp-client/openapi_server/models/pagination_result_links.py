# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.link3 import Link3
from openapi_server import util


class PaginationResultLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, first: Link3=None, last: Link3=None, next: Link3=None, previous: Link3=None):
        """PaginationResultLinks - a model defined in OpenAPI

        :param first: The first of this PaginationResultLinks.
        :param last: The last of this PaginationResultLinks.
        :param next: The next of this PaginationResultLinks.
        :param previous: The previous of this PaginationResultLinks.
        """
        self.openapi_types = {
            'first': Link3,
            'last': Link3,
            'next': Link3,
            'previous': Link3
        }

        self.attribute_map = {
            'first': 'first',
            'last': 'last',
            'next': 'next',
            'previous': 'previous'
        }

        self._first = first
        self._last = last
        self._next = next
        self._previous = previous

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PaginationResultLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The paginationResultLinks of this PaginationResultLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def first(self):
        """Gets the first of this PaginationResultLinks.


        :return: The first of this PaginationResultLinks.
        :rtype: Link3
        """
        return self._first

    @first.setter
    def first(self, first):
        """Sets the first of this PaginationResultLinks.


        :param first: The first of this PaginationResultLinks.
        :type first: Link3
        """
        if first is None:
            raise ValueError("Invalid value for `first`, must not be `None`")

        self._first = first

    @property
    def last(self):
        """Gets the last of this PaginationResultLinks.


        :return: The last of this PaginationResultLinks.
        :rtype: Link3
        """
        return self._last

    @last.setter
    def last(self, last):
        """Sets the last of this PaginationResultLinks.


        :param last: The last of this PaginationResultLinks.
        :type last: Link3
        """
        if last is None:
            raise ValueError("Invalid value for `last`, must not be `None`")

        self._last = last

    @property
    def next(self):
        """Gets the next of this PaginationResultLinks.


        :return: The next of this PaginationResultLinks.
        :rtype: Link3
        """
        return self._next

    @next.setter
    def next(self, next):
        """Sets the next of this PaginationResultLinks.


        :param next: The next of this PaginationResultLinks.
        :type next: Link3
        """

        self._next = next

    @property
    def previous(self):
        """Gets the previous of this PaginationResultLinks.


        :return: The previous of this PaginationResultLinks.
        :rtype: Link3
        """
        return self._previous

    @previous.setter
    def previous(self, previous):
        """Sets the previous of this PaginationResultLinks.


        :param previous: The previous of this PaginationResultLinks.
        :type previous: Link3
        """

        self._previous = previous
