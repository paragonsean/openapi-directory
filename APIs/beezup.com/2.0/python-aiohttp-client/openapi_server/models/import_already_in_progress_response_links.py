# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.links_importation_cancel_link import LinksImportationCancelLink
from openapi_server.models.links_importation_get_importation_monitoring_link import LinksImportationGetImportationMonitoringLink
from openapi_server import util


class ImportAlreadyInProgressResponseLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cancel_current_importation: LinksImportationCancelLink=None, current_importation: LinksImportationGetImportationMonitoringLink=None):
        """ImportAlreadyInProgressResponseLinks - a model defined in OpenAPI

        :param cancel_current_importation: The cancel_current_importation of this ImportAlreadyInProgressResponseLinks.
        :param current_importation: The current_importation of this ImportAlreadyInProgressResponseLinks.
        """
        self.openapi_types = {
            'cancel_current_importation': LinksImportationCancelLink,
            'current_importation': LinksImportationGetImportationMonitoringLink
        }

        self.attribute_map = {
            'cancel_current_importation': 'cancelCurrentImportation',
            'current_importation': 'currentImportation'
        }

        self._cancel_current_importation = cancel_current_importation
        self._current_importation = current_importation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportAlreadyInProgressResponseLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The importAlreadyInProgressResponseLinks of this ImportAlreadyInProgressResponseLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cancel_current_importation(self):
        """Gets the cancel_current_importation of this ImportAlreadyInProgressResponseLinks.


        :return: The cancel_current_importation of this ImportAlreadyInProgressResponseLinks.
        :rtype: LinksImportationCancelLink
        """
        return self._cancel_current_importation

    @cancel_current_importation.setter
    def cancel_current_importation(self, cancel_current_importation):
        """Sets the cancel_current_importation of this ImportAlreadyInProgressResponseLinks.


        :param cancel_current_importation: The cancel_current_importation of this ImportAlreadyInProgressResponseLinks.
        :type cancel_current_importation: LinksImportationCancelLink
        """
        if cancel_current_importation is None:
            raise ValueError("Invalid value for `cancel_current_importation`, must not be `None`")

        self._cancel_current_importation = cancel_current_importation

    @property
    def current_importation(self):
        """Gets the current_importation of this ImportAlreadyInProgressResponseLinks.


        :return: The current_importation of this ImportAlreadyInProgressResponseLinks.
        :rtype: LinksImportationGetImportationMonitoringLink
        """
        return self._current_importation

    @current_importation.setter
    def current_importation(self, current_importation):
        """Sets the current_importation of this ImportAlreadyInProgressResponseLinks.


        :param current_importation: The current_importation of this ImportAlreadyInProgressResponseLinks.
        :type current_importation: LinksImportationGetImportationMonitoringLink
        """
        if current_importation is None:
            raise ValueError("Invalid value for `current_importation`, must not be `None`")

        self._current_importation = current_importation
