# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
import re
from openapi_server import util


class ChannelCatalogExportationReporting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cache_status: str=None, client_ip_address: str=None, client_user_agent: str=None, exportation_duration: str=None, exportation_utc_date: datetime=None, exported_product_count: int=None):
        """ChannelCatalogExportationReporting - a model defined in OpenAPI

        :param cache_status: The cache_status of this ChannelCatalogExportationReporting.
        :param client_ip_address: The client_ip_address of this ChannelCatalogExportationReporting.
        :param client_user_agent: The client_user_agent of this ChannelCatalogExportationReporting.
        :param exportation_duration: The exportation_duration of this ChannelCatalogExportationReporting.
        :param exportation_utc_date: The exportation_utc_date of this ChannelCatalogExportationReporting.
        :param exported_product_count: The exported_product_count of this ChannelCatalogExportationReporting.
        """
        self.openapi_types = {
            'cache_status': str,
            'client_ip_address': str,
            'client_user_agent': str,
            'exportation_duration': str,
            'exportation_utc_date': datetime,
            'exported_product_count': int
        }

        self.attribute_map = {
            'cache_status': 'cacheStatus',
            'client_ip_address': 'clientIpAddress',
            'client_user_agent': 'clientUserAgent',
            'exportation_duration': 'exportationDuration',
            'exportation_utc_date': 'exportationUtcDate',
            'exported_product_count': 'exportedProductCount'
        }

        self._cache_status = cache_status
        self._client_ip_address = client_ip_address
        self._client_user_agent = client_user_agent
        self._exportation_duration = exportation_duration
        self._exportation_utc_date = exportation_utc_date
        self._exported_product_count = exported_product_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelCatalogExportationReporting':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The channelCatalogExportationReporting of this ChannelCatalogExportationReporting.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cache_status(self):
        """Gets the cache_status of this ChannelCatalogExportationReporting.

        The cache status during the exportation

        :return: The cache_status of this ChannelCatalogExportationReporting.
        :rtype: str
        """
        return self._cache_status

    @cache_status.setter
    def cache_status(self, cache_status):
        """Sets the cache_status of this ChannelCatalogExportationReporting.

        The cache status during the exportation

        :param cache_status: The cache_status of this ChannelCatalogExportationReporting.
        :type cache_status: str
        """

        self._cache_status = cache_status

    @property
    def client_ip_address(self):
        """Gets the client_ip_address of this ChannelCatalogExportationReporting.

        The IP address of the client who requests this exportation

        :return: The client_ip_address of this ChannelCatalogExportationReporting.
        :rtype: str
        """
        return self._client_ip_address

    @client_ip_address.setter
    def client_ip_address(self, client_ip_address):
        """Sets the client_ip_address of this ChannelCatalogExportationReporting.

        The IP address of the client who requests this exportation

        :param client_ip_address: The client_ip_address of this ChannelCatalogExportationReporting.
        :type client_ip_address: str
        """
        if client_ip_address is None:
            raise ValueError("Invalid value for `client_ip_address`, must not be `None`")

        self._client_ip_address = client_ip_address

    @property
    def client_user_agent(self):
        """Gets the client_user_agent of this ChannelCatalogExportationReporting.

        The http header User-Agent sent by the client who requests this operation

        :return: The client_user_agent of this ChannelCatalogExportationReporting.
        :rtype: str
        """
        return self._client_user_agent

    @client_user_agent.setter
    def client_user_agent(self, client_user_agent):
        """Sets the client_user_agent of this ChannelCatalogExportationReporting.

        The http header User-Agent sent by the client who requests this operation

        :param client_user_agent: The client_user_agent of this ChannelCatalogExportationReporting.
        :type client_user_agent: str
        """
        if client_user_agent is None:
            raise ValueError("Invalid value for `client_user_agent`, must not be `None`")

        self._client_user_agent = client_user_agent

    @property
    def exportation_duration(self):
        """Gets the exportation_duration of this ChannelCatalogExportationReporting.

        The exportation duration. \\ '00:01:00' measn 1 minute. 

        :return: The exportation_duration of this ChannelCatalogExportationReporting.
        :rtype: str
        """
        return self._exportation_duration

    @exportation_duration.setter
    def exportation_duration(self, exportation_duration):
        """Sets the exportation_duration of this ChannelCatalogExportationReporting.

        The exportation duration. \\ '00:01:00' measn 1 minute. 

        :param exportation_duration: The exportation_duration of this ChannelCatalogExportationReporting.
        :type exportation_duration: str
        """
        if exportation_duration is not None and not re.search(r'(00:1[5-9])|(00:[2-5][0-9])|(0[1-9]:[0-5][0-9])|(1[0-9]:[0-5][0-9])|(2[0-3]:[0-5][0-9])', exportation_duration):
            raise ValueError("Invalid value for `exportation_duration`, must be a follow pattern or equal to `/(00:1[5-9])|(00:[2-5][0-9])|(0[1-9]:[0-5][0-9])|(1[0-9]:[0-5][0-9])|(2[0-3]:[0-5][0-9])/`")

        self._exportation_duration = exportation_duration

    @property
    def exportation_utc_date(self):
        """Gets the exportation_utc_date of this ChannelCatalogExportationReporting.

        The exportation UTC date

        :return: The exportation_utc_date of this ChannelCatalogExportationReporting.
        :rtype: datetime
        """
        return self._exportation_utc_date

    @exportation_utc_date.setter
    def exportation_utc_date(self, exportation_utc_date):
        """Sets the exportation_utc_date of this ChannelCatalogExportationReporting.

        The exportation UTC date

        :param exportation_utc_date: The exportation_utc_date of this ChannelCatalogExportationReporting.
        :type exportation_utc_date: datetime
        """
        if exportation_utc_date is None:
            raise ValueError("Invalid value for `exportation_utc_date`, must not be `None`")

        self._exportation_utc_date = exportation_utc_date

    @property
    def exported_product_count(self):
        """Gets the exported_product_count of this ChannelCatalogExportationReporting.

        The exportated product count during this exportation

        :return: The exported_product_count of this ChannelCatalogExportationReporting.
        :rtype: int
        """
        return self._exported_product_count

    @exported_product_count.setter
    def exported_product_count(self, exported_product_count):
        """Sets the exported_product_count of this ChannelCatalogExportationReporting.

        The exportated product count during this exportation

        :param exported_product_count: The exported_product_count of this ChannelCatalogExportationReporting.
        :type exported_product_count: int
        """

        self._exported_product_count = exported_product_count
