# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReportByDayGlobalAllChannels(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, performance_indicator: float=None):
        """ReportByDayGlobalAllChannels - a model defined in OpenAPI

        :param performance_indicator: The performance_indicator of this ReportByDayGlobalAllChannels.
        """
        self.openapi_types = {
            'performance_indicator': float
        }

        self.attribute_map = {
            'performance_indicator': 'performanceIndicator'
        }

        self._performance_indicator = performance_indicator

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportByDayGlobalAllChannels':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The reportByDayGlobalAllChannels of this ReportByDayGlobalAllChannels.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def performance_indicator(self):
        """Gets the performance_indicator of this ReportByDayGlobalAllChannels.

        Indicates the global performance indicator

        :return: The performance_indicator of this ReportByDayGlobalAllChannels.
        :rtype: float
        """
        return self._performance_indicator

    @performance_indicator.setter
    def performance_indicator(self, performance_indicator):
        """Sets the performance_indicator of this ReportByDayGlobalAllChannels.

        Indicates the global performance indicator

        :param performance_indicator: The performance_indicator of this ReportByDayGlobalAllChannels.
        :type performance_indicator: float
        """
        if performance_indicator is None:
            raise ValueError("Invalid value for `performance_indicator`, must not be `None`")

        self._performance_indicator = performance_indicator
