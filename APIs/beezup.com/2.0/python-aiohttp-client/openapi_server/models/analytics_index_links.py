# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.links_analytics_index_link import LinksAnalyticsIndexLink
from openapi_server.models.links_get_tracking_status_link import LinksGetTrackingStatusLink
from openapi_server import util


class AnalyticsIndexLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _self: LinksAnalyticsIndexLink=None, tracking_status: LinksGetTrackingStatusLink=None):
        """AnalyticsIndexLinks - a model defined in OpenAPI

        :param _self: The _self of this AnalyticsIndexLinks.
        :param tracking_status: The tracking_status of this AnalyticsIndexLinks.
        """
        self.openapi_types = {
            '_self': LinksAnalyticsIndexLink,
            'tracking_status': LinksGetTrackingStatusLink
        }

        self.attribute_map = {
            '_self': 'self',
            'tracking_status': 'trackingStatus'
        }

        self.__self = _self
        self._tracking_status = tracking_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalyticsIndexLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The analyticsIndexLinks of this AnalyticsIndexLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _self(self):
        """Gets the _self of this AnalyticsIndexLinks.


        :return: The _self of this AnalyticsIndexLinks.
        :rtype: LinksAnalyticsIndexLink
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this AnalyticsIndexLinks.


        :param _self: The _self of this AnalyticsIndexLinks.
        :type _self: LinksAnalyticsIndexLink
        """
        if _self is None:
            raise ValueError("Invalid value for `_self`, must not be `None`")

        self.__self = _self

    @property
    def tracking_status(self):
        """Gets the tracking_status of this AnalyticsIndexLinks.


        :return: The tracking_status of this AnalyticsIndexLinks.
        :rtype: LinksGetTrackingStatusLink
        """
        return self._tracking_status

    @tracking_status.setter
    def tracking_status(self, tracking_status):
        """Sets the tracking_status of this AnalyticsIndexLinks.


        :param tracking_status: The tracking_status of this AnalyticsIndexLinks.
        :type tracking_status: LinksGetTrackingStatusLink
        """

        self._tracking_status = tracking_status
