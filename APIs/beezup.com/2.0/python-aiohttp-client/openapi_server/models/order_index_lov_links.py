# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.beez_up_common_lov_link3 import BeezUPCommonLOVLink3
from openapi_server import util


class OrderIndexLovLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, order_change_business_operation_type: BeezUPCommonLOVLink3=None, order_property: BeezUPCommonLOVLink3=None, order_property_posted: BeezUPCommonLOVLink3=None, order_state: BeezUPCommonLOVLink3=None):
        """OrderIndexLovLinks - a model defined in OpenAPI

        :param order_change_business_operation_type: The order_change_business_operation_type of this OrderIndexLovLinks.
        :param order_property: The order_property of this OrderIndexLovLinks.
        :param order_property_posted: The order_property_posted of this OrderIndexLovLinks.
        :param order_state: The order_state of this OrderIndexLovLinks.
        """
        self.openapi_types = {
            'order_change_business_operation_type': BeezUPCommonLOVLink3,
            'order_property': BeezUPCommonLOVLink3,
            'order_property_posted': BeezUPCommonLOVLink3,
            'order_state': BeezUPCommonLOVLink3
        }

        self.attribute_map = {
            'order_change_business_operation_type': 'orderChangeBusinessOperationType',
            'order_property': 'orderProperty',
            'order_property_posted': 'orderPropertyPosted',
            'order_state': 'orderState'
        }

        self._order_change_business_operation_type = order_change_business_operation_type
        self._order_property = order_property
        self._order_property_posted = order_property_posted
        self._order_state = order_state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderIndexLovLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The orderIndexLovLinks of this OrderIndexLovLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def order_change_business_operation_type(self):
        """Gets the order_change_business_operation_type of this OrderIndexLovLinks.


        :return: The order_change_business_operation_type of this OrderIndexLovLinks.
        :rtype: BeezUPCommonLOVLink3
        """
        return self._order_change_business_operation_type

    @order_change_business_operation_type.setter
    def order_change_business_operation_type(self, order_change_business_operation_type):
        """Sets the order_change_business_operation_type of this OrderIndexLovLinks.


        :param order_change_business_operation_type: The order_change_business_operation_type of this OrderIndexLovLinks.
        :type order_change_business_operation_type: BeezUPCommonLOVLink3
        """
        if order_change_business_operation_type is None:
            raise ValueError("Invalid value for `order_change_business_operation_type`, must not be `None`")

        self._order_change_business_operation_type = order_change_business_operation_type

    @property
    def order_property(self):
        """Gets the order_property of this OrderIndexLovLinks.


        :return: The order_property of this OrderIndexLovLinks.
        :rtype: BeezUPCommonLOVLink3
        """
        return self._order_property

    @order_property.setter
    def order_property(self, order_property):
        """Sets the order_property of this OrderIndexLovLinks.


        :param order_property: The order_property of this OrderIndexLovLinks.
        :type order_property: BeezUPCommonLOVLink3
        """
        if order_property is None:
            raise ValueError("Invalid value for `order_property`, must not be `None`")

        self._order_property = order_property

    @property
    def order_property_posted(self):
        """Gets the order_property_posted of this OrderIndexLovLinks.


        :return: The order_property_posted of this OrderIndexLovLinks.
        :rtype: BeezUPCommonLOVLink3
        """
        return self._order_property_posted

    @order_property_posted.setter
    def order_property_posted(self, order_property_posted):
        """Sets the order_property_posted of this OrderIndexLovLinks.


        :param order_property_posted: The order_property_posted of this OrderIndexLovLinks.
        :type order_property_posted: BeezUPCommonLOVLink3
        """
        if order_property_posted is None:
            raise ValueError("Invalid value for `order_property_posted`, must not be `None`")

        self._order_property_posted = order_property_posted

    @property
    def order_state(self):
        """Gets the order_state of this OrderIndexLovLinks.


        :return: The order_state of this OrderIndexLovLinks.
        :rtype: BeezUPCommonLOVLink3
        """
        return self._order_state

    @order_state.setter
    def order_state(self, order_state):
        """Sets the order_state of this OrderIndexLovLinks.


        :param order_state: The order_state of this OrderIndexLovLinks.
        :type order_state: BeezUPCommonLOVLink3
        """
        if order_state is None:
            raise ValueError("Invalid value for `order_state`, must not be `None`")

        self._order_state = order_state
