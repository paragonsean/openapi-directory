# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.fixed_and_variable_click_model_info import FixedAndVariableClickModelInfo
from openapi_server.models.payment_method import PaymentMethod
from openapi_server.models.variable_model_info import VariableModelInfo
from openapi_server import util


class ContractCommitmentInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, commercial_creator_user_id: str=None, commercial_user_id: str=None, commitment_calculated_finish_date: date=None, commitment_period_in_month: int=None, contract_type: int=None, coupon_offer_code: str=None, current_contract_id: str=None, current_contract_termination_date: date=None, current_customer_payment_method: PaymentMethod=PaymentMethod.ONLINEPAYMENT, fixed_and_variable_click_info: FixedAndVariableClickModelInfo=None, is_customer_wants_to_terminate_his_contract: bool=None, is_model_must_be_transmitted_in_new_contract: bool=None, min_billing_period_in_months: int=None, model: str=None, new_contract_start_date: datetime=None, offer_id: int=None, offer_name: str=None, payment_delay_in_days: int=None, payment_method_authorized: PaymentMethod=PaymentMethod.ONLINEPAYMENT, requested_payment_method: PaymentMethod=PaymentMethod.ONLINEPAYMENT, trial_period_finish_date: date=None, trial_period_in_month: int=None, variable_model_info: VariableModelInfo=None):
        """ContractCommitmentInfo - a model defined in OpenAPI

        :param commercial_creator_user_id: The commercial_creator_user_id of this ContractCommitmentInfo.
        :param commercial_user_id: The commercial_user_id of this ContractCommitmentInfo.
        :param commitment_calculated_finish_date: The commitment_calculated_finish_date of this ContractCommitmentInfo.
        :param commitment_period_in_month: The commitment_period_in_month of this ContractCommitmentInfo.
        :param contract_type: The contract_type of this ContractCommitmentInfo.
        :param coupon_offer_code: The coupon_offer_code of this ContractCommitmentInfo.
        :param current_contract_id: The current_contract_id of this ContractCommitmentInfo.
        :param current_contract_termination_date: The current_contract_termination_date of this ContractCommitmentInfo.
        :param current_customer_payment_method: The current_customer_payment_method of this ContractCommitmentInfo.
        :param fixed_and_variable_click_info: The fixed_and_variable_click_info of this ContractCommitmentInfo.
        :param is_customer_wants_to_terminate_his_contract: The is_customer_wants_to_terminate_his_contract of this ContractCommitmentInfo.
        :param is_model_must_be_transmitted_in_new_contract: The is_model_must_be_transmitted_in_new_contract of this ContractCommitmentInfo.
        :param min_billing_period_in_months: The min_billing_period_in_months of this ContractCommitmentInfo.
        :param model: The model of this ContractCommitmentInfo.
        :param new_contract_start_date: The new_contract_start_date of this ContractCommitmentInfo.
        :param offer_id: The offer_id of this ContractCommitmentInfo.
        :param offer_name: The offer_name of this ContractCommitmentInfo.
        :param payment_delay_in_days: The payment_delay_in_days of this ContractCommitmentInfo.
        :param payment_method_authorized: The payment_method_authorized of this ContractCommitmentInfo.
        :param requested_payment_method: The requested_payment_method of this ContractCommitmentInfo.
        :param trial_period_finish_date: The trial_period_finish_date of this ContractCommitmentInfo.
        :param trial_period_in_month: The trial_period_in_month of this ContractCommitmentInfo.
        :param variable_model_info: The variable_model_info of this ContractCommitmentInfo.
        """
        self.openapi_types = {
            'commercial_creator_user_id': str,
            'commercial_user_id': str,
            'commitment_calculated_finish_date': date,
            'commitment_period_in_month': int,
            'contract_type': int,
            'coupon_offer_code': str,
            'current_contract_id': str,
            'current_contract_termination_date': date,
            'current_customer_payment_method': PaymentMethod,
            'fixed_and_variable_click_info': FixedAndVariableClickModelInfo,
            'is_customer_wants_to_terminate_his_contract': bool,
            'is_model_must_be_transmitted_in_new_contract': bool,
            'min_billing_period_in_months': int,
            'model': str,
            'new_contract_start_date': datetime,
            'offer_id': int,
            'offer_name': str,
            'payment_delay_in_days': int,
            'payment_method_authorized': PaymentMethod,
            'requested_payment_method': PaymentMethod,
            'trial_period_finish_date': date,
            'trial_period_in_month': int,
            'variable_model_info': VariableModelInfo
        }

        self.attribute_map = {
            'commercial_creator_user_id': 'commercialCreatorUserId',
            'commercial_user_id': 'commercialUserId',
            'commitment_calculated_finish_date': 'commitmentCalculatedFinishDate',
            'commitment_period_in_month': 'commitmentPeriodInMonth',
            'contract_type': 'contractType',
            'coupon_offer_code': 'couponOfferCode',
            'current_contract_id': 'currentContractId',
            'current_contract_termination_date': 'currentContractTerminationDate',
            'current_customer_payment_method': 'currentCustomerPaymentMethod',
            'fixed_and_variable_click_info': 'fixedAndVariableClickInfo',
            'is_customer_wants_to_terminate_his_contract': 'isCustomerWantsToTerminateHisContract',
            'is_model_must_be_transmitted_in_new_contract': 'isModelMustBeTransmittedInNewContract',
            'min_billing_period_in_months': 'minBillingPeriodInMonths',
            'model': 'model',
            'new_contract_start_date': 'newContractStartDate',
            'offer_id': 'offerId',
            'offer_name': 'offerName',
            'payment_delay_in_days': 'paymentDelayInDays',
            'payment_method_authorized': 'paymentMethodAuthorized',
            'requested_payment_method': 'requestedPaymentMethod',
            'trial_period_finish_date': 'trialPeriodFinishDate',
            'trial_period_in_month': 'trialPeriodInMonth',
            'variable_model_info': 'variableModelInfo'
        }

        self._commercial_creator_user_id = commercial_creator_user_id
        self._commercial_user_id = commercial_user_id
        self._commitment_calculated_finish_date = commitment_calculated_finish_date
        self._commitment_period_in_month = commitment_period_in_month
        self._contract_type = contract_type
        self._coupon_offer_code = coupon_offer_code
        self._current_contract_id = current_contract_id
        self._current_contract_termination_date = current_contract_termination_date
        self._current_customer_payment_method = current_customer_payment_method
        self._fixed_and_variable_click_info = fixed_and_variable_click_info
        self._is_customer_wants_to_terminate_his_contract = is_customer_wants_to_terminate_his_contract
        self._is_model_must_be_transmitted_in_new_contract = is_model_must_be_transmitted_in_new_contract
        self._min_billing_period_in_months = min_billing_period_in_months
        self._model = model
        self._new_contract_start_date = new_contract_start_date
        self._offer_id = offer_id
        self._offer_name = offer_name
        self._payment_delay_in_days = payment_delay_in_days
        self._payment_method_authorized = payment_method_authorized
        self._requested_payment_method = requested_payment_method
        self._trial_period_finish_date = trial_period_finish_date
        self._trial_period_in_month = trial_period_in_month
        self._variable_model_info = variable_model_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContractCommitmentInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The contractCommitmentInfo of this ContractCommitmentInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def commercial_creator_user_id(self):
        """Gets the commercial_creator_user_id of this ContractCommitmentInfo.

        The commercial that is responsible of the creation of your account

        :return: The commercial_creator_user_id of this ContractCommitmentInfo.
        :rtype: str
        """
        return self._commercial_creator_user_id

    @commercial_creator_user_id.setter
    def commercial_creator_user_id(self, commercial_creator_user_id):
        """Sets the commercial_creator_user_id of this ContractCommitmentInfo.

        The commercial that is responsible of the creation of your account

        :param commercial_creator_user_id: The commercial_creator_user_id of this ContractCommitmentInfo.
        :type commercial_creator_user_id: str
        """

        self._commercial_creator_user_id = commercial_creator_user_id

    @property
    def commercial_user_id(self):
        """Gets the commercial_user_id of this ContractCommitmentInfo.

        Your current commercial user id

        :return: The commercial_user_id of this ContractCommitmentInfo.
        :rtype: str
        """
        return self._commercial_user_id

    @commercial_user_id.setter
    def commercial_user_id(self, commercial_user_id):
        """Sets the commercial_user_id of this ContractCommitmentInfo.

        Your current commercial user id

        :param commercial_user_id: The commercial_user_id of this ContractCommitmentInfo.
        :type commercial_user_id: str
        """

        self._commercial_user_id = commercial_user_id

    @property
    def commitment_calculated_finish_date(self):
        """Gets the commitment_calculated_finish_date of this ContractCommitmentInfo.

        The commitment end date related to the offer

        :return: The commitment_calculated_finish_date of this ContractCommitmentInfo.
        :rtype: date
        """
        return self._commitment_calculated_finish_date

    @commitment_calculated_finish_date.setter
    def commitment_calculated_finish_date(self, commitment_calculated_finish_date):
        """Sets the commitment_calculated_finish_date of this ContractCommitmentInfo.

        The commitment end date related to the offer

        :param commitment_calculated_finish_date: The commitment_calculated_finish_date of this ContractCommitmentInfo.
        :type commitment_calculated_finish_date: date
        """

        self._commitment_calculated_finish_date = commitment_calculated_finish_date

    @property
    def commitment_period_in_month(self):
        """Gets the commitment_period_in_month of this ContractCommitmentInfo.

        The commitment period in month related to the offer

        :return: The commitment_period_in_month of this ContractCommitmentInfo.
        :rtype: int
        """
        return self._commitment_period_in_month

    @commitment_period_in_month.setter
    def commitment_period_in_month(self, commitment_period_in_month):
        """Sets the commitment_period_in_month of this ContractCommitmentInfo.

        The commitment period in month related to the offer

        :param commitment_period_in_month: The commitment_period_in_month of this ContractCommitmentInfo.
        :type commitment_period_in_month: int
        """

        self._commitment_period_in_month = commitment_period_in_month

    @property
    def contract_type(self):
        """Gets the contract_type of this ContractCommitmentInfo.

        Internal usage: Old offer type. Your contract type

        :return: The contract_type of this ContractCommitmentInfo.
        :rtype: int
        """
        return self._contract_type

    @contract_type.setter
    def contract_type(self, contract_type):
        """Sets the contract_type of this ContractCommitmentInfo.

        Internal usage: Old offer type. Your contract type

        :param contract_type: The contract_type of this ContractCommitmentInfo.
        :type contract_type: int
        """

        self._contract_type = contract_type

    @property
    def coupon_offer_code(self):
        """Gets the coupon_offer_code of this ContractCommitmentInfo.

        Your special coupon offer identifier

        :return: The coupon_offer_code of this ContractCommitmentInfo.
        :rtype: str
        """
        return self._coupon_offer_code

    @coupon_offer_code.setter
    def coupon_offer_code(self, coupon_offer_code):
        """Sets the coupon_offer_code of this ContractCommitmentInfo.

        Your special coupon offer identifier

        :param coupon_offer_code: The coupon_offer_code of this ContractCommitmentInfo.
        :type coupon_offer_code: str
        """

        self._coupon_offer_code = coupon_offer_code

    @property
    def current_contract_id(self):
        """Gets the current_contract_id of this ContractCommitmentInfo.

        Your current contract id

        :return: The current_contract_id of this ContractCommitmentInfo.
        :rtype: str
        """
        return self._current_contract_id

    @current_contract_id.setter
    def current_contract_id(self, current_contract_id):
        """Sets the current_contract_id of this ContractCommitmentInfo.

        Your current contract id

        :param current_contract_id: The current_contract_id of this ContractCommitmentInfo.
        :type current_contract_id: str
        """

        self._current_contract_id = current_contract_id

    @property
    def current_contract_termination_date(self):
        """Gets the current_contract_termination_date of this ContractCommitmentInfo.

        The current contract termination date

        :return: The current_contract_termination_date of this ContractCommitmentInfo.
        :rtype: date
        """
        return self._current_contract_termination_date

    @current_contract_termination_date.setter
    def current_contract_termination_date(self, current_contract_termination_date):
        """Sets the current_contract_termination_date of this ContractCommitmentInfo.

        The current contract termination date

        :param current_contract_termination_date: The current_contract_termination_date of this ContractCommitmentInfo.
        :type current_contract_termination_date: date
        """

        self._current_contract_termination_date = current_contract_termination_date

    @property
    def current_customer_payment_method(self):
        """Gets the current_customer_payment_method of this ContractCommitmentInfo.


        :return: The current_customer_payment_method of this ContractCommitmentInfo.
        :rtype: PaymentMethod
        """
        return self._current_customer_payment_method

    @current_customer_payment_method.setter
    def current_customer_payment_method(self, current_customer_payment_method):
        """Sets the current_customer_payment_method of this ContractCommitmentInfo.


        :param current_customer_payment_method: The current_customer_payment_method of this ContractCommitmentInfo.
        :type current_customer_payment_method: PaymentMethod
        """

        self._current_customer_payment_method = current_customer_payment_method

    @property
    def fixed_and_variable_click_info(self):
        """Gets the fixed_and_variable_click_info of this ContractCommitmentInfo.


        :return: The fixed_and_variable_click_info of this ContractCommitmentInfo.
        :rtype: FixedAndVariableClickModelInfo
        """
        return self._fixed_and_variable_click_info

    @fixed_and_variable_click_info.setter
    def fixed_and_variable_click_info(self, fixed_and_variable_click_info):
        """Sets the fixed_and_variable_click_info of this ContractCommitmentInfo.


        :param fixed_and_variable_click_info: The fixed_and_variable_click_info of this ContractCommitmentInfo.
        :type fixed_and_variable_click_info: FixedAndVariableClickModelInfo
        """

        self._fixed_and_variable_click_info = fixed_and_variable_click_info

    @property
    def is_customer_wants_to_terminate_his_contract(self):
        """Gets the is_customer_wants_to_terminate_his_contract of this ContractCommitmentInfo.

        If true, this means you want to leave us and that's sad... :'-(

        :return: The is_customer_wants_to_terminate_his_contract of this ContractCommitmentInfo.
        :rtype: bool
        """
        return self._is_customer_wants_to_terminate_his_contract

    @is_customer_wants_to_terminate_his_contract.setter
    def is_customer_wants_to_terminate_his_contract(self, is_customer_wants_to_terminate_his_contract):
        """Sets the is_customer_wants_to_terminate_his_contract of this ContractCommitmentInfo.

        If true, this means you want to leave us and that's sad... :'-(

        :param is_customer_wants_to_terminate_his_contract: The is_customer_wants_to_terminate_his_contract of this ContractCommitmentInfo.
        :type is_customer_wants_to_terminate_his_contract: bool
        """

        self._is_customer_wants_to_terminate_his_contract = is_customer_wants_to_terminate_his_contract

    @property
    def is_model_must_be_transmitted_in_new_contract(self):
        """Gets the is_model_must_be_transmitted_in_new_contract of this ContractCommitmentInfo.

        Internal usage: Old offer type. Is the current contract model needs to be converted into a new contract type

        :return: The is_model_must_be_transmitted_in_new_contract of this ContractCommitmentInfo.
        :rtype: bool
        """
        return self._is_model_must_be_transmitted_in_new_contract

    @is_model_must_be_transmitted_in_new_contract.setter
    def is_model_must_be_transmitted_in_new_contract(self, is_model_must_be_transmitted_in_new_contract):
        """Sets the is_model_must_be_transmitted_in_new_contract of this ContractCommitmentInfo.

        Internal usage: Old offer type. Is the current contract model needs to be converted into a new contract type

        :param is_model_must_be_transmitted_in_new_contract: The is_model_must_be_transmitted_in_new_contract of this ContractCommitmentInfo.
        :type is_model_must_be_transmitted_in_new_contract: bool
        """

        self._is_model_must_be_transmitted_in_new_contract = is_model_must_be_transmitted_in_new_contract

    @property
    def min_billing_period_in_months(self):
        """Gets the min_billing_period_in_months of this ContractCommitmentInfo.

        The minimum billing period in month authorized for this offer.

        :return: The min_billing_period_in_months of this ContractCommitmentInfo.
        :rtype: int
        """
        return self._min_billing_period_in_months

    @min_billing_period_in_months.setter
    def min_billing_period_in_months(self, min_billing_period_in_months):
        """Sets the min_billing_period_in_months of this ContractCommitmentInfo.

        The minimum billing period in month authorized for this offer.

        :param min_billing_period_in_months: The min_billing_period_in_months of this ContractCommitmentInfo.
        :type min_billing_period_in_months: int
        """

        self._min_billing_period_in_months = min_billing_period_in_months

    @property
    def model(self):
        """Gets the model of this ContractCommitmentInfo.

        Interal usage: Old offer type. The model description

        :return: The model of this ContractCommitmentInfo.
        :rtype: str
        """
        return self._model

    @model.setter
    def model(self, model):
        """Sets the model of this ContractCommitmentInfo.

        Interal usage: Old offer type. The model description

        :param model: The model of this ContractCommitmentInfo.
        :type model: str
        """

        self._model = model

    @property
    def new_contract_start_date(self):
        """Gets the new_contract_start_date of this ContractCommitmentInfo.

        The start date related to the offer

        :return: The new_contract_start_date of this ContractCommitmentInfo.
        :rtype: datetime
        """
        return self._new_contract_start_date

    @new_contract_start_date.setter
    def new_contract_start_date(self, new_contract_start_date):
        """Sets the new_contract_start_date of this ContractCommitmentInfo.

        The start date related to the offer

        :param new_contract_start_date: The new_contract_start_date of this ContractCommitmentInfo.
        :type new_contract_start_date: datetime
        """

        self._new_contract_start_date = new_contract_start_date

    @property
    def offer_id(self):
        """Gets the offer_id of this ContractCommitmentInfo.

        The offer id based on /offers. Not a free offer of course.

        :return: The offer_id of this ContractCommitmentInfo.
        :rtype: int
        """
        return self._offer_id

    @offer_id.setter
    def offer_id(self, offer_id):
        """Sets the offer_id of this ContractCommitmentInfo.

        The offer id based on /offers. Not a free offer of course.

        :param offer_id: The offer_id of this ContractCommitmentInfo.
        :type offer_id: int
        """
        if offer_id is not None and offer_id < 1:
            raise ValueError("Invalid value for `offer_id`, must be a value greater than or equal to `1`")

        self._offer_id = offer_id

    @property
    def offer_name(self):
        """Gets the offer_name of this ContractCommitmentInfo.

        The offer Name

        :return: The offer_name of this ContractCommitmentInfo.
        :rtype: str
        """
        return self._offer_name

    @offer_name.setter
    def offer_name(self, offer_name):
        """Sets the offer_name of this ContractCommitmentInfo.

        The offer Name

        :param offer_name: The offer_name of this ContractCommitmentInfo.
        :type offer_name: str
        """

        self._offer_name = offer_name

    @property
    def payment_delay_in_days(self):
        """Gets the payment_delay_in_days of this ContractCommitmentInfo.

        The payment delay in days related to the offer

        :return: The payment_delay_in_days of this ContractCommitmentInfo.
        :rtype: int
        """
        return self._payment_delay_in_days

    @payment_delay_in_days.setter
    def payment_delay_in_days(self, payment_delay_in_days):
        """Sets the payment_delay_in_days of this ContractCommitmentInfo.

        The payment delay in days related to the offer

        :param payment_delay_in_days: The payment_delay_in_days of this ContractCommitmentInfo.
        :type payment_delay_in_days: int
        """

        self._payment_delay_in_days = payment_delay_in_days

    @property
    def payment_method_authorized(self):
        """Gets the payment_method_authorized of this ContractCommitmentInfo.


        :return: The payment_method_authorized of this ContractCommitmentInfo.
        :rtype: PaymentMethod
        """
        return self._payment_method_authorized

    @payment_method_authorized.setter
    def payment_method_authorized(self, payment_method_authorized):
        """Sets the payment_method_authorized of this ContractCommitmentInfo.


        :param payment_method_authorized: The payment_method_authorized of this ContractCommitmentInfo.
        :type payment_method_authorized: PaymentMethod
        """

        self._payment_method_authorized = payment_method_authorized

    @property
    def requested_payment_method(self):
        """Gets the requested_payment_method of this ContractCommitmentInfo.


        :return: The requested_payment_method of this ContractCommitmentInfo.
        :rtype: PaymentMethod
        """
        return self._requested_payment_method

    @requested_payment_method.setter
    def requested_payment_method(self, requested_payment_method):
        """Sets the requested_payment_method of this ContractCommitmentInfo.


        :param requested_payment_method: The requested_payment_method of this ContractCommitmentInfo.
        :type requested_payment_method: PaymentMethod
        """

        self._requested_payment_method = requested_payment_method

    @property
    def trial_period_finish_date(self):
        """Gets the trial_period_finish_date of this ContractCommitmentInfo.

        The trial period end date related to the offer

        :return: The trial_period_finish_date of this ContractCommitmentInfo.
        :rtype: date
        """
        return self._trial_period_finish_date

    @trial_period_finish_date.setter
    def trial_period_finish_date(self, trial_period_finish_date):
        """Sets the trial_period_finish_date of this ContractCommitmentInfo.

        The trial period end date related to the offer

        :param trial_period_finish_date: The trial_period_finish_date of this ContractCommitmentInfo.
        :type trial_period_finish_date: date
        """

        self._trial_period_finish_date = trial_period_finish_date

    @property
    def trial_period_in_month(self):
        """Gets the trial_period_in_month of this ContractCommitmentInfo.

        The trial period in month related to the offer

        :return: The trial_period_in_month of this ContractCommitmentInfo.
        :rtype: int
        """
        return self._trial_period_in_month

    @trial_period_in_month.setter
    def trial_period_in_month(self, trial_period_in_month):
        """Sets the trial_period_in_month of this ContractCommitmentInfo.

        The trial period in month related to the offer

        :param trial_period_in_month: The trial_period_in_month of this ContractCommitmentInfo.
        :type trial_period_in_month: int
        """

        self._trial_period_in_month = trial_period_in_month

    @property
    def variable_model_info(self):
        """Gets the variable_model_info of this ContractCommitmentInfo.


        :return: The variable_model_info of this ContractCommitmentInfo.
        :rtype: VariableModelInfo
        """
        return self._variable_model_info

    @variable_model_info.setter
    def variable_model_info(self, variable_model_info):
        """Sets the variable_model_info of this ContractCommitmentInfo.


        :param variable_model_info: The variable_model_info of this ContractCommitmentInfo.
        :type variable_model_info: VariableModelInfo
        """

        self._variable_model_info = variable_model_info
