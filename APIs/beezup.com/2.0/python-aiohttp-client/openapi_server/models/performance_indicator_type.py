# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PerformanceIndicatorType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    CLICKCOUNT = 'ClickCount'
    COST = 'Cost'
    ORDERCOUNT = 'OrderCount'
    PRODUCTCOUNT = 'ProductCount'
    SOLDPRODUCTCOUNT = 'SoldProductCount'
    DISABLEDPRODUCTCOUNT = 'DisabledProductCount'
    ENABLEDPRODUCTCOUNT = 'EnabledProductCount'
    TOTALSALES = 'TotalSales'
    MARGIN = 'Margin'
    ROI = 'ROI'
    PERFORMANCEINDICATOR = 'PerformanceIndicator'

    def __init__(self):
        """PerformanceIndicatorType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PerformanceIndicatorType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The performanceIndicatorType of this PerformanceIndicatorType.
        """
        return util.deserialize_model(dikt, cls)
