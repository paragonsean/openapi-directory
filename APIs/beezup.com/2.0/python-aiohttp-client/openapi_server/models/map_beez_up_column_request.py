# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MapBeezUPColumnRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, beez_up_column_name: str=None):
        """MapBeezUPColumnRequest - a model defined in OpenAPI

        :param beez_up_column_name: The beez_up_column_name of this MapBeezUPColumnRequest.
        """
        self.openapi_types = {
            'beez_up_column_name': str
        }

        self.attribute_map = {
            'beez_up_column_name': 'beezUPColumnName'
        }

        self._beez_up_column_name = beez_up_column_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MapBeezUPColumnRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The mapBeezUPColumnRequest of this MapBeezUPColumnRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def beez_up_column_name(self):
        """Gets the beez_up_column_name of this MapBeezUPColumnRequest.

        The BeezUP column name

        :return: The beez_up_column_name of this MapBeezUPColumnRequest.
        :rtype: str
        """
        return self._beez_up_column_name

    @beez_up_column_name.setter
    def beez_up_column_name(self, beez_up_column_name):
        """Sets the beez_up_column_name of this MapBeezUPColumnRequest.

        The BeezUP column name

        :param beez_up_column_name: The beez_up_column_name of this MapBeezUPColumnRequest.
        :type beez_up_column_name: str
        """
        if beez_up_column_name is None:
            raise ValueError("Invalid value for `beez_up_column_name`, must not be `None`")

        self._beez_up_column_name = beez_up_column_name
