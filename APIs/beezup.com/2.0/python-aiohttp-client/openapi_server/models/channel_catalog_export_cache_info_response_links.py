# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.links_clear_channel_catalog_exportation_cache_link import LinksClearChannelCatalogExportationCacheLink
from openapi_server.models.links_get_channel_catalog_exportation_cache_info_link import LinksGetChannelCatalogExportationCacheInfoLink
from openapi_server import util


class ChannelCatalogExportCacheInfoResponseLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clear: LinksClearChannelCatalogExportationCacheLink=None, _self: LinksGetChannelCatalogExportationCacheInfoLink=None):
        """ChannelCatalogExportCacheInfoResponseLinks - a model defined in OpenAPI

        :param clear: The clear of this ChannelCatalogExportCacheInfoResponseLinks.
        :param _self: The _self of this ChannelCatalogExportCacheInfoResponseLinks.
        """
        self.openapi_types = {
            'clear': LinksClearChannelCatalogExportationCacheLink,
            '_self': LinksGetChannelCatalogExportationCacheInfoLink
        }

        self.attribute_map = {
            'clear': 'clear',
            '_self': 'self'
        }

        self._clear = clear
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelCatalogExportCacheInfoResponseLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The channelCatalogExportCacheInfoResponseLinks of this ChannelCatalogExportCacheInfoResponseLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clear(self):
        """Gets the clear of this ChannelCatalogExportCacheInfoResponseLinks.


        :return: The clear of this ChannelCatalogExportCacheInfoResponseLinks.
        :rtype: LinksClearChannelCatalogExportationCacheLink
        """
        return self._clear

    @clear.setter
    def clear(self, clear):
        """Sets the clear of this ChannelCatalogExportCacheInfoResponseLinks.


        :param clear: The clear of this ChannelCatalogExportCacheInfoResponseLinks.
        :type clear: LinksClearChannelCatalogExportationCacheLink
        """

        self._clear = clear

    @property
    def _self(self):
        """Gets the _self of this ChannelCatalogExportCacheInfoResponseLinks.


        :return: The _self of this ChannelCatalogExportCacheInfoResponseLinks.
        :rtype: LinksGetChannelCatalogExportationCacheInfoLink
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this ChannelCatalogExportCacheInfoResponseLinks.


        :param _self: The _self of this ChannelCatalogExportCacheInfoResponseLinks.
        :type _self: LinksGetChannelCatalogExportationCacheInfoLink
        """
        if _self is None:
            raise ValueError("Invalid value for `_self`, must not be `None`")

        self.__self = _self
