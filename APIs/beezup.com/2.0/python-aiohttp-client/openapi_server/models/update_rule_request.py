# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateRuleRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, end_utc_date: datetime=None, rule_name: str=None, start_utc_date: datetime=None):
        """UpdateRuleRequest - a model defined in OpenAPI

        :param end_utc_date: The end_utc_date of this UpdateRuleRequest.
        :param rule_name: The rule_name of this UpdateRuleRequest.
        :param start_utc_date: The start_utc_date of this UpdateRuleRequest.
        """
        self.openapi_types = {
            'end_utc_date': datetime,
            'rule_name': str,
            'start_utc_date': datetime
        }

        self.attribute_map = {
            'end_utc_date': 'endUtcDate',
            'rule_name': 'ruleName',
            'start_utc_date': 'startUtcDate'
        }

        self._end_utc_date = end_utc_date
        self._rule_name = rule_name
        self._start_utc_date = start_utc_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateRuleRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateRuleRequest of this UpdateRuleRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def end_utc_date(self):
        """Gets the end_utc_date of this UpdateRuleRequest.

        Not required. The end validity utc date of the rule

        :return: The end_utc_date of this UpdateRuleRequest.
        :rtype: datetime
        """
        return self._end_utc_date

    @end_utc_date.setter
    def end_utc_date(self, end_utc_date):
        """Sets the end_utc_date of this UpdateRuleRequest.

        Not required. The end validity utc date of the rule

        :param end_utc_date: The end_utc_date of this UpdateRuleRequest.
        :type end_utc_date: datetime
        """

        self._end_utc_date = end_utc_date

    @property
    def rule_name(self):
        """Gets the rule_name of this UpdateRuleRequest.

        The name of the rule

        :return: The rule_name of this UpdateRuleRequest.
        :rtype: str
        """
        return self._rule_name

    @rule_name.setter
    def rule_name(self, rule_name):
        """Sets the rule_name of this UpdateRuleRequest.

        The name of the rule

        :param rule_name: The rule_name of this UpdateRuleRequest.
        :type rule_name: str
        """
        if rule_name is None:
            raise ValueError("Invalid value for `rule_name`, must not be `None`")

        self._rule_name = rule_name

    @property
    def start_utc_date(self):
        """Gets the start_utc_date of this UpdateRuleRequest.

        Not required. The start validity utc date of the rule.

        :return: The start_utc_date of this UpdateRuleRequest.
        :rtype: datetime
        """
        return self._start_utc_date

    @start_utc_date.setter
    def start_utc_date(self, start_utc_date):
        """Sets the start_utc_date of this UpdateRuleRequest.

        Not required. The start validity utc date of the rule.

        :param start_utc_date: The start_utc_date of this UpdateRuleRequest.
        :type start_utc_date: datetime
        """

        self._start_utc_date = start_utc_date
