# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.links_get_report_filters_link import LinksGetReportFiltersLink
from openapi_server.models.links_save_report_filter_link import LinksSaveReportFilterLink
from openapi_server import util


class ReportFiltersLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, save: LinksSaveReportFilterLink=None, _self: LinksGetReportFiltersLink=None):
        """ReportFiltersLinks - a model defined in OpenAPI

        :param save: The save of this ReportFiltersLinks.
        :param _self: The _self of this ReportFiltersLinks.
        """
        self.openapi_types = {
            'save': LinksSaveReportFilterLink,
            '_self': LinksGetReportFiltersLink
        }

        self.attribute_map = {
            'save': 'save',
            '_self': 'self'
        }

        self._save = save
        self.__self = _self

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportFiltersLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The reportFiltersLinks of this ReportFiltersLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def save(self):
        """Gets the save of this ReportFiltersLinks.


        :return: The save of this ReportFiltersLinks.
        :rtype: LinksSaveReportFilterLink
        """
        return self._save

    @save.setter
    def save(self, save):
        """Sets the save of this ReportFiltersLinks.


        :param save: The save of this ReportFiltersLinks.
        :type save: LinksSaveReportFilterLink
        """
        if save is None:
            raise ValueError("Invalid value for `save`, must not be `None`")

        self._save = save

    @property
    def _self(self):
        """Gets the _self of this ReportFiltersLinks.


        :return: The _self of this ReportFiltersLinks.
        :rtype: LinksGetReportFiltersLink
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this ReportFiltersLinks.


        :param _self: The _self of this ReportFiltersLinks.
        :type _self: LinksGetReportFiltersLink
        """
        if _self is None:
            raise ValueError("Invalid value for `_self`, must not be `None`")

        self.__self = _self
