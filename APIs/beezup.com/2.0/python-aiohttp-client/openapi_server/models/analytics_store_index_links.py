# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.links_analytics_index_link import LinksAnalyticsIndexLink
from openapi_server.models.links_get_report_filters_link import LinksGetReportFiltersLink
from openapi_server.models.links_get_rules_link import LinksGetRulesLink
from openapi_server.models.links_get_store_report_by_category_link import LinksGetStoreReportByCategoryLink
from openapi_server.models.links_get_store_report_by_channel_link import LinksGetStoreReportByChannelLink
from openapi_server.models.links_get_store_report_by_day_link import LinksGetStoreReportByDayLink
from openapi_server.models.links_get_store_report_by_product_link import LinksGetStoreReportByProductLink
from openapi_server.models.links_get_store_tracked_clicks_link import LinksGetStoreTrackedClicksLink
from openapi_server.models.links_get_store_tracked_external_orders_link import LinksGetStoreTrackedExternalOrdersLink
from openapi_server.models.links_get_store_tracked_orders_link import LinksGetStoreTrackedOrdersLink
from openapi_server.models.links_get_store_tracking_status_link import LinksGetStoreTrackingStatusLink
from openapi_server.models.links_optimise_all_link import LinksOptimiseAllLink
from openapi_server.models.links_optimise_by_category_link import LinksOptimiseByCategoryLink
from openapi_server.models.links_optimise_by_channel_link import LinksOptimiseByChannelLink
from openapi_server.models.links_optimise_by_product_link import LinksOptimiseByProductLink
from openapi_server.models.links_optimise_link import LinksOptimiseLink
from openapi_server import util


class AnalyticsStoreIndexLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, optimise: LinksOptimiseLink=None, optimise_all: LinksOptimiseAllLink=None, optimise_by_category: LinksOptimiseByCategoryLink=None, optimise_by_channel: LinksOptimiseByChannelLink=None, optimise_by_product: LinksOptimiseByProductLink=None, report_by_category: LinksGetStoreReportByCategoryLink=None, report_by_channel: LinksGetStoreReportByChannelLink=None, report_by_day: LinksGetStoreReportByDayLink=None, report_by_product: LinksGetStoreReportByProductLink=None, report_filters: LinksGetReportFiltersLink=None, rules: LinksGetRulesLink=None, _self: LinksAnalyticsIndexLink=None, tracked_clicks: LinksGetStoreTrackedClicksLink=None, tracked_external_orders: LinksGetStoreTrackedExternalOrdersLink=None, tracked_orders: LinksGetStoreTrackedOrdersLink=None, tracking_status: LinksGetStoreTrackingStatusLink=None):
        """AnalyticsStoreIndexLinks - a model defined in OpenAPI

        :param optimise: The optimise of this AnalyticsStoreIndexLinks.
        :param optimise_all: The optimise_all of this AnalyticsStoreIndexLinks.
        :param optimise_by_category: The optimise_by_category of this AnalyticsStoreIndexLinks.
        :param optimise_by_channel: The optimise_by_channel of this AnalyticsStoreIndexLinks.
        :param optimise_by_product: The optimise_by_product of this AnalyticsStoreIndexLinks.
        :param report_by_category: The report_by_category of this AnalyticsStoreIndexLinks.
        :param report_by_channel: The report_by_channel of this AnalyticsStoreIndexLinks.
        :param report_by_day: The report_by_day of this AnalyticsStoreIndexLinks.
        :param report_by_product: The report_by_product of this AnalyticsStoreIndexLinks.
        :param report_filters: The report_filters of this AnalyticsStoreIndexLinks.
        :param rules: The rules of this AnalyticsStoreIndexLinks.
        :param _self: The _self of this AnalyticsStoreIndexLinks.
        :param tracked_clicks: The tracked_clicks of this AnalyticsStoreIndexLinks.
        :param tracked_external_orders: The tracked_external_orders of this AnalyticsStoreIndexLinks.
        :param tracked_orders: The tracked_orders of this AnalyticsStoreIndexLinks.
        :param tracking_status: The tracking_status of this AnalyticsStoreIndexLinks.
        """
        self.openapi_types = {
            'optimise': LinksOptimiseLink,
            'optimise_all': LinksOptimiseAllLink,
            'optimise_by_category': LinksOptimiseByCategoryLink,
            'optimise_by_channel': LinksOptimiseByChannelLink,
            'optimise_by_product': LinksOptimiseByProductLink,
            'report_by_category': LinksGetStoreReportByCategoryLink,
            'report_by_channel': LinksGetStoreReportByChannelLink,
            'report_by_day': LinksGetStoreReportByDayLink,
            'report_by_product': LinksGetStoreReportByProductLink,
            'report_filters': LinksGetReportFiltersLink,
            'rules': LinksGetRulesLink,
            '_self': LinksAnalyticsIndexLink,
            'tracked_clicks': LinksGetStoreTrackedClicksLink,
            'tracked_external_orders': LinksGetStoreTrackedExternalOrdersLink,
            'tracked_orders': LinksGetStoreTrackedOrdersLink,
            'tracking_status': LinksGetStoreTrackingStatusLink
        }

        self.attribute_map = {
            'optimise': 'optimise',
            'optimise_all': 'optimiseAll',
            'optimise_by_category': 'optimiseByCategory',
            'optimise_by_channel': 'optimiseByChannel',
            'optimise_by_product': 'optimiseByProduct',
            'report_by_category': 'reportByCategory',
            'report_by_channel': 'reportByChannel',
            'report_by_day': 'reportByDay',
            'report_by_product': 'reportByProduct',
            'report_filters': 'reportFilters',
            'rules': 'rules',
            '_self': 'self',
            'tracked_clicks': 'trackedClicks',
            'tracked_external_orders': 'trackedExternalOrders',
            'tracked_orders': 'trackedOrders',
            'tracking_status': 'trackingStatus'
        }

        self._optimise = optimise
        self._optimise_all = optimise_all
        self._optimise_by_category = optimise_by_category
        self._optimise_by_channel = optimise_by_channel
        self._optimise_by_product = optimise_by_product
        self._report_by_category = report_by_category
        self._report_by_channel = report_by_channel
        self._report_by_day = report_by_day
        self._report_by_product = report_by_product
        self._report_filters = report_filters
        self._rules = rules
        self.__self = _self
        self._tracked_clicks = tracked_clicks
        self._tracked_external_orders = tracked_external_orders
        self._tracked_orders = tracked_orders
        self._tracking_status = tracking_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AnalyticsStoreIndexLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The analyticsStoreIndexLinks of this AnalyticsStoreIndexLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def optimise(self):
        """Gets the optimise of this AnalyticsStoreIndexLinks.


        :return: The optimise of this AnalyticsStoreIndexLinks.
        :rtype: LinksOptimiseLink
        """
        return self._optimise

    @optimise.setter
    def optimise(self, optimise):
        """Sets the optimise of this AnalyticsStoreIndexLinks.


        :param optimise: The optimise of this AnalyticsStoreIndexLinks.
        :type optimise: LinksOptimiseLink
        """

        self._optimise = optimise

    @property
    def optimise_all(self):
        """Gets the optimise_all of this AnalyticsStoreIndexLinks.


        :return: The optimise_all of this AnalyticsStoreIndexLinks.
        :rtype: LinksOptimiseAllLink
        """
        return self._optimise_all

    @optimise_all.setter
    def optimise_all(self, optimise_all):
        """Sets the optimise_all of this AnalyticsStoreIndexLinks.


        :param optimise_all: The optimise_all of this AnalyticsStoreIndexLinks.
        :type optimise_all: LinksOptimiseAllLink
        """

        self._optimise_all = optimise_all

    @property
    def optimise_by_category(self):
        """Gets the optimise_by_category of this AnalyticsStoreIndexLinks.


        :return: The optimise_by_category of this AnalyticsStoreIndexLinks.
        :rtype: LinksOptimiseByCategoryLink
        """
        return self._optimise_by_category

    @optimise_by_category.setter
    def optimise_by_category(self, optimise_by_category):
        """Sets the optimise_by_category of this AnalyticsStoreIndexLinks.


        :param optimise_by_category: The optimise_by_category of this AnalyticsStoreIndexLinks.
        :type optimise_by_category: LinksOptimiseByCategoryLink
        """

        self._optimise_by_category = optimise_by_category

    @property
    def optimise_by_channel(self):
        """Gets the optimise_by_channel of this AnalyticsStoreIndexLinks.


        :return: The optimise_by_channel of this AnalyticsStoreIndexLinks.
        :rtype: LinksOptimiseByChannelLink
        """
        return self._optimise_by_channel

    @optimise_by_channel.setter
    def optimise_by_channel(self, optimise_by_channel):
        """Sets the optimise_by_channel of this AnalyticsStoreIndexLinks.


        :param optimise_by_channel: The optimise_by_channel of this AnalyticsStoreIndexLinks.
        :type optimise_by_channel: LinksOptimiseByChannelLink
        """

        self._optimise_by_channel = optimise_by_channel

    @property
    def optimise_by_product(self):
        """Gets the optimise_by_product of this AnalyticsStoreIndexLinks.


        :return: The optimise_by_product of this AnalyticsStoreIndexLinks.
        :rtype: LinksOptimiseByProductLink
        """
        return self._optimise_by_product

    @optimise_by_product.setter
    def optimise_by_product(self, optimise_by_product):
        """Sets the optimise_by_product of this AnalyticsStoreIndexLinks.


        :param optimise_by_product: The optimise_by_product of this AnalyticsStoreIndexLinks.
        :type optimise_by_product: LinksOptimiseByProductLink
        """

        self._optimise_by_product = optimise_by_product

    @property
    def report_by_category(self):
        """Gets the report_by_category of this AnalyticsStoreIndexLinks.


        :return: The report_by_category of this AnalyticsStoreIndexLinks.
        :rtype: LinksGetStoreReportByCategoryLink
        """
        return self._report_by_category

    @report_by_category.setter
    def report_by_category(self, report_by_category):
        """Sets the report_by_category of this AnalyticsStoreIndexLinks.


        :param report_by_category: The report_by_category of this AnalyticsStoreIndexLinks.
        :type report_by_category: LinksGetStoreReportByCategoryLink
        """

        self._report_by_category = report_by_category

    @property
    def report_by_channel(self):
        """Gets the report_by_channel of this AnalyticsStoreIndexLinks.


        :return: The report_by_channel of this AnalyticsStoreIndexLinks.
        :rtype: LinksGetStoreReportByChannelLink
        """
        return self._report_by_channel

    @report_by_channel.setter
    def report_by_channel(self, report_by_channel):
        """Sets the report_by_channel of this AnalyticsStoreIndexLinks.


        :param report_by_channel: The report_by_channel of this AnalyticsStoreIndexLinks.
        :type report_by_channel: LinksGetStoreReportByChannelLink
        """

        self._report_by_channel = report_by_channel

    @property
    def report_by_day(self):
        """Gets the report_by_day of this AnalyticsStoreIndexLinks.


        :return: The report_by_day of this AnalyticsStoreIndexLinks.
        :rtype: LinksGetStoreReportByDayLink
        """
        return self._report_by_day

    @report_by_day.setter
    def report_by_day(self, report_by_day):
        """Sets the report_by_day of this AnalyticsStoreIndexLinks.


        :param report_by_day: The report_by_day of this AnalyticsStoreIndexLinks.
        :type report_by_day: LinksGetStoreReportByDayLink
        """

        self._report_by_day = report_by_day

    @property
    def report_by_product(self):
        """Gets the report_by_product of this AnalyticsStoreIndexLinks.


        :return: The report_by_product of this AnalyticsStoreIndexLinks.
        :rtype: LinksGetStoreReportByProductLink
        """
        return self._report_by_product

    @report_by_product.setter
    def report_by_product(self, report_by_product):
        """Sets the report_by_product of this AnalyticsStoreIndexLinks.


        :param report_by_product: The report_by_product of this AnalyticsStoreIndexLinks.
        :type report_by_product: LinksGetStoreReportByProductLink
        """

        self._report_by_product = report_by_product

    @property
    def report_filters(self):
        """Gets the report_filters of this AnalyticsStoreIndexLinks.


        :return: The report_filters of this AnalyticsStoreIndexLinks.
        :rtype: LinksGetReportFiltersLink
        """
        return self._report_filters

    @report_filters.setter
    def report_filters(self, report_filters):
        """Sets the report_filters of this AnalyticsStoreIndexLinks.


        :param report_filters: The report_filters of this AnalyticsStoreIndexLinks.
        :type report_filters: LinksGetReportFiltersLink
        """
        if report_filters is None:
            raise ValueError("Invalid value for `report_filters`, must not be `None`")

        self._report_filters = report_filters

    @property
    def rules(self):
        """Gets the rules of this AnalyticsStoreIndexLinks.


        :return: The rules of this AnalyticsStoreIndexLinks.
        :rtype: LinksGetRulesLink
        """
        return self._rules

    @rules.setter
    def rules(self, rules):
        """Sets the rules of this AnalyticsStoreIndexLinks.


        :param rules: The rules of this AnalyticsStoreIndexLinks.
        :type rules: LinksGetRulesLink
        """

        self._rules = rules

    @property
    def _self(self):
        """Gets the _self of this AnalyticsStoreIndexLinks.


        :return: The _self of this AnalyticsStoreIndexLinks.
        :rtype: LinksAnalyticsIndexLink
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this AnalyticsStoreIndexLinks.


        :param _self: The _self of this AnalyticsStoreIndexLinks.
        :type _self: LinksAnalyticsIndexLink
        """
        if _self is None:
            raise ValueError("Invalid value for `_self`, must not be `None`")

        self.__self = _self

    @property
    def tracked_clicks(self):
        """Gets the tracked_clicks of this AnalyticsStoreIndexLinks.


        :return: The tracked_clicks of this AnalyticsStoreIndexLinks.
        :rtype: LinksGetStoreTrackedClicksLink
        """
        return self._tracked_clicks

    @tracked_clicks.setter
    def tracked_clicks(self, tracked_clicks):
        """Sets the tracked_clicks of this AnalyticsStoreIndexLinks.


        :param tracked_clicks: The tracked_clicks of this AnalyticsStoreIndexLinks.
        :type tracked_clicks: LinksGetStoreTrackedClicksLink
        """
        if tracked_clicks is None:
            raise ValueError("Invalid value for `tracked_clicks`, must not be `None`")

        self._tracked_clicks = tracked_clicks

    @property
    def tracked_external_orders(self):
        """Gets the tracked_external_orders of this AnalyticsStoreIndexLinks.


        :return: The tracked_external_orders of this AnalyticsStoreIndexLinks.
        :rtype: LinksGetStoreTrackedExternalOrdersLink
        """
        return self._tracked_external_orders

    @tracked_external_orders.setter
    def tracked_external_orders(self, tracked_external_orders):
        """Sets the tracked_external_orders of this AnalyticsStoreIndexLinks.


        :param tracked_external_orders: The tracked_external_orders of this AnalyticsStoreIndexLinks.
        :type tracked_external_orders: LinksGetStoreTrackedExternalOrdersLink
        """

        self._tracked_external_orders = tracked_external_orders

    @property
    def tracked_orders(self):
        """Gets the tracked_orders of this AnalyticsStoreIndexLinks.


        :return: The tracked_orders of this AnalyticsStoreIndexLinks.
        :rtype: LinksGetStoreTrackedOrdersLink
        """
        return self._tracked_orders

    @tracked_orders.setter
    def tracked_orders(self, tracked_orders):
        """Sets the tracked_orders of this AnalyticsStoreIndexLinks.


        :param tracked_orders: The tracked_orders of this AnalyticsStoreIndexLinks.
        :type tracked_orders: LinksGetStoreTrackedOrdersLink
        """
        if tracked_orders is None:
            raise ValueError("Invalid value for `tracked_orders`, must not be `None`")

        self._tracked_orders = tracked_orders

    @property
    def tracking_status(self):
        """Gets the tracking_status of this AnalyticsStoreIndexLinks.


        :return: The tracking_status of this AnalyticsStoreIndexLinks.
        :rtype: LinksGetStoreTrackingStatusLink
        """
        return self._tracking_status

    @tracking_status.setter
    def tracking_status(self, tracking_status):
        """Sets the tracking_status of this AnalyticsStoreIndexLinks.


        :param tracking_status: The tracking_status of this AnalyticsStoreIndexLinks.
        :type tracking_status: LinksGetStoreTrackingStatusLink
        """
        if tracking_status is None:
            raise ValueError("Invalid value for `tracking_status`, must not be `None`")

        self._tracking_status = tracking_status
