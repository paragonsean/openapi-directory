# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.links_get_store_shares_link import LinksGetStoreSharesLink
from openapi_server.models.links_share_store_link import LinksShareStoreLink
from openapi_server import util


class StoreSharesLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _self: LinksGetStoreSharesLink=None, share: LinksShareStoreLink=None):
        """StoreSharesLinks - a model defined in OpenAPI

        :param _self: The _self of this StoreSharesLinks.
        :param share: The share of this StoreSharesLinks.
        """
        self.openapi_types = {
            '_self': LinksGetStoreSharesLink,
            'share': LinksShareStoreLink
        }

        self.attribute_map = {
            '_self': 'self',
            'share': 'share'
        }

        self.__self = _self
        self._share = share

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StoreSharesLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The storeSharesLinks of this StoreSharesLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _self(self):
        """Gets the _self of this StoreSharesLinks.


        :return: The _self of this StoreSharesLinks.
        :rtype: LinksGetStoreSharesLink
        """
        return self.__self

    @_self.setter
    def _self(self, _self):
        """Sets the _self of this StoreSharesLinks.


        :param _self: The _self of this StoreSharesLinks.
        :type _self: LinksGetStoreSharesLink
        """

        self.__self = _self

    @property
    def share(self):
        """Gets the share of this StoreSharesLinks.


        :return: The share of this StoreSharesLinks.
        :rtype: LinksShareStoreLink
        """
        return self._share

    @share.setter
    def share(self, share):
        """Sets the share of this StoreSharesLinks.


        :param share: The share of this StoreSharesLinks.
        :type share: LinksShareStoreLink
        """

        self._share = share
