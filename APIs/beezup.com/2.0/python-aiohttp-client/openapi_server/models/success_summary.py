# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SuccessSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, object_name: str=None, property_name: str=None, property_value: str=None, success_arguments: Dict[str, str]=None, success_code: str=None, success_message: str=None):
        """SuccessSummary - a model defined in OpenAPI

        :param object_name: The object_name of this SuccessSummary.
        :param property_name: The property_name of this SuccessSummary.
        :param property_value: The property_value of this SuccessSummary.
        :param success_arguments: The success_arguments of this SuccessSummary.
        :param success_code: The success_code of this SuccessSummary.
        :param success_message: The success_message of this SuccessSummary.
        """
        self.openapi_types = {
            'object_name': str,
            'property_name': str,
            'property_value': str,
            'success_arguments': Dict[str, str],
            'success_code': str,
            'success_message': str
        }

        self.attribute_map = {
            'object_name': 'objectName',
            'property_name': 'propertyName',
            'property_value': 'propertyValue',
            'success_arguments': 'successArguments',
            'success_code': 'successCode',
            'success_message': 'successMessage'
        }

        self._object_name = object_name
        self._property_name = property_name
        self._property_value = property_value
        self._success_arguments = success_arguments
        self._success_code = success_code
        self._success_message = success_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SuccessSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The successSummary of this SuccessSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def object_name(self):
        """Gets the object_name of this SuccessSummary.


        :return: The object_name of this SuccessSummary.
        :rtype: str
        """
        return self._object_name

    @object_name.setter
    def object_name(self, object_name):
        """Sets the object_name of this SuccessSummary.


        :param object_name: The object_name of this SuccessSummary.
        :type object_name: str
        """

        self._object_name = object_name

    @property
    def property_name(self):
        """Gets the property_name of this SuccessSummary.


        :return: The property_name of this SuccessSummary.
        :rtype: str
        """
        return self._property_name

    @property_name.setter
    def property_name(self, property_name):
        """Sets the property_name of this SuccessSummary.


        :param property_name: The property_name of this SuccessSummary.
        :type property_name: str
        """

        self._property_name = property_name

    @property
    def property_value(self):
        """Gets the property_value of this SuccessSummary.


        :return: The property_value of this SuccessSummary.
        :rtype: str
        """
        return self._property_value

    @property_value.setter
    def property_value(self, property_value):
        """Sets the property_value of this SuccessSummary.


        :param property_value: The property_value of this SuccessSummary.
        :type property_value: str
        """

        self._property_value = property_value

    @property
    def success_arguments(self):
        """Gets the success_arguments of this SuccessSummary.


        :return: The success_arguments of this SuccessSummary.
        :rtype: Dict[str, str]
        """
        return self._success_arguments

    @success_arguments.setter
    def success_arguments(self, success_arguments):
        """Sets the success_arguments of this SuccessSummary.


        :param success_arguments: The success_arguments of this SuccessSummary.
        :type success_arguments: Dict[str, str]
        """

        self._success_arguments = success_arguments

    @property
    def success_code(self):
        """Gets the success_code of this SuccessSummary.


        :return: The success_code of this SuccessSummary.
        :rtype: str
        """
        return self._success_code

    @success_code.setter
    def success_code(self, success_code):
        """Sets the success_code of this SuccessSummary.


        :param success_code: The success_code of this SuccessSummary.
        :type success_code: str
        """

        self._success_code = success_code

    @property
    def success_message(self):
        """Gets the success_message of this SuccessSummary.


        :return: The success_message of this SuccessSummary.
        :rtype: str
        """
        return self._success_message

    @success_message.setter
    def success_message(self, success_message):
        """Sets the success_message of this SuccessSummary.


        :param success_message: The success_message of this SuccessSummary.
        :type success_message: str
        """

        self._success_message = success_message
