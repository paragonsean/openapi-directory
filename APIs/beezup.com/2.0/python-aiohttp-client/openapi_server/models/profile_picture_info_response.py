# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.profile_picture_info_response_links import ProfilePictureInfoResponseLinks
from openapi_server.models.profile_picture_info_with_default import ProfilePictureInfoWithDefault
from openapi_server import util


class ProfilePictureInfoResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, links: ProfilePictureInfoResponseLinks=None, profile_picture_info: ProfilePictureInfoWithDefault=None):
        """ProfilePictureInfoResponse - a model defined in OpenAPI

        :param links: The links of this ProfilePictureInfoResponse.
        :param profile_picture_info: The profile_picture_info of this ProfilePictureInfoResponse.
        """
        self.openapi_types = {
            'links': ProfilePictureInfoResponseLinks,
            'profile_picture_info': ProfilePictureInfoWithDefault
        }

        self.attribute_map = {
            'links': 'links',
            'profile_picture_info': 'profilePictureInfo'
        }

        self._links = links
        self._profile_picture_info = profile_picture_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProfilePictureInfoResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The profilePictureInfoResponse of this ProfilePictureInfoResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def links(self):
        """Gets the links of this ProfilePictureInfoResponse.


        :return: The links of this ProfilePictureInfoResponse.
        :rtype: ProfilePictureInfoResponseLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this ProfilePictureInfoResponse.


        :param links: The links of this ProfilePictureInfoResponse.
        :type links: ProfilePictureInfoResponseLinks
        """
        if links is None:
            raise ValueError("Invalid value for `links`, must not be `None`")

        self._links = links

    @property
    def profile_picture_info(self):
        """Gets the profile_picture_info of this ProfilePictureInfoResponse.


        :return: The profile_picture_info of this ProfilePictureInfoResponse.
        :rtype: ProfilePictureInfoWithDefault
        """
        return self._profile_picture_info

    @profile_picture_info.setter
    def profile_picture_info(self, profile_picture_info):
        """Sets the profile_picture_info of this ProfilePictureInfoResponse.


        :param profile_picture_info: The profile_picture_info of this ProfilePictureInfoResponse.
        :type profile_picture_info: ProfilePictureInfoWithDefault
        """
        if profile_picture_info is None:
            raise ValueError("Invalid value for `profile_picture_info`, must not be `None`")

        self._profile_picture_info = profile_picture_info
