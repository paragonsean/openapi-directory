# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ImportationTechnicalProgression(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, steps_progression: Dict[str, List[str]]=None):
        """ImportationTechnicalProgression - a model defined in OpenAPI

        :param steps_progression: The steps_progression of this ImportationTechnicalProgression.
        """
        self.openapi_types = {
            'steps_progression': Dict[str, List[str]]
        }

        self.attribute_map = {
            'steps_progression': 'stepsProgression'
        }

        self._steps_progression = steps_progression

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportationTechnicalProgression':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The importationTechnicalProgression of this ImportationTechnicalProgression.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def steps_progression(self):
        """Gets the steps_progression of this ImportationTechnicalProgression.

        Indicate for each step of the importation the uris to look at

        :return: The steps_progression of this ImportationTechnicalProgression.
        :rtype: Dict[str, List[str]]
        """
        return self._steps_progression

    @steps_progression.setter
    def steps_progression(self, steps_progression):
        """Sets the steps_progression of this ImportationTechnicalProgression.

        Indicate for each step of the importation the uris to look at

        :param steps_progression: The steps_progression of this ImportationTechnicalProgression.
        :type steps_progression: Dict[str, List[str]]
        """

        self._steps_progression = steps_progression
