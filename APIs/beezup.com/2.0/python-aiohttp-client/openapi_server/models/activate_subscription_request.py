# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ActivateSubscriptionRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, recover_begin_period_order_last_modification_utc_date: datetime=None, recover_end_period_order_last_modification_utc_date: datetime=None):
        """ActivateSubscriptionRequest - a model defined in OpenAPI

        :param recover_begin_period_order_last_modification_utc_date: The recover_begin_period_order_last_modification_utc_date of this ActivateSubscriptionRequest.
        :param recover_end_period_order_last_modification_utc_date: The recover_end_period_order_last_modification_utc_date of this ActivateSubscriptionRequest.
        """
        self.openapi_types = {
            'recover_begin_period_order_last_modification_utc_date': datetime,
            'recover_end_period_order_last_modification_utc_date': datetime
        }

        self.attribute_map = {
            'recover_begin_period_order_last_modification_utc_date': 'recoverBeginPeriodOrderLastModificationUtcDate',
            'recover_end_period_order_last_modification_utc_date': 'recoverEndPeriodOrderLastModificationUtcDate'
        }

        self._recover_begin_period_order_last_modification_utc_date = recover_begin_period_order_last_modification_utc_date
        self._recover_end_period_order_last_modification_utc_date = recover_end_period_order_last_modification_utc_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ActivateSubscriptionRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The activateSubscriptionRequest of this ActivateSubscriptionRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def recover_begin_period_order_last_modification_utc_date(self):
        """Gets the recover_begin_period_order_last_modification_utc_date of this ActivateSubscriptionRequest.

        If set, the date must be in the past the subscription will recover existing orders using the begin period order last modification date. If not set then you will receive new/updated orders in real-time.

        :return: The recover_begin_period_order_last_modification_utc_date of this ActivateSubscriptionRequest.
        :rtype: datetime
        """
        return self._recover_begin_period_order_last_modification_utc_date

    @recover_begin_period_order_last_modification_utc_date.setter
    def recover_begin_period_order_last_modification_utc_date(self, recover_begin_period_order_last_modification_utc_date):
        """Sets the recover_begin_period_order_last_modification_utc_date of this ActivateSubscriptionRequest.

        If set, the date must be in the past the subscription will recover existing orders using the begin period order last modification date. If not set then you will receive new/updated orders in real-time.

        :param recover_begin_period_order_last_modification_utc_date: The recover_begin_period_order_last_modification_utc_date of this ActivateSubscriptionRequest.
        :type recover_begin_period_order_last_modification_utc_date: datetime
        """

        self._recover_begin_period_order_last_modification_utc_date = recover_begin_period_order_last_modification_utc_date

    @property
    def recover_end_period_order_last_modification_utc_date(self):
        """Gets the recover_end_period_order_last_modification_utc_date of this ActivateSubscriptionRequest.

        If end period set, first the date must be in the past, the subscription will recover existing orders using the begin and the end period order last modification date.  If end period is not set and the begin period is set, then you will recover existing orders from the past using the begin period last modification date and after than you will continue to receive new/updated orders in real-time. If begin/end period are not set then you will receive new/updated orders in real-time. REMARK: The begin period is required if the end period is fulfilled. REMARK: If the end period is order last modification date is indicated then once we have push all orders to your target url the subscription will be desactivated.

        :return: The recover_end_period_order_last_modification_utc_date of this ActivateSubscriptionRequest.
        :rtype: datetime
        """
        return self._recover_end_period_order_last_modification_utc_date

    @recover_end_period_order_last_modification_utc_date.setter
    def recover_end_period_order_last_modification_utc_date(self, recover_end_period_order_last_modification_utc_date):
        """Sets the recover_end_period_order_last_modification_utc_date of this ActivateSubscriptionRequest.

        If end period set, first the date must be in the past, the subscription will recover existing orders using the begin and the end period order last modification date.  If end period is not set and the begin period is set, then you will recover existing orders from the past using the begin period last modification date and after than you will continue to receive new/updated orders in real-time. If begin/end period are not set then you will receive new/updated orders in real-time. REMARK: The begin period is required if the end period is fulfilled. REMARK: If the end period is order last modification date is indicated then once we have push all orders to your target url the subscription will be desactivated.

        :param recover_end_period_order_last_modification_utc_date: The recover_end_period_order_last_modification_utc_date of this ActivateSubscriptionRequest.
        :type recover_end_period_order_last_modification_utc_date: datetime
        """

        self._recover_end_period_order_last_modification_utc_date = recover_end_period_order_last_modification_utc_date
