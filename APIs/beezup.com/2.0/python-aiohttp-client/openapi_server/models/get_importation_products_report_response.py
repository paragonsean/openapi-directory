# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.beez_up_common_pagination_result import BeezUPCommonPaginationResult
from openapi_server.models.product_error import ProductError
from openapi_server import util


class GetImportationProductsReportResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pagination_result: BeezUPCommonPaginationResult=None, product_errors: List[ProductError]=None):
        """GetImportationProductsReportResponse - a model defined in OpenAPI

        :param pagination_result: The pagination_result of this GetImportationProductsReportResponse.
        :param product_errors: The product_errors of this GetImportationProductsReportResponse.
        """
        self.openapi_types = {
            'pagination_result': BeezUPCommonPaginationResult,
            'product_errors': List[ProductError]
        }

        self.attribute_map = {
            'pagination_result': 'paginationResult',
            'product_errors': 'productErrors'
        }

        self._pagination_result = pagination_result
        self._product_errors = product_errors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetImportationProductsReportResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getImportationProductsReportResponse of this GetImportationProductsReportResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pagination_result(self):
        """Gets the pagination_result of this GetImportationProductsReportResponse.


        :return: The pagination_result of this GetImportationProductsReportResponse.
        :rtype: BeezUPCommonPaginationResult
        """
        return self._pagination_result

    @pagination_result.setter
    def pagination_result(self, pagination_result):
        """Sets the pagination_result of this GetImportationProductsReportResponse.


        :param pagination_result: The pagination_result of this GetImportationProductsReportResponse.
        :type pagination_result: BeezUPCommonPaginationResult
        """
        if pagination_result is None:
            raise ValueError("Invalid value for `pagination_result`, must not be `None`")

        self._pagination_result = pagination_result

    @property
    def product_errors(self):
        """Gets the product_errors of this GetImportationProductsReportResponse.

        Product Errors

        :return: The product_errors of this GetImportationProductsReportResponse.
        :rtype: List[ProductError]
        """
        return self._product_errors

    @product_errors.setter
    def product_errors(self, product_errors):
        """Sets the product_errors of this GetImportationProductsReportResponse.

        Product Errors

        :param product_errors: The product_errors of this GetImportationProductsReportResponse.
        :type product_errors: List[ProductError]
        """

        self._product_errors = product_errors
