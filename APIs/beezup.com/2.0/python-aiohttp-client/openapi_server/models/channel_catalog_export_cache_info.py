# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChannelCatalogExportCacheInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cache_status: str=None, expiration_utc_date: datetime=None, feed_url: str=None, last_content_change_utc_date: datetime=None, last_update_utc_date: datetime=None):
        """ChannelCatalogExportCacheInfo - a model defined in OpenAPI

        :param cache_status: The cache_status of this ChannelCatalogExportCacheInfo.
        :param expiration_utc_date: The expiration_utc_date of this ChannelCatalogExportCacheInfo.
        :param feed_url: The feed_url of this ChannelCatalogExportCacheInfo.
        :param last_content_change_utc_date: The last_content_change_utc_date of this ChannelCatalogExportCacheInfo.
        :param last_update_utc_date: The last_update_utc_date of this ChannelCatalogExportCacheInfo.
        """
        self.openapi_types = {
            'cache_status': str,
            'expiration_utc_date': datetime,
            'feed_url': str,
            'last_content_change_utc_date': datetime,
            'last_update_utc_date': datetime
        }

        self.attribute_map = {
            'cache_status': 'cacheStatus',
            'expiration_utc_date': 'expirationUtcDate',
            'feed_url': 'feedUrl',
            'last_content_change_utc_date': 'lastContentChangeUtcDate',
            'last_update_utc_date': 'lastUpdateUtcDate'
        }

        self._cache_status = cache_status
        self._expiration_utc_date = expiration_utc_date
        self._feed_url = feed_url
        self._last_content_change_utc_date = last_content_change_utc_date
        self._last_update_utc_date = last_update_utc_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelCatalogExportCacheInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The channelCatalogExportCacheInfo of this ChannelCatalogExportCacheInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cache_status(self):
        """Gets the cache_status of this ChannelCatalogExportCacheInfo.

        The cache status

        :return: The cache_status of this ChannelCatalogExportCacheInfo.
        :rtype: str
        """
        return self._cache_status

    @cache_status.setter
    def cache_status(self, cache_status):
        """Sets the cache_status of this ChannelCatalogExportCacheInfo.

        The cache status

        :param cache_status: The cache_status of this ChannelCatalogExportCacheInfo.
        :type cache_status: str
        """
        if cache_status is None:
            raise ValueError("Invalid value for `cache_status`, must not be `None`")

        self._cache_status = cache_status

    @property
    def expiration_utc_date(self):
        """Gets the expiration_utc_date of this ChannelCatalogExportCacheInfo.

        The expiration UTC date of the cache

        :return: The expiration_utc_date of this ChannelCatalogExportCacheInfo.
        :rtype: datetime
        """
        return self._expiration_utc_date

    @expiration_utc_date.setter
    def expiration_utc_date(self, expiration_utc_date):
        """Sets the expiration_utc_date of this ChannelCatalogExportCacheInfo.

        The expiration UTC date of the cache

        :param expiration_utc_date: The expiration_utc_date of this ChannelCatalogExportCacheInfo.
        :type expiration_utc_date: datetime
        """

        self._expiration_utc_date = expiration_utc_date

    @property
    def feed_url(self):
        """Gets the feed_url of this ChannelCatalogExportCacheInfo.

        The feed url

        :return: The feed_url of this ChannelCatalogExportCacheInfo.
        :rtype: str
        """
        return self._feed_url

    @feed_url.setter
    def feed_url(self, feed_url):
        """Sets the feed_url of this ChannelCatalogExportCacheInfo.

        The feed url

        :param feed_url: The feed_url of this ChannelCatalogExportCacheInfo.
        :type feed_url: str
        """

        self._feed_url = feed_url

    @property
    def last_content_change_utc_date(self):
        """Gets the last_content_change_utc_date of this ChannelCatalogExportCacheInfo.

        The last content change UTC date

        :return: The last_content_change_utc_date of this ChannelCatalogExportCacheInfo.
        :rtype: datetime
        """
        return self._last_content_change_utc_date

    @last_content_change_utc_date.setter
    def last_content_change_utc_date(self, last_content_change_utc_date):
        """Sets the last_content_change_utc_date of this ChannelCatalogExportCacheInfo.

        The last content change UTC date

        :param last_content_change_utc_date: The last_content_change_utc_date of this ChannelCatalogExportCacheInfo.
        :type last_content_change_utc_date: datetime
        """

        self._last_content_change_utc_date = last_content_change_utc_date

    @property
    def last_update_utc_date(self):
        """Gets the last_update_utc_date of this ChannelCatalogExportCacheInfo.

        The last update UTC date of the cache

        :return: The last_update_utc_date of this ChannelCatalogExportCacheInfo.
        :rtype: datetime
        """
        return self._last_update_utc_date

    @last_update_utc_date.setter
    def last_update_utc_date(self, last_update_utc_date):
        """Sets the last_update_utc_date of this ChannelCatalogExportCacheInfo.

        The last update UTC date of the cache

        :param last_update_utc_date: The last_update_utc_date of this ChannelCatalogExportCacheInfo.
        :type last_update_utc_date: datetime
        """

        self._last_update_utc_date = last_update_utc_date
