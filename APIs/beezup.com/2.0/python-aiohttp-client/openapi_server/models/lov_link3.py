# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.http_method import HttpMethod
from openapi_server import util


class LOVLink3(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, href: str=None, method: HttpMethod=HttpMethod.GET):
        """LOVLink3 - a model defined in OpenAPI

        :param href: The href of this LOVLink3.
        :param method: The method of this LOVLink3.
        """
        self.openapi_types = {
            'href': str,
            'method': HttpMethod
        }

        self.attribute_map = {
            'href': 'href',
            'method': 'method'
        }

        self._href = href
        self._method = method

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LOVLink3':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LOVLink3 of this LOVLink3.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def href(self):
        """Gets the href of this LOVLink3.

        Indicate the uri to the list of value

        :return: The href of this LOVLink3.
        :rtype: str
        """
        return self._href

    @href.setter
    def href(self, href):
        """Sets the href of this LOVLink3.

        Indicate the uri to the list of value

        :param href: The href of this LOVLink3.
        :type href: str
        """
        if href is None:
            raise ValueError("Invalid value for `href`, must not be `None`")

        self._href = href

    @property
    def method(self):
        """Gets the method of this LOVLink3.


        :return: The method of this LOVLink3.
        :rtype: HttpMethod
        """
        return self._method

    @method.setter
    def method(self, method):
        """Sets the method of this LOVLink3.


        :param method: The method of this LOVLink3.
        :type method: HttpMethod
        """

        self._method = method
