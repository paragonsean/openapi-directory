# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.report_advanced_filters import ReportAdvancedFilters
from openapi_server import util


class ReportByDayRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, advanced_filters: ReportAdvancedFilters=None, begin_period_utc_date: date=None, catalog_category_id: str=None, channel_ids: List[str]=None, end_period_utc_date: date=None, product_id: str=None):
        """ReportByDayRequest - a model defined in OpenAPI

        :param advanced_filters: The advanced_filters of this ReportByDayRequest.
        :param begin_period_utc_date: The begin_period_utc_date of this ReportByDayRequest.
        :param catalog_category_id: The catalog_category_id of this ReportByDayRequest.
        :param channel_ids: The channel_ids of this ReportByDayRequest.
        :param end_period_utc_date: The end_period_utc_date of this ReportByDayRequest.
        :param product_id: The product_id of this ReportByDayRequest.
        """
        self.openapi_types = {
            'advanced_filters': ReportAdvancedFilters,
            'begin_period_utc_date': date,
            'catalog_category_id': str,
            'channel_ids': List[str],
            'end_period_utc_date': date,
            'product_id': str
        }

        self.attribute_map = {
            'advanced_filters': 'advancedFilters',
            'begin_period_utc_date': 'beginPeriodUtcDate',
            'catalog_category_id': 'catalogCategoryId',
            'channel_ids': 'channelIds',
            'end_period_utc_date': 'endPeriodUtcDate',
            'product_id': 'productId'
        }

        self._advanced_filters = advanced_filters
        self._begin_period_utc_date = begin_period_utc_date
        self._catalog_category_id = catalog_category_id
        self._channel_ids = channel_ids
        self._end_period_utc_date = end_period_utc_date
        self._product_id = product_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportByDayRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The reportByDayRequest of this ReportByDayRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def advanced_filters(self):
        """Gets the advanced_filters of this ReportByDayRequest.


        :return: The advanced_filters of this ReportByDayRequest.
        :rtype: ReportAdvancedFilters
        """
        return self._advanced_filters

    @advanced_filters.setter
    def advanced_filters(self, advanced_filters):
        """Sets the advanced_filters of this ReportByDayRequest.


        :param advanced_filters: The advanced_filters of this ReportByDayRequest.
        :type advanced_filters: ReportAdvancedFilters
        """

        self._advanced_filters = advanced_filters

    @property
    def begin_period_utc_date(self):
        """Gets the begin_period_utc_date of this ReportByDayRequest.

        The begin date of the period for the report

        :return: The begin_period_utc_date of this ReportByDayRequest.
        :rtype: date
        """
        return self._begin_period_utc_date

    @begin_period_utc_date.setter
    def begin_period_utc_date(self, begin_period_utc_date):
        """Sets the begin_period_utc_date of this ReportByDayRequest.

        The begin date of the period for the report

        :param begin_period_utc_date: The begin_period_utc_date of this ReportByDayRequest.
        :type begin_period_utc_date: date
        """
        if begin_period_utc_date is None:
            raise ValueError("Invalid value for `begin_period_utc_date`, must not be `None`")

        self._begin_period_utc_date = begin_period_utc_date

    @property
    def catalog_category_id(self):
        """Gets the catalog_category_id of this ReportByDayRequest.

        The catalog category identifier

        :return: The catalog_category_id of this ReportByDayRequest.
        :rtype: str
        """
        return self._catalog_category_id

    @catalog_category_id.setter
    def catalog_category_id(self, catalog_category_id):
        """Sets the catalog_category_id of this ReportByDayRequest.

        The catalog category identifier

        :param catalog_category_id: The catalog_category_id of this ReportByDayRequest.
        :type catalog_category_id: str
        """

        self._catalog_category_id = catalog_category_id

    @property
    def channel_ids(self):
        """Gets the channel_ids of this ReportByDayRequest.

        Indicate the channel identifier list

        :return: The channel_ids of this ReportByDayRequest.
        :rtype: List[str]
        """
        return self._channel_ids

    @channel_ids.setter
    def channel_ids(self, channel_ids):
        """Sets the channel_ids of this ReportByDayRequest.

        Indicate the channel identifier list

        :param channel_ids: The channel_ids of this ReportByDayRequest.
        :type channel_ids: List[str]
        """

        self._channel_ids = channel_ids

    @property
    def end_period_utc_date(self):
        """Gets the end_period_utc_date of this ReportByDayRequest.

        The end date of the period for the report

        :return: The end_period_utc_date of this ReportByDayRequest.
        :rtype: date
        """
        return self._end_period_utc_date

    @end_period_utc_date.setter
    def end_period_utc_date(self, end_period_utc_date):
        """Sets the end_period_utc_date of this ReportByDayRequest.

        The end date of the period for the report

        :param end_period_utc_date: The end_period_utc_date of this ReportByDayRequest.
        :type end_period_utc_date: date
        """
        if end_period_utc_date is None:
            raise ValueError("Invalid value for `end_period_utc_date`, must not be `None`")

        self._end_period_utc_date = end_period_utc_date

    @property
    def product_id(self):
        """Gets the product_id of this ReportByDayRequest.

        The product identifier

        :return: The product_id of this ReportByDayRequest.
        :rtype: str
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this ReportByDayRequest.

        The product identifier

        :param product_id: The product_id of this ReportByDayRequest.
        :type product_id: str
        """

        self._product_id = product_id
