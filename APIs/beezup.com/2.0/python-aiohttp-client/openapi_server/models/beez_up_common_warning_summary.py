# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BeezUPCommonWarningSummary(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, technical_error_message: str=None, warning_arguments: Dict[str, str]=None, warning_code: str=None, warning_message: str=None):
        """BeezUPCommonWarningSummary - a model defined in OpenAPI

        :param technical_error_message: The technical_error_message of this BeezUPCommonWarningSummary.
        :param warning_arguments: The warning_arguments of this BeezUPCommonWarningSummary.
        :param warning_code: The warning_code of this BeezUPCommonWarningSummary.
        :param warning_message: The warning_message of this BeezUPCommonWarningSummary.
        """
        self.openapi_types = {
            'technical_error_message': str,
            'warning_arguments': Dict[str, str],
            'warning_code': str,
            'warning_message': str
        }

        self.attribute_map = {
            'technical_error_message': 'technicalErrorMessage',
            'warning_arguments': 'warningArguments',
            'warning_code': 'warningCode',
            'warning_message': 'warningMessage'
        }

        self._technical_error_message = technical_error_message
        self._warning_arguments = warning_arguments
        self._warning_code = warning_code
        self._warning_message = warning_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BeezUPCommonWarningSummary':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BeezUP.Common.WarningSummary of this BeezUPCommonWarningSummary.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def technical_error_message(self):
        """Gets the technical_error_message of this BeezUPCommonWarningSummary.


        :return: The technical_error_message of this BeezUPCommonWarningSummary.
        :rtype: str
        """
        return self._technical_error_message

    @technical_error_message.setter
    def technical_error_message(self, technical_error_message):
        """Sets the technical_error_message of this BeezUPCommonWarningSummary.


        :param technical_error_message: The technical_error_message of this BeezUPCommonWarningSummary.
        :type technical_error_message: str
        """

        self._technical_error_message = technical_error_message

    @property
    def warning_arguments(self):
        """Gets the warning_arguments of this BeezUPCommonWarningSummary.


        :return: The warning_arguments of this BeezUPCommonWarningSummary.
        :rtype: Dict[str, str]
        """
        return self._warning_arguments

    @warning_arguments.setter
    def warning_arguments(self, warning_arguments):
        """Sets the warning_arguments of this BeezUPCommonWarningSummary.


        :param warning_arguments: The warning_arguments of this BeezUPCommonWarningSummary.
        :type warning_arguments: Dict[str, str]
        """

        self._warning_arguments = warning_arguments

    @property
    def warning_code(self):
        """Gets the warning_code of this BeezUPCommonWarningSummary.


        :return: The warning_code of this BeezUPCommonWarningSummary.
        :rtype: str
        """
        return self._warning_code

    @warning_code.setter
    def warning_code(self, warning_code):
        """Sets the warning_code of this BeezUPCommonWarningSummary.


        :param warning_code: The warning_code of this BeezUPCommonWarningSummary.
        :type warning_code: str
        """

        self._warning_code = warning_code

    @property
    def warning_message(self):
        """Gets the warning_message of this BeezUPCommonWarningSummary.


        :return: The warning_message of this BeezUPCommonWarningSummary.
        :rtype: str
        """
        return self._warning_message

    @warning_message.setter
    def warning_message(self, warning_message):
        """Sets the warning_message of this BeezUPCommonWarningSummary.


        :param warning_message: The warning_message of this BeezUPCommonWarningSummary.
        :type warning_message: str
        """

        self._warning_message = warning_message
