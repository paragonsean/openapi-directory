# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SetMerchantOrderInfoRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, order_merchant_e_commerce_software_name: str=None, order_merchant_e_commerce_software_version: str=None, order_merchant_order_id: str=None):
        """SetMerchantOrderInfoRequest - a model defined in OpenAPI

        :param order_merchant_e_commerce_software_name: The order_merchant_e_commerce_software_name of this SetMerchantOrderInfoRequest.
        :param order_merchant_e_commerce_software_version: The order_merchant_e_commerce_software_version of this SetMerchantOrderInfoRequest.
        :param order_merchant_order_id: The order_merchant_order_id of this SetMerchantOrderInfoRequest.
        """
        self.openapi_types = {
            'order_merchant_e_commerce_software_name': str,
            'order_merchant_e_commerce_software_version': str,
            'order_merchant_order_id': str
        }

        self.attribute_map = {
            'order_merchant_e_commerce_software_name': 'order_MerchantECommerceSoftwareName',
            'order_merchant_e_commerce_software_version': 'order_MerchantECommerceSoftwareVersion',
            'order_merchant_order_id': 'order_MerchantOrderId'
        }

        self._order_merchant_e_commerce_software_name = order_merchant_e_commerce_software_name
        self._order_merchant_e_commerce_software_version = order_merchant_e_commerce_software_version
        self._order_merchant_order_id = order_merchant_order_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SetMerchantOrderInfoRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The setMerchantOrderInfoRequest of this SetMerchantOrderInfoRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def order_merchant_e_commerce_software_name(self):
        """Gets the order_merchant_e_commerce_software_name of this SetMerchantOrderInfoRequest.

        The e-commerce software name of the merchant

        :return: The order_merchant_e_commerce_software_name of this SetMerchantOrderInfoRequest.
        :rtype: str
        """
        return self._order_merchant_e_commerce_software_name

    @order_merchant_e_commerce_software_name.setter
    def order_merchant_e_commerce_software_name(self, order_merchant_e_commerce_software_name):
        """Sets the order_merchant_e_commerce_software_name of this SetMerchantOrderInfoRequest.

        The e-commerce software name of the merchant

        :param order_merchant_e_commerce_software_name: The order_merchant_e_commerce_software_name of this SetMerchantOrderInfoRequest.
        :type order_merchant_e_commerce_software_name: str
        """
        if order_merchant_e_commerce_software_name is None:
            raise ValueError("Invalid value for `order_merchant_e_commerce_software_name`, must not be `None`")

        self._order_merchant_e_commerce_software_name = order_merchant_e_commerce_software_name

    @property
    def order_merchant_e_commerce_software_version(self):
        """Gets the order_merchant_e_commerce_software_version of this SetMerchantOrderInfoRequest.

        The e-commece software version of the merchant

        :return: The order_merchant_e_commerce_software_version of this SetMerchantOrderInfoRequest.
        :rtype: str
        """
        return self._order_merchant_e_commerce_software_version

    @order_merchant_e_commerce_software_version.setter
    def order_merchant_e_commerce_software_version(self, order_merchant_e_commerce_software_version):
        """Sets the order_merchant_e_commerce_software_version of this SetMerchantOrderInfoRequest.

        The e-commece software version of the merchant

        :param order_merchant_e_commerce_software_version: The order_merchant_e_commerce_software_version of this SetMerchantOrderInfoRequest.
        :type order_merchant_e_commerce_software_version: str
        """
        if order_merchant_e_commerce_software_version is None:
            raise ValueError("Invalid value for `order_merchant_e_commerce_software_version`, must not be `None`")

        self._order_merchant_e_commerce_software_version = order_merchant_e_commerce_software_version

    @property
    def order_merchant_order_id(self):
        """Gets the order_merchant_order_id of this SetMerchantOrderInfoRequest.

        The order merchant identifier

        :return: The order_merchant_order_id of this SetMerchantOrderInfoRequest.
        :rtype: str
        """
        return self._order_merchant_order_id

    @order_merchant_order_id.setter
    def order_merchant_order_id(self, order_merchant_order_id):
        """Sets the order_merchant_order_id of this SetMerchantOrderInfoRequest.

        The order merchant identifier

        :param order_merchant_order_id: The order_merchant_order_id of this SetMerchantOrderInfoRequest.
        :type order_merchant_order_id: str
        """
        if order_merchant_order_id is None:
            raise ValueError("Invalid value for `order_merchant_order_id`, must not be `None`")

        self._order_merchant_order_id = order_merchant_order_id
