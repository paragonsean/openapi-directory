# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.beez_up_common_info_summaries import BeezUPCommonInfoSummaries
from openapi_server.models.create_contract_response_links import CreateContractResponseLinks
from openapi_server import util


class CreateContractResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, info: BeezUPCommonInfoSummaries=None, links: CreateContractResponseLinks=None):
        """CreateContractResponse - a model defined in OpenAPI

        :param info: The info of this CreateContractResponse.
        :param links: The links of this CreateContractResponse.
        """
        self.openapi_types = {
            'info': BeezUPCommonInfoSummaries,
            'links': CreateContractResponseLinks
        }

        self.attribute_map = {
            'info': 'info',
            'links': 'links'
        }

        self._info = info
        self._links = links

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateContractResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The createContractResponse of this CreateContractResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def info(self):
        """Gets the info of this CreateContractResponse.


        :return: The info of this CreateContractResponse.
        :rtype: BeezUPCommonInfoSummaries
        """
        return self._info

    @info.setter
    def info(self, info):
        """Sets the info of this CreateContractResponse.


        :param info: The info of this CreateContractResponse.
        :type info: BeezUPCommonInfoSummaries
        """

        self._info = info

    @property
    def links(self):
        """Gets the links of this CreateContractResponse.


        :return: The links of this CreateContractResponse.
        :rtype: CreateContractResponseLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this CreateContractResponse.


        :param links: The links of this CreateContractResponse.
        :type links: CreateContractResponseLinks
        """

        self._links = links
