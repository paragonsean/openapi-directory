# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.links_reactivate_current_contract_link import LinksReactivateCurrentContractLink
from openapi_server.models.links_terminate_current_contract_link import LinksTerminateCurrentContractLink
from openapi_server import util


class CurrentContractInfoLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disable: LinksTerminateCurrentContractLink=None, reenable: LinksReactivateCurrentContractLink=None):
        """CurrentContractInfoLinks - a model defined in OpenAPI

        :param disable: The disable of this CurrentContractInfoLinks.
        :param reenable: The reenable of this CurrentContractInfoLinks.
        """
        self.openapi_types = {
            'disable': LinksTerminateCurrentContractLink,
            'reenable': LinksReactivateCurrentContractLink
        }

        self.attribute_map = {
            'disable': 'disable',
            'reenable': 'reenable'
        }

        self._disable = disable
        self._reenable = reenable

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CurrentContractInfoLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The currentContractInfoLinks of this CurrentContractInfoLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disable(self):
        """Gets the disable of this CurrentContractInfoLinks.


        :return: The disable of this CurrentContractInfoLinks.
        :rtype: LinksTerminateCurrentContractLink
        """
        return self._disable

    @disable.setter
    def disable(self, disable):
        """Sets the disable of this CurrentContractInfoLinks.


        :param disable: The disable of this CurrentContractInfoLinks.
        :type disable: LinksTerminateCurrentContractLink
        """

        self._disable = disable

    @property
    def reenable(self):
        """Gets the reenable of this CurrentContractInfoLinks.


        :return: The reenable of this CurrentContractInfoLinks.
        :rtype: LinksReactivateCurrentContractLink
        """
        return self._reenable

    @reenable.setter
    def reenable(self, reenable):
        """Sets the reenable of this CurrentContractInfoLinks.


        :param reenable: The reenable of this CurrentContractInfoLinks.
        :type reenable: LinksReactivateCurrentContractLink
        """

        self._reenable = reenable
