# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.beez_up_common_error_summary import BeezUPCommonErrorSummary
from openapi_server.models.beez_up_common_info_summary import BeezUPCommonInfoSummary
from openapi_server.models.beez_up_common_success_summary import BeezUPCommonSuccessSummary
from openapi_server.models.beez_up_common_warning_summary import BeezUPCommonWarningSummary
from openapi_server import util


class BeezUPCommonInfoSummaries(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, errors: List[BeezUPCommonErrorSummary]=None, informations: List[BeezUPCommonInfoSummary]=None, successes: List[BeezUPCommonSuccessSummary]=None, warnings: List[BeezUPCommonWarningSummary]=None):
        """BeezUPCommonInfoSummaries - a model defined in OpenAPI

        :param errors: The errors of this BeezUPCommonInfoSummaries.
        :param informations: The informations of this BeezUPCommonInfoSummaries.
        :param successes: The successes of this BeezUPCommonInfoSummaries.
        :param warnings: The warnings of this BeezUPCommonInfoSummaries.
        """
        self.openapi_types = {
            'errors': List[BeezUPCommonErrorSummary],
            'informations': List[BeezUPCommonInfoSummary],
            'successes': List[BeezUPCommonSuccessSummary],
            'warnings': List[BeezUPCommonWarningSummary]
        }

        self.attribute_map = {
            'errors': 'errors',
            'informations': 'informations',
            'successes': 'successes',
            'warnings': 'warnings'
        }

        self._errors = errors
        self._informations = informations
        self._successes = successes
        self._warnings = warnings

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BeezUPCommonInfoSummaries':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BeezUP.Common.InfoSummaries of this BeezUPCommonInfoSummaries.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors(self):
        """Gets the errors of this BeezUPCommonInfoSummaries.


        :return: The errors of this BeezUPCommonInfoSummaries.
        :rtype: List[BeezUPCommonErrorSummary]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this BeezUPCommonInfoSummaries.


        :param errors: The errors of this BeezUPCommonInfoSummaries.
        :type errors: List[BeezUPCommonErrorSummary]
        """

        self._errors = errors

    @property
    def informations(self):
        """Gets the informations of this BeezUPCommonInfoSummaries.


        :return: The informations of this BeezUPCommonInfoSummaries.
        :rtype: List[BeezUPCommonInfoSummary]
        """
        return self._informations

    @informations.setter
    def informations(self, informations):
        """Sets the informations of this BeezUPCommonInfoSummaries.


        :param informations: The informations of this BeezUPCommonInfoSummaries.
        :type informations: List[BeezUPCommonInfoSummary]
        """

        self._informations = informations

    @property
    def successes(self):
        """Gets the successes of this BeezUPCommonInfoSummaries.


        :return: The successes of this BeezUPCommonInfoSummaries.
        :rtype: List[BeezUPCommonSuccessSummary]
        """
        return self._successes

    @successes.setter
    def successes(self, successes):
        """Sets the successes of this BeezUPCommonInfoSummaries.


        :param successes: The successes of this BeezUPCommonInfoSummaries.
        :type successes: List[BeezUPCommonSuccessSummary]
        """

        self._successes = successes

    @property
    def warnings(self):
        """Gets the warnings of this BeezUPCommonInfoSummaries.


        :return: The warnings of this BeezUPCommonInfoSummaries.
        :rtype: List[BeezUPCommonWarningSummary]
        """
        return self._warnings

    @warnings.setter
    def warnings(self, warnings):
        """Sets the warnings of this BeezUPCommonInfoSummaries.


        :param warnings: The warnings of this BeezUPCommonInfoSummaries.
        :type warnings: List[BeezUPCommonWarningSummary]
        """

        self._warnings = warnings
