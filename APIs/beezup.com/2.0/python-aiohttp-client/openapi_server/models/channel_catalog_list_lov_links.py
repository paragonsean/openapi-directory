# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.beez_up_common_lov_link3 import BeezUPCommonLOVLink3
from openapi_server import util


class ChannelCatalogListLovLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, channel_catalog_exclusion_filter_operator_lov: BeezUPCommonLOVLink3=None, channel_catalog_export_cache_status_lov: BeezUPCommonLOVLink3=None):
        """ChannelCatalogListLovLinks - a model defined in OpenAPI

        :param channel_catalog_exclusion_filter_operator_lov: The channel_catalog_exclusion_filter_operator_lov of this ChannelCatalogListLovLinks.
        :param channel_catalog_export_cache_status_lov: The channel_catalog_export_cache_status_lov of this ChannelCatalogListLovLinks.
        """
        self.openapi_types = {
            'channel_catalog_exclusion_filter_operator_lov': BeezUPCommonLOVLink3,
            'channel_catalog_export_cache_status_lov': BeezUPCommonLOVLink3
        }

        self.attribute_map = {
            'channel_catalog_exclusion_filter_operator_lov': 'channelCatalogExclusionFilterOperatorLov',
            'channel_catalog_export_cache_status_lov': 'channelCatalogExportCacheStatusLov'
        }

        self._channel_catalog_exclusion_filter_operator_lov = channel_catalog_exclusion_filter_operator_lov
        self._channel_catalog_export_cache_status_lov = channel_catalog_export_cache_status_lov

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelCatalogListLovLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The channelCatalogListLovLinks of this ChannelCatalogListLovLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def channel_catalog_exclusion_filter_operator_lov(self):
        """Gets the channel_catalog_exclusion_filter_operator_lov of this ChannelCatalogListLovLinks.


        :return: The channel_catalog_exclusion_filter_operator_lov of this ChannelCatalogListLovLinks.
        :rtype: BeezUPCommonLOVLink3
        """
        return self._channel_catalog_exclusion_filter_operator_lov

    @channel_catalog_exclusion_filter_operator_lov.setter
    def channel_catalog_exclusion_filter_operator_lov(self, channel_catalog_exclusion_filter_operator_lov):
        """Sets the channel_catalog_exclusion_filter_operator_lov of this ChannelCatalogListLovLinks.


        :param channel_catalog_exclusion_filter_operator_lov: The channel_catalog_exclusion_filter_operator_lov of this ChannelCatalogListLovLinks.
        :type channel_catalog_exclusion_filter_operator_lov: BeezUPCommonLOVLink3
        """

        self._channel_catalog_exclusion_filter_operator_lov = channel_catalog_exclusion_filter_operator_lov

    @property
    def channel_catalog_export_cache_status_lov(self):
        """Gets the channel_catalog_export_cache_status_lov of this ChannelCatalogListLovLinks.


        :return: The channel_catalog_export_cache_status_lov of this ChannelCatalogListLovLinks.
        :rtype: BeezUPCommonLOVLink3
        """
        return self._channel_catalog_export_cache_status_lov

    @channel_catalog_export_cache_status_lov.setter
    def channel_catalog_export_cache_status_lov(self, channel_catalog_export_cache_status_lov):
        """Sets the channel_catalog_export_cache_status_lov of this ChannelCatalogListLovLinks.


        :param channel_catalog_export_cache_status_lov: The channel_catalog_export_cache_status_lov of this ChannelCatalogListLovLinks.
        :type channel_catalog_export_cache_status_lov: BeezUPCommonLOVLink3
        """

        self._channel_catalog_export_cache_status_lov = channel_catalog_export_cache_status_lov
