# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChannelInfoDetails(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, business_model: str=None, category: str=None, channel_type: str=None, costs: str=None, home_url: str=None, subscription_link: str=None, tracking_type: str=None):
        """ChannelInfoDetails - a model defined in OpenAPI

        :param business_model: The business_model of this ChannelInfoDetails.
        :param category: The category of this ChannelInfoDetails.
        :param channel_type: The channel_type of this ChannelInfoDetails.
        :param costs: The costs of this ChannelInfoDetails.
        :param home_url: The home_url of this ChannelInfoDetails.
        :param subscription_link: The subscription_link of this ChannelInfoDetails.
        :param tracking_type: The tracking_type of this ChannelInfoDetails.
        """
        self.openapi_types = {
            'business_model': str,
            'category': str,
            'channel_type': str,
            'costs': str,
            'home_url': str,
            'subscription_link': str,
            'tracking_type': str
        }

        self.attribute_map = {
            'business_model': 'businessModel',
            'category': 'category',
            'channel_type': 'channelType',
            'costs': 'costs',
            'home_url': 'homeUrl',
            'subscription_link': 'subscriptionLink',
            'tracking_type': 'trackingType'
        }

        self._business_model = business_model
        self._category = category
        self._channel_type = channel_type
        self._costs = costs
        self._home_url = home_url
        self._subscription_link = subscription_link
        self._tracking_type = tracking_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChannelInfoDetails':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The channelInfo_details of this ChannelInfoDetails.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def business_model(self):
        """Gets the business_model of this ChannelInfoDetails.

        The business model of the channel

        :return: The business_model of this ChannelInfoDetails.
        :rtype: str
        """
        return self._business_model

    @business_model.setter
    def business_model(self, business_model):
        """Sets the business_model of this ChannelInfoDetails.

        The business model of the channel

        :param business_model: The business_model of this ChannelInfoDetails.
        :type business_model: str
        """

        self._business_model = business_model

    @property
    def category(self):
        """Gets the category of this ChannelInfoDetails.

        The channel category

        :return: The category of this ChannelInfoDetails.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this ChannelInfoDetails.

        The channel category

        :param category: The category of this ChannelInfoDetails.
        :type category: str
        """

        self._category = category

    @property
    def channel_type(self):
        """Gets the channel_type of this ChannelInfoDetails.

        The channel type

        :return: The channel_type of this ChannelInfoDetails.
        :rtype: str
        """
        return self._channel_type

    @channel_type.setter
    def channel_type(self, channel_type):
        """Sets the channel_type of this ChannelInfoDetails.

        The channel type

        :param channel_type: The channel_type of this ChannelInfoDetails.
        :type channel_type: str
        """

        self._channel_type = channel_type

    @property
    def costs(self):
        """Gets the costs of this ChannelInfoDetails.

        The cost's description of the channel

        :return: The costs of this ChannelInfoDetails.
        :rtype: str
        """
        return self._costs

    @costs.setter
    def costs(self, costs):
        """Sets the costs of this ChannelInfoDetails.

        The cost's description of the channel

        :param costs: The costs of this ChannelInfoDetails.
        :type costs: str
        """

        self._costs = costs

    @property
    def home_url(self):
        """Gets the home_url of this ChannelInfoDetails.

        The home url of the channel

        :return: The home_url of this ChannelInfoDetails.
        :rtype: str
        """
        return self._home_url

    @home_url.setter
    def home_url(self, home_url):
        """Sets the home_url of this ChannelInfoDetails.

        The home url of the channel

        :param home_url: The home_url of this ChannelInfoDetails.
        :type home_url: str
        """

        self._home_url = home_url

    @property
    def subscription_link(self):
        """Gets the subscription_link of this ChannelInfoDetails.

        The subscription link to the channel

        :return: The subscription_link of this ChannelInfoDetails.
        :rtype: str
        """
        return self._subscription_link

    @subscription_link.setter
    def subscription_link(self, subscription_link):
        """Sets the subscription_link of this ChannelInfoDetails.

        The subscription link to the channel

        :param subscription_link: The subscription_link of this ChannelInfoDetails.
        :type subscription_link: str
        """

        self._subscription_link = subscription_link

    @property
    def tracking_type(self):
        """Gets the tracking_type of this ChannelInfoDetails.

        The tracking type

        :return: The tracking_type of this ChannelInfoDetails.
        :rtype: str
        """
        return self._tracking_type

    @tracking_type.setter
    def tracking_type(self, tracking_type):
        """Sets the tracking_type of this ChannelInfoDetails.

        The tracking type

        :param tracking_type: The tracking_type of this ChannelInfoDetails.
        :type tracking_type: str
        """

        self._tracking_type = tracking_type
