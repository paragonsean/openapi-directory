# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.order_exportation_reporting_processing_status import OrderExportationReportingProcessingStatus
from openapi_server.models.source_type import SourceType
from openapi_server import util


class OrderExportationReporting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, abortion_utc_date: datetime=None, begin_utc_date: datetime=None, blob_name_uri: str=None, end_utc_date: datetime=None, enqueued_utc_date: datetime=None, error_message: str=None, execution_uuid: str=None, expiration_utc_date: datetime=None, failure_utc_date: datetime=None, ip_address: str=None, json_criteria: str=None, last_update_utc_date: datetime=None, order_count: int=None, processing_status: OrderExportationReportingProcessingStatus=None, remaining_order_count: int=None, resumed_utc_date: datetime=None, source_type: SourceType=None, source_user_id: str=None, source_user_name: str=None, suspended_utc_date: datetime=None, timeout_duration: str=None, warning_message: str=None):
        """OrderExportationReporting - a model defined in OpenAPI

        :param abortion_utc_date: The abortion_utc_date of this OrderExportationReporting.
        :param begin_utc_date: The begin_utc_date of this OrderExportationReporting.
        :param blob_name_uri: The blob_name_uri of this OrderExportationReporting.
        :param end_utc_date: The end_utc_date of this OrderExportationReporting.
        :param enqueued_utc_date: The enqueued_utc_date of this OrderExportationReporting.
        :param error_message: The error_message of this OrderExportationReporting.
        :param execution_uuid: The execution_uuid of this OrderExportationReporting.
        :param expiration_utc_date: The expiration_utc_date of this OrderExportationReporting.
        :param failure_utc_date: The failure_utc_date of this OrderExportationReporting.
        :param ip_address: The ip_address of this OrderExportationReporting.
        :param json_criteria: The json_criteria of this OrderExportationReporting.
        :param last_update_utc_date: The last_update_utc_date of this OrderExportationReporting.
        :param order_count: The order_count of this OrderExportationReporting.
        :param processing_status: The processing_status of this OrderExportationReporting.
        :param remaining_order_count: The remaining_order_count of this OrderExportationReporting.
        :param resumed_utc_date: The resumed_utc_date of this OrderExportationReporting.
        :param source_type: The source_type of this OrderExportationReporting.
        :param source_user_id: The source_user_id of this OrderExportationReporting.
        :param source_user_name: The source_user_name of this OrderExportationReporting.
        :param suspended_utc_date: The suspended_utc_date of this OrderExportationReporting.
        :param timeout_duration: The timeout_duration of this OrderExportationReporting.
        :param warning_message: The warning_message of this OrderExportationReporting.
        """
        self.openapi_types = {
            'abortion_utc_date': datetime,
            'begin_utc_date': datetime,
            'blob_name_uri': str,
            'end_utc_date': datetime,
            'enqueued_utc_date': datetime,
            'error_message': str,
            'execution_uuid': str,
            'expiration_utc_date': datetime,
            'failure_utc_date': datetime,
            'ip_address': str,
            'json_criteria': str,
            'last_update_utc_date': datetime,
            'order_count': int,
            'processing_status': OrderExportationReportingProcessingStatus,
            'remaining_order_count': int,
            'resumed_utc_date': datetime,
            'source_type': SourceType,
            'source_user_id': str,
            'source_user_name': str,
            'suspended_utc_date': datetime,
            'timeout_duration': str,
            'warning_message': str
        }

        self.attribute_map = {
            'abortion_utc_date': 'abortionUtcDate',
            'begin_utc_date': 'beginUtcDate',
            'blob_name_uri': 'blobNameUri',
            'end_utc_date': 'endUtcDate',
            'enqueued_utc_date': 'enqueuedUtcDate',
            'error_message': 'errorMessage',
            'execution_uuid': 'executionUUID',
            'expiration_utc_date': 'expirationUtcDate',
            'failure_utc_date': 'failureUtcDate',
            'ip_address': 'ipAddress',
            'json_criteria': 'jsonCriteria',
            'last_update_utc_date': 'lastUpdateUtcDate',
            'order_count': 'orderCount',
            'processing_status': 'processingStatus',
            'remaining_order_count': 'remainingOrderCount',
            'resumed_utc_date': 'resumedUtcDate',
            'source_type': 'sourceType',
            'source_user_id': 'sourceUserId',
            'source_user_name': 'sourceUserName',
            'suspended_utc_date': 'suspendedUtcDate',
            'timeout_duration': 'timeoutDuration',
            'warning_message': 'warningMessage'
        }

        self._abortion_utc_date = abortion_utc_date
        self._begin_utc_date = begin_utc_date
        self._blob_name_uri = blob_name_uri
        self._end_utc_date = end_utc_date
        self._enqueued_utc_date = enqueued_utc_date
        self._error_message = error_message
        self._execution_uuid = execution_uuid
        self._expiration_utc_date = expiration_utc_date
        self._failure_utc_date = failure_utc_date
        self._ip_address = ip_address
        self._json_criteria = json_criteria
        self._last_update_utc_date = last_update_utc_date
        self._order_count = order_count
        self._processing_status = processing_status
        self._remaining_order_count = remaining_order_count
        self._resumed_utc_date = resumed_utc_date
        self._source_type = source_type
        self._source_user_id = source_user_id
        self._source_user_name = source_user_name
        self._suspended_utc_date = suspended_utc_date
        self._timeout_duration = timeout_duration
        self._warning_message = warning_message

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderExportationReporting':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The orderExportationReporting of this OrderExportationReporting.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def abortion_utc_date(self):
        """Gets the abortion_utc_date of this OrderExportationReporting.


        :return: The abortion_utc_date of this OrderExportationReporting.
        :rtype: datetime
        """
        return self._abortion_utc_date

    @abortion_utc_date.setter
    def abortion_utc_date(self, abortion_utc_date):
        """Sets the abortion_utc_date of this OrderExportationReporting.


        :param abortion_utc_date: The abortion_utc_date of this OrderExportationReporting.
        :type abortion_utc_date: datetime
        """

        self._abortion_utc_date = abortion_utc_date

    @property
    def begin_utc_date(self):
        """Gets the begin_utc_date of this OrderExportationReporting.


        :return: The begin_utc_date of this OrderExportationReporting.
        :rtype: datetime
        """
        return self._begin_utc_date

    @begin_utc_date.setter
    def begin_utc_date(self, begin_utc_date):
        """Sets the begin_utc_date of this OrderExportationReporting.


        :param begin_utc_date: The begin_utc_date of this OrderExportationReporting.
        :type begin_utc_date: datetime
        """

        self._begin_utc_date = begin_utc_date

    @property
    def blob_name_uri(self):
        """Gets the blob_name_uri of this OrderExportationReporting.


        :return: The blob_name_uri of this OrderExportationReporting.
        :rtype: str
        """
        return self._blob_name_uri

    @blob_name_uri.setter
    def blob_name_uri(self, blob_name_uri):
        """Sets the blob_name_uri of this OrderExportationReporting.


        :param blob_name_uri: The blob_name_uri of this OrderExportationReporting.
        :type blob_name_uri: str
        """

        self._blob_name_uri = blob_name_uri

    @property
    def end_utc_date(self):
        """Gets the end_utc_date of this OrderExportationReporting.


        :return: The end_utc_date of this OrderExportationReporting.
        :rtype: datetime
        """
        return self._end_utc_date

    @end_utc_date.setter
    def end_utc_date(self, end_utc_date):
        """Sets the end_utc_date of this OrderExportationReporting.


        :param end_utc_date: The end_utc_date of this OrderExportationReporting.
        :type end_utc_date: datetime
        """

        self._end_utc_date = end_utc_date

    @property
    def enqueued_utc_date(self):
        """Gets the enqueued_utc_date of this OrderExportationReporting.


        :return: The enqueued_utc_date of this OrderExportationReporting.
        :rtype: datetime
        """
        return self._enqueued_utc_date

    @enqueued_utc_date.setter
    def enqueued_utc_date(self, enqueued_utc_date):
        """Sets the enqueued_utc_date of this OrderExportationReporting.


        :param enqueued_utc_date: The enqueued_utc_date of this OrderExportationReporting.
        :type enqueued_utc_date: datetime
        """
        if enqueued_utc_date is None:
            raise ValueError("Invalid value for `enqueued_utc_date`, must not be `None`")

        self._enqueued_utc_date = enqueued_utc_date

    @property
    def error_message(self):
        """Gets the error_message of this OrderExportationReporting.


        :return: The error_message of this OrderExportationReporting.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this OrderExportationReporting.


        :param error_message: The error_message of this OrderExportationReporting.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def execution_uuid(self):
        """Gets the execution_uuid of this OrderExportationReporting.


        :return: The execution_uuid of this OrderExportationReporting.
        :rtype: str
        """
        return self._execution_uuid

    @execution_uuid.setter
    def execution_uuid(self, execution_uuid):
        """Sets the execution_uuid of this OrderExportationReporting.


        :param execution_uuid: The execution_uuid of this OrderExportationReporting.
        :type execution_uuid: str
        """
        if execution_uuid is None:
            raise ValueError("Invalid value for `execution_uuid`, must not be `None`")

        self._execution_uuid = execution_uuid

    @property
    def expiration_utc_date(self):
        """Gets the expiration_utc_date of this OrderExportationReporting.


        :return: The expiration_utc_date of this OrderExportationReporting.
        :rtype: datetime
        """
        return self._expiration_utc_date

    @expiration_utc_date.setter
    def expiration_utc_date(self, expiration_utc_date):
        """Sets the expiration_utc_date of this OrderExportationReporting.


        :param expiration_utc_date: The expiration_utc_date of this OrderExportationReporting.
        :type expiration_utc_date: datetime
        """

        self._expiration_utc_date = expiration_utc_date

    @property
    def failure_utc_date(self):
        """Gets the failure_utc_date of this OrderExportationReporting.


        :return: The failure_utc_date of this OrderExportationReporting.
        :rtype: datetime
        """
        return self._failure_utc_date

    @failure_utc_date.setter
    def failure_utc_date(self, failure_utc_date):
        """Sets the failure_utc_date of this OrderExportationReporting.


        :param failure_utc_date: The failure_utc_date of this OrderExportationReporting.
        :type failure_utc_date: datetime
        """

        self._failure_utc_date = failure_utc_date

    @property
    def ip_address(self):
        """Gets the ip_address of this OrderExportationReporting.


        :return: The ip_address of this OrderExportationReporting.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this OrderExportationReporting.


        :param ip_address: The ip_address of this OrderExportationReporting.
        :type ip_address: str
        """
        if ip_address is None:
            raise ValueError("Invalid value for `ip_address`, must not be `None`")

        self._ip_address = ip_address

    @property
    def json_criteria(self):
        """Gets the json_criteria of this OrderExportationReporting.

        Raw representation of the JSON

        :return: The json_criteria of this OrderExportationReporting.
        :rtype: str
        """
        return self._json_criteria

    @json_criteria.setter
    def json_criteria(self, json_criteria):
        """Sets the json_criteria of this OrderExportationReporting.

        Raw representation of the JSON

        :param json_criteria: The json_criteria of this OrderExportationReporting.
        :type json_criteria: str
        """

        self._json_criteria = json_criteria

    @property
    def last_update_utc_date(self):
        """Gets the last_update_utc_date of this OrderExportationReporting.


        :return: The last_update_utc_date of this OrderExportationReporting.
        :rtype: datetime
        """
        return self._last_update_utc_date

    @last_update_utc_date.setter
    def last_update_utc_date(self, last_update_utc_date):
        """Sets the last_update_utc_date of this OrderExportationReporting.


        :param last_update_utc_date: The last_update_utc_date of this OrderExportationReporting.
        :type last_update_utc_date: datetime
        """

        self._last_update_utc_date = last_update_utc_date

    @property
    def order_count(self):
        """Gets the order_count of this OrderExportationReporting.


        :return: The order_count of this OrderExportationReporting.
        :rtype: int
        """
        return self._order_count

    @order_count.setter
    def order_count(self, order_count):
        """Sets the order_count of this OrderExportationReporting.


        :param order_count: The order_count of this OrderExportationReporting.
        :type order_count: int
        """

        self._order_count = order_count

    @property
    def processing_status(self):
        """Gets the processing_status of this OrderExportationReporting.


        :return: The processing_status of this OrderExportationReporting.
        :rtype: OrderExportationReportingProcessingStatus
        """
        return self._processing_status

    @processing_status.setter
    def processing_status(self, processing_status):
        """Sets the processing_status of this OrderExportationReporting.


        :param processing_status: The processing_status of this OrderExportationReporting.
        :type processing_status: OrderExportationReportingProcessingStatus
        """
        if processing_status is None:
            raise ValueError("Invalid value for `processing_status`, must not be `None`")

        self._processing_status = processing_status

    @property
    def remaining_order_count(self):
        """Gets the remaining_order_count of this OrderExportationReporting.


        :return: The remaining_order_count of this OrderExportationReporting.
        :rtype: int
        """
        return self._remaining_order_count

    @remaining_order_count.setter
    def remaining_order_count(self, remaining_order_count):
        """Sets the remaining_order_count of this OrderExportationReporting.


        :param remaining_order_count: The remaining_order_count of this OrderExportationReporting.
        :type remaining_order_count: int
        """

        self._remaining_order_count = remaining_order_count

    @property
    def resumed_utc_date(self):
        """Gets the resumed_utc_date of this OrderExportationReporting.


        :return: The resumed_utc_date of this OrderExportationReporting.
        :rtype: datetime
        """
        return self._resumed_utc_date

    @resumed_utc_date.setter
    def resumed_utc_date(self, resumed_utc_date):
        """Sets the resumed_utc_date of this OrderExportationReporting.


        :param resumed_utc_date: The resumed_utc_date of this OrderExportationReporting.
        :type resumed_utc_date: datetime
        """

        self._resumed_utc_date = resumed_utc_date

    @property
    def source_type(self):
        """Gets the source_type of this OrderExportationReporting.


        :return: The source_type of this OrderExportationReporting.
        :rtype: SourceType
        """
        return self._source_type

    @source_type.setter
    def source_type(self, source_type):
        """Sets the source_type of this OrderExportationReporting.


        :param source_type: The source_type of this OrderExportationReporting.
        :type source_type: SourceType
        """
        if source_type is None:
            raise ValueError("Invalid value for `source_type`, must not be `None`")

        self._source_type = source_type

    @property
    def source_user_id(self):
        """Gets the source_user_id of this OrderExportationReporting.

        The user identifier

        :return: The source_user_id of this OrderExportationReporting.
        :rtype: str
        """
        return self._source_user_id

    @source_user_id.setter
    def source_user_id(self, source_user_id):
        """Sets the source_user_id of this OrderExportationReporting.

        The user identifier

        :param source_user_id: The source_user_id of this OrderExportationReporting.
        :type source_user_id: str
        """

        self._source_user_id = source_user_id

    @property
    def source_user_name(self):
        """Gets the source_user_name of this OrderExportationReporting.


        :return: The source_user_name of this OrderExportationReporting.
        :rtype: str
        """
        return self._source_user_name

    @source_user_name.setter
    def source_user_name(self, source_user_name):
        """Sets the source_user_name of this OrderExportationReporting.


        :param source_user_name: The source_user_name of this OrderExportationReporting.
        :type source_user_name: str
        """
        if source_user_name is None:
            raise ValueError("Invalid value for `source_user_name`, must not be `None`")

        self._source_user_name = source_user_name

    @property
    def suspended_utc_date(self):
        """Gets the suspended_utc_date of this OrderExportationReporting.


        :return: The suspended_utc_date of this OrderExportationReporting.
        :rtype: datetime
        """
        return self._suspended_utc_date

    @suspended_utc_date.setter
    def suspended_utc_date(self, suspended_utc_date):
        """Sets the suspended_utc_date of this OrderExportationReporting.


        :param suspended_utc_date: The suspended_utc_date of this OrderExportationReporting.
        :type suspended_utc_date: datetime
        """

        self._suspended_utc_date = suspended_utc_date

    @property
    def timeout_duration(self):
        """Gets the timeout_duration of this OrderExportationReporting.


        :return: The timeout_duration of this OrderExportationReporting.
        :rtype: str
        """
        return self._timeout_duration

    @timeout_duration.setter
    def timeout_duration(self, timeout_duration):
        """Sets the timeout_duration of this OrderExportationReporting.


        :param timeout_duration: The timeout_duration of this OrderExportationReporting.
        :type timeout_duration: str
        """

        self._timeout_duration = timeout_duration

    @property
    def warning_message(self):
        """Gets the warning_message of this OrderExportationReporting.


        :return: The warning_message of this OrderExportationReporting.
        :rtype: str
        """
        return self._warning_message

    @warning_message.setter
    def warning_message(self, warning_message):
        """Sets the warning_message of this OrderExportationReporting.


        :param warning_message: The warning_message of this OrderExportationReporting.
        :type warning_message: str
        """

        self._warning_message = warning_message
