# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.beez_up_common_pagination_result import BeezUPCommonPaginationResult
from openapi_server.models.report_by_category import ReportByCategory
from openapi_server.models.report_by_category_response_links import ReportByCategoryResponseLinks
from openapi_server import util


class ReportByCategoryResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, categories: List[ReportByCategory]=None, currency_code: str=None, links: ReportByCategoryResponseLinks=None, pagination_result: BeezUPCommonPaginationResult=None):
        """ReportByCategoryResponse - a model defined in OpenAPI

        :param categories: The categories of this ReportByCategoryResponse.
        :param currency_code: The currency_code of this ReportByCategoryResponse.
        :param links: The links of this ReportByCategoryResponse.
        :param pagination_result: The pagination_result of this ReportByCategoryResponse.
        """
        self.openapi_types = {
            'categories': List[ReportByCategory],
            'currency_code': str,
            'links': ReportByCategoryResponseLinks,
            'pagination_result': BeezUPCommonPaginationResult
        }

        self.attribute_map = {
            'categories': 'categories',
            'currency_code': 'currencyCode',
            'links': 'links',
            'pagination_result': 'paginationResult'
        }

        self._categories = categories
        self._currency_code = currency_code
        self._links = links
        self._pagination_result = pagination_result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportByCategoryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The reportByCategoryResponse of this ReportByCategoryResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def categories(self):
        """Gets the categories of this ReportByCategoryResponse.


        :return: The categories of this ReportByCategoryResponse.
        :rtype: List[ReportByCategory]
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this ReportByCategoryResponse.


        :param categories: The categories of this ReportByCategoryResponse.
        :type categories: List[ReportByCategory]
        """

        self._categories = categories

    @property
    def currency_code(self):
        """Gets the currency_code of this ReportByCategoryResponse.

        The currency code <a href=\"https://en.wikipedia.org/wiki/ISO_4217\">(ISO 4217)</a> 

        :return: The currency_code of this ReportByCategoryResponse.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this ReportByCategoryResponse.

        The currency code <a href=\"https://en.wikipedia.org/wiki/ISO_4217\">(ISO 4217)</a> 

        :param currency_code: The currency_code of this ReportByCategoryResponse.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def links(self):
        """Gets the links of this ReportByCategoryResponse.


        :return: The links of this ReportByCategoryResponse.
        :rtype: ReportByCategoryResponseLinks
        """
        return self._links

    @links.setter
    def links(self, links):
        """Sets the links of this ReportByCategoryResponse.


        :param links: The links of this ReportByCategoryResponse.
        :type links: ReportByCategoryResponseLinks
        """

        self._links = links

    @property
    def pagination_result(self):
        """Gets the pagination_result of this ReportByCategoryResponse.


        :return: The pagination_result of this ReportByCategoryResponse.
        :rtype: BeezUPCommonPaginationResult
        """
        return self._pagination_result

    @pagination_result.setter
    def pagination_result(self, pagination_result):
        """Sets the pagination_result of this ReportByCategoryResponse.


        :param pagination_result: The pagination_result of this ReportByCategoryResponse.
        :type pagination_result: BeezUPCommonPaginationResult
        """

        self._pagination_result = pagination_result
