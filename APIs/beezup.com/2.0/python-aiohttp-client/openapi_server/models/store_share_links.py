# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.links_delete_store_share_link import LinksDeleteStoreShareLink
from openapi_server import util


class StoreShareLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delete_share: LinksDeleteStoreShareLink=None):
        """StoreShareLinks - a model defined in OpenAPI

        :param delete_share: The delete_share of this StoreShareLinks.
        """
        self.openapi_types = {
            'delete_share': LinksDeleteStoreShareLink
        }

        self.attribute_map = {
            'delete_share': 'deleteShare'
        }

        self._delete_share = delete_share

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StoreShareLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The storeShareLinks of this StoreShareLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delete_share(self):
        """Gets the delete_share of this StoreShareLinks.


        :return: The delete_share of this StoreShareLinks.
        :rtype: LinksDeleteStoreShareLink
        """
        return self._delete_share

    @delete_share.setter
    def delete_share(self, delete_share):
        """Sets the delete_share of this StoreShareLinks.


        :param delete_share: The delete_share of this StoreShareLinks.
        :type delete_share: LinksDeleteStoreShareLink
        """

        self._delete_share = delete_share
