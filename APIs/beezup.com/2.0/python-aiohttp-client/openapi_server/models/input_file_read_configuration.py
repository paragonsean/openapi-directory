# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.file_format_strategy import FileFormatStrategy
from openapi_server.models.input_file_read_csv_configuration import InputFileReadCsvConfiguration
from openapi_server.models.input_file_read_xml_configuration import InputFileReadXmlConfiguration
from openapi_server import util


class InputFileReadConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, csv_file_read_properties: InputFileReadCsvConfiguration=None, culture_name: str='', encoding_type_name: str='UTF-8', format: FileFormatStrategy=None, xml_file_read_properties: InputFileReadXmlConfiguration=None):
        """InputFileReadConfiguration - a model defined in OpenAPI

        :param csv_file_read_properties: The csv_file_read_properties of this InputFileReadConfiguration.
        :param culture_name: The culture_name of this InputFileReadConfiguration.
        :param encoding_type_name: The encoding_type_name of this InputFileReadConfiguration.
        :param format: The format of this InputFileReadConfiguration.
        :param xml_file_read_properties: The xml_file_read_properties of this InputFileReadConfiguration.
        """
        self.openapi_types = {
            'csv_file_read_properties': InputFileReadCsvConfiguration,
            'culture_name': str,
            'encoding_type_name': str,
            'format': FileFormatStrategy,
            'xml_file_read_properties': InputFileReadXmlConfiguration
        }

        self.attribute_map = {
            'csv_file_read_properties': 'csvFileReadProperties',
            'culture_name': 'cultureName',
            'encoding_type_name': 'encodingTypeName',
            'format': 'format',
            'xml_file_read_properties': 'xmlFileReadProperties'
        }

        self._csv_file_read_properties = csv_file_read_properties
        self._culture_name = culture_name
        self._encoding_type_name = encoding_type_name
        self._format = format
        self._xml_file_read_properties = xml_file_read_properties

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InputFileReadConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The inputFileReadConfiguration of this InputFileReadConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def csv_file_read_properties(self):
        """Gets the csv_file_read_properties of this InputFileReadConfiguration.


        :return: The csv_file_read_properties of this InputFileReadConfiguration.
        :rtype: InputFileReadCsvConfiguration
        """
        return self._csv_file_read_properties

    @csv_file_read_properties.setter
    def csv_file_read_properties(self, csv_file_read_properties):
        """Sets the csv_file_read_properties of this InputFileReadConfiguration.


        :param csv_file_read_properties: The csv_file_read_properties of this InputFileReadConfiguration.
        :type csv_file_read_properties: InputFileReadCsvConfiguration
        """

        self._csv_file_read_properties = csv_file_read_properties

    @property
    def culture_name(self):
        """Gets the culture_name of this InputFileReadConfiguration.

        The culture name of the file.  (i.e. fr-FR). If null then Invariant culture will be used.

        :return: The culture_name of this InputFileReadConfiguration.
        :rtype: str
        """
        return self._culture_name

    @culture_name.setter
    def culture_name(self, culture_name):
        """Sets the culture_name of this InputFileReadConfiguration.

        The culture name of the file.  (i.e. fr-FR). If null then Invariant culture will be used.

        :param culture_name: The culture_name of this InputFileReadConfiguration.
        :type culture_name: str
        """

        self._culture_name = culture_name

    @property
    def encoding_type_name(self):
        """Gets the encoding_type_name of this InputFileReadConfiguration.

        The encoding type. UTF-8 by default.

        :return: The encoding_type_name of this InputFileReadConfiguration.
        :rtype: str
        """
        return self._encoding_type_name

    @encoding_type_name.setter
    def encoding_type_name(self, encoding_type_name):
        """Sets the encoding_type_name of this InputFileReadConfiguration.

        The encoding type. UTF-8 by default.

        :param encoding_type_name: The encoding_type_name of this InputFileReadConfiguration.
        :type encoding_type_name: str
        """

        self._encoding_type_name = encoding_type_name

    @property
    def format(self):
        """Gets the format of this InputFileReadConfiguration.


        :return: The format of this InputFileReadConfiguration.
        :rtype: FileFormatStrategy
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this InputFileReadConfiguration.


        :param format: The format of this InputFileReadConfiguration.
        :type format: FileFormatStrategy
        """
        if format is None:
            raise ValueError("Invalid value for `format`, must not be `None`")

        self._format = format

    @property
    def xml_file_read_properties(self):
        """Gets the xml_file_read_properties of this InputFileReadConfiguration.


        :return: The xml_file_read_properties of this InputFileReadConfiguration.
        :rtype: InputFileReadXmlConfiguration
        """
        return self._xml_file_read_properties

    @xml_file_read_properties.setter
    def xml_file_read_properties(self, xml_file_read_properties):
        """Sets the xml_file_read_properties of this InputFileReadConfiguration.


        :param xml_file_read_properties: The xml_file_read_properties of this InputFileReadConfiguration.
        :type xml_file_read_properties: InputFileReadXmlConfiguration
        """

        self._xml_file_read_properties = xml_file_read_properties
