# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PreviewOrderInvoiceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, invoice_html_content: str=None):
        """PreviewOrderInvoiceResponse - a model defined in OpenAPI

        :param invoice_html_content: The invoice_html_content of this PreviewOrderInvoiceResponse.
        """
        self.openapi_types = {
            'invoice_html_content': str
        }

        self.attribute_map = {
            'invoice_html_content': 'invoiceHtmlContent'
        }

        self._invoice_html_content = invoice_html_content

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PreviewOrderInvoiceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The previewOrderInvoiceResponse of this PreviewOrderInvoiceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invoice_html_content(self):
        """Gets the invoice_html_content of this PreviewOrderInvoiceResponse.

        Invoice Content HTML

        :return: The invoice_html_content of this PreviewOrderInvoiceResponse.
        :rtype: str
        """
        return self._invoice_html_content

    @invoice_html_content.setter
    def invoice_html_content(self, invoice_html_content):
        """Sets the invoice_html_content of this PreviewOrderInvoiceResponse.

        Invoice Content HTML

        :param invoice_html_content: The invoice_html_content of this PreviewOrderInvoiceResponse.
        :type invoice_html_content: str
        """
        if invoice_html_content is None:
            raise ValueError("Invalid value for `invoice_html_content`, must not be `None`")

        self._invoice_html_content = invoice_html_content
