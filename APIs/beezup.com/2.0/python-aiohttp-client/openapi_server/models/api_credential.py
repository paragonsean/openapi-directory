# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ApiCredential(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, primary_token: str=None, product_name: str=None, secondary_token: str=None):
        """ApiCredential - a model defined in OpenAPI

        :param primary_token: The primary_token of this ApiCredential.
        :param product_name: The product_name of this ApiCredential.
        :param secondary_token: The secondary_token of this ApiCredential.
        """
        self.openapi_types = {
            'primary_token': str,
            'product_name': str,
            'secondary_token': str
        }

        self.attribute_map = {
            'primary_token': 'primaryToken',
            'product_name': 'productName',
            'secondary_token': 'secondaryToken'
        }

        self._primary_token = primary_token
        self._product_name = product_name
        self._secondary_token = secondary_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiCredential':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The apiCredential of this ApiCredential.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def primary_token(self):
        """Gets the primary_token of this ApiCredential.

        The primary token to be used in the next call in the user scope API

        :return: The primary_token of this ApiCredential.
        :rtype: str
        """
        return self._primary_token

    @primary_token.setter
    def primary_token(self, primary_token):
        """Sets the primary_token of this ApiCredential.

        The primary token to be used in the next call in the user scope API

        :param primary_token: The primary_token of this ApiCredential.
        :type primary_token: str
        """

        self._primary_token = primary_token

    @property
    def product_name(self):
        """Gets the product_name of this ApiCredential.

        The product name related to this credential

        :return: The product_name of this ApiCredential.
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """Sets the product_name of this ApiCredential.

        The product name related to this credential

        :param product_name: The product_name of this ApiCredential.
        :type product_name: str
        """

        self._product_name = product_name

    @property
    def secondary_token(self):
        """Gets the secondary_token of this ApiCredential.

        The secondary token. Could be usefull if you want to share your access with someone else.

        :return: The secondary_token of this ApiCredential.
        :rtype: str
        """
        return self._secondary_token

    @secondary_token.setter
    def secondary_token(self, secondary_token):
        """Sets the secondary_token of this ApiCredential.

        The secondary token. Could be usefull if you want to share your access with someone else.

        :param secondary_token: The secondary_token of this ApiCredential.
        :type secondary_token: str
        """

        self._secondary_token = secondary_token
