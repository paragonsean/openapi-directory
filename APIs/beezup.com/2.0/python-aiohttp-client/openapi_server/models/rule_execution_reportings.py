# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.beez_up_common_pagination_result import BeezUPCommonPaginationResult
from openapi_server.models.rule_execution_reporting import RuleExecutionReporting
from openapi_server import util


class RuleExecutionReportings(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, executions: List[RuleExecutionReporting]=None, pagination_result: BeezUPCommonPaginationResult=None):
        """RuleExecutionReportings - a model defined in OpenAPI

        :param executions: The executions of this RuleExecutionReportings.
        :param pagination_result: The pagination_result of this RuleExecutionReportings.
        """
        self.openapi_types = {
            'executions': List[RuleExecutionReporting],
            'pagination_result': BeezUPCommonPaginationResult
        }

        self.attribute_map = {
            'executions': 'executions',
            'pagination_result': 'paginationResult'
        }

        self._executions = executions
        self._pagination_result = pagination_result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RuleExecutionReportings':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ruleExecutionReportings of this RuleExecutionReportings.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def executions(self):
        """Gets the executions of this RuleExecutionReportings.

        The rules executions history

        :return: The executions of this RuleExecutionReportings.
        :rtype: List[RuleExecutionReporting]
        """
        return self._executions

    @executions.setter
    def executions(self, executions):
        """Sets the executions of this RuleExecutionReportings.

        The rules executions history

        :param executions: The executions of this RuleExecutionReportings.
        :type executions: List[RuleExecutionReporting]
        """

        self._executions = executions

    @property
    def pagination_result(self):
        """Gets the pagination_result of this RuleExecutionReportings.


        :return: The pagination_result of this RuleExecutionReportings.
        :rtype: BeezUPCommonPaginationResult
        """
        return self._pagination_result

    @pagination_result.setter
    def pagination_result(self, pagination_result):
        """Sets the pagination_result of this RuleExecutionReportings.


        :param pagination_result: The pagination_result of this RuleExecutionReportings.
        :type pagination_result: BeezUPCommonPaginationResult
        """

        self._pagination_result = pagination_result
