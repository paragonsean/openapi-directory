# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.source_type import SourceType
from openapi_server import util


class ChangeOrderReporting(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, change_order_type: str=None, creation_utc_date: datetime=None, details: Dict[str, object]=None, error_message: str=None, execution_uuid: str=None, ip_address: str=None, last_update_utc_date: datetime=None, processing_status: str=None, source_type: SourceType=None, source_user_id: str=None, source_user_name: str=None, test_mode: bool=None):
        """ChangeOrderReporting - a model defined in OpenAPI

        :param change_order_type: The change_order_type of this ChangeOrderReporting.
        :param creation_utc_date: The creation_utc_date of this ChangeOrderReporting.
        :param details: The details of this ChangeOrderReporting.
        :param error_message: The error_message of this ChangeOrderReporting.
        :param execution_uuid: The execution_uuid of this ChangeOrderReporting.
        :param ip_address: The ip_address of this ChangeOrderReporting.
        :param last_update_utc_date: The last_update_utc_date of this ChangeOrderReporting.
        :param processing_status: The processing_status of this ChangeOrderReporting.
        :param source_type: The source_type of this ChangeOrderReporting.
        :param source_user_id: The source_user_id of this ChangeOrderReporting.
        :param source_user_name: The source_user_name of this ChangeOrderReporting.
        :param test_mode: The test_mode of this ChangeOrderReporting.
        """
        self.openapi_types = {
            'change_order_type': str,
            'creation_utc_date': datetime,
            'details': Dict[str, object],
            'error_message': str,
            'execution_uuid': str,
            'ip_address': str,
            'last_update_utc_date': datetime,
            'processing_status': str,
            'source_type': SourceType,
            'source_user_id': str,
            'source_user_name': str,
            'test_mode': bool
        }

        self.attribute_map = {
            'change_order_type': 'changeOrderType',
            'creation_utc_date': 'creationUtcDate',
            'details': 'details',
            'error_message': 'errorMessage',
            'execution_uuid': 'executionUUID',
            'ip_address': 'ipAddress',
            'last_update_utc_date': 'lastUpdateUtcDate',
            'processing_status': 'processingStatus',
            'source_type': 'sourceType',
            'source_user_id': 'sourceUserId',
            'source_user_name': 'sourceUserName',
            'test_mode': 'testMode'
        }

        self._change_order_type = change_order_type
        self._creation_utc_date = creation_utc_date
        self._details = details
        self._error_message = error_message
        self._execution_uuid = execution_uuid
        self._ip_address = ip_address
        self._last_update_utc_date = last_update_utc_date
        self._processing_status = processing_status
        self._source_type = source_type
        self._source_user_id = source_user_id
        self._source_user_name = source_user_name
        self._test_mode = test_mode

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChangeOrderReporting':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The changeOrderReporting of this ChangeOrderReporting.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def change_order_type(self):
        """Gets the change_order_type of this ChangeOrderReporting.


        :return: The change_order_type of this ChangeOrderReporting.
        :rtype: str
        """
        return self._change_order_type

    @change_order_type.setter
    def change_order_type(self, change_order_type):
        """Sets the change_order_type of this ChangeOrderReporting.


        :param change_order_type: The change_order_type of this ChangeOrderReporting.
        :type change_order_type: str
        """

        self._change_order_type = change_order_type

    @property
    def creation_utc_date(self):
        """Gets the creation_utc_date of this ChangeOrderReporting.

        The creation UTC date of the execution

        :return: The creation_utc_date of this ChangeOrderReporting.
        :rtype: datetime
        """
        return self._creation_utc_date

    @creation_utc_date.setter
    def creation_utc_date(self, creation_utc_date):
        """Sets the creation_utc_date of this ChangeOrderReporting.

        The creation UTC date of the execution

        :param creation_utc_date: The creation_utc_date of this ChangeOrderReporting.
        :type creation_utc_date: datetime
        """

        self._creation_utc_date = creation_utc_date

    @property
    def details(self):
        """Gets the details of this ChangeOrderReporting.


        :return: The details of this ChangeOrderReporting.
        :rtype: Dict[str, object]
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this ChangeOrderReporting.


        :param details: The details of this ChangeOrderReporting.
        :type details: Dict[str, object]
        """

        self._details = details

    @property
    def error_message(self):
        """Gets the error_message of this ChangeOrderReporting.

        The error message during the execution

        :return: The error_message of this ChangeOrderReporting.
        :rtype: str
        """
        return self._error_message

    @error_message.setter
    def error_message(self, error_message):
        """Sets the error_message of this ChangeOrderReporting.

        The error message during the execution

        :param error_message: The error_message of this ChangeOrderReporting.
        :type error_message: str
        """

        self._error_message = error_message

    @property
    def execution_uuid(self):
        """Gets the execution_uuid of this ChangeOrderReporting.

        The execution identifier

        :return: The execution_uuid of this ChangeOrderReporting.
        :rtype: str
        """
        return self._execution_uuid

    @execution_uuid.setter
    def execution_uuid(self, execution_uuid):
        """Sets the execution_uuid of this ChangeOrderReporting.

        The execution identifier

        :param execution_uuid: The execution_uuid of this ChangeOrderReporting.
        :type execution_uuid: str
        """

        self._execution_uuid = execution_uuid

    @property
    def ip_address(self):
        """Gets the ip_address of this ChangeOrderReporting.

        The IP address who request this operation

        :return: The ip_address of this ChangeOrderReporting.
        :rtype: str
        """
        return self._ip_address

    @ip_address.setter
    def ip_address(self, ip_address):
        """Sets the ip_address of this ChangeOrderReporting.

        The IP address who request this operation

        :param ip_address: The ip_address of this ChangeOrderReporting.
        :type ip_address: str
        """

        self._ip_address = ip_address

    @property
    def last_update_utc_date(self):
        """Gets the last_update_utc_date of this ChangeOrderReporting.

        The last update UTC date of the execution

        :return: The last_update_utc_date of this ChangeOrderReporting.
        :rtype: datetime
        """
        return self._last_update_utc_date

    @last_update_utc_date.setter
    def last_update_utc_date(self, last_update_utc_date):
        """Sets the last_update_utc_date of this ChangeOrderReporting.

        The last update UTC date of the execution

        :param last_update_utc_date: The last_update_utc_date of this ChangeOrderReporting.
        :type last_update_utc_date: datetime
        """

        self._last_update_utc_date = last_update_utc_date

    @property
    def processing_status(self):
        """Gets the processing_status of this ChangeOrderReporting.

        The processing status of the execution

        :return: The processing_status of this ChangeOrderReporting.
        :rtype: str
        """
        return self._processing_status

    @processing_status.setter
    def processing_status(self, processing_status):
        """Sets the processing_status of this ChangeOrderReporting.

        The processing status of the execution

        :param processing_status: The processing_status of this ChangeOrderReporting.
        :type processing_status: str
        """

        self._processing_status = processing_status

    @property
    def source_type(self):
        """Gets the source_type of this ChangeOrderReporting.


        :return: The source_type of this ChangeOrderReporting.
        :rtype: SourceType
        """
        return self._source_type

    @source_type.setter
    def source_type(self, source_type):
        """Sets the source_type of this ChangeOrderReporting.


        :param source_type: The source_type of this ChangeOrderReporting.
        :type source_type: SourceType
        """

        self._source_type = source_type

    @property
    def source_user_id(self):
        """Gets the source_user_id of this ChangeOrderReporting.

        The user identifier

        :return: The source_user_id of this ChangeOrderReporting.
        :rtype: str
        """
        return self._source_user_id

    @source_user_id.setter
    def source_user_id(self, source_user_id):
        """Sets the source_user_id of this ChangeOrderReporting.

        The user identifier

        :param source_user_id: The source_user_id of this ChangeOrderReporting.
        :type source_user_id: str
        """

        self._source_user_id = source_user_id

    @property
    def source_user_name(self):
        """Gets the source_user_name of this ChangeOrderReporting.


        :return: The source_user_name of this ChangeOrderReporting.
        :rtype: str
        """
        return self._source_user_name

    @source_user_name.setter
    def source_user_name(self, source_user_name):
        """Sets the source_user_name of this ChangeOrderReporting.


        :param source_user_name: The source_user_name of this ChangeOrderReporting.
        :type source_user_name: str
        """

        self._source_user_name = source_user_name

    @property
    def test_mode(self):
        """Gets the test_mode of this ChangeOrderReporting.

        This operation was a test

        :return: The test_mode of this ChangeOrderReporting.
        :rtype: bool
        """
        return self._test_mode

    @test_mode.setter
    def test_mode(self, test_mode):
        """Sets the test_mode of this ChangeOrderReporting.

        This operation was a test

        :param test_mode: The test_mode of this ChangeOrderReporting.
        :type test_mode: bool
        """

        self._test_mode = test_mode
