/**
 * BeezUP Merchant API 
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: help@beezup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BeezUpMerchantApi);
  }
}(this, function(expect, BeezUpMerchantApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BeezUpMerchantApi.OrderWithLinks();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrderWithLinks', function() {
    it('should create an instance of OrderWithLinks', function() {
      // uncomment below and update the code to test OrderWithLinks
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be.a(BeezUpMerchantApi.OrderWithLinks);
    });

    it('should have the property accountId (base name: "accountId")', function() {
      // uncomment below and update the code to test the property accountId
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property beezUPOrderId (base name: "beezUPOrderId")', function() {
      // uncomment below and update the code to test the property beezUPOrderId
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property beezUPOrderUrl (base name: "beezUPOrderUrl")', function() {
      // uncomment below and update the code to test the property beezUPOrderUrl
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property etag (base name: "etag")', function() {
      // uncomment below and update the code to test the property etag
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property links (base name: "links")', function() {
      // uncomment below and update the code to test the property links
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceBusinessCode (base name: "marketplaceBusinessCode")', function() {
      // uncomment below and update the code to test the property marketplaceBusinessCode
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property marketplaceTechnicalCode (base name: "marketplaceTechnicalCode")', function() {
      // uncomment below and update the code to test the property marketplaceTechnicalCode
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderBuyerName (base name: "order_Buyer_Name")', function() {
      // uncomment below and update the code to test the property orderBuyerName
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderCurrencyCode (base name: "order_CurrencyCode")', function() {
      // uncomment below and update the code to test the property orderCurrencyCode
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderInvoiceNumber (base name: "order_Invoice_Number")', function() {
      // uncomment below and update the code to test the property orderInvoiceNumber
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderInvoiceUri (base name: "order_Invoice_Uri")', function() {
      // uncomment below and update the code to test the property orderInvoiceUri
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderLastModificationUtcDate (base name: "order_LastModificationUtcDate")', function() {
      // uncomment below and update the code to test the property orderLastModificationUtcDate
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderMarketplaceLastModificationUtcDate (base name: "order_MarketplaceLastModificationUtcDate")', function() {
      // uncomment below and update the code to test the property orderMarketplaceLastModificationUtcDate
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderMarketplaceOrderId (base name: "order_MarketplaceOrderId")', function() {
      // uncomment below and update the code to test the property orderMarketplaceOrderId
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderMerchantECommerceSoftwareName (base name: "order_MerchantECommerceSoftwareName")', function() {
      // uncomment below and update the code to test the property orderMerchantECommerceSoftwareName
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderMerchantECommerceSoftwareVersion (base name: "order_MerchantECommerceSoftwareVersion")', function() {
      // uncomment below and update the code to test the property orderMerchantECommerceSoftwareVersion
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderMerchantOrderId (base name: "order_MerchantOrderId")', function() {
      // uncomment below and update the code to test the property orderMerchantOrderId
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderPurchaseUtcDate (base name: "order_PurchaseUtcDate")', function() {
      // uncomment below and update the code to test the property orderPurchaseUtcDate
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderStatusBeezUPOrderStatus (base name: "order_Status_BeezUPOrderStatus")', function() {
      // uncomment below and update the code to test the property orderStatusBeezUPOrderStatus
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderStatusMarketplaceOrderStatus (base name: "order_Status_MarketplaceOrderStatus")', function() {
      // uncomment below and update the code to test the property orderStatusMarketplaceOrderStatus
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderTotalPrice (base name: "order_TotalPrice")', function() {
      // uncomment below and update the code to test the property orderTotalPrice
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property processing (base name: "processing")', function() {
      // uncomment below and update the code to test the property processing
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderItems (base name: "orderItems")', function() {
      // uncomment below and update the code to test the property orderItems
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderBuyerAddressCity (base name: "order_Buyer_AddressCity")', function() {
      // uncomment below and update the code to test the property orderBuyerAddressCity
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderBuyerAddressCountryIsoCodeAlpha2 (base name: "order_Buyer_AddressCountryIsoCodeAlpha2")', function() {
      // uncomment below and update the code to test the property orderBuyerAddressCountryIsoCodeAlpha2
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderBuyerAddressCountryName (base name: "order_Buyer_AddressCountryName")', function() {
      // uncomment below and update the code to test the property orderBuyerAddressCountryName
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderBuyerAddressLine1 (base name: "order_Buyer_AddressLine1")', function() {
      // uncomment below and update the code to test the property orderBuyerAddressLine1
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderBuyerAddressLine2 (base name: "order_Buyer_AddressLine2")', function() {
      // uncomment below and update the code to test the property orderBuyerAddressLine2
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderBuyerAddressLine3 (base name: "order_Buyer_AddressLine3")', function() {
      // uncomment below and update the code to test the property orderBuyerAddressLine3
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderBuyerAddressPostalCode (base name: "order_Buyer_AddressPostalCode")', function() {
      // uncomment below and update the code to test the property orderBuyerAddressPostalCode
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderBuyerAddressStateOrRegion (base name: "order_Buyer_AddressStateOrRegion")', function() {
      // uncomment below and update the code to test the property orderBuyerAddressStateOrRegion
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderBuyerCivility (base name: "order_Buyer_Civility")', function() {
      // uncomment below and update the code to test the property orderBuyerCivility
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderBuyerCompanyName (base name: "order_Buyer_CompanyName")', function() {
      // uncomment below and update the code to test the property orderBuyerCompanyName
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderBuyerEmail (base name: "order_Buyer_Email")', function() {
      // uncomment below and update the code to test the property orderBuyerEmail
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderBuyerFirstName (base name: "order_Buyer_FirstName")', function() {
      // uncomment below and update the code to test the property orderBuyerFirstName
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderBuyerIdentifier (base name: "order_Buyer_Identifier")', function() {
      // uncomment below and update the code to test the property orderBuyerIdentifier
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderBuyerLastName (base name: "order_Buyer_LastName")', function() {
      // uncomment below and update the code to test the property orderBuyerLastName
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderBuyerMobilePhone (base name: "order_Buyer_MobilePhone")', function() {
      // uncomment below and update the code to test the property orderBuyerMobilePhone
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderBuyerPhone (base name: "order_Buyer_Phone")', function() {
      // uncomment below and update the code to test the property orderBuyerPhone
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderComment (base name: "order_Comment")', function() {
      // uncomment below and update the code to test the property orderComment
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderFulfilledBy (base name: "order_FulfilledBy")', function() {
      // uncomment below and update the code to test the property orderFulfilledBy
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderIsBusiness (base name: "order_IsBusiness")', function() {
      // uncomment below and update the code to test the property orderIsBusiness
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderIsPrime (base name: "order_IsPrime")', function() {
      // uncomment below and update the code to test the property orderIsPrime
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderMarketPlaceChannel (base name: "order_MarketPlaceChannel")', function() {
      // uncomment below and update the code to test the property orderMarketPlaceChannel
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderOrderItemsSourceUri (base name: "order_OrderItemsSourceUri")', function() {
      // uncomment below and update the code to test the property orderOrderItemsSourceUri
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderOrderSourceUri (base name: "order_OrderSourceUri")', function() {
      // uncomment below and update the code to test the property orderOrderSourceUri
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderPayingUtcDate (base name: "order_PayingUtcDate")', function() {
      // uncomment below and update the code to test the property orderPayingUtcDate
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderPaymentMethod (base name: "order_PaymentMethod")', function() {
      // uncomment below and update the code to test the property orderPaymentMethod
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingAddressCity (base name: "order_Shipping_AddressCity")', function() {
      // uncomment below and update the code to test the property orderShippingAddressCity
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingAddressCountryIsoCodeAlpha2 (base name: "order_Shipping_AddressCountryIsoCodeAlpha2")', function() {
      // uncomment below and update the code to test the property orderShippingAddressCountryIsoCodeAlpha2
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingAddressCountryName (base name: "order_Shipping_AddressCountryName")', function() {
      // uncomment below and update the code to test the property orderShippingAddressCountryName
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingAddressLine1 (base name: "order_Shipping_AddressLine1")', function() {
      // uncomment below and update the code to test the property orderShippingAddressLine1
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingAddressLine2 (base name: "order_Shipping_AddressLine2")', function() {
      // uncomment below and update the code to test the property orderShippingAddressLine2
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingAddressLine3 (base name: "order_Shipping_AddressLine3")', function() {
      // uncomment below and update the code to test the property orderShippingAddressLine3
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingAddressName (base name: "order_Shipping_AddressName")', function() {
      // uncomment below and update the code to test the property orderShippingAddressName
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingAddressPostalCode (base name: "order_Shipping_AddressPostalCode")', function() {
      // uncomment below and update the code to test the property orderShippingAddressPostalCode
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingAddressStateOrRegion (base name: "order_Shipping_AddressStateOrRegion")', function() {
      // uncomment below and update the code to test the property orderShippingAddressStateOrRegion
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingCivility (base name: "order_Shipping_Civility")', function() {
      // uncomment below and update the code to test the property orderShippingCivility
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingCompanyName (base name: "order_Shipping_CompanyName")', function() {
      // uncomment below and update the code to test the property orderShippingCompanyName
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingEarliestShipUtcDate (base name: "order_Shipping_EarliestShipUtcDate")', function() {
      // uncomment below and update the code to test the property orderShippingEarliestShipUtcDate
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingEmail (base name: "order_Shipping_Email")', function() {
      // uncomment below and update the code to test the property orderShippingEmail
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingFirstName (base name: "order_Shipping_FirstName")', function() {
      // uncomment below and update the code to test the property orderShippingFirstName
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingLastName (base name: "order_Shipping_LastName")', function() {
      // uncomment below and update the code to test the property orderShippingLastName
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingLatestShipUtcDate (base name: "order_Shipping_LatestShipUtcDate")', function() {
      // uncomment below and update the code to test the property orderShippingLatestShipUtcDate
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingMethod (base name: "order_Shipping_Method")', function() {
      // uncomment below and update the code to test the property orderShippingMethod
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingMobilePhone (base name: "order_Shipping_MobilePhone")', function() {
      // uncomment below and update the code to test the property orderShippingMobilePhone
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingPhone (base name: "order_Shipping_Phone")', function() {
      // uncomment below and update the code to test the property orderShippingPhone
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingPrice (base name: "order_Shipping_Price")', function() {
      // uncomment below and update the code to test the property orderShippingPrice
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderShippingShippingTax (base name: "order_Shipping_ShippingTax")', function() {
      // uncomment below and update the code to test the property orderShippingShippingTax
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderTotalCommission (base name: "order_TotalCommission")', function() {
      // uncomment below and update the code to test the property orderTotalCommission
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property orderTotalTax (base name: "order_TotalTax")', function() {
      // uncomment below and update the code to test the property orderTotalTax
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

    it('should have the property transitionLinks (base name: "transitionLinks")', function() {
      // uncomment below and update the code to test the property transitionLinks
      //var instance = new BeezUpMerchantApi.OrderWithLinks();
      //expect(instance).to.be();
    });

  });

}));
