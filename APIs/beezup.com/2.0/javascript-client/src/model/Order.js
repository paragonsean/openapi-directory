/**
 * BeezUP Merchant API 
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: help@beezup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LinksChangeOrderLink from './LinksChangeOrderLink';
import OrderHeader from './OrderHeader';
import OrderItem from './OrderItem';
import OrderLinks from './OrderLinks';

/**
 * The Order model module.
 * @module model/Order
 * @version 2.0
 */
class Order {
    /**
     * Constructs a new <code>Order</code>.
     * @alias module:model/Order
     * @implements module:model/OrderHeader
     * @param accountId {Number} The marketplace account identifier in BeezUP. This account identifier is based on your api settings.
     * @param beezUPOrderId {String} The BeezUP Order identifier
     * @param etag {String} ETag value to identify the order.\\ This information is required for the operation GetOrder and ChangeOrder.\\ For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3 
     * @param links {module:model/OrderLinks} 
     * @param marketplaceBusinessCode {String} In an marketplace technical code like CDiscount you can have several marketplaces like GO SPORT, etc. We identify them by a business code.
     * @param marketplaceTechnicalCode {String} The technical code of the marketplace.
     * @param orderLastModificationUtcDate {Date} The last modification UTC date done by BeezUP of this order
     * @param orderMarketplaceLastModificationUtcDate {Date} The last modification UTC date done by the marketplace on this order
     * @param orderMarketplaceOrderId {String} The order marketplace identifier
     * @param orderPurchaseUtcDate {Date} The purchase date of this order
     * @param orderStatusBeezUPOrderStatus {String} BeezUP order status. Unified for all marketplaces.
     * @param processing {Boolean} If true, there is currently a harvest or an order change in progress. Otherwise false.
     * @param orderItems {Array.<module:model/OrderItem>} 
     * @param transitionLinks {Array.<module:model/LinksChangeOrderLink>} Contains the authorized change actions for an order
     */
    constructor(accountId, beezUPOrderId, etag, links, marketplaceBusinessCode, marketplaceTechnicalCode, orderLastModificationUtcDate, orderMarketplaceLastModificationUtcDate, orderMarketplaceOrderId, orderPurchaseUtcDate, orderStatusBeezUPOrderStatus, processing, orderItems, transitionLinks) { 
        OrderHeader.initialize(this, accountId, beezUPOrderId, etag, links, marketplaceBusinessCode, marketplaceTechnicalCode, orderLastModificationUtcDate, orderMarketplaceLastModificationUtcDate, orderMarketplaceOrderId, orderPurchaseUtcDate, orderStatusBeezUPOrderStatus, processing);
        Order.initialize(this, accountId, beezUPOrderId, etag, links, marketplaceBusinessCode, marketplaceTechnicalCode, orderLastModificationUtcDate, orderMarketplaceLastModificationUtcDate, orderMarketplaceOrderId, orderPurchaseUtcDate, orderStatusBeezUPOrderStatus, processing, orderItems, transitionLinks);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, accountId, beezUPOrderId, etag, links, marketplaceBusinessCode, marketplaceTechnicalCode, orderLastModificationUtcDate, orderMarketplaceLastModificationUtcDate, orderMarketplaceOrderId, orderPurchaseUtcDate, orderStatusBeezUPOrderStatus, processing, orderItems, transitionLinks) { 
        obj['accountId'] = accountId;
        obj['beezUPOrderId'] = beezUPOrderId;
        obj['etag'] = etag;
        obj['links'] = links;
        obj['marketplaceBusinessCode'] = marketplaceBusinessCode;
        obj['marketplaceTechnicalCode'] = marketplaceTechnicalCode;
        obj['order_LastModificationUtcDate'] = orderLastModificationUtcDate;
        obj['order_MarketplaceLastModificationUtcDate'] = orderMarketplaceLastModificationUtcDate;
        obj['order_MarketplaceOrderId'] = orderMarketplaceOrderId;
        obj['order_PurchaseUtcDate'] = orderPurchaseUtcDate;
        obj['order_Status_BeezUPOrderStatus'] = orderStatusBeezUPOrderStatus;
        obj['processing'] = processing;
        obj['orderItems'] = orderItems;
        obj['transitionLinks'] = transitionLinks;
    }

    /**
     * Constructs a <code>Order</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Order} obj Optional instance to populate.
     * @return {module:model/Order} The populated <code>Order</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Order();
            OrderHeader.constructFromObject(data, obj);

            if (data.hasOwnProperty('accountId')) {
                obj['accountId'] = ApiClient.convertToType(data['accountId'], 'Number');
            }
            if (data.hasOwnProperty('beezUPOrderId')) {
                obj['beezUPOrderId'] = ApiClient.convertToType(data['beezUPOrderId'], 'String');
            }
            if (data.hasOwnProperty('beezUPOrderUrl')) {
                obj['beezUPOrderUrl'] = ApiClient.convertToType(data['beezUPOrderUrl'], 'String');
            }
            if (data.hasOwnProperty('etag')) {
                obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = OrderLinks.constructFromObject(data['links']);
            }
            if (data.hasOwnProperty('marketplaceBusinessCode')) {
                obj['marketplaceBusinessCode'] = ApiClient.convertToType(data['marketplaceBusinessCode'], 'String');
            }
            if (data.hasOwnProperty('marketplaceTechnicalCode')) {
                obj['marketplaceTechnicalCode'] = ApiClient.convertToType(data['marketplaceTechnicalCode'], 'String');
            }
            if (data.hasOwnProperty('order_Buyer_Name')) {
                obj['order_Buyer_Name'] = ApiClient.convertToType(data['order_Buyer_Name'], 'String');
            }
            if (data.hasOwnProperty('order_CurrencyCode')) {
                obj['order_CurrencyCode'] = ApiClient.convertToType(data['order_CurrencyCode'], 'String');
            }
            if (data.hasOwnProperty('order_Invoice_Number')) {
                obj['order_Invoice_Number'] = ApiClient.convertToType(data['order_Invoice_Number'], 'String');
            }
            if (data.hasOwnProperty('order_Invoice_Uri')) {
                obj['order_Invoice_Uri'] = ApiClient.convertToType(data['order_Invoice_Uri'], 'String');
            }
            if (data.hasOwnProperty('order_LastModificationUtcDate')) {
                obj['order_LastModificationUtcDate'] = ApiClient.convertToType(data['order_LastModificationUtcDate'], 'Date');
            }
            if (data.hasOwnProperty('order_MarketplaceLastModificationUtcDate')) {
                obj['order_MarketplaceLastModificationUtcDate'] = ApiClient.convertToType(data['order_MarketplaceLastModificationUtcDate'], 'Date');
            }
            if (data.hasOwnProperty('order_MarketplaceOrderId')) {
                obj['order_MarketplaceOrderId'] = ApiClient.convertToType(data['order_MarketplaceOrderId'], 'String');
            }
            if (data.hasOwnProperty('order_MerchantECommerceSoftwareName')) {
                obj['order_MerchantECommerceSoftwareName'] = ApiClient.convertToType(data['order_MerchantECommerceSoftwareName'], 'String');
            }
            if (data.hasOwnProperty('order_MerchantECommerceSoftwareVersion')) {
                obj['order_MerchantECommerceSoftwareVersion'] = ApiClient.convertToType(data['order_MerchantECommerceSoftwareVersion'], 'String');
            }
            if (data.hasOwnProperty('order_MerchantOrderId')) {
                obj['order_MerchantOrderId'] = ApiClient.convertToType(data['order_MerchantOrderId'], 'String');
            }
            if (data.hasOwnProperty('order_PurchaseUtcDate')) {
                obj['order_PurchaseUtcDate'] = ApiClient.convertToType(data['order_PurchaseUtcDate'], 'Date');
            }
            if (data.hasOwnProperty('order_Status_BeezUPOrderStatus')) {
                obj['order_Status_BeezUPOrderStatus'] = ApiClient.convertToType(data['order_Status_BeezUPOrderStatus'], 'String');
            }
            if (data.hasOwnProperty('order_Status_MarketplaceOrderStatus')) {
                obj['order_Status_MarketplaceOrderStatus'] = ApiClient.convertToType(data['order_Status_MarketplaceOrderStatus'], 'String');
            }
            if (data.hasOwnProperty('order_TotalPrice')) {
                obj['order_TotalPrice'] = ApiClient.convertToType(data['order_TotalPrice'], 'Number');
            }
            if (data.hasOwnProperty('processing')) {
                obj['processing'] = ApiClient.convertToType(data['processing'], 'Boolean');
            }
            if (data.hasOwnProperty('orderItems')) {
                obj['orderItems'] = ApiClient.convertToType(data['orderItems'], [OrderItem]);
            }
            if (data.hasOwnProperty('order_Buyer_AddressCity')) {
                obj['order_Buyer_AddressCity'] = ApiClient.convertToType(data['order_Buyer_AddressCity'], 'String');
            }
            if (data.hasOwnProperty('order_Buyer_AddressCountryIsoCodeAlpha2')) {
                obj['order_Buyer_AddressCountryIsoCodeAlpha2'] = ApiClient.convertToType(data['order_Buyer_AddressCountryIsoCodeAlpha2'], 'String');
            }
            if (data.hasOwnProperty('order_Buyer_AddressCountryName')) {
                obj['order_Buyer_AddressCountryName'] = ApiClient.convertToType(data['order_Buyer_AddressCountryName'], 'String');
            }
            if (data.hasOwnProperty('order_Buyer_AddressLine1')) {
                obj['order_Buyer_AddressLine1'] = ApiClient.convertToType(data['order_Buyer_AddressLine1'], 'String');
            }
            if (data.hasOwnProperty('order_Buyer_AddressLine2')) {
                obj['order_Buyer_AddressLine2'] = ApiClient.convertToType(data['order_Buyer_AddressLine2'], 'String');
            }
            if (data.hasOwnProperty('order_Buyer_AddressLine3')) {
                obj['order_Buyer_AddressLine3'] = ApiClient.convertToType(data['order_Buyer_AddressLine3'], 'String');
            }
            if (data.hasOwnProperty('order_Buyer_AddressPostalCode')) {
                obj['order_Buyer_AddressPostalCode'] = ApiClient.convertToType(data['order_Buyer_AddressPostalCode'], 'String');
            }
            if (data.hasOwnProperty('order_Buyer_AddressStateOrRegion')) {
                obj['order_Buyer_AddressStateOrRegion'] = ApiClient.convertToType(data['order_Buyer_AddressStateOrRegion'], 'String');
            }
            if (data.hasOwnProperty('order_Buyer_Civility')) {
                obj['order_Buyer_Civility'] = ApiClient.convertToType(data['order_Buyer_Civility'], 'String');
            }
            if (data.hasOwnProperty('order_Buyer_CompanyName')) {
                obj['order_Buyer_CompanyName'] = ApiClient.convertToType(data['order_Buyer_CompanyName'], 'String');
            }
            if (data.hasOwnProperty('order_Buyer_Email')) {
                obj['order_Buyer_Email'] = ApiClient.convertToType(data['order_Buyer_Email'], 'String');
            }
            if (data.hasOwnProperty('order_Buyer_FirstName')) {
                obj['order_Buyer_FirstName'] = ApiClient.convertToType(data['order_Buyer_FirstName'], 'String');
            }
            if (data.hasOwnProperty('order_Buyer_Identifier')) {
                obj['order_Buyer_Identifier'] = ApiClient.convertToType(data['order_Buyer_Identifier'], 'String');
            }
            if (data.hasOwnProperty('order_Buyer_LastName')) {
                obj['order_Buyer_LastName'] = ApiClient.convertToType(data['order_Buyer_LastName'], 'String');
            }
            if (data.hasOwnProperty('order_Buyer_MobilePhone')) {
                obj['order_Buyer_MobilePhone'] = ApiClient.convertToType(data['order_Buyer_MobilePhone'], 'String');
            }
            if (data.hasOwnProperty('order_Buyer_Phone')) {
                obj['order_Buyer_Phone'] = ApiClient.convertToType(data['order_Buyer_Phone'], 'String');
            }
            if (data.hasOwnProperty('order_Comment')) {
                obj['order_Comment'] = ApiClient.convertToType(data['order_Comment'], 'String');
            }
            if (data.hasOwnProperty('order_FulfilledBy')) {
                obj['order_FulfilledBy'] = ApiClient.convertToType(data['order_FulfilledBy'], 'String');
            }
            if (data.hasOwnProperty('order_IsBusiness')) {
                obj['order_IsBusiness'] = ApiClient.convertToType(data['order_IsBusiness'], 'Boolean');
            }
            if (data.hasOwnProperty('order_IsPrime')) {
                obj['order_IsPrime'] = ApiClient.convertToType(data['order_IsPrime'], 'Boolean');
            }
            if (data.hasOwnProperty('order_MarketPlaceChannel')) {
                obj['order_MarketPlaceChannel'] = ApiClient.convertToType(data['order_MarketPlaceChannel'], 'String');
            }
            if (data.hasOwnProperty('order_OrderItemsSourceUri')) {
                obj['order_OrderItemsSourceUri'] = ApiClient.convertToType(data['order_OrderItemsSourceUri'], 'String');
            }
            if (data.hasOwnProperty('order_OrderSourceUri')) {
                obj['order_OrderSourceUri'] = ApiClient.convertToType(data['order_OrderSourceUri'], 'String');
            }
            if (data.hasOwnProperty('order_PayingUtcDate')) {
                obj['order_PayingUtcDate'] = ApiClient.convertToType(data['order_PayingUtcDate'], 'Date');
            }
            if (data.hasOwnProperty('order_PaymentMethod')) {
                obj['order_PaymentMethod'] = ApiClient.convertToType(data['order_PaymentMethod'], 'String');
            }
            if (data.hasOwnProperty('order_Shipping_AddressCity')) {
                obj['order_Shipping_AddressCity'] = ApiClient.convertToType(data['order_Shipping_AddressCity'], 'String');
            }
            if (data.hasOwnProperty('order_Shipping_AddressCountryIsoCodeAlpha2')) {
                obj['order_Shipping_AddressCountryIsoCodeAlpha2'] = ApiClient.convertToType(data['order_Shipping_AddressCountryIsoCodeAlpha2'], 'String');
            }
            if (data.hasOwnProperty('order_Shipping_AddressCountryName')) {
                obj['order_Shipping_AddressCountryName'] = ApiClient.convertToType(data['order_Shipping_AddressCountryName'], 'String');
            }
            if (data.hasOwnProperty('order_Shipping_AddressLine1')) {
                obj['order_Shipping_AddressLine1'] = ApiClient.convertToType(data['order_Shipping_AddressLine1'], 'String');
            }
            if (data.hasOwnProperty('order_Shipping_AddressLine2')) {
                obj['order_Shipping_AddressLine2'] = ApiClient.convertToType(data['order_Shipping_AddressLine2'], 'String');
            }
            if (data.hasOwnProperty('order_Shipping_AddressLine3')) {
                obj['order_Shipping_AddressLine3'] = ApiClient.convertToType(data['order_Shipping_AddressLine3'], 'String');
            }
            if (data.hasOwnProperty('order_Shipping_AddressName')) {
                obj['order_Shipping_AddressName'] = ApiClient.convertToType(data['order_Shipping_AddressName'], 'String');
            }
            if (data.hasOwnProperty('order_Shipping_AddressPostalCode')) {
                obj['order_Shipping_AddressPostalCode'] = ApiClient.convertToType(data['order_Shipping_AddressPostalCode'], 'String');
            }
            if (data.hasOwnProperty('order_Shipping_AddressStateOrRegion')) {
                obj['order_Shipping_AddressStateOrRegion'] = ApiClient.convertToType(data['order_Shipping_AddressStateOrRegion'], 'String');
            }
            if (data.hasOwnProperty('order_Shipping_Civility')) {
                obj['order_Shipping_Civility'] = ApiClient.convertToType(data['order_Shipping_Civility'], 'String');
            }
            if (data.hasOwnProperty('order_Shipping_CompanyName')) {
                obj['order_Shipping_CompanyName'] = ApiClient.convertToType(data['order_Shipping_CompanyName'], 'String');
            }
            if (data.hasOwnProperty('order_Shipping_EarliestShipUtcDate')) {
                obj['order_Shipping_EarliestShipUtcDate'] = ApiClient.convertToType(data['order_Shipping_EarliestShipUtcDate'], 'Date');
            }
            if (data.hasOwnProperty('order_Shipping_Email')) {
                obj['order_Shipping_Email'] = ApiClient.convertToType(data['order_Shipping_Email'], 'String');
            }
            if (data.hasOwnProperty('order_Shipping_FirstName')) {
                obj['order_Shipping_FirstName'] = ApiClient.convertToType(data['order_Shipping_FirstName'], 'String');
            }
            if (data.hasOwnProperty('order_Shipping_LastName')) {
                obj['order_Shipping_LastName'] = ApiClient.convertToType(data['order_Shipping_LastName'], 'String');
            }
            if (data.hasOwnProperty('order_Shipping_LatestShipUtcDate')) {
                obj['order_Shipping_LatestShipUtcDate'] = ApiClient.convertToType(data['order_Shipping_LatestShipUtcDate'], 'Date');
            }
            if (data.hasOwnProperty('order_Shipping_Method')) {
                obj['order_Shipping_Method'] = ApiClient.convertToType(data['order_Shipping_Method'], 'String');
            }
            if (data.hasOwnProperty('order_Shipping_MobilePhone')) {
                obj['order_Shipping_MobilePhone'] = ApiClient.convertToType(data['order_Shipping_MobilePhone'], 'String');
            }
            if (data.hasOwnProperty('order_Shipping_Phone')) {
                obj['order_Shipping_Phone'] = ApiClient.convertToType(data['order_Shipping_Phone'], 'String');
            }
            if (data.hasOwnProperty('order_Shipping_Price')) {
                obj['order_Shipping_Price'] = ApiClient.convertToType(data['order_Shipping_Price'], 'Number');
            }
            if (data.hasOwnProperty('order_Shipping_ShippingTax')) {
                obj['order_Shipping_ShippingTax'] = ApiClient.convertToType(data['order_Shipping_ShippingTax'], 'Number');
            }
            if (data.hasOwnProperty('order_TotalCommission')) {
                obj['order_TotalCommission'] = ApiClient.convertToType(data['order_TotalCommission'], 'Number');
            }
            if (data.hasOwnProperty('order_TotalTax')) {
                obj['order_TotalTax'] = ApiClient.convertToType(data['order_TotalTax'], 'Number');
            }
            if (data.hasOwnProperty('transitionLinks')) {
                obj['transitionLinks'] = ApiClient.convertToType(data['transitionLinks'], [LinksChangeOrderLink]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Order</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Order</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Order.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['beezUPOrderId'] && !(typeof data['beezUPOrderId'] === 'string' || data['beezUPOrderId'] instanceof String)) {
            throw new Error("Expected the field `beezUPOrderId` to be a primitive type in the JSON string but got " + data['beezUPOrderId']);
        }
        // ensure the json data is a string
        if (data['beezUPOrderUrl'] && !(typeof data['beezUPOrderUrl'] === 'string' || data['beezUPOrderUrl'] instanceof String)) {
            throw new Error("Expected the field `beezUPOrderUrl` to be a primitive type in the JSON string but got " + data['beezUPOrderUrl']);
        }
        // ensure the json data is a string
        if (data['etag'] && !(typeof data['etag'] === 'string' || data['etag'] instanceof String)) {
            throw new Error("Expected the field `etag` to be a primitive type in the JSON string but got " + data['etag']);
        }
        // validate the optional field `links`
        if (data['links']) { // data not null
          OrderLinks.validateJSON(data['links']);
        }
        // ensure the json data is a string
        if (data['marketplaceBusinessCode'] && !(typeof data['marketplaceBusinessCode'] === 'string' || data['marketplaceBusinessCode'] instanceof String)) {
            throw new Error("Expected the field `marketplaceBusinessCode` to be a primitive type in the JSON string but got " + data['marketplaceBusinessCode']);
        }
        // ensure the json data is a string
        if (data['marketplaceTechnicalCode'] && !(typeof data['marketplaceTechnicalCode'] === 'string' || data['marketplaceTechnicalCode'] instanceof String)) {
            throw new Error("Expected the field `marketplaceTechnicalCode` to be a primitive type in the JSON string but got " + data['marketplaceTechnicalCode']);
        }
        // ensure the json data is a string
        if (data['order_Buyer_Name'] && !(typeof data['order_Buyer_Name'] === 'string' || data['order_Buyer_Name'] instanceof String)) {
            throw new Error("Expected the field `order_Buyer_Name` to be a primitive type in the JSON string but got " + data['order_Buyer_Name']);
        }
        // ensure the json data is a string
        if (data['order_CurrencyCode'] && !(typeof data['order_CurrencyCode'] === 'string' || data['order_CurrencyCode'] instanceof String)) {
            throw new Error("Expected the field `order_CurrencyCode` to be a primitive type in the JSON string but got " + data['order_CurrencyCode']);
        }
        // ensure the json data is a string
        if (data['order_Invoice_Number'] && !(typeof data['order_Invoice_Number'] === 'string' || data['order_Invoice_Number'] instanceof String)) {
            throw new Error("Expected the field `order_Invoice_Number` to be a primitive type in the JSON string but got " + data['order_Invoice_Number']);
        }
        // ensure the json data is a string
        if (data['order_Invoice_Uri'] && !(typeof data['order_Invoice_Uri'] === 'string' || data['order_Invoice_Uri'] instanceof String)) {
            throw new Error("Expected the field `order_Invoice_Uri` to be a primitive type in the JSON string but got " + data['order_Invoice_Uri']);
        }
        // ensure the json data is a string
        if (data['order_MarketplaceOrderId'] && !(typeof data['order_MarketplaceOrderId'] === 'string' || data['order_MarketplaceOrderId'] instanceof String)) {
            throw new Error("Expected the field `order_MarketplaceOrderId` to be a primitive type in the JSON string but got " + data['order_MarketplaceOrderId']);
        }
        // ensure the json data is a string
        if (data['order_MerchantECommerceSoftwareName'] && !(typeof data['order_MerchantECommerceSoftwareName'] === 'string' || data['order_MerchantECommerceSoftwareName'] instanceof String)) {
            throw new Error("Expected the field `order_MerchantECommerceSoftwareName` to be a primitive type in the JSON string but got " + data['order_MerchantECommerceSoftwareName']);
        }
        // ensure the json data is a string
        if (data['order_MerchantECommerceSoftwareVersion'] && !(typeof data['order_MerchantECommerceSoftwareVersion'] === 'string' || data['order_MerchantECommerceSoftwareVersion'] instanceof String)) {
            throw new Error("Expected the field `order_MerchantECommerceSoftwareVersion` to be a primitive type in the JSON string but got " + data['order_MerchantECommerceSoftwareVersion']);
        }
        // ensure the json data is a string
        if (data['order_MerchantOrderId'] && !(typeof data['order_MerchantOrderId'] === 'string' || data['order_MerchantOrderId'] instanceof String)) {
            throw new Error("Expected the field `order_MerchantOrderId` to be a primitive type in the JSON string but got " + data['order_MerchantOrderId']);
        }
        // ensure the json data is a string
        if (data['order_Status_BeezUPOrderStatus'] && !(typeof data['order_Status_BeezUPOrderStatus'] === 'string' || data['order_Status_BeezUPOrderStatus'] instanceof String)) {
            throw new Error("Expected the field `order_Status_BeezUPOrderStatus` to be a primitive type in the JSON string but got " + data['order_Status_BeezUPOrderStatus']);
        }
        // ensure the json data is a string
        if (data['order_Status_MarketplaceOrderStatus'] && !(typeof data['order_Status_MarketplaceOrderStatus'] === 'string' || data['order_Status_MarketplaceOrderStatus'] instanceof String)) {
            throw new Error("Expected the field `order_Status_MarketplaceOrderStatus` to be a primitive type in the JSON string but got " + data['order_Status_MarketplaceOrderStatus']);
        }
        if (data['orderItems']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['orderItems'])) {
                throw new Error("Expected the field `orderItems` to be an array in the JSON data but got " + data['orderItems']);
            }
            // validate the optional field `orderItems` (array)
            for (const item of data['orderItems']) {
                OrderItem.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['order_Buyer_AddressCity'] && !(typeof data['order_Buyer_AddressCity'] === 'string' || data['order_Buyer_AddressCity'] instanceof String)) {
            throw new Error("Expected the field `order_Buyer_AddressCity` to be a primitive type in the JSON string but got " + data['order_Buyer_AddressCity']);
        }
        // ensure the json data is a string
        if (data['order_Buyer_AddressCountryIsoCodeAlpha2'] && !(typeof data['order_Buyer_AddressCountryIsoCodeAlpha2'] === 'string' || data['order_Buyer_AddressCountryIsoCodeAlpha2'] instanceof String)) {
            throw new Error("Expected the field `order_Buyer_AddressCountryIsoCodeAlpha2` to be a primitive type in the JSON string but got " + data['order_Buyer_AddressCountryIsoCodeAlpha2']);
        }
        // ensure the json data is a string
        if (data['order_Buyer_AddressCountryName'] && !(typeof data['order_Buyer_AddressCountryName'] === 'string' || data['order_Buyer_AddressCountryName'] instanceof String)) {
            throw new Error("Expected the field `order_Buyer_AddressCountryName` to be a primitive type in the JSON string but got " + data['order_Buyer_AddressCountryName']);
        }
        // ensure the json data is a string
        if (data['order_Buyer_AddressLine1'] && !(typeof data['order_Buyer_AddressLine1'] === 'string' || data['order_Buyer_AddressLine1'] instanceof String)) {
            throw new Error("Expected the field `order_Buyer_AddressLine1` to be a primitive type in the JSON string but got " + data['order_Buyer_AddressLine1']);
        }
        // ensure the json data is a string
        if (data['order_Buyer_AddressLine2'] && !(typeof data['order_Buyer_AddressLine2'] === 'string' || data['order_Buyer_AddressLine2'] instanceof String)) {
            throw new Error("Expected the field `order_Buyer_AddressLine2` to be a primitive type in the JSON string but got " + data['order_Buyer_AddressLine2']);
        }
        // ensure the json data is a string
        if (data['order_Buyer_AddressLine3'] && !(typeof data['order_Buyer_AddressLine3'] === 'string' || data['order_Buyer_AddressLine3'] instanceof String)) {
            throw new Error("Expected the field `order_Buyer_AddressLine3` to be a primitive type in the JSON string but got " + data['order_Buyer_AddressLine3']);
        }
        // ensure the json data is a string
        if (data['order_Buyer_AddressPostalCode'] && !(typeof data['order_Buyer_AddressPostalCode'] === 'string' || data['order_Buyer_AddressPostalCode'] instanceof String)) {
            throw new Error("Expected the field `order_Buyer_AddressPostalCode` to be a primitive type in the JSON string but got " + data['order_Buyer_AddressPostalCode']);
        }
        // ensure the json data is a string
        if (data['order_Buyer_AddressStateOrRegion'] && !(typeof data['order_Buyer_AddressStateOrRegion'] === 'string' || data['order_Buyer_AddressStateOrRegion'] instanceof String)) {
            throw new Error("Expected the field `order_Buyer_AddressStateOrRegion` to be a primitive type in the JSON string but got " + data['order_Buyer_AddressStateOrRegion']);
        }
        // ensure the json data is a string
        if (data['order_Buyer_Civility'] && !(typeof data['order_Buyer_Civility'] === 'string' || data['order_Buyer_Civility'] instanceof String)) {
            throw new Error("Expected the field `order_Buyer_Civility` to be a primitive type in the JSON string but got " + data['order_Buyer_Civility']);
        }
        // ensure the json data is a string
        if (data['order_Buyer_CompanyName'] && !(typeof data['order_Buyer_CompanyName'] === 'string' || data['order_Buyer_CompanyName'] instanceof String)) {
            throw new Error("Expected the field `order_Buyer_CompanyName` to be a primitive type in the JSON string but got " + data['order_Buyer_CompanyName']);
        }
        // ensure the json data is a string
        if (data['order_Buyer_Email'] && !(typeof data['order_Buyer_Email'] === 'string' || data['order_Buyer_Email'] instanceof String)) {
            throw new Error("Expected the field `order_Buyer_Email` to be a primitive type in the JSON string but got " + data['order_Buyer_Email']);
        }
        // ensure the json data is a string
        if (data['order_Buyer_FirstName'] && !(typeof data['order_Buyer_FirstName'] === 'string' || data['order_Buyer_FirstName'] instanceof String)) {
            throw new Error("Expected the field `order_Buyer_FirstName` to be a primitive type in the JSON string but got " + data['order_Buyer_FirstName']);
        }
        // ensure the json data is a string
        if (data['order_Buyer_Identifier'] && !(typeof data['order_Buyer_Identifier'] === 'string' || data['order_Buyer_Identifier'] instanceof String)) {
            throw new Error("Expected the field `order_Buyer_Identifier` to be a primitive type in the JSON string but got " + data['order_Buyer_Identifier']);
        }
        // ensure the json data is a string
        if (data['order_Buyer_LastName'] && !(typeof data['order_Buyer_LastName'] === 'string' || data['order_Buyer_LastName'] instanceof String)) {
            throw new Error("Expected the field `order_Buyer_LastName` to be a primitive type in the JSON string but got " + data['order_Buyer_LastName']);
        }
        // ensure the json data is a string
        if (data['order_Buyer_MobilePhone'] && !(typeof data['order_Buyer_MobilePhone'] === 'string' || data['order_Buyer_MobilePhone'] instanceof String)) {
            throw new Error("Expected the field `order_Buyer_MobilePhone` to be a primitive type in the JSON string but got " + data['order_Buyer_MobilePhone']);
        }
        // ensure the json data is a string
        if (data['order_Buyer_Phone'] && !(typeof data['order_Buyer_Phone'] === 'string' || data['order_Buyer_Phone'] instanceof String)) {
            throw new Error("Expected the field `order_Buyer_Phone` to be a primitive type in the JSON string but got " + data['order_Buyer_Phone']);
        }
        // ensure the json data is a string
        if (data['order_Comment'] && !(typeof data['order_Comment'] === 'string' || data['order_Comment'] instanceof String)) {
            throw new Error("Expected the field `order_Comment` to be a primitive type in the JSON string but got " + data['order_Comment']);
        }
        // ensure the json data is a string
        if (data['order_FulfilledBy'] && !(typeof data['order_FulfilledBy'] === 'string' || data['order_FulfilledBy'] instanceof String)) {
            throw new Error("Expected the field `order_FulfilledBy` to be a primitive type in the JSON string but got " + data['order_FulfilledBy']);
        }
        // ensure the json data is a string
        if (data['order_MarketPlaceChannel'] && !(typeof data['order_MarketPlaceChannel'] === 'string' || data['order_MarketPlaceChannel'] instanceof String)) {
            throw new Error("Expected the field `order_MarketPlaceChannel` to be a primitive type in the JSON string but got " + data['order_MarketPlaceChannel']);
        }
        // ensure the json data is a string
        if (data['order_OrderItemsSourceUri'] && !(typeof data['order_OrderItemsSourceUri'] === 'string' || data['order_OrderItemsSourceUri'] instanceof String)) {
            throw new Error("Expected the field `order_OrderItemsSourceUri` to be a primitive type in the JSON string but got " + data['order_OrderItemsSourceUri']);
        }
        // ensure the json data is a string
        if (data['order_OrderSourceUri'] && !(typeof data['order_OrderSourceUri'] === 'string' || data['order_OrderSourceUri'] instanceof String)) {
            throw new Error("Expected the field `order_OrderSourceUri` to be a primitive type in the JSON string but got " + data['order_OrderSourceUri']);
        }
        // ensure the json data is a string
        if (data['order_PaymentMethod'] && !(typeof data['order_PaymentMethod'] === 'string' || data['order_PaymentMethod'] instanceof String)) {
            throw new Error("Expected the field `order_PaymentMethod` to be a primitive type in the JSON string but got " + data['order_PaymentMethod']);
        }
        // ensure the json data is a string
        if (data['order_Shipping_AddressCity'] && !(typeof data['order_Shipping_AddressCity'] === 'string' || data['order_Shipping_AddressCity'] instanceof String)) {
            throw new Error("Expected the field `order_Shipping_AddressCity` to be a primitive type in the JSON string but got " + data['order_Shipping_AddressCity']);
        }
        // ensure the json data is a string
        if (data['order_Shipping_AddressCountryIsoCodeAlpha2'] && !(typeof data['order_Shipping_AddressCountryIsoCodeAlpha2'] === 'string' || data['order_Shipping_AddressCountryIsoCodeAlpha2'] instanceof String)) {
            throw new Error("Expected the field `order_Shipping_AddressCountryIsoCodeAlpha2` to be a primitive type in the JSON string but got " + data['order_Shipping_AddressCountryIsoCodeAlpha2']);
        }
        // ensure the json data is a string
        if (data['order_Shipping_AddressCountryName'] && !(typeof data['order_Shipping_AddressCountryName'] === 'string' || data['order_Shipping_AddressCountryName'] instanceof String)) {
            throw new Error("Expected the field `order_Shipping_AddressCountryName` to be a primitive type in the JSON string but got " + data['order_Shipping_AddressCountryName']);
        }
        // ensure the json data is a string
        if (data['order_Shipping_AddressLine1'] && !(typeof data['order_Shipping_AddressLine1'] === 'string' || data['order_Shipping_AddressLine1'] instanceof String)) {
            throw new Error("Expected the field `order_Shipping_AddressLine1` to be a primitive type in the JSON string but got " + data['order_Shipping_AddressLine1']);
        }
        // ensure the json data is a string
        if (data['order_Shipping_AddressLine2'] && !(typeof data['order_Shipping_AddressLine2'] === 'string' || data['order_Shipping_AddressLine2'] instanceof String)) {
            throw new Error("Expected the field `order_Shipping_AddressLine2` to be a primitive type in the JSON string but got " + data['order_Shipping_AddressLine2']);
        }
        // ensure the json data is a string
        if (data['order_Shipping_AddressLine3'] && !(typeof data['order_Shipping_AddressLine3'] === 'string' || data['order_Shipping_AddressLine3'] instanceof String)) {
            throw new Error("Expected the field `order_Shipping_AddressLine3` to be a primitive type in the JSON string but got " + data['order_Shipping_AddressLine3']);
        }
        // ensure the json data is a string
        if (data['order_Shipping_AddressName'] && !(typeof data['order_Shipping_AddressName'] === 'string' || data['order_Shipping_AddressName'] instanceof String)) {
            throw new Error("Expected the field `order_Shipping_AddressName` to be a primitive type in the JSON string but got " + data['order_Shipping_AddressName']);
        }
        // ensure the json data is a string
        if (data['order_Shipping_AddressPostalCode'] && !(typeof data['order_Shipping_AddressPostalCode'] === 'string' || data['order_Shipping_AddressPostalCode'] instanceof String)) {
            throw new Error("Expected the field `order_Shipping_AddressPostalCode` to be a primitive type in the JSON string but got " + data['order_Shipping_AddressPostalCode']);
        }
        // ensure the json data is a string
        if (data['order_Shipping_AddressStateOrRegion'] && !(typeof data['order_Shipping_AddressStateOrRegion'] === 'string' || data['order_Shipping_AddressStateOrRegion'] instanceof String)) {
            throw new Error("Expected the field `order_Shipping_AddressStateOrRegion` to be a primitive type in the JSON string but got " + data['order_Shipping_AddressStateOrRegion']);
        }
        // ensure the json data is a string
        if (data['order_Shipping_Civility'] && !(typeof data['order_Shipping_Civility'] === 'string' || data['order_Shipping_Civility'] instanceof String)) {
            throw new Error("Expected the field `order_Shipping_Civility` to be a primitive type in the JSON string but got " + data['order_Shipping_Civility']);
        }
        // ensure the json data is a string
        if (data['order_Shipping_CompanyName'] && !(typeof data['order_Shipping_CompanyName'] === 'string' || data['order_Shipping_CompanyName'] instanceof String)) {
            throw new Error("Expected the field `order_Shipping_CompanyName` to be a primitive type in the JSON string but got " + data['order_Shipping_CompanyName']);
        }
        // ensure the json data is a string
        if (data['order_Shipping_Email'] && !(typeof data['order_Shipping_Email'] === 'string' || data['order_Shipping_Email'] instanceof String)) {
            throw new Error("Expected the field `order_Shipping_Email` to be a primitive type in the JSON string but got " + data['order_Shipping_Email']);
        }
        // ensure the json data is a string
        if (data['order_Shipping_FirstName'] && !(typeof data['order_Shipping_FirstName'] === 'string' || data['order_Shipping_FirstName'] instanceof String)) {
            throw new Error("Expected the field `order_Shipping_FirstName` to be a primitive type in the JSON string but got " + data['order_Shipping_FirstName']);
        }
        // ensure the json data is a string
        if (data['order_Shipping_LastName'] && !(typeof data['order_Shipping_LastName'] === 'string' || data['order_Shipping_LastName'] instanceof String)) {
            throw new Error("Expected the field `order_Shipping_LastName` to be a primitive type in the JSON string but got " + data['order_Shipping_LastName']);
        }
        // ensure the json data is a string
        if (data['order_Shipping_Method'] && !(typeof data['order_Shipping_Method'] === 'string' || data['order_Shipping_Method'] instanceof String)) {
            throw new Error("Expected the field `order_Shipping_Method` to be a primitive type in the JSON string but got " + data['order_Shipping_Method']);
        }
        // ensure the json data is a string
        if (data['order_Shipping_MobilePhone'] && !(typeof data['order_Shipping_MobilePhone'] === 'string' || data['order_Shipping_MobilePhone'] instanceof String)) {
            throw new Error("Expected the field `order_Shipping_MobilePhone` to be a primitive type in the JSON string but got " + data['order_Shipping_MobilePhone']);
        }
        // ensure the json data is a string
        if (data['order_Shipping_Phone'] && !(typeof data['order_Shipping_Phone'] === 'string' || data['order_Shipping_Phone'] instanceof String)) {
            throw new Error("Expected the field `order_Shipping_Phone` to be a primitive type in the JSON string but got " + data['order_Shipping_Phone']);
        }
        if (data['transitionLinks']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['transitionLinks'])) {
                throw new Error("Expected the field `transitionLinks` to be an array in the JSON data but got " + data['transitionLinks']);
            }
            // validate the optional field `transitionLinks` (array)
            for (const item of data['transitionLinks']) {
                LinksChangeOrderLink.validateJSON(item);
            };
        }

        return true;
    }


}

Order.RequiredProperties = ["accountId", "beezUPOrderId", "etag", "links", "marketplaceBusinessCode", "marketplaceTechnicalCode", "order_LastModificationUtcDate", "order_MarketplaceLastModificationUtcDate", "order_MarketplaceOrderId", "order_PurchaseUtcDate", "order_Status_BeezUPOrderStatus", "processing", "orderItems", "transitionLinks"];

/**
 * The marketplace account identifier in BeezUP. This account identifier is based on your api settings.
 * @member {Number} accountId
 */
Order.prototype['accountId'] = undefined;

/**
 * The BeezUP Order identifier
 * @member {String} beezUPOrderId
 */
Order.prototype['beezUPOrderId'] = undefined;

/**
 * The URL <a href=\"https://en.wikipedia.org/wiki/URL\">https://en.wikipedia.org/wiki/URL</a>
 * @member {String} beezUPOrderUrl
 */
Order.prototype['beezUPOrderUrl'] = undefined;

/**
 * ETag value to identify the order.\\ This information is required for the operation GetOrder and ChangeOrder.\\ For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3 
 * @member {String} etag
 */
Order.prototype['etag'] = undefined;

/**
 * @member {module:model/OrderLinks} links
 */
Order.prototype['links'] = undefined;

/**
 * In an marketplace technical code like CDiscount you can have several marketplaces like GO SPORT, etc. We identify them by a business code.
 * @member {String} marketplaceBusinessCode
 */
Order.prototype['marketplaceBusinessCode'] = undefined;

/**
 * The technical code of the marketplace.
 * @member {String} marketplaceTechnicalCode
 */
Order.prototype['marketplaceTechnicalCode'] = undefined;

/**
 * Buyer full name
 * @member {String} order_Buyer_Name
 */
Order.prototype['order_Buyer_Name'] = undefined;

/**
 * The currency code <a href=\"https://en.wikipedia.org/wiki/ISO_4217\">(ISO 4217)</a> 
 * @member {String} order_CurrencyCode
 */
Order.prototype['order_CurrencyCode'] = undefined;

/**
 * The order invoice number
 * @member {String} order_Invoice_Number
 */
Order.prototype['order_Invoice_Number'] = undefined;

/**
 * The order invoice URI
 * @member {String} order_Invoice_Uri
 */
Order.prototype['order_Invoice_Uri'] = undefined;

/**
 * The last modification UTC date done by BeezUP of this order
 * @member {Date} order_LastModificationUtcDate
 */
Order.prototype['order_LastModificationUtcDate'] = undefined;

/**
 * The last modification UTC date done by the marketplace on this order
 * @member {Date} order_MarketplaceLastModificationUtcDate
 */
Order.prototype['order_MarketplaceLastModificationUtcDate'] = undefined;

/**
 * The order marketplace identifier
 * @member {String} order_MarketplaceOrderId
 */
Order.prototype['order_MarketplaceOrderId'] = undefined;

/**
 * The e-commerce software name of the merchant
 * @member {String} order_MerchantECommerceSoftwareName
 */
Order.prototype['order_MerchantECommerceSoftwareName'] = undefined;

/**
 * The e-commece software version of the merchant
 * @member {String} order_MerchantECommerceSoftwareVersion
 */
Order.prototype['order_MerchantECommerceSoftwareVersion'] = undefined;

/**
 * The order merchant identifier
 * @member {String} order_MerchantOrderId
 */
Order.prototype['order_MerchantOrderId'] = undefined;

/**
 * The purchase date of this order
 * @member {Date} order_PurchaseUtcDate
 */
Order.prototype['order_PurchaseUtcDate'] = undefined;

/**
 * BeezUP order status. Unified for all marketplaces.
 * @member {String} order_Status_BeezUPOrderStatus
 */
Order.prototype['order_Status_BeezUPOrderStatus'] = undefined;

/**
 * The marketplace order state
 * @member {String} order_Status_MarketplaceOrderStatus
 */
Order.prototype['order_Status_MarketplaceOrderStatus'] = undefined;

/**
 * The total price of this order (corresponding to the amount paid by the customer)
 * @member {Number} order_TotalPrice
 */
Order.prototype['order_TotalPrice'] = undefined;

/**
 * If true, there is currently a harvest or an order change in progress. Otherwise false.
 * @member {Boolean} processing
 */
Order.prototype['processing'] = undefined;

/**
 * @member {Array.<module:model/OrderItem>} orderItems
 */
Order.prototype['orderItems'] = undefined;

/**
 * The Buyer address city of this order
 * @member {String} order_Buyer_AddressCity
 */
Order.prototype['order_Buyer_AddressCity'] = undefined;

/**
 * The Buyer address country iso code alpha 2 (see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#/decoding_table for more details)
 * @member {String} order_Buyer_AddressCountryIsoCodeAlpha2
 */
Order.prototype['order_Buyer_AddressCountryIsoCodeAlpha2'] = undefined;

/**
 * The Buyer address country name
 * @member {String} order_Buyer_AddressCountryName
 */
Order.prototype['order_Buyer_AddressCountryName'] = undefined;

/**
 * The Buyer address line 1 of this order
 * @member {String} order_Buyer_AddressLine1
 */
Order.prototype['order_Buyer_AddressLine1'] = undefined;

/**
 * The Buyer address line 2 of this order
 * @member {String} order_Buyer_AddressLine2
 */
Order.prototype['order_Buyer_AddressLine2'] = undefined;

/**
 * The Buyer address line 3 of this order
 * @member {String} order_Buyer_AddressLine3
 */
Order.prototype['order_Buyer_AddressLine3'] = undefined;

/**
 * The Buyer address postal code of this order
 * @member {String} order_Buyer_AddressPostalCode
 */
Order.prototype['order_Buyer_AddressPostalCode'] = undefined;

/**
 * The Buyer address state or region of this order
 * @member {String} order_Buyer_AddressStateOrRegion
 */
Order.prototype['order_Buyer_AddressStateOrRegion'] = undefined;

/**
 * The buyer civility for this order
 * @member {String} order_Buyer_Civility
 */
Order.prototype['order_Buyer_Civility'] = undefined;

/**
 * The buyer company name for this order
 * @member {String} order_Buyer_CompanyName
 */
Order.prototype['order_Buyer_CompanyName'] = undefined;

/**
 * The email of the buyer for this order
 * @member {String} order_Buyer_Email
 */
Order.prototype['order_Buyer_Email'] = undefined;

/**
 * Order Buyer first name
 * @member {String} order_Buyer_FirstName
 */
Order.prototype['order_Buyer_FirstName'] = undefined;

/**
 * The buyer identifier for this order
 * @member {String} order_Buyer_Identifier
 */
Order.prototype['order_Buyer_Identifier'] = undefined;

/**
 * Order Buyer last name
 * @member {String} order_Buyer_LastName
 */
Order.prototype['order_Buyer_LastName'] = undefined;

/**
 * The mobile phone number of the buyer for this order
 * @member {String} order_Buyer_MobilePhone
 */
Order.prototype['order_Buyer_MobilePhone'] = undefined;

/**
 * The phone number of the buyer for this order
 * @member {String} order_Buyer_Phone
 */
Order.prototype['order_Buyer_Phone'] = undefined;

/**
 * The comment associated to this order
 * @member {String} order_Comment
 */
Order.prototype['order_Comment'] = undefined;

/**
 * The order FulfilledBy
 * @member {String} order_FulfilledBy
 */
Order.prototype['order_FulfilledBy'] = undefined;

/**
 * The order IsBusiness
 * @member {Boolean} order_IsBusiness
 */
Order.prototype['order_IsBusiness'] = undefined;

/**
 * Indicates if the order is considered as Prime (only on Amazon)
 * @member {Boolean} order_IsPrime
 */
Order.prototype['order_IsPrime'] = undefined;

/**
 * Useful to identify the origin of the order. For example in Amazon.
 * @member {String} order_MarketPlaceChannel
 */
Order.prototype['order_MarketPlaceChannel'] = undefined;

/**
 * Technical information: The url to the source of this order items. We received this information from the marketplace. 
 * @member {String} order_OrderItemsSourceUri
 */
Order.prototype['order_OrderItemsSourceUri'] = undefined;

/**
 * Technical information: The url to the source of this order. We received this information from the marketplace. 
 * @member {String} order_OrderSourceUri
 */
Order.prototype['order_OrderSourceUri'] = undefined;

/**
 * The UTC date of the payment of this order
 * @member {Date} order_PayingUtcDate
 */
Order.prototype['order_PayingUtcDate'] = undefined;

/**
 * The payment method of this order
 * @member {String} order_PaymentMethod
 */
Order.prototype['order_PaymentMethod'] = undefined;

/**
 * The shipping address city of this order
 * @member {String} order_Shipping_AddressCity
 */
Order.prototype['order_Shipping_AddressCity'] = undefined;

/**
 * The shipping address country iso code alpha 2 (see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#/decoding_table for more details)
 * @member {String} order_Shipping_AddressCountryIsoCodeAlpha2
 */
Order.prototype['order_Shipping_AddressCountryIsoCodeAlpha2'] = undefined;

/**
 * The shipping address country name
 * @member {String} order_Shipping_AddressCountryName
 */
Order.prototype['order_Shipping_AddressCountryName'] = undefined;

/**
 * The shipping address line 1 of this order
 * @member {String} order_Shipping_AddressLine1
 */
Order.prototype['order_Shipping_AddressLine1'] = undefined;

/**
 * The shipping address line 2 of this order
 * @member {String} order_Shipping_AddressLine2
 */
Order.prototype['order_Shipping_AddressLine2'] = undefined;

/**
 * The shipping address line 3 of this order
 * @member {String} order_Shipping_AddressLine3
 */
Order.prototype['order_Shipping_AddressLine3'] = undefined;

/**
 * The name of the person in the shipping address for this order
 * @member {String} order_Shipping_AddressName
 */
Order.prototype['order_Shipping_AddressName'] = undefined;

/**
 * The shipping address postal code of this order
 * @member {String} order_Shipping_AddressPostalCode
 */
Order.prototype['order_Shipping_AddressPostalCode'] = undefined;

/**
 * The shipping address state or region of this order
 * @member {String} order_Shipping_AddressStateOrRegion
 */
Order.prototype['order_Shipping_AddressStateOrRegion'] = undefined;

/**
 * The civility of the person in the shipping address for this order
 * @member {String} order_Shipping_Civility
 */
Order.prototype['order_Shipping_Civility'] = undefined;

/**
 * The company name of the shipping address for this order
 * @member {String} order_Shipping_CompanyName
 */
Order.prototype['order_Shipping_CompanyName'] = undefined;

/**
 * The UTC date of the earliest ship for this order
 * @member {Date} order_Shipping_EarliestShipUtcDate
 */
Order.prototype['order_Shipping_EarliestShipUtcDate'] = undefined;

/**
 * The email of the person in the shipping address for this order
 * @member {String} order_Shipping_Email
 */
Order.prototype['order_Shipping_Email'] = undefined;

/**
 * Order Shipping first name
 * @member {String} order_Shipping_FirstName
 */
Order.prototype['order_Shipping_FirstName'] = undefined;

/**
 * Order Shipping last name
 * @member {String} order_Shipping_LastName
 */
Order.prototype['order_Shipping_LastName'] = undefined;

/**
 * The UTC date of the latest ship for this order
 * @member {Date} order_Shipping_LatestShipUtcDate
 */
Order.prototype['order_Shipping_LatestShipUtcDate'] = undefined;

/**
 * The shipping method of this order
 * @member {String} order_Shipping_Method
 */
Order.prototype['order_Shipping_Method'] = undefined;

/**
 * The mobile phone number of the person in the shipping address for this order
 * @member {String} order_Shipping_MobilePhone
 */
Order.prototype['order_Shipping_MobilePhone'] = undefined;

/**
 * The phone number of the person in the shipping address for this order
 * @member {String} order_Shipping_Phone
 */
Order.prototype['order_Shipping_Phone'] = undefined;

/**
 * The shipping price of this order
 * @member {Number} order_Shipping_Price
 */
Order.prototype['order_Shipping_Price'] = undefined;

/**
 * The shipping tax for this order
 * @member {Number} order_Shipping_ShippingTax
 */
Order.prototype['order_Shipping_ShippingTax'] = undefined;

/**
 * The total commission of this order
 * @member {Number} order_TotalCommission
 */
Order.prototype['order_TotalCommission'] = undefined;

/**
 * The total tax of this order
 * @member {Number} order_TotalTax
 */
Order.prototype['order_TotalTax'] = undefined;

/**
 * Contains the authorized change actions for an order
 * @member {Array.<module:model/LinksChangeOrderLink>} transitionLinks
 */
Order.prototype['transitionLinks'] = undefined;


// Implement OrderHeader interface:
/**
 * The marketplace account identifier in BeezUP. This account identifier is based on your api settings.
 * @member {Number} accountId
 */
OrderHeader.prototype['accountId'] = undefined;
/**
 * The BeezUP Order identifier
 * @member {String} beezUPOrderId
 */
OrderHeader.prototype['beezUPOrderId'] = undefined;
/**
 * The URL <a href=\"https://en.wikipedia.org/wiki/URL\">https://en.wikipedia.org/wiki/URL</a>
 * @member {String} beezUPOrderUrl
 */
OrderHeader.prototype['beezUPOrderUrl'] = undefined;
/**
 * ETag value to identify the order.\\ This information is required for the operation GetOrder and ChangeOrder.\\ For more details go to this link: http://tools.ietf.org/html/rfc7232#section-2.3 
 * @member {String} etag
 */
OrderHeader.prototype['etag'] = undefined;
/**
 * @member {module:model/OrderHeaderLinks} links
 */
OrderHeader.prototype['links'] = undefined;
/**
 * In an marketplace technical code like CDiscount you can have several marketplaces like GO SPORT, etc. We identify them by a business code.
 * @member {String} marketplaceBusinessCode
 */
OrderHeader.prototype['marketplaceBusinessCode'] = undefined;
/**
 * The technical code of the marketplace.
 * @member {String} marketplaceTechnicalCode
 */
OrderHeader.prototype['marketplaceTechnicalCode'] = undefined;
/**
 * Buyer full name
 * @member {String} order_Buyer_Name
 */
OrderHeader.prototype['order_Buyer_Name'] = undefined;
/**
 * The currency code <a href=\"https://en.wikipedia.org/wiki/ISO_4217\">(ISO 4217)</a> 
 * @member {String} order_CurrencyCode
 */
OrderHeader.prototype['order_CurrencyCode'] = undefined;
/**
 * The order invoice number
 * @member {String} order_Invoice_Number
 */
OrderHeader.prototype['order_Invoice_Number'] = undefined;
/**
 * The order invoice URI
 * @member {String} order_Invoice_Uri
 */
OrderHeader.prototype['order_Invoice_Uri'] = undefined;
/**
 * The last modification UTC date done by BeezUP of this order
 * @member {Date} order_LastModificationUtcDate
 */
OrderHeader.prototype['order_LastModificationUtcDate'] = undefined;
/**
 * The last modification UTC date done by the marketplace on this order
 * @member {Date} order_MarketplaceLastModificationUtcDate
 */
OrderHeader.prototype['order_MarketplaceLastModificationUtcDate'] = undefined;
/**
 * The order marketplace identifier
 * @member {String} order_MarketplaceOrderId
 */
OrderHeader.prototype['order_MarketplaceOrderId'] = undefined;
/**
 * The e-commerce software name of the merchant
 * @member {String} order_MerchantECommerceSoftwareName
 */
OrderHeader.prototype['order_MerchantECommerceSoftwareName'] = undefined;
/**
 * The e-commece software version of the merchant
 * @member {String} order_MerchantECommerceSoftwareVersion
 */
OrderHeader.prototype['order_MerchantECommerceSoftwareVersion'] = undefined;
/**
 * The order merchant identifier
 * @member {String} order_MerchantOrderId
 */
OrderHeader.prototype['order_MerchantOrderId'] = undefined;
/**
 * The purchase date of this order
 * @member {Date} order_PurchaseUtcDate
 */
OrderHeader.prototype['order_PurchaseUtcDate'] = undefined;
/**
 * BeezUP order status. Unified for all marketplaces.
 * @member {String} order_Status_BeezUPOrderStatus
 */
OrderHeader.prototype['order_Status_BeezUPOrderStatus'] = undefined;
/**
 * The marketplace order state
 * @member {String} order_Status_MarketplaceOrderStatus
 */
OrderHeader.prototype['order_Status_MarketplaceOrderStatus'] = undefined;
/**
 * The total price of this order (corresponding to the amount paid by the customer)
 * @member {Number} order_TotalPrice
 */
OrderHeader.prototype['order_TotalPrice'] = undefined;
/**
 * If true, there is currently a harvest or an order change in progress. Otherwise false.
 * @member {Boolean} processing
 */
OrderHeader.prototype['processing'] = undefined;




export default Order;

