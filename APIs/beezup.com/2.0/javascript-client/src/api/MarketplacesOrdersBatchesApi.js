/**
 * BeezUP Merchant API 
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: help@beezup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BatchOrderOperationResponse from '../model/BatchOrderOperationResponse';
import BeezUPCommonErrorResponseMessage from '../model/BeezUPCommonErrorResponseMessage';
import ChangeOrderListRequest from '../model/ChangeOrderListRequest';
import ClearMerchantOrderInfoListRequest from '../model/ClearMerchantOrderInfoListRequest';
import SetMerchantOrderInfoListRequest from '../model/SetMerchantOrderInfoListRequest';

/**
* MarketplacesOrdersBatches service.
* @module api/MarketplacesOrdersBatchesApi
* @version 2.0
*/
export default class MarketplacesOrdersBatchesApi {

    /**
    * Constructs a new MarketplacesOrdersBatchesApi. 
    * @alias module:api/MarketplacesOrdersBatchesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the changeOrderList operation.
     * @callback module:api/MarketplacesOrdersBatchesApi~changeOrderListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchOrderOperationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * [DEPRECATED] Send a batch of operations to change your marketplace Order information: accept, ship, etc.  (max 100 items per call)
     * The purpose of this operation is to reduce the amount of request to the API.  Max 100 items per call. 
     * @param {String} changeOrderType The Order change type
     * @param {String} userName Sometimes the user in the e-commerce application is not the same as user associated with the current subscription key. We recommend providing your application's user login.
     * @param {module:model/ChangeOrderListRequest} changeOrderListRequest 
     * @param {Object} opts Optional parameters
     * @param {Boolean} [testMode = false)] If true, the operation will be not be sent to marketplace. But the validation will be taken in account.
     * @param {module:api/MarketplacesOrdersBatchesApi~changeOrderListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchOrderOperationResponse}
     */
    changeOrderList(changeOrderType, userName, changeOrderListRequest, opts, callback) {
      opts = opts || {};
      let postBody = changeOrderListRequest;
      // verify the required parameter 'changeOrderType' is set
      if (changeOrderType === undefined || changeOrderType === null) {
        throw new Error("Missing the required parameter 'changeOrderType' when calling changeOrderList");
      }
      // verify the required parameter 'userName' is set
      if (userName === undefined || userName === null) {
        throw new Error("Missing the required parameter 'userName' when calling changeOrderList");
      }
      // verify the required parameter 'changeOrderListRequest' is set
      if (changeOrderListRequest === undefined || changeOrderListRequest === null) {
        throw new Error("Missing the required parameter 'changeOrderListRequest' when calling changeOrderList");
      }

      let pathParams = {
        'changeOrderType': changeOrderType
      };
      let queryParams = {
        'userName': userName,
        'testMode': opts['testMode']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchOrderOperationResponse;
      return this.apiClient.callApi(
        '/v2/user/marketplaces/orders/batches/changeOrders/{changeOrderType}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the clearMerchantOrderInfoList operation.
     * @callback module:api/MarketplacesOrdersBatchesApi~clearMerchantOrderInfoListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchOrderOperationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * [DEPRECATED] Send a batch of operations to clear an Order's merchant information (max 100 items per call)
     * The purpose of this operation is to reduce the amount of request to the API.
     * @param {module:model/ClearMerchantOrderInfoListRequest} clearMerchantOrderInfoListRequest 
     * @param {module:api/MarketplacesOrdersBatchesApi~clearMerchantOrderInfoListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchOrderOperationResponse}
     */
    clearMerchantOrderInfoList(clearMerchantOrderInfoListRequest, callback) {
      let postBody = clearMerchantOrderInfoListRequest;
      // verify the required parameter 'clearMerchantOrderInfoListRequest' is set
      if (clearMerchantOrderInfoListRequest === undefined || clearMerchantOrderInfoListRequest === null) {
        throw new Error("Missing the required parameter 'clearMerchantOrderInfoListRequest' when calling clearMerchantOrderInfoList");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchOrderOperationResponse;
      return this.apiClient.callApi(
        '/v2/user/marketplaces/orders/batches/clearMerchantOrderInfos', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setMerchantOrderInfoList operation.
     * @callback module:api/MarketplacesOrdersBatchesApi~setMerchantOrderInfoListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BatchOrderOperationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * [DEPRECATED] Send a batch of operations to set an Order's merchant information  (max 100 items per call)
     * The purpose of this operation is to reduce the amount of request to the API.
     * @param {module:model/SetMerchantOrderInfoListRequest} setMerchantOrderInfoListRequest 
     * @param {module:api/MarketplacesOrdersBatchesApi~setMerchantOrderInfoListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BatchOrderOperationResponse}
     */
    setMerchantOrderInfoList(setMerchantOrderInfoListRequest, callback) {
      let postBody = setMerchantOrderInfoListRequest;
      // verify the required parameter 'setMerchantOrderInfoListRequest' is set
      if (setMerchantOrderInfoListRequest === undefined || setMerchantOrderInfoListRequest === null) {
        throw new Error("Missing the required parameter 'setMerchantOrderInfoListRequest' when calling setMerchantOrderInfoList");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BatchOrderOperationResponse;
      return this.apiClient.callApi(
        '/v2/user/marketplaces/orders/batches/setMerchantOrderInfos', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
