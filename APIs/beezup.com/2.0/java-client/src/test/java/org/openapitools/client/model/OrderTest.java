/*
 * BeezUP Merchant API 
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: help@beezup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.net.URI;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.UUID;
import org.openapitools.client.model.LinksChangeOrderLink;
import org.openapitools.client.model.OrderItem;
import org.openapitools.client.model.OrderLinks;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Order
 */
public class OrderTest {
    private final Order model = new Order();

    /**
     * Model tests for Order
     */
    @Test
    public void testOrder() {
        // TODO: test Order
    }

    /**
     * Test the property 'accountId'
     */
    @Test
    public void accountIdTest() {
        // TODO: test accountId
    }

    /**
     * Test the property 'beezUPOrderId'
     */
    @Test
    public void beezUPOrderIdTest() {
        // TODO: test beezUPOrderId
    }

    /**
     * Test the property 'beezUPOrderUrl'
     */
    @Test
    public void beezUPOrderUrlTest() {
        // TODO: test beezUPOrderUrl
    }

    /**
     * Test the property 'etag'
     */
    @Test
    public void etagTest() {
        // TODO: test etag
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        // TODO: test links
    }

    /**
     * Test the property 'marketplaceBusinessCode'
     */
    @Test
    public void marketplaceBusinessCodeTest() {
        // TODO: test marketplaceBusinessCode
    }

    /**
     * Test the property 'marketplaceTechnicalCode'
     */
    @Test
    public void marketplaceTechnicalCodeTest() {
        // TODO: test marketplaceTechnicalCode
    }

    /**
     * Test the property 'orderBuyerName'
     */
    @Test
    public void orderBuyerNameTest() {
        // TODO: test orderBuyerName
    }

    /**
     * Test the property 'orderCurrencyCode'
     */
    @Test
    public void orderCurrencyCodeTest() {
        // TODO: test orderCurrencyCode
    }

    /**
     * Test the property 'orderInvoiceNumber'
     */
    @Test
    public void orderInvoiceNumberTest() {
        // TODO: test orderInvoiceNumber
    }

    /**
     * Test the property 'orderInvoiceUri'
     */
    @Test
    public void orderInvoiceUriTest() {
        // TODO: test orderInvoiceUri
    }

    /**
     * Test the property 'orderLastModificationUtcDate'
     */
    @Test
    public void orderLastModificationUtcDateTest() {
        // TODO: test orderLastModificationUtcDate
    }

    /**
     * Test the property 'orderMarketplaceLastModificationUtcDate'
     */
    @Test
    public void orderMarketplaceLastModificationUtcDateTest() {
        // TODO: test orderMarketplaceLastModificationUtcDate
    }

    /**
     * Test the property 'orderMarketplaceOrderId'
     */
    @Test
    public void orderMarketplaceOrderIdTest() {
        // TODO: test orderMarketplaceOrderId
    }

    /**
     * Test the property 'orderMerchantECommerceSoftwareName'
     */
    @Test
    public void orderMerchantECommerceSoftwareNameTest() {
        // TODO: test orderMerchantECommerceSoftwareName
    }

    /**
     * Test the property 'orderMerchantECommerceSoftwareVersion'
     */
    @Test
    public void orderMerchantECommerceSoftwareVersionTest() {
        // TODO: test orderMerchantECommerceSoftwareVersion
    }

    /**
     * Test the property 'orderMerchantOrderId'
     */
    @Test
    public void orderMerchantOrderIdTest() {
        // TODO: test orderMerchantOrderId
    }

    /**
     * Test the property 'orderPurchaseUtcDate'
     */
    @Test
    public void orderPurchaseUtcDateTest() {
        // TODO: test orderPurchaseUtcDate
    }

    /**
     * Test the property 'orderStatusBeezUPOrderStatus'
     */
    @Test
    public void orderStatusBeezUPOrderStatusTest() {
        // TODO: test orderStatusBeezUPOrderStatus
    }

    /**
     * Test the property 'orderStatusMarketplaceOrderStatus'
     */
    @Test
    public void orderStatusMarketplaceOrderStatusTest() {
        // TODO: test orderStatusMarketplaceOrderStatus
    }

    /**
     * Test the property 'orderTotalPrice'
     */
    @Test
    public void orderTotalPriceTest() {
        // TODO: test orderTotalPrice
    }

    /**
     * Test the property 'processing'
     */
    @Test
    public void processingTest() {
        // TODO: test processing
    }

    /**
     * Test the property 'orderItems'
     */
    @Test
    public void orderItemsTest() {
        // TODO: test orderItems
    }

    /**
     * Test the property 'orderBuyerAddressCity'
     */
    @Test
    public void orderBuyerAddressCityTest() {
        // TODO: test orderBuyerAddressCity
    }

    /**
     * Test the property 'orderBuyerAddressCountryIsoCodeAlpha2'
     */
    @Test
    public void orderBuyerAddressCountryIsoCodeAlpha2Test() {
        // TODO: test orderBuyerAddressCountryIsoCodeAlpha2
    }

    /**
     * Test the property 'orderBuyerAddressCountryName'
     */
    @Test
    public void orderBuyerAddressCountryNameTest() {
        // TODO: test orderBuyerAddressCountryName
    }

    /**
     * Test the property 'orderBuyerAddressLine1'
     */
    @Test
    public void orderBuyerAddressLine1Test() {
        // TODO: test orderBuyerAddressLine1
    }

    /**
     * Test the property 'orderBuyerAddressLine2'
     */
    @Test
    public void orderBuyerAddressLine2Test() {
        // TODO: test orderBuyerAddressLine2
    }

    /**
     * Test the property 'orderBuyerAddressLine3'
     */
    @Test
    public void orderBuyerAddressLine3Test() {
        // TODO: test orderBuyerAddressLine3
    }

    /**
     * Test the property 'orderBuyerAddressPostalCode'
     */
    @Test
    public void orderBuyerAddressPostalCodeTest() {
        // TODO: test orderBuyerAddressPostalCode
    }

    /**
     * Test the property 'orderBuyerAddressStateOrRegion'
     */
    @Test
    public void orderBuyerAddressStateOrRegionTest() {
        // TODO: test orderBuyerAddressStateOrRegion
    }

    /**
     * Test the property 'orderBuyerCivility'
     */
    @Test
    public void orderBuyerCivilityTest() {
        // TODO: test orderBuyerCivility
    }

    /**
     * Test the property 'orderBuyerCompanyName'
     */
    @Test
    public void orderBuyerCompanyNameTest() {
        // TODO: test orderBuyerCompanyName
    }

    /**
     * Test the property 'orderBuyerEmail'
     */
    @Test
    public void orderBuyerEmailTest() {
        // TODO: test orderBuyerEmail
    }

    /**
     * Test the property 'orderBuyerFirstName'
     */
    @Test
    public void orderBuyerFirstNameTest() {
        // TODO: test orderBuyerFirstName
    }

    /**
     * Test the property 'orderBuyerIdentifier'
     */
    @Test
    public void orderBuyerIdentifierTest() {
        // TODO: test orderBuyerIdentifier
    }

    /**
     * Test the property 'orderBuyerLastName'
     */
    @Test
    public void orderBuyerLastNameTest() {
        // TODO: test orderBuyerLastName
    }

    /**
     * Test the property 'orderBuyerMobilePhone'
     */
    @Test
    public void orderBuyerMobilePhoneTest() {
        // TODO: test orderBuyerMobilePhone
    }

    /**
     * Test the property 'orderBuyerPhone'
     */
    @Test
    public void orderBuyerPhoneTest() {
        // TODO: test orderBuyerPhone
    }

    /**
     * Test the property 'orderComment'
     */
    @Test
    public void orderCommentTest() {
        // TODO: test orderComment
    }

    /**
     * Test the property 'orderFulfilledBy'
     */
    @Test
    public void orderFulfilledByTest() {
        // TODO: test orderFulfilledBy
    }

    /**
     * Test the property 'orderIsBusiness'
     */
    @Test
    public void orderIsBusinessTest() {
        // TODO: test orderIsBusiness
    }

    /**
     * Test the property 'orderIsPrime'
     */
    @Test
    public void orderIsPrimeTest() {
        // TODO: test orderIsPrime
    }

    /**
     * Test the property 'orderMarketPlaceChannel'
     */
    @Test
    public void orderMarketPlaceChannelTest() {
        // TODO: test orderMarketPlaceChannel
    }

    /**
     * Test the property 'orderOrderItemsSourceUri'
     */
    @Test
    public void orderOrderItemsSourceUriTest() {
        // TODO: test orderOrderItemsSourceUri
    }

    /**
     * Test the property 'orderOrderSourceUri'
     */
    @Test
    public void orderOrderSourceUriTest() {
        // TODO: test orderOrderSourceUri
    }

    /**
     * Test the property 'orderPayingUtcDate'
     */
    @Test
    public void orderPayingUtcDateTest() {
        // TODO: test orderPayingUtcDate
    }

    /**
     * Test the property 'orderPaymentMethod'
     */
    @Test
    public void orderPaymentMethodTest() {
        // TODO: test orderPaymentMethod
    }

    /**
     * Test the property 'orderShippingAddressCity'
     */
    @Test
    public void orderShippingAddressCityTest() {
        // TODO: test orderShippingAddressCity
    }

    /**
     * Test the property 'orderShippingAddressCountryIsoCodeAlpha2'
     */
    @Test
    public void orderShippingAddressCountryIsoCodeAlpha2Test() {
        // TODO: test orderShippingAddressCountryIsoCodeAlpha2
    }

    /**
     * Test the property 'orderShippingAddressCountryName'
     */
    @Test
    public void orderShippingAddressCountryNameTest() {
        // TODO: test orderShippingAddressCountryName
    }

    /**
     * Test the property 'orderShippingAddressLine1'
     */
    @Test
    public void orderShippingAddressLine1Test() {
        // TODO: test orderShippingAddressLine1
    }

    /**
     * Test the property 'orderShippingAddressLine2'
     */
    @Test
    public void orderShippingAddressLine2Test() {
        // TODO: test orderShippingAddressLine2
    }

    /**
     * Test the property 'orderShippingAddressLine3'
     */
    @Test
    public void orderShippingAddressLine3Test() {
        // TODO: test orderShippingAddressLine3
    }

    /**
     * Test the property 'orderShippingAddressName'
     */
    @Test
    public void orderShippingAddressNameTest() {
        // TODO: test orderShippingAddressName
    }

    /**
     * Test the property 'orderShippingAddressPostalCode'
     */
    @Test
    public void orderShippingAddressPostalCodeTest() {
        // TODO: test orderShippingAddressPostalCode
    }

    /**
     * Test the property 'orderShippingAddressStateOrRegion'
     */
    @Test
    public void orderShippingAddressStateOrRegionTest() {
        // TODO: test orderShippingAddressStateOrRegion
    }

    /**
     * Test the property 'orderShippingCivility'
     */
    @Test
    public void orderShippingCivilityTest() {
        // TODO: test orderShippingCivility
    }

    /**
     * Test the property 'orderShippingCompanyName'
     */
    @Test
    public void orderShippingCompanyNameTest() {
        // TODO: test orderShippingCompanyName
    }

    /**
     * Test the property 'orderShippingEarliestShipUtcDate'
     */
    @Test
    public void orderShippingEarliestShipUtcDateTest() {
        // TODO: test orderShippingEarliestShipUtcDate
    }

    /**
     * Test the property 'orderShippingEmail'
     */
    @Test
    public void orderShippingEmailTest() {
        // TODO: test orderShippingEmail
    }

    /**
     * Test the property 'orderShippingFirstName'
     */
    @Test
    public void orderShippingFirstNameTest() {
        // TODO: test orderShippingFirstName
    }

    /**
     * Test the property 'orderShippingLastName'
     */
    @Test
    public void orderShippingLastNameTest() {
        // TODO: test orderShippingLastName
    }

    /**
     * Test the property 'orderShippingLatestShipUtcDate'
     */
    @Test
    public void orderShippingLatestShipUtcDateTest() {
        // TODO: test orderShippingLatestShipUtcDate
    }

    /**
     * Test the property 'orderShippingMethod'
     */
    @Test
    public void orderShippingMethodTest() {
        // TODO: test orderShippingMethod
    }

    /**
     * Test the property 'orderShippingMobilePhone'
     */
    @Test
    public void orderShippingMobilePhoneTest() {
        // TODO: test orderShippingMobilePhone
    }

    /**
     * Test the property 'orderShippingPhone'
     */
    @Test
    public void orderShippingPhoneTest() {
        // TODO: test orderShippingPhone
    }

    /**
     * Test the property 'orderShippingPrice'
     */
    @Test
    public void orderShippingPriceTest() {
        // TODO: test orderShippingPrice
    }

    /**
     * Test the property 'orderShippingShippingTax'
     */
    @Test
    public void orderShippingShippingTaxTest() {
        // TODO: test orderShippingShippingTax
    }

    /**
     * Test the property 'orderTotalCommission'
     */
    @Test
    public void orderTotalCommissionTest() {
        // TODO: test orderTotalCommission
    }

    /**
     * Test the property 'orderTotalTax'
     */
    @Test
    public void orderTotalTaxTest() {
        // TODO: test orderTotalTax
    }

    /**
     * Test the property 'transitionLinks'
     */
    @Test
    public void transitionLinksTest() {
        // TODO: test transitionLinks
    }

}
