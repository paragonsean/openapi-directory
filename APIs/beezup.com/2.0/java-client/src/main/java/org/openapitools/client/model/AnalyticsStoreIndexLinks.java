/*
 * BeezUP Merchant API 
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: help@beezup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.LinksAnalyticsIndexLink;
import org.openapitools.client.model.LinksGetReportFiltersLink;
import org.openapitools.client.model.LinksGetRulesLink;
import org.openapitools.client.model.LinksGetStoreReportByCategoryLink;
import org.openapitools.client.model.LinksGetStoreReportByChannelLink;
import org.openapitools.client.model.LinksGetStoreReportByDayLink;
import org.openapitools.client.model.LinksGetStoreReportByProductLink;
import org.openapitools.client.model.LinksGetStoreTrackedClicksLink;
import org.openapitools.client.model.LinksGetStoreTrackedExternalOrdersLink;
import org.openapitools.client.model.LinksGetStoreTrackedOrdersLink;
import org.openapitools.client.model.LinksGetStoreTrackingStatusLink;
import org.openapitools.client.model.LinksOptimiseAllLink;
import org.openapitools.client.model.LinksOptimiseByCategoryLink;
import org.openapitools.client.model.LinksOptimiseByChannelLink;
import org.openapitools.client.model.LinksOptimiseByProductLink;
import org.openapitools.client.model.LinksOptimiseLink;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AnalyticsStoreIndexLinks
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:53.401769-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AnalyticsStoreIndexLinks {
  public static final String SERIALIZED_NAME_OPTIMISE = "optimise";
  @SerializedName(SERIALIZED_NAME_OPTIMISE)
  private LinksOptimiseLink optimise;

  public static final String SERIALIZED_NAME_OPTIMISE_ALL = "optimiseAll";
  @SerializedName(SERIALIZED_NAME_OPTIMISE_ALL)
  private LinksOptimiseAllLink optimiseAll;

  public static final String SERIALIZED_NAME_OPTIMISE_BY_CATEGORY = "optimiseByCategory";
  @SerializedName(SERIALIZED_NAME_OPTIMISE_BY_CATEGORY)
  private LinksOptimiseByCategoryLink optimiseByCategory;

  public static final String SERIALIZED_NAME_OPTIMISE_BY_CHANNEL = "optimiseByChannel";
  @SerializedName(SERIALIZED_NAME_OPTIMISE_BY_CHANNEL)
  private LinksOptimiseByChannelLink optimiseByChannel;

  public static final String SERIALIZED_NAME_OPTIMISE_BY_PRODUCT = "optimiseByProduct";
  @SerializedName(SERIALIZED_NAME_OPTIMISE_BY_PRODUCT)
  private LinksOptimiseByProductLink optimiseByProduct;

  public static final String SERIALIZED_NAME_REPORT_BY_CATEGORY = "reportByCategory";
  @SerializedName(SERIALIZED_NAME_REPORT_BY_CATEGORY)
  private LinksGetStoreReportByCategoryLink reportByCategory;

  public static final String SERIALIZED_NAME_REPORT_BY_CHANNEL = "reportByChannel";
  @SerializedName(SERIALIZED_NAME_REPORT_BY_CHANNEL)
  private LinksGetStoreReportByChannelLink reportByChannel;

  public static final String SERIALIZED_NAME_REPORT_BY_DAY = "reportByDay";
  @SerializedName(SERIALIZED_NAME_REPORT_BY_DAY)
  private LinksGetStoreReportByDayLink reportByDay;

  public static final String SERIALIZED_NAME_REPORT_BY_PRODUCT = "reportByProduct";
  @SerializedName(SERIALIZED_NAME_REPORT_BY_PRODUCT)
  private LinksGetStoreReportByProductLink reportByProduct;

  public static final String SERIALIZED_NAME_REPORT_FILTERS = "reportFilters";
  @SerializedName(SERIALIZED_NAME_REPORT_FILTERS)
  private LinksGetReportFiltersLink reportFilters;

  public static final String SERIALIZED_NAME_RULES = "rules";
  @SerializedName(SERIALIZED_NAME_RULES)
  private LinksGetRulesLink rules;

  public static final String SERIALIZED_NAME_SELF = "self";
  @SerializedName(SERIALIZED_NAME_SELF)
  private LinksAnalyticsIndexLink self;

  public static final String SERIALIZED_NAME_TRACKED_CLICKS = "trackedClicks";
  @SerializedName(SERIALIZED_NAME_TRACKED_CLICKS)
  private LinksGetStoreTrackedClicksLink trackedClicks;

  public static final String SERIALIZED_NAME_TRACKED_EXTERNAL_ORDERS = "trackedExternalOrders";
  @SerializedName(SERIALIZED_NAME_TRACKED_EXTERNAL_ORDERS)
  private LinksGetStoreTrackedExternalOrdersLink trackedExternalOrders;

  public static final String SERIALIZED_NAME_TRACKED_ORDERS = "trackedOrders";
  @SerializedName(SERIALIZED_NAME_TRACKED_ORDERS)
  private LinksGetStoreTrackedOrdersLink trackedOrders;

  public static final String SERIALIZED_NAME_TRACKING_STATUS = "trackingStatus";
  @SerializedName(SERIALIZED_NAME_TRACKING_STATUS)
  private LinksGetStoreTrackingStatusLink trackingStatus;

  public AnalyticsStoreIndexLinks() {
  }

  public AnalyticsStoreIndexLinks optimise(LinksOptimiseLink optimise) {
    this.optimise = optimise;
    return this;
  }

  /**
   * Get optimise
   * @return optimise
   */
  @javax.annotation.Nullable
  public LinksOptimiseLink getOptimise() {
    return optimise;
  }

  public void setOptimise(LinksOptimiseLink optimise) {
    this.optimise = optimise;
  }


  public AnalyticsStoreIndexLinks optimiseAll(LinksOptimiseAllLink optimiseAll) {
    this.optimiseAll = optimiseAll;
    return this;
  }

  /**
   * Get optimiseAll
   * @return optimiseAll
   */
  @javax.annotation.Nullable
  public LinksOptimiseAllLink getOptimiseAll() {
    return optimiseAll;
  }

  public void setOptimiseAll(LinksOptimiseAllLink optimiseAll) {
    this.optimiseAll = optimiseAll;
  }


  public AnalyticsStoreIndexLinks optimiseByCategory(LinksOptimiseByCategoryLink optimiseByCategory) {
    this.optimiseByCategory = optimiseByCategory;
    return this;
  }

  /**
   * Get optimiseByCategory
   * @return optimiseByCategory
   */
  @javax.annotation.Nullable
  public LinksOptimiseByCategoryLink getOptimiseByCategory() {
    return optimiseByCategory;
  }

  public void setOptimiseByCategory(LinksOptimiseByCategoryLink optimiseByCategory) {
    this.optimiseByCategory = optimiseByCategory;
  }


  public AnalyticsStoreIndexLinks optimiseByChannel(LinksOptimiseByChannelLink optimiseByChannel) {
    this.optimiseByChannel = optimiseByChannel;
    return this;
  }

  /**
   * Get optimiseByChannel
   * @return optimiseByChannel
   */
  @javax.annotation.Nullable
  public LinksOptimiseByChannelLink getOptimiseByChannel() {
    return optimiseByChannel;
  }

  public void setOptimiseByChannel(LinksOptimiseByChannelLink optimiseByChannel) {
    this.optimiseByChannel = optimiseByChannel;
  }


  public AnalyticsStoreIndexLinks optimiseByProduct(LinksOptimiseByProductLink optimiseByProduct) {
    this.optimiseByProduct = optimiseByProduct;
    return this;
  }

  /**
   * Get optimiseByProduct
   * @return optimiseByProduct
   */
  @javax.annotation.Nullable
  public LinksOptimiseByProductLink getOptimiseByProduct() {
    return optimiseByProduct;
  }

  public void setOptimiseByProduct(LinksOptimiseByProductLink optimiseByProduct) {
    this.optimiseByProduct = optimiseByProduct;
  }


  public AnalyticsStoreIndexLinks reportByCategory(LinksGetStoreReportByCategoryLink reportByCategory) {
    this.reportByCategory = reportByCategory;
    return this;
  }

  /**
   * Get reportByCategory
   * @return reportByCategory
   */
  @javax.annotation.Nullable
  public LinksGetStoreReportByCategoryLink getReportByCategory() {
    return reportByCategory;
  }

  public void setReportByCategory(LinksGetStoreReportByCategoryLink reportByCategory) {
    this.reportByCategory = reportByCategory;
  }


  public AnalyticsStoreIndexLinks reportByChannel(LinksGetStoreReportByChannelLink reportByChannel) {
    this.reportByChannel = reportByChannel;
    return this;
  }

  /**
   * Get reportByChannel
   * @return reportByChannel
   */
  @javax.annotation.Nullable
  public LinksGetStoreReportByChannelLink getReportByChannel() {
    return reportByChannel;
  }

  public void setReportByChannel(LinksGetStoreReportByChannelLink reportByChannel) {
    this.reportByChannel = reportByChannel;
  }


  public AnalyticsStoreIndexLinks reportByDay(LinksGetStoreReportByDayLink reportByDay) {
    this.reportByDay = reportByDay;
    return this;
  }

  /**
   * Get reportByDay
   * @return reportByDay
   */
  @javax.annotation.Nullable
  public LinksGetStoreReportByDayLink getReportByDay() {
    return reportByDay;
  }

  public void setReportByDay(LinksGetStoreReportByDayLink reportByDay) {
    this.reportByDay = reportByDay;
  }


  public AnalyticsStoreIndexLinks reportByProduct(LinksGetStoreReportByProductLink reportByProduct) {
    this.reportByProduct = reportByProduct;
    return this;
  }

  /**
   * Get reportByProduct
   * @return reportByProduct
   */
  @javax.annotation.Nullable
  public LinksGetStoreReportByProductLink getReportByProduct() {
    return reportByProduct;
  }

  public void setReportByProduct(LinksGetStoreReportByProductLink reportByProduct) {
    this.reportByProduct = reportByProduct;
  }


  public AnalyticsStoreIndexLinks reportFilters(LinksGetReportFiltersLink reportFilters) {
    this.reportFilters = reportFilters;
    return this;
  }

  /**
   * Get reportFilters
   * @return reportFilters
   */
  @javax.annotation.Nonnull
  public LinksGetReportFiltersLink getReportFilters() {
    return reportFilters;
  }

  public void setReportFilters(LinksGetReportFiltersLink reportFilters) {
    this.reportFilters = reportFilters;
  }


  public AnalyticsStoreIndexLinks rules(LinksGetRulesLink rules) {
    this.rules = rules;
    return this;
  }

  /**
   * Get rules
   * @return rules
   */
  @javax.annotation.Nullable
  public LinksGetRulesLink getRules() {
    return rules;
  }

  public void setRules(LinksGetRulesLink rules) {
    this.rules = rules;
  }


  public AnalyticsStoreIndexLinks self(LinksAnalyticsIndexLink self) {
    this.self = self;
    return this;
  }

  /**
   * Get self
   * @return self
   */
  @javax.annotation.Nonnull
  public LinksAnalyticsIndexLink getSelf() {
    return self;
  }

  public void setSelf(LinksAnalyticsIndexLink self) {
    this.self = self;
  }


  public AnalyticsStoreIndexLinks trackedClicks(LinksGetStoreTrackedClicksLink trackedClicks) {
    this.trackedClicks = trackedClicks;
    return this;
  }

  /**
   * Get trackedClicks
   * @return trackedClicks
   */
  @javax.annotation.Nonnull
  public LinksGetStoreTrackedClicksLink getTrackedClicks() {
    return trackedClicks;
  }

  public void setTrackedClicks(LinksGetStoreTrackedClicksLink trackedClicks) {
    this.trackedClicks = trackedClicks;
  }


  public AnalyticsStoreIndexLinks trackedExternalOrders(LinksGetStoreTrackedExternalOrdersLink trackedExternalOrders) {
    this.trackedExternalOrders = trackedExternalOrders;
    return this;
  }

  /**
   * Get trackedExternalOrders
   * @return trackedExternalOrders
   */
  @javax.annotation.Nullable
  public LinksGetStoreTrackedExternalOrdersLink getTrackedExternalOrders() {
    return trackedExternalOrders;
  }

  public void setTrackedExternalOrders(LinksGetStoreTrackedExternalOrdersLink trackedExternalOrders) {
    this.trackedExternalOrders = trackedExternalOrders;
  }


  public AnalyticsStoreIndexLinks trackedOrders(LinksGetStoreTrackedOrdersLink trackedOrders) {
    this.trackedOrders = trackedOrders;
    return this;
  }

  /**
   * Get trackedOrders
   * @return trackedOrders
   */
  @javax.annotation.Nonnull
  public LinksGetStoreTrackedOrdersLink getTrackedOrders() {
    return trackedOrders;
  }

  public void setTrackedOrders(LinksGetStoreTrackedOrdersLink trackedOrders) {
    this.trackedOrders = trackedOrders;
  }


  public AnalyticsStoreIndexLinks trackingStatus(LinksGetStoreTrackingStatusLink trackingStatus) {
    this.trackingStatus = trackingStatus;
    return this;
  }

  /**
   * Get trackingStatus
   * @return trackingStatus
   */
  @javax.annotation.Nonnull
  public LinksGetStoreTrackingStatusLink getTrackingStatus() {
    return trackingStatus;
  }

  public void setTrackingStatus(LinksGetStoreTrackingStatusLink trackingStatus) {
    this.trackingStatus = trackingStatus;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AnalyticsStoreIndexLinks analyticsStoreIndexLinks = (AnalyticsStoreIndexLinks) o;
    return Objects.equals(this.optimise, analyticsStoreIndexLinks.optimise) &&
        Objects.equals(this.optimiseAll, analyticsStoreIndexLinks.optimiseAll) &&
        Objects.equals(this.optimiseByCategory, analyticsStoreIndexLinks.optimiseByCategory) &&
        Objects.equals(this.optimiseByChannel, analyticsStoreIndexLinks.optimiseByChannel) &&
        Objects.equals(this.optimiseByProduct, analyticsStoreIndexLinks.optimiseByProduct) &&
        Objects.equals(this.reportByCategory, analyticsStoreIndexLinks.reportByCategory) &&
        Objects.equals(this.reportByChannel, analyticsStoreIndexLinks.reportByChannel) &&
        Objects.equals(this.reportByDay, analyticsStoreIndexLinks.reportByDay) &&
        Objects.equals(this.reportByProduct, analyticsStoreIndexLinks.reportByProduct) &&
        Objects.equals(this.reportFilters, analyticsStoreIndexLinks.reportFilters) &&
        Objects.equals(this.rules, analyticsStoreIndexLinks.rules) &&
        Objects.equals(this.self, analyticsStoreIndexLinks.self) &&
        Objects.equals(this.trackedClicks, analyticsStoreIndexLinks.trackedClicks) &&
        Objects.equals(this.trackedExternalOrders, analyticsStoreIndexLinks.trackedExternalOrders) &&
        Objects.equals(this.trackedOrders, analyticsStoreIndexLinks.trackedOrders) &&
        Objects.equals(this.trackingStatus, analyticsStoreIndexLinks.trackingStatus);
  }

  @Override
  public int hashCode() {
    return Objects.hash(optimise, optimiseAll, optimiseByCategory, optimiseByChannel, optimiseByProduct, reportByCategory, reportByChannel, reportByDay, reportByProduct, reportFilters, rules, self, trackedClicks, trackedExternalOrders, trackedOrders, trackingStatus);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AnalyticsStoreIndexLinks {\n");
    sb.append("    optimise: ").append(toIndentedString(optimise)).append("\n");
    sb.append("    optimiseAll: ").append(toIndentedString(optimiseAll)).append("\n");
    sb.append("    optimiseByCategory: ").append(toIndentedString(optimiseByCategory)).append("\n");
    sb.append("    optimiseByChannel: ").append(toIndentedString(optimiseByChannel)).append("\n");
    sb.append("    optimiseByProduct: ").append(toIndentedString(optimiseByProduct)).append("\n");
    sb.append("    reportByCategory: ").append(toIndentedString(reportByCategory)).append("\n");
    sb.append("    reportByChannel: ").append(toIndentedString(reportByChannel)).append("\n");
    sb.append("    reportByDay: ").append(toIndentedString(reportByDay)).append("\n");
    sb.append("    reportByProduct: ").append(toIndentedString(reportByProduct)).append("\n");
    sb.append("    reportFilters: ").append(toIndentedString(reportFilters)).append("\n");
    sb.append("    rules: ").append(toIndentedString(rules)).append("\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("    trackedClicks: ").append(toIndentedString(trackedClicks)).append("\n");
    sb.append("    trackedExternalOrders: ").append(toIndentedString(trackedExternalOrders)).append("\n");
    sb.append("    trackedOrders: ").append(toIndentedString(trackedOrders)).append("\n");
    sb.append("    trackingStatus: ").append(toIndentedString(trackingStatus)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("optimise");
    openapiFields.add("optimiseAll");
    openapiFields.add("optimiseByCategory");
    openapiFields.add("optimiseByChannel");
    openapiFields.add("optimiseByProduct");
    openapiFields.add("reportByCategory");
    openapiFields.add("reportByChannel");
    openapiFields.add("reportByDay");
    openapiFields.add("reportByProduct");
    openapiFields.add("reportFilters");
    openapiFields.add("rules");
    openapiFields.add("self");
    openapiFields.add("trackedClicks");
    openapiFields.add("trackedExternalOrders");
    openapiFields.add("trackedOrders");
    openapiFields.add("trackingStatus");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("reportFilters");
    openapiRequiredFields.add("self");
    openapiRequiredFields.add("trackedClicks");
    openapiRequiredFields.add("trackedOrders");
    openapiRequiredFields.add("trackingStatus");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AnalyticsStoreIndexLinks
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AnalyticsStoreIndexLinks.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AnalyticsStoreIndexLinks is not found in the empty JSON string", AnalyticsStoreIndexLinks.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AnalyticsStoreIndexLinks.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AnalyticsStoreIndexLinks` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AnalyticsStoreIndexLinks.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `optimise`
      if (jsonObj.get("optimise") != null && !jsonObj.get("optimise").isJsonNull()) {
        LinksOptimiseLink.validateJsonElement(jsonObj.get("optimise"));
      }
      // validate the optional field `optimiseAll`
      if (jsonObj.get("optimiseAll") != null && !jsonObj.get("optimiseAll").isJsonNull()) {
        LinksOptimiseAllLink.validateJsonElement(jsonObj.get("optimiseAll"));
      }
      // validate the optional field `optimiseByCategory`
      if (jsonObj.get("optimiseByCategory") != null && !jsonObj.get("optimiseByCategory").isJsonNull()) {
        LinksOptimiseByCategoryLink.validateJsonElement(jsonObj.get("optimiseByCategory"));
      }
      // validate the optional field `optimiseByChannel`
      if (jsonObj.get("optimiseByChannel") != null && !jsonObj.get("optimiseByChannel").isJsonNull()) {
        LinksOptimiseByChannelLink.validateJsonElement(jsonObj.get("optimiseByChannel"));
      }
      // validate the optional field `optimiseByProduct`
      if (jsonObj.get("optimiseByProduct") != null && !jsonObj.get("optimiseByProduct").isJsonNull()) {
        LinksOptimiseByProductLink.validateJsonElement(jsonObj.get("optimiseByProduct"));
      }
      // validate the optional field `reportByCategory`
      if (jsonObj.get("reportByCategory") != null && !jsonObj.get("reportByCategory").isJsonNull()) {
        LinksGetStoreReportByCategoryLink.validateJsonElement(jsonObj.get("reportByCategory"));
      }
      // validate the optional field `reportByChannel`
      if (jsonObj.get("reportByChannel") != null && !jsonObj.get("reportByChannel").isJsonNull()) {
        LinksGetStoreReportByChannelLink.validateJsonElement(jsonObj.get("reportByChannel"));
      }
      // validate the optional field `reportByDay`
      if (jsonObj.get("reportByDay") != null && !jsonObj.get("reportByDay").isJsonNull()) {
        LinksGetStoreReportByDayLink.validateJsonElement(jsonObj.get("reportByDay"));
      }
      // validate the optional field `reportByProduct`
      if (jsonObj.get("reportByProduct") != null && !jsonObj.get("reportByProduct").isJsonNull()) {
        LinksGetStoreReportByProductLink.validateJsonElement(jsonObj.get("reportByProduct"));
      }
      // validate the required field `reportFilters`
      LinksGetReportFiltersLink.validateJsonElement(jsonObj.get("reportFilters"));
      // validate the optional field `rules`
      if (jsonObj.get("rules") != null && !jsonObj.get("rules").isJsonNull()) {
        LinksGetRulesLink.validateJsonElement(jsonObj.get("rules"));
      }
      // validate the required field `self`
      LinksAnalyticsIndexLink.validateJsonElement(jsonObj.get("self"));
      // validate the required field `trackedClicks`
      LinksGetStoreTrackedClicksLink.validateJsonElement(jsonObj.get("trackedClicks"));
      // validate the optional field `trackedExternalOrders`
      if (jsonObj.get("trackedExternalOrders") != null && !jsonObj.get("trackedExternalOrders").isJsonNull()) {
        LinksGetStoreTrackedExternalOrdersLink.validateJsonElement(jsonObj.get("trackedExternalOrders"));
      }
      // validate the required field `trackedOrders`
      LinksGetStoreTrackedOrdersLink.validateJsonElement(jsonObj.get("trackedOrders"));
      // validate the required field `trackingStatus`
      LinksGetStoreTrackingStatusLink.validateJsonElement(jsonObj.get("trackingStatus"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AnalyticsStoreIndexLinks.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AnalyticsStoreIndexLinks' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AnalyticsStoreIndexLinks> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AnalyticsStoreIndexLinks.class));

       return (TypeAdapter<T>) new TypeAdapter<AnalyticsStoreIndexLinks>() {
           @Override
           public void write(JsonWriter out, AnalyticsStoreIndexLinks value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AnalyticsStoreIndexLinks read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AnalyticsStoreIndexLinks given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AnalyticsStoreIndexLinks
   * @throws IOException if the JSON string is invalid with respect to AnalyticsStoreIndexLinks
   */
  public static AnalyticsStoreIndexLinks fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AnalyticsStoreIndexLinks.class);
  }

  /**
   * Convert an instance of AnalyticsStoreIndexLinks to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

