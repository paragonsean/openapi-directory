/*
 * BeezUP Merchant API 
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: help@beezup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ExternalLinksGetChannelCatalogMarketplaceSettingsLink;
import org.openapitools.client.model.ExternalLinksGetChannelInfoLink;
import org.openapitools.client.model.LinksConfigureChannelCatalogColumnMappingsLink;
import org.openapitools.client.model.LinksConfigureChannelCatalogCostSettingsLink;
import org.openapitools.client.model.LinksConfigureChannelCatalogGeneralSettingsLink;
import org.openapitools.client.model.LinksDeleteChannelCatalogLink;
import org.openapitools.client.model.LinksDisableChannelCatalogCategoryMappingLink;
import org.openapitools.client.model.LinksDisableChannelCatalogLink;
import org.openapitools.client.model.LinksEnableChannelCatalogLink;
import org.openapitools.client.model.LinksGetChannelCatalogCategoriesLink;
import org.openapitools.client.model.LinksGetChannelCatalogExclusionFiltersLink;
import org.openapitools.client.model.LinksGetChannelCatalogExportationCacheInfoLink;
import org.openapitools.client.model.LinksGetChannelCatalogLink;
import org.openapitools.client.model.LinksGetChannelCatalogProductInfoListLink;
import org.openapitools.client.model.LinksReenableChannelCatalogCategoryMappingLink;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Indicates the actions you can do on a channel catalog
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:53.401769-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ChannelCatalogLinks {
  public static final String SERIALIZED_NAME_CATEGORY_MAPPINGS = "categoryMappings";
  @SerializedName(SERIALIZED_NAME_CATEGORY_MAPPINGS)
  private LinksGetChannelCatalogCategoriesLink categoryMappings;

  public static final String SERIALIZED_NAME_CHANNEL_INFO = "channelInfo";
  @SerializedName(SERIALIZED_NAME_CHANNEL_INFO)
  private ExternalLinksGetChannelInfoLink channelInfo;

  public static final String SERIALIZED_NAME_CONFIGURE_COLUMN_MAPPINGS = "configureColumnMappings";
  @SerializedName(SERIALIZED_NAME_CONFIGURE_COLUMN_MAPPINGS)
  private LinksConfigureChannelCatalogColumnMappingsLink configureColumnMappings;

  public static final String SERIALIZED_NAME_CONFIGURE_COST_SETTINGS = "configureCostSettings";
  @SerializedName(SERIALIZED_NAME_CONFIGURE_COST_SETTINGS)
  private LinksConfigureChannelCatalogCostSettingsLink configureCostSettings;

  public static final String SERIALIZED_NAME_CONFIGURE_GENERAL_SETTINGS = "configureGeneralSettings";
  @SerializedName(SERIALIZED_NAME_CONFIGURE_GENERAL_SETTINGS)
  private LinksConfigureChannelCatalogGeneralSettingsLink configureGeneralSettings;

  public static final String SERIALIZED_NAME_DELETE = "delete";
  @SerializedName(SERIALIZED_NAME_DELETE)
  private LinksDeleteChannelCatalogLink delete;

  public static final String SERIALIZED_NAME_DISABLE = "disable";
  @SerializedName(SERIALIZED_NAME_DISABLE)
  private LinksDisableChannelCatalogLink disable;

  public static final String SERIALIZED_NAME_DISABLE_CATEGORY_MAPPINGS = "disableCategoryMappings";
  @SerializedName(SERIALIZED_NAME_DISABLE_CATEGORY_MAPPINGS)
  private LinksDisableChannelCatalogCategoryMappingLink disableCategoryMappings;

  public static final String SERIALIZED_NAME_ENABLE = "enable";
  @SerializedName(SERIALIZED_NAME_ENABLE)
  private LinksEnableChannelCatalogLink enable;

  public static final String SERIALIZED_NAME_EXCLUSION_FILTERS = "exclusionFilters";
  @SerializedName(SERIALIZED_NAME_EXCLUSION_FILTERS)
  private LinksGetChannelCatalogExclusionFiltersLink exclusionFilters;

  public static final String SERIALIZED_NAME_EXPORTATION_CACHE_INFO = "exportationCacheInfo";
  @SerializedName(SERIALIZED_NAME_EXPORTATION_CACHE_INFO)
  private LinksGetChannelCatalogExportationCacheInfoLink exportationCacheInfo;

  public static final String SERIALIZED_NAME_MARKETPLACE_SETTINGS = "marketplaceSettings";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_SETTINGS)
  private ExternalLinksGetChannelCatalogMarketplaceSettingsLink marketplaceSettings;

  public static final String SERIALIZED_NAME_PRODUCTS = "products";
  @SerializedName(SERIALIZED_NAME_PRODUCTS)
  private LinksGetChannelCatalogProductInfoListLink products;

  public static final String SERIALIZED_NAME_REENABLE_CATEGORY_MAPPINGS = "reenableCategoryMappings";
  @SerializedName(SERIALIZED_NAME_REENABLE_CATEGORY_MAPPINGS)
  private LinksReenableChannelCatalogCategoryMappingLink reenableCategoryMappings;

  public static final String SERIALIZED_NAME_SELF = "self";
  @SerializedName(SERIALIZED_NAME_SELF)
  private LinksGetChannelCatalogLink self;

  public ChannelCatalogLinks() {
  }

  public ChannelCatalogLinks categoryMappings(LinksGetChannelCatalogCategoriesLink categoryMappings) {
    this.categoryMappings = categoryMappings;
    return this;
  }

  /**
   * Get categoryMappings
   * @return categoryMappings
   */
  @javax.annotation.Nullable
  public LinksGetChannelCatalogCategoriesLink getCategoryMappings() {
    return categoryMappings;
  }

  public void setCategoryMappings(LinksGetChannelCatalogCategoriesLink categoryMappings) {
    this.categoryMappings = categoryMappings;
  }


  public ChannelCatalogLinks channelInfo(ExternalLinksGetChannelInfoLink channelInfo) {
    this.channelInfo = channelInfo;
    return this;
  }

  /**
   * Get channelInfo
   * @return channelInfo
   */
  @javax.annotation.Nullable
  public ExternalLinksGetChannelInfoLink getChannelInfo() {
    return channelInfo;
  }

  public void setChannelInfo(ExternalLinksGetChannelInfoLink channelInfo) {
    this.channelInfo = channelInfo;
  }


  public ChannelCatalogLinks configureColumnMappings(LinksConfigureChannelCatalogColumnMappingsLink configureColumnMappings) {
    this.configureColumnMappings = configureColumnMappings;
    return this;
  }

  /**
   * Get configureColumnMappings
   * @return configureColumnMappings
   */
  @javax.annotation.Nullable
  public LinksConfigureChannelCatalogColumnMappingsLink getConfigureColumnMappings() {
    return configureColumnMappings;
  }

  public void setConfigureColumnMappings(LinksConfigureChannelCatalogColumnMappingsLink configureColumnMappings) {
    this.configureColumnMappings = configureColumnMappings;
  }


  public ChannelCatalogLinks configureCostSettings(LinksConfigureChannelCatalogCostSettingsLink configureCostSettings) {
    this.configureCostSettings = configureCostSettings;
    return this;
  }

  /**
   * Get configureCostSettings
   * @return configureCostSettings
   */
  @javax.annotation.Nullable
  public LinksConfigureChannelCatalogCostSettingsLink getConfigureCostSettings() {
    return configureCostSettings;
  }

  public void setConfigureCostSettings(LinksConfigureChannelCatalogCostSettingsLink configureCostSettings) {
    this.configureCostSettings = configureCostSettings;
  }


  public ChannelCatalogLinks configureGeneralSettings(LinksConfigureChannelCatalogGeneralSettingsLink configureGeneralSettings) {
    this.configureGeneralSettings = configureGeneralSettings;
    return this;
  }

  /**
   * Get configureGeneralSettings
   * @return configureGeneralSettings
   */
  @javax.annotation.Nullable
  public LinksConfigureChannelCatalogGeneralSettingsLink getConfigureGeneralSettings() {
    return configureGeneralSettings;
  }

  public void setConfigureGeneralSettings(LinksConfigureChannelCatalogGeneralSettingsLink configureGeneralSettings) {
    this.configureGeneralSettings = configureGeneralSettings;
  }


  public ChannelCatalogLinks delete(LinksDeleteChannelCatalogLink delete) {
    this.delete = delete;
    return this;
  }

  /**
   * Get delete
   * @return delete
   */
  @javax.annotation.Nullable
  public LinksDeleteChannelCatalogLink getDelete() {
    return delete;
  }

  public void setDelete(LinksDeleteChannelCatalogLink delete) {
    this.delete = delete;
  }


  public ChannelCatalogLinks disable(LinksDisableChannelCatalogLink disable) {
    this.disable = disable;
    return this;
  }

  /**
   * Get disable
   * @return disable
   */
  @javax.annotation.Nullable
  public LinksDisableChannelCatalogLink getDisable() {
    return disable;
  }

  public void setDisable(LinksDisableChannelCatalogLink disable) {
    this.disable = disable;
  }


  public ChannelCatalogLinks disableCategoryMappings(LinksDisableChannelCatalogCategoryMappingLink disableCategoryMappings) {
    this.disableCategoryMappings = disableCategoryMappings;
    return this;
  }

  /**
   * Get disableCategoryMappings
   * @return disableCategoryMappings
   */
  @javax.annotation.Nullable
  public LinksDisableChannelCatalogCategoryMappingLink getDisableCategoryMappings() {
    return disableCategoryMappings;
  }

  public void setDisableCategoryMappings(LinksDisableChannelCatalogCategoryMappingLink disableCategoryMappings) {
    this.disableCategoryMappings = disableCategoryMappings;
  }


  public ChannelCatalogLinks enable(LinksEnableChannelCatalogLink enable) {
    this.enable = enable;
    return this;
  }

  /**
   * Get enable
   * @return enable
   */
  @javax.annotation.Nullable
  public LinksEnableChannelCatalogLink getEnable() {
    return enable;
  }

  public void setEnable(LinksEnableChannelCatalogLink enable) {
    this.enable = enable;
  }


  public ChannelCatalogLinks exclusionFilters(LinksGetChannelCatalogExclusionFiltersLink exclusionFilters) {
    this.exclusionFilters = exclusionFilters;
    return this;
  }

  /**
   * Get exclusionFilters
   * @return exclusionFilters
   */
  @javax.annotation.Nullable
  public LinksGetChannelCatalogExclusionFiltersLink getExclusionFilters() {
    return exclusionFilters;
  }

  public void setExclusionFilters(LinksGetChannelCatalogExclusionFiltersLink exclusionFilters) {
    this.exclusionFilters = exclusionFilters;
  }


  public ChannelCatalogLinks exportationCacheInfo(LinksGetChannelCatalogExportationCacheInfoLink exportationCacheInfo) {
    this.exportationCacheInfo = exportationCacheInfo;
    return this;
  }

  /**
   * Get exportationCacheInfo
   * @return exportationCacheInfo
   */
  @javax.annotation.Nullable
  public LinksGetChannelCatalogExportationCacheInfoLink getExportationCacheInfo() {
    return exportationCacheInfo;
  }

  public void setExportationCacheInfo(LinksGetChannelCatalogExportationCacheInfoLink exportationCacheInfo) {
    this.exportationCacheInfo = exportationCacheInfo;
  }


  public ChannelCatalogLinks marketplaceSettings(ExternalLinksGetChannelCatalogMarketplaceSettingsLink marketplaceSettings) {
    this.marketplaceSettings = marketplaceSettings;
    return this;
  }

  /**
   * Get marketplaceSettings
   * @return marketplaceSettings
   */
  @javax.annotation.Nullable
  public ExternalLinksGetChannelCatalogMarketplaceSettingsLink getMarketplaceSettings() {
    return marketplaceSettings;
  }

  public void setMarketplaceSettings(ExternalLinksGetChannelCatalogMarketplaceSettingsLink marketplaceSettings) {
    this.marketplaceSettings = marketplaceSettings;
  }


  public ChannelCatalogLinks products(LinksGetChannelCatalogProductInfoListLink products) {
    this.products = products;
    return this;
  }

  /**
   * Get products
   * @return products
   */
  @javax.annotation.Nullable
  public LinksGetChannelCatalogProductInfoListLink getProducts() {
    return products;
  }

  public void setProducts(LinksGetChannelCatalogProductInfoListLink products) {
    this.products = products;
  }


  public ChannelCatalogLinks reenableCategoryMappings(LinksReenableChannelCatalogCategoryMappingLink reenableCategoryMappings) {
    this.reenableCategoryMappings = reenableCategoryMappings;
    return this;
  }

  /**
   * Get reenableCategoryMappings
   * @return reenableCategoryMappings
   */
  @javax.annotation.Nullable
  public LinksReenableChannelCatalogCategoryMappingLink getReenableCategoryMappings() {
    return reenableCategoryMappings;
  }

  public void setReenableCategoryMappings(LinksReenableChannelCatalogCategoryMappingLink reenableCategoryMappings) {
    this.reenableCategoryMappings = reenableCategoryMappings;
  }


  public ChannelCatalogLinks self(LinksGetChannelCatalogLink self) {
    this.self = self;
    return this;
  }

  /**
   * Get self
   * @return self
   */
  @javax.annotation.Nonnull
  public LinksGetChannelCatalogLink getSelf() {
    return self;
  }

  public void setSelf(LinksGetChannelCatalogLink self) {
    this.self = self;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChannelCatalogLinks channelCatalogLinks = (ChannelCatalogLinks) o;
    return Objects.equals(this.categoryMappings, channelCatalogLinks.categoryMappings) &&
        Objects.equals(this.channelInfo, channelCatalogLinks.channelInfo) &&
        Objects.equals(this.configureColumnMappings, channelCatalogLinks.configureColumnMappings) &&
        Objects.equals(this.configureCostSettings, channelCatalogLinks.configureCostSettings) &&
        Objects.equals(this.configureGeneralSettings, channelCatalogLinks.configureGeneralSettings) &&
        Objects.equals(this.delete, channelCatalogLinks.delete) &&
        Objects.equals(this.disable, channelCatalogLinks.disable) &&
        Objects.equals(this.disableCategoryMappings, channelCatalogLinks.disableCategoryMappings) &&
        Objects.equals(this.enable, channelCatalogLinks.enable) &&
        Objects.equals(this.exclusionFilters, channelCatalogLinks.exclusionFilters) &&
        Objects.equals(this.exportationCacheInfo, channelCatalogLinks.exportationCacheInfo) &&
        Objects.equals(this.marketplaceSettings, channelCatalogLinks.marketplaceSettings) &&
        Objects.equals(this.products, channelCatalogLinks.products) &&
        Objects.equals(this.reenableCategoryMappings, channelCatalogLinks.reenableCategoryMappings) &&
        Objects.equals(this.self, channelCatalogLinks.self);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryMappings, channelInfo, configureColumnMappings, configureCostSettings, configureGeneralSettings, delete, disable, disableCategoryMappings, enable, exclusionFilters, exportationCacheInfo, marketplaceSettings, products, reenableCategoryMappings, self);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChannelCatalogLinks {\n");
    sb.append("    categoryMappings: ").append(toIndentedString(categoryMappings)).append("\n");
    sb.append("    channelInfo: ").append(toIndentedString(channelInfo)).append("\n");
    sb.append("    configureColumnMappings: ").append(toIndentedString(configureColumnMappings)).append("\n");
    sb.append("    configureCostSettings: ").append(toIndentedString(configureCostSettings)).append("\n");
    sb.append("    configureGeneralSettings: ").append(toIndentedString(configureGeneralSettings)).append("\n");
    sb.append("    delete: ").append(toIndentedString(delete)).append("\n");
    sb.append("    disable: ").append(toIndentedString(disable)).append("\n");
    sb.append("    disableCategoryMappings: ").append(toIndentedString(disableCategoryMappings)).append("\n");
    sb.append("    enable: ").append(toIndentedString(enable)).append("\n");
    sb.append("    exclusionFilters: ").append(toIndentedString(exclusionFilters)).append("\n");
    sb.append("    exportationCacheInfo: ").append(toIndentedString(exportationCacheInfo)).append("\n");
    sb.append("    marketplaceSettings: ").append(toIndentedString(marketplaceSettings)).append("\n");
    sb.append("    products: ").append(toIndentedString(products)).append("\n");
    sb.append("    reenableCategoryMappings: ").append(toIndentedString(reenableCategoryMappings)).append("\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("categoryMappings");
    openapiFields.add("channelInfo");
    openapiFields.add("configureColumnMappings");
    openapiFields.add("configureCostSettings");
    openapiFields.add("configureGeneralSettings");
    openapiFields.add("delete");
    openapiFields.add("disable");
    openapiFields.add("disableCategoryMappings");
    openapiFields.add("enable");
    openapiFields.add("exclusionFilters");
    openapiFields.add("exportationCacheInfo");
    openapiFields.add("marketplaceSettings");
    openapiFields.add("products");
    openapiFields.add("reenableCategoryMappings");
    openapiFields.add("self");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("self");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ChannelCatalogLinks
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ChannelCatalogLinks.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ChannelCatalogLinks is not found in the empty JSON string", ChannelCatalogLinks.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ChannelCatalogLinks.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ChannelCatalogLinks` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ChannelCatalogLinks.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `categoryMappings`
      if (jsonObj.get("categoryMappings") != null && !jsonObj.get("categoryMappings").isJsonNull()) {
        LinksGetChannelCatalogCategoriesLink.validateJsonElement(jsonObj.get("categoryMappings"));
      }
      // validate the optional field `channelInfo`
      if (jsonObj.get("channelInfo") != null && !jsonObj.get("channelInfo").isJsonNull()) {
        ExternalLinksGetChannelInfoLink.validateJsonElement(jsonObj.get("channelInfo"));
      }
      // validate the optional field `configureColumnMappings`
      if (jsonObj.get("configureColumnMappings") != null && !jsonObj.get("configureColumnMappings").isJsonNull()) {
        LinksConfigureChannelCatalogColumnMappingsLink.validateJsonElement(jsonObj.get("configureColumnMappings"));
      }
      // validate the optional field `configureCostSettings`
      if (jsonObj.get("configureCostSettings") != null && !jsonObj.get("configureCostSettings").isJsonNull()) {
        LinksConfigureChannelCatalogCostSettingsLink.validateJsonElement(jsonObj.get("configureCostSettings"));
      }
      // validate the optional field `configureGeneralSettings`
      if (jsonObj.get("configureGeneralSettings") != null && !jsonObj.get("configureGeneralSettings").isJsonNull()) {
        LinksConfigureChannelCatalogGeneralSettingsLink.validateJsonElement(jsonObj.get("configureGeneralSettings"));
      }
      // validate the optional field `delete`
      if (jsonObj.get("delete") != null && !jsonObj.get("delete").isJsonNull()) {
        LinksDeleteChannelCatalogLink.validateJsonElement(jsonObj.get("delete"));
      }
      // validate the optional field `disable`
      if (jsonObj.get("disable") != null && !jsonObj.get("disable").isJsonNull()) {
        LinksDisableChannelCatalogLink.validateJsonElement(jsonObj.get("disable"));
      }
      // validate the optional field `disableCategoryMappings`
      if (jsonObj.get("disableCategoryMappings") != null && !jsonObj.get("disableCategoryMappings").isJsonNull()) {
        LinksDisableChannelCatalogCategoryMappingLink.validateJsonElement(jsonObj.get("disableCategoryMappings"));
      }
      // validate the optional field `enable`
      if (jsonObj.get("enable") != null && !jsonObj.get("enable").isJsonNull()) {
        LinksEnableChannelCatalogLink.validateJsonElement(jsonObj.get("enable"));
      }
      // validate the optional field `exclusionFilters`
      if (jsonObj.get("exclusionFilters") != null && !jsonObj.get("exclusionFilters").isJsonNull()) {
        LinksGetChannelCatalogExclusionFiltersLink.validateJsonElement(jsonObj.get("exclusionFilters"));
      }
      // validate the optional field `exportationCacheInfo`
      if (jsonObj.get("exportationCacheInfo") != null && !jsonObj.get("exportationCacheInfo").isJsonNull()) {
        LinksGetChannelCatalogExportationCacheInfoLink.validateJsonElement(jsonObj.get("exportationCacheInfo"));
      }
      // validate the optional field `marketplaceSettings`
      if (jsonObj.get("marketplaceSettings") != null && !jsonObj.get("marketplaceSettings").isJsonNull()) {
        ExternalLinksGetChannelCatalogMarketplaceSettingsLink.validateJsonElement(jsonObj.get("marketplaceSettings"));
      }
      // validate the optional field `products`
      if (jsonObj.get("products") != null && !jsonObj.get("products").isJsonNull()) {
        LinksGetChannelCatalogProductInfoListLink.validateJsonElement(jsonObj.get("products"));
      }
      // validate the optional field `reenableCategoryMappings`
      if (jsonObj.get("reenableCategoryMappings") != null && !jsonObj.get("reenableCategoryMappings").isJsonNull()) {
        LinksReenableChannelCatalogCategoryMappingLink.validateJsonElement(jsonObj.get("reenableCategoryMappings"));
      }
      // validate the required field `self`
      LinksGetChannelCatalogLink.validateJsonElement(jsonObj.get("self"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ChannelCatalogLinks.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ChannelCatalogLinks' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ChannelCatalogLinks> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ChannelCatalogLinks.class));

       return (TypeAdapter<T>) new TypeAdapter<ChannelCatalogLinks>() {
           @Override
           public void write(JsonWriter out, ChannelCatalogLinks value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ChannelCatalogLinks read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ChannelCatalogLinks given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ChannelCatalogLinks
   * @throws IOException if the JSON string is invalid with respect to ChannelCatalogLinks
   */
  public static ChannelCatalogLinks fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ChannelCatalogLinks.class);
  }

  /**
   * Convert an instance of ChannelCatalogLinks to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

