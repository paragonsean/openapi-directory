/*
 * BeezUP Merchant API 
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: help@beezup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.LinksActivateUserAccountLink;
import org.openapitools.client.model.LinksChangeEmailLink;
import org.openapitools.client.model.LinksChangePasswordLink;
import org.openapitools.client.model.LinksGetCreditCardInfoLink;
import org.openapitools.client.model.LinksGetProfilePictureInfoLink;
import org.openapitools.client.model.LinksGetUserAccountInfoLink;
import org.openapitools.client.model.LinksSaveCompanyInfoLink;
import org.openapitools.client.model.LinksSaveCreditCardInfoLink;
import org.openapitools.client.model.LinksSavePersonalInfoLink;
import org.openapitools.client.model.LinksSaveProfilePictureInfoLink;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The different actions you can make on this account
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:53.401769-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AccountInfoLinks {
  public static final String SERIALIZED_NAME_ACTIVATE_USER_ACCOUNT = "activateUserAccount";
  @SerializedName(SERIALIZED_NAME_ACTIVATE_USER_ACCOUNT)
  private LinksActivateUserAccountLink activateUserAccount;

  public static final String SERIALIZED_NAME_CHANGE_EMAIL = "changeEmail";
  @SerializedName(SERIALIZED_NAME_CHANGE_EMAIL)
  private LinksChangeEmailLink changeEmail;

  public static final String SERIALIZED_NAME_CHANGE_PASSWORD = "changePassword";
  @SerializedName(SERIALIZED_NAME_CHANGE_PASSWORD)
  private LinksChangePasswordLink changePassword;

  public static final String SERIALIZED_NAME_GET_CREDIT_CARD_INFO = "getCreditCardInfo";
  @SerializedName(SERIALIZED_NAME_GET_CREDIT_CARD_INFO)
  private LinksGetCreditCardInfoLink getCreditCardInfo;

  public static final String SERIALIZED_NAME_GET_PROFILE_PICTURE_INFO = "getProfilePictureInfo";
  @SerializedName(SERIALIZED_NAME_GET_PROFILE_PICTURE_INFO)
  private LinksGetProfilePictureInfoLink getProfilePictureInfo;

  public static final String SERIALIZED_NAME_SAVE_COMPANY_INFO = "saveCompanyInfo";
  @SerializedName(SERIALIZED_NAME_SAVE_COMPANY_INFO)
  private LinksSaveCompanyInfoLink saveCompanyInfo;

  public static final String SERIALIZED_NAME_SAVE_CREDIT_CARD_INFO = "saveCreditCardInfo";
  @SerializedName(SERIALIZED_NAME_SAVE_CREDIT_CARD_INFO)
  private LinksSaveCreditCardInfoLink saveCreditCardInfo;

  public static final String SERIALIZED_NAME_SAVE_PERSONAL_INFO = "savePersonalInfo";
  @SerializedName(SERIALIZED_NAME_SAVE_PERSONAL_INFO)
  private LinksSavePersonalInfoLink savePersonalInfo;

  public static final String SERIALIZED_NAME_SAVE_PROFILE_PICTURE_INFO = "saveProfilePictureInfo";
  @SerializedName(SERIALIZED_NAME_SAVE_PROFILE_PICTURE_INFO)
  private LinksSaveProfilePictureInfoLink saveProfilePictureInfo;

  public static final String SERIALIZED_NAME_SELF = "self";
  @SerializedName(SERIALIZED_NAME_SELF)
  private LinksGetUserAccountInfoLink self;

  public AccountInfoLinks() {
  }

  public AccountInfoLinks activateUserAccount(LinksActivateUserAccountLink activateUserAccount) {
    this.activateUserAccount = activateUserAccount;
    return this;
  }

  /**
   * Get activateUserAccount
   * @return activateUserAccount
   */
  @javax.annotation.Nullable
  public LinksActivateUserAccountLink getActivateUserAccount() {
    return activateUserAccount;
  }

  public void setActivateUserAccount(LinksActivateUserAccountLink activateUserAccount) {
    this.activateUserAccount = activateUserAccount;
  }


  public AccountInfoLinks changeEmail(LinksChangeEmailLink changeEmail) {
    this.changeEmail = changeEmail;
    return this;
  }

  /**
   * Get changeEmail
   * @return changeEmail
   */
  @javax.annotation.Nonnull
  public LinksChangeEmailLink getChangeEmail() {
    return changeEmail;
  }

  public void setChangeEmail(LinksChangeEmailLink changeEmail) {
    this.changeEmail = changeEmail;
  }


  public AccountInfoLinks changePassword(LinksChangePasswordLink changePassword) {
    this.changePassword = changePassword;
    return this;
  }

  /**
   * Get changePassword
   * @return changePassword
   */
  @javax.annotation.Nonnull
  public LinksChangePasswordLink getChangePassword() {
    return changePassword;
  }

  public void setChangePassword(LinksChangePasswordLink changePassword) {
    this.changePassword = changePassword;
  }


  public AccountInfoLinks getCreditCardInfo(LinksGetCreditCardInfoLink getCreditCardInfo) {
    this.getCreditCardInfo = getCreditCardInfo;
    return this;
  }

  /**
   * Get getCreditCardInfo
   * @return getCreditCardInfo
   */
  @javax.annotation.Nonnull
  public LinksGetCreditCardInfoLink getGetCreditCardInfo() {
    return getCreditCardInfo;
  }

  public void setGetCreditCardInfo(LinksGetCreditCardInfoLink getCreditCardInfo) {
    this.getCreditCardInfo = getCreditCardInfo;
  }


  public AccountInfoLinks getProfilePictureInfo(LinksGetProfilePictureInfoLink getProfilePictureInfo) {
    this.getProfilePictureInfo = getProfilePictureInfo;
    return this;
  }

  /**
   * Get getProfilePictureInfo
   * @return getProfilePictureInfo
   */
  @javax.annotation.Nonnull
  public LinksGetProfilePictureInfoLink getGetProfilePictureInfo() {
    return getProfilePictureInfo;
  }

  public void setGetProfilePictureInfo(LinksGetProfilePictureInfoLink getProfilePictureInfo) {
    this.getProfilePictureInfo = getProfilePictureInfo;
  }


  public AccountInfoLinks saveCompanyInfo(LinksSaveCompanyInfoLink saveCompanyInfo) {
    this.saveCompanyInfo = saveCompanyInfo;
    return this;
  }

  /**
   * Get saveCompanyInfo
   * @return saveCompanyInfo
   */
  @javax.annotation.Nonnull
  public LinksSaveCompanyInfoLink getSaveCompanyInfo() {
    return saveCompanyInfo;
  }

  public void setSaveCompanyInfo(LinksSaveCompanyInfoLink saveCompanyInfo) {
    this.saveCompanyInfo = saveCompanyInfo;
  }


  public AccountInfoLinks saveCreditCardInfo(LinksSaveCreditCardInfoLink saveCreditCardInfo) {
    this.saveCreditCardInfo = saveCreditCardInfo;
    return this;
  }

  /**
   * Get saveCreditCardInfo
   * @return saveCreditCardInfo
   */
  @javax.annotation.Nonnull
  public LinksSaveCreditCardInfoLink getSaveCreditCardInfo() {
    return saveCreditCardInfo;
  }

  public void setSaveCreditCardInfo(LinksSaveCreditCardInfoLink saveCreditCardInfo) {
    this.saveCreditCardInfo = saveCreditCardInfo;
  }


  public AccountInfoLinks savePersonalInfo(LinksSavePersonalInfoLink savePersonalInfo) {
    this.savePersonalInfo = savePersonalInfo;
    return this;
  }

  /**
   * Get savePersonalInfo
   * @return savePersonalInfo
   */
  @javax.annotation.Nonnull
  public LinksSavePersonalInfoLink getSavePersonalInfo() {
    return savePersonalInfo;
  }

  public void setSavePersonalInfo(LinksSavePersonalInfoLink savePersonalInfo) {
    this.savePersonalInfo = savePersonalInfo;
  }


  public AccountInfoLinks saveProfilePictureInfo(LinksSaveProfilePictureInfoLink saveProfilePictureInfo) {
    this.saveProfilePictureInfo = saveProfilePictureInfo;
    return this;
  }

  /**
   * Get saveProfilePictureInfo
   * @return saveProfilePictureInfo
   */
  @javax.annotation.Nonnull
  public LinksSaveProfilePictureInfoLink getSaveProfilePictureInfo() {
    return saveProfilePictureInfo;
  }

  public void setSaveProfilePictureInfo(LinksSaveProfilePictureInfoLink saveProfilePictureInfo) {
    this.saveProfilePictureInfo = saveProfilePictureInfo;
  }


  public AccountInfoLinks self(LinksGetUserAccountInfoLink self) {
    this.self = self;
    return this;
  }

  /**
   * Get self
   * @return self
   */
  @javax.annotation.Nonnull
  public LinksGetUserAccountInfoLink getSelf() {
    return self;
  }

  public void setSelf(LinksGetUserAccountInfoLink self) {
    this.self = self;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AccountInfoLinks accountInfoLinks = (AccountInfoLinks) o;
    return Objects.equals(this.activateUserAccount, accountInfoLinks.activateUserAccount) &&
        Objects.equals(this.changeEmail, accountInfoLinks.changeEmail) &&
        Objects.equals(this.changePassword, accountInfoLinks.changePassword) &&
        Objects.equals(this.getCreditCardInfo, accountInfoLinks.getCreditCardInfo) &&
        Objects.equals(this.getProfilePictureInfo, accountInfoLinks.getProfilePictureInfo) &&
        Objects.equals(this.saveCompanyInfo, accountInfoLinks.saveCompanyInfo) &&
        Objects.equals(this.saveCreditCardInfo, accountInfoLinks.saveCreditCardInfo) &&
        Objects.equals(this.savePersonalInfo, accountInfoLinks.savePersonalInfo) &&
        Objects.equals(this.saveProfilePictureInfo, accountInfoLinks.saveProfilePictureInfo) &&
        Objects.equals(this.self, accountInfoLinks.self);
  }

  @Override
  public int hashCode() {
    return Objects.hash(activateUserAccount, changeEmail, changePassword, getCreditCardInfo, getProfilePictureInfo, saveCompanyInfo, saveCreditCardInfo, savePersonalInfo, saveProfilePictureInfo, self);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AccountInfoLinks {\n");
    sb.append("    activateUserAccount: ").append(toIndentedString(activateUserAccount)).append("\n");
    sb.append("    changeEmail: ").append(toIndentedString(changeEmail)).append("\n");
    sb.append("    changePassword: ").append(toIndentedString(changePassword)).append("\n");
    sb.append("    getCreditCardInfo: ").append(toIndentedString(getCreditCardInfo)).append("\n");
    sb.append("    getProfilePictureInfo: ").append(toIndentedString(getProfilePictureInfo)).append("\n");
    sb.append("    saveCompanyInfo: ").append(toIndentedString(saveCompanyInfo)).append("\n");
    sb.append("    saveCreditCardInfo: ").append(toIndentedString(saveCreditCardInfo)).append("\n");
    sb.append("    savePersonalInfo: ").append(toIndentedString(savePersonalInfo)).append("\n");
    sb.append("    saveProfilePictureInfo: ").append(toIndentedString(saveProfilePictureInfo)).append("\n");
    sb.append("    self: ").append(toIndentedString(self)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("activateUserAccount");
    openapiFields.add("changeEmail");
    openapiFields.add("changePassword");
    openapiFields.add("getCreditCardInfo");
    openapiFields.add("getProfilePictureInfo");
    openapiFields.add("saveCompanyInfo");
    openapiFields.add("saveCreditCardInfo");
    openapiFields.add("savePersonalInfo");
    openapiFields.add("saveProfilePictureInfo");
    openapiFields.add("self");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("changeEmail");
    openapiRequiredFields.add("changePassword");
    openapiRequiredFields.add("getCreditCardInfo");
    openapiRequiredFields.add("getProfilePictureInfo");
    openapiRequiredFields.add("saveCompanyInfo");
    openapiRequiredFields.add("saveCreditCardInfo");
    openapiRequiredFields.add("savePersonalInfo");
    openapiRequiredFields.add("saveProfilePictureInfo");
    openapiRequiredFields.add("self");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AccountInfoLinks
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AccountInfoLinks.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AccountInfoLinks is not found in the empty JSON string", AccountInfoLinks.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AccountInfoLinks.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AccountInfoLinks` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AccountInfoLinks.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `activateUserAccount`
      if (jsonObj.get("activateUserAccount") != null && !jsonObj.get("activateUserAccount").isJsonNull()) {
        LinksActivateUserAccountLink.validateJsonElement(jsonObj.get("activateUserAccount"));
      }
      // validate the required field `changeEmail`
      LinksChangeEmailLink.validateJsonElement(jsonObj.get("changeEmail"));
      // validate the required field `changePassword`
      LinksChangePasswordLink.validateJsonElement(jsonObj.get("changePassword"));
      // validate the required field `getCreditCardInfo`
      LinksGetCreditCardInfoLink.validateJsonElement(jsonObj.get("getCreditCardInfo"));
      // validate the required field `getProfilePictureInfo`
      LinksGetProfilePictureInfoLink.validateJsonElement(jsonObj.get("getProfilePictureInfo"));
      // validate the required field `saveCompanyInfo`
      LinksSaveCompanyInfoLink.validateJsonElement(jsonObj.get("saveCompanyInfo"));
      // validate the required field `saveCreditCardInfo`
      LinksSaveCreditCardInfoLink.validateJsonElement(jsonObj.get("saveCreditCardInfo"));
      // validate the required field `savePersonalInfo`
      LinksSavePersonalInfoLink.validateJsonElement(jsonObj.get("savePersonalInfo"));
      // validate the required field `saveProfilePictureInfo`
      LinksSaveProfilePictureInfoLink.validateJsonElement(jsonObj.get("saveProfilePictureInfo"));
      // validate the required field `self`
      LinksGetUserAccountInfoLink.validateJsonElement(jsonObj.get("self"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AccountInfoLinks.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AccountInfoLinks' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AccountInfoLinks> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AccountInfoLinks.class));

       return (TypeAdapter<T>) new TypeAdapter<AccountInfoLinks>() {
           @Override
           public void write(JsonWriter out, AccountInfoLinks value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AccountInfoLinks read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AccountInfoLinks given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AccountInfoLinks
   * @throws IOException if the JSON string is invalid with respect to AccountInfoLinks
   */
  public static AccountInfoLinks fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AccountInfoLinks.class);
  }

  /**
   * Convert an instance of AccountInfoLinks to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

