/*
 * BeezUP Merchant API 
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: help@beezup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import org.openapitools.client.model.BeezUPCommonApiSettingsStatus;
import org.openapitools.client.model.MarketplaceChannelCatalogLinks;
import org.openapitools.client.model.MarketplaceChannelCatalogLovLinks;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * This object indicates you the association between a channel catalog and a marketplace. The account identifier will be automatically defined based on your marketplace merchant identfier.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:53.401769-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MarketplaceChannelCatalog {
  public static final String SERIALIZED_NAME_API_SETTINGS_STATUS = "apiSettingsStatus";
  @SerializedName(SERIALIZED_NAME_API_SETTINGS_STATUS)
  private BeezUPCommonApiSettingsStatus apiSettingsStatus;

  public static final String SERIALIZED_NAME_BEEZ_U_P_CHANNEL_CATALOG_ID = "beezUPChannelCatalogId";
  @SerializedName(SERIALIZED_NAME_BEEZ_U_P_CHANNEL_CATALOG_ID)
  private String beezUPChannelCatalogId;

  public static final String SERIALIZED_NAME_BEEZ_U_P_CHANNEL_ID = "beezUPChannelId";
  @SerializedName(SERIALIZED_NAME_BEEZ_U_P_CHANNEL_ID)
  private String beezUPChannelId;

  public static final String SERIALIZED_NAME_BEEZ_U_P_MARKETPLACE_NAME = "beezUPMarketplaceName";
  @SerializedName(SERIALIZED_NAME_BEEZ_U_P_MARKETPLACE_NAME)
  private Object beezUPMarketplaceName = null;

  public static final String SERIALIZED_NAME_BEEZ_U_P_STORE_ID = "beezUPStoreId";
  @SerializedName(SERIALIZED_NAME_BEEZ_U_P_STORE_ID)
  private String beezUPStoreId;

  public static final String SERIALIZED_NAME_BEEZ_U_P_STORE_NAME = "beezUPStoreName";
  @SerializedName(SERIALIZED_NAME_BEEZ_U_P_STORE_NAME)
  private String beezUPStoreName;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_LINKS = "links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private MarketplaceChannelCatalogLinks links;

  public static final String SERIALIZED_NAME_LOV_LINKS = "lovLinks";
  @SerializedName(SERIALIZED_NAME_LOV_LINKS)
  private MarketplaceChannelCatalogLovLinks lovLinks;

  public static final String SERIALIZED_NAME_MARKETPLACE_ACCOUNT_ID = "marketplaceAccountId";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_ACCOUNT_ID)
  private Integer marketplaceAccountId;

  public static final String SERIALIZED_NAME_MARKETPLACE_BUSINESS_CODE = "marketplaceBusinessCode";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_BUSINESS_CODE)
  private String marketplaceBusinessCode;

  public static final String SERIALIZED_NAME_MARKETPLACE_ISO_COUNTRY_CODE_ALPHA2 = "marketplaceIsoCountryCodeAlpha2";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_ISO_COUNTRY_CODE_ALPHA2)
  private String marketplaceIsoCountryCodeAlpha2;

  public static final String SERIALIZED_NAME_MARKETPLACE_MARKET_PLACE_ID = "marketplaceMarketPlaceId";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_MARKET_PLACE_ID)
  private String marketplaceMarketPlaceId;

  public static final String SERIALIZED_NAME_MARKETPLACE_MERCHANT_IDENTIFIERS = "marketplaceMerchantIdentifiers";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_MERCHANT_IDENTIFIERS)
  private Map<String, String> marketplaceMerchantIdentifiers = new HashMap<>();

  public static final String SERIALIZED_NAME_MARKETPLACE_TECHNICAL_CODE = "marketplaceTechnicalCode";
  @SerializedName(SERIALIZED_NAME_MARKETPLACE_TECHNICAL_CODE)
  private String marketplaceTechnicalCode;

  public MarketplaceChannelCatalog() {
  }

  public MarketplaceChannelCatalog apiSettingsStatus(BeezUPCommonApiSettingsStatus apiSettingsStatus) {
    this.apiSettingsStatus = apiSettingsStatus;
    return this;
  }

  /**
   * Get apiSettingsStatus
   * @return apiSettingsStatus
   */
  @javax.annotation.Nonnull
  public BeezUPCommonApiSettingsStatus getApiSettingsStatus() {
    return apiSettingsStatus;
  }

  public void setApiSettingsStatus(BeezUPCommonApiSettingsStatus apiSettingsStatus) {
    this.apiSettingsStatus = apiSettingsStatus;
  }


  public MarketplaceChannelCatalog beezUPChannelCatalogId(String beezUPChannelCatalogId) {
    this.beezUPChannelCatalogId = beezUPChannelCatalogId;
    return this;
  }

  /**
   * The channel catalog identifier
   * @return beezUPChannelCatalogId
   */
  @javax.annotation.Nonnull
  public String getBeezUPChannelCatalogId() {
    return beezUPChannelCatalogId;
  }

  public void setBeezUPChannelCatalogId(String beezUPChannelCatalogId) {
    this.beezUPChannelCatalogId = beezUPChannelCatalogId;
  }


  public MarketplaceChannelCatalog beezUPChannelId(String beezUPChannelId) {
    this.beezUPChannelId = beezUPChannelId;
    return this;
  }

  /**
   * The channel identifier
   * @return beezUPChannelId
   */
  @javax.annotation.Nonnull
  public String getBeezUPChannelId() {
    return beezUPChannelId;
  }

  public void setBeezUPChannelId(String beezUPChannelId) {
    this.beezUPChannelId = beezUPChannelId;
  }


  public MarketplaceChannelCatalog beezUPMarketplaceName(Object beezUPMarketplaceName) {
    this.beezUPMarketplaceName = beezUPMarketplaceName;
    return this;
  }

  /**
   * The marketplace name
   * @return beezUPMarketplaceName
   */
  @javax.annotation.Nullable
  public Object getBeezUPMarketplaceName() {
    return beezUPMarketplaceName;
  }

  public void setBeezUPMarketplaceName(Object beezUPMarketplaceName) {
    this.beezUPMarketplaceName = beezUPMarketplaceName;
  }


  public MarketplaceChannelCatalog beezUPStoreId(String beezUPStoreId) {
    this.beezUPStoreId = beezUPStoreId;
    return this;
  }

  /**
   * The store identifier
   * @return beezUPStoreId
   */
  @javax.annotation.Nonnull
  public String getBeezUPStoreId() {
    return beezUPStoreId;
  }

  public void setBeezUPStoreId(String beezUPStoreId) {
    this.beezUPStoreId = beezUPStoreId;
  }


  public MarketplaceChannelCatalog beezUPStoreName(String beezUPStoreName) {
    this.beezUPStoreName = beezUPStoreName;
    return this;
  }

  /**
   * The store name
   * @return beezUPStoreName
   */
  @javax.annotation.Nonnull
  public String getBeezUPStoreName() {
    return beezUPStoreName;
  }

  public void setBeezUPStoreName(String beezUPStoreName) {
    this.beezUPStoreName = beezUPStoreName;
  }


  public MarketplaceChannelCatalog enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * The enabled status of the Channel Catalog
   * @return enabled
   */
  @javax.annotation.Nonnull
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public MarketplaceChannelCatalog links(MarketplaceChannelCatalogLinks links) {
    this.links = links;
    return this;
  }

  /**
   * Get links
   * @return links
   */
  @javax.annotation.Nonnull
  public MarketplaceChannelCatalogLinks getLinks() {
    return links;
  }

  public void setLinks(MarketplaceChannelCatalogLinks links) {
    this.links = links;
  }


  public MarketplaceChannelCatalog lovLinks(MarketplaceChannelCatalogLovLinks lovLinks) {
    this.lovLinks = lovLinks;
    return this;
  }

  /**
   * Get lovLinks
   * @return lovLinks
   */
  @javax.annotation.Nonnull
  public MarketplaceChannelCatalogLovLinks getLovLinks() {
    return lovLinks;
  }

  public void setLovLinks(MarketplaceChannelCatalogLovLinks lovLinks) {
    this.lovLinks = lovLinks;
  }


  public MarketplaceChannelCatalog marketplaceAccountId(Integer marketplaceAccountId) {
    this.marketplaceAccountId = marketplaceAccountId;
    return this;
  }

  /**
   * The marketplace account identifier in BeezUP. This account identifier is based on your api settings.
   * @return marketplaceAccountId
   */
  @javax.annotation.Nullable
  public Integer getMarketplaceAccountId() {
    return marketplaceAccountId;
  }

  public void setMarketplaceAccountId(Integer marketplaceAccountId) {
    this.marketplaceAccountId = marketplaceAccountId;
  }


  public MarketplaceChannelCatalog marketplaceBusinessCode(String marketplaceBusinessCode) {
    this.marketplaceBusinessCode = marketplaceBusinessCode;
    return this;
  }

  /**
   * In an marketplace technical code like CDiscount you can have several marketplaces like GO SPORT, etc. We identify them by a business code.
   * @return marketplaceBusinessCode
   */
  @javax.annotation.Nonnull
  public String getMarketplaceBusinessCode() {
    return marketplaceBusinessCode;
  }

  public void setMarketplaceBusinessCode(String marketplaceBusinessCode) {
    this.marketplaceBusinessCode = marketplaceBusinessCode;
  }


  public MarketplaceChannelCatalog marketplaceIsoCountryCodeAlpha2(String marketplaceIsoCountryCodeAlpha2) {
    this.marketplaceIsoCountryCodeAlpha2 = marketplaceIsoCountryCodeAlpha2;
    return this;
  }

  /**
   * The marketplace country iso code alpha 2 (see http://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Decoding_table for more details)
   * @return marketplaceIsoCountryCodeAlpha2
   */
  @javax.annotation.Nonnull
  public String getMarketplaceIsoCountryCodeAlpha2() {
    return marketplaceIsoCountryCodeAlpha2;
  }

  public void setMarketplaceIsoCountryCodeAlpha2(String marketplaceIsoCountryCodeAlpha2) {
    this.marketplaceIsoCountryCodeAlpha2 = marketplaceIsoCountryCodeAlpha2;
  }


  public MarketplaceChannelCatalog marketplaceMarketPlaceId(String marketplaceMarketPlaceId) {
    this.marketplaceMarketPlaceId = marketplaceMarketPlaceId;
    return this;
  }

  /**
   * The marketplace identifier in the marketplace
   * @return marketplaceMarketPlaceId
   */
  @javax.annotation.Nonnull
  public String getMarketplaceMarketPlaceId() {
    return marketplaceMarketPlaceId;
  }

  public void setMarketplaceMarketPlaceId(String marketplaceMarketPlaceId) {
    this.marketplaceMarketPlaceId = marketplaceMarketPlaceId;
  }


  public MarketplaceChannelCatalog marketplaceMerchantIdentifiers(Map<String, String> marketplaceMerchantIdentifiers) {
    this.marketplaceMerchantIdentifiers = marketplaceMerchantIdentifiers;
    return this;
  }

  public MarketplaceChannelCatalog putMarketplaceMerchantIdentifiersItem(String key, String marketplaceMerchantIdentifiersItem) {
    if (this.marketplaceMerchantIdentifiers == null) {
      this.marketplaceMerchantIdentifiers = new HashMap<>();
    }
    this.marketplaceMerchantIdentifiers.put(key, marketplaceMerchantIdentifiersItem);
    return this;
  }

  /**
   * The marketplace merchant identifier list
   * @return marketplaceMerchantIdentifiers
   */
  @javax.annotation.Nullable
  public Map<String, String> getMarketplaceMerchantIdentifiers() {
    return marketplaceMerchantIdentifiers;
  }

  public void setMarketplaceMerchantIdentifiers(Map<String, String> marketplaceMerchantIdentifiers) {
    this.marketplaceMerchantIdentifiers = marketplaceMerchantIdentifiers;
  }


  public MarketplaceChannelCatalog marketplaceTechnicalCode(String marketplaceTechnicalCode) {
    this.marketplaceTechnicalCode = marketplaceTechnicalCode;
    return this;
  }

  /**
   * The technical code of the marketplace.
   * @return marketplaceTechnicalCode
   */
  @javax.annotation.Nonnull
  public String getMarketplaceTechnicalCode() {
    return marketplaceTechnicalCode;
  }

  public void setMarketplaceTechnicalCode(String marketplaceTechnicalCode) {
    this.marketplaceTechnicalCode = marketplaceTechnicalCode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MarketplaceChannelCatalog marketplaceChannelCatalog = (MarketplaceChannelCatalog) o;
    return Objects.equals(this.apiSettingsStatus, marketplaceChannelCatalog.apiSettingsStatus) &&
        Objects.equals(this.beezUPChannelCatalogId, marketplaceChannelCatalog.beezUPChannelCatalogId) &&
        Objects.equals(this.beezUPChannelId, marketplaceChannelCatalog.beezUPChannelId) &&
        Objects.equals(this.beezUPMarketplaceName, marketplaceChannelCatalog.beezUPMarketplaceName) &&
        Objects.equals(this.beezUPStoreId, marketplaceChannelCatalog.beezUPStoreId) &&
        Objects.equals(this.beezUPStoreName, marketplaceChannelCatalog.beezUPStoreName) &&
        Objects.equals(this.enabled, marketplaceChannelCatalog.enabled) &&
        Objects.equals(this.links, marketplaceChannelCatalog.links) &&
        Objects.equals(this.lovLinks, marketplaceChannelCatalog.lovLinks) &&
        Objects.equals(this.marketplaceAccountId, marketplaceChannelCatalog.marketplaceAccountId) &&
        Objects.equals(this.marketplaceBusinessCode, marketplaceChannelCatalog.marketplaceBusinessCode) &&
        Objects.equals(this.marketplaceIsoCountryCodeAlpha2, marketplaceChannelCatalog.marketplaceIsoCountryCodeAlpha2) &&
        Objects.equals(this.marketplaceMarketPlaceId, marketplaceChannelCatalog.marketplaceMarketPlaceId) &&
        Objects.equals(this.marketplaceMerchantIdentifiers, marketplaceChannelCatalog.marketplaceMerchantIdentifiers) &&
        Objects.equals(this.marketplaceTechnicalCode, marketplaceChannelCatalog.marketplaceTechnicalCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(apiSettingsStatus, beezUPChannelCatalogId, beezUPChannelId, beezUPMarketplaceName, beezUPStoreId, beezUPStoreName, enabled, links, lovLinks, marketplaceAccountId, marketplaceBusinessCode, marketplaceIsoCountryCodeAlpha2, marketplaceMarketPlaceId, marketplaceMerchantIdentifiers, marketplaceTechnicalCode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MarketplaceChannelCatalog {\n");
    sb.append("    apiSettingsStatus: ").append(toIndentedString(apiSettingsStatus)).append("\n");
    sb.append("    beezUPChannelCatalogId: ").append(toIndentedString(beezUPChannelCatalogId)).append("\n");
    sb.append("    beezUPChannelId: ").append(toIndentedString(beezUPChannelId)).append("\n");
    sb.append("    beezUPMarketplaceName: ").append(toIndentedString(beezUPMarketplaceName)).append("\n");
    sb.append("    beezUPStoreId: ").append(toIndentedString(beezUPStoreId)).append("\n");
    sb.append("    beezUPStoreName: ").append(toIndentedString(beezUPStoreName)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    lovLinks: ").append(toIndentedString(lovLinks)).append("\n");
    sb.append("    marketplaceAccountId: ").append(toIndentedString(marketplaceAccountId)).append("\n");
    sb.append("    marketplaceBusinessCode: ").append(toIndentedString(marketplaceBusinessCode)).append("\n");
    sb.append("    marketplaceIsoCountryCodeAlpha2: ").append(toIndentedString(marketplaceIsoCountryCodeAlpha2)).append("\n");
    sb.append("    marketplaceMarketPlaceId: ").append(toIndentedString(marketplaceMarketPlaceId)).append("\n");
    sb.append("    marketplaceMerchantIdentifiers: ").append(toIndentedString(marketplaceMerchantIdentifiers)).append("\n");
    sb.append("    marketplaceTechnicalCode: ").append(toIndentedString(marketplaceTechnicalCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("apiSettingsStatus");
    openapiFields.add("beezUPChannelCatalogId");
    openapiFields.add("beezUPChannelId");
    openapiFields.add("beezUPMarketplaceName");
    openapiFields.add("beezUPStoreId");
    openapiFields.add("beezUPStoreName");
    openapiFields.add("enabled");
    openapiFields.add("links");
    openapiFields.add("lovLinks");
    openapiFields.add("marketplaceAccountId");
    openapiFields.add("marketplaceBusinessCode");
    openapiFields.add("marketplaceIsoCountryCodeAlpha2");
    openapiFields.add("marketplaceMarketPlaceId");
    openapiFields.add("marketplaceMerchantIdentifiers");
    openapiFields.add("marketplaceTechnicalCode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("apiSettingsStatus");
    openapiRequiredFields.add("beezUPChannelCatalogId");
    openapiRequiredFields.add("beezUPChannelId");
    openapiRequiredFields.add("beezUPMarketplaceName");
    openapiRequiredFields.add("beezUPStoreId");
    openapiRequiredFields.add("beezUPStoreName");
    openapiRequiredFields.add("enabled");
    openapiRequiredFields.add("links");
    openapiRequiredFields.add("lovLinks");
    openapiRequiredFields.add("marketplaceBusinessCode");
    openapiRequiredFields.add("marketplaceIsoCountryCodeAlpha2");
    openapiRequiredFields.add("marketplaceMarketPlaceId");
    openapiRequiredFields.add("marketplaceTechnicalCode");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MarketplaceChannelCatalog
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MarketplaceChannelCatalog.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MarketplaceChannelCatalog is not found in the empty JSON string", MarketplaceChannelCatalog.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MarketplaceChannelCatalog.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MarketplaceChannelCatalog` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : MarketplaceChannelCatalog.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the required field `apiSettingsStatus`
      BeezUPCommonApiSettingsStatus.validateJsonElement(jsonObj.get("apiSettingsStatus"));
      if (!jsonObj.get("beezUPChannelCatalogId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `beezUPChannelCatalogId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("beezUPChannelCatalogId").toString()));
      }
      if (!jsonObj.get("beezUPChannelId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `beezUPChannelId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("beezUPChannelId").toString()));
      }
      if (!jsonObj.get("beezUPStoreId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `beezUPStoreId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("beezUPStoreId").toString()));
      }
      if (!jsonObj.get("beezUPStoreName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `beezUPStoreName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("beezUPStoreName").toString()));
      }
      // validate the required field `links`
      MarketplaceChannelCatalogLinks.validateJsonElement(jsonObj.get("links"));
      // validate the required field `lovLinks`
      MarketplaceChannelCatalogLovLinks.validateJsonElement(jsonObj.get("lovLinks"));
      if (!jsonObj.get("marketplaceBusinessCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketplaceBusinessCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketplaceBusinessCode").toString()));
      }
      if (!jsonObj.get("marketplaceIsoCountryCodeAlpha2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketplaceIsoCountryCodeAlpha2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketplaceIsoCountryCodeAlpha2").toString()));
      }
      if (!jsonObj.get("marketplaceMarketPlaceId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketplaceMarketPlaceId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketplaceMarketPlaceId").toString()));
      }
      if (!jsonObj.get("marketplaceTechnicalCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `marketplaceTechnicalCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("marketplaceTechnicalCode").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MarketplaceChannelCatalog.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MarketplaceChannelCatalog' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MarketplaceChannelCatalog> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MarketplaceChannelCatalog.class));

       return (TypeAdapter<T>) new TypeAdapter<MarketplaceChannelCatalog>() {
           @Override
           public void write(JsonWriter out, MarketplaceChannelCatalog value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MarketplaceChannelCatalog read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MarketplaceChannelCatalog given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MarketplaceChannelCatalog
   * @throws IOException if the JSON string is invalid with respect to MarketplaceChannelCatalog
   */
  public static MarketplaceChannelCatalog fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MarketplaceChannelCatalog.class);
  }

  /**
   * Convert an instance of MarketplaceChannelCatalog to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

