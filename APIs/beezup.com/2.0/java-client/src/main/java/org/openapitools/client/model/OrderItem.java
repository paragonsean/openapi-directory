/*
 * BeezUP Merchant API 
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: help@beezup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Describe an order item. All properties with the prefix orderItem_ are translated in the list of values /user/lov/OrderMetaInfoOrderItems
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:53.401769-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class OrderItem {
  public static final String SERIALIZED_NAME_BEEZ_U_P_ORDER_ITEM_ID = "beezUPOrderItemId";
  @SerializedName(SERIALIZED_NAME_BEEZ_U_P_ORDER_ITEM_ID)
  private String beezUPOrderItemId;

  public static final String SERIALIZED_NAME_ORDER_ITEM_BEEZ_U_P_STORE_ID = "orderItem_BeezUPStoreId";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_BEEZ_U_P_STORE_ID)
  private String orderItemBeezUPStoreId;

  public static final String SERIALIZED_NAME_ORDER_ITEM_CONDITION = "orderItem_Condition";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_CONDITION)
  private String orderItemCondition;

  public static final String SERIALIZED_NAME_ORDER_ITEM_IMAGE_URL = "orderItem_ImageUrl";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_IMAGE_URL)
  private String orderItemImageUrl;

  public static final String SERIALIZED_NAME_ORDER_ITEM_ITEM_PRICE = "orderItem_ItemPrice";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_ITEM_PRICE)
  private BigDecimal orderItemItemPrice;

  public static final String SERIALIZED_NAME_ORDER_ITEM_ITEM_TAX = "orderItem_ItemTax";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_ITEM_TAX)
  private BigDecimal orderItemItemTax;

  public static final String SERIALIZED_NAME_ORDER_ITEM_MARKET_PLACE_PRODUCT_ID = "orderItem_MarketPlaceProductId";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_MARKET_PLACE_PRODUCT_ID)
  private String orderItemMarketPlaceProductId;

  public static final String SERIALIZED_NAME_ORDER_ITEM_MARKETPLACE_IMAGE_URI = "orderItem_MarketplaceImageUri";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_MARKETPLACE_IMAGE_URI)
  private String orderItemMarketplaceImageUri;

  public static final String SERIALIZED_NAME_ORDER_ITEM_MARKETPLACE_PRODUCT_URI = "orderItem_MarketplaceProductUri";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_MARKETPLACE_PRODUCT_URI)
  private String orderItemMarketplaceProductUri;

  public static final String SERIALIZED_NAME_ORDER_ITEM_MERCHANT_IMPORTED_PRODUCT_ID = "orderItem_MerchantImportedProductId";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_MERCHANT_IMPORTED_PRODUCT_ID)
  private String orderItemMerchantImportedProductId;

  public static final String SERIALIZED_NAME_ORDER_ITEM_MERCHANT_IMPORTED_PRODUCT_ID_COLUMN_NAME = "orderItem_MerchantImportedProductIdColumnName";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_MERCHANT_IMPORTED_PRODUCT_ID_COLUMN_NAME)
  private String orderItemMerchantImportedProductIdColumnName;

  public static final String SERIALIZED_NAME_ORDER_ITEM_MERCHANT_IMPORTED_PRODUCT_URL = "orderItem_MerchantImportedProductUrl";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_MERCHANT_IMPORTED_PRODUCT_URL)
  private String orderItemMerchantImportedProductUrl;

  public static final String SERIALIZED_NAME_ORDER_ITEM_MERCHANT_PRODUCT_ID = "orderItem_MerchantProductId";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_MERCHANT_PRODUCT_ID)
  private String orderItemMerchantProductId;

  public static final String SERIALIZED_NAME_ORDER_ITEM_MERCHANT_PRODUCT_ID_COLUMN_NAME = "orderItem_MerchantProductIdColumnName";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_MERCHANT_PRODUCT_ID_COLUMN_NAME)
  private String orderItemMerchantProductIdColumnName;

  public static final String SERIALIZED_NAME_ORDER_ITEM_ORDER_ITEM_TYPE = "orderItem_OrderItemType";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_ORDER_ITEM_TYPE)
  private String orderItemOrderItemType;

  public static final String SERIALIZED_NAME_ORDER_ITEM_QUANTITY = "orderItem_Quantity";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_QUANTITY)
  private BigDecimal orderItemQuantity;

  public static final String SERIALIZED_NAME_ORDER_ITEM_SHIPPING_PRICE = "orderItem_Shipping_Price";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_SHIPPING_PRICE)
  private BigDecimal orderItemShippingPrice;

  public static final String SERIALIZED_NAME_ORDER_ITEM_TITLE = "orderItem_Title";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_TITLE)
  private String orderItemTitle;

  public static final String SERIALIZED_NAME_ORDER_ITEM_TOTAL_PRICE = "orderItem_TotalPrice";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_TOTAL_PRICE)
  private BigDecimal orderItemTotalPrice;

  public static final String SERIALIZED_NAME_ORDER_ITEM_GTIN = "orderItem_gtin";
  @SerializedName(SERIALIZED_NAME_ORDER_ITEM_GTIN)
  private String orderItemGtin;

  public OrderItem() {
  }

  public OrderItem beezUPOrderItemId(String beezUPOrderItemId) {
    this.beezUPOrderItemId = beezUPOrderItemId;
    return this;
  }

  /**
   * The BeezUP identifier of the order Item
   * @return beezUPOrderItemId
   */
  @javax.annotation.Nonnull
  public String getBeezUPOrderItemId() {
    return beezUPOrderItemId;
  }

  public void setBeezUPOrderItemId(String beezUPOrderItemId) {
    this.beezUPOrderItemId = beezUPOrderItemId;
  }


  public OrderItem orderItemBeezUPStoreId(String orderItemBeezUPStoreId) {
    this.orderItemBeezUPStoreId = orderItemBeezUPStoreId;
    return this;
  }

  /**
   * The store id in the beezup system related to the order item. This property will help you to match the order to the inventory system.
   * @return orderItemBeezUPStoreId
   */
  @javax.annotation.Nullable
  public String getOrderItemBeezUPStoreId() {
    return orderItemBeezUPStoreId;
  }

  public void setOrderItemBeezUPStoreId(String orderItemBeezUPStoreId) {
    this.orderItemBeezUPStoreId = orderItemBeezUPStoreId;
  }


  public OrderItem orderItemCondition(String orderItemCondition) {
    this.orderItemCondition = orderItemCondition;
    return this;
  }

  /**
   * The merchant product condition of the order item
   * @return orderItemCondition
   */
  @javax.annotation.Nullable
  public String getOrderItemCondition() {
    return orderItemCondition;
  }

  public void setOrderItemCondition(String orderItemCondition) {
    this.orderItemCondition = orderItemCondition;
  }


  public OrderItem orderItemImageUrl(String orderItemImageUrl) {
    this.orderItemImageUrl = orderItemImageUrl;
    return this;
  }

  /**
   * The URL of the image of the order item
   * @return orderItemImageUrl
   */
  @javax.annotation.Nullable
  public String getOrderItemImageUrl() {
    return orderItemImageUrl;
  }

  public void setOrderItemImageUrl(String orderItemImageUrl) {
    this.orderItemImageUrl = orderItemImageUrl;
  }


  public OrderItem orderItemItemPrice(BigDecimal orderItemItemPrice) {
    this.orderItemItemPrice = orderItemItemPrice;
    return this;
  }

  /**
   * The price of the order item
   * @return orderItemItemPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getOrderItemItemPrice() {
    return orderItemItemPrice;
  }

  public void setOrderItemItemPrice(BigDecimal orderItemItemPrice) {
    this.orderItemItemPrice = orderItemItemPrice;
  }


  public OrderItem orderItemItemTax(BigDecimal orderItemItemTax) {
    this.orderItemItemTax = orderItemItemTax;
    return this;
  }

  /**
   * The tax of the order item
   * @return orderItemItemTax
   */
  @javax.annotation.Nullable
  public BigDecimal getOrderItemItemTax() {
    return orderItemItemTax;
  }

  public void setOrderItemItemTax(BigDecimal orderItemItemTax) {
    this.orderItemItemTax = orderItemItemTax;
  }


  public OrderItem orderItemMarketPlaceProductId(String orderItemMarketPlaceProductId) {
    this.orderItemMarketPlaceProductId = orderItemMarketPlaceProductId;
    return this;
  }

  /**
   * The marketplace product identifier of the order item
   * @return orderItemMarketPlaceProductId
   */
  @javax.annotation.Nullable
  public String getOrderItemMarketPlaceProductId() {
    return orderItemMarketPlaceProductId;
  }

  public void setOrderItemMarketPlaceProductId(String orderItemMarketPlaceProductId) {
    this.orderItemMarketPlaceProductId = orderItemMarketPlaceProductId;
  }


  public OrderItem orderItemMarketplaceImageUri(String orderItemMarketplaceImageUri) {
    this.orderItemMarketplaceImageUri = orderItemMarketplaceImageUri;
    return this;
  }

  /**
   * The marketplace image uri
   * @return orderItemMarketplaceImageUri
   */
  @javax.annotation.Nullable
  public String getOrderItemMarketplaceImageUri() {
    return orderItemMarketplaceImageUri;
  }

  public void setOrderItemMarketplaceImageUri(String orderItemMarketplaceImageUri) {
    this.orderItemMarketplaceImageUri = orderItemMarketplaceImageUri;
  }


  public OrderItem orderItemMarketplaceProductUri(String orderItemMarketplaceProductUri) {
    this.orderItemMarketplaceProductUri = orderItemMarketplaceProductUri;
    return this;
  }

  /**
   * The merchant product uri of the order item
   * @return orderItemMarketplaceProductUri
   */
  @javax.annotation.Nullable
  public String getOrderItemMarketplaceProductUri() {
    return orderItemMarketplaceProductUri;
  }

  public void setOrderItemMarketplaceProductUri(String orderItemMarketplaceProductUri) {
    this.orderItemMarketplaceProductUri = orderItemMarketplaceProductUri;
  }


  public OrderItem orderItemMerchantImportedProductId(String orderItemMerchantImportedProductId) {
    this.orderItemMerchantImportedProductId = orderItemMerchantImportedProductId;
    return this;
  }

  /**
   * The product id indicated in the catalog importation in BeezUP system for this order item. This property will help you to match the order to the inventory system.
   * @return orderItemMerchantImportedProductId
   */
  @javax.annotation.Nullable
  public String getOrderItemMerchantImportedProductId() {
    return orderItemMerchantImportedProductId;
  }

  public void setOrderItemMerchantImportedProductId(String orderItemMerchantImportedProductId) {
    this.orderItemMerchantImportedProductId = orderItemMerchantImportedProductId;
  }


  public OrderItem orderItemMerchantImportedProductIdColumnName(String orderItemMerchantImportedProductIdColumnName) {
    this.orderItemMerchantImportedProductIdColumnName = orderItemMerchantImportedProductIdColumnName;
    return this;
  }

  /**
   * The column name for the product id indicated in the catalog importation in BeezUP system related to this order item. This property will help you to match the order to the inventory system.
   * @return orderItemMerchantImportedProductIdColumnName
   */
  @javax.annotation.Nullable
  public String getOrderItemMerchantImportedProductIdColumnName() {
    return orderItemMerchantImportedProductIdColumnName;
  }

  public void setOrderItemMerchantImportedProductIdColumnName(String orderItemMerchantImportedProductIdColumnName) {
    this.orderItemMerchantImportedProductIdColumnName = orderItemMerchantImportedProductIdColumnName;
  }


  public OrderItem orderItemMerchantImportedProductUrl(String orderItemMerchantImportedProductUrl) {
    this.orderItemMerchantImportedProductUrl = orderItemMerchantImportedProductUrl;
    return this;
  }

  /**
   * The product url indicated in the catalog importation in BeezUP system related to this order item
   * @return orderItemMerchantImportedProductUrl
   */
  @javax.annotation.Nullable
  public String getOrderItemMerchantImportedProductUrl() {
    return orderItemMerchantImportedProductUrl;
  }

  public void setOrderItemMerchantImportedProductUrl(String orderItemMerchantImportedProductUrl) {
    this.orderItemMerchantImportedProductUrl = orderItemMerchantImportedProductUrl;
  }


  public OrderItem orderItemMerchantProductId(String orderItemMerchantProductId) {
    this.orderItemMerchantProductId = orderItemMerchantProductId;
    return this;
  }

  /**
   * The merchant product id of the order item
   * @return orderItemMerchantProductId
   */
  @javax.annotation.Nullable
  public String getOrderItemMerchantProductId() {
    return orderItemMerchantProductId;
  }

  public void setOrderItemMerchantProductId(String orderItemMerchantProductId) {
    this.orderItemMerchantProductId = orderItemMerchantProductId;
  }


  public OrderItem orderItemMerchantProductIdColumnName(String orderItemMerchantProductIdColumnName) {
    this.orderItemMerchantProductIdColumnName = orderItemMerchantProductIdColumnName;
    return this;
  }

  /**
   * The column name indicate in the mapping for the product id related to the order item
   * @return orderItemMerchantProductIdColumnName
   */
  @javax.annotation.Nullable
  public String getOrderItemMerchantProductIdColumnName() {
    return orderItemMerchantProductIdColumnName;
  }

  public void setOrderItemMerchantProductIdColumnName(String orderItemMerchantProductIdColumnName) {
    this.orderItemMerchantProductIdColumnName = orderItemMerchantProductIdColumnName;
  }


  public OrderItem orderItemOrderItemType(String orderItemOrderItemType) {
    this.orderItemOrderItemType = orderItemOrderItemType;
    return this;
  }

  /**
   * The order item type of the order item
   * @return orderItemOrderItemType
   */
  @javax.annotation.Nonnull
  public String getOrderItemOrderItemType() {
    return orderItemOrderItemType;
  }

  public void setOrderItemOrderItemType(String orderItemOrderItemType) {
    this.orderItemOrderItemType = orderItemOrderItemType;
  }


  public OrderItem orderItemQuantity(BigDecimal orderItemQuantity) {
    this.orderItemQuantity = orderItemQuantity;
    return this;
  }

  /**
   * The quantity of the order item
   * @return orderItemQuantity
   */
  @javax.annotation.Nullable
  public BigDecimal getOrderItemQuantity() {
    return orderItemQuantity;
  }

  public void setOrderItemQuantity(BigDecimal orderItemQuantity) {
    this.orderItemQuantity = orderItemQuantity;
  }


  public OrderItem orderItemShippingPrice(BigDecimal orderItemShippingPrice) {
    this.orderItemShippingPrice = orderItemShippingPrice;
    return this;
  }

  /**
   * The shipping price of the order item
   * @return orderItemShippingPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getOrderItemShippingPrice() {
    return orderItemShippingPrice;
  }

  public void setOrderItemShippingPrice(BigDecimal orderItemShippingPrice) {
    this.orderItemShippingPrice = orderItemShippingPrice;
  }


  public OrderItem orderItemTitle(String orderItemTitle) {
    this.orderItemTitle = orderItemTitle;
    return this;
  }

  /**
   * The title of the order item
   * @return orderItemTitle
   */
  @javax.annotation.Nullable
  public String getOrderItemTitle() {
    return orderItemTitle;
  }

  public void setOrderItemTitle(String orderItemTitle) {
    this.orderItemTitle = orderItemTitle;
  }


  public OrderItem orderItemTotalPrice(BigDecimal orderItemTotalPrice) {
    this.orderItemTotalPrice = orderItemTotalPrice;
    return this;
  }

  /**
   * The total price of the order item
   * @return orderItemTotalPrice
   */
  @javax.annotation.Nullable
  public BigDecimal getOrderItemTotalPrice() {
    return orderItemTotalPrice;
  }

  public void setOrderItemTotalPrice(BigDecimal orderItemTotalPrice) {
    this.orderItemTotalPrice = orderItemTotalPrice;
  }


  public OrderItem orderItemGtin(String orderItemGtin) {
    this.orderItemGtin = orderItemGtin;
    return this;
  }

  /**
   * The order item gtin
   * @return orderItemGtin
   */
  @javax.annotation.Nullable
  public String getOrderItemGtin() {
    return orderItemGtin;
  }

  public void setOrderItemGtin(String orderItemGtin) {
    this.orderItemGtin = orderItemGtin;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrderItem orderItem = (OrderItem) o;
    return Objects.equals(this.beezUPOrderItemId, orderItem.beezUPOrderItemId) &&
        Objects.equals(this.orderItemBeezUPStoreId, orderItem.orderItemBeezUPStoreId) &&
        Objects.equals(this.orderItemCondition, orderItem.orderItemCondition) &&
        Objects.equals(this.orderItemImageUrl, orderItem.orderItemImageUrl) &&
        Objects.equals(this.orderItemItemPrice, orderItem.orderItemItemPrice) &&
        Objects.equals(this.orderItemItemTax, orderItem.orderItemItemTax) &&
        Objects.equals(this.orderItemMarketPlaceProductId, orderItem.orderItemMarketPlaceProductId) &&
        Objects.equals(this.orderItemMarketplaceImageUri, orderItem.orderItemMarketplaceImageUri) &&
        Objects.equals(this.orderItemMarketplaceProductUri, orderItem.orderItemMarketplaceProductUri) &&
        Objects.equals(this.orderItemMerchantImportedProductId, orderItem.orderItemMerchantImportedProductId) &&
        Objects.equals(this.orderItemMerchantImportedProductIdColumnName, orderItem.orderItemMerchantImportedProductIdColumnName) &&
        Objects.equals(this.orderItemMerchantImportedProductUrl, orderItem.orderItemMerchantImportedProductUrl) &&
        Objects.equals(this.orderItemMerchantProductId, orderItem.orderItemMerchantProductId) &&
        Objects.equals(this.orderItemMerchantProductIdColumnName, orderItem.orderItemMerchantProductIdColumnName) &&
        Objects.equals(this.orderItemOrderItemType, orderItem.orderItemOrderItemType) &&
        Objects.equals(this.orderItemQuantity, orderItem.orderItemQuantity) &&
        Objects.equals(this.orderItemShippingPrice, orderItem.orderItemShippingPrice) &&
        Objects.equals(this.orderItemTitle, orderItem.orderItemTitle) &&
        Objects.equals(this.orderItemTotalPrice, orderItem.orderItemTotalPrice) &&
        Objects.equals(this.orderItemGtin, orderItem.orderItemGtin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(beezUPOrderItemId, orderItemBeezUPStoreId, orderItemCondition, orderItemImageUrl, orderItemItemPrice, orderItemItemTax, orderItemMarketPlaceProductId, orderItemMarketplaceImageUri, orderItemMarketplaceProductUri, orderItemMerchantImportedProductId, orderItemMerchantImportedProductIdColumnName, orderItemMerchantImportedProductUrl, orderItemMerchantProductId, orderItemMerchantProductIdColumnName, orderItemOrderItemType, orderItemQuantity, orderItemShippingPrice, orderItemTitle, orderItemTotalPrice, orderItemGtin);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrderItem {\n");
    sb.append("    beezUPOrderItemId: ").append(toIndentedString(beezUPOrderItemId)).append("\n");
    sb.append("    orderItemBeezUPStoreId: ").append(toIndentedString(orderItemBeezUPStoreId)).append("\n");
    sb.append("    orderItemCondition: ").append(toIndentedString(orderItemCondition)).append("\n");
    sb.append("    orderItemImageUrl: ").append(toIndentedString(orderItemImageUrl)).append("\n");
    sb.append("    orderItemItemPrice: ").append(toIndentedString(orderItemItemPrice)).append("\n");
    sb.append("    orderItemItemTax: ").append(toIndentedString(orderItemItemTax)).append("\n");
    sb.append("    orderItemMarketPlaceProductId: ").append(toIndentedString(orderItemMarketPlaceProductId)).append("\n");
    sb.append("    orderItemMarketplaceImageUri: ").append(toIndentedString(orderItemMarketplaceImageUri)).append("\n");
    sb.append("    orderItemMarketplaceProductUri: ").append(toIndentedString(orderItemMarketplaceProductUri)).append("\n");
    sb.append("    orderItemMerchantImportedProductId: ").append(toIndentedString(orderItemMerchantImportedProductId)).append("\n");
    sb.append("    orderItemMerchantImportedProductIdColumnName: ").append(toIndentedString(orderItemMerchantImportedProductIdColumnName)).append("\n");
    sb.append("    orderItemMerchantImportedProductUrl: ").append(toIndentedString(orderItemMerchantImportedProductUrl)).append("\n");
    sb.append("    orderItemMerchantProductId: ").append(toIndentedString(orderItemMerchantProductId)).append("\n");
    sb.append("    orderItemMerchantProductIdColumnName: ").append(toIndentedString(orderItemMerchantProductIdColumnName)).append("\n");
    sb.append("    orderItemOrderItemType: ").append(toIndentedString(orderItemOrderItemType)).append("\n");
    sb.append("    orderItemQuantity: ").append(toIndentedString(orderItemQuantity)).append("\n");
    sb.append("    orderItemShippingPrice: ").append(toIndentedString(orderItemShippingPrice)).append("\n");
    sb.append("    orderItemTitle: ").append(toIndentedString(orderItemTitle)).append("\n");
    sb.append("    orderItemTotalPrice: ").append(toIndentedString(orderItemTotalPrice)).append("\n");
    sb.append("    orderItemGtin: ").append(toIndentedString(orderItemGtin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("beezUPOrderItemId");
    openapiFields.add("orderItem_BeezUPStoreId");
    openapiFields.add("orderItem_Condition");
    openapiFields.add("orderItem_ImageUrl");
    openapiFields.add("orderItem_ItemPrice");
    openapiFields.add("orderItem_ItemTax");
    openapiFields.add("orderItem_MarketPlaceProductId");
    openapiFields.add("orderItem_MarketplaceImageUri");
    openapiFields.add("orderItem_MarketplaceProductUri");
    openapiFields.add("orderItem_MerchantImportedProductId");
    openapiFields.add("orderItem_MerchantImportedProductIdColumnName");
    openapiFields.add("orderItem_MerchantImportedProductUrl");
    openapiFields.add("orderItem_MerchantProductId");
    openapiFields.add("orderItem_MerchantProductIdColumnName");
    openapiFields.add("orderItem_OrderItemType");
    openapiFields.add("orderItem_Quantity");
    openapiFields.add("orderItem_Shipping_Price");
    openapiFields.add("orderItem_Title");
    openapiFields.add("orderItem_TotalPrice");
    openapiFields.add("orderItem_gtin");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("beezUPOrderItemId");
    openapiRequiredFields.add("orderItem_OrderItemType");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to OrderItem
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!OrderItem.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in OrderItem is not found in the empty JSON string", OrderItem.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!OrderItem.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `OrderItem` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : OrderItem.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("beezUPOrderItemId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `beezUPOrderItemId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("beezUPOrderItemId").toString()));
      }
      if ((jsonObj.get("orderItem_BeezUPStoreId") != null && !jsonObj.get("orderItem_BeezUPStoreId").isJsonNull()) && !jsonObj.get("orderItem_BeezUPStoreId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderItem_BeezUPStoreId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderItem_BeezUPStoreId").toString()));
      }
      if ((jsonObj.get("orderItem_Condition") != null && !jsonObj.get("orderItem_Condition").isJsonNull()) && !jsonObj.get("orderItem_Condition").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderItem_Condition` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderItem_Condition").toString()));
      }
      if ((jsonObj.get("orderItem_ImageUrl") != null && !jsonObj.get("orderItem_ImageUrl").isJsonNull()) && !jsonObj.get("orderItem_ImageUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderItem_ImageUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderItem_ImageUrl").toString()));
      }
      if ((jsonObj.get("orderItem_MarketPlaceProductId") != null && !jsonObj.get("orderItem_MarketPlaceProductId").isJsonNull()) && !jsonObj.get("orderItem_MarketPlaceProductId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderItem_MarketPlaceProductId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderItem_MarketPlaceProductId").toString()));
      }
      if ((jsonObj.get("orderItem_MarketplaceImageUri") != null && !jsonObj.get("orderItem_MarketplaceImageUri").isJsonNull()) && !jsonObj.get("orderItem_MarketplaceImageUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderItem_MarketplaceImageUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderItem_MarketplaceImageUri").toString()));
      }
      if ((jsonObj.get("orderItem_MarketplaceProductUri") != null && !jsonObj.get("orderItem_MarketplaceProductUri").isJsonNull()) && !jsonObj.get("orderItem_MarketplaceProductUri").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderItem_MarketplaceProductUri` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderItem_MarketplaceProductUri").toString()));
      }
      if ((jsonObj.get("orderItem_MerchantImportedProductId") != null && !jsonObj.get("orderItem_MerchantImportedProductId").isJsonNull()) && !jsonObj.get("orderItem_MerchantImportedProductId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderItem_MerchantImportedProductId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderItem_MerchantImportedProductId").toString()));
      }
      if ((jsonObj.get("orderItem_MerchantImportedProductIdColumnName") != null && !jsonObj.get("orderItem_MerchantImportedProductIdColumnName").isJsonNull()) && !jsonObj.get("orderItem_MerchantImportedProductIdColumnName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderItem_MerchantImportedProductIdColumnName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderItem_MerchantImportedProductIdColumnName").toString()));
      }
      if ((jsonObj.get("orderItem_MerchantImportedProductUrl") != null && !jsonObj.get("orderItem_MerchantImportedProductUrl").isJsonNull()) && !jsonObj.get("orderItem_MerchantImportedProductUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderItem_MerchantImportedProductUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderItem_MerchantImportedProductUrl").toString()));
      }
      if ((jsonObj.get("orderItem_MerchantProductId") != null && !jsonObj.get("orderItem_MerchantProductId").isJsonNull()) && !jsonObj.get("orderItem_MerchantProductId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderItem_MerchantProductId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderItem_MerchantProductId").toString()));
      }
      if ((jsonObj.get("orderItem_MerchantProductIdColumnName") != null && !jsonObj.get("orderItem_MerchantProductIdColumnName").isJsonNull()) && !jsonObj.get("orderItem_MerchantProductIdColumnName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderItem_MerchantProductIdColumnName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderItem_MerchantProductIdColumnName").toString()));
      }
      if (!jsonObj.get("orderItem_OrderItemType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderItem_OrderItemType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderItem_OrderItemType").toString()));
      }
      if ((jsonObj.get("orderItem_Title") != null && !jsonObj.get("orderItem_Title").isJsonNull()) && !jsonObj.get("orderItem_Title").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderItem_Title` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderItem_Title").toString()));
      }
      if ((jsonObj.get("orderItem_gtin") != null && !jsonObj.get("orderItem_gtin").isJsonNull()) && !jsonObj.get("orderItem_gtin").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `orderItem_gtin` to be a primitive type in the JSON string but got `%s`", jsonObj.get("orderItem_gtin").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!OrderItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'OrderItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<OrderItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(OrderItem.class));

       return (TypeAdapter<T>) new TypeAdapter<OrderItem>() {
           @Override
           public void write(JsonWriter out, OrderItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public OrderItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of OrderItem given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of OrderItem
   * @throws IOException if the JSON string is invalid with respect to OrderItem
   */
  public static OrderItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, OrderItem.class);
  }

  /**
   * Convert an instance of OrderItem to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

