/*
 * BeezUP Merchant API 
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: help@beezup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.BeezUPCommonInfoSummaries;
import org.openapitools.client.model.BeezUPCommonLOVLink3;
import org.openapitools.client.model.ChannelCatalogMarketplacePropertyDiscriminatorType;
import org.openapitools.client.model.Type;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Model for fetching a channel catalog marketplace property
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:53.401769-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ChannelCatalogMarketplaceProperty {
  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DISCRIMINATOR_TYPE = "discriminatorType";
  @SerializedName(SERIALIZED_NAME_DISCRIMINATOR_TYPE)
  protected ChannelCatalogMarketplacePropertyDiscriminatorType discriminatorType;

  public static final String SERIALIZED_NAME_INFO = "info";
  @SerializedName(SERIALIZED_NAME_INFO)
  private BeezUPCommonInfoSummaries info;

  public static final String SERIALIZED_NAME_LOV_LINK = "lovLink";
  @SerializedName(SERIALIZED_NAME_LOV_LINK)
  private BeezUPCommonLOVLink3 lovLink;

  public static final String SERIALIZED_NAME_LOV_REQUIRED = "lovRequired";
  @SerializedName(SERIALIZED_NAME_LOV_REQUIRED)
  private Boolean lovRequired = false;

  public static final String SERIALIZED_NAME_MAX_ITEMS = "maxItems";
  @SerializedName(SERIALIZED_NAME_MAX_ITEMS)
  private Integer maxItems;

  public static final String SERIALIZED_NAME_MAX_LENGTH = "maxLength";
  @SerializedName(SERIALIZED_NAME_MAX_LENGTH)
  private Integer maxLength;

  public static final String SERIALIZED_NAME_MIN_ITEMS = "minItems";
  @SerializedName(SERIALIZED_NAME_MIN_ITEMS)
  private Integer minItems;

  public static final String SERIALIZED_NAME_MIN_LENGTH = "minLength";
  @SerializedName(SERIALIZED_NAME_MIN_LENGTH)
  private Integer minLength;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OFFER_ID_REQUIRED = "offerIdRequired";
  @SerializedName(SERIALIZED_NAME_OFFER_ID_REQUIRED)
  private Integer offerIdRequired;

  public static final String SERIALIZED_NAME_PATTERN = "pattern";
  @SerializedName(SERIALIZED_NAME_PATTERN)
  private String pattern;

  public static final String SERIALIZED_NAME_POSITION = "position";
  @SerializedName(SERIALIZED_NAME_POSITION)
  private Integer position;

  public static final String SERIALIZED_NAME_READ_ONLY = "readOnly";
  @SerializedName(SERIALIZED_NAME_READ_ONLY)
  private Boolean readOnly = false;

  public static final String SERIALIZED_NAME_REQUIRED = "required";
  @SerializedName(SERIALIZED_NAME_REQUIRED)
  private Boolean required = false;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private Type type;

  public static final String SERIALIZED_NAME_VISIBLE = "visible";
  @SerializedName(SERIALIZED_NAME_VISIBLE)
  private Boolean visible = true;

  public ChannelCatalogMarketplaceProperty() {
    this.discriminatorType = this.getClass().getSimpleName();
  }

  public ChannelCatalogMarketplaceProperty description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Indicate the description of the property
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public ChannelCatalogMarketplaceProperty discriminatorType(ChannelCatalogMarketplacePropertyDiscriminatorType discriminatorType) {
    this.discriminatorType = discriminatorType;
    return this;
  }

  /**
   * Get discriminatorType
   * @return discriminatorType
   */
  @javax.annotation.Nonnull
  public ChannelCatalogMarketplacePropertyDiscriminatorType getDiscriminatorType() {
    return discriminatorType;
  }

  public void setDiscriminatorType(ChannelCatalogMarketplacePropertyDiscriminatorType discriminatorType) {
    this.discriminatorType = discriminatorType;
  }


  public ChannelCatalogMarketplaceProperty info(BeezUPCommonInfoSummaries info) {
    this.info = info;
    return this;
  }

  /**
   * Get info
   * @return info
   */
  @javax.annotation.Nullable
  public BeezUPCommonInfoSummaries getInfo() {
    return info;
  }

  public void setInfo(BeezUPCommonInfoSummaries info) {
    this.info = info;
  }


  public ChannelCatalogMarketplaceProperty lovLink(BeezUPCommonLOVLink3 lovLink) {
    this.lovLink = lovLink;
    return this;
  }

  /**
   * Get lovLink
   * @return lovLink
   */
  @javax.annotation.Nullable
  public BeezUPCommonLOVLink3 getLovLink() {
    return lovLink;
  }

  public void setLovLink(BeezUPCommonLOVLink3 lovLink) {
    this.lovLink = lovLink;
  }


  public ChannelCatalogMarketplaceProperty lovRequired(Boolean lovRequired) {
    this.lovRequired = lovRequired;
    return this;
  }

  /**
   * Indicates if the property value must be in the list of value.
   * @return lovRequired
   */
  @javax.annotation.Nullable
  public Boolean getLovRequired() {
    return lovRequired;
  }

  public void setLovRequired(Boolean lovRequired) {
    this.lovRequired = lovRequired;
  }


  public ChannelCatalogMarketplaceProperty maxItems(Integer maxItems) {
    this.maxItems = maxItems;
    return this;
  }

  /**
   * Indicates the maximum item count of the property value
   * minimum: 1
   * @return maxItems
   */
  @javax.annotation.Nullable
  public Integer getMaxItems() {
    return maxItems;
  }

  public void setMaxItems(Integer maxItems) {
    this.maxItems = maxItems;
  }


  public ChannelCatalogMarketplaceProperty maxLength(Integer maxLength) {
    this.maxLength = maxLength;
    return this;
  }

  /**
   * Indicates the maximum size of the property value
   * minimum: 1
   * @return maxLength
   */
  @javax.annotation.Nullable
  public Integer getMaxLength() {
    return maxLength;
  }

  public void setMaxLength(Integer maxLength) {
    this.maxLength = maxLength;
  }


  public ChannelCatalogMarketplaceProperty minItems(Integer minItems) {
    this.minItems = minItems;
    return this;
  }

  /**
   * Indicates the minimum item count of the property value.
   * minimum: 0
   * @return minItems
   */
  @javax.annotation.Nullable
  public Integer getMinItems() {
    return minItems;
  }

  public void setMinItems(Integer minItems) {
    this.minItems = minItems;
  }


  public ChannelCatalogMarketplaceProperty minLength(Integer minLength) {
    this.minLength = minLength;
    return this;
  }

  /**
   * Indicates the minimum size of the property value
   * minimum: 0
   * @return minLength
   */
  @javax.annotation.Nullable
  public Integer getMinLength() {
    return minLength;
  }

  public void setMinLength(Integer minLength) {
    this.minLength = minLength;
  }


  public ChannelCatalogMarketplaceProperty name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Channel catalog marketplace property name
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public ChannelCatalogMarketplaceProperty offerIdRequired(Integer offerIdRequired) {
    this.offerIdRequired = offerIdRequired;
    return this;
  }

  /**
   * Indicates the offer identifier required to configure this property.
   * @return offerIdRequired
   */
  @javax.annotation.Nullable
  public Integer getOfferIdRequired() {
    return offerIdRequired;
  }

  public void setOfferIdRequired(Integer offerIdRequired) {
    this.offerIdRequired = offerIdRequired;
  }


  public ChannelCatalogMarketplaceProperty pattern(String pattern) {
    this.pattern = pattern;
    return this;
  }

  /**
   * Channel catalog marketplace setting value format validation regular expression
   * @return pattern
   */
  @javax.annotation.Nullable
  public String getPattern() {
    return pattern;
  }

  public void setPattern(String pattern) {
    this.pattern = pattern;
  }


  public ChannelCatalogMarketplaceProperty position(Integer position) {
    this.position = position;
    return this;
  }

  /**
   * Indicate the position of the property in the display group
   * minimum: 1
   * @return position
   */
  @javax.annotation.Nonnull
  public Integer getPosition() {
    return position;
  }

  public void setPosition(Integer position) {
    this.position = position;
  }


  public ChannelCatalogMarketplaceProperty readOnly(Boolean readOnly) {
    this.readOnly = readOnly;
    return this;
  }

  /**
   * Indicate if the value cannot be changed. This is used for example for ebay token that should not be changed.
   * @return readOnly
   */
  @javax.annotation.Nonnull
  public Boolean getReadOnly() {
    return readOnly;
  }

  public void setReadOnly(Boolean readOnly) {
    this.readOnly = readOnly;
  }


  public ChannelCatalogMarketplaceProperty required(Boolean required) {
    this.required = required;
    return this;
  }

  /**
   * Indicate if the property is required or not
   * @return required
   */
  @javax.annotation.Nonnull
  public Boolean getRequired() {
    return required;
  }

  public void setRequired(Boolean required) {
    this.required = required;
  }


  public ChannelCatalogMarketplaceProperty type(Type type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nonnull
  public Type getType() {
    return type;
  }

  public void setType(Type type) {
    this.type = type;
  }


  public ChannelCatalogMarketplaceProperty visible(Boolean visible) {
    this.visible = visible;
    return this;
  }

  /**
   * Indicates if this property should be displayed in the configuration page.
   * @return visible
   */
  @javax.annotation.Nonnull
  public Boolean getVisible() {
    return visible;
  }

  public void setVisible(Boolean visible) {
    this.visible = visible;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChannelCatalogMarketplaceProperty channelCatalogMarketplaceProperty = (ChannelCatalogMarketplaceProperty) o;
    return Objects.equals(this.description, channelCatalogMarketplaceProperty.description) &&
        Objects.equals(this.discriminatorType, channelCatalogMarketplaceProperty.discriminatorType) &&
        Objects.equals(this.info, channelCatalogMarketplaceProperty.info) &&
        Objects.equals(this.lovLink, channelCatalogMarketplaceProperty.lovLink) &&
        Objects.equals(this.lovRequired, channelCatalogMarketplaceProperty.lovRequired) &&
        Objects.equals(this.maxItems, channelCatalogMarketplaceProperty.maxItems) &&
        Objects.equals(this.maxLength, channelCatalogMarketplaceProperty.maxLength) &&
        Objects.equals(this.minItems, channelCatalogMarketplaceProperty.minItems) &&
        Objects.equals(this.minLength, channelCatalogMarketplaceProperty.minLength) &&
        Objects.equals(this.name, channelCatalogMarketplaceProperty.name) &&
        Objects.equals(this.offerIdRequired, channelCatalogMarketplaceProperty.offerIdRequired) &&
        Objects.equals(this.pattern, channelCatalogMarketplaceProperty.pattern) &&
        Objects.equals(this.position, channelCatalogMarketplaceProperty.position) &&
        Objects.equals(this.readOnly, channelCatalogMarketplaceProperty.readOnly) &&
        Objects.equals(this.required, channelCatalogMarketplaceProperty.required) &&
        Objects.equals(this.type, channelCatalogMarketplaceProperty.type) &&
        Objects.equals(this.visible, channelCatalogMarketplaceProperty.visible);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, discriminatorType, info, lovLink, lovRequired, maxItems, maxLength, minItems, minLength, name, offerIdRequired, pattern, position, readOnly, required, type, visible);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChannelCatalogMarketplaceProperty {\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    discriminatorType: ").append(toIndentedString(discriminatorType)).append("\n");
    sb.append("    info: ").append(toIndentedString(info)).append("\n");
    sb.append("    lovLink: ").append(toIndentedString(lovLink)).append("\n");
    sb.append("    lovRequired: ").append(toIndentedString(lovRequired)).append("\n");
    sb.append("    maxItems: ").append(toIndentedString(maxItems)).append("\n");
    sb.append("    maxLength: ").append(toIndentedString(maxLength)).append("\n");
    sb.append("    minItems: ").append(toIndentedString(minItems)).append("\n");
    sb.append("    minLength: ").append(toIndentedString(minLength)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    offerIdRequired: ").append(toIndentedString(offerIdRequired)).append("\n");
    sb.append("    pattern: ").append(toIndentedString(pattern)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    readOnly: ").append(toIndentedString(readOnly)).append("\n");
    sb.append("    required: ").append(toIndentedString(required)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    visible: ").append(toIndentedString(visible)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("description");
    openapiFields.add("discriminatorType");
    openapiFields.add("info");
    openapiFields.add("lovLink");
    openapiFields.add("lovRequired");
    openapiFields.add("maxItems");
    openapiFields.add("maxLength");
    openapiFields.add("minItems");
    openapiFields.add("minLength");
    openapiFields.add("name");
    openapiFields.add("offerIdRequired");
    openapiFields.add("pattern");
    openapiFields.add("position");
    openapiFields.add("readOnly");
    openapiFields.add("required");
    openapiFields.add("type");
    openapiFields.add("visible");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("discriminatorType");
    openapiRequiredFields.add("name");
    openapiRequiredFields.add("position");
    openapiRequiredFields.add("readOnly");
    openapiRequiredFields.add("required");
    openapiRequiredFields.add("type");
    openapiRequiredFields.add("visible");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ChannelCatalogMarketplaceProperty
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ChannelCatalogMarketplaceProperty.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ChannelCatalogMarketplaceProperty is not found in the empty JSON string", ChannelCatalogMarketplaceProperty.openapiRequiredFields.toString()));
        }
      }

      String discriminatorValue = jsonElement.getAsJsonObject().get("discriminatorType").getAsString();
      switch (discriminatorValue) {
        case "channelCatalogMarketplaceBooleanProperty":
          ChannelCatalogMarketplaceBooleanProperty.validateJsonElement(jsonElement);
          break;
        case "channelCatalogMarketplaceIntegerProperty":
          ChannelCatalogMarketplaceIntegerProperty.validateJsonElement(jsonElement);
          break;
        case "channelCatalogMarketplaceNumberProperty":
          ChannelCatalogMarketplaceNumberProperty.validateJsonElement(jsonElement);
          break;
        case "channelCatalogMarketplaceStringProperty":
          ChannelCatalogMarketplaceStringProperty.validateJsonElement(jsonElement);
          break;
        default:
          throw new IllegalArgumentException(String.format("The value of the `discriminatorType` field `%s` does not match any key defined in the discriminator's mapping.", discriminatorValue));
      }
  }


  /**
   * Create an instance of ChannelCatalogMarketplaceProperty given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ChannelCatalogMarketplaceProperty
   * @throws IOException if the JSON string is invalid with respect to ChannelCatalogMarketplaceProperty
   */
  public static ChannelCatalogMarketplaceProperty fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ChannelCatalogMarketplaceProperty.class);
  }

  /**
   * Convert an instance of ChannelCatalogMarketplaceProperty to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

