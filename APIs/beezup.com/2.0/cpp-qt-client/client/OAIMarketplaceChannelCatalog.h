/**
 * BeezUP Merchant API 
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: help@beezup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMarketplaceChannelCatalog.h
 *
 * This object indicates you the association between a channel catalog and a marketplace. The account identifier will be automatically defined based on your marketplace merchant identfier.
 */

#ifndef OAIMarketplaceChannelCatalog_H
#define OAIMarketplaceChannelCatalog_H

#include <QJsonObject>

#include "OAIBeezUP_Common_ApiSettingsStatus.h"
#include "OAIMarketplaceChannelCatalogLinks.h"
#include "OAIMarketplaceChannelCatalogLovLinks.h"
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMarketplaceChannelCatalogLinks;
class OAIMarketplaceChannelCatalogLovLinks;

class OAIMarketplaceChannelCatalog : public OAIObject {
public:
    OAIMarketplaceChannelCatalog();
    OAIMarketplaceChannelCatalog(QString json);
    ~OAIMarketplaceChannelCatalog() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBeezUP_Common_ApiSettingsStatus getApiSettingsStatus() const;
    void setApiSettingsStatus(const OAIBeezUP_Common_ApiSettingsStatus &api_settings_status);
    bool is_api_settings_status_Set() const;
    bool is_api_settings_status_Valid() const;

    QString getBeezUpChannelCatalogId() const;
    void setBeezUpChannelCatalogId(const QString &beez_up_channel_catalog_id);
    bool is_beez_up_channel_catalog_id_Set() const;
    bool is_beez_up_channel_catalog_id_Valid() const;

    QString getBeezUpChannelId() const;
    void setBeezUpChannelId(const QString &beez_up_channel_id);
    bool is_beez_up_channel_id_Set() const;
    bool is_beez_up_channel_id_Valid() const;

    QJsonValue getBeezUpMarketplaceName() const;
    void setBeezUpMarketplaceName(const QJsonValue &beez_up_marketplace_name);
    bool is_beez_up_marketplace_name_Set() const;
    bool is_beez_up_marketplace_name_Valid() const;

    QString getBeezUpStoreId() const;
    void setBeezUpStoreId(const QString &beez_up_store_id);
    bool is_beez_up_store_id_Set() const;
    bool is_beez_up_store_id_Valid() const;

    QString getBeezUpStoreName() const;
    void setBeezUpStoreName(const QString &beez_up_store_name);
    bool is_beez_up_store_name_Set() const;
    bool is_beez_up_store_name_Valid() const;

    bool isEnabled() const;
    void setEnabled(const bool &enabled);
    bool is_enabled_Set() const;
    bool is_enabled_Valid() const;

    OAIMarketplaceChannelCatalogLinks getLinks() const;
    void setLinks(const OAIMarketplaceChannelCatalogLinks &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    OAIMarketplaceChannelCatalogLovLinks getLovLinks() const;
    void setLovLinks(const OAIMarketplaceChannelCatalogLovLinks &lov_links);
    bool is_lov_links_Set() const;
    bool is_lov_links_Valid() const;

    qint32 getMarketplaceAccountId() const;
    void setMarketplaceAccountId(const qint32 &marketplace_account_id);
    bool is_marketplace_account_id_Set() const;
    bool is_marketplace_account_id_Valid() const;

    QString getMarketplaceBusinessCode() const;
    void setMarketplaceBusinessCode(const QString &marketplace_business_code);
    bool is_marketplace_business_code_Set() const;
    bool is_marketplace_business_code_Valid() const;

    QString getMarketplaceIsoCountryCodeAlpha2() const;
    void setMarketplaceIsoCountryCodeAlpha2(const QString &marketplace_iso_country_code_alpha2);
    bool is_marketplace_iso_country_code_alpha2_Set() const;
    bool is_marketplace_iso_country_code_alpha2_Valid() const;

    QString getMarketplaceMarketPlaceId() const;
    void setMarketplaceMarketPlaceId(const QString &marketplace_market_place_id);
    bool is_marketplace_market_place_id_Set() const;
    bool is_marketplace_market_place_id_Valid() const;

    QMap<QString, QString> getMarketplaceMerchantIdentifiers() const;
    void setMarketplaceMerchantIdentifiers(const QMap<QString, QString> &marketplace_merchant_identifiers);
    bool is_marketplace_merchant_identifiers_Set() const;
    bool is_marketplace_merchant_identifiers_Valid() const;

    QString getMarketplaceTechnicalCode() const;
    void setMarketplaceTechnicalCode(const QString &marketplace_technical_code);
    bool is_marketplace_technical_code_Set() const;
    bool is_marketplace_technical_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBeezUP_Common_ApiSettingsStatus m_api_settings_status;
    bool m_api_settings_status_isSet;
    bool m_api_settings_status_isValid;

    QString m_beez_up_channel_catalog_id;
    bool m_beez_up_channel_catalog_id_isSet;
    bool m_beez_up_channel_catalog_id_isValid;

    QString m_beez_up_channel_id;
    bool m_beez_up_channel_id_isSet;
    bool m_beez_up_channel_id_isValid;

    QJsonValue m_beez_up_marketplace_name;
    bool m_beez_up_marketplace_name_isSet;
    bool m_beez_up_marketplace_name_isValid;

    QString m_beez_up_store_id;
    bool m_beez_up_store_id_isSet;
    bool m_beez_up_store_id_isValid;

    QString m_beez_up_store_name;
    bool m_beez_up_store_name_isSet;
    bool m_beez_up_store_name_isValid;

    bool m_enabled;
    bool m_enabled_isSet;
    bool m_enabled_isValid;

    OAIMarketplaceChannelCatalogLinks m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    OAIMarketplaceChannelCatalogLovLinks m_lov_links;
    bool m_lov_links_isSet;
    bool m_lov_links_isValid;

    qint32 m_marketplace_account_id;
    bool m_marketplace_account_id_isSet;
    bool m_marketplace_account_id_isValid;

    QString m_marketplace_business_code;
    bool m_marketplace_business_code_isSet;
    bool m_marketplace_business_code_isValid;

    QString m_marketplace_iso_country_code_alpha2;
    bool m_marketplace_iso_country_code_alpha2_isSet;
    bool m_marketplace_iso_country_code_alpha2_isValid;

    QString m_marketplace_market_place_id;
    bool m_marketplace_market_place_id_isSet;
    bool m_marketplace_market_place_id_isValid;

    QMap<QString, QString> m_marketplace_merchant_identifiers;
    bool m_marketplace_merchant_identifiers_isSet;
    bool m_marketplace_merchant_identifiers_isValid;

    QString m_marketplace_technical_code;
    bool m_marketplace_technical_code_isSet;
    bool m_marketplace_technical_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMarketplaceChannelCatalog)

#endif // OAIMarketplaceChannelCatalog_H
