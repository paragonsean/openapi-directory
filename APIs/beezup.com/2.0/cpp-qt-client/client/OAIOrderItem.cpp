/**
 * BeezUP Merchant API 
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: help@beezup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderItem.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderItem::OAIOrderItem(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderItem::OAIOrderItem() {
    this->initializeModel();
}

OAIOrderItem::~OAIOrderItem() {}

void OAIOrderItem::initializeModel() {

    m_beez_up_order_item_id_isSet = false;
    m_beez_up_order_item_id_isValid = false;

    m_order_item_beez_up_store_id_isSet = false;
    m_order_item_beez_up_store_id_isValid = false;

    m_order_item_condition_isSet = false;
    m_order_item_condition_isValid = false;

    m_order_item_image_url_isSet = false;
    m_order_item_image_url_isValid = false;

    m_order_item_item_price_isSet = false;
    m_order_item_item_price_isValid = false;

    m_order_item_item_tax_isSet = false;
    m_order_item_item_tax_isValid = false;

    m_order_item_market_place_product_id_isSet = false;
    m_order_item_market_place_product_id_isValid = false;

    m_order_item_marketplace_image_uri_isSet = false;
    m_order_item_marketplace_image_uri_isValid = false;

    m_order_item_marketplace_product_uri_isSet = false;
    m_order_item_marketplace_product_uri_isValid = false;

    m_order_item_merchant_imported_product_id_isSet = false;
    m_order_item_merchant_imported_product_id_isValid = false;

    m_order_item_merchant_imported_product_id_column_name_isSet = false;
    m_order_item_merchant_imported_product_id_column_name_isValid = false;

    m_order_item_merchant_imported_product_url_isSet = false;
    m_order_item_merchant_imported_product_url_isValid = false;

    m_order_item_merchant_product_id_isSet = false;
    m_order_item_merchant_product_id_isValid = false;

    m_order_item_merchant_product_id_column_name_isSet = false;
    m_order_item_merchant_product_id_column_name_isValid = false;

    m_order_item_order_item_type_isSet = false;
    m_order_item_order_item_type_isValid = false;

    m_order_item_quantity_isSet = false;
    m_order_item_quantity_isValid = false;

    m_order_item_shipping_price_isSet = false;
    m_order_item_shipping_price_isValid = false;

    m_order_item_title_isSet = false;
    m_order_item_title_isValid = false;

    m_order_item_total_price_isSet = false;
    m_order_item_total_price_isValid = false;

    m_order_item_gtin_isSet = false;
    m_order_item_gtin_isValid = false;
}

void OAIOrderItem::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderItem::fromJsonObject(QJsonObject json) {

    m_beez_up_order_item_id_isValid = ::OpenAPI::fromJsonValue(m_beez_up_order_item_id, json[QString("beezUPOrderItemId")]);
    m_beez_up_order_item_id_isSet = !json[QString("beezUPOrderItemId")].isNull() && m_beez_up_order_item_id_isValid;

    m_order_item_beez_up_store_id_isValid = ::OpenAPI::fromJsonValue(m_order_item_beez_up_store_id, json[QString("orderItem_BeezUPStoreId")]);
    m_order_item_beez_up_store_id_isSet = !json[QString("orderItem_BeezUPStoreId")].isNull() && m_order_item_beez_up_store_id_isValid;

    m_order_item_condition_isValid = ::OpenAPI::fromJsonValue(m_order_item_condition, json[QString("orderItem_Condition")]);
    m_order_item_condition_isSet = !json[QString("orderItem_Condition")].isNull() && m_order_item_condition_isValid;

    m_order_item_image_url_isValid = ::OpenAPI::fromJsonValue(m_order_item_image_url, json[QString("orderItem_ImageUrl")]);
    m_order_item_image_url_isSet = !json[QString("orderItem_ImageUrl")].isNull() && m_order_item_image_url_isValid;

    m_order_item_item_price_isValid = ::OpenAPI::fromJsonValue(m_order_item_item_price, json[QString("orderItem_ItemPrice")]);
    m_order_item_item_price_isSet = !json[QString("orderItem_ItemPrice")].isNull() && m_order_item_item_price_isValid;

    m_order_item_item_tax_isValid = ::OpenAPI::fromJsonValue(m_order_item_item_tax, json[QString("orderItem_ItemTax")]);
    m_order_item_item_tax_isSet = !json[QString("orderItem_ItemTax")].isNull() && m_order_item_item_tax_isValid;

    m_order_item_market_place_product_id_isValid = ::OpenAPI::fromJsonValue(m_order_item_market_place_product_id, json[QString("orderItem_MarketPlaceProductId")]);
    m_order_item_market_place_product_id_isSet = !json[QString("orderItem_MarketPlaceProductId")].isNull() && m_order_item_market_place_product_id_isValid;

    m_order_item_marketplace_image_uri_isValid = ::OpenAPI::fromJsonValue(m_order_item_marketplace_image_uri, json[QString("orderItem_MarketplaceImageUri")]);
    m_order_item_marketplace_image_uri_isSet = !json[QString("orderItem_MarketplaceImageUri")].isNull() && m_order_item_marketplace_image_uri_isValid;

    m_order_item_marketplace_product_uri_isValid = ::OpenAPI::fromJsonValue(m_order_item_marketplace_product_uri, json[QString("orderItem_MarketplaceProductUri")]);
    m_order_item_marketplace_product_uri_isSet = !json[QString("orderItem_MarketplaceProductUri")].isNull() && m_order_item_marketplace_product_uri_isValid;

    m_order_item_merchant_imported_product_id_isValid = ::OpenAPI::fromJsonValue(m_order_item_merchant_imported_product_id, json[QString("orderItem_MerchantImportedProductId")]);
    m_order_item_merchant_imported_product_id_isSet = !json[QString("orderItem_MerchantImportedProductId")].isNull() && m_order_item_merchant_imported_product_id_isValid;

    m_order_item_merchant_imported_product_id_column_name_isValid = ::OpenAPI::fromJsonValue(m_order_item_merchant_imported_product_id_column_name, json[QString("orderItem_MerchantImportedProductIdColumnName")]);
    m_order_item_merchant_imported_product_id_column_name_isSet = !json[QString("orderItem_MerchantImportedProductIdColumnName")].isNull() && m_order_item_merchant_imported_product_id_column_name_isValid;

    m_order_item_merchant_imported_product_url_isValid = ::OpenAPI::fromJsonValue(m_order_item_merchant_imported_product_url, json[QString("orderItem_MerchantImportedProductUrl")]);
    m_order_item_merchant_imported_product_url_isSet = !json[QString("orderItem_MerchantImportedProductUrl")].isNull() && m_order_item_merchant_imported_product_url_isValid;

    m_order_item_merchant_product_id_isValid = ::OpenAPI::fromJsonValue(m_order_item_merchant_product_id, json[QString("orderItem_MerchantProductId")]);
    m_order_item_merchant_product_id_isSet = !json[QString("orderItem_MerchantProductId")].isNull() && m_order_item_merchant_product_id_isValid;

    m_order_item_merchant_product_id_column_name_isValid = ::OpenAPI::fromJsonValue(m_order_item_merchant_product_id_column_name, json[QString("orderItem_MerchantProductIdColumnName")]);
    m_order_item_merchant_product_id_column_name_isSet = !json[QString("orderItem_MerchantProductIdColumnName")].isNull() && m_order_item_merchant_product_id_column_name_isValid;

    m_order_item_order_item_type_isValid = ::OpenAPI::fromJsonValue(m_order_item_order_item_type, json[QString("orderItem_OrderItemType")]);
    m_order_item_order_item_type_isSet = !json[QString("orderItem_OrderItemType")].isNull() && m_order_item_order_item_type_isValid;

    m_order_item_quantity_isValid = ::OpenAPI::fromJsonValue(m_order_item_quantity, json[QString("orderItem_Quantity")]);
    m_order_item_quantity_isSet = !json[QString("orderItem_Quantity")].isNull() && m_order_item_quantity_isValid;

    m_order_item_shipping_price_isValid = ::OpenAPI::fromJsonValue(m_order_item_shipping_price, json[QString("orderItem_Shipping_Price")]);
    m_order_item_shipping_price_isSet = !json[QString("orderItem_Shipping_Price")].isNull() && m_order_item_shipping_price_isValid;

    m_order_item_title_isValid = ::OpenAPI::fromJsonValue(m_order_item_title, json[QString("orderItem_Title")]);
    m_order_item_title_isSet = !json[QString("orderItem_Title")].isNull() && m_order_item_title_isValid;

    m_order_item_total_price_isValid = ::OpenAPI::fromJsonValue(m_order_item_total_price, json[QString("orderItem_TotalPrice")]);
    m_order_item_total_price_isSet = !json[QString("orderItem_TotalPrice")].isNull() && m_order_item_total_price_isValid;

    m_order_item_gtin_isValid = ::OpenAPI::fromJsonValue(m_order_item_gtin, json[QString("orderItem_gtin")]);
    m_order_item_gtin_isSet = !json[QString("orderItem_gtin")].isNull() && m_order_item_gtin_isValid;
}

QString OAIOrderItem::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderItem::asJsonObject() const {
    QJsonObject obj;
    if (m_beez_up_order_item_id_isSet) {
        obj.insert(QString("beezUPOrderItemId"), ::OpenAPI::toJsonValue(m_beez_up_order_item_id));
    }
    if (m_order_item_beez_up_store_id_isSet) {
        obj.insert(QString("orderItem_BeezUPStoreId"), ::OpenAPI::toJsonValue(m_order_item_beez_up_store_id));
    }
    if (m_order_item_condition_isSet) {
        obj.insert(QString("orderItem_Condition"), ::OpenAPI::toJsonValue(m_order_item_condition));
    }
    if (m_order_item_image_url_isSet) {
        obj.insert(QString("orderItem_ImageUrl"), ::OpenAPI::toJsonValue(m_order_item_image_url));
    }
    if (m_order_item_item_price_isSet) {
        obj.insert(QString("orderItem_ItemPrice"), ::OpenAPI::toJsonValue(m_order_item_item_price));
    }
    if (m_order_item_item_tax_isSet) {
        obj.insert(QString("orderItem_ItemTax"), ::OpenAPI::toJsonValue(m_order_item_item_tax));
    }
    if (m_order_item_market_place_product_id_isSet) {
        obj.insert(QString("orderItem_MarketPlaceProductId"), ::OpenAPI::toJsonValue(m_order_item_market_place_product_id));
    }
    if (m_order_item_marketplace_image_uri_isSet) {
        obj.insert(QString("orderItem_MarketplaceImageUri"), ::OpenAPI::toJsonValue(m_order_item_marketplace_image_uri));
    }
    if (m_order_item_marketplace_product_uri_isSet) {
        obj.insert(QString("orderItem_MarketplaceProductUri"), ::OpenAPI::toJsonValue(m_order_item_marketplace_product_uri));
    }
    if (m_order_item_merchant_imported_product_id_isSet) {
        obj.insert(QString("orderItem_MerchantImportedProductId"), ::OpenAPI::toJsonValue(m_order_item_merchant_imported_product_id));
    }
    if (m_order_item_merchant_imported_product_id_column_name_isSet) {
        obj.insert(QString("orderItem_MerchantImportedProductIdColumnName"), ::OpenAPI::toJsonValue(m_order_item_merchant_imported_product_id_column_name));
    }
    if (m_order_item_merchant_imported_product_url_isSet) {
        obj.insert(QString("orderItem_MerchantImportedProductUrl"), ::OpenAPI::toJsonValue(m_order_item_merchant_imported_product_url));
    }
    if (m_order_item_merchant_product_id_isSet) {
        obj.insert(QString("orderItem_MerchantProductId"), ::OpenAPI::toJsonValue(m_order_item_merchant_product_id));
    }
    if (m_order_item_merchant_product_id_column_name_isSet) {
        obj.insert(QString("orderItem_MerchantProductIdColumnName"), ::OpenAPI::toJsonValue(m_order_item_merchant_product_id_column_name));
    }
    if (m_order_item_order_item_type_isSet) {
        obj.insert(QString("orderItem_OrderItemType"), ::OpenAPI::toJsonValue(m_order_item_order_item_type));
    }
    if (m_order_item_quantity_isSet) {
        obj.insert(QString("orderItem_Quantity"), ::OpenAPI::toJsonValue(m_order_item_quantity));
    }
    if (m_order_item_shipping_price_isSet) {
        obj.insert(QString("orderItem_Shipping_Price"), ::OpenAPI::toJsonValue(m_order_item_shipping_price));
    }
    if (m_order_item_title_isSet) {
        obj.insert(QString("orderItem_Title"), ::OpenAPI::toJsonValue(m_order_item_title));
    }
    if (m_order_item_total_price_isSet) {
        obj.insert(QString("orderItem_TotalPrice"), ::OpenAPI::toJsonValue(m_order_item_total_price));
    }
    if (m_order_item_gtin_isSet) {
        obj.insert(QString("orderItem_gtin"), ::OpenAPI::toJsonValue(m_order_item_gtin));
    }
    return obj;
}

QString OAIOrderItem::getBeezUpOrderItemId() const {
    return m_beez_up_order_item_id;
}
void OAIOrderItem::setBeezUpOrderItemId(const QString &beez_up_order_item_id) {
    m_beez_up_order_item_id = beez_up_order_item_id;
    m_beez_up_order_item_id_isSet = true;
}

bool OAIOrderItem::is_beez_up_order_item_id_Set() const{
    return m_beez_up_order_item_id_isSet;
}

bool OAIOrderItem::is_beez_up_order_item_id_Valid() const{
    return m_beez_up_order_item_id_isValid;
}

QString OAIOrderItem::getOrderItemBeezUpStoreId() const {
    return m_order_item_beez_up_store_id;
}
void OAIOrderItem::setOrderItemBeezUpStoreId(const QString &order_item_beez_up_store_id) {
    m_order_item_beez_up_store_id = order_item_beez_up_store_id;
    m_order_item_beez_up_store_id_isSet = true;
}

bool OAIOrderItem::is_order_item_beez_up_store_id_Set() const{
    return m_order_item_beez_up_store_id_isSet;
}

bool OAIOrderItem::is_order_item_beez_up_store_id_Valid() const{
    return m_order_item_beez_up_store_id_isValid;
}

QString OAIOrderItem::getOrderItemCondition() const {
    return m_order_item_condition;
}
void OAIOrderItem::setOrderItemCondition(const QString &order_item_condition) {
    m_order_item_condition = order_item_condition;
    m_order_item_condition_isSet = true;
}

bool OAIOrderItem::is_order_item_condition_Set() const{
    return m_order_item_condition_isSet;
}

bool OAIOrderItem::is_order_item_condition_Valid() const{
    return m_order_item_condition_isValid;
}

QString OAIOrderItem::getOrderItemImageUrl() const {
    return m_order_item_image_url;
}
void OAIOrderItem::setOrderItemImageUrl(const QString &order_item_image_url) {
    m_order_item_image_url = order_item_image_url;
    m_order_item_image_url_isSet = true;
}

bool OAIOrderItem::is_order_item_image_url_Set() const{
    return m_order_item_image_url_isSet;
}

bool OAIOrderItem::is_order_item_image_url_Valid() const{
    return m_order_item_image_url_isValid;
}

double OAIOrderItem::getOrderItemItemPrice() const {
    return m_order_item_item_price;
}
void OAIOrderItem::setOrderItemItemPrice(const double &order_item_item_price) {
    m_order_item_item_price = order_item_item_price;
    m_order_item_item_price_isSet = true;
}

bool OAIOrderItem::is_order_item_item_price_Set() const{
    return m_order_item_item_price_isSet;
}

bool OAIOrderItem::is_order_item_item_price_Valid() const{
    return m_order_item_item_price_isValid;
}

double OAIOrderItem::getOrderItemItemTax() const {
    return m_order_item_item_tax;
}
void OAIOrderItem::setOrderItemItemTax(const double &order_item_item_tax) {
    m_order_item_item_tax = order_item_item_tax;
    m_order_item_item_tax_isSet = true;
}

bool OAIOrderItem::is_order_item_item_tax_Set() const{
    return m_order_item_item_tax_isSet;
}

bool OAIOrderItem::is_order_item_item_tax_Valid() const{
    return m_order_item_item_tax_isValid;
}

QString OAIOrderItem::getOrderItemMarketPlaceProductId() const {
    return m_order_item_market_place_product_id;
}
void OAIOrderItem::setOrderItemMarketPlaceProductId(const QString &order_item_market_place_product_id) {
    m_order_item_market_place_product_id = order_item_market_place_product_id;
    m_order_item_market_place_product_id_isSet = true;
}

bool OAIOrderItem::is_order_item_market_place_product_id_Set() const{
    return m_order_item_market_place_product_id_isSet;
}

bool OAIOrderItem::is_order_item_market_place_product_id_Valid() const{
    return m_order_item_market_place_product_id_isValid;
}

QString OAIOrderItem::getOrderItemMarketplaceImageUri() const {
    return m_order_item_marketplace_image_uri;
}
void OAIOrderItem::setOrderItemMarketplaceImageUri(const QString &order_item_marketplace_image_uri) {
    m_order_item_marketplace_image_uri = order_item_marketplace_image_uri;
    m_order_item_marketplace_image_uri_isSet = true;
}

bool OAIOrderItem::is_order_item_marketplace_image_uri_Set() const{
    return m_order_item_marketplace_image_uri_isSet;
}

bool OAIOrderItem::is_order_item_marketplace_image_uri_Valid() const{
    return m_order_item_marketplace_image_uri_isValid;
}

QString OAIOrderItem::getOrderItemMarketplaceProductUri() const {
    return m_order_item_marketplace_product_uri;
}
void OAIOrderItem::setOrderItemMarketplaceProductUri(const QString &order_item_marketplace_product_uri) {
    m_order_item_marketplace_product_uri = order_item_marketplace_product_uri;
    m_order_item_marketplace_product_uri_isSet = true;
}

bool OAIOrderItem::is_order_item_marketplace_product_uri_Set() const{
    return m_order_item_marketplace_product_uri_isSet;
}

bool OAIOrderItem::is_order_item_marketplace_product_uri_Valid() const{
    return m_order_item_marketplace_product_uri_isValid;
}

QString OAIOrderItem::getOrderItemMerchantImportedProductId() const {
    return m_order_item_merchant_imported_product_id;
}
void OAIOrderItem::setOrderItemMerchantImportedProductId(const QString &order_item_merchant_imported_product_id) {
    m_order_item_merchant_imported_product_id = order_item_merchant_imported_product_id;
    m_order_item_merchant_imported_product_id_isSet = true;
}

bool OAIOrderItem::is_order_item_merchant_imported_product_id_Set() const{
    return m_order_item_merchant_imported_product_id_isSet;
}

bool OAIOrderItem::is_order_item_merchant_imported_product_id_Valid() const{
    return m_order_item_merchant_imported_product_id_isValid;
}

QString OAIOrderItem::getOrderItemMerchantImportedProductIdColumnName() const {
    return m_order_item_merchant_imported_product_id_column_name;
}
void OAIOrderItem::setOrderItemMerchantImportedProductIdColumnName(const QString &order_item_merchant_imported_product_id_column_name) {
    m_order_item_merchant_imported_product_id_column_name = order_item_merchant_imported_product_id_column_name;
    m_order_item_merchant_imported_product_id_column_name_isSet = true;
}

bool OAIOrderItem::is_order_item_merchant_imported_product_id_column_name_Set() const{
    return m_order_item_merchant_imported_product_id_column_name_isSet;
}

bool OAIOrderItem::is_order_item_merchant_imported_product_id_column_name_Valid() const{
    return m_order_item_merchant_imported_product_id_column_name_isValid;
}

QString OAIOrderItem::getOrderItemMerchantImportedProductUrl() const {
    return m_order_item_merchant_imported_product_url;
}
void OAIOrderItem::setOrderItemMerchantImportedProductUrl(const QString &order_item_merchant_imported_product_url) {
    m_order_item_merchant_imported_product_url = order_item_merchant_imported_product_url;
    m_order_item_merchant_imported_product_url_isSet = true;
}

bool OAIOrderItem::is_order_item_merchant_imported_product_url_Set() const{
    return m_order_item_merchant_imported_product_url_isSet;
}

bool OAIOrderItem::is_order_item_merchant_imported_product_url_Valid() const{
    return m_order_item_merchant_imported_product_url_isValid;
}

QString OAIOrderItem::getOrderItemMerchantProductId() const {
    return m_order_item_merchant_product_id;
}
void OAIOrderItem::setOrderItemMerchantProductId(const QString &order_item_merchant_product_id) {
    m_order_item_merchant_product_id = order_item_merchant_product_id;
    m_order_item_merchant_product_id_isSet = true;
}

bool OAIOrderItem::is_order_item_merchant_product_id_Set() const{
    return m_order_item_merchant_product_id_isSet;
}

bool OAIOrderItem::is_order_item_merchant_product_id_Valid() const{
    return m_order_item_merchant_product_id_isValid;
}

QString OAIOrderItem::getOrderItemMerchantProductIdColumnName() const {
    return m_order_item_merchant_product_id_column_name;
}
void OAIOrderItem::setOrderItemMerchantProductIdColumnName(const QString &order_item_merchant_product_id_column_name) {
    m_order_item_merchant_product_id_column_name = order_item_merchant_product_id_column_name;
    m_order_item_merchant_product_id_column_name_isSet = true;
}

bool OAIOrderItem::is_order_item_merchant_product_id_column_name_Set() const{
    return m_order_item_merchant_product_id_column_name_isSet;
}

bool OAIOrderItem::is_order_item_merchant_product_id_column_name_Valid() const{
    return m_order_item_merchant_product_id_column_name_isValid;
}

QString OAIOrderItem::getOrderItemOrderItemType() const {
    return m_order_item_order_item_type;
}
void OAIOrderItem::setOrderItemOrderItemType(const QString &order_item_order_item_type) {
    m_order_item_order_item_type = order_item_order_item_type;
    m_order_item_order_item_type_isSet = true;
}

bool OAIOrderItem::is_order_item_order_item_type_Set() const{
    return m_order_item_order_item_type_isSet;
}

bool OAIOrderItem::is_order_item_order_item_type_Valid() const{
    return m_order_item_order_item_type_isValid;
}

double OAIOrderItem::getOrderItemQuantity() const {
    return m_order_item_quantity;
}
void OAIOrderItem::setOrderItemQuantity(const double &order_item_quantity) {
    m_order_item_quantity = order_item_quantity;
    m_order_item_quantity_isSet = true;
}

bool OAIOrderItem::is_order_item_quantity_Set() const{
    return m_order_item_quantity_isSet;
}

bool OAIOrderItem::is_order_item_quantity_Valid() const{
    return m_order_item_quantity_isValid;
}

double OAIOrderItem::getOrderItemShippingPrice() const {
    return m_order_item_shipping_price;
}
void OAIOrderItem::setOrderItemShippingPrice(const double &order_item_shipping_price) {
    m_order_item_shipping_price = order_item_shipping_price;
    m_order_item_shipping_price_isSet = true;
}

bool OAIOrderItem::is_order_item_shipping_price_Set() const{
    return m_order_item_shipping_price_isSet;
}

bool OAIOrderItem::is_order_item_shipping_price_Valid() const{
    return m_order_item_shipping_price_isValid;
}

QString OAIOrderItem::getOrderItemTitle() const {
    return m_order_item_title;
}
void OAIOrderItem::setOrderItemTitle(const QString &order_item_title) {
    m_order_item_title = order_item_title;
    m_order_item_title_isSet = true;
}

bool OAIOrderItem::is_order_item_title_Set() const{
    return m_order_item_title_isSet;
}

bool OAIOrderItem::is_order_item_title_Valid() const{
    return m_order_item_title_isValid;
}

double OAIOrderItem::getOrderItemTotalPrice() const {
    return m_order_item_total_price;
}
void OAIOrderItem::setOrderItemTotalPrice(const double &order_item_total_price) {
    m_order_item_total_price = order_item_total_price;
    m_order_item_total_price_isSet = true;
}

bool OAIOrderItem::is_order_item_total_price_Set() const{
    return m_order_item_total_price_isSet;
}

bool OAIOrderItem::is_order_item_total_price_Valid() const{
    return m_order_item_total_price_isValid;
}

QString OAIOrderItem::getOrderItemGtin() const {
    return m_order_item_gtin;
}
void OAIOrderItem::setOrderItemGtin(const QString &order_item_gtin) {
    m_order_item_gtin = order_item_gtin;
    m_order_item_gtin_isSet = true;
}

bool OAIOrderItem::is_order_item_gtin_Set() const{
    return m_order_item_gtin_isSet;
}

bool OAIOrderItem::is_order_item_gtin_Valid() const{
    return m_order_item_gtin_isValid;
}

bool OAIOrderItem::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_beez_up_order_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_beez_up_store_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_condition_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_image_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_item_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_item_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_market_place_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_marketplace_image_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_marketplace_product_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_merchant_imported_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_merchant_imported_product_id_column_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_merchant_imported_product_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_merchant_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_merchant_product_id_column_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_order_item_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_shipping_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_total_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_item_gtin_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderItem::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_beez_up_order_item_id_isValid && m_order_item_order_item_type_isValid && true;
}

} // namespace OpenAPI
