/**
 * BeezUP Merchant API 
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: help@beezup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrder.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrder::OAIOrder(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrder::OAIOrder() {
    this->initializeModel();
}

OAIOrder::~OAIOrder() {}

void OAIOrder::initializeModel() {

    m_account_id_isSet = false;
    m_account_id_isValid = false;

    m_beez_up_order_id_isSet = false;
    m_beez_up_order_id_isValid = false;

    m_beez_up_order_url_isSet = false;
    m_beez_up_order_url_isValid = false;

    m_etag_isSet = false;
    m_etag_isValid = false;

    m_links_isSet = false;
    m_links_isValid = false;

    m_marketplace_business_code_isSet = false;
    m_marketplace_business_code_isValid = false;

    m_marketplace_technical_code_isSet = false;
    m_marketplace_technical_code_isValid = false;

    m_order_buyer_name_isSet = false;
    m_order_buyer_name_isValid = false;

    m_order_currency_code_isSet = false;
    m_order_currency_code_isValid = false;

    m_order_invoice_number_isSet = false;
    m_order_invoice_number_isValid = false;

    m_order_invoice_uri_isSet = false;
    m_order_invoice_uri_isValid = false;

    m_order_last_modification_utc_date_isSet = false;
    m_order_last_modification_utc_date_isValid = false;

    m_order_marketplace_last_modification_utc_date_isSet = false;
    m_order_marketplace_last_modification_utc_date_isValid = false;

    m_order_marketplace_order_id_isSet = false;
    m_order_marketplace_order_id_isValid = false;

    m_order_merchant_e_commerce_software_name_isSet = false;
    m_order_merchant_e_commerce_software_name_isValid = false;

    m_order_merchant_e_commerce_software_version_isSet = false;
    m_order_merchant_e_commerce_software_version_isValid = false;

    m_order_merchant_order_id_isSet = false;
    m_order_merchant_order_id_isValid = false;

    m_order_purchase_utc_date_isSet = false;
    m_order_purchase_utc_date_isValid = false;

    m_order_status_beez_up_order_status_isSet = false;
    m_order_status_beez_up_order_status_isValid = false;

    m_order_status_marketplace_order_status_isSet = false;
    m_order_status_marketplace_order_status_isValid = false;

    m_order_total_price_isSet = false;
    m_order_total_price_isValid = false;

    m_processing_isSet = false;
    m_processing_isValid = false;

    m_order_items_isSet = false;
    m_order_items_isValid = false;

    m_order_buyer_address_city_isSet = false;
    m_order_buyer_address_city_isValid = false;

    m_order_buyer_address_country_iso_code_alpha2_isSet = false;
    m_order_buyer_address_country_iso_code_alpha2_isValid = false;

    m_order_buyer_address_country_name_isSet = false;
    m_order_buyer_address_country_name_isValid = false;

    m_order_buyer_address_line1_isSet = false;
    m_order_buyer_address_line1_isValid = false;

    m_order_buyer_address_line2_isSet = false;
    m_order_buyer_address_line2_isValid = false;

    m_order_buyer_address_line3_isSet = false;
    m_order_buyer_address_line3_isValid = false;

    m_order_buyer_address_postal_code_isSet = false;
    m_order_buyer_address_postal_code_isValid = false;

    m_order_buyer_address_state_or_region_isSet = false;
    m_order_buyer_address_state_or_region_isValid = false;

    m_order_buyer_civility_isSet = false;
    m_order_buyer_civility_isValid = false;

    m_order_buyer_company_name_isSet = false;
    m_order_buyer_company_name_isValid = false;

    m_order_buyer_email_isSet = false;
    m_order_buyer_email_isValid = false;

    m_order_buyer_first_name_isSet = false;
    m_order_buyer_first_name_isValid = false;

    m_order_buyer_identifier_isSet = false;
    m_order_buyer_identifier_isValid = false;

    m_order_buyer_last_name_isSet = false;
    m_order_buyer_last_name_isValid = false;

    m_order_buyer_mobile_phone_isSet = false;
    m_order_buyer_mobile_phone_isValid = false;

    m_order_buyer_phone_isSet = false;
    m_order_buyer_phone_isValid = false;

    m_order_comment_isSet = false;
    m_order_comment_isValid = false;

    m_order_fulfilled_by_isSet = false;
    m_order_fulfilled_by_isValid = false;

    m_order_is_business_isSet = false;
    m_order_is_business_isValid = false;

    m_order_is_prime_isSet = false;
    m_order_is_prime_isValid = false;

    m_order_market_place_channel_isSet = false;
    m_order_market_place_channel_isValid = false;

    m_order_order_items_source_uri_isSet = false;
    m_order_order_items_source_uri_isValid = false;

    m_order_order_source_uri_isSet = false;
    m_order_order_source_uri_isValid = false;

    m_order_paying_utc_date_isSet = false;
    m_order_paying_utc_date_isValid = false;

    m_order_payment_method_isSet = false;
    m_order_payment_method_isValid = false;

    m_order_shipping_address_city_isSet = false;
    m_order_shipping_address_city_isValid = false;

    m_order_shipping_address_country_iso_code_alpha2_isSet = false;
    m_order_shipping_address_country_iso_code_alpha2_isValid = false;

    m_order_shipping_address_country_name_isSet = false;
    m_order_shipping_address_country_name_isValid = false;

    m_order_shipping_address_line1_isSet = false;
    m_order_shipping_address_line1_isValid = false;

    m_order_shipping_address_line2_isSet = false;
    m_order_shipping_address_line2_isValid = false;

    m_order_shipping_address_line3_isSet = false;
    m_order_shipping_address_line3_isValid = false;

    m_order_shipping_address_name_isSet = false;
    m_order_shipping_address_name_isValid = false;

    m_order_shipping_address_postal_code_isSet = false;
    m_order_shipping_address_postal_code_isValid = false;

    m_order_shipping_address_state_or_region_isSet = false;
    m_order_shipping_address_state_or_region_isValid = false;

    m_order_shipping_civility_isSet = false;
    m_order_shipping_civility_isValid = false;

    m_order_shipping_company_name_isSet = false;
    m_order_shipping_company_name_isValid = false;

    m_order_shipping_earliest_ship_utc_date_isSet = false;
    m_order_shipping_earliest_ship_utc_date_isValid = false;

    m_order_shipping_email_isSet = false;
    m_order_shipping_email_isValid = false;

    m_order_shipping_first_name_isSet = false;
    m_order_shipping_first_name_isValid = false;

    m_order_shipping_last_name_isSet = false;
    m_order_shipping_last_name_isValid = false;

    m_order_shipping_latest_ship_utc_date_isSet = false;
    m_order_shipping_latest_ship_utc_date_isValid = false;

    m_order_shipping_method_isSet = false;
    m_order_shipping_method_isValid = false;

    m_order_shipping_mobile_phone_isSet = false;
    m_order_shipping_mobile_phone_isValid = false;

    m_order_shipping_phone_isSet = false;
    m_order_shipping_phone_isValid = false;

    m_order_shipping_price_isSet = false;
    m_order_shipping_price_isValid = false;

    m_order_shipping_shipping_tax_isSet = false;
    m_order_shipping_shipping_tax_isValid = false;

    m_order_total_commission_isSet = false;
    m_order_total_commission_isValid = false;

    m_order_total_tax_isSet = false;
    m_order_total_tax_isValid = false;

    m_transition_links_isSet = false;
    m_transition_links_isValid = false;
}

void OAIOrder::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrder::fromJsonObject(QJsonObject json) {

    m_account_id_isValid = ::OpenAPI::fromJsonValue(m_account_id, json[QString("accountId")]);
    m_account_id_isSet = !json[QString("accountId")].isNull() && m_account_id_isValid;

    m_beez_up_order_id_isValid = ::OpenAPI::fromJsonValue(m_beez_up_order_id, json[QString("beezUPOrderId")]);
    m_beez_up_order_id_isSet = !json[QString("beezUPOrderId")].isNull() && m_beez_up_order_id_isValid;

    m_beez_up_order_url_isValid = ::OpenAPI::fromJsonValue(m_beez_up_order_url, json[QString("beezUPOrderUrl")]);
    m_beez_up_order_url_isSet = !json[QString("beezUPOrderUrl")].isNull() && m_beez_up_order_url_isValid;

    m_etag_isValid = ::OpenAPI::fromJsonValue(m_etag, json[QString("etag")]);
    m_etag_isSet = !json[QString("etag")].isNull() && m_etag_isValid;

    m_links_isValid = ::OpenAPI::fromJsonValue(m_links, json[QString("links")]);
    m_links_isSet = !json[QString("links")].isNull() && m_links_isValid;

    m_marketplace_business_code_isValid = ::OpenAPI::fromJsonValue(m_marketplace_business_code, json[QString("marketplaceBusinessCode")]);
    m_marketplace_business_code_isSet = !json[QString("marketplaceBusinessCode")].isNull() && m_marketplace_business_code_isValid;

    m_marketplace_technical_code_isValid = ::OpenAPI::fromJsonValue(m_marketplace_technical_code, json[QString("marketplaceTechnicalCode")]);
    m_marketplace_technical_code_isSet = !json[QString("marketplaceTechnicalCode")].isNull() && m_marketplace_technical_code_isValid;

    m_order_buyer_name_isValid = ::OpenAPI::fromJsonValue(m_order_buyer_name, json[QString("order_Buyer_Name")]);
    m_order_buyer_name_isSet = !json[QString("order_Buyer_Name")].isNull() && m_order_buyer_name_isValid;

    m_order_currency_code_isValid = ::OpenAPI::fromJsonValue(m_order_currency_code, json[QString("order_CurrencyCode")]);
    m_order_currency_code_isSet = !json[QString("order_CurrencyCode")].isNull() && m_order_currency_code_isValid;

    m_order_invoice_number_isValid = ::OpenAPI::fromJsonValue(m_order_invoice_number, json[QString("order_Invoice_Number")]);
    m_order_invoice_number_isSet = !json[QString("order_Invoice_Number")].isNull() && m_order_invoice_number_isValid;

    m_order_invoice_uri_isValid = ::OpenAPI::fromJsonValue(m_order_invoice_uri, json[QString("order_Invoice_Uri")]);
    m_order_invoice_uri_isSet = !json[QString("order_Invoice_Uri")].isNull() && m_order_invoice_uri_isValid;

    m_order_last_modification_utc_date_isValid = ::OpenAPI::fromJsonValue(m_order_last_modification_utc_date, json[QString("order_LastModificationUtcDate")]);
    m_order_last_modification_utc_date_isSet = !json[QString("order_LastModificationUtcDate")].isNull() && m_order_last_modification_utc_date_isValid;

    m_order_marketplace_last_modification_utc_date_isValid = ::OpenAPI::fromJsonValue(m_order_marketplace_last_modification_utc_date, json[QString("order_MarketplaceLastModificationUtcDate")]);
    m_order_marketplace_last_modification_utc_date_isSet = !json[QString("order_MarketplaceLastModificationUtcDate")].isNull() && m_order_marketplace_last_modification_utc_date_isValid;

    m_order_marketplace_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_marketplace_order_id, json[QString("order_MarketplaceOrderId")]);
    m_order_marketplace_order_id_isSet = !json[QString("order_MarketplaceOrderId")].isNull() && m_order_marketplace_order_id_isValid;

    m_order_merchant_e_commerce_software_name_isValid = ::OpenAPI::fromJsonValue(m_order_merchant_e_commerce_software_name, json[QString("order_MerchantECommerceSoftwareName")]);
    m_order_merchant_e_commerce_software_name_isSet = !json[QString("order_MerchantECommerceSoftwareName")].isNull() && m_order_merchant_e_commerce_software_name_isValid;

    m_order_merchant_e_commerce_software_version_isValid = ::OpenAPI::fromJsonValue(m_order_merchant_e_commerce_software_version, json[QString("order_MerchantECommerceSoftwareVersion")]);
    m_order_merchant_e_commerce_software_version_isSet = !json[QString("order_MerchantECommerceSoftwareVersion")].isNull() && m_order_merchant_e_commerce_software_version_isValid;

    m_order_merchant_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_merchant_order_id, json[QString("order_MerchantOrderId")]);
    m_order_merchant_order_id_isSet = !json[QString("order_MerchantOrderId")].isNull() && m_order_merchant_order_id_isValid;

    m_order_purchase_utc_date_isValid = ::OpenAPI::fromJsonValue(m_order_purchase_utc_date, json[QString("order_PurchaseUtcDate")]);
    m_order_purchase_utc_date_isSet = !json[QString("order_PurchaseUtcDate")].isNull() && m_order_purchase_utc_date_isValid;

    m_order_status_beez_up_order_status_isValid = ::OpenAPI::fromJsonValue(m_order_status_beez_up_order_status, json[QString("order_Status_BeezUPOrderStatus")]);
    m_order_status_beez_up_order_status_isSet = !json[QString("order_Status_BeezUPOrderStatus")].isNull() && m_order_status_beez_up_order_status_isValid;

    m_order_status_marketplace_order_status_isValid = ::OpenAPI::fromJsonValue(m_order_status_marketplace_order_status, json[QString("order_Status_MarketplaceOrderStatus")]);
    m_order_status_marketplace_order_status_isSet = !json[QString("order_Status_MarketplaceOrderStatus")].isNull() && m_order_status_marketplace_order_status_isValid;

    m_order_total_price_isValid = ::OpenAPI::fromJsonValue(m_order_total_price, json[QString("order_TotalPrice")]);
    m_order_total_price_isSet = !json[QString("order_TotalPrice")].isNull() && m_order_total_price_isValid;

    m_processing_isValid = ::OpenAPI::fromJsonValue(m_processing, json[QString("processing")]);
    m_processing_isSet = !json[QString("processing")].isNull() && m_processing_isValid;

    m_order_items_isValid = ::OpenAPI::fromJsonValue(m_order_items, json[QString("orderItems")]);
    m_order_items_isSet = !json[QString("orderItems")].isNull() && m_order_items_isValid;

    m_order_buyer_address_city_isValid = ::OpenAPI::fromJsonValue(m_order_buyer_address_city, json[QString("order_Buyer_AddressCity")]);
    m_order_buyer_address_city_isSet = !json[QString("order_Buyer_AddressCity")].isNull() && m_order_buyer_address_city_isValid;

    m_order_buyer_address_country_iso_code_alpha2_isValid = ::OpenAPI::fromJsonValue(m_order_buyer_address_country_iso_code_alpha2, json[QString("order_Buyer_AddressCountryIsoCodeAlpha2")]);
    m_order_buyer_address_country_iso_code_alpha2_isSet = !json[QString("order_Buyer_AddressCountryIsoCodeAlpha2")].isNull() && m_order_buyer_address_country_iso_code_alpha2_isValid;

    m_order_buyer_address_country_name_isValid = ::OpenAPI::fromJsonValue(m_order_buyer_address_country_name, json[QString("order_Buyer_AddressCountryName")]);
    m_order_buyer_address_country_name_isSet = !json[QString("order_Buyer_AddressCountryName")].isNull() && m_order_buyer_address_country_name_isValid;

    m_order_buyer_address_line1_isValid = ::OpenAPI::fromJsonValue(m_order_buyer_address_line1, json[QString("order_Buyer_AddressLine1")]);
    m_order_buyer_address_line1_isSet = !json[QString("order_Buyer_AddressLine1")].isNull() && m_order_buyer_address_line1_isValid;

    m_order_buyer_address_line2_isValid = ::OpenAPI::fromJsonValue(m_order_buyer_address_line2, json[QString("order_Buyer_AddressLine2")]);
    m_order_buyer_address_line2_isSet = !json[QString("order_Buyer_AddressLine2")].isNull() && m_order_buyer_address_line2_isValid;

    m_order_buyer_address_line3_isValid = ::OpenAPI::fromJsonValue(m_order_buyer_address_line3, json[QString("order_Buyer_AddressLine3")]);
    m_order_buyer_address_line3_isSet = !json[QString("order_Buyer_AddressLine3")].isNull() && m_order_buyer_address_line3_isValid;

    m_order_buyer_address_postal_code_isValid = ::OpenAPI::fromJsonValue(m_order_buyer_address_postal_code, json[QString("order_Buyer_AddressPostalCode")]);
    m_order_buyer_address_postal_code_isSet = !json[QString("order_Buyer_AddressPostalCode")].isNull() && m_order_buyer_address_postal_code_isValid;

    m_order_buyer_address_state_or_region_isValid = ::OpenAPI::fromJsonValue(m_order_buyer_address_state_or_region, json[QString("order_Buyer_AddressStateOrRegion")]);
    m_order_buyer_address_state_or_region_isSet = !json[QString("order_Buyer_AddressStateOrRegion")].isNull() && m_order_buyer_address_state_or_region_isValid;

    m_order_buyer_civility_isValid = ::OpenAPI::fromJsonValue(m_order_buyer_civility, json[QString("order_Buyer_Civility")]);
    m_order_buyer_civility_isSet = !json[QString("order_Buyer_Civility")].isNull() && m_order_buyer_civility_isValid;

    m_order_buyer_company_name_isValid = ::OpenAPI::fromJsonValue(m_order_buyer_company_name, json[QString("order_Buyer_CompanyName")]);
    m_order_buyer_company_name_isSet = !json[QString("order_Buyer_CompanyName")].isNull() && m_order_buyer_company_name_isValid;

    m_order_buyer_email_isValid = ::OpenAPI::fromJsonValue(m_order_buyer_email, json[QString("order_Buyer_Email")]);
    m_order_buyer_email_isSet = !json[QString("order_Buyer_Email")].isNull() && m_order_buyer_email_isValid;

    m_order_buyer_first_name_isValid = ::OpenAPI::fromJsonValue(m_order_buyer_first_name, json[QString("order_Buyer_FirstName")]);
    m_order_buyer_first_name_isSet = !json[QString("order_Buyer_FirstName")].isNull() && m_order_buyer_first_name_isValid;

    m_order_buyer_identifier_isValid = ::OpenAPI::fromJsonValue(m_order_buyer_identifier, json[QString("order_Buyer_Identifier")]);
    m_order_buyer_identifier_isSet = !json[QString("order_Buyer_Identifier")].isNull() && m_order_buyer_identifier_isValid;

    m_order_buyer_last_name_isValid = ::OpenAPI::fromJsonValue(m_order_buyer_last_name, json[QString("order_Buyer_LastName")]);
    m_order_buyer_last_name_isSet = !json[QString("order_Buyer_LastName")].isNull() && m_order_buyer_last_name_isValid;

    m_order_buyer_mobile_phone_isValid = ::OpenAPI::fromJsonValue(m_order_buyer_mobile_phone, json[QString("order_Buyer_MobilePhone")]);
    m_order_buyer_mobile_phone_isSet = !json[QString("order_Buyer_MobilePhone")].isNull() && m_order_buyer_mobile_phone_isValid;

    m_order_buyer_phone_isValid = ::OpenAPI::fromJsonValue(m_order_buyer_phone, json[QString("order_Buyer_Phone")]);
    m_order_buyer_phone_isSet = !json[QString("order_Buyer_Phone")].isNull() && m_order_buyer_phone_isValid;

    m_order_comment_isValid = ::OpenAPI::fromJsonValue(m_order_comment, json[QString("order_Comment")]);
    m_order_comment_isSet = !json[QString("order_Comment")].isNull() && m_order_comment_isValid;

    m_order_fulfilled_by_isValid = ::OpenAPI::fromJsonValue(m_order_fulfilled_by, json[QString("order_FulfilledBy")]);
    m_order_fulfilled_by_isSet = !json[QString("order_FulfilledBy")].isNull() && m_order_fulfilled_by_isValid;

    m_order_is_business_isValid = ::OpenAPI::fromJsonValue(m_order_is_business, json[QString("order_IsBusiness")]);
    m_order_is_business_isSet = !json[QString("order_IsBusiness")].isNull() && m_order_is_business_isValid;

    m_order_is_prime_isValid = ::OpenAPI::fromJsonValue(m_order_is_prime, json[QString("order_IsPrime")]);
    m_order_is_prime_isSet = !json[QString("order_IsPrime")].isNull() && m_order_is_prime_isValid;

    m_order_market_place_channel_isValid = ::OpenAPI::fromJsonValue(m_order_market_place_channel, json[QString("order_MarketPlaceChannel")]);
    m_order_market_place_channel_isSet = !json[QString("order_MarketPlaceChannel")].isNull() && m_order_market_place_channel_isValid;

    m_order_order_items_source_uri_isValid = ::OpenAPI::fromJsonValue(m_order_order_items_source_uri, json[QString("order_OrderItemsSourceUri")]);
    m_order_order_items_source_uri_isSet = !json[QString("order_OrderItemsSourceUri")].isNull() && m_order_order_items_source_uri_isValid;

    m_order_order_source_uri_isValid = ::OpenAPI::fromJsonValue(m_order_order_source_uri, json[QString("order_OrderSourceUri")]);
    m_order_order_source_uri_isSet = !json[QString("order_OrderSourceUri")].isNull() && m_order_order_source_uri_isValid;

    m_order_paying_utc_date_isValid = ::OpenAPI::fromJsonValue(m_order_paying_utc_date, json[QString("order_PayingUtcDate")]);
    m_order_paying_utc_date_isSet = !json[QString("order_PayingUtcDate")].isNull() && m_order_paying_utc_date_isValid;

    m_order_payment_method_isValid = ::OpenAPI::fromJsonValue(m_order_payment_method, json[QString("order_PaymentMethod")]);
    m_order_payment_method_isSet = !json[QString("order_PaymentMethod")].isNull() && m_order_payment_method_isValid;

    m_order_shipping_address_city_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_address_city, json[QString("order_Shipping_AddressCity")]);
    m_order_shipping_address_city_isSet = !json[QString("order_Shipping_AddressCity")].isNull() && m_order_shipping_address_city_isValid;

    m_order_shipping_address_country_iso_code_alpha2_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_address_country_iso_code_alpha2, json[QString("order_Shipping_AddressCountryIsoCodeAlpha2")]);
    m_order_shipping_address_country_iso_code_alpha2_isSet = !json[QString("order_Shipping_AddressCountryIsoCodeAlpha2")].isNull() && m_order_shipping_address_country_iso_code_alpha2_isValid;

    m_order_shipping_address_country_name_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_address_country_name, json[QString("order_Shipping_AddressCountryName")]);
    m_order_shipping_address_country_name_isSet = !json[QString("order_Shipping_AddressCountryName")].isNull() && m_order_shipping_address_country_name_isValid;

    m_order_shipping_address_line1_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_address_line1, json[QString("order_Shipping_AddressLine1")]);
    m_order_shipping_address_line1_isSet = !json[QString("order_Shipping_AddressLine1")].isNull() && m_order_shipping_address_line1_isValid;

    m_order_shipping_address_line2_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_address_line2, json[QString("order_Shipping_AddressLine2")]);
    m_order_shipping_address_line2_isSet = !json[QString("order_Shipping_AddressLine2")].isNull() && m_order_shipping_address_line2_isValid;

    m_order_shipping_address_line3_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_address_line3, json[QString("order_Shipping_AddressLine3")]);
    m_order_shipping_address_line3_isSet = !json[QString("order_Shipping_AddressLine3")].isNull() && m_order_shipping_address_line3_isValid;

    m_order_shipping_address_name_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_address_name, json[QString("order_Shipping_AddressName")]);
    m_order_shipping_address_name_isSet = !json[QString("order_Shipping_AddressName")].isNull() && m_order_shipping_address_name_isValid;

    m_order_shipping_address_postal_code_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_address_postal_code, json[QString("order_Shipping_AddressPostalCode")]);
    m_order_shipping_address_postal_code_isSet = !json[QString("order_Shipping_AddressPostalCode")].isNull() && m_order_shipping_address_postal_code_isValid;

    m_order_shipping_address_state_or_region_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_address_state_or_region, json[QString("order_Shipping_AddressStateOrRegion")]);
    m_order_shipping_address_state_or_region_isSet = !json[QString("order_Shipping_AddressStateOrRegion")].isNull() && m_order_shipping_address_state_or_region_isValid;

    m_order_shipping_civility_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_civility, json[QString("order_Shipping_Civility")]);
    m_order_shipping_civility_isSet = !json[QString("order_Shipping_Civility")].isNull() && m_order_shipping_civility_isValid;

    m_order_shipping_company_name_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_company_name, json[QString("order_Shipping_CompanyName")]);
    m_order_shipping_company_name_isSet = !json[QString("order_Shipping_CompanyName")].isNull() && m_order_shipping_company_name_isValid;

    m_order_shipping_earliest_ship_utc_date_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_earliest_ship_utc_date, json[QString("order_Shipping_EarliestShipUtcDate")]);
    m_order_shipping_earliest_ship_utc_date_isSet = !json[QString("order_Shipping_EarliestShipUtcDate")].isNull() && m_order_shipping_earliest_ship_utc_date_isValid;

    m_order_shipping_email_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_email, json[QString("order_Shipping_Email")]);
    m_order_shipping_email_isSet = !json[QString("order_Shipping_Email")].isNull() && m_order_shipping_email_isValid;

    m_order_shipping_first_name_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_first_name, json[QString("order_Shipping_FirstName")]);
    m_order_shipping_first_name_isSet = !json[QString("order_Shipping_FirstName")].isNull() && m_order_shipping_first_name_isValid;

    m_order_shipping_last_name_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_last_name, json[QString("order_Shipping_LastName")]);
    m_order_shipping_last_name_isSet = !json[QString("order_Shipping_LastName")].isNull() && m_order_shipping_last_name_isValid;

    m_order_shipping_latest_ship_utc_date_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_latest_ship_utc_date, json[QString("order_Shipping_LatestShipUtcDate")]);
    m_order_shipping_latest_ship_utc_date_isSet = !json[QString("order_Shipping_LatestShipUtcDate")].isNull() && m_order_shipping_latest_ship_utc_date_isValid;

    m_order_shipping_method_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_method, json[QString("order_Shipping_Method")]);
    m_order_shipping_method_isSet = !json[QString("order_Shipping_Method")].isNull() && m_order_shipping_method_isValid;

    m_order_shipping_mobile_phone_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_mobile_phone, json[QString("order_Shipping_MobilePhone")]);
    m_order_shipping_mobile_phone_isSet = !json[QString("order_Shipping_MobilePhone")].isNull() && m_order_shipping_mobile_phone_isValid;

    m_order_shipping_phone_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_phone, json[QString("order_Shipping_Phone")]);
    m_order_shipping_phone_isSet = !json[QString("order_Shipping_Phone")].isNull() && m_order_shipping_phone_isValid;

    m_order_shipping_price_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_price, json[QString("order_Shipping_Price")]);
    m_order_shipping_price_isSet = !json[QString("order_Shipping_Price")].isNull() && m_order_shipping_price_isValid;

    m_order_shipping_shipping_tax_isValid = ::OpenAPI::fromJsonValue(m_order_shipping_shipping_tax, json[QString("order_Shipping_ShippingTax")]);
    m_order_shipping_shipping_tax_isSet = !json[QString("order_Shipping_ShippingTax")].isNull() && m_order_shipping_shipping_tax_isValid;

    m_order_total_commission_isValid = ::OpenAPI::fromJsonValue(m_order_total_commission, json[QString("order_TotalCommission")]);
    m_order_total_commission_isSet = !json[QString("order_TotalCommission")].isNull() && m_order_total_commission_isValid;

    m_order_total_tax_isValid = ::OpenAPI::fromJsonValue(m_order_total_tax, json[QString("order_TotalTax")]);
    m_order_total_tax_isSet = !json[QString("order_TotalTax")].isNull() && m_order_total_tax_isValid;

    m_transition_links_isValid = ::OpenAPI::fromJsonValue(m_transition_links, json[QString("transitionLinks")]);
    m_transition_links_isSet = !json[QString("transitionLinks")].isNull() && m_transition_links_isValid;
}

QString OAIOrder::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrder::asJsonObject() const {
    QJsonObject obj;
    if (m_account_id_isSet) {
        obj.insert(QString("accountId"), ::OpenAPI::toJsonValue(m_account_id));
    }
    if (m_beez_up_order_id_isSet) {
        obj.insert(QString("beezUPOrderId"), ::OpenAPI::toJsonValue(m_beez_up_order_id));
    }
    if (m_beez_up_order_url_isSet) {
        obj.insert(QString("beezUPOrderUrl"), ::OpenAPI::toJsonValue(m_beez_up_order_url));
    }
    if (m_etag_isSet) {
        obj.insert(QString("etag"), ::OpenAPI::toJsonValue(m_etag));
    }
    if (m_links.isSet()) {
        obj.insert(QString("links"), ::OpenAPI::toJsonValue(m_links));
    }
    if (m_marketplace_business_code_isSet) {
        obj.insert(QString("marketplaceBusinessCode"), ::OpenAPI::toJsonValue(m_marketplace_business_code));
    }
    if (m_marketplace_technical_code_isSet) {
        obj.insert(QString("marketplaceTechnicalCode"), ::OpenAPI::toJsonValue(m_marketplace_technical_code));
    }
    if (m_order_buyer_name_isSet) {
        obj.insert(QString("order_Buyer_Name"), ::OpenAPI::toJsonValue(m_order_buyer_name));
    }
    if (m_order_currency_code_isSet) {
        obj.insert(QString("order_CurrencyCode"), ::OpenAPI::toJsonValue(m_order_currency_code));
    }
    if (m_order_invoice_number_isSet) {
        obj.insert(QString("order_Invoice_Number"), ::OpenAPI::toJsonValue(m_order_invoice_number));
    }
    if (m_order_invoice_uri_isSet) {
        obj.insert(QString("order_Invoice_Uri"), ::OpenAPI::toJsonValue(m_order_invoice_uri));
    }
    if (m_order_last_modification_utc_date_isSet) {
        obj.insert(QString("order_LastModificationUtcDate"), ::OpenAPI::toJsonValue(m_order_last_modification_utc_date));
    }
    if (m_order_marketplace_last_modification_utc_date_isSet) {
        obj.insert(QString("order_MarketplaceLastModificationUtcDate"), ::OpenAPI::toJsonValue(m_order_marketplace_last_modification_utc_date));
    }
    if (m_order_marketplace_order_id_isSet) {
        obj.insert(QString("order_MarketplaceOrderId"), ::OpenAPI::toJsonValue(m_order_marketplace_order_id));
    }
    if (m_order_merchant_e_commerce_software_name_isSet) {
        obj.insert(QString("order_MerchantECommerceSoftwareName"), ::OpenAPI::toJsonValue(m_order_merchant_e_commerce_software_name));
    }
    if (m_order_merchant_e_commerce_software_version_isSet) {
        obj.insert(QString("order_MerchantECommerceSoftwareVersion"), ::OpenAPI::toJsonValue(m_order_merchant_e_commerce_software_version));
    }
    if (m_order_merchant_order_id_isSet) {
        obj.insert(QString("order_MerchantOrderId"), ::OpenAPI::toJsonValue(m_order_merchant_order_id));
    }
    if (m_order_purchase_utc_date_isSet) {
        obj.insert(QString("order_PurchaseUtcDate"), ::OpenAPI::toJsonValue(m_order_purchase_utc_date));
    }
    if (m_order_status_beez_up_order_status_isSet) {
        obj.insert(QString("order_Status_BeezUPOrderStatus"), ::OpenAPI::toJsonValue(m_order_status_beez_up_order_status));
    }
    if (m_order_status_marketplace_order_status_isSet) {
        obj.insert(QString("order_Status_MarketplaceOrderStatus"), ::OpenAPI::toJsonValue(m_order_status_marketplace_order_status));
    }
    if (m_order_total_price_isSet) {
        obj.insert(QString("order_TotalPrice"), ::OpenAPI::toJsonValue(m_order_total_price));
    }
    if (m_processing_isSet) {
        obj.insert(QString("processing"), ::OpenAPI::toJsonValue(m_processing));
    }
    if (m_order_items.size() > 0) {
        obj.insert(QString("orderItems"), ::OpenAPI::toJsonValue(m_order_items));
    }
    if (m_order_buyer_address_city_isSet) {
        obj.insert(QString("order_Buyer_AddressCity"), ::OpenAPI::toJsonValue(m_order_buyer_address_city));
    }
    if (m_order_buyer_address_country_iso_code_alpha2_isSet) {
        obj.insert(QString("order_Buyer_AddressCountryIsoCodeAlpha2"), ::OpenAPI::toJsonValue(m_order_buyer_address_country_iso_code_alpha2));
    }
    if (m_order_buyer_address_country_name_isSet) {
        obj.insert(QString("order_Buyer_AddressCountryName"), ::OpenAPI::toJsonValue(m_order_buyer_address_country_name));
    }
    if (m_order_buyer_address_line1_isSet) {
        obj.insert(QString("order_Buyer_AddressLine1"), ::OpenAPI::toJsonValue(m_order_buyer_address_line1));
    }
    if (m_order_buyer_address_line2_isSet) {
        obj.insert(QString("order_Buyer_AddressLine2"), ::OpenAPI::toJsonValue(m_order_buyer_address_line2));
    }
    if (m_order_buyer_address_line3_isSet) {
        obj.insert(QString("order_Buyer_AddressLine3"), ::OpenAPI::toJsonValue(m_order_buyer_address_line3));
    }
    if (m_order_buyer_address_postal_code_isSet) {
        obj.insert(QString("order_Buyer_AddressPostalCode"), ::OpenAPI::toJsonValue(m_order_buyer_address_postal_code));
    }
    if (m_order_buyer_address_state_or_region_isSet) {
        obj.insert(QString("order_Buyer_AddressStateOrRegion"), ::OpenAPI::toJsonValue(m_order_buyer_address_state_or_region));
    }
    if (m_order_buyer_civility_isSet) {
        obj.insert(QString("order_Buyer_Civility"), ::OpenAPI::toJsonValue(m_order_buyer_civility));
    }
    if (m_order_buyer_company_name_isSet) {
        obj.insert(QString("order_Buyer_CompanyName"), ::OpenAPI::toJsonValue(m_order_buyer_company_name));
    }
    if (m_order_buyer_email_isSet) {
        obj.insert(QString("order_Buyer_Email"), ::OpenAPI::toJsonValue(m_order_buyer_email));
    }
    if (m_order_buyer_first_name_isSet) {
        obj.insert(QString("order_Buyer_FirstName"), ::OpenAPI::toJsonValue(m_order_buyer_first_name));
    }
    if (m_order_buyer_identifier_isSet) {
        obj.insert(QString("order_Buyer_Identifier"), ::OpenAPI::toJsonValue(m_order_buyer_identifier));
    }
    if (m_order_buyer_last_name_isSet) {
        obj.insert(QString("order_Buyer_LastName"), ::OpenAPI::toJsonValue(m_order_buyer_last_name));
    }
    if (m_order_buyer_mobile_phone_isSet) {
        obj.insert(QString("order_Buyer_MobilePhone"), ::OpenAPI::toJsonValue(m_order_buyer_mobile_phone));
    }
    if (m_order_buyer_phone_isSet) {
        obj.insert(QString("order_Buyer_Phone"), ::OpenAPI::toJsonValue(m_order_buyer_phone));
    }
    if (m_order_comment_isSet) {
        obj.insert(QString("order_Comment"), ::OpenAPI::toJsonValue(m_order_comment));
    }
    if (m_order_fulfilled_by_isSet) {
        obj.insert(QString("order_FulfilledBy"), ::OpenAPI::toJsonValue(m_order_fulfilled_by));
    }
    if (m_order_is_business_isSet) {
        obj.insert(QString("order_IsBusiness"), ::OpenAPI::toJsonValue(m_order_is_business));
    }
    if (m_order_is_prime_isSet) {
        obj.insert(QString("order_IsPrime"), ::OpenAPI::toJsonValue(m_order_is_prime));
    }
    if (m_order_market_place_channel_isSet) {
        obj.insert(QString("order_MarketPlaceChannel"), ::OpenAPI::toJsonValue(m_order_market_place_channel));
    }
    if (m_order_order_items_source_uri_isSet) {
        obj.insert(QString("order_OrderItemsSourceUri"), ::OpenAPI::toJsonValue(m_order_order_items_source_uri));
    }
    if (m_order_order_source_uri_isSet) {
        obj.insert(QString("order_OrderSourceUri"), ::OpenAPI::toJsonValue(m_order_order_source_uri));
    }
    if (m_order_paying_utc_date_isSet) {
        obj.insert(QString("order_PayingUtcDate"), ::OpenAPI::toJsonValue(m_order_paying_utc_date));
    }
    if (m_order_payment_method_isSet) {
        obj.insert(QString("order_PaymentMethod"), ::OpenAPI::toJsonValue(m_order_payment_method));
    }
    if (m_order_shipping_address_city_isSet) {
        obj.insert(QString("order_Shipping_AddressCity"), ::OpenAPI::toJsonValue(m_order_shipping_address_city));
    }
    if (m_order_shipping_address_country_iso_code_alpha2_isSet) {
        obj.insert(QString("order_Shipping_AddressCountryIsoCodeAlpha2"), ::OpenAPI::toJsonValue(m_order_shipping_address_country_iso_code_alpha2));
    }
    if (m_order_shipping_address_country_name_isSet) {
        obj.insert(QString("order_Shipping_AddressCountryName"), ::OpenAPI::toJsonValue(m_order_shipping_address_country_name));
    }
    if (m_order_shipping_address_line1_isSet) {
        obj.insert(QString("order_Shipping_AddressLine1"), ::OpenAPI::toJsonValue(m_order_shipping_address_line1));
    }
    if (m_order_shipping_address_line2_isSet) {
        obj.insert(QString("order_Shipping_AddressLine2"), ::OpenAPI::toJsonValue(m_order_shipping_address_line2));
    }
    if (m_order_shipping_address_line3_isSet) {
        obj.insert(QString("order_Shipping_AddressLine3"), ::OpenAPI::toJsonValue(m_order_shipping_address_line3));
    }
    if (m_order_shipping_address_name_isSet) {
        obj.insert(QString("order_Shipping_AddressName"), ::OpenAPI::toJsonValue(m_order_shipping_address_name));
    }
    if (m_order_shipping_address_postal_code_isSet) {
        obj.insert(QString("order_Shipping_AddressPostalCode"), ::OpenAPI::toJsonValue(m_order_shipping_address_postal_code));
    }
    if (m_order_shipping_address_state_or_region_isSet) {
        obj.insert(QString("order_Shipping_AddressStateOrRegion"), ::OpenAPI::toJsonValue(m_order_shipping_address_state_or_region));
    }
    if (m_order_shipping_civility_isSet) {
        obj.insert(QString("order_Shipping_Civility"), ::OpenAPI::toJsonValue(m_order_shipping_civility));
    }
    if (m_order_shipping_company_name_isSet) {
        obj.insert(QString("order_Shipping_CompanyName"), ::OpenAPI::toJsonValue(m_order_shipping_company_name));
    }
    if (m_order_shipping_earliest_ship_utc_date_isSet) {
        obj.insert(QString("order_Shipping_EarliestShipUtcDate"), ::OpenAPI::toJsonValue(m_order_shipping_earliest_ship_utc_date));
    }
    if (m_order_shipping_email_isSet) {
        obj.insert(QString("order_Shipping_Email"), ::OpenAPI::toJsonValue(m_order_shipping_email));
    }
    if (m_order_shipping_first_name_isSet) {
        obj.insert(QString("order_Shipping_FirstName"), ::OpenAPI::toJsonValue(m_order_shipping_first_name));
    }
    if (m_order_shipping_last_name_isSet) {
        obj.insert(QString("order_Shipping_LastName"), ::OpenAPI::toJsonValue(m_order_shipping_last_name));
    }
    if (m_order_shipping_latest_ship_utc_date_isSet) {
        obj.insert(QString("order_Shipping_LatestShipUtcDate"), ::OpenAPI::toJsonValue(m_order_shipping_latest_ship_utc_date));
    }
    if (m_order_shipping_method_isSet) {
        obj.insert(QString("order_Shipping_Method"), ::OpenAPI::toJsonValue(m_order_shipping_method));
    }
    if (m_order_shipping_mobile_phone_isSet) {
        obj.insert(QString("order_Shipping_MobilePhone"), ::OpenAPI::toJsonValue(m_order_shipping_mobile_phone));
    }
    if (m_order_shipping_phone_isSet) {
        obj.insert(QString("order_Shipping_Phone"), ::OpenAPI::toJsonValue(m_order_shipping_phone));
    }
    if (m_order_shipping_price_isSet) {
        obj.insert(QString("order_Shipping_Price"), ::OpenAPI::toJsonValue(m_order_shipping_price));
    }
    if (m_order_shipping_shipping_tax_isSet) {
        obj.insert(QString("order_Shipping_ShippingTax"), ::OpenAPI::toJsonValue(m_order_shipping_shipping_tax));
    }
    if (m_order_total_commission_isSet) {
        obj.insert(QString("order_TotalCommission"), ::OpenAPI::toJsonValue(m_order_total_commission));
    }
    if (m_order_total_tax_isSet) {
        obj.insert(QString("order_TotalTax"), ::OpenAPI::toJsonValue(m_order_total_tax));
    }
    if (m_transition_links.size() > 0) {
        obj.insert(QString("transitionLinks"), ::OpenAPI::toJsonValue(m_transition_links));
    }
    return obj;
}

qint32 OAIOrder::getAccountId() const {
    return m_account_id;
}
void OAIOrder::setAccountId(const qint32 &account_id) {
    m_account_id = account_id;
    m_account_id_isSet = true;
}

bool OAIOrder::is_account_id_Set() const{
    return m_account_id_isSet;
}

bool OAIOrder::is_account_id_Valid() const{
    return m_account_id_isValid;
}

QString OAIOrder::getBeezUpOrderId() const {
    return m_beez_up_order_id;
}
void OAIOrder::setBeezUpOrderId(const QString &beez_up_order_id) {
    m_beez_up_order_id = beez_up_order_id;
    m_beez_up_order_id_isSet = true;
}

bool OAIOrder::is_beez_up_order_id_Set() const{
    return m_beez_up_order_id_isSet;
}

bool OAIOrder::is_beez_up_order_id_Valid() const{
    return m_beez_up_order_id_isValid;
}

QString OAIOrder::getBeezUpOrderUrl() const {
    return m_beez_up_order_url;
}
void OAIOrder::setBeezUpOrderUrl(const QString &beez_up_order_url) {
    m_beez_up_order_url = beez_up_order_url;
    m_beez_up_order_url_isSet = true;
}

bool OAIOrder::is_beez_up_order_url_Set() const{
    return m_beez_up_order_url_isSet;
}

bool OAIOrder::is_beez_up_order_url_Valid() const{
    return m_beez_up_order_url_isValid;
}

QString OAIOrder::getEtag() const {
    return m_etag;
}
void OAIOrder::setEtag(const QString &etag) {
    m_etag = etag;
    m_etag_isSet = true;
}

bool OAIOrder::is_etag_Set() const{
    return m_etag_isSet;
}

bool OAIOrder::is_etag_Valid() const{
    return m_etag_isValid;
}

OAIOrderLinks OAIOrder::getLinks() const {
    return m_links;
}
void OAIOrder::setLinks(const OAIOrderLinks &links) {
    m_links = links;
    m_links_isSet = true;
}

bool OAIOrder::is_links_Set() const{
    return m_links_isSet;
}

bool OAIOrder::is_links_Valid() const{
    return m_links_isValid;
}

QString OAIOrder::getMarketplaceBusinessCode() const {
    return m_marketplace_business_code;
}
void OAIOrder::setMarketplaceBusinessCode(const QString &marketplace_business_code) {
    m_marketplace_business_code = marketplace_business_code;
    m_marketplace_business_code_isSet = true;
}

bool OAIOrder::is_marketplace_business_code_Set() const{
    return m_marketplace_business_code_isSet;
}

bool OAIOrder::is_marketplace_business_code_Valid() const{
    return m_marketplace_business_code_isValid;
}

QString OAIOrder::getMarketplaceTechnicalCode() const {
    return m_marketplace_technical_code;
}
void OAIOrder::setMarketplaceTechnicalCode(const QString &marketplace_technical_code) {
    m_marketplace_technical_code = marketplace_technical_code;
    m_marketplace_technical_code_isSet = true;
}

bool OAIOrder::is_marketplace_technical_code_Set() const{
    return m_marketplace_technical_code_isSet;
}

bool OAIOrder::is_marketplace_technical_code_Valid() const{
    return m_marketplace_technical_code_isValid;
}

QString OAIOrder::getOrderBuyerName() const {
    return m_order_buyer_name;
}
void OAIOrder::setOrderBuyerName(const QString &order_buyer_name) {
    m_order_buyer_name = order_buyer_name;
    m_order_buyer_name_isSet = true;
}

bool OAIOrder::is_order_buyer_name_Set() const{
    return m_order_buyer_name_isSet;
}

bool OAIOrder::is_order_buyer_name_Valid() const{
    return m_order_buyer_name_isValid;
}

QString OAIOrder::getOrderCurrencyCode() const {
    return m_order_currency_code;
}
void OAIOrder::setOrderCurrencyCode(const QString &order_currency_code) {
    m_order_currency_code = order_currency_code;
    m_order_currency_code_isSet = true;
}

bool OAIOrder::is_order_currency_code_Set() const{
    return m_order_currency_code_isSet;
}

bool OAIOrder::is_order_currency_code_Valid() const{
    return m_order_currency_code_isValid;
}

QString OAIOrder::getOrderInvoiceNumber() const {
    return m_order_invoice_number;
}
void OAIOrder::setOrderInvoiceNumber(const QString &order_invoice_number) {
    m_order_invoice_number = order_invoice_number;
    m_order_invoice_number_isSet = true;
}

bool OAIOrder::is_order_invoice_number_Set() const{
    return m_order_invoice_number_isSet;
}

bool OAIOrder::is_order_invoice_number_Valid() const{
    return m_order_invoice_number_isValid;
}

QString OAIOrder::getOrderInvoiceUri() const {
    return m_order_invoice_uri;
}
void OAIOrder::setOrderInvoiceUri(const QString &order_invoice_uri) {
    m_order_invoice_uri = order_invoice_uri;
    m_order_invoice_uri_isSet = true;
}

bool OAIOrder::is_order_invoice_uri_Set() const{
    return m_order_invoice_uri_isSet;
}

bool OAIOrder::is_order_invoice_uri_Valid() const{
    return m_order_invoice_uri_isValid;
}

QDateTime OAIOrder::getOrderLastModificationUtcDate() const {
    return m_order_last_modification_utc_date;
}
void OAIOrder::setOrderLastModificationUtcDate(const QDateTime &order_last_modification_utc_date) {
    m_order_last_modification_utc_date = order_last_modification_utc_date;
    m_order_last_modification_utc_date_isSet = true;
}

bool OAIOrder::is_order_last_modification_utc_date_Set() const{
    return m_order_last_modification_utc_date_isSet;
}

bool OAIOrder::is_order_last_modification_utc_date_Valid() const{
    return m_order_last_modification_utc_date_isValid;
}

QDateTime OAIOrder::getOrderMarketplaceLastModificationUtcDate() const {
    return m_order_marketplace_last_modification_utc_date;
}
void OAIOrder::setOrderMarketplaceLastModificationUtcDate(const QDateTime &order_marketplace_last_modification_utc_date) {
    m_order_marketplace_last_modification_utc_date = order_marketplace_last_modification_utc_date;
    m_order_marketplace_last_modification_utc_date_isSet = true;
}

bool OAIOrder::is_order_marketplace_last_modification_utc_date_Set() const{
    return m_order_marketplace_last_modification_utc_date_isSet;
}

bool OAIOrder::is_order_marketplace_last_modification_utc_date_Valid() const{
    return m_order_marketplace_last_modification_utc_date_isValid;
}

QString OAIOrder::getOrderMarketplaceOrderId() const {
    return m_order_marketplace_order_id;
}
void OAIOrder::setOrderMarketplaceOrderId(const QString &order_marketplace_order_id) {
    m_order_marketplace_order_id = order_marketplace_order_id;
    m_order_marketplace_order_id_isSet = true;
}

bool OAIOrder::is_order_marketplace_order_id_Set() const{
    return m_order_marketplace_order_id_isSet;
}

bool OAIOrder::is_order_marketplace_order_id_Valid() const{
    return m_order_marketplace_order_id_isValid;
}

QString OAIOrder::getOrderMerchantECommerceSoftwareName() const {
    return m_order_merchant_e_commerce_software_name;
}
void OAIOrder::setOrderMerchantECommerceSoftwareName(const QString &order_merchant_e_commerce_software_name) {
    m_order_merchant_e_commerce_software_name = order_merchant_e_commerce_software_name;
    m_order_merchant_e_commerce_software_name_isSet = true;
}

bool OAIOrder::is_order_merchant_e_commerce_software_name_Set() const{
    return m_order_merchant_e_commerce_software_name_isSet;
}

bool OAIOrder::is_order_merchant_e_commerce_software_name_Valid() const{
    return m_order_merchant_e_commerce_software_name_isValid;
}

QString OAIOrder::getOrderMerchantECommerceSoftwareVersion() const {
    return m_order_merchant_e_commerce_software_version;
}
void OAIOrder::setOrderMerchantECommerceSoftwareVersion(const QString &order_merchant_e_commerce_software_version) {
    m_order_merchant_e_commerce_software_version = order_merchant_e_commerce_software_version;
    m_order_merchant_e_commerce_software_version_isSet = true;
}

bool OAIOrder::is_order_merchant_e_commerce_software_version_Set() const{
    return m_order_merchant_e_commerce_software_version_isSet;
}

bool OAIOrder::is_order_merchant_e_commerce_software_version_Valid() const{
    return m_order_merchant_e_commerce_software_version_isValid;
}

QString OAIOrder::getOrderMerchantOrderId() const {
    return m_order_merchant_order_id;
}
void OAIOrder::setOrderMerchantOrderId(const QString &order_merchant_order_id) {
    m_order_merchant_order_id = order_merchant_order_id;
    m_order_merchant_order_id_isSet = true;
}

bool OAIOrder::is_order_merchant_order_id_Set() const{
    return m_order_merchant_order_id_isSet;
}

bool OAIOrder::is_order_merchant_order_id_Valid() const{
    return m_order_merchant_order_id_isValid;
}

QDateTime OAIOrder::getOrderPurchaseUtcDate() const {
    return m_order_purchase_utc_date;
}
void OAIOrder::setOrderPurchaseUtcDate(const QDateTime &order_purchase_utc_date) {
    m_order_purchase_utc_date = order_purchase_utc_date;
    m_order_purchase_utc_date_isSet = true;
}

bool OAIOrder::is_order_purchase_utc_date_Set() const{
    return m_order_purchase_utc_date_isSet;
}

bool OAIOrder::is_order_purchase_utc_date_Valid() const{
    return m_order_purchase_utc_date_isValid;
}

QString OAIOrder::getOrderStatusBeezUpOrderStatus() const {
    return m_order_status_beez_up_order_status;
}
void OAIOrder::setOrderStatusBeezUpOrderStatus(const QString &order_status_beez_up_order_status) {
    m_order_status_beez_up_order_status = order_status_beez_up_order_status;
    m_order_status_beez_up_order_status_isSet = true;
}

bool OAIOrder::is_order_status_beez_up_order_status_Set() const{
    return m_order_status_beez_up_order_status_isSet;
}

bool OAIOrder::is_order_status_beez_up_order_status_Valid() const{
    return m_order_status_beez_up_order_status_isValid;
}

QString OAIOrder::getOrderStatusMarketplaceOrderStatus() const {
    return m_order_status_marketplace_order_status;
}
void OAIOrder::setOrderStatusMarketplaceOrderStatus(const QString &order_status_marketplace_order_status) {
    m_order_status_marketplace_order_status = order_status_marketplace_order_status;
    m_order_status_marketplace_order_status_isSet = true;
}

bool OAIOrder::is_order_status_marketplace_order_status_Set() const{
    return m_order_status_marketplace_order_status_isSet;
}

bool OAIOrder::is_order_status_marketplace_order_status_Valid() const{
    return m_order_status_marketplace_order_status_isValid;
}

double OAIOrder::getOrderTotalPrice() const {
    return m_order_total_price;
}
void OAIOrder::setOrderTotalPrice(const double &order_total_price) {
    m_order_total_price = order_total_price;
    m_order_total_price_isSet = true;
}

bool OAIOrder::is_order_total_price_Set() const{
    return m_order_total_price_isSet;
}

bool OAIOrder::is_order_total_price_Valid() const{
    return m_order_total_price_isValid;
}

bool OAIOrder::isProcessing() const {
    return m_processing;
}
void OAIOrder::setProcessing(const bool &processing) {
    m_processing = processing;
    m_processing_isSet = true;
}

bool OAIOrder::is_processing_Set() const{
    return m_processing_isSet;
}

bool OAIOrder::is_processing_Valid() const{
    return m_processing_isValid;
}

QList<OAIOrderItem> OAIOrder::getOrderItems() const {
    return m_order_items;
}
void OAIOrder::setOrderItems(const QList<OAIOrderItem> &order_items) {
    m_order_items = order_items;
    m_order_items_isSet = true;
}

bool OAIOrder::is_order_items_Set() const{
    return m_order_items_isSet;
}

bool OAIOrder::is_order_items_Valid() const{
    return m_order_items_isValid;
}

QString OAIOrder::getOrderBuyerAddressCity() const {
    return m_order_buyer_address_city;
}
void OAIOrder::setOrderBuyerAddressCity(const QString &order_buyer_address_city) {
    m_order_buyer_address_city = order_buyer_address_city;
    m_order_buyer_address_city_isSet = true;
}

bool OAIOrder::is_order_buyer_address_city_Set() const{
    return m_order_buyer_address_city_isSet;
}

bool OAIOrder::is_order_buyer_address_city_Valid() const{
    return m_order_buyer_address_city_isValid;
}

QString OAIOrder::getOrderBuyerAddressCountryIsoCodeAlpha2() const {
    return m_order_buyer_address_country_iso_code_alpha2;
}
void OAIOrder::setOrderBuyerAddressCountryIsoCodeAlpha2(const QString &order_buyer_address_country_iso_code_alpha2) {
    m_order_buyer_address_country_iso_code_alpha2 = order_buyer_address_country_iso_code_alpha2;
    m_order_buyer_address_country_iso_code_alpha2_isSet = true;
}

bool OAIOrder::is_order_buyer_address_country_iso_code_alpha2_Set() const{
    return m_order_buyer_address_country_iso_code_alpha2_isSet;
}

bool OAIOrder::is_order_buyer_address_country_iso_code_alpha2_Valid() const{
    return m_order_buyer_address_country_iso_code_alpha2_isValid;
}

QString OAIOrder::getOrderBuyerAddressCountryName() const {
    return m_order_buyer_address_country_name;
}
void OAIOrder::setOrderBuyerAddressCountryName(const QString &order_buyer_address_country_name) {
    m_order_buyer_address_country_name = order_buyer_address_country_name;
    m_order_buyer_address_country_name_isSet = true;
}

bool OAIOrder::is_order_buyer_address_country_name_Set() const{
    return m_order_buyer_address_country_name_isSet;
}

bool OAIOrder::is_order_buyer_address_country_name_Valid() const{
    return m_order_buyer_address_country_name_isValid;
}

QString OAIOrder::getOrderBuyerAddressLine1() const {
    return m_order_buyer_address_line1;
}
void OAIOrder::setOrderBuyerAddressLine1(const QString &order_buyer_address_line1) {
    m_order_buyer_address_line1 = order_buyer_address_line1;
    m_order_buyer_address_line1_isSet = true;
}

bool OAIOrder::is_order_buyer_address_line1_Set() const{
    return m_order_buyer_address_line1_isSet;
}

bool OAIOrder::is_order_buyer_address_line1_Valid() const{
    return m_order_buyer_address_line1_isValid;
}

QString OAIOrder::getOrderBuyerAddressLine2() const {
    return m_order_buyer_address_line2;
}
void OAIOrder::setOrderBuyerAddressLine2(const QString &order_buyer_address_line2) {
    m_order_buyer_address_line2 = order_buyer_address_line2;
    m_order_buyer_address_line2_isSet = true;
}

bool OAIOrder::is_order_buyer_address_line2_Set() const{
    return m_order_buyer_address_line2_isSet;
}

bool OAIOrder::is_order_buyer_address_line2_Valid() const{
    return m_order_buyer_address_line2_isValid;
}

QString OAIOrder::getOrderBuyerAddressLine3() const {
    return m_order_buyer_address_line3;
}
void OAIOrder::setOrderBuyerAddressLine3(const QString &order_buyer_address_line3) {
    m_order_buyer_address_line3 = order_buyer_address_line3;
    m_order_buyer_address_line3_isSet = true;
}

bool OAIOrder::is_order_buyer_address_line3_Set() const{
    return m_order_buyer_address_line3_isSet;
}

bool OAIOrder::is_order_buyer_address_line3_Valid() const{
    return m_order_buyer_address_line3_isValid;
}

QString OAIOrder::getOrderBuyerAddressPostalCode() const {
    return m_order_buyer_address_postal_code;
}
void OAIOrder::setOrderBuyerAddressPostalCode(const QString &order_buyer_address_postal_code) {
    m_order_buyer_address_postal_code = order_buyer_address_postal_code;
    m_order_buyer_address_postal_code_isSet = true;
}

bool OAIOrder::is_order_buyer_address_postal_code_Set() const{
    return m_order_buyer_address_postal_code_isSet;
}

bool OAIOrder::is_order_buyer_address_postal_code_Valid() const{
    return m_order_buyer_address_postal_code_isValid;
}

QString OAIOrder::getOrderBuyerAddressStateOrRegion() const {
    return m_order_buyer_address_state_or_region;
}
void OAIOrder::setOrderBuyerAddressStateOrRegion(const QString &order_buyer_address_state_or_region) {
    m_order_buyer_address_state_or_region = order_buyer_address_state_or_region;
    m_order_buyer_address_state_or_region_isSet = true;
}

bool OAIOrder::is_order_buyer_address_state_or_region_Set() const{
    return m_order_buyer_address_state_or_region_isSet;
}

bool OAIOrder::is_order_buyer_address_state_or_region_Valid() const{
    return m_order_buyer_address_state_or_region_isValid;
}

QString OAIOrder::getOrderBuyerCivility() const {
    return m_order_buyer_civility;
}
void OAIOrder::setOrderBuyerCivility(const QString &order_buyer_civility) {
    m_order_buyer_civility = order_buyer_civility;
    m_order_buyer_civility_isSet = true;
}

bool OAIOrder::is_order_buyer_civility_Set() const{
    return m_order_buyer_civility_isSet;
}

bool OAIOrder::is_order_buyer_civility_Valid() const{
    return m_order_buyer_civility_isValid;
}

QString OAIOrder::getOrderBuyerCompanyName() const {
    return m_order_buyer_company_name;
}
void OAIOrder::setOrderBuyerCompanyName(const QString &order_buyer_company_name) {
    m_order_buyer_company_name = order_buyer_company_name;
    m_order_buyer_company_name_isSet = true;
}

bool OAIOrder::is_order_buyer_company_name_Set() const{
    return m_order_buyer_company_name_isSet;
}

bool OAIOrder::is_order_buyer_company_name_Valid() const{
    return m_order_buyer_company_name_isValid;
}

QString OAIOrder::getOrderBuyerEmail() const {
    return m_order_buyer_email;
}
void OAIOrder::setOrderBuyerEmail(const QString &order_buyer_email) {
    m_order_buyer_email = order_buyer_email;
    m_order_buyer_email_isSet = true;
}

bool OAIOrder::is_order_buyer_email_Set() const{
    return m_order_buyer_email_isSet;
}

bool OAIOrder::is_order_buyer_email_Valid() const{
    return m_order_buyer_email_isValid;
}

QString OAIOrder::getOrderBuyerFirstName() const {
    return m_order_buyer_first_name;
}
void OAIOrder::setOrderBuyerFirstName(const QString &order_buyer_first_name) {
    m_order_buyer_first_name = order_buyer_first_name;
    m_order_buyer_first_name_isSet = true;
}

bool OAIOrder::is_order_buyer_first_name_Set() const{
    return m_order_buyer_first_name_isSet;
}

bool OAIOrder::is_order_buyer_first_name_Valid() const{
    return m_order_buyer_first_name_isValid;
}

QString OAIOrder::getOrderBuyerIdentifier() const {
    return m_order_buyer_identifier;
}
void OAIOrder::setOrderBuyerIdentifier(const QString &order_buyer_identifier) {
    m_order_buyer_identifier = order_buyer_identifier;
    m_order_buyer_identifier_isSet = true;
}

bool OAIOrder::is_order_buyer_identifier_Set() const{
    return m_order_buyer_identifier_isSet;
}

bool OAIOrder::is_order_buyer_identifier_Valid() const{
    return m_order_buyer_identifier_isValid;
}

QString OAIOrder::getOrderBuyerLastName() const {
    return m_order_buyer_last_name;
}
void OAIOrder::setOrderBuyerLastName(const QString &order_buyer_last_name) {
    m_order_buyer_last_name = order_buyer_last_name;
    m_order_buyer_last_name_isSet = true;
}

bool OAIOrder::is_order_buyer_last_name_Set() const{
    return m_order_buyer_last_name_isSet;
}

bool OAIOrder::is_order_buyer_last_name_Valid() const{
    return m_order_buyer_last_name_isValid;
}

QString OAIOrder::getOrderBuyerMobilePhone() const {
    return m_order_buyer_mobile_phone;
}
void OAIOrder::setOrderBuyerMobilePhone(const QString &order_buyer_mobile_phone) {
    m_order_buyer_mobile_phone = order_buyer_mobile_phone;
    m_order_buyer_mobile_phone_isSet = true;
}

bool OAIOrder::is_order_buyer_mobile_phone_Set() const{
    return m_order_buyer_mobile_phone_isSet;
}

bool OAIOrder::is_order_buyer_mobile_phone_Valid() const{
    return m_order_buyer_mobile_phone_isValid;
}

QString OAIOrder::getOrderBuyerPhone() const {
    return m_order_buyer_phone;
}
void OAIOrder::setOrderBuyerPhone(const QString &order_buyer_phone) {
    m_order_buyer_phone = order_buyer_phone;
    m_order_buyer_phone_isSet = true;
}

bool OAIOrder::is_order_buyer_phone_Set() const{
    return m_order_buyer_phone_isSet;
}

bool OAIOrder::is_order_buyer_phone_Valid() const{
    return m_order_buyer_phone_isValid;
}

QString OAIOrder::getOrderComment() const {
    return m_order_comment;
}
void OAIOrder::setOrderComment(const QString &order_comment) {
    m_order_comment = order_comment;
    m_order_comment_isSet = true;
}

bool OAIOrder::is_order_comment_Set() const{
    return m_order_comment_isSet;
}

bool OAIOrder::is_order_comment_Valid() const{
    return m_order_comment_isValid;
}

QString OAIOrder::getOrderFulfilledBy() const {
    return m_order_fulfilled_by;
}
void OAIOrder::setOrderFulfilledBy(const QString &order_fulfilled_by) {
    m_order_fulfilled_by = order_fulfilled_by;
    m_order_fulfilled_by_isSet = true;
}

bool OAIOrder::is_order_fulfilled_by_Set() const{
    return m_order_fulfilled_by_isSet;
}

bool OAIOrder::is_order_fulfilled_by_Valid() const{
    return m_order_fulfilled_by_isValid;
}

bool OAIOrder::isOrderIsBusiness() const {
    return m_order_is_business;
}
void OAIOrder::setOrderIsBusiness(const bool &order_is_business) {
    m_order_is_business = order_is_business;
    m_order_is_business_isSet = true;
}

bool OAIOrder::is_order_is_business_Set() const{
    return m_order_is_business_isSet;
}

bool OAIOrder::is_order_is_business_Valid() const{
    return m_order_is_business_isValid;
}

bool OAIOrder::isOrderIsPrime() const {
    return m_order_is_prime;
}
void OAIOrder::setOrderIsPrime(const bool &order_is_prime) {
    m_order_is_prime = order_is_prime;
    m_order_is_prime_isSet = true;
}

bool OAIOrder::is_order_is_prime_Set() const{
    return m_order_is_prime_isSet;
}

bool OAIOrder::is_order_is_prime_Valid() const{
    return m_order_is_prime_isValid;
}

QString OAIOrder::getOrderMarketPlaceChannel() const {
    return m_order_market_place_channel;
}
void OAIOrder::setOrderMarketPlaceChannel(const QString &order_market_place_channel) {
    m_order_market_place_channel = order_market_place_channel;
    m_order_market_place_channel_isSet = true;
}

bool OAIOrder::is_order_market_place_channel_Set() const{
    return m_order_market_place_channel_isSet;
}

bool OAIOrder::is_order_market_place_channel_Valid() const{
    return m_order_market_place_channel_isValid;
}

QString OAIOrder::getOrderOrderItemsSourceUri() const {
    return m_order_order_items_source_uri;
}
void OAIOrder::setOrderOrderItemsSourceUri(const QString &order_order_items_source_uri) {
    m_order_order_items_source_uri = order_order_items_source_uri;
    m_order_order_items_source_uri_isSet = true;
}

bool OAIOrder::is_order_order_items_source_uri_Set() const{
    return m_order_order_items_source_uri_isSet;
}

bool OAIOrder::is_order_order_items_source_uri_Valid() const{
    return m_order_order_items_source_uri_isValid;
}

QString OAIOrder::getOrderOrderSourceUri() const {
    return m_order_order_source_uri;
}
void OAIOrder::setOrderOrderSourceUri(const QString &order_order_source_uri) {
    m_order_order_source_uri = order_order_source_uri;
    m_order_order_source_uri_isSet = true;
}

bool OAIOrder::is_order_order_source_uri_Set() const{
    return m_order_order_source_uri_isSet;
}

bool OAIOrder::is_order_order_source_uri_Valid() const{
    return m_order_order_source_uri_isValid;
}

QDateTime OAIOrder::getOrderPayingUtcDate() const {
    return m_order_paying_utc_date;
}
void OAIOrder::setOrderPayingUtcDate(const QDateTime &order_paying_utc_date) {
    m_order_paying_utc_date = order_paying_utc_date;
    m_order_paying_utc_date_isSet = true;
}

bool OAIOrder::is_order_paying_utc_date_Set() const{
    return m_order_paying_utc_date_isSet;
}

bool OAIOrder::is_order_paying_utc_date_Valid() const{
    return m_order_paying_utc_date_isValid;
}

QString OAIOrder::getOrderPaymentMethod() const {
    return m_order_payment_method;
}
void OAIOrder::setOrderPaymentMethod(const QString &order_payment_method) {
    m_order_payment_method = order_payment_method;
    m_order_payment_method_isSet = true;
}

bool OAIOrder::is_order_payment_method_Set() const{
    return m_order_payment_method_isSet;
}

bool OAIOrder::is_order_payment_method_Valid() const{
    return m_order_payment_method_isValid;
}

QString OAIOrder::getOrderShippingAddressCity() const {
    return m_order_shipping_address_city;
}
void OAIOrder::setOrderShippingAddressCity(const QString &order_shipping_address_city) {
    m_order_shipping_address_city = order_shipping_address_city;
    m_order_shipping_address_city_isSet = true;
}

bool OAIOrder::is_order_shipping_address_city_Set() const{
    return m_order_shipping_address_city_isSet;
}

bool OAIOrder::is_order_shipping_address_city_Valid() const{
    return m_order_shipping_address_city_isValid;
}

QString OAIOrder::getOrderShippingAddressCountryIsoCodeAlpha2() const {
    return m_order_shipping_address_country_iso_code_alpha2;
}
void OAIOrder::setOrderShippingAddressCountryIsoCodeAlpha2(const QString &order_shipping_address_country_iso_code_alpha2) {
    m_order_shipping_address_country_iso_code_alpha2 = order_shipping_address_country_iso_code_alpha2;
    m_order_shipping_address_country_iso_code_alpha2_isSet = true;
}

bool OAIOrder::is_order_shipping_address_country_iso_code_alpha2_Set() const{
    return m_order_shipping_address_country_iso_code_alpha2_isSet;
}

bool OAIOrder::is_order_shipping_address_country_iso_code_alpha2_Valid() const{
    return m_order_shipping_address_country_iso_code_alpha2_isValid;
}

QString OAIOrder::getOrderShippingAddressCountryName() const {
    return m_order_shipping_address_country_name;
}
void OAIOrder::setOrderShippingAddressCountryName(const QString &order_shipping_address_country_name) {
    m_order_shipping_address_country_name = order_shipping_address_country_name;
    m_order_shipping_address_country_name_isSet = true;
}

bool OAIOrder::is_order_shipping_address_country_name_Set() const{
    return m_order_shipping_address_country_name_isSet;
}

bool OAIOrder::is_order_shipping_address_country_name_Valid() const{
    return m_order_shipping_address_country_name_isValid;
}

QString OAIOrder::getOrderShippingAddressLine1() const {
    return m_order_shipping_address_line1;
}
void OAIOrder::setOrderShippingAddressLine1(const QString &order_shipping_address_line1) {
    m_order_shipping_address_line1 = order_shipping_address_line1;
    m_order_shipping_address_line1_isSet = true;
}

bool OAIOrder::is_order_shipping_address_line1_Set() const{
    return m_order_shipping_address_line1_isSet;
}

bool OAIOrder::is_order_shipping_address_line1_Valid() const{
    return m_order_shipping_address_line1_isValid;
}

QString OAIOrder::getOrderShippingAddressLine2() const {
    return m_order_shipping_address_line2;
}
void OAIOrder::setOrderShippingAddressLine2(const QString &order_shipping_address_line2) {
    m_order_shipping_address_line2 = order_shipping_address_line2;
    m_order_shipping_address_line2_isSet = true;
}

bool OAIOrder::is_order_shipping_address_line2_Set() const{
    return m_order_shipping_address_line2_isSet;
}

bool OAIOrder::is_order_shipping_address_line2_Valid() const{
    return m_order_shipping_address_line2_isValid;
}

QString OAIOrder::getOrderShippingAddressLine3() const {
    return m_order_shipping_address_line3;
}
void OAIOrder::setOrderShippingAddressLine3(const QString &order_shipping_address_line3) {
    m_order_shipping_address_line3 = order_shipping_address_line3;
    m_order_shipping_address_line3_isSet = true;
}

bool OAIOrder::is_order_shipping_address_line3_Set() const{
    return m_order_shipping_address_line3_isSet;
}

bool OAIOrder::is_order_shipping_address_line3_Valid() const{
    return m_order_shipping_address_line3_isValid;
}

QString OAIOrder::getOrderShippingAddressName() const {
    return m_order_shipping_address_name;
}
void OAIOrder::setOrderShippingAddressName(const QString &order_shipping_address_name) {
    m_order_shipping_address_name = order_shipping_address_name;
    m_order_shipping_address_name_isSet = true;
}

bool OAIOrder::is_order_shipping_address_name_Set() const{
    return m_order_shipping_address_name_isSet;
}

bool OAIOrder::is_order_shipping_address_name_Valid() const{
    return m_order_shipping_address_name_isValid;
}

QString OAIOrder::getOrderShippingAddressPostalCode() const {
    return m_order_shipping_address_postal_code;
}
void OAIOrder::setOrderShippingAddressPostalCode(const QString &order_shipping_address_postal_code) {
    m_order_shipping_address_postal_code = order_shipping_address_postal_code;
    m_order_shipping_address_postal_code_isSet = true;
}

bool OAIOrder::is_order_shipping_address_postal_code_Set() const{
    return m_order_shipping_address_postal_code_isSet;
}

bool OAIOrder::is_order_shipping_address_postal_code_Valid() const{
    return m_order_shipping_address_postal_code_isValid;
}

QString OAIOrder::getOrderShippingAddressStateOrRegion() const {
    return m_order_shipping_address_state_or_region;
}
void OAIOrder::setOrderShippingAddressStateOrRegion(const QString &order_shipping_address_state_or_region) {
    m_order_shipping_address_state_or_region = order_shipping_address_state_or_region;
    m_order_shipping_address_state_or_region_isSet = true;
}

bool OAIOrder::is_order_shipping_address_state_or_region_Set() const{
    return m_order_shipping_address_state_or_region_isSet;
}

bool OAIOrder::is_order_shipping_address_state_or_region_Valid() const{
    return m_order_shipping_address_state_or_region_isValid;
}

QString OAIOrder::getOrderShippingCivility() const {
    return m_order_shipping_civility;
}
void OAIOrder::setOrderShippingCivility(const QString &order_shipping_civility) {
    m_order_shipping_civility = order_shipping_civility;
    m_order_shipping_civility_isSet = true;
}

bool OAIOrder::is_order_shipping_civility_Set() const{
    return m_order_shipping_civility_isSet;
}

bool OAIOrder::is_order_shipping_civility_Valid() const{
    return m_order_shipping_civility_isValid;
}

QString OAIOrder::getOrderShippingCompanyName() const {
    return m_order_shipping_company_name;
}
void OAIOrder::setOrderShippingCompanyName(const QString &order_shipping_company_name) {
    m_order_shipping_company_name = order_shipping_company_name;
    m_order_shipping_company_name_isSet = true;
}

bool OAIOrder::is_order_shipping_company_name_Set() const{
    return m_order_shipping_company_name_isSet;
}

bool OAIOrder::is_order_shipping_company_name_Valid() const{
    return m_order_shipping_company_name_isValid;
}

QDateTime OAIOrder::getOrderShippingEarliestShipUtcDate() const {
    return m_order_shipping_earliest_ship_utc_date;
}
void OAIOrder::setOrderShippingEarliestShipUtcDate(const QDateTime &order_shipping_earliest_ship_utc_date) {
    m_order_shipping_earliest_ship_utc_date = order_shipping_earliest_ship_utc_date;
    m_order_shipping_earliest_ship_utc_date_isSet = true;
}

bool OAIOrder::is_order_shipping_earliest_ship_utc_date_Set() const{
    return m_order_shipping_earliest_ship_utc_date_isSet;
}

bool OAIOrder::is_order_shipping_earliest_ship_utc_date_Valid() const{
    return m_order_shipping_earliest_ship_utc_date_isValid;
}

QString OAIOrder::getOrderShippingEmail() const {
    return m_order_shipping_email;
}
void OAIOrder::setOrderShippingEmail(const QString &order_shipping_email) {
    m_order_shipping_email = order_shipping_email;
    m_order_shipping_email_isSet = true;
}

bool OAIOrder::is_order_shipping_email_Set() const{
    return m_order_shipping_email_isSet;
}

bool OAIOrder::is_order_shipping_email_Valid() const{
    return m_order_shipping_email_isValid;
}

QString OAIOrder::getOrderShippingFirstName() const {
    return m_order_shipping_first_name;
}
void OAIOrder::setOrderShippingFirstName(const QString &order_shipping_first_name) {
    m_order_shipping_first_name = order_shipping_first_name;
    m_order_shipping_first_name_isSet = true;
}

bool OAIOrder::is_order_shipping_first_name_Set() const{
    return m_order_shipping_first_name_isSet;
}

bool OAIOrder::is_order_shipping_first_name_Valid() const{
    return m_order_shipping_first_name_isValid;
}

QString OAIOrder::getOrderShippingLastName() const {
    return m_order_shipping_last_name;
}
void OAIOrder::setOrderShippingLastName(const QString &order_shipping_last_name) {
    m_order_shipping_last_name = order_shipping_last_name;
    m_order_shipping_last_name_isSet = true;
}

bool OAIOrder::is_order_shipping_last_name_Set() const{
    return m_order_shipping_last_name_isSet;
}

bool OAIOrder::is_order_shipping_last_name_Valid() const{
    return m_order_shipping_last_name_isValid;
}

QDateTime OAIOrder::getOrderShippingLatestShipUtcDate() const {
    return m_order_shipping_latest_ship_utc_date;
}
void OAIOrder::setOrderShippingLatestShipUtcDate(const QDateTime &order_shipping_latest_ship_utc_date) {
    m_order_shipping_latest_ship_utc_date = order_shipping_latest_ship_utc_date;
    m_order_shipping_latest_ship_utc_date_isSet = true;
}

bool OAIOrder::is_order_shipping_latest_ship_utc_date_Set() const{
    return m_order_shipping_latest_ship_utc_date_isSet;
}

bool OAIOrder::is_order_shipping_latest_ship_utc_date_Valid() const{
    return m_order_shipping_latest_ship_utc_date_isValid;
}

QString OAIOrder::getOrderShippingMethod() const {
    return m_order_shipping_method;
}
void OAIOrder::setOrderShippingMethod(const QString &order_shipping_method) {
    m_order_shipping_method = order_shipping_method;
    m_order_shipping_method_isSet = true;
}

bool OAIOrder::is_order_shipping_method_Set() const{
    return m_order_shipping_method_isSet;
}

bool OAIOrder::is_order_shipping_method_Valid() const{
    return m_order_shipping_method_isValid;
}

QString OAIOrder::getOrderShippingMobilePhone() const {
    return m_order_shipping_mobile_phone;
}
void OAIOrder::setOrderShippingMobilePhone(const QString &order_shipping_mobile_phone) {
    m_order_shipping_mobile_phone = order_shipping_mobile_phone;
    m_order_shipping_mobile_phone_isSet = true;
}

bool OAIOrder::is_order_shipping_mobile_phone_Set() const{
    return m_order_shipping_mobile_phone_isSet;
}

bool OAIOrder::is_order_shipping_mobile_phone_Valid() const{
    return m_order_shipping_mobile_phone_isValid;
}

QString OAIOrder::getOrderShippingPhone() const {
    return m_order_shipping_phone;
}
void OAIOrder::setOrderShippingPhone(const QString &order_shipping_phone) {
    m_order_shipping_phone = order_shipping_phone;
    m_order_shipping_phone_isSet = true;
}

bool OAIOrder::is_order_shipping_phone_Set() const{
    return m_order_shipping_phone_isSet;
}

bool OAIOrder::is_order_shipping_phone_Valid() const{
    return m_order_shipping_phone_isValid;
}

double OAIOrder::getOrderShippingPrice() const {
    return m_order_shipping_price;
}
void OAIOrder::setOrderShippingPrice(const double &order_shipping_price) {
    m_order_shipping_price = order_shipping_price;
    m_order_shipping_price_isSet = true;
}

bool OAIOrder::is_order_shipping_price_Set() const{
    return m_order_shipping_price_isSet;
}

bool OAIOrder::is_order_shipping_price_Valid() const{
    return m_order_shipping_price_isValid;
}

double OAIOrder::getOrderShippingShippingTax() const {
    return m_order_shipping_shipping_tax;
}
void OAIOrder::setOrderShippingShippingTax(const double &order_shipping_shipping_tax) {
    m_order_shipping_shipping_tax = order_shipping_shipping_tax;
    m_order_shipping_shipping_tax_isSet = true;
}

bool OAIOrder::is_order_shipping_shipping_tax_Set() const{
    return m_order_shipping_shipping_tax_isSet;
}

bool OAIOrder::is_order_shipping_shipping_tax_Valid() const{
    return m_order_shipping_shipping_tax_isValid;
}

double OAIOrder::getOrderTotalCommission() const {
    return m_order_total_commission;
}
void OAIOrder::setOrderTotalCommission(const double &order_total_commission) {
    m_order_total_commission = order_total_commission;
    m_order_total_commission_isSet = true;
}

bool OAIOrder::is_order_total_commission_Set() const{
    return m_order_total_commission_isSet;
}

bool OAIOrder::is_order_total_commission_Valid() const{
    return m_order_total_commission_isValid;
}

double OAIOrder::getOrderTotalTax() const {
    return m_order_total_tax;
}
void OAIOrder::setOrderTotalTax(const double &order_total_tax) {
    m_order_total_tax = order_total_tax;
    m_order_total_tax_isSet = true;
}

bool OAIOrder::is_order_total_tax_Set() const{
    return m_order_total_tax_isSet;
}

bool OAIOrder::is_order_total_tax_Valid() const{
    return m_order_total_tax_isValid;
}

QList<OAILinks_ChangeOrderLink> OAIOrder::getTransitionLinks() const {
    return m_transition_links;
}
void OAIOrder::setTransitionLinks(const QList<OAILinks_ChangeOrderLink> &transition_links) {
    m_transition_links = transition_links;
    m_transition_links_isSet = true;
}

bool OAIOrder::is_transition_links_Set() const{
    return m_transition_links_isSet;
}

bool OAIOrder::is_transition_links_Valid() const{
    return m_transition_links_isValid;
}

bool OAIOrder::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_account_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_beez_up_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_beez_up_order_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_etag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_links.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_marketplace_business_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_marketplace_technical_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_buyer_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_invoice_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_invoice_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_last_modification_utc_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_marketplace_last_modification_utc_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_marketplace_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_merchant_e_commerce_software_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_merchant_e_commerce_software_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_merchant_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_purchase_utc_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_status_beez_up_order_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_status_marketplace_order_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_total_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_processing_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_buyer_address_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_buyer_address_country_iso_code_alpha2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_buyer_address_country_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_buyer_address_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_buyer_address_line2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_buyer_address_line3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_buyer_address_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_buyer_address_state_or_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_buyer_civility_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_buyer_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_buyer_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_buyer_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_buyer_identifier_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_buyer_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_buyer_mobile_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_buyer_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_fulfilled_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_is_business_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_is_prime_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_market_place_channel_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_order_items_source_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_order_source_uri_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_paying_utc_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_payment_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_address_city_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_address_country_iso_code_alpha2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_address_country_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_address_line1_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_address_line2_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_address_line3_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_address_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_address_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_address_state_or_region_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_civility_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_company_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_earliest_ship_utc_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_latest_ship_utc_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_mobile_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_phone_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_shipping_shipping_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_total_commission_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_total_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transition_links.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrder::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_account_id_isValid && m_beez_up_order_id_isValid && m_etag_isValid && m_links_isValid && m_marketplace_business_code_isValid && m_marketplace_technical_code_isValid && m_order_last_modification_utc_date_isValid && m_order_marketplace_last_modification_utc_date_isValid && m_order_marketplace_order_id_isValid && m_order_purchase_utc_date_isValid && m_order_status_beez_up_order_status_isValid && m_processing_isValid && m_order_items_isValid && m_transition_links_isValid && true;
}

} // namespace OpenAPI
