/**
 * BeezUP Merchant API 
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: help@beezup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIContractMoneyInfo.h
 *
 * Describe the pricing information related to the offer.
 */

#ifndef OAIContractMoneyInfo_H
#define OAIContractMoneyInfo_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIContractMoneyInfo : public OAIObject {
public:
    OAIContractMoneyInfo();
    OAIContractMoneyInfo(QString json);
    ~OAIContractMoneyInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAmountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount() const;
    void setAmountExcludingTaxesAndExcludingCodePromoDiscountIncludingBillingPeriodDiscount(const double &amount_excluding_taxes_and_excluding_code_promo_discount_including_billing_period_discount);
    bool is_amount_excluding_taxes_and_excluding_code_promo_discount_including_billing_period_discount_Set() const;
    bool is_amount_excluding_taxes_and_excluding_code_promo_discount_including_billing_period_discount_Valid() const;

    double getAmountExcludingTaxesAndExcludingDiscounts() const;
    void setAmountExcludingTaxesAndExcludingDiscounts(const double &amount_excluding_taxes_and_excluding_discounts);
    bool is_amount_excluding_taxes_and_excluding_discounts_Set() const;
    bool is_amount_excluding_taxes_and_excluding_discounts_Valid() const;

    double getAmountExcludingTaxesIncludingDiscounts() const;
    void setAmountExcludingTaxesIncludingDiscounts(const double &amount_excluding_taxes_including_discounts);
    bool is_amount_excluding_taxes_including_discounts_Set() const;
    bool is_amount_excluding_taxes_including_discounts_Valid() const;

    double getAmountExcludingTaxesIncludingDiscountsPerMonth() const;
    void setAmountExcludingTaxesIncludingDiscountsPerMonth(const double &amount_excluding_taxes_including_discounts_per_month);
    bool is_amount_excluding_taxes_including_discounts_per_month_Set() const;
    bool is_amount_excluding_taxes_including_discounts_per_month_Valid() const;

    double getAmountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount() const;
    void setAmountIncludingTaxesExcludingDiscountIncludingBillingPeriodDiscount(const double &amount_including_taxes_excluding_discount_including_billing_period_discount);
    bool is_amount_including_taxes_excluding_discount_including_billing_period_discount_Set() const;
    bool is_amount_including_taxes_excluding_discount_including_billing_period_discount_Valid() const;

    double getAmountIncludingTaxesIncludingDiscounts() const;
    void setAmountIncludingTaxesIncludingDiscounts(const double &amount_including_taxes_including_discounts);
    bool is_amount_including_taxes_including_discounts_Set() const;
    bool is_amount_including_taxes_including_discounts_Valid() const;

    double getAmountTaxesExcludingDiscountIncludingBillingPeriodDiscount() const;
    void setAmountTaxesExcludingDiscountIncludingBillingPeriodDiscount(const double &amount_taxes_excluding_discount_including_billing_period_discount);
    bool is_amount_taxes_excluding_discount_including_billing_period_discount_Set() const;
    bool is_amount_taxes_excluding_discount_including_billing_period_discount_Valid() const;

    double getAmountTaxesIncludingDiscounts() const;
    void setAmountTaxesIncludingDiscounts(const double &amount_taxes_including_discounts);
    bool is_amount_taxes_including_discounts_Set() const;
    bool is_amount_taxes_including_discounts_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    double getInitialOfferFixedPrice() const;
    void setInitialOfferFixedPrice(const double &initial_offer_fixed_price);
    bool is_initial_offer_fixed_price_Set() const;
    bool is_initial_offer_fixed_price_Valid() const;

    double getVatPercent() const;
    void setVatPercent(const double &vat_percent);
    bool is_vat_percent_Set() const;
    bool is_vat_percent_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_amount_excluding_taxes_and_excluding_code_promo_discount_including_billing_period_discount;
    bool m_amount_excluding_taxes_and_excluding_code_promo_discount_including_billing_period_discount_isSet;
    bool m_amount_excluding_taxes_and_excluding_code_promo_discount_including_billing_period_discount_isValid;

    double m_amount_excluding_taxes_and_excluding_discounts;
    bool m_amount_excluding_taxes_and_excluding_discounts_isSet;
    bool m_amount_excluding_taxes_and_excluding_discounts_isValid;

    double m_amount_excluding_taxes_including_discounts;
    bool m_amount_excluding_taxes_including_discounts_isSet;
    bool m_amount_excluding_taxes_including_discounts_isValid;

    double m_amount_excluding_taxes_including_discounts_per_month;
    bool m_amount_excluding_taxes_including_discounts_per_month_isSet;
    bool m_amount_excluding_taxes_including_discounts_per_month_isValid;

    double m_amount_including_taxes_excluding_discount_including_billing_period_discount;
    bool m_amount_including_taxes_excluding_discount_including_billing_period_discount_isSet;
    bool m_amount_including_taxes_excluding_discount_including_billing_period_discount_isValid;

    double m_amount_including_taxes_including_discounts;
    bool m_amount_including_taxes_including_discounts_isSet;
    bool m_amount_including_taxes_including_discounts_isValid;

    double m_amount_taxes_excluding_discount_including_billing_period_discount;
    bool m_amount_taxes_excluding_discount_including_billing_period_discount_isSet;
    bool m_amount_taxes_excluding_discount_including_billing_period_discount_isValid;

    double m_amount_taxes_including_discounts;
    bool m_amount_taxes_including_discounts_isSet;
    bool m_amount_taxes_including_discounts_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    double m_initial_offer_fixed_price;
    bool m_initial_offer_fixed_price_isSet;
    bool m_initial_offer_fixed_price_isValid;

    double m_vat_percent;
    bool m_vat_percent_isSet;
    bool m_vat_percent_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIContractMoneyInfo)

#endif // OAIContractMoneyInfo_H
