/**
 * BeezUP Merchant API 
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: help@beezup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAnalyticsIndexLovLinks.h
 *
 * 
 */

#ifndef OAIAnalyticsIndexLovLinks_H
#define OAIAnalyticsIndexLovLinks_H

#include <QJsonObject>

#include "OAIBeezUP_Common_LOVLink3.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBeezUP_Common_LOVLink3;

class OAIAnalyticsIndexLovLinks : public OAIObject {
public:
    OAIAnalyticsIndexLovLinks();
    OAIAnalyticsIndexLovLinks(QString json);
    ~OAIAnalyticsIndexLovLinks() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIBeezUP_Common_LOVLink3 getAnalyticsNumericalProductColumnFilterOperatorNameLov() const;
    void setAnalyticsNumericalProductColumnFilterOperatorNameLov(const OAIBeezUP_Common_LOVLink3 &analytics_numerical_product_column_filter_operator_name_lov);
    bool is_analytics_numerical_product_column_filter_operator_name_lov_Set() const;
    bool is_analytics_numerical_product_column_filter_operator_name_lov_Valid() const;

    OAIBeezUP_Common_LOVLink3 getAnalyticsProductColumnFilterOperatorNameLov() const;
    void setAnalyticsProductColumnFilterOperatorNameLov(const OAIBeezUP_Common_LOVLink3 &analytics_product_column_filter_operator_name_lov);
    bool is_analytics_product_column_filter_operator_name_lov_Set() const;
    bool is_analytics_product_column_filter_operator_name_lov_Valid() const;

    OAIBeezUP_Common_LOVLink3 getAnalyticsStringProductColumnFilterOperatorNameLov() const;
    void setAnalyticsStringProductColumnFilterOperatorNameLov(const OAIBeezUP_Common_LOVLink3 &analytics_string_product_column_filter_operator_name_lov);
    bool is_analytics_string_product_column_filter_operator_name_lov_Set() const;
    bool is_analytics_string_product_column_filter_operator_name_lov_Valid() const;

    OAIBeezUP_Common_LOVLink3 getPerformanceIndicatorFilterOperatorNameLov() const;
    void setPerformanceIndicatorFilterOperatorNameLov(const OAIBeezUP_Common_LOVLink3 &performance_indicator_filter_operator_name_lov);
    bool is_performance_indicator_filter_operator_name_lov_Set() const;
    bool is_performance_indicator_filter_operator_name_lov_Valid() const;

    OAIBeezUP_Common_LOVLink3 getPerformanceIndicatorFormulaOperatorNameLov() const;
    void setPerformanceIndicatorFormulaOperatorNameLov(const OAIBeezUP_Common_LOVLink3 &performance_indicator_formula_operator_name_lov);
    bool is_performance_indicator_formula_operator_name_lov_Set() const;
    bool is_performance_indicator_formula_operator_name_lov_Valid() const;

    OAIBeezUP_Common_LOVLink3 getPerformanceIndicatorFormulaParameterTypeLov() const;
    void setPerformanceIndicatorFormulaParameterTypeLov(const OAIBeezUP_Common_LOVLink3 &performance_indicator_formula_parameter_type_lov);
    bool is_performance_indicator_formula_parameter_type_lov_Set() const;
    bool is_performance_indicator_formula_parameter_type_lov_Valid() const;

    OAIBeezUP_Common_LOVLink3 getPerformanceIndicatorTypeForReportsByCategoryLov() const;
    void setPerformanceIndicatorTypeForReportsByCategoryLov(const OAIBeezUP_Common_LOVLink3 &performance_indicator_type_for_reports_by_category_lov);
    bool is_performance_indicator_type_for_reports_by_category_lov_Set() const;
    bool is_performance_indicator_type_for_reports_by_category_lov_Valid() const;

    OAIBeezUP_Common_LOVLink3 getPerformanceIndicatorTypeForReportsByChannelLov() const;
    void setPerformanceIndicatorTypeForReportsByChannelLov(const OAIBeezUP_Common_LOVLink3 &performance_indicator_type_for_reports_by_channel_lov);
    bool is_performance_indicator_type_for_reports_by_channel_lov_Set() const;
    bool is_performance_indicator_type_for_reports_by_channel_lov_Valid() const;

    OAIBeezUP_Common_LOVLink3 getPerformanceIndicatorTypeForReportsByProductLov() const;
    void setPerformanceIndicatorTypeForReportsByProductLov(const OAIBeezUP_Common_LOVLink3 &performance_indicator_type_for_reports_by_product_lov);
    bool is_performance_indicator_type_for_reports_by_product_lov_Set() const;
    bool is_performance_indicator_type_for_reports_by_product_lov_Valid() const;

    OAIBeezUP_Common_LOVLink3 getPerformanceIndicatorTypeLov() const;
    void setPerformanceIndicatorTypeLov(const OAIBeezUP_Common_LOVLink3 &performance_indicator_type_lov);
    bool is_performance_indicator_type_lov_Set() const;
    bool is_performance_indicator_type_lov_Valid() const;

    OAIBeezUP_Common_LOVLink3 getStoreOptimisationRuleExecutionStatusLov() const;
    void setStoreOptimisationRuleExecutionStatusLov(const OAIBeezUP_Common_LOVLink3 &store_optimisation_rule_execution_status_lov);
    bool is_store_optimisation_rule_execution_status_lov_Set() const;
    bool is_store_optimisation_rule_execution_status_lov_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIBeezUP_Common_LOVLink3 m_analytics_numerical_product_column_filter_operator_name_lov;
    bool m_analytics_numerical_product_column_filter_operator_name_lov_isSet;
    bool m_analytics_numerical_product_column_filter_operator_name_lov_isValid;

    OAIBeezUP_Common_LOVLink3 m_analytics_product_column_filter_operator_name_lov;
    bool m_analytics_product_column_filter_operator_name_lov_isSet;
    bool m_analytics_product_column_filter_operator_name_lov_isValid;

    OAIBeezUP_Common_LOVLink3 m_analytics_string_product_column_filter_operator_name_lov;
    bool m_analytics_string_product_column_filter_operator_name_lov_isSet;
    bool m_analytics_string_product_column_filter_operator_name_lov_isValid;

    OAIBeezUP_Common_LOVLink3 m_performance_indicator_filter_operator_name_lov;
    bool m_performance_indicator_filter_operator_name_lov_isSet;
    bool m_performance_indicator_filter_operator_name_lov_isValid;

    OAIBeezUP_Common_LOVLink3 m_performance_indicator_formula_operator_name_lov;
    bool m_performance_indicator_formula_operator_name_lov_isSet;
    bool m_performance_indicator_formula_operator_name_lov_isValid;

    OAIBeezUP_Common_LOVLink3 m_performance_indicator_formula_parameter_type_lov;
    bool m_performance_indicator_formula_parameter_type_lov_isSet;
    bool m_performance_indicator_formula_parameter_type_lov_isValid;

    OAIBeezUP_Common_LOVLink3 m_performance_indicator_type_for_reports_by_category_lov;
    bool m_performance_indicator_type_for_reports_by_category_lov_isSet;
    bool m_performance_indicator_type_for_reports_by_category_lov_isValid;

    OAIBeezUP_Common_LOVLink3 m_performance_indicator_type_for_reports_by_channel_lov;
    bool m_performance_indicator_type_for_reports_by_channel_lov_isSet;
    bool m_performance_indicator_type_for_reports_by_channel_lov_isValid;

    OAIBeezUP_Common_LOVLink3 m_performance_indicator_type_for_reports_by_product_lov;
    bool m_performance_indicator_type_for_reports_by_product_lov_isSet;
    bool m_performance_indicator_type_for_reports_by_product_lov_isValid;

    OAIBeezUP_Common_LOVLink3 m_performance_indicator_type_lov;
    bool m_performance_indicator_type_lov_isSet;
    bool m_performance_indicator_type_lov_isValid;

    OAIBeezUP_Common_LOVLink3 m_store_optimisation_rule_execution_status_lov;
    bool m_store_optimisation_rule_execution_status_lov_isSet;
    bool m_store_optimisation_rule_execution_status_lov_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAnalyticsIndexLovLinks)

#endif // OAIAnalyticsIndexLovLinks_H
