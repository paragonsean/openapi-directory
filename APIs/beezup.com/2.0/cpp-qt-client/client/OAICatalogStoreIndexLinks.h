/**
 * BeezUP Merchant API 
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: help@beezup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICatalogStoreIndexLinks.h
 *
 * 
 */

#ifndef OAICatalogStoreIndexLinks_H
#define OAICatalogStoreIndexLinks_H

#include <QJsonObject>

#include "OAILinks_Auto_GetAutoImportConfigurationLink.h"
#include "OAILinks_CatalogStoreIndexLink.h"
#include "OAILinks_Catalog_ComputeExpressionLink.h"
#include "OAILinks_Catalog_GetCatalogColumnsLink.h"
#include "OAILinks_Catalog_GetCategoriesLink.h"
#include "OAILinks_Catalog_GetCustomColumnsLink.h"
#include "OAILinks_Catalog_GetProductsLink.h"
#include "OAILinks_Catalog_GetRandomProductsLink.h"
#include "OAILinks_Importation_GetManualUpdateLastInputConfigLink.h"
#include "OAILinks_Importation_GetReportingsLink.h"
#include "OAILinks_Importation_StartManualUpdateLink.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILinks_Auto_GetAutoImportConfigurationLink;
class OAILinks_Catalog_GetCatalogColumnsLink;
class OAILinks_Catalog_GetCategoriesLink;
class OAILinks_Catalog_ComputeExpressionLink;
class OAILinks_Catalog_GetCustomColumnsLink;
class OAILinks_Importation_GetReportingsLink;
class OAILinks_Importation_GetManualUpdateLastInputConfigLink;
class OAILinks_Catalog_GetProductsLink;
class OAILinks_Catalog_GetRandomProductsLink;
class OAILinks_CatalogStoreIndexLink;
class OAILinks_Importation_StartManualUpdateLink;

class OAICatalogStoreIndexLinks : public OAIObject {
public:
    OAICatalogStoreIndexLinks();
    OAICatalogStoreIndexLinks(QString json);
    ~OAICatalogStoreIndexLinks() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILinks_Auto_GetAutoImportConfigurationLink getAutoImportInfo() const;
    void setAutoImportInfo(const OAILinks_Auto_GetAutoImportConfigurationLink &auto_import_info);
    bool is_auto_import_info_Set() const;
    bool is_auto_import_info_Valid() const;

    OAILinks_Catalog_GetCatalogColumnsLink getCatalogColumns() const;
    void setCatalogColumns(const OAILinks_Catalog_GetCatalogColumnsLink &catalog_columns);
    bool is_catalog_columns_Set() const;
    bool is_catalog_columns_Valid() const;

    OAILinks_Catalog_GetCategoriesLink getCategories() const;
    void setCategories(const OAILinks_Catalog_GetCategoriesLink &categories);
    bool is_categories_Set() const;
    bool is_categories_Valid() const;

    OAILinks_Catalog_ComputeExpressionLink getComputeExpression() const;
    void setComputeExpression(const OAILinks_Catalog_ComputeExpressionLink &compute_expression);
    bool is_compute_expression_Set() const;
    bool is_compute_expression_Valid() const;

    OAILinks_Catalog_GetCustomColumnsLink getCustomColumns() const;
    void setCustomColumns(const OAILinks_Catalog_GetCustomColumnsLink &custom_columns);
    bool is_custom_columns_Set() const;
    bool is_custom_columns_Valid() const;

    OAILinks_Importation_GetReportingsLink getImportations() const;
    void setImportations(const OAILinks_Importation_GetReportingsLink &importations);
    bool is_importations_Set() const;
    bool is_importations_Valid() const;

    OAILinks_Importation_GetManualUpdateLastInputConfigLink getInputConfiguration() const;
    void setInputConfiguration(const OAILinks_Importation_GetManualUpdateLastInputConfigLink &input_configuration);
    bool is_input_configuration_Set() const;
    bool is_input_configuration_Valid() const;

    OAILinks_Catalog_GetProductsLink getProducts() const;
    void setProducts(const OAILinks_Catalog_GetProductsLink &products);
    bool is_products_Set() const;
    bool is_products_Valid() const;

    OAILinks_Catalog_GetRandomProductsLink getRandomProducts() const;
    void setRandomProducts(const OAILinks_Catalog_GetRandomProductsLink &random_products);
    bool is_random_products_Set() const;
    bool is_random_products_Valid() const;

    OAILinks_CatalogStoreIndexLink getSelf() const;
    void setSelf(const OAILinks_CatalogStoreIndexLink &self);
    bool is_self_Set() const;
    bool is_self_Valid() const;

    OAILinks_Importation_StartManualUpdateLink getStartImportation() const;
    void setStartImportation(const OAILinks_Importation_StartManualUpdateLink &start_importation);
    bool is_start_importation_Set() const;
    bool is_start_importation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILinks_Auto_GetAutoImportConfigurationLink m_auto_import_info;
    bool m_auto_import_info_isSet;
    bool m_auto_import_info_isValid;

    OAILinks_Catalog_GetCatalogColumnsLink m_catalog_columns;
    bool m_catalog_columns_isSet;
    bool m_catalog_columns_isValid;

    OAILinks_Catalog_GetCategoriesLink m_categories;
    bool m_categories_isSet;
    bool m_categories_isValid;

    OAILinks_Catalog_ComputeExpressionLink m_compute_expression;
    bool m_compute_expression_isSet;
    bool m_compute_expression_isValid;

    OAILinks_Catalog_GetCustomColumnsLink m_custom_columns;
    bool m_custom_columns_isSet;
    bool m_custom_columns_isValid;

    OAILinks_Importation_GetReportingsLink m_importations;
    bool m_importations_isSet;
    bool m_importations_isValid;

    OAILinks_Importation_GetManualUpdateLastInputConfigLink m_input_configuration;
    bool m_input_configuration_isSet;
    bool m_input_configuration_isValid;

    OAILinks_Catalog_GetProductsLink m_products;
    bool m_products_isSet;
    bool m_products_isValid;

    OAILinks_Catalog_GetRandomProductsLink m_random_products;
    bool m_random_products_isSet;
    bool m_random_products_isValid;

    OAILinks_CatalogStoreIndexLink m_self;
    bool m_self_isSet;
    bool m_self_isValid;

    OAILinks_Importation_StartManualUpdateLink m_start_importation;
    bool m_start_importation_isSet;
    bool m_start_importation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICatalogStoreIndexLinks)

#endif // OAICatalogStoreIndexLinks_H
