/**
 * BeezUP Merchant API 
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: help@beezup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrderItem.h
 *
 * Describe an order item. All properties with the prefix orderItem_ are translated in the list of values /user/lov/OrderMetaInfoOrderItems
 */

#ifndef OAIOrderItem_H
#define OAIOrderItem_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOrderItem : public OAIObject {
public:
    OAIOrderItem();
    OAIOrderItem(QString json);
    ~OAIOrderItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBeezUpOrderItemId() const;
    void setBeezUpOrderItemId(const QString &beez_up_order_item_id);
    bool is_beez_up_order_item_id_Set() const;
    bool is_beez_up_order_item_id_Valid() const;

    QString getOrderItemBeezUpStoreId() const;
    void setOrderItemBeezUpStoreId(const QString &order_item_beez_up_store_id);
    bool is_order_item_beez_up_store_id_Set() const;
    bool is_order_item_beez_up_store_id_Valid() const;

    QString getOrderItemCondition() const;
    void setOrderItemCondition(const QString &order_item_condition);
    bool is_order_item_condition_Set() const;
    bool is_order_item_condition_Valid() const;

    QString getOrderItemImageUrl() const;
    void setOrderItemImageUrl(const QString &order_item_image_url);
    bool is_order_item_image_url_Set() const;
    bool is_order_item_image_url_Valid() const;

    double getOrderItemItemPrice() const;
    void setOrderItemItemPrice(const double &order_item_item_price);
    bool is_order_item_item_price_Set() const;
    bool is_order_item_item_price_Valid() const;

    double getOrderItemItemTax() const;
    void setOrderItemItemTax(const double &order_item_item_tax);
    bool is_order_item_item_tax_Set() const;
    bool is_order_item_item_tax_Valid() const;

    QString getOrderItemMarketPlaceProductId() const;
    void setOrderItemMarketPlaceProductId(const QString &order_item_market_place_product_id);
    bool is_order_item_market_place_product_id_Set() const;
    bool is_order_item_market_place_product_id_Valid() const;

    QString getOrderItemMarketplaceImageUri() const;
    void setOrderItemMarketplaceImageUri(const QString &order_item_marketplace_image_uri);
    bool is_order_item_marketplace_image_uri_Set() const;
    bool is_order_item_marketplace_image_uri_Valid() const;

    QString getOrderItemMarketplaceProductUri() const;
    void setOrderItemMarketplaceProductUri(const QString &order_item_marketplace_product_uri);
    bool is_order_item_marketplace_product_uri_Set() const;
    bool is_order_item_marketplace_product_uri_Valid() const;

    QString getOrderItemMerchantImportedProductId() const;
    void setOrderItemMerchantImportedProductId(const QString &order_item_merchant_imported_product_id);
    bool is_order_item_merchant_imported_product_id_Set() const;
    bool is_order_item_merchant_imported_product_id_Valid() const;

    QString getOrderItemMerchantImportedProductIdColumnName() const;
    void setOrderItemMerchantImportedProductIdColumnName(const QString &order_item_merchant_imported_product_id_column_name);
    bool is_order_item_merchant_imported_product_id_column_name_Set() const;
    bool is_order_item_merchant_imported_product_id_column_name_Valid() const;

    QString getOrderItemMerchantImportedProductUrl() const;
    void setOrderItemMerchantImportedProductUrl(const QString &order_item_merchant_imported_product_url);
    bool is_order_item_merchant_imported_product_url_Set() const;
    bool is_order_item_merchant_imported_product_url_Valid() const;

    QString getOrderItemMerchantProductId() const;
    void setOrderItemMerchantProductId(const QString &order_item_merchant_product_id);
    bool is_order_item_merchant_product_id_Set() const;
    bool is_order_item_merchant_product_id_Valid() const;

    QString getOrderItemMerchantProductIdColumnName() const;
    void setOrderItemMerchantProductIdColumnName(const QString &order_item_merchant_product_id_column_name);
    bool is_order_item_merchant_product_id_column_name_Set() const;
    bool is_order_item_merchant_product_id_column_name_Valid() const;

    QString getOrderItemOrderItemType() const;
    void setOrderItemOrderItemType(const QString &order_item_order_item_type);
    bool is_order_item_order_item_type_Set() const;
    bool is_order_item_order_item_type_Valid() const;

    double getOrderItemQuantity() const;
    void setOrderItemQuantity(const double &order_item_quantity);
    bool is_order_item_quantity_Set() const;
    bool is_order_item_quantity_Valid() const;

    double getOrderItemShippingPrice() const;
    void setOrderItemShippingPrice(const double &order_item_shipping_price);
    bool is_order_item_shipping_price_Set() const;
    bool is_order_item_shipping_price_Valid() const;

    QString getOrderItemTitle() const;
    void setOrderItemTitle(const QString &order_item_title);
    bool is_order_item_title_Set() const;
    bool is_order_item_title_Valid() const;

    double getOrderItemTotalPrice() const;
    void setOrderItemTotalPrice(const double &order_item_total_price);
    bool is_order_item_total_price_Set() const;
    bool is_order_item_total_price_Valid() const;

    QString getOrderItemGtin() const;
    void setOrderItemGtin(const QString &order_item_gtin);
    bool is_order_item_gtin_Set() const;
    bool is_order_item_gtin_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_beez_up_order_item_id;
    bool m_beez_up_order_item_id_isSet;
    bool m_beez_up_order_item_id_isValid;

    QString m_order_item_beez_up_store_id;
    bool m_order_item_beez_up_store_id_isSet;
    bool m_order_item_beez_up_store_id_isValid;

    QString m_order_item_condition;
    bool m_order_item_condition_isSet;
    bool m_order_item_condition_isValid;

    QString m_order_item_image_url;
    bool m_order_item_image_url_isSet;
    bool m_order_item_image_url_isValid;

    double m_order_item_item_price;
    bool m_order_item_item_price_isSet;
    bool m_order_item_item_price_isValid;

    double m_order_item_item_tax;
    bool m_order_item_item_tax_isSet;
    bool m_order_item_item_tax_isValid;

    QString m_order_item_market_place_product_id;
    bool m_order_item_market_place_product_id_isSet;
    bool m_order_item_market_place_product_id_isValid;

    QString m_order_item_marketplace_image_uri;
    bool m_order_item_marketplace_image_uri_isSet;
    bool m_order_item_marketplace_image_uri_isValid;

    QString m_order_item_marketplace_product_uri;
    bool m_order_item_marketplace_product_uri_isSet;
    bool m_order_item_marketplace_product_uri_isValid;

    QString m_order_item_merchant_imported_product_id;
    bool m_order_item_merchant_imported_product_id_isSet;
    bool m_order_item_merchant_imported_product_id_isValid;

    QString m_order_item_merchant_imported_product_id_column_name;
    bool m_order_item_merchant_imported_product_id_column_name_isSet;
    bool m_order_item_merchant_imported_product_id_column_name_isValid;

    QString m_order_item_merchant_imported_product_url;
    bool m_order_item_merchant_imported_product_url_isSet;
    bool m_order_item_merchant_imported_product_url_isValid;

    QString m_order_item_merchant_product_id;
    bool m_order_item_merchant_product_id_isSet;
    bool m_order_item_merchant_product_id_isValid;

    QString m_order_item_merchant_product_id_column_name;
    bool m_order_item_merchant_product_id_column_name_isSet;
    bool m_order_item_merchant_product_id_column_name_isValid;

    QString m_order_item_order_item_type;
    bool m_order_item_order_item_type_isSet;
    bool m_order_item_order_item_type_isValid;

    double m_order_item_quantity;
    bool m_order_item_quantity_isSet;
    bool m_order_item_quantity_isValid;

    double m_order_item_shipping_price;
    bool m_order_item_shipping_price_isSet;
    bool m_order_item_shipping_price_isValid;

    QString m_order_item_title;
    bool m_order_item_title_isSet;
    bool m_order_item_title_isValid;

    double m_order_item_total_price;
    bool m_order_item_total_price_isSet;
    bool m_order_item_total_price_isValid;

    QString m_order_item_gtin;
    bool m_order_item_gtin_isSet;
    bool m_order_item_gtin_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrderItem)

#endif // OAIOrderItem_H
