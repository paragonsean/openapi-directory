/**
 * BeezUP Merchant API 
 * # The REST API of BeezUP system ## Overview The REST APIs provide programmatic access to read and write BeezUP data.  Basically, with this API you will be able to do everything like you were with your browser on https://go.beezup.com !  The main features are: - Register and manage your account - Create and manage and share your stores with your friends/co-workers. - Import your product catalog and schedule the auto importation - Search the channels your want to use - Configure your channels for your catalogs to export your product information:     - cost and general settings     - category and columns mappings     - your will be able to create and manage your custom column     - put in place exlusion filters based on simple conditions on your product data     - override product values     - get product vision for a channel catalog scope - Analyze and optimize your performance of your catalogs on all yours channels with different type of reportings by day, channel, category and by product. - Automatize your optimisation by using rules! - And of course... Manage your orders harvested from all your marketplaces:     - Synchronize your orders in an uniformized way     - Get the available actions and update the order status - ...and more!  ## Authentication credentials The public API with the base path **_/v2/public** have been put in place to give you an entry point to our system for the user registration, login and lost password. The public API does not require any credentials. We give you the some public list of values and public channels for our public commercial web site [www.beezup.com](http://www.beezup.com).  The user API with the base path **_/v2/user** requires a token which is available on this page: https://go.beezup.com/Account/MyAccount  ## Things to keep in mind ### API Rate Limits - The BeezUP REST API is limited to 100 calls/minute.  ### Media type The default media type for requests and responses is application/json. Where noted, some operations support other content types. If no additional content type is mentioned for a specific operation, then the media type is application/json.  ### Required content type The required and default encoding for the request and responses is UTF8.  ### Required date time format All our date time are formatted in ISO 8601 format: 2014-06-24T16:25:00Z.  ### Base URL The Base URL of the BeezUP API Order Management REST API conforms to the following template.  https://api.beezup.com  All URLs returned by the BeezUP API are relative to this base URL, and all requests to the REST API must use this base URL template.  You can test our API on https://api-docs.beezup.com/swagger-ui\\\\ You can contact us on [gitter, #BeezUP/API](https://gitter.im/BeezUP/API)
 *
 * The version of the OpenAPI document: 2.0
 * Contact: help@beezup.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRuleLinks.h
 *
 * Links to retrieve/action on other entities
 */

#ifndef OAIRuleLinks_H
#define OAIRuleLinks_H

#include <QJsonObject>

#include "OAILinks_DeleteRuleLink.h"
#include "OAILinks_DisableRuleLink.h"
#include "OAILinks_EnableRuleLink.h"
#include "OAILinks_GetReportFilterLink.h"
#include "OAILinks_GetRuleLink.h"
#include "OAILinks_MoveDownRuleLink.h"
#include "OAILinks_MoveUpRuleLink.h"
#include "OAILinks_RunRuleLink.h"
#include "OAILinks_UpdateRuleLink.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAILinks_DeleteRuleLink;
class OAILinks_DisableRuleLink;
class OAILinks_EnableRuleLink;
class OAILinks_MoveDownRuleLink;
class OAILinks_MoveUpRuleLink;
class OAILinks_GetReportFilterLink;
class OAILinks_RunRuleLink;
class OAILinks_GetRuleLink;
class OAILinks_UpdateRuleLink;

class OAIRuleLinks : public OAIObject {
public:
    OAIRuleLinks();
    OAIRuleLinks(QString json);
    ~OAIRuleLinks() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAILinks_DeleteRuleLink getRDelete() const;
    void setRDelete(const OAILinks_DeleteRuleLink &r_delete);
    bool is_r_delete_Set() const;
    bool is_r_delete_Valid() const;

    OAILinks_DisableRuleLink getDisable() const;
    void setDisable(const OAILinks_DisableRuleLink &disable);
    bool is_disable_Set() const;
    bool is_disable_Valid() const;

    OAILinks_EnableRuleLink getEnable() const;
    void setEnable(const OAILinks_EnableRuleLink &enable);
    bool is_enable_Set() const;
    bool is_enable_Valid() const;

    OAILinks_MoveDownRuleLink getMovedown() const;
    void setMovedown(const OAILinks_MoveDownRuleLink &movedown);
    bool is_movedown_Set() const;
    bool is_movedown_Valid() const;

    OAILinks_MoveUpRuleLink getMoveup() const;
    void setMoveup(const OAILinks_MoveUpRuleLink &moveup);
    bool is_moveup_Set() const;
    bool is_moveup_Valid() const;

    OAILinks_GetReportFilterLink getReportFilter() const;
    void setReportFilter(const OAILinks_GetReportFilterLink &report_filter);
    bool is_report_filter_Set() const;
    bool is_report_filter_Valid() const;

    OAILinks_RunRuleLink getRun() const;
    void setRun(const OAILinks_RunRuleLink &run);
    bool is_run_Set() const;
    bool is_run_Valid() const;

    OAILinks_GetRuleLink getSelf() const;
    void setSelf(const OAILinks_GetRuleLink &self);
    bool is_self_Set() const;
    bool is_self_Valid() const;

    OAILinks_UpdateRuleLink getUpdate() const;
    void setUpdate(const OAILinks_UpdateRuleLink &update);
    bool is_update_Set() const;
    bool is_update_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAILinks_DeleteRuleLink m_r_delete;
    bool m_r_delete_isSet;
    bool m_r_delete_isValid;

    OAILinks_DisableRuleLink m_disable;
    bool m_disable_isSet;
    bool m_disable_isValid;

    OAILinks_EnableRuleLink m_enable;
    bool m_enable_isSet;
    bool m_enable_isValid;

    OAILinks_MoveDownRuleLink m_movedown;
    bool m_movedown_isSet;
    bool m_movedown_isValid;

    OAILinks_MoveUpRuleLink m_moveup;
    bool m_moveup_isSet;
    bool m_moveup_isValid;

    OAILinks_GetReportFilterLink m_report_filter;
    bool m_report_filter_isSet;
    bool m_report_filter_isValid;

    OAILinks_RunRuleLink m_run;
    bool m_run_isSet;
    bool m_run_isValid;

    OAILinks_GetRuleLink m_self;
    bool m_self_isSet;
    bool m_self_isValid;

    OAILinks_UpdateRuleLink m_update;
    bool m_update_isSet;
    bool m_update_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRuleLinks)

#endif // OAIRuleLinks_H
