/**
 * ISBNdb API
 * Definition of ISBNdb.com API
 *
 * The version of the OpenAPI document: 1.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAuthor.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAuthor::OAIAuthor(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAuthor::OAIAuthor() {
    this->initializeModel();
}

OAIAuthor::~OAIAuthor() {}

void OAIAuthor::initializeModel() {

    m_author_isSet = false;
    m_author_isValid = false;

    m_books_isSet = false;
    m_books_isValid = false;
}

void OAIAuthor::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAuthor::fromJsonObject(QJsonObject json) {

    m_author_isValid = ::OpenAPI::fromJsonValue(m_author, json[QString("author")]);
    m_author_isSet = !json[QString("author")].isNull() && m_author_isValid;

    m_books_isValid = ::OpenAPI::fromJsonValue(m_books, json[QString("books")]);
    m_books_isSet = !json[QString("books")].isNull() && m_books_isValid;
}

QString OAIAuthor::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAuthor::asJsonObject() const {
    QJsonObject obj;
    if (m_author_isSet) {
        obj.insert(QString("author"), ::OpenAPI::toJsonValue(m_author));
    }
    if (m_books.size() > 0) {
        obj.insert(QString("books"), ::OpenAPI::toJsonValue(m_books));
    }
    return obj;
}

QString OAIAuthor::getAuthor() const {
    return m_author;
}
void OAIAuthor::setAuthor(const QString &author) {
    m_author = author;
    m_author_isSet = true;
}

bool OAIAuthor::is_author_Set() const{
    return m_author_isSet;
}

bool OAIAuthor::is_author_Valid() const{
    return m_author_isValid;
}

QList<OAIBook> OAIAuthor::getBooks() const {
    return m_books;
}
void OAIAuthor::setBooks(const QList<OAIBook> &books) {
    m_books = books;
    m_books_isSet = true;
}

bool OAIAuthor::is_books_Set() const{
    return m_books_isSet;
}

bool OAIAuthor::is_books_Valid() const{
    return m_books_isValid;
}

bool OAIAuthor::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_author_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_books.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAuthor::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
