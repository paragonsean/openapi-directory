/**
 * ISBNdb API
 * Definition of ISBNdb.com API
 *
 * The version of the OpenAPI document: 1.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAuthorQueryResults.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAuthorQueryResults::OAIAuthorQueryResults(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAuthorQueryResults::OAIAuthorQueryResults() {
    this->initializeModel();
}

OAIAuthorQueryResults::~OAIAuthorQueryResults() {}

void OAIAuthorQueryResults::initializeModel() {

    m_authors_isSet = false;
    m_authors_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;
}

void OAIAuthorQueryResults::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAuthorQueryResults::fromJsonObject(QJsonObject json) {

    m_authors_isValid = ::OpenAPI::fromJsonValue(m_authors, json[QString("authors")]);
    m_authors_isSet = !json[QString("authors")].isNull() && m_authors_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;
}

QString OAIAuthorQueryResults::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAuthorQueryResults::asJsonObject() const {
    QJsonObject obj;
    if (m_authors.size() > 0) {
        obj.insert(QString("authors"), ::OpenAPI::toJsonValue(m_authors));
    }
    if (m_total_isSet) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(m_total));
    }
    return obj;
}

QList<QString> OAIAuthorQueryResults::getAuthors() const {
    return m_authors;
}
void OAIAuthorQueryResults::setAuthors(const QList<QString> &authors) {
    m_authors = authors;
    m_authors_isSet = true;
}

bool OAIAuthorQueryResults::is_authors_Set() const{
    return m_authors_isSet;
}

bool OAIAuthorQueryResults::is_authors_Valid() const{
    return m_authors_isValid;
}

qint32 OAIAuthorQueryResults::getTotal() const {
    return m_total;
}
void OAIAuthorQueryResults::setTotal(const qint32 &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAIAuthorQueryResults::is_total_Set() const{
    return m_total_isSet;
}

bool OAIAuthorQueryResults::is_total_Valid() const{
    return m_total_isValid;
}

bool OAIAuthorQueryResults::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_authors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAuthorQueryResults::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
