# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.book import Book
from openapi_server import util


class Author(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author: str=None, books: List[Book]=None):
        """Author - a model defined in OpenAPI

        :param author: The author of this Author.
        :param books: The books of this Author.
        """
        self.openapi_types = {
            'author': str,
            'books': List[Book]
        }

        self.attribute_map = {
            'author': 'author',
            'books': 'books'
        }

        self._author = author
        self._books = books

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Author':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Author of this Author.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author(self):
        """Gets the author of this Author.


        :return: The author of this Author.
        :rtype: str
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this Author.


        :param author: The author of this Author.
        :type author: str
        """

        self._author = author

    @property
    def books(self):
        """Gets the books of this Author.


        :return: The books of this Author.
        :rtype: List[Book]
        """
        return self._books

    @books.setter
    def books(self, books):
        """Sets the books of this Author.


        :param books: The books of this Author.
        :type books: List[Book]
        """

        self._books = books
