/**
 * ISBNdb API
 * Definition of ISBNdb.com API
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.IsbNdbApi);
  }
}(this, function(expect, IsbNdbApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new IsbNdbApi.Book();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Book', function() {
    it('should create an instance of Book', function() {
      // uncomment below and update the code to test Book
      //var instance = new IsbNdbApi.Book();
      //expect(instance).to.be.a(IsbNdbApi.Book);
    });

    it('should have the property authors (base name: "authors")', function() {
      // uncomment below and update the code to test the property authors
      //var instance = new IsbNdbApi.Book();
      //expect(instance).to.be();
    });

    it('should have the property datePublished (base name: "date_published")', function() {
      // uncomment below and update the code to test the property datePublished
      //var instance = new IsbNdbApi.Book();
      //expect(instance).to.be();
    });

    it('should have the property deweyDecimal (base name: "dewey_decimal")', function() {
      // uncomment below and update the code to test the property deweyDecimal
      //var instance = new IsbNdbApi.Book();
      //expect(instance).to.be();
    });

    it('should have the property dimensions (base name: "dimensions")', function() {
      // uncomment below and update the code to test the property dimensions
      //var instance = new IsbNdbApi.Book();
      //expect(instance).to.be();
    });

    it('should have the property edition (base name: "edition")', function() {
      // uncomment below and update the code to test the property edition
      //var instance = new IsbNdbApi.Book();
      //expect(instance).to.be();
    });

    it('should have the property excerpt (base name: "excerpt")', function() {
      // uncomment below and update the code to test the property excerpt
      //var instance = new IsbNdbApi.Book();
      //expect(instance).to.be();
    });

    it('should have the property format (base name: "format")', function() {
      // uncomment below and update the code to test the property format
      //var instance = new IsbNdbApi.Book();
      //expect(instance).to.be();
    });

    it('should have the property isbn (base name: "isbn")', function() {
      // uncomment below and update the code to test the property isbn
      //var instance = new IsbNdbApi.Book();
      //expect(instance).to.be();
    });

    it('should have the property isbn13 (base name: "isbn13")', function() {
      // uncomment below and update the code to test the property isbn13
      //var instance = new IsbNdbApi.Book();
      //expect(instance).to.be();
    });

    it('should have the property language (base name: "language")', function() {
      // uncomment below and update the code to test the property language
      //var instance = new IsbNdbApi.Book();
      //expect(instance).to.be();
    });

    it('should have the property overview (base name: "overview")', function() {
      // uncomment below and update the code to test the property overview
      //var instance = new IsbNdbApi.Book();
      //expect(instance).to.be();
    });

    it('should have the property pages (base name: "pages")', function() {
      // uncomment below and update the code to test the property pages
      //var instance = new IsbNdbApi.Book();
      //expect(instance).to.be();
    });

    it('should have the property publisher (base name: "publisher")', function() {
      // uncomment below and update the code to test the property publisher
      //var instance = new IsbNdbApi.Book();
      //expect(instance).to.be();
    });

    it('should have the property reviews (base name: "reviews")', function() {
      // uncomment below and update the code to test the property reviews
      //var instance = new IsbNdbApi.Book();
      //expect(instance).to.be();
    });

    it('should have the property subjects (base name: "subjects")', function() {
      // uncomment below and update the code to test the property subjects
      //var instance = new IsbNdbApi.Book();
      //expect(instance).to.be();
    });

    it('should have the property synopsys (base name: "synopsys")', function() {
      // uncomment below and update the code to test the property synopsys
      //var instance = new IsbNdbApi.Book();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new IsbNdbApi.Book();
      //expect(instance).to.be();
    });

    it('should have the property titleLong (base name: "title_long")', function() {
      // uncomment below and update the code to test the property titleLong
      //var instance = new IsbNdbApi.Book();
      //expect(instance).to.be();
    });

  });

}));
