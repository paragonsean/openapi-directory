/**
 * ISBNdb API
 * Definition of ISBNdb.com API
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Author from './model/Author';
import AuthorQueryResults from './model/AuthorQueryResults';
import Book from './model/Book';
import Publisher from './model/Publisher';
import PublisherBooksInner from './model/PublisherBooksInner';
import Subject from './model/Subject';
import AuthorApi from './api/AuthorApi';
import BookApi from './api/BookApi';
import PublisherApi from './api/PublisherApi';
import SearchApi from './api/SearchApi';
import StatsApi from './api/StatsApi';
import SubjectApi from './api/SubjectApi';


/**
* Definition of ISBNdb.com API.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var IsbNdbApi = require('index'); // See note below*.
* var xxxSvc = new IsbNdbApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new IsbNdbApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new IsbNdbApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new IsbNdbApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Author model constructor.
     * @property {module:model/Author}
     */
    Author,

    /**
     * The AuthorQueryResults model constructor.
     * @property {module:model/AuthorQueryResults}
     */
    AuthorQueryResults,

    /**
     * The Book model constructor.
     * @property {module:model/Book}
     */
    Book,

    /**
     * The Publisher model constructor.
     * @property {module:model/Publisher}
     */
    Publisher,

    /**
     * The PublisherBooksInner model constructor.
     * @property {module:model/PublisherBooksInner}
     */
    PublisherBooksInner,

    /**
     * The Subject model constructor.
     * @property {module:model/Subject}
     */
    Subject,

    /**
    * The AuthorApi service constructor.
    * @property {module:api/AuthorApi}
    */
    AuthorApi,

    /**
    * The BookApi service constructor.
    * @property {module:api/BookApi}
    */
    BookApi,

    /**
    * The PublisherApi service constructor.
    * @property {module:api/PublisherApi}
    */
    PublisherApi,

    /**
    * The SearchApi service constructor.
    * @property {module:api/SearchApi}
    */
    SearchApi,

    /**
    * The StatsApi service constructor.
    * @property {module:api/StatsApi}
    */
    StatsApi,

    /**
    * The SubjectApi service constructor.
    * @property {module:api/SubjectApi}
    */
    SubjectApi
};
