/**
 * ISBNdb API
 * Definition of ISBNdb.com API
 *
 * The version of the OpenAPI document: 1.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Book model module.
 * @module model/Book
 * @version 1.0.1
 */
class Book {
    /**
     * Constructs a new <code>Book</code>.
     * Describes a book in the book&#39;s database
     * @alias module:model/Book
     */
    constructor() { 
        
        Book.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Book</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Book} obj Optional instance to populate.
     * @return {module:model/Book} The populated <code>Book</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Book();

            if (data.hasOwnProperty('authors')) {
                obj['authors'] = ApiClient.convertToType(data['authors'], ['String']);
            }
            if (data.hasOwnProperty('date_published')) {
                obj['date_published'] = ApiClient.convertToType(data['date_published'], 'Date');
            }
            if (data.hasOwnProperty('dewey_decimal')) {
                obj['dewey_decimal'] = ApiClient.convertToType(data['dewey_decimal'], 'String');
            }
            if (data.hasOwnProperty('dimensions')) {
                obj['dimensions'] = ApiClient.convertToType(data['dimensions'], 'String');
            }
            if (data.hasOwnProperty('edition')) {
                obj['edition'] = ApiClient.convertToType(data['edition'], 'String');
            }
            if (data.hasOwnProperty('excerpt')) {
                obj['excerpt'] = ApiClient.convertToType(data['excerpt'], 'String');
            }
            if (data.hasOwnProperty('format')) {
                obj['format'] = ApiClient.convertToType(data['format'], 'String');
            }
            if (data.hasOwnProperty('isbn')) {
                obj['isbn'] = ApiClient.convertToType(data['isbn'], 'String');
            }
            if (data.hasOwnProperty('isbn13')) {
                obj['isbn13'] = ApiClient.convertToType(data['isbn13'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('overview')) {
                obj['overview'] = ApiClient.convertToType(data['overview'], 'String');
            }
            if (data.hasOwnProperty('pages')) {
                obj['pages'] = ApiClient.convertToType(data['pages'], 'Number');
            }
            if (data.hasOwnProperty('publisher')) {
                obj['publisher'] = ApiClient.convertToType(data['publisher'], 'String');
            }
            if (data.hasOwnProperty('reviews')) {
                obj['reviews'] = ApiClient.convertToType(data['reviews'], ['String']);
            }
            if (data.hasOwnProperty('subjects')) {
                obj['subjects'] = ApiClient.convertToType(data['subjects'], ['String']);
            }
            if (data.hasOwnProperty('synopsys')) {
                obj['synopsys'] = ApiClient.convertToType(data['synopsys'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
            if (data.hasOwnProperty('title_long')) {
                obj['title_long'] = ApiClient.convertToType(data['title_long'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Book</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Book</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['authors'])) {
            throw new Error("Expected the field `authors` to be an array in the JSON data but got " + data['authors']);
        }
        // ensure the json data is a string
        if (data['dewey_decimal'] && !(typeof data['dewey_decimal'] === 'string' || data['dewey_decimal'] instanceof String)) {
            throw new Error("Expected the field `dewey_decimal` to be a primitive type in the JSON string but got " + data['dewey_decimal']);
        }
        // ensure the json data is a string
        if (data['dimensions'] && !(typeof data['dimensions'] === 'string' || data['dimensions'] instanceof String)) {
            throw new Error("Expected the field `dimensions` to be a primitive type in the JSON string but got " + data['dimensions']);
        }
        // ensure the json data is a string
        if (data['edition'] && !(typeof data['edition'] === 'string' || data['edition'] instanceof String)) {
            throw new Error("Expected the field `edition` to be a primitive type in the JSON string but got " + data['edition']);
        }
        // ensure the json data is a string
        if (data['excerpt'] && !(typeof data['excerpt'] === 'string' || data['excerpt'] instanceof String)) {
            throw new Error("Expected the field `excerpt` to be a primitive type in the JSON string but got " + data['excerpt']);
        }
        // ensure the json data is a string
        if (data['format'] && !(typeof data['format'] === 'string' || data['format'] instanceof String)) {
            throw new Error("Expected the field `format` to be a primitive type in the JSON string but got " + data['format']);
        }
        // ensure the json data is a string
        if (data['isbn'] && !(typeof data['isbn'] === 'string' || data['isbn'] instanceof String)) {
            throw new Error("Expected the field `isbn` to be a primitive type in the JSON string but got " + data['isbn']);
        }
        // ensure the json data is a string
        if (data['isbn13'] && !(typeof data['isbn13'] === 'string' || data['isbn13'] instanceof String)) {
            throw new Error("Expected the field `isbn13` to be a primitive type in the JSON string but got " + data['isbn13']);
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }
        // ensure the json data is a string
        if (data['overview'] && !(typeof data['overview'] === 'string' || data['overview'] instanceof String)) {
            throw new Error("Expected the field `overview` to be a primitive type in the JSON string but got " + data['overview']);
        }
        // ensure the json data is a string
        if (data['publisher'] && !(typeof data['publisher'] === 'string' || data['publisher'] instanceof String)) {
            throw new Error("Expected the field `publisher` to be a primitive type in the JSON string but got " + data['publisher']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['reviews'])) {
            throw new Error("Expected the field `reviews` to be an array in the JSON data but got " + data['reviews']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['subjects'])) {
            throw new Error("Expected the field `subjects` to be an array in the JSON data but got " + data['subjects']);
        }
        // ensure the json data is a string
        if (data['synopsys'] && !(typeof data['synopsys'] === 'string' || data['synopsys'] instanceof String)) {
            throw new Error("Expected the field `synopsys` to be a primitive type in the JSON string but got " + data['synopsys']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }
        // ensure the json data is a string
        if (data['title_long'] && !(typeof data['title_long'] === 'string' || data['title_long'] instanceof String)) {
            throw new Error("Expected the field `title_long` to be a primitive type in the JSON string but got " + data['title_long']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} authors
 */
Book.prototype['authors'] = undefined;

/**
 * @member {Date} date_published
 */
Book.prototype['date_published'] = undefined;

/**
 * @member {String} dewey_decimal
 */
Book.prototype['dewey_decimal'] = undefined;

/**
 * @member {String} dimensions
 */
Book.prototype['dimensions'] = undefined;

/**
 * @member {String} edition
 */
Book.prototype['edition'] = undefined;

/**
 * @member {String} excerpt
 */
Book.prototype['excerpt'] = undefined;

/**
 * @member {String} format
 */
Book.prototype['format'] = undefined;

/**
 * @member {String} isbn
 */
Book.prototype['isbn'] = undefined;

/**
 * @member {String} isbn13
 */
Book.prototype['isbn13'] = undefined;

/**
 * @member {String} language
 */
Book.prototype['language'] = undefined;

/**
 * @member {String} overview
 */
Book.prototype['overview'] = undefined;

/**
 * @member {Number} pages
 */
Book.prototype['pages'] = undefined;

/**
 * @member {String} publisher
 */
Book.prototype['publisher'] = undefined;

/**
 * @member {Array.<String>} reviews
 */
Book.prototype['reviews'] = undefined;

/**
 * @member {Array.<String>} subjects
 */
Book.prototype['subjects'] = undefined;

/**
 * @member {String} synopsys
 */
Book.prototype['synopsys'] = undefined;

/**
 * @member {String} title
 */
Book.prototype['title'] = undefined;

/**
 * @member {String} title_long
 */
Book.prototype['title_long'] = undefined;






export default Book;

