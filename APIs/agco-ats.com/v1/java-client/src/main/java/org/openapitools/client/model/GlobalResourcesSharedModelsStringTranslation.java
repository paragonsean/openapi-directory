/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A translation of a string in a specific language
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:35.511967-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GlobalResourcesSharedModelsStringTranslation {
  public static final String SERIALIZED_NAME_AUTHOR_ID = "AuthorId";
  @SerializedName(SERIALIZED_NAME_AUTHOR_ID)
  private Integer authorId;

  public static final String SERIALIZED_NAME_LANGUAGE_ID = "LanguageId";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_ID)
  private Integer languageId;

  /**
   * The state of the translation
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    ORIGINAL("Original"),
    
    REQUESTED("Requested"),
    
    PROCESSING("Processing"),
    
    PROCESSED("Processed"),
    
    VALIDATED("Validated"),
    
    INVALIDATED("Invalidated"),
    
    REQUEST_PENDING("RequestPending"),
    
    CREATE_PENDING("CreatePending");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_STRING_ID = "StringId";
  @SerializedName(SERIALIZED_NAME_STRING_ID)
  private String stringId;

  public static final String SERIALIZED_NAME_STRING_VALUE = "StringValue";
  @SerializedName(SERIALIZED_NAME_STRING_VALUE)
  private String stringValue;

  public static final String SERIALIZED_NAME_TIMESTAMP = "Timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private byte[] timestamp;

  public GlobalResourcesSharedModelsStringTranslation() {
  }

  public GlobalResourcesSharedModelsStringTranslation authorId(Integer authorId) {
    this.authorId = authorId;
    return this;
  }

  /**
   * The id of the user to last edit thie translation
   * @return authorId
   */
  @javax.annotation.Nullable
  public Integer getAuthorId() {
    return authorId;
  }

  public void setAuthorId(Integer authorId) {
    this.authorId = authorId;
  }


  public GlobalResourcesSharedModelsStringTranslation languageId(Integer languageId) {
    this.languageId = languageId;
    return this;
  }

  /**
   * The id of the language of the translation
   * @return languageId
   */
  @javax.annotation.Nullable
  public Integer getLanguageId() {
    return languageId;
  }

  public void setLanguageId(Integer languageId) {
    this.languageId = languageId;
  }


  public GlobalResourcesSharedModelsStringTranslation state(StateEnum state) {
    this.state = state;
    return this;
  }

  /**
   * The state of the translation
   * @return state
   */
  @javax.annotation.Nullable
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }


  public GlobalResourcesSharedModelsStringTranslation stringId(String stringId) {
    this.stringId = stringId;
    return this;
  }

  /**
   * The id of the string that is translated
   * @return stringId
   */
  @javax.annotation.Nullable
  public String getStringId() {
    return stringId;
  }

  public void setStringId(String stringId) {
    this.stringId = stringId;
  }


  public GlobalResourcesSharedModelsStringTranslation stringValue(String stringValue) {
    this.stringValue = stringValue;
    return this;
  }

  /**
   * The translated string
   * @return stringValue
   */
  @javax.annotation.Nonnull
  public String getStringValue() {
    return stringValue;
  }

  public void setStringValue(String stringValue) {
    this.stringValue = stringValue;
  }


  public GlobalResourcesSharedModelsStringTranslation timestamp(byte[] timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * A value indicating the last modification of this translation. Read Only.
   * @return timestamp
   */
  @javax.annotation.Nullable
  public byte[] getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(byte[] timestamp) {
    this.timestamp = timestamp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlobalResourcesSharedModelsStringTranslation globalResourcesSharedModelsStringTranslation = (GlobalResourcesSharedModelsStringTranslation) o;
    return Objects.equals(this.authorId, globalResourcesSharedModelsStringTranslation.authorId) &&
        Objects.equals(this.languageId, globalResourcesSharedModelsStringTranslation.languageId) &&
        Objects.equals(this.state, globalResourcesSharedModelsStringTranslation.state) &&
        Objects.equals(this.stringId, globalResourcesSharedModelsStringTranslation.stringId) &&
        Objects.equals(this.stringValue, globalResourcesSharedModelsStringTranslation.stringValue) &&
        Arrays.equals(this.timestamp, globalResourcesSharedModelsStringTranslation.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorId, languageId, state, stringId, stringValue, Arrays.hashCode(timestamp));
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlobalResourcesSharedModelsStringTranslation {\n");
    sb.append("    authorId: ").append(toIndentedString(authorId)).append("\n");
    sb.append("    languageId: ").append(toIndentedString(languageId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    stringId: ").append(toIndentedString(stringId)).append("\n");
    sb.append("    stringValue: ").append(toIndentedString(stringValue)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AuthorId");
    openapiFields.add("LanguageId");
    openapiFields.add("State");
    openapiFields.add("StringId");
    openapiFields.add("StringValue");
    openapiFields.add("Timestamp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("StringValue");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GlobalResourcesSharedModelsStringTranslation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GlobalResourcesSharedModelsStringTranslation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GlobalResourcesSharedModelsStringTranslation is not found in the empty JSON string", GlobalResourcesSharedModelsStringTranslation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GlobalResourcesSharedModelsStringTranslation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GlobalResourcesSharedModelsStringTranslation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GlobalResourcesSharedModelsStringTranslation.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("State") != null && !jsonObj.get("State").isJsonNull()) && !jsonObj.get("State").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `State` to be a primitive type in the JSON string but got `%s`", jsonObj.get("State").toString()));
      }
      // validate the optional field `State`
      if (jsonObj.get("State") != null && !jsonObj.get("State").isJsonNull()) {
        StateEnum.validateJsonElement(jsonObj.get("State"));
      }
      if ((jsonObj.get("StringId") != null && !jsonObj.get("StringId").isJsonNull()) && !jsonObj.get("StringId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StringId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StringId").toString()));
      }
      if (!jsonObj.get("StringValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StringValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StringValue").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GlobalResourcesSharedModelsStringTranslation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GlobalResourcesSharedModelsStringTranslation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GlobalResourcesSharedModelsStringTranslation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GlobalResourcesSharedModelsStringTranslation.class));

       return (TypeAdapter<T>) new TypeAdapter<GlobalResourcesSharedModelsStringTranslation>() {
           @Override
           public void write(JsonWriter out, GlobalResourcesSharedModelsStringTranslation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GlobalResourcesSharedModelsStringTranslation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GlobalResourcesSharedModelsStringTranslation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GlobalResourcesSharedModelsStringTranslation
   * @throws IOException if the JSON string is invalid with respect to GlobalResourcesSharedModelsStringTranslation
   */
  public static GlobalResourcesSharedModelsStringTranslation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GlobalResourcesSharedModelsStringTranslation.class);
  }

  /**
   * Convert an instance of GlobalResourcesSharedModelsStringTranslation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

