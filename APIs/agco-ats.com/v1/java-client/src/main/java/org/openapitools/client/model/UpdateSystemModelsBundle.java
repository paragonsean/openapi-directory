/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateSystemModelsBundle
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:35.511967-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateSystemModelsBundle {
  public static final String SERIALIZED_NAME_ACTIVE = "Active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_BUNDLE_I_D = "BundleID";
  @SerializedName(SERIALIZED_NAME_BUNDLE_I_D)
  private String bundleID;

  public static final String SERIALIZED_NAME_BUNDLE_NUMBER = "BundleNumber";
  @SerializedName(SERIALIZED_NAME_BUNDLE_NUMBER)
  private Integer bundleNumber;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_UPDATE_GROUP_I_D = "UpdateGroupID";
  @SerializedName(SERIALIZED_NAME_UPDATE_GROUP_I_D)
  private String updateGroupID;

  public UpdateSystemModelsBundle() {
  }

  public UpdateSystemModelsBundle active(Boolean active) {
    this.active = active;
    return this;
  }

  /**
   * Default Value: false. During the creation of the Bundle, this field must be false.
   * @return active
   */
  @javax.annotation.Nullable
  public Boolean getActive() {
    return active;
  }

  public void setActive(Boolean active) {
    this.active = active;
  }


  public UpdateSystemModelsBundle bundleID(String bundleID) {
    this.bundleID = bundleID;
    return this;
  }

  /**
   * Read-Only.
   * @return bundleID
   */
  @javax.annotation.Nullable
  public String getBundleID() {
    return bundleID;
  }

  public void setBundleID(String bundleID) {
    this.bundleID = bundleID;
  }


  public UpdateSystemModelsBundle bundleNumber(Integer bundleNumber) {
    this.bundleNumber = bundleNumber;
    return this;
  }

  /**
   * The bundle number
   * @return bundleNumber
   */
  @javax.annotation.Nonnull
  public Integer getBundleNumber() {
    return bundleNumber;
  }

  public void setBundleNumber(Integer bundleNumber) {
    this.bundleNumber = bundleNumber;
  }


  public UpdateSystemModelsBundle description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The Bundle description.
   * @return description
   */
  @javax.annotation.Nonnull
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateSystemModelsBundle updateGroupID(String updateGroupID) {
    this.updateGroupID = updateGroupID;
    return this;
  }

  /**
   * The update group this bundle belongs to.
   * @return updateGroupID
   */
  @javax.annotation.Nonnull
  public String getUpdateGroupID() {
    return updateGroupID;
  }

  public void setUpdateGroupID(String updateGroupID) {
    this.updateGroupID = updateGroupID;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSystemModelsBundle updateSystemModelsBundle = (UpdateSystemModelsBundle) o;
    return Objects.equals(this.active, updateSystemModelsBundle.active) &&
        Objects.equals(this.bundleID, updateSystemModelsBundle.bundleID) &&
        Objects.equals(this.bundleNumber, updateSystemModelsBundle.bundleNumber) &&
        Objects.equals(this.description, updateSystemModelsBundle.description) &&
        Objects.equals(this.updateGroupID, updateSystemModelsBundle.updateGroupID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(active, bundleID, bundleNumber, description, updateGroupID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSystemModelsBundle {\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    bundleID: ").append(toIndentedString(bundleID)).append("\n");
    sb.append("    bundleNumber: ").append(toIndentedString(bundleNumber)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    updateGroupID: ").append(toIndentedString(updateGroupID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Active");
    openapiFields.add("BundleID");
    openapiFields.add("BundleNumber");
    openapiFields.add("Description");
    openapiFields.add("UpdateGroupID");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("BundleNumber");
    openapiRequiredFields.add("Description");
    openapiRequiredFields.add("UpdateGroupID");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateSystemModelsBundle
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateSystemModelsBundle.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateSystemModelsBundle is not found in the empty JSON string", UpdateSystemModelsBundle.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateSystemModelsBundle.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateSystemModelsBundle` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateSystemModelsBundle.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("BundleID") != null && !jsonObj.get("BundleID").isJsonNull()) && !jsonObj.get("BundleID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `BundleID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("BundleID").toString()));
      }
      if (!jsonObj.get("Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Description").toString()));
      }
      if (!jsonObj.get("UpdateGroupID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `UpdateGroupID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("UpdateGroupID").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateSystemModelsBundle.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateSystemModelsBundle' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateSystemModelsBundle> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateSystemModelsBundle.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateSystemModelsBundle>() {
           @Override
           public void write(JsonWriter out, UpdateSystemModelsBundle value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateSystemModelsBundle read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateSystemModelsBundle given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateSystemModelsBundle
   * @throws IOException if the JSON string is invalid with respect to UpdateSystemModelsBundle
   */
  public static UpdateSystemModelsBundle fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateSystemModelsBundle.class);
  }

  /**
   * Convert an instance of UpdateSystemModelsBundle to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

