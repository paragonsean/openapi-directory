/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateSystemModelsPackage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:35.511967-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateSystemModelsPackage {
  public static final String SERIALIZED_NAME_AUTORUN = "Autorun";
  @SerializedName(SERIALIZED_NAME_AUTORUN)
  private Boolean autorun;

  public static final String SERIALIZED_NAME_C_R_C = "CRC";
  @SerializedName(SERIALIZED_NAME_C_R_C)
  private String CRC;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_LOCALIZED_NAME = "LocalizedName";
  @SerializedName(SERIALIZED_NAME_LOCALIZED_NAME)
  private String localizedName;

  public static final String SERIALIZED_NAME_NOTES = "Notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_PACKAGE_I_D = "PackageID";
  @SerializedName(SERIALIZED_NAME_PACKAGE_I_D)
  private String packageID;

  public static final String SERIALIZED_NAME_PACKAGE_TYPE_I_D = "PackageTypeID";
  @SerializedName(SERIALIZED_NAME_PACKAGE_TYPE_I_D)
  private String packageTypeID;

  public static final String SERIALIZED_NAME_PREVIOUS_VERSION = "PreviousVersion";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_VERSION)
  private Integer previousVersion;

  public static final String SERIALIZED_NAME_RELEASE_DATE = "ReleaseDate";
  @SerializedName(SERIALIZED_NAME_RELEASE_DATE)
  private OffsetDateTime releaseDate;

  public static final String SERIALIZED_NAME_RELEASED = "Released";
  @SerializedName(SERIALIZED_NAME_RELEASED)
  private Boolean released;

  public static final String SERIALIZED_NAME_REMOVE_ON_SUCCESS = "RemoveOnSuccess";
  @SerializedName(SERIALIZED_NAME_REMOVE_ON_SUCCESS)
  private Boolean removeOnSuccess;

  public static final String SERIALIZED_NAME_SIZE = "Size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private Long size;

  public static final String SERIALIZED_NAME_SWITCHES = "Switches";
  @SerializedName(SERIALIZED_NAME_SWITCHES)
  private String switches;

  public static final String SERIALIZED_NAME_URL = "Url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_VERSION = "Version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public UpdateSystemModelsPackage() {
  }

  public UpdateSystemModelsPackage autorun(Boolean autorun) {
    this.autorun = autorun;
    return this;
  }

  /**
   * Value is true if package should run automatically. Default value is false.
   * @return autorun
   */
  @javax.annotation.Nullable
  public Boolean getAutorun() {
    return autorun;
  }

  public void setAutorun(Boolean autorun) {
    this.autorun = autorun;
  }


  public UpdateSystemModelsPackage CRC(String CRC) {
    this.CRC = CRC;
    return this;
  }

  /**
   * The CRC used to validate the download.
   * @return CRC
   */
  @javax.annotation.Nonnull
  public String getCRC() {
    return CRC;
  }

  public void setCRC(String CRC) {
    this.CRC = CRC;
  }


  public UpdateSystemModelsPackage description(String description) {
    this.description = description;
    return this;
  }

  /**
   * The package description
   * @return description
   */
  @javax.annotation.Nonnull
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateSystemModelsPackage localizedName(String localizedName) {
    this.localizedName = localizedName;
    return this;
  }

  /**
   * Optional. The StringID used to localize the name of the Package
   * @return localizedName
   */
  @javax.annotation.Nullable
  public String getLocalizedName() {
    return localizedName;
  }

  public void setLocalizedName(String localizedName) {
    this.localizedName = localizedName;
  }


  public UpdateSystemModelsPackage notes(String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * Notes about the package
   * @return notes
   */
  @javax.annotation.Nullable
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  public UpdateSystemModelsPackage packageID(String packageID) {
    this.packageID = packageID;
    return this;
  }

  /**
   * Read Only. The package ID
   * @return packageID
   */
  @javax.annotation.Nullable
  public String getPackageID() {
    return packageID;
  }

  public void setPackageID(String packageID) {
    this.packageID = packageID;
  }


  public UpdateSystemModelsPackage packageTypeID(String packageTypeID) {
    this.packageTypeID = packageTypeID;
    return this;
  }

  /**
   * The id of the package type this package belongs to.
   * @return packageTypeID
   */
  @javax.annotation.Nonnull
  public String getPackageTypeID() {
    return packageTypeID;
  }

  public void setPackageTypeID(String packageTypeID) {
    this.packageTypeID = packageTypeID;
  }


  public UpdateSystemModelsPackage previousVersion(Integer previousVersion) {
    this.previousVersion = previousVersion;
    return this;
  }

  /**
   * For delta packages, the previous version required.  For non-delta packages, the Previous version is 0.  Default value is 0.
   * minimum: 0
   * maximum: 2147483647
   * @return previousVersion
   */
  @javax.annotation.Nullable
  public Integer getPreviousVersion() {
    return previousVersion;
  }

  public void setPreviousVersion(Integer previousVersion) {
    this.previousVersion = previousVersion;
  }


  public UpdateSystemModelsPackage releaseDate(OffsetDateTime releaseDate) {
    this.releaseDate = releaseDate;
    return this;
  }

  /**
   * The date the package was released
   * @return releaseDate
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getReleaseDate() {
    return releaseDate;
  }

  public void setReleaseDate(OffsetDateTime releaseDate) {
    this.releaseDate = releaseDate;
  }


  public UpdateSystemModelsPackage released(Boolean released) {
    this.released = released;
    return this;
  }

  /**
   * True if the package is released.  Default value is False.
   * @return released
   */
  @javax.annotation.Nullable
  public Boolean getReleased() {
    return released;
  }

  public void setReleased(Boolean released) {
    this.released = released;
  }


  public UpdateSystemModelsPackage removeOnSuccess(Boolean removeOnSuccess) {
    this.removeOnSuccess = removeOnSuccess;
    return this;
  }

  /**
   * True to remove the package after successful execution.  Default value is False.
   * @return removeOnSuccess
   */
  @javax.annotation.Nullable
  public Boolean getRemoveOnSuccess() {
    return removeOnSuccess;
  }

  public void setRemoveOnSuccess(Boolean removeOnSuccess) {
    this.removeOnSuccess = removeOnSuccess;
  }


  public UpdateSystemModelsPackage size(Long size) {
    this.size = size;
    return this;
  }

  /**
   * The size of the file at the specified URL.  If a size is not supplied at creation time, the size will be determined by the response from the URL.              If the size provided does not match the size in the response from the URL an error will be returned.
   * @return size
   */
  @javax.annotation.Nullable
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }


  public UpdateSystemModelsPackage switches(String switches) {
    this.switches = switches;
    return this;
  }

  /**
   * The command line arguments for the package.  Default value is an empty string.
   * @return switches
   */
  @javax.annotation.Nullable
  public String getSwitches() {
    return switches;
  }

  public void setSwitches(String switches) {
    this.switches = switches;
  }


  public UpdateSystemModelsPackage url(String url) {
    this.url = url;
    return this;
  }

  /**
   * The Url to download the package from.
   * @return url
   */
  @javax.annotation.Nonnull
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public UpdateSystemModelsPackage version(Integer version) {
    this.version = version;
    return this;
  }

  /**
   * The version.
   * minimum: 1
   * maximum: 2147483647
   * @return version
   */
  @javax.annotation.Nonnull
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSystemModelsPackage updateSystemModelsPackage = (UpdateSystemModelsPackage) o;
    return Objects.equals(this.autorun, updateSystemModelsPackage.autorun) &&
        Objects.equals(this.CRC, updateSystemModelsPackage.CRC) &&
        Objects.equals(this.description, updateSystemModelsPackage.description) &&
        Objects.equals(this.localizedName, updateSystemModelsPackage.localizedName) &&
        Objects.equals(this.notes, updateSystemModelsPackage.notes) &&
        Objects.equals(this.packageID, updateSystemModelsPackage.packageID) &&
        Objects.equals(this.packageTypeID, updateSystemModelsPackage.packageTypeID) &&
        Objects.equals(this.previousVersion, updateSystemModelsPackage.previousVersion) &&
        Objects.equals(this.releaseDate, updateSystemModelsPackage.releaseDate) &&
        Objects.equals(this.released, updateSystemModelsPackage.released) &&
        Objects.equals(this.removeOnSuccess, updateSystemModelsPackage.removeOnSuccess) &&
        Objects.equals(this.size, updateSystemModelsPackage.size) &&
        Objects.equals(this.switches, updateSystemModelsPackage.switches) &&
        Objects.equals(this.url, updateSystemModelsPackage.url) &&
        Objects.equals(this.version, updateSystemModelsPackage.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autorun, CRC, description, localizedName, notes, packageID, packageTypeID, previousVersion, releaseDate, released, removeOnSuccess, size, switches, url, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSystemModelsPackage {\n");
    sb.append("    autorun: ").append(toIndentedString(autorun)).append("\n");
    sb.append("    CRC: ").append(toIndentedString(CRC)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    localizedName: ").append(toIndentedString(localizedName)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    packageID: ").append(toIndentedString(packageID)).append("\n");
    sb.append("    packageTypeID: ").append(toIndentedString(packageTypeID)).append("\n");
    sb.append("    previousVersion: ").append(toIndentedString(previousVersion)).append("\n");
    sb.append("    releaseDate: ").append(toIndentedString(releaseDate)).append("\n");
    sb.append("    released: ").append(toIndentedString(released)).append("\n");
    sb.append("    removeOnSuccess: ").append(toIndentedString(removeOnSuccess)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    switches: ").append(toIndentedString(switches)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Autorun");
    openapiFields.add("CRC");
    openapiFields.add("Description");
    openapiFields.add("LocalizedName");
    openapiFields.add("Notes");
    openapiFields.add("PackageID");
    openapiFields.add("PackageTypeID");
    openapiFields.add("PreviousVersion");
    openapiFields.add("ReleaseDate");
    openapiFields.add("Released");
    openapiFields.add("RemoveOnSuccess");
    openapiFields.add("Size");
    openapiFields.add("Switches");
    openapiFields.add("Url");
    openapiFields.add("Version");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("CRC");
    openapiRequiredFields.add("Description");
    openapiRequiredFields.add("PackageTypeID");
    openapiRequiredFields.add("ReleaseDate");
    openapiRequiredFields.add("Url");
    openapiRequiredFields.add("Version");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateSystemModelsPackage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateSystemModelsPackage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateSystemModelsPackage is not found in the empty JSON string", UpdateSystemModelsPackage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateSystemModelsPackage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateSystemModelsPackage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateSystemModelsPackage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("CRC").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CRC` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CRC").toString()));
      }
      if (!jsonObj.get("Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Description").toString()));
      }
      if ((jsonObj.get("LocalizedName") != null && !jsonObj.get("LocalizedName").isJsonNull()) && !jsonObj.get("LocalizedName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `LocalizedName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("LocalizedName").toString()));
      }
      if ((jsonObj.get("Notes") != null && !jsonObj.get("Notes").isJsonNull()) && !jsonObj.get("Notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Notes").toString()));
      }
      if ((jsonObj.get("PackageID") != null && !jsonObj.get("PackageID").isJsonNull()) && !jsonObj.get("PackageID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PackageID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PackageID").toString()));
      }
      if (!jsonObj.get("PackageTypeID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PackageTypeID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PackageTypeID").toString()));
      }
      if ((jsonObj.get("Switches") != null && !jsonObj.get("Switches").isJsonNull()) && !jsonObj.get("Switches").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Switches` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Switches").toString()));
      }
      if (!jsonObj.get("Url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateSystemModelsPackage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateSystemModelsPackage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateSystemModelsPackage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateSystemModelsPackage.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateSystemModelsPackage>() {
           @Override
           public void write(JsonWriter out, UpdateSystemModelsPackage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateSystemModelsPackage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateSystemModelsPackage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateSystemModelsPackage
   * @throws IOException if the JSON string is invalid with respect to UpdateSystemModelsPackage
   */
  public static UpdateSystemModelsPackage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateSystemModelsPackage.class);
  }

  /**
   * Convert an instance of UpdateSystemModelsPackage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

