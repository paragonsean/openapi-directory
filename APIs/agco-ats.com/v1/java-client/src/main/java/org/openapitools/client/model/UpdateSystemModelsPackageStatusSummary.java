/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.UpdateSystemModelsPackageStatus;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateSystemModelsPackageStatusSummary
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:35.511967-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateSystemModelsPackageStatusSummary {
  public static final String SERIALIZED_NAME_AVERAGE_DOWNLOAD_TIME = "AverageDownloadTime";
  @SerializedName(SERIALIZED_NAME_AVERAGE_DOWNLOAD_TIME)
  private String averageDownloadTime;

  public static final String SERIALIZED_NAME_AVERAGE_INSTALL_TIME = "AverageInstallTime";
  @SerializedName(SERIALIZED_NAME_AVERAGE_INSTALL_TIME)
  private String averageInstallTime;

  public static final String SERIALIZED_NAME_DOWNLOADED = "Downloaded";
  @SerializedName(SERIALIZED_NAME_DOWNLOADED)
  private Long downloaded;

  public static final String SERIALIZED_NAME_ERROR = "Error";
  @SerializedName(SERIALIZED_NAME_ERROR)
  private Integer error;

  public static final String SERIALIZED_NAME_INSTALLED = "Installed";
  @SerializedName(SERIALIZED_NAME_INSTALLED)
  private Long installed;

  public static final String SERIALIZED_NAME_PACKAGE = "Package";
  @SerializedName(SERIALIZED_NAME_PACKAGE)
  private String _package;

  public static final String SERIALIZED_NAME_PACKAGE_I_D = "PackageID";
  @SerializedName(SERIALIZED_NAME_PACKAGE_I_D)
  private String packageID;

  public static final String SERIALIZED_NAME_PACKAGE_STATUS_ITEMS = "PackageStatusItems";
  @SerializedName(SERIALIZED_NAME_PACKAGE_STATUS_ITEMS)
  private List<UpdateSystemModelsPackageStatus> packageStatusItems = new ArrayList<>();

  public UpdateSystemModelsPackageStatusSummary() {
  }

  public UpdateSystemModelsPackageStatusSummary averageDownloadTime(String averageDownloadTime) {
    this.averageDownloadTime = averageDownloadTime;
    return this;
  }

  /**
   * The average time required to complete the download
   * @return averageDownloadTime
   */
  @javax.annotation.Nullable
  public String getAverageDownloadTime() {
    return averageDownloadTime;
  }

  public void setAverageDownloadTime(String averageDownloadTime) {
    this.averageDownloadTime = averageDownloadTime;
  }


  public UpdateSystemModelsPackageStatusSummary averageInstallTime(String averageInstallTime) {
    this.averageInstallTime = averageInstallTime;
    return this;
  }

  /**
   * The average time required to complete the install
   * @return averageInstallTime
   */
  @javax.annotation.Nullable
  public String getAverageInstallTime() {
    return averageInstallTime;
  }

  public void setAverageInstallTime(String averageInstallTime) {
    this.averageInstallTime = averageInstallTime;
  }


  public UpdateSystemModelsPackageStatusSummary downloaded(Long downloaded) {
    this.downloaded = downloaded;
    return this;
  }

  /**
   * The number of clients that have completed the download
   * @return downloaded
   */
  @javax.annotation.Nullable
  public Long getDownloaded() {
    return downloaded;
  }

  public void setDownloaded(Long downloaded) {
    this.downloaded = downloaded;
  }


  public UpdateSystemModelsPackageStatusSummary error(Integer error) {
    this.error = error;
    return this;
  }

  /**
   * The result of the install
   * @return error
   */
  @javax.annotation.Nullable
  public Integer getError() {
    return error;
  }

  public void setError(Integer error) {
    this.error = error;
  }


  public UpdateSystemModelsPackageStatusSummary installed(Long installed) {
    this.installed = installed;
    return this;
  }

  /**
   * The number of clients that have completed the install
   * @return installed
   */
  @javax.annotation.Nullable
  public Long getInstalled() {
    return installed;
  }

  public void setInstalled(Long installed) {
    this.installed = installed;
  }


  public UpdateSystemModelsPackageStatusSummary _package(String _package) {
    this._package = _package;
    return this;
  }

  /**
   * The name of the package
   * @return _package
   */
  @javax.annotation.Nullable
  public String getPackage() {
    return _package;
  }

  public void setPackage(String _package) {
    this._package = _package;
  }


  public UpdateSystemModelsPackageStatusSummary packageID(String packageID) {
    this.packageID = packageID;
    return this;
  }

  /**
   * The ID of the package
   * @return packageID
   */
  @javax.annotation.Nullable
  public String getPackageID() {
    return packageID;
  }

  public void setPackageID(String packageID) {
    this.packageID = packageID;
  }


  public UpdateSystemModelsPackageStatusSummary packageStatusItems(List<UpdateSystemModelsPackageStatus> packageStatusItems) {
    this.packageStatusItems = packageStatusItems;
    return this;
  }

  public UpdateSystemModelsPackageStatusSummary addPackageStatusItemsItem(UpdateSystemModelsPackageStatus packageStatusItemsItem) {
    if (this.packageStatusItems == null) {
      this.packageStatusItems = new ArrayList<>();
    }
    this.packageStatusItems.add(packageStatusItemsItem);
    return this;
  }

  /**
   * The individual package status items
   * @return packageStatusItems
   */
  @javax.annotation.Nullable
  public List<UpdateSystemModelsPackageStatus> getPackageStatusItems() {
    return packageStatusItems;
  }

  public void setPackageStatusItems(List<UpdateSystemModelsPackageStatus> packageStatusItems) {
    this.packageStatusItems = packageStatusItems;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSystemModelsPackageStatusSummary updateSystemModelsPackageStatusSummary = (UpdateSystemModelsPackageStatusSummary) o;
    return Objects.equals(this.averageDownloadTime, updateSystemModelsPackageStatusSummary.averageDownloadTime) &&
        Objects.equals(this.averageInstallTime, updateSystemModelsPackageStatusSummary.averageInstallTime) &&
        Objects.equals(this.downloaded, updateSystemModelsPackageStatusSummary.downloaded) &&
        Objects.equals(this.error, updateSystemModelsPackageStatusSummary.error) &&
        Objects.equals(this.installed, updateSystemModelsPackageStatusSummary.installed) &&
        Objects.equals(this._package, updateSystemModelsPackageStatusSummary._package) &&
        Objects.equals(this.packageID, updateSystemModelsPackageStatusSummary.packageID) &&
        Objects.equals(this.packageStatusItems, updateSystemModelsPackageStatusSummary.packageStatusItems);
  }

  @Override
  public int hashCode() {
    return Objects.hash(averageDownloadTime, averageInstallTime, downloaded, error, installed, _package, packageID, packageStatusItems);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSystemModelsPackageStatusSummary {\n");
    sb.append("    averageDownloadTime: ").append(toIndentedString(averageDownloadTime)).append("\n");
    sb.append("    averageInstallTime: ").append(toIndentedString(averageInstallTime)).append("\n");
    sb.append("    downloaded: ").append(toIndentedString(downloaded)).append("\n");
    sb.append("    error: ").append(toIndentedString(error)).append("\n");
    sb.append("    installed: ").append(toIndentedString(installed)).append("\n");
    sb.append("    _package: ").append(toIndentedString(_package)).append("\n");
    sb.append("    packageID: ").append(toIndentedString(packageID)).append("\n");
    sb.append("    packageStatusItems: ").append(toIndentedString(packageStatusItems)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AverageDownloadTime");
    openapiFields.add("AverageInstallTime");
    openapiFields.add("Downloaded");
    openapiFields.add("Error");
    openapiFields.add("Installed");
    openapiFields.add("Package");
    openapiFields.add("PackageID");
    openapiFields.add("PackageStatusItems");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateSystemModelsPackageStatusSummary
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateSystemModelsPackageStatusSummary.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateSystemModelsPackageStatusSummary is not found in the empty JSON string", UpdateSystemModelsPackageStatusSummary.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateSystemModelsPackageStatusSummary.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateSystemModelsPackageStatusSummary` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("AverageDownloadTime") != null && !jsonObj.get("AverageDownloadTime").isJsonNull()) && !jsonObj.get("AverageDownloadTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AverageDownloadTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AverageDownloadTime").toString()));
      }
      if ((jsonObj.get("AverageInstallTime") != null && !jsonObj.get("AverageInstallTime").isJsonNull()) && !jsonObj.get("AverageInstallTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AverageInstallTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AverageInstallTime").toString()));
      }
      if ((jsonObj.get("Package") != null && !jsonObj.get("Package").isJsonNull()) && !jsonObj.get("Package").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Package` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Package").toString()));
      }
      if ((jsonObj.get("PackageID") != null && !jsonObj.get("PackageID").isJsonNull()) && !jsonObj.get("PackageID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PackageID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PackageID").toString()));
      }
      if (jsonObj.get("PackageStatusItems") != null && !jsonObj.get("PackageStatusItems").isJsonNull()) {
        JsonArray jsonArraypackageStatusItems = jsonObj.getAsJsonArray("PackageStatusItems");
        if (jsonArraypackageStatusItems != null) {
          // ensure the json data is an array
          if (!jsonObj.get("PackageStatusItems").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `PackageStatusItems` to be an array in the JSON string but got `%s`", jsonObj.get("PackageStatusItems").toString()));
          }

          // validate the optional field `PackageStatusItems` (array)
          for (int i = 0; i < jsonArraypackageStatusItems.size(); i++) {
            UpdateSystemModelsPackageStatus.validateJsonElement(jsonArraypackageStatusItems.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateSystemModelsPackageStatusSummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateSystemModelsPackageStatusSummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateSystemModelsPackageStatusSummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateSystemModelsPackageStatusSummary.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateSystemModelsPackageStatusSummary>() {
           @Override
           public void write(JsonWriter out, UpdateSystemModelsPackageStatusSummary value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateSystemModelsPackageStatusSummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateSystemModelsPackageStatusSummary given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateSystemModelsPackageStatusSummary
   * @throws IOException if the JSON string is invalid with respect to UpdateSystemModelsPackageStatusSummary
   */
  public static UpdateSystemModelsPackageStatusSummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateSystemModelsPackageStatusSummary.class);
  }

  /**
   * Convert an instance of UpdateSystemModelsPackageStatusSummary to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

