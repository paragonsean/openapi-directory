/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.APIModelsApiError;
import org.openapitools.client.model.APIPagedResponseBuildSystemSharedDTOStep;
import org.openapitools.client.model.BuildSystemSharedDTOStep;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class StepsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public StepsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public StepsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for stepsGetStep
     * @param stepID The ID of the Step to get. (required)
     * @param isIncludeDeleted Does it include deleted step, or not (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stepsGetStepCall(Integer stepID, Boolean isIncludeDeleted, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v2/steps/{stepID}"
            .replace("{" + "stepID" + "}", localVarApiClient.escapeString(stepID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (isIncludeDeleted != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("isIncludeDeleted", isIncludeDeleted));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call stepsGetStepValidateBeforeCall(Integer stepID, Boolean isIncludeDeleted, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'stepID' is set
        if (stepID == null) {
            throw new ApiException("Missing the required parameter 'stepID' when calling stepsGetStep(Async)");
        }

        return stepsGetStepCall(stepID, isIncludeDeleted, _callback);

    }

    /**
     * Get a Step by ID
     * Gets a Step by ID. When successful, the response is the requested Step.              If unsuccessful, an appropriate ApiError is returned.  Steps.Read permission is required.
     * @param stepID The ID of the Step to get. (required)
     * @param isIncludeDeleted Does it include deleted step, or not (optional)
     * @return BuildSystemSharedDTOStep
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public BuildSystemSharedDTOStep stepsGetStep(Integer stepID, Boolean isIncludeDeleted) throws ApiException {
        ApiResponse<BuildSystemSharedDTOStep> localVarResp = stepsGetStepWithHttpInfo(stepID, isIncludeDeleted);
        return localVarResp.getData();
    }

    /**
     * Get a Step by ID
     * Gets a Step by ID. When successful, the response is the requested Step.              If unsuccessful, an appropriate ApiError is returned.  Steps.Read permission is required.
     * @param stepID The ID of the Step to get. (required)
     * @param isIncludeDeleted Does it include deleted step, or not (optional)
     * @return ApiResponse&lt;BuildSystemSharedDTOStep&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<BuildSystemSharedDTOStep> stepsGetStepWithHttpInfo(Integer stepID, Boolean isIncludeDeleted) throws ApiException {
        okhttp3.Call localVarCall = stepsGetStepValidateBeforeCall(stepID, isIncludeDeleted, null);
        Type localVarReturnType = new TypeToken<BuildSystemSharedDTOStep>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a Step by ID (asynchronously)
     * Gets a Step by ID. When successful, the response is the requested Step.              If unsuccessful, an appropriate ApiError is returned.  Steps.Read permission is required.
     * @param stepID The ID of the Step to get. (required)
     * @param isIncludeDeleted Does it include deleted step, or not (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stepsGetStepAsync(Integer stepID, Boolean isIncludeDeleted, final ApiCallback<BuildSystemSharedDTOStep> _callback) throws ApiException {

        okhttp3.Call localVarCall = stepsGetStepValidateBeforeCall(stepID, isIncludeDeleted, _callback);
        Type localVarReturnType = new TypeToken<BuildSystemSharedDTOStep>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for stepsGetSteps
     * @param limit Optional. The page limit.  If not specified, the default page limit is 10. (optional)
     * @param offset Optional. The page offset.  If not specified, the default page offset is 0. (optional)
     * @param includeDeleted Does it include deleted step, or not (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stepsGetStepsCall(Integer limit, Integer offset, Boolean includeDeleted, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v2/steps";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (includeDeleted != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeDeleted", includeDeleted));
        }

        final String[] localVarAccepts = {
            "application/json",
            "text/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call stepsGetStepsValidateBeforeCall(Integer limit, Integer offset, Boolean includeDeleted, final ApiCallback _callback) throws ApiException {
        return stepsGetStepsCall(limit, offset, includeDeleted, _callback);

    }

    /**
     * Get Steps
     * Gets a collection of Steps. When successful, the response is a PagedResponse of Steps.              If unsuccessful, an appropriate ApiError is returned.  Steps.Read permission is required.
     * @param limit Optional. The page limit.  If not specified, the default page limit is 10. (optional)
     * @param offset Optional. The page offset.  If not specified, the default page offset is 0. (optional)
     * @param includeDeleted Does it include deleted step, or not (optional)
     * @return APIPagedResponseBuildSystemSharedDTOStep
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public APIPagedResponseBuildSystemSharedDTOStep stepsGetSteps(Integer limit, Integer offset, Boolean includeDeleted) throws ApiException {
        ApiResponse<APIPagedResponseBuildSystemSharedDTOStep> localVarResp = stepsGetStepsWithHttpInfo(limit, offset, includeDeleted);
        return localVarResp.getData();
    }

    /**
     * Get Steps
     * Gets a collection of Steps. When successful, the response is a PagedResponse of Steps.              If unsuccessful, an appropriate ApiError is returned.  Steps.Read permission is required.
     * @param limit Optional. The page limit.  If not specified, the default page limit is 10. (optional)
     * @param offset Optional. The page offset.  If not specified, the default page offset is 0. (optional)
     * @param includeDeleted Does it include deleted step, or not (optional)
     * @return ApiResponse&lt;APIPagedResponseBuildSystemSharedDTOStep&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<APIPagedResponseBuildSystemSharedDTOStep> stepsGetStepsWithHttpInfo(Integer limit, Integer offset, Boolean includeDeleted) throws ApiException {
        okhttp3.Call localVarCall = stepsGetStepsValidateBeforeCall(limit, offset, includeDeleted, null);
        Type localVarReturnType = new TypeToken<APIPagedResponseBuildSystemSharedDTOStep>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Steps (asynchronously)
     * Gets a collection of Steps. When successful, the response is a PagedResponse of Steps.              If unsuccessful, an appropriate ApiError is returned.  Steps.Read permission is required.
     * @param limit Optional. The page limit.  If not specified, the default page limit is 10. (optional)
     * @param offset Optional. The page offset.  If not specified, the default page offset is 0. (optional)
     * @param includeDeleted Does it include deleted step, or not (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stepsGetStepsAsync(Integer limit, Integer offset, Boolean includeDeleted, final ApiCallback<APIPagedResponseBuildSystemSharedDTOStep> _callback) throws ApiException {

        okhttp3.Call localVarCall = stepsGetStepsValidateBeforeCall(limit, offset, includeDeleted, _callback);
        Type localVarReturnType = new TypeToken<APIPagedResponseBuildSystemSharedDTOStep>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for stepsPostStep
     * @param buildSystemSharedDTOStep The step to create (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stepsPostStepCall(BuildSystemSharedDTOStep buildSystemSharedDTOStep, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = buildSystemSharedDTOStep;

        // create path and map variables
        String localVarPath = "/api/v2/steps";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json",
            "application/x-www-form-urlencoded",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call stepsPostStepValidateBeforeCall(BuildSystemSharedDTOStep buildSystemSharedDTOStep, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'buildSystemSharedDTOStep' is set
        if (buildSystemSharedDTOStep == null) {
            throw new ApiException("Missing the required parameter 'buildSystemSharedDTOStep' when calling stepsPostStep(Async)");
        }

        return stepsPostStepCall(buildSystemSharedDTOStep, _callback);

    }

    /**
     * Create a Step
     * No Documentation Found.
     * @param buildSystemSharedDTOStep The step to create (required)
     * @return Integer
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public Integer stepsPostStep(BuildSystemSharedDTOStep buildSystemSharedDTOStep) throws ApiException {
        ApiResponse<Integer> localVarResp = stepsPostStepWithHttpInfo(buildSystemSharedDTOStep);
        return localVarResp.getData();
    }

    /**
     * Create a Step
     * No Documentation Found.
     * @param buildSystemSharedDTOStep The step to create (required)
     * @return ApiResponse&lt;Integer&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Integer> stepsPostStepWithHttpInfo(BuildSystemSharedDTOStep buildSystemSharedDTOStep) throws ApiException {
        okhttp3.Call localVarCall = stepsPostStepValidateBeforeCall(buildSystemSharedDTOStep, null);
        Type localVarReturnType = new TypeToken<Integer>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create a Step (asynchronously)
     * No Documentation Found.
     * @param buildSystemSharedDTOStep The step to create (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stepsPostStepAsync(BuildSystemSharedDTOStep buildSystemSharedDTOStep, final ApiCallback<Integer> _callback) throws ApiException {

        okhttp3.Call localVarCall = stepsPostStepValidateBeforeCall(buildSystemSharedDTOStep, _callback);
        Type localVarReturnType = new TypeToken<Integer>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for stepsPutStep
     * @param stepID The step ID of the step to update (required)
     * @param buildSystemSharedDTOStep The updated step (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stepsPutStepCall(Integer stepID, BuildSystemSharedDTOStep buildSystemSharedDTOStep, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = buildSystemSharedDTOStep;

        // create path and map variables
        String localVarPath = "/api/v2/steps/{stepID}"
            .replace("{" + "stepID" + "}", localVarApiClient.escapeString(stepID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json",
            "application/x-www-form-urlencoded",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call stepsPutStepValidateBeforeCall(Integer stepID, BuildSystemSharedDTOStep buildSystemSharedDTOStep, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'stepID' is set
        if (stepID == null) {
            throw new ApiException("Missing the required parameter 'stepID' when calling stepsPutStep(Async)");
        }

        // verify the required parameter 'buildSystemSharedDTOStep' is set
        if (buildSystemSharedDTOStep == null) {
            throw new ApiException("Missing the required parameter 'buildSystemSharedDTOStep' when calling stepsPutStep(Async)");
        }

        return stepsPutStepCall(stepID, buildSystemSharedDTOStep, _callback);

    }

    /**
     * Update a Step
     * No Documentation Found.
     * @param stepID The step ID of the step to update (required)
     * @param buildSystemSharedDTOStep The updated step (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public void stepsPutStep(Integer stepID, BuildSystemSharedDTOStep buildSystemSharedDTOStep) throws ApiException {
        stepsPutStepWithHttpInfo(stepID, buildSystemSharedDTOStep);
    }

    /**
     * Update a Step
     * No Documentation Found.
     * @param stepID The step ID of the step to update (required)
     * @param buildSystemSharedDTOStep The updated step (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> stepsPutStepWithHttpInfo(Integer stepID, BuildSystemSharedDTOStep buildSystemSharedDTOStep) throws ApiException {
        okhttp3.Call localVarCall = stepsPutStepValidateBeforeCall(stepID, buildSystemSharedDTOStep, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Update a Step (asynchronously)
     * No Documentation Found.
     * @param stepID The step ID of the step to update (required)
     * @param buildSystemSharedDTOStep The updated step (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stepsPutStepAsync(Integer stepID, BuildSystemSharedDTOStep buildSystemSharedDTOStep, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = stepsPutStepValidateBeforeCall(stepID, buildSystemSharedDTOStep, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
