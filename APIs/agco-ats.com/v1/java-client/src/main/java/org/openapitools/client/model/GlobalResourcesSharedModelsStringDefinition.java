/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GlobalResourcesSharedModelsStringTranslation;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * The definition of a string to be translated
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:35.511967-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GlobalResourcesSharedModelsStringDefinition {
  public static final String SERIALIZED_NAME_DESCRIPTION_FOR_TRANSLATOR = "DescriptionForTranslator";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_FOR_TRANSLATOR)
  private String descriptionForTranslator;

  public static final String SERIALIZED_NAME_DO_NOT_TRANSLATE = "DoNotTranslate";
  @SerializedName(SERIALIZED_NAME_DO_NOT_TRANSLATE)
  private Boolean doNotTranslate;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_PARAMETER_COUNT = "ParameterCount";
  @SerializedName(SERIALIZED_NAME_PARAMETER_COUNT)
  private Integer parameterCount;

  public static final String SERIALIZED_NAME_TIMESTAMP = "Timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private byte[] timestamp;

  public static final String SERIALIZED_NAME_TRANSLATIONS = "Translations";
  @SerializedName(SERIALIZED_NAME_TRANSLATIONS)
  private List<GlobalResourcesSharedModelsStringTranslation> translations = new ArrayList<>();

  public GlobalResourcesSharedModelsStringDefinition() {
  }

  public GlobalResourcesSharedModelsStringDefinition descriptionForTranslator(String descriptionForTranslator) {
    this.descriptionForTranslator = descriptionForTranslator;
    return this;
  }

  /**
   * The description of the string to be translated.
   * @return descriptionForTranslator
   */
  @javax.annotation.Nonnull
  public String getDescriptionForTranslator() {
    return descriptionForTranslator;
  }

  public void setDescriptionForTranslator(String descriptionForTranslator) {
    this.descriptionForTranslator = descriptionForTranslator;
  }


  public GlobalResourcesSharedModelsStringDefinition doNotTranslate(Boolean doNotTranslate) {
    this.doNotTranslate = doNotTranslate;
    return this;
  }

  /**
   * True if the string should not be translated. False by default.
   * @return doNotTranslate
   */
  @javax.annotation.Nullable
  public Boolean getDoNotTranslate() {
    return doNotTranslate;
  }

  public void setDoNotTranslate(Boolean doNotTranslate) {
    this.doNotTranslate = doNotTranslate;
  }


  public GlobalResourcesSharedModelsStringDefinition id(String id) {
    this.id = id;
    return this;
  }

  /**
   * The identifier for the string. Read Only.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public GlobalResourcesSharedModelsStringDefinition parameterCount(Integer parameterCount) {
    this.parameterCount = parameterCount;
    return this;
  }

  /**
   * The number of parameters expected for the string.
   * @return parameterCount
   */
  @javax.annotation.Nullable
  public Integer getParameterCount() {
    return parameterCount;
  }

  public void setParameterCount(Integer parameterCount) {
    this.parameterCount = parameterCount;
  }


  public GlobalResourcesSharedModelsStringDefinition timestamp(byte[] timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * A value indicating the last modification of this string. Read Only.
   * @return timestamp
   */
  @javax.annotation.Nullable
  public byte[] getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(byte[] timestamp) {
    this.timestamp = timestamp;
  }


  public GlobalResourcesSharedModelsStringDefinition translations(List<GlobalResourcesSharedModelsStringTranslation> translations) {
    this.translations = translations;
    return this;
  }

  public GlobalResourcesSharedModelsStringDefinition addTranslationsItem(GlobalResourcesSharedModelsStringTranslation translationsItem) {
    if (this.translations == null) {
      this.translations = new ArrayList<>();
    }
    this.translations.add(translationsItem);
    return this;
  }

  /**
   * Translations for the string.
   * @return translations
   */
  @javax.annotation.Nullable
  public List<GlobalResourcesSharedModelsStringTranslation> getTranslations() {
    return translations;
  }

  public void setTranslations(List<GlobalResourcesSharedModelsStringTranslation> translations) {
    this.translations = translations;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlobalResourcesSharedModelsStringDefinition globalResourcesSharedModelsStringDefinition = (GlobalResourcesSharedModelsStringDefinition) o;
    return Objects.equals(this.descriptionForTranslator, globalResourcesSharedModelsStringDefinition.descriptionForTranslator) &&
        Objects.equals(this.doNotTranslate, globalResourcesSharedModelsStringDefinition.doNotTranslate) &&
        Objects.equals(this.id, globalResourcesSharedModelsStringDefinition.id) &&
        Objects.equals(this.parameterCount, globalResourcesSharedModelsStringDefinition.parameterCount) &&
        Arrays.equals(this.timestamp, globalResourcesSharedModelsStringDefinition.timestamp) &&
        Objects.equals(this.translations, globalResourcesSharedModelsStringDefinition.translations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(descriptionForTranslator, doNotTranslate, id, parameterCount, Arrays.hashCode(timestamp), translations);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlobalResourcesSharedModelsStringDefinition {\n");
    sb.append("    descriptionForTranslator: ").append(toIndentedString(descriptionForTranslator)).append("\n");
    sb.append("    doNotTranslate: ").append(toIndentedString(doNotTranslate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    parameterCount: ").append(toIndentedString(parameterCount)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    translations: ").append(toIndentedString(translations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DescriptionForTranslator");
    openapiFields.add("DoNotTranslate");
    openapiFields.add("Id");
    openapiFields.add("ParameterCount");
    openapiFields.add("Timestamp");
    openapiFields.add("Translations");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("DescriptionForTranslator");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GlobalResourcesSharedModelsStringDefinition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GlobalResourcesSharedModelsStringDefinition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GlobalResourcesSharedModelsStringDefinition is not found in the empty JSON string", GlobalResourcesSharedModelsStringDefinition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GlobalResourcesSharedModelsStringDefinition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GlobalResourcesSharedModelsStringDefinition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GlobalResourcesSharedModelsStringDefinition.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("DescriptionForTranslator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DescriptionForTranslator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DescriptionForTranslator").toString()));
      }
      if ((jsonObj.get("Id") != null && !jsonObj.get("Id").isJsonNull()) && !jsonObj.get("Id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Id").toString()));
      }
      if (jsonObj.get("Translations") != null && !jsonObj.get("Translations").isJsonNull()) {
        JsonArray jsonArraytranslations = jsonObj.getAsJsonArray("Translations");
        if (jsonArraytranslations != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Translations").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Translations` to be an array in the JSON string but got `%s`", jsonObj.get("Translations").toString()));
          }

          // validate the optional field `Translations` (array)
          for (int i = 0; i < jsonArraytranslations.size(); i++) {
            GlobalResourcesSharedModelsStringTranslation.validateJsonElement(jsonArraytranslations.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GlobalResourcesSharedModelsStringDefinition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GlobalResourcesSharedModelsStringDefinition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GlobalResourcesSharedModelsStringDefinition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GlobalResourcesSharedModelsStringDefinition.class));

       return (TypeAdapter<T>) new TypeAdapter<GlobalResourcesSharedModelsStringDefinition>() {
           @Override
           public void write(JsonWriter out, GlobalResourcesSharedModelsStringDefinition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GlobalResourcesSharedModelsStringDefinition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GlobalResourcesSharedModelsStringDefinition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GlobalResourcesSharedModelsStringDefinition
   * @throws IOException if the JSON string is invalid with respect to GlobalResourcesSharedModelsStringDefinition
   */
  public static GlobalResourcesSharedModelsStringDefinition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GlobalResourcesSharedModelsStringDefinition.class);
  }

  /**
   * Convert an instance of GlobalResourcesSharedModelsStringDefinition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

