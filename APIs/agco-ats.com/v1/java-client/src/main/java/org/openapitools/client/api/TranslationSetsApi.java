/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.APIIPagedResponseGlobalResourcesSharedModelsTranslationSet;
import org.openapitools.client.model.APIIPagedResponseGlobalResourcesSharedModelsTranslationSetAttribute;
import org.openapitools.client.model.APIIPagedResponseGlobalResourcesSharedModelsTranslationSetSourceString;
import org.openapitools.client.model.APIIPagedResponseGlobalResourcesSharedModelsTranslationSetString;
import org.openapitools.client.model.APIModelsApiError;
import org.openapitools.client.model.GlobalResourcesSharedModelsTranslationSet;
import org.openapitools.client.model.GlobalResourcesSharedModelsTranslationSetAttribute;
import org.openapitools.client.model.GlobalResourcesSharedModelsTranslationSetStatistics;
import org.openapitools.client.model.GlobalResourcesSharedModelsTranslationSetString;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TranslationSetsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public TranslationSetsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public TranslationSetsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for translationSetsDeleteTranslationSetAttribute
     * @param ID  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsDeleteTranslationSetAttributeCall(Integer ID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v2/TranslationSetAttributes/{ID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call translationSetsDeleteTranslationSetAttributeValidateBeforeCall(Integer ID, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling translationSetsDeleteTranslationSetAttribute(Async)");
        }

        return translationSetsDeleteTranslationSetAttributeCall(ID, _callback);

    }

    /**
     * Delete a set of TranslationSetAttribute object
     * No Documentation Found.
     * @param ID  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public void translationSetsDeleteTranslationSetAttribute(Integer ID) throws ApiException {
        translationSetsDeleteTranslationSetAttributeWithHttpInfo(ID);
    }

    /**
     * Delete a set of TranslationSetAttribute object
     * No Documentation Found.
     * @param ID  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> translationSetsDeleteTranslationSetAttributeWithHttpInfo(Integer ID) throws ApiException {
        okhttp3.Call localVarCall = translationSetsDeleteTranslationSetAttributeValidateBeforeCall(ID, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Delete a set of TranslationSetAttribute object (asynchronously)
     * No Documentation Found.
     * @param ID  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsDeleteTranslationSetAttributeAsync(Integer ID, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = translationSetsDeleteTranslationSetAttributeValidateBeforeCall(ID, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for translationSetsGetSourceStrings
     * @param ID  (required)
     * @param limit  (optional)
     * @param offset  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsGetSourceStringsCall(Integer ID, Integer limit, Integer offset, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v2/TranslationSets/{ID}/SourceStrings"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call translationSetsGetSourceStringsValidateBeforeCall(Integer ID, Integer limit, Integer offset, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling translationSetsGetSourceStrings(Async)");
        }

        return translationSetsGetSourceStringsCall(ID, limit, offset, _callback);

    }

    /**
     * Gets the information needed to translate a string in a translation set
     * No Documentation Found.
     * @param ID  (required)
     * @param limit  (optional)
     * @param offset  (optional)
     * @return APIIPagedResponseGlobalResourcesSharedModelsTranslationSetSourceString
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public APIIPagedResponseGlobalResourcesSharedModelsTranslationSetSourceString translationSetsGetSourceStrings(Integer ID, Integer limit, Integer offset) throws ApiException {
        ApiResponse<APIIPagedResponseGlobalResourcesSharedModelsTranslationSetSourceString> localVarResp = translationSetsGetSourceStringsWithHttpInfo(ID, limit, offset);
        return localVarResp.getData();
    }

    /**
     * Gets the information needed to translate a string in a translation set
     * No Documentation Found.
     * @param ID  (required)
     * @param limit  (optional)
     * @param offset  (optional)
     * @return ApiResponse&lt;APIIPagedResponseGlobalResourcesSharedModelsTranslationSetSourceString&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<APIIPagedResponseGlobalResourcesSharedModelsTranslationSetSourceString> translationSetsGetSourceStringsWithHttpInfo(Integer ID, Integer limit, Integer offset) throws ApiException {
        okhttp3.Call localVarCall = translationSetsGetSourceStringsValidateBeforeCall(ID, limit, offset, null);
        Type localVarReturnType = new TypeToken<APIIPagedResponseGlobalResourcesSharedModelsTranslationSetSourceString>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Gets the information needed to translate a string in a translation set (asynchronously)
     * No Documentation Found.
     * @param ID  (required)
     * @param limit  (optional)
     * @param offset  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsGetSourceStringsAsync(Integer ID, Integer limit, Integer offset, final ApiCallback<APIIPagedResponseGlobalResourcesSharedModelsTranslationSetSourceString> _callback) throws ApiException {

        okhttp3.Call localVarCall = translationSetsGetSourceStringsValidateBeforeCall(ID, limit, offset, _callback);
        Type localVarReturnType = new TypeToken<APIIPagedResponseGlobalResourcesSharedModelsTranslationSetSourceString>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for translationSetsGetStatistics
     * @param ID  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsGetStatisticsCall(Integer ID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v2/TranslationSets/{ID}/Statistics"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call translationSetsGetStatisticsValidateBeforeCall(Integer ID, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling translationSetsGetStatistics(Async)");
        }

        return translationSetsGetStatisticsCall(ID, _callback);

    }

    /**
     * Gets the statistics for translation sets such as the language ids and count of string definitions.
     * No Documentation Found.
     * @param ID  (required)
     * @return GlobalResourcesSharedModelsTranslationSetStatistics
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public GlobalResourcesSharedModelsTranslationSetStatistics translationSetsGetStatistics(Integer ID) throws ApiException {
        ApiResponse<GlobalResourcesSharedModelsTranslationSetStatistics> localVarResp = translationSetsGetStatisticsWithHttpInfo(ID);
        return localVarResp.getData();
    }

    /**
     * Gets the statistics for translation sets such as the language ids and count of string definitions.
     * No Documentation Found.
     * @param ID  (required)
     * @return ApiResponse&lt;GlobalResourcesSharedModelsTranslationSetStatistics&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GlobalResourcesSharedModelsTranslationSetStatistics> translationSetsGetStatisticsWithHttpInfo(Integer ID) throws ApiException {
        okhttp3.Call localVarCall = translationSetsGetStatisticsValidateBeforeCall(ID, null);
        Type localVarReturnType = new TypeToken<GlobalResourcesSharedModelsTranslationSetStatistics>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Gets the statistics for translation sets such as the language ids and count of string definitions. (asynchronously)
     * No Documentation Found.
     * @param ID  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsGetStatisticsAsync(Integer ID, final ApiCallback<GlobalResourcesSharedModelsTranslationSetStatistics> _callback) throws ApiException {

        okhttp3.Call localVarCall = translationSetsGetStatisticsValidateBeforeCall(ID, _callback);
        Type localVarReturnType = new TypeToken<GlobalResourcesSharedModelsTranslationSetStatistics>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for translationSetsGetTranslationSet
     * @param ID  (required)
     * @param includeAttributes Names of Attributes to include when retrieving this Translation set. This should be a comma-separated list. If not provided, Attributes are not included. If &#39;*&#39;, all Attributes are included. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsGetTranslationSetCall(Integer ID, String includeAttributes, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v2/TranslationSets/{ID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (includeAttributes != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeAttributes", includeAttributes));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call translationSetsGetTranslationSetValidateBeforeCall(Integer ID, String includeAttributes, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling translationSetsGetTranslationSet(Async)");
        }

        return translationSetsGetTranslationSetCall(ID, includeAttributes, _callback);

    }

    /**
     * Get a TranslationSet object by its id. Related TranslationSetStrings are NOT returned.
     * No Documentation Found.
     * @param ID  (required)
     * @param includeAttributes Names of Attributes to include when retrieving this Translation set. This should be a comma-separated list. If not provided, Attributes are not included. If &#39;*&#39;, all Attributes are included. (optional)
     * @return GlobalResourcesSharedModelsTranslationSet
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public GlobalResourcesSharedModelsTranslationSet translationSetsGetTranslationSet(Integer ID, String includeAttributes) throws ApiException {
        ApiResponse<GlobalResourcesSharedModelsTranslationSet> localVarResp = translationSetsGetTranslationSetWithHttpInfo(ID, includeAttributes);
        return localVarResp.getData();
    }

    /**
     * Get a TranslationSet object by its id. Related TranslationSetStrings are NOT returned.
     * No Documentation Found.
     * @param ID  (required)
     * @param includeAttributes Names of Attributes to include when retrieving this Translation set. This should be a comma-separated list. If not provided, Attributes are not included. If &#39;*&#39;, all Attributes are included. (optional)
     * @return ApiResponse&lt;GlobalResourcesSharedModelsTranslationSet&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GlobalResourcesSharedModelsTranslationSet> translationSetsGetTranslationSetWithHttpInfo(Integer ID, String includeAttributes) throws ApiException {
        okhttp3.Call localVarCall = translationSetsGetTranslationSetValidateBeforeCall(ID, includeAttributes, null);
        Type localVarReturnType = new TypeToken<GlobalResourcesSharedModelsTranslationSet>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a TranslationSet object by its id. Related TranslationSetStrings are NOT returned. (asynchronously)
     * No Documentation Found.
     * @param ID  (required)
     * @param includeAttributes Names of Attributes to include when retrieving this Translation set. This should be a comma-separated list. If not provided, Attributes are not included. If &#39;*&#39;, all Attributes are included. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsGetTranslationSetAsync(Integer ID, String includeAttributes, final ApiCallback<GlobalResourcesSharedModelsTranslationSet> _callback) throws ApiException {

        okhttp3.Call localVarCall = translationSetsGetTranslationSetValidateBeforeCall(ID, includeAttributes, _callback);
        Type localVarReturnType = new TypeToken<GlobalResourcesSharedModelsTranslationSet>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for translationSetsGetTranslationSetAttributes
     * @param ID  (required)
     * @param limit  (optional)
     * @param offset  (optional)
     * @param name  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsGetTranslationSetAttributesCall(Integer ID, Integer limit, Integer offset, String name, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v2/TranslationSets/{ID}/Attributes"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (name != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("name", name));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call translationSetsGetTranslationSetAttributesValidateBeforeCall(Integer ID, Integer limit, Integer offset, String name, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling translationSetsGetTranslationSetAttributes(Async)");
        }

        return translationSetsGetTranslationSetAttributesCall(ID, limit, offset, name, _callback);

    }

    /**
     * Get a PagedResponse of TranslationSetAttribute objects
     * No Documentation Found.
     * @param ID  (required)
     * @param limit  (optional)
     * @param offset  (optional)
     * @param name  (optional)
     * @return APIIPagedResponseGlobalResourcesSharedModelsTranslationSetAttribute
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public APIIPagedResponseGlobalResourcesSharedModelsTranslationSetAttribute translationSetsGetTranslationSetAttributes(Integer ID, Integer limit, Integer offset, String name) throws ApiException {
        ApiResponse<APIIPagedResponseGlobalResourcesSharedModelsTranslationSetAttribute> localVarResp = translationSetsGetTranslationSetAttributesWithHttpInfo(ID, limit, offset, name);
        return localVarResp.getData();
    }

    /**
     * Get a PagedResponse of TranslationSetAttribute objects
     * No Documentation Found.
     * @param ID  (required)
     * @param limit  (optional)
     * @param offset  (optional)
     * @param name  (optional)
     * @return ApiResponse&lt;APIIPagedResponseGlobalResourcesSharedModelsTranslationSetAttribute&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<APIIPagedResponseGlobalResourcesSharedModelsTranslationSetAttribute> translationSetsGetTranslationSetAttributesWithHttpInfo(Integer ID, Integer limit, Integer offset, String name) throws ApiException {
        okhttp3.Call localVarCall = translationSetsGetTranslationSetAttributesValidateBeforeCall(ID, limit, offset, name, null);
        Type localVarReturnType = new TypeToken<APIIPagedResponseGlobalResourcesSharedModelsTranslationSetAttribute>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a PagedResponse of TranslationSetAttribute objects (asynchronously)
     * No Documentation Found.
     * @param ID  (required)
     * @param limit  (optional)
     * @param offset  (optional)
     * @param name  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsGetTranslationSetAttributesAsync(Integer ID, Integer limit, Integer offset, String name, final ApiCallback<APIIPagedResponseGlobalResourcesSharedModelsTranslationSetAttribute> _callback) throws ApiException {

        okhttp3.Call localVarCall = translationSetsGetTranslationSetAttributesValidateBeforeCall(ID, limit, offset, name, _callback);
        Type localVarReturnType = new TypeToken<APIIPagedResponseGlobalResourcesSharedModelsTranslationSetAttribute>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for translationSetsGetTranslationSetStrings
     * @param ID  (required)
     * @param limit  (optional)
     * @param offset  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsGetTranslationSetStringsCall(Integer ID, Integer limit, Integer offset, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v2/TranslationSets/{ID}/Strings"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call translationSetsGetTranslationSetStringsValidateBeforeCall(Integer ID, Integer limit, Integer offset, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling translationSetsGetTranslationSetStrings(Async)");
        }

        return translationSetsGetTranslationSetStringsCall(ID, limit, offset, _callback);

    }

    /**
     * Get a PagedResponse of TranslationSetString objects
     * No Documentation Found.
     * @param ID  (required)
     * @param limit  (optional)
     * @param offset  (optional)
     * @return APIIPagedResponseGlobalResourcesSharedModelsTranslationSetString
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public APIIPagedResponseGlobalResourcesSharedModelsTranslationSetString translationSetsGetTranslationSetStrings(Integer ID, Integer limit, Integer offset) throws ApiException {
        ApiResponse<APIIPagedResponseGlobalResourcesSharedModelsTranslationSetString> localVarResp = translationSetsGetTranslationSetStringsWithHttpInfo(ID, limit, offset);
        return localVarResp.getData();
    }

    /**
     * Get a PagedResponse of TranslationSetString objects
     * No Documentation Found.
     * @param ID  (required)
     * @param limit  (optional)
     * @param offset  (optional)
     * @return ApiResponse&lt;APIIPagedResponseGlobalResourcesSharedModelsTranslationSetString&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<APIIPagedResponseGlobalResourcesSharedModelsTranslationSetString> translationSetsGetTranslationSetStringsWithHttpInfo(Integer ID, Integer limit, Integer offset) throws ApiException {
        okhttp3.Call localVarCall = translationSetsGetTranslationSetStringsValidateBeforeCall(ID, limit, offset, null);
        Type localVarReturnType = new TypeToken<APIIPagedResponseGlobalResourcesSharedModelsTranslationSetString>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a PagedResponse of TranslationSetString objects (asynchronously)
     * No Documentation Found.
     * @param ID  (required)
     * @param limit  (optional)
     * @param offset  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsGetTranslationSetStringsAsync(Integer ID, Integer limit, Integer offset, final ApiCallback<APIIPagedResponseGlobalResourcesSharedModelsTranslationSetString> _callback) throws ApiException {

        okhttp3.Call localVarCall = translationSetsGetTranslationSetStringsValidateBeforeCall(ID, limit, offset, _callback);
        Type localVarReturnType = new TypeToken<APIIPagedResponseGlobalResourcesSharedModelsTranslationSetString>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for translationSetsGetTranslationSets
     * @param limit  (optional)
     * @param offset  (optional)
     * @param translationRequestID  (optional)
     * @param state  (optional)
     * @param stringId  (optional)
     * @param languageId  (optional)
     * @param includeAttributes Names of Attributes to include when retrieving this submission. This should be a comma-separated list. If not provided, Attributes are not included. If &#39;*&#39;, all Attributes are included. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsGetTranslationSetsCall(Integer limit, Integer offset, Integer translationRequestID, String state, String stringId, Integer languageId, String includeAttributes, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v2/TranslationSets";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (translationRequestID != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("translationRequestID", translationRequestID));
        }

        if (state != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("state", state));
        }

        if (stringId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("stringId", stringId));
        }

        if (languageId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("languageId", languageId));
        }

        if (includeAttributes != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeAttributes", includeAttributes));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call translationSetsGetTranslationSetsValidateBeforeCall(Integer limit, Integer offset, Integer translationRequestID, String state, String stringId, Integer languageId, String includeAttributes, final ApiCallback _callback) throws ApiException {
        return translationSetsGetTranslationSetsCall(limit, offset, translationRequestID, state, stringId, languageId, includeAttributes, _callback);

    }

    /**
     * Get a PagedResponse of TranslationSet objects. Related TranslationSetStrings are NOT returned
     * No Documentation Found.
     * @param limit  (optional)
     * @param offset  (optional)
     * @param translationRequestID  (optional)
     * @param state  (optional)
     * @param stringId  (optional)
     * @param languageId  (optional)
     * @param includeAttributes Names of Attributes to include when retrieving this submission. This should be a comma-separated list. If not provided, Attributes are not included. If &#39;*&#39;, all Attributes are included. (optional)
     * @return APIIPagedResponseGlobalResourcesSharedModelsTranslationSet
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public APIIPagedResponseGlobalResourcesSharedModelsTranslationSet translationSetsGetTranslationSets(Integer limit, Integer offset, Integer translationRequestID, String state, String stringId, Integer languageId, String includeAttributes) throws ApiException {
        ApiResponse<APIIPagedResponseGlobalResourcesSharedModelsTranslationSet> localVarResp = translationSetsGetTranslationSetsWithHttpInfo(limit, offset, translationRequestID, state, stringId, languageId, includeAttributes);
        return localVarResp.getData();
    }

    /**
     * Get a PagedResponse of TranslationSet objects. Related TranslationSetStrings are NOT returned
     * No Documentation Found.
     * @param limit  (optional)
     * @param offset  (optional)
     * @param translationRequestID  (optional)
     * @param state  (optional)
     * @param stringId  (optional)
     * @param languageId  (optional)
     * @param includeAttributes Names of Attributes to include when retrieving this submission. This should be a comma-separated list. If not provided, Attributes are not included. If &#39;*&#39;, all Attributes are included. (optional)
     * @return ApiResponse&lt;APIIPagedResponseGlobalResourcesSharedModelsTranslationSet&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<APIIPagedResponseGlobalResourcesSharedModelsTranslationSet> translationSetsGetTranslationSetsWithHttpInfo(Integer limit, Integer offset, Integer translationRequestID, String state, String stringId, Integer languageId, String includeAttributes) throws ApiException {
        okhttp3.Call localVarCall = translationSetsGetTranslationSetsValidateBeforeCall(limit, offset, translationRequestID, state, stringId, languageId, includeAttributes, null);
        Type localVarReturnType = new TypeToken<APIIPagedResponseGlobalResourcesSharedModelsTranslationSet>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a PagedResponse of TranslationSet objects. Related TranslationSetStrings are NOT returned (asynchronously)
     * No Documentation Found.
     * @param limit  (optional)
     * @param offset  (optional)
     * @param translationRequestID  (optional)
     * @param state  (optional)
     * @param stringId  (optional)
     * @param languageId  (optional)
     * @param includeAttributes Names of Attributes to include when retrieving this submission. This should be a comma-separated list. If not provided, Attributes are not included. If &#39;*&#39;, all Attributes are included. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsGetTranslationSetsAsync(Integer limit, Integer offset, Integer translationRequestID, String state, String stringId, Integer languageId, String includeAttributes, final ApiCallback<APIIPagedResponseGlobalResourcesSharedModelsTranslationSet> _callback) throws ApiException {

        okhttp3.Call localVarCall = translationSetsGetTranslationSetsValidateBeforeCall(limit, offset, translationRequestID, state, stringId, languageId, includeAttributes, _callback);
        Type localVarReturnType = new TypeToken<APIIPagedResponseGlobalResourcesSharedModelsTranslationSet>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for translationSetsPostTranslationSetAttribute
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSetAttribute  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsPostTranslationSetAttributeCall(Integer ID, GlobalResourcesSharedModelsTranslationSetAttribute globalResourcesSharedModelsTranslationSetAttribute, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = globalResourcesSharedModelsTranslationSetAttribute;

        // create path and map variables
        String localVarPath = "/api/v2/TranslationSets/{ID}/Attributes"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json",
            "application/x-www-form-urlencoded",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call translationSetsPostTranslationSetAttributeValidateBeforeCall(Integer ID, GlobalResourcesSharedModelsTranslationSetAttribute globalResourcesSharedModelsTranslationSetAttribute, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling translationSetsPostTranslationSetAttribute(Async)");
        }

        // verify the required parameter 'globalResourcesSharedModelsTranslationSetAttribute' is set
        if (globalResourcesSharedModelsTranslationSetAttribute == null) {
            throw new ApiException("Missing the required parameter 'globalResourcesSharedModelsTranslationSetAttribute' when calling translationSetsPostTranslationSetAttribute(Async)");
        }

        return translationSetsPostTranslationSetAttributeCall(ID, globalResourcesSharedModelsTranslationSetAttribute, _callback);

    }

    /**
     * Create a TranslationSetAttribute object
     * No Documentation Found.
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSetAttribute  (required)
     * @return Integer
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public Integer translationSetsPostTranslationSetAttribute(Integer ID, GlobalResourcesSharedModelsTranslationSetAttribute globalResourcesSharedModelsTranslationSetAttribute) throws ApiException {
        ApiResponse<Integer> localVarResp = translationSetsPostTranslationSetAttributeWithHttpInfo(ID, globalResourcesSharedModelsTranslationSetAttribute);
        return localVarResp.getData();
    }

    /**
     * Create a TranslationSetAttribute object
     * No Documentation Found.
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSetAttribute  (required)
     * @return ApiResponse&lt;Integer&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Integer> translationSetsPostTranslationSetAttributeWithHttpInfo(Integer ID, GlobalResourcesSharedModelsTranslationSetAttribute globalResourcesSharedModelsTranslationSetAttribute) throws ApiException {
        okhttp3.Call localVarCall = translationSetsPostTranslationSetAttributeValidateBeforeCall(ID, globalResourcesSharedModelsTranslationSetAttribute, null);
        Type localVarReturnType = new TypeToken<Integer>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create a TranslationSetAttribute object (asynchronously)
     * No Documentation Found.
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSetAttribute  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsPostTranslationSetAttributeAsync(Integer ID, GlobalResourcesSharedModelsTranslationSetAttribute globalResourcesSharedModelsTranslationSetAttribute, final ApiCallback<Integer> _callback) throws ApiException {

        okhttp3.Call localVarCall = translationSetsPostTranslationSetAttributeValidateBeforeCall(ID, globalResourcesSharedModelsTranslationSetAttribute, _callback);
        Type localVarReturnType = new TypeToken<Integer>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for translationSetsPostTranslationSetAttributes
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSetAttribute  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsPostTranslationSetAttributesCall(Integer ID, List<GlobalResourcesSharedModelsTranslationSetAttribute> globalResourcesSharedModelsTranslationSetAttribute, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = globalResourcesSharedModelsTranslationSetAttribute;

        // create path and map variables
        String localVarPath = "/api/v2/TranslationSets/{ID}/Attributes/Batch"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json",
            "application/x-www-form-urlencoded",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call translationSetsPostTranslationSetAttributesValidateBeforeCall(Integer ID, List<GlobalResourcesSharedModelsTranslationSetAttribute> globalResourcesSharedModelsTranslationSetAttribute, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling translationSetsPostTranslationSetAttributes(Async)");
        }

        // verify the required parameter 'globalResourcesSharedModelsTranslationSetAttribute' is set
        if (globalResourcesSharedModelsTranslationSetAttribute == null) {
            throw new ApiException("Missing the required parameter 'globalResourcesSharedModelsTranslationSetAttribute' when calling translationSetsPostTranslationSetAttributes(Async)");
        }

        return translationSetsPostTranslationSetAttributesCall(ID, globalResourcesSharedModelsTranslationSetAttribute, _callback);

    }

    /**
     * No Documentation Found.
     * No Documentation Found.
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSetAttribute  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public void translationSetsPostTranslationSetAttributes(Integer ID, List<GlobalResourcesSharedModelsTranslationSetAttribute> globalResourcesSharedModelsTranslationSetAttribute) throws ApiException {
        translationSetsPostTranslationSetAttributesWithHttpInfo(ID, globalResourcesSharedModelsTranslationSetAttribute);
    }

    /**
     * No Documentation Found.
     * No Documentation Found.
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSetAttribute  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> translationSetsPostTranslationSetAttributesWithHttpInfo(Integer ID, List<GlobalResourcesSharedModelsTranslationSetAttribute> globalResourcesSharedModelsTranslationSetAttribute) throws ApiException {
        okhttp3.Call localVarCall = translationSetsPostTranslationSetAttributesValidateBeforeCall(ID, globalResourcesSharedModelsTranslationSetAttribute, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * No Documentation Found. (asynchronously)
     * No Documentation Found.
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSetAttribute  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsPostTranslationSetAttributesAsync(Integer ID, List<GlobalResourcesSharedModelsTranslationSetAttribute> globalResourcesSharedModelsTranslationSetAttribute, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = translationSetsPostTranslationSetAttributesValidateBeforeCall(ID, globalResourcesSharedModelsTranslationSetAttribute, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for translationSetsUpdateTranslationSet
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSet  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsUpdateTranslationSetCall(Integer ID, GlobalResourcesSharedModelsTranslationSet globalResourcesSharedModelsTranslationSet, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = globalResourcesSharedModelsTranslationSet;

        // create path and map variables
        String localVarPath = "/api/v2/TranslationSets/{ID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json",
            "application/x-www-form-urlencoded",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call translationSetsUpdateTranslationSetValidateBeforeCall(Integer ID, GlobalResourcesSharedModelsTranslationSet globalResourcesSharedModelsTranslationSet, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling translationSetsUpdateTranslationSet(Async)");
        }

        // verify the required parameter 'globalResourcesSharedModelsTranslationSet' is set
        if (globalResourcesSharedModelsTranslationSet == null) {
            throw new ApiException("Missing the required parameter 'globalResourcesSharedModelsTranslationSet' when calling translationSetsUpdateTranslationSet(Async)");
        }

        return translationSetsUpdateTranslationSetCall(ID, globalResourcesSharedModelsTranslationSet, _callback);

    }

    /**
     * Update a Translation Set. Accepts a TranslationSet object. Only the state property may be updated.
     * No Documentation Found.
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSet  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public void translationSetsUpdateTranslationSet(Integer ID, GlobalResourcesSharedModelsTranslationSet globalResourcesSharedModelsTranslationSet) throws ApiException {
        translationSetsUpdateTranslationSetWithHttpInfo(ID, globalResourcesSharedModelsTranslationSet);
    }

    /**
     * Update a Translation Set. Accepts a TranslationSet object. Only the state property may be updated.
     * No Documentation Found.
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSet  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> translationSetsUpdateTranslationSetWithHttpInfo(Integer ID, GlobalResourcesSharedModelsTranslationSet globalResourcesSharedModelsTranslationSet) throws ApiException {
        okhttp3.Call localVarCall = translationSetsUpdateTranslationSetValidateBeforeCall(ID, globalResourcesSharedModelsTranslationSet, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Update a Translation Set. Accepts a TranslationSet object. Only the state property may be updated. (asynchronously)
     * No Documentation Found.
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSet  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsUpdateTranslationSetAsync(Integer ID, GlobalResourcesSharedModelsTranslationSet globalResourcesSharedModelsTranslationSet, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = translationSetsUpdateTranslationSetValidateBeforeCall(ID, globalResourcesSharedModelsTranslationSet, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for translationSetsUpdateTranslationSetAttribute
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSetAttribute  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsUpdateTranslationSetAttributeCall(Integer ID, GlobalResourcesSharedModelsTranslationSetAttribute globalResourcesSharedModelsTranslationSetAttribute, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = globalResourcesSharedModelsTranslationSetAttribute;

        // create path and map variables
        String localVarPath = "/api/v2/TranslationSetAttributes/{ID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json",
            "application/x-www-form-urlencoded",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call translationSetsUpdateTranslationSetAttributeValidateBeforeCall(Integer ID, GlobalResourcesSharedModelsTranslationSetAttribute globalResourcesSharedModelsTranslationSetAttribute, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling translationSetsUpdateTranslationSetAttribute(Async)");
        }

        // verify the required parameter 'globalResourcesSharedModelsTranslationSetAttribute' is set
        if (globalResourcesSharedModelsTranslationSetAttribute == null) {
            throw new ApiException("Missing the required parameter 'globalResourcesSharedModelsTranslationSetAttribute' when calling translationSetsUpdateTranslationSetAttribute(Async)");
        }

        return translationSetsUpdateTranslationSetAttributeCall(ID, globalResourcesSharedModelsTranslationSetAttribute, _callback);

    }

    /**
     * Update a TranslationSetAttribute object
     * No Documentation Found.
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSetAttribute  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public void translationSetsUpdateTranslationSetAttribute(Integer ID, GlobalResourcesSharedModelsTranslationSetAttribute globalResourcesSharedModelsTranslationSetAttribute) throws ApiException {
        translationSetsUpdateTranslationSetAttributeWithHttpInfo(ID, globalResourcesSharedModelsTranslationSetAttribute);
    }

    /**
     * Update a TranslationSetAttribute object
     * No Documentation Found.
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSetAttribute  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> translationSetsUpdateTranslationSetAttributeWithHttpInfo(Integer ID, GlobalResourcesSharedModelsTranslationSetAttribute globalResourcesSharedModelsTranslationSetAttribute) throws ApiException {
        okhttp3.Call localVarCall = translationSetsUpdateTranslationSetAttributeValidateBeforeCall(ID, globalResourcesSharedModelsTranslationSetAttribute, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Update a TranslationSetAttribute object (asynchronously)
     * No Documentation Found.
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSetAttribute  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsUpdateTranslationSetAttributeAsync(Integer ID, GlobalResourcesSharedModelsTranslationSetAttribute globalResourcesSharedModelsTranslationSetAttribute, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = translationSetsUpdateTranslationSetAttributeValidateBeforeCall(ID, globalResourcesSharedModelsTranslationSetAttribute, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for translationSetsUpdateTranslationSetAttributes
     * @param globalResourcesSharedModelsTranslationSetAttribute  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsUpdateTranslationSetAttributesCall(List<GlobalResourcesSharedModelsTranslationSetAttribute> globalResourcesSharedModelsTranslationSetAttribute, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = globalResourcesSharedModelsTranslationSetAttribute;

        // create path and map variables
        String localVarPath = "/api/v2/TranslationSetAttributes/Batch";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json",
            "application/x-www-form-urlencoded",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call translationSetsUpdateTranslationSetAttributesValidateBeforeCall(List<GlobalResourcesSharedModelsTranslationSetAttribute> globalResourcesSharedModelsTranslationSetAttribute, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'globalResourcesSharedModelsTranslationSetAttribute' is set
        if (globalResourcesSharedModelsTranslationSetAttribute == null) {
            throw new ApiException("Missing the required parameter 'globalResourcesSharedModelsTranslationSetAttribute' when calling translationSetsUpdateTranslationSetAttributes(Async)");
        }

        return translationSetsUpdateTranslationSetAttributesCall(globalResourcesSharedModelsTranslationSetAttribute, _callback);

    }

    /**
     * No Documentation Found.
     * No Documentation Found.
     * @param globalResourcesSharedModelsTranslationSetAttribute  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public void translationSetsUpdateTranslationSetAttributes(List<GlobalResourcesSharedModelsTranslationSetAttribute> globalResourcesSharedModelsTranslationSetAttribute) throws ApiException {
        translationSetsUpdateTranslationSetAttributesWithHttpInfo(globalResourcesSharedModelsTranslationSetAttribute);
    }

    /**
     * No Documentation Found.
     * No Documentation Found.
     * @param globalResourcesSharedModelsTranslationSetAttribute  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> translationSetsUpdateTranslationSetAttributesWithHttpInfo(List<GlobalResourcesSharedModelsTranslationSetAttribute> globalResourcesSharedModelsTranslationSetAttribute) throws ApiException {
        okhttp3.Call localVarCall = translationSetsUpdateTranslationSetAttributesValidateBeforeCall(globalResourcesSharedModelsTranslationSetAttribute, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * No Documentation Found. (asynchronously)
     * No Documentation Found.
     * @param globalResourcesSharedModelsTranslationSetAttribute  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsUpdateTranslationSetAttributesAsync(List<GlobalResourcesSharedModelsTranslationSetAttribute> globalResourcesSharedModelsTranslationSetAttribute, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = translationSetsUpdateTranslationSetAttributesValidateBeforeCall(globalResourcesSharedModelsTranslationSetAttribute, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for translationSetsUpdateTranslationSetStrings
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSetString  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsUpdateTranslationSetStringsCall(Integer ID, List<GlobalResourcesSharedModelsTranslationSetString> globalResourcesSharedModelsTranslationSetString, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = globalResourcesSharedModelsTranslationSetString;

        // create path and map variables
        String localVarPath = "/api/v2/TranslationSets/{ID}/Strings"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json",
            "application/x-www-form-urlencoded",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call translationSetsUpdateTranslationSetStringsValidateBeforeCall(Integer ID, List<GlobalResourcesSharedModelsTranslationSetString> globalResourcesSharedModelsTranslationSetString, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling translationSetsUpdateTranslationSetStrings(Async)");
        }

        // verify the required parameter 'globalResourcesSharedModelsTranslationSetString' is set
        if (globalResourcesSharedModelsTranslationSetString == null) {
            throw new ApiException("Missing the required parameter 'globalResourcesSharedModelsTranslationSetString' when calling translationSetsUpdateTranslationSetStrings(Async)");
        }

        return translationSetsUpdateTranslationSetStringsCall(ID, globalResourcesSharedModelsTranslationSetString, _callback);

    }

    /**
     * No Documentation Found.
     * No Documentation Found.
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSetString  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public void translationSetsUpdateTranslationSetStrings(Integer ID, List<GlobalResourcesSharedModelsTranslationSetString> globalResourcesSharedModelsTranslationSetString) throws ApiException {
        translationSetsUpdateTranslationSetStringsWithHttpInfo(ID, globalResourcesSharedModelsTranslationSetString);
    }

    /**
     * No Documentation Found.
     * No Documentation Found.
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSetString  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> translationSetsUpdateTranslationSetStringsWithHttpInfo(Integer ID, List<GlobalResourcesSharedModelsTranslationSetString> globalResourcesSharedModelsTranslationSetString) throws ApiException {
        okhttp3.Call localVarCall = translationSetsUpdateTranslationSetStringsValidateBeforeCall(ID, globalResourcesSharedModelsTranslationSetString, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * No Documentation Found. (asynchronously)
     * No Documentation Found.
     * @param ID  (required)
     * @param globalResourcesSharedModelsTranslationSetString  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationSetsUpdateTranslationSetStringsAsync(Integer ID, List<GlobalResourcesSharedModelsTranslationSetString> globalResourcesSharedModelsTranslationSetString, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = translationSetsUpdateTranslationSetStringsValidateBeforeCall(ID, globalResourcesSharedModelsTranslationSetString, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
