/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.APIIPagedResponseGlobalResourcesSharedModelsStringTranslation;
import org.openapitools.client.model.APIModelsApiError;
import org.openapitools.client.model.GlobalResourcesSharedModelsStringTranslation;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class StringTranslationsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public StringTranslationsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public StringTranslationsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for stringTranslationsGetTranslation
     * @param stringId  (required)
     * @param languageId  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stringTranslationsGetTranslationCall(String stringId, Integer languageId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v2/StringTranslations/{stringId}/{languageId}"
            .replace("{" + "stringId" + "}", localVarApiClient.escapeString(stringId.toString()))
            .replace("{" + "languageId" + "}", localVarApiClient.escapeString(languageId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call stringTranslationsGetTranslationValidateBeforeCall(String stringId, Integer languageId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'stringId' is set
        if (stringId == null) {
            throw new ApiException("Missing the required parameter 'stringId' when calling stringTranslationsGetTranslation(Async)");
        }

        // verify the required parameter 'languageId' is set
        if (languageId == null) {
            throw new ApiException("Missing the required parameter 'languageId' when calling stringTranslationsGetTranslation(Async)");
        }

        return stringTranslationsGetTranslationCall(stringId, languageId, _callback);

    }

    /**
     * Get a single translation based upon stringId and languageId
     * No Documentation Found.
     * @param stringId  (required)
     * @param languageId  (required)
     * @return GlobalResourcesSharedModelsStringTranslation
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public GlobalResourcesSharedModelsStringTranslation stringTranslationsGetTranslation(String stringId, Integer languageId) throws ApiException {
        ApiResponse<GlobalResourcesSharedModelsStringTranslation> localVarResp = stringTranslationsGetTranslationWithHttpInfo(stringId, languageId);
        return localVarResp.getData();
    }

    /**
     * Get a single translation based upon stringId and languageId
     * No Documentation Found.
     * @param stringId  (required)
     * @param languageId  (required)
     * @return ApiResponse&lt;GlobalResourcesSharedModelsStringTranslation&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GlobalResourcesSharedModelsStringTranslation> stringTranslationsGetTranslationWithHttpInfo(String stringId, Integer languageId) throws ApiException {
        okhttp3.Call localVarCall = stringTranslationsGetTranslationValidateBeforeCall(stringId, languageId, null);
        Type localVarReturnType = new TypeToken<GlobalResourcesSharedModelsStringTranslation>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a single translation based upon stringId and languageId (asynchronously)
     * No Documentation Found.
     * @param stringId  (required)
     * @param languageId  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stringTranslationsGetTranslationAsync(String stringId, Integer languageId, final ApiCallback<GlobalResourcesSharedModelsStringTranslation> _callback) throws ApiException {

        okhttp3.Call localVarCall = stringTranslationsGetTranslationValidateBeforeCall(stringId, languageId, _callback);
        Type localVarReturnType = new TypeToken<GlobalResourcesSharedModelsStringTranslation>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for stringTranslationsGetTranslations
     * @param limit Optional. The page limit. The default page limit is 10. (optional)
     * @param modifiedAfterTimestamp Optional. Return only the StringDefinition objects that have a Timestamp value greater than that provided. This will be an encoded byte array. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stringTranslationsGetTranslationsCall(Integer limit, String modifiedAfterTimestamp, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v2/StringTranslations";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (modifiedAfterTimestamp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("modifiedAfterTimestamp", modifiedAfterTimestamp));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call stringTranslationsGetTranslationsValidateBeforeCall(Integer limit, String modifiedAfterTimestamp, final ApiCallback _callback) throws ApiException {
        return stringTranslationsGetTranslationsCall(limit, modifiedAfterTimestamp, _callback);

    }

    /**
     * Get a paged response of Global String Translations.
     * No Documentation Found.
     * @param limit Optional. The page limit. The default page limit is 10. (optional)
     * @param modifiedAfterTimestamp Optional. Return only the StringDefinition objects that have a Timestamp value greater than that provided. This will be an encoded byte array. (optional)
     * @return APIIPagedResponseGlobalResourcesSharedModelsStringTranslation
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public APIIPagedResponseGlobalResourcesSharedModelsStringTranslation stringTranslationsGetTranslations(Integer limit, String modifiedAfterTimestamp) throws ApiException {
        ApiResponse<APIIPagedResponseGlobalResourcesSharedModelsStringTranslation> localVarResp = stringTranslationsGetTranslationsWithHttpInfo(limit, modifiedAfterTimestamp);
        return localVarResp.getData();
    }

    /**
     * Get a paged response of Global String Translations.
     * No Documentation Found.
     * @param limit Optional. The page limit. The default page limit is 10. (optional)
     * @param modifiedAfterTimestamp Optional. Return only the StringDefinition objects that have a Timestamp value greater than that provided. This will be an encoded byte array. (optional)
     * @return ApiResponse&lt;APIIPagedResponseGlobalResourcesSharedModelsStringTranslation&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<APIIPagedResponseGlobalResourcesSharedModelsStringTranslation> stringTranslationsGetTranslationsWithHttpInfo(Integer limit, String modifiedAfterTimestamp) throws ApiException {
        okhttp3.Call localVarCall = stringTranslationsGetTranslationsValidateBeforeCall(limit, modifiedAfterTimestamp, null);
        Type localVarReturnType = new TypeToken<APIIPagedResponseGlobalResourcesSharedModelsStringTranslation>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a paged response of Global String Translations. (asynchronously)
     * No Documentation Found.
     * @param limit Optional. The page limit. The default page limit is 10. (optional)
     * @param modifiedAfterTimestamp Optional. Return only the StringDefinition objects that have a Timestamp value greater than that provided. This will be an encoded byte array. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stringTranslationsGetTranslationsAsync(Integer limit, String modifiedAfterTimestamp, final ApiCallback<APIIPagedResponseGlobalResourcesSharedModelsStringTranslation> _callback) throws ApiException {

        okhttp3.Call localVarCall = stringTranslationsGetTranslationsValidateBeforeCall(limit, modifiedAfterTimestamp, _callback);
        Type localVarReturnType = new TypeToken<APIIPagedResponseGlobalResourcesSharedModelsStringTranslation>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for stringTranslationsUpdateTranslation
     * @param stringId  (required)
     * @param languageId  (required)
     * @param globalResourcesSharedModelsStringTranslation  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stringTranslationsUpdateTranslationCall(String stringId, Integer languageId, GlobalResourcesSharedModelsStringTranslation globalResourcesSharedModelsStringTranslation, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = globalResourcesSharedModelsStringTranslation;

        // create path and map variables
        String localVarPath = "/api/v2/StringTranslations/{stringId}/{languageId}"
            .replace("{" + "stringId" + "}", localVarApiClient.escapeString(stringId.toString()))
            .replace("{" + "languageId" + "}", localVarApiClient.escapeString(languageId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json",
            "application/x-www-form-urlencoded",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call stringTranslationsUpdateTranslationValidateBeforeCall(String stringId, Integer languageId, GlobalResourcesSharedModelsStringTranslation globalResourcesSharedModelsStringTranslation, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'stringId' is set
        if (stringId == null) {
            throw new ApiException("Missing the required parameter 'stringId' when calling stringTranslationsUpdateTranslation(Async)");
        }

        // verify the required parameter 'languageId' is set
        if (languageId == null) {
            throw new ApiException("Missing the required parameter 'languageId' when calling stringTranslationsUpdateTranslation(Async)");
        }

        // verify the required parameter 'globalResourcesSharedModelsStringTranslation' is set
        if (globalResourcesSharedModelsStringTranslation == null) {
            throw new ApiException("Missing the required parameter 'globalResourcesSharedModelsStringTranslation' when calling stringTranslationsUpdateTranslation(Async)");
        }

        return stringTranslationsUpdateTranslationCall(stringId, languageId, globalResourcesSharedModelsStringTranslation, _callback);

    }

    /**
     * Update a string value or a state for a string translation.
     * No Documentation Found.
     * @param stringId  (required)
     * @param languageId  (required)
     * @param globalResourcesSharedModelsStringTranslation  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public void stringTranslationsUpdateTranslation(String stringId, Integer languageId, GlobalResourcesSharedModelsStringTranslation globalResourcesSharedModelsStringTranslation) throws ApiException {
        stringTranslationsUpdateTranslationWithHttpInfo(stringId, languageId, globalResourcesSharedModelsStringTranslation);
    }

    /**
     * Update a string value or a state for a string translation.
     * No Documentation Found.
     * @param stringId  (required)
     * @param languageId  (required)
     * @param globalResourcesSharedModelsStringTranslation  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> stringTranslationsUpdateTranslationWithHttpInfo(String stringId, Integer languageId, GlobalResourcesSharedModelsStringTranslation globalResourcesSharedModelsStringTranslation) throws ApiException {
        okhttp3.Call localVarCall = stringTranslationsUpdateTranslationValidateBeforeCall(stringId, languageId, globalResourcesSharedModelsStringTranslation, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Update a string value or a state for a string translation. (asynchronously)
     * No Documentation Found.
     * @param stringId  (required)
     * @param languageId  (required)
     * @param globalResourcesSharedModelsStringTranslation  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stringTranslationsUpdateTranslationAsync(String stringId, Integer languageId, GlobalResourcesSharedModelsStringTranslation globalResourcesSharedModelsStringTranslation, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = stringTranslationsUpdateTranslationValidateBeforeCall(stringId, languageId, globalResourcesSharedModelsStringTranslation, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for stringTranslationsUpdateTranslations
     * @param globalResourcesSharedModelsStringTranslation  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stringTranslationsUpdateTranslationsCall(List<GlobalResourcesSharedModelsStringTranslation> globalResourcesSharedModelsStringTranslation, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = globalResourcesSharedModelsStringTranslation;

        // create path and map variables
        String localVarPath = "/api/v2/StringTranslations/Batch";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json",
            "application/x-www-form-urlencoded",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call stringTranslationsUpdateTranslationsValidateBeforeCall(List<GlobalResourcesSharedModelsStringTranslation> globalResourcesSharedModelsStringTranslation, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'globalResourcesSharedModelsStringTranslation' is set
        if (globalResourcesSharedModelsStringTranslation == null) {
            throw new ApiException("Missing the required parameter 'globalResourcesSharedModelsStringTranslation' when calling stringTranslationsUpdateTranslations(Async)");
        }

        return stringTranslationsUpdateTranslationsCall(globalResourcesSharedModelsStringTranslation, _callback);

    }

    /**
     * Update corrections to string translations
     * No Documentation Found.
     * @param globalResourcesSharedModelsStringTranslation  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public void stringTranslationsUpdateTranslations(List<GlobalResourcesSharedModelsStringTranslation> globalResourcesSharedModelsStringTranslation) throws ApiException {
        stringTranslationsUpdateTranslationsWithHttpInfo(globalResourcesSharedModelsStringTranslation);
    }

    /**
     * Update corrections to string translations
     * No Documentation Found.
     * @param globalResourcesSharedModelsStringTranslation  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> stringTranslationsUpdateTranslationsWithHttpInfo(List<GlobalResourcesSharedModelsStringTranslation> globalResourcesSharedModelsStringTranslation) throws ApiException {
        okhttp3.Call localVarCall = stringTranslationsUpdateTranslationsValidateBeforeCall(globalResourcesSharedModelsStringTranslation, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Update corrections to string translations (asynchronously)
     * No Documentation Found.
     * @param globalResourcesSharedModelsStringTranslation  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stringTranslationsUpdateTranslationsAsync(List<GlobalResourcesSharedModelsStringTranslation> globalResourcesSharedModelsStringTranslation, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = stringTranslationsUpdateTranslationsValidateBeforeCall(globalResourcesSharedModelsStringTranslation, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
