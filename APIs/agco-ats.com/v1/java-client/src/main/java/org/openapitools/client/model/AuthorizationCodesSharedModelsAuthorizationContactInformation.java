/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * AuthorizationCodesSharedModelsAuthorizationContactInformation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:35.511967-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AuthorizationCodesSharedModelsAuthorizationContactInformation {
  public static final String SERIALIZED_NAME_AUTHORIZATION_CODE_I_D = "AuthorizationCodeID";
  @SerializedName(SERIALIZED_NAME_AUTHORIZATION_CODE_I_D)
  private Integer authorizationCodeID;

  public static final String SERIALIZED_NAME_CODE = "Code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_CONTACT = "Contact";
  @SerializedName(SERIALIZED_NAME_CONTACT)
  private String contact;

  public static final String SERIALIZED_NAME_CREATED_BY = "CreatedBy";
  @SerializedName(SERIALIZED_NAME_CREATED_BY)
  private String createdBy;

  public static final String SERIALIZED_NAME_CREATED_DATE = "CreatedDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_DEALER_CODE = "DealerCode";
  @SerializedName(SERIALIZED_NAME_DEALER_CODE)
  private String dealerCode;

  public static final String SERIALIZED_NAME_DEALERSHIP = "Dealership";
  @SerializedName(SERIALIZED_NAME_DEALERSHIP)
  private String dealership;

  public static final String SERIALIZED_NAME_DEFINITION_NAME = "DefinitionName";
  @SerializedName(SERIALIZED_NAME_DEFINITION_NAME)
  private String definitionName;

  public static final String SERIALIZED_NAME_EMAIL = "Email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_I_D = "ID";
  @SerializedName(SERIALIZED_NAME_I_D)
  private Integer ID;

  public static final String SERIALIZED_NAME_NOTES = "Notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_PHONE = "Phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public AuthorizationCodesSharedModelsAuthorizationContactInformation() {
  }

  public AuthorizationCodesSharedModelsAuthorizationContactInformation authorizationCodeID(Integer authorizationCodeID) {
    this.authorizationCodeID = authorizationCodeID;
    return this;
  }

  /**
   * AuthorizationCode ID that the contact information ties into.
   * @return authorizationCodeID
   */
  @javax.annotation.Nonnull
  public Integer getAuthorizationCodeID() {
    return authorizationCodeID;
  }

  public void setAuthorizationCodeID(Integer authorizationCodeID) {
    this.authorizationCodeID = authorizationCodeID;
  }


  public AuthorizationCodesSharedModelsAuthorizationContactInformation code(String code) {
    this.code = code;
    return this;
  }

  /**
   * The authorization code. Read Only.
   * @return code
   */
  @javax.annotation.Nullable
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }


  public AuthorizationCodesSharedModelsAuthorizationContactInformation contact(String contact) {
    this.contact = contact;
    return this;
  }

  /**
   * Name of contact requesting an authorization code. Minimum length of 3 characters.
   * @return contact
   */
  @javax.annotation.Nonnull
  public String getContact() {
    return contact;
  }

  public void setContact(String contact) {
    this.contact = contact;
  }


  public AuthorizationCodesSharedModelsAuthorizationContactInformation createdBy(String createdBy) {
    this.createdBy = createdBy;
    return this;
  }

  /**
   * The name of the user that created this code. Read Only.
   * @return createdBy
   */
  @javax.annotation.Nullable
  public String getCreatedBy() {
    return createdBy;
  }

  public void setCreatedBy(String createdBy) {
    this.createdBy = createdBy;
  }


  public AuthorizationCodesSharedModelsAuthorizationContactInformation createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * The date the authorization code was created.
   * @return createdDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public AuthorizationCodesSharedModelsAuthorizationContactInformation dealerCode(String dealerCode) {
    this.dealerCode = dealerCode;
    return this;
  }

  /**
   * Dealer code that relates to the dealership. Minimum length of 3 characters.
   * @return dealerCode
   */
  @javax.annotation.Nonnull
  public String getDealerCode() {
    return dealerCode;
  }

  public void setDealerCode(String dealerCode) {
    this.dealerCode = dealerCode;
  }


  public AuthorizationCodesSharedModelsAuthorizationContactInformation dealership(String dealership) {
    this.dealership = dealership;
    return this;
  }

  /**
   * Name of dealership. Minimum length of 3 characters.
   * @return dealership
   */
  @javax.annotation.Nonnull
  public String getDealership() {
    return dealership;
  }

  public void setDealership(String dealership) {
    this.dealership = dealership;
  }


  public AuthorizationCodesSharedModelsAuthorizationContactInformation definitionName(String definitionName) {
    this.definitionName = definitionName;
    return this;
  }

  /**
   * The name of the definition used for generating this authorization code. Read Only.
   * @return definitionName
   */
  @javax.annotation.Nullable
  public String getDefinitionName() {
    return definitionName;
  }

  public void setDefinitionName(String definitionName) {
    this.definitionName = definitionName;
  }


  public AuthorizationCodesSharedModelsAuthorizationContactInformation email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Email of contact.
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public AuthorizationCodesSharedModelsAuthorizationContactInformation ID(Integer ID) {
    this.ID = ID;
    return this;
  }

  /**
   * ID of authorizationContactInformation
   * @return ID
   */
  @javax.annotation.Nullable
  public Integer getID() {
    return ID;
  }

  public void setID(Integer ID) {
    this.ID = ID;
  }


  public AuthorizationCodesSharedModelsAuthorizationContactInformation notes(String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * Optional notes used for internal use.
   * @return notes
   */
  @javax.annotation.Nullable
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  public AuthorizationCodesSharedModelsAuthorizationContactInformation phone(String phone) {
    this.phone = phone;
    return this;
  }

  /**
   * Phone number of contact.
   * @return phone
   */
  @javax.annotation.Nonnull
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthorizationCodesSharedModelsAuthorizationContactInformation authorizationCodesSharedModelsAuthorizationContactInformation = (AuthorizationCodesSharedModelsAuthorizationContactInformation) o;
    return Objects.equals(this.authorizationCodeID, authorizationCodesSharedModelsAuthorizationContactInformation.authorizationCodeID) &&
        Objects.equals(this.code, authorizationCodesSharedModelsAuthorizationContactInformation.code) &&
        Objects.equals(this.contact, authorizationCodesSharedModelsAuthorizationContactInformation.contact) &&
        Objects.equals(this.createdBy, authorizationCodesSharedModelsAuthorizationContactInformation.createdBy) &&
        Objects.equals(this.createdDate, authorizationCodesSharedModelsAuthorizationContactInformation.createdDate) &&
        Objects.equals(this.dealerCode, authorizationCodesSharedModelsAuthorizationContactInformation.dealerCode) &&
        Objects.equals(this.dealership, authorizationCodesSharedModelsAuthorizationContactInformation.dealership) &&
        Objects.equals(this.definitionName, authorizationCodesSharedModelsAuthorizationContactInformation.definitionName) &&
        Objects.equals(this.email, authorizationCodesSharedModelsAuthorizationContactInformation.email) &&
        Objects.equals(this.ID, authorizationCodesSharedModelsAuthorizationContactInformation.ID) &&
        Objects.equals(this.notes, authorizationCodesSharedModelsAuthorizationContactInformation.notes) &&
        Objects.equals(this.phone, authorizationCodesSharedModelsAuthorizationContactInformation.phone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorizationCodeID, code, contact, createdBy, createdDate, dealerCode, dealership, definitionName, email, ID, notes, phone);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthorizationCodesSharedModelsAuthorizationContactInformation {\n");
    sb.append("    authorizationCodeID: ").append(toIndentedString(authorizationCodeID)).append("\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    createdBy: ").append(toIndentedString(createdBy)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    dealerCode: ").append(toIndentedString(dealerCode)).append("\n");
    sb.append("    dealership: ").append(toIndentedString(dealership)).append("\n");
    sb.append("    definitionName: ").append(toIndentedString(definitionName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AuthorizationCodeID");
    openapiFields.add("Code");
    openapiFields.add("Contact");
    openapiFields.add("CreatedBy");
    openapiFields.add("CreatedDate");
    openapiFields.add("DealerCode");
    openapiFields.add("Dealership");
    openapiFields.add("DefinitionName");
    openapiFields.add("Email");
    openapiFields.add("ID");
    openapiFields.add("Notes");
    openapiFields.add("Phone");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("AuthorizationCodeID");
    openapiRequiredFields.add("Contact");
    openapiRequiredFields.add("DealerCode");
    openapiRequiredFields.add("Dealership");
    openapiRequiredFields.add("Phone");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AuthorizationCodesSharedModelsAuthorizationContactInformation
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AuthorizationCodesSharedModelsAuthorizationContactInformation.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AuthorizationCodesSharedModelsAuthorizationContactInformation is not found in the empty JSON string", AuthorizationCodesSharedModelsAuthorizationContactInformation.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AuthorizationCodesSharedModelsAuthorizationContactInformation.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AuthorizationCodesSharedModelsAuthorizationContactInformation` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AuthorizationCodesSharedModelsAuthorizationContactInformation.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Code") != null && !jsonObj.get("Code").isJsonNull()) && !jsonObj.get("Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Code").toString()));
      }
      if (!jsonObj.get("Contact").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Contact` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Contact").toString()));
      }
      if ((jsonObj.get("CreatedBy") != null && !jsonObj.get("CreatedBy").isJsonNull()) && !jsonObj.get("CreatedBy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CreatedBy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CreatedBy").toString()));
      }
      if (!jsonObj.get("DealerCode").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DealerCode` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DealerCode").toString()));
      }
      if (!jsonObj.get("Dealership").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Dealership` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Dealership").toString()));
      }
      if ((jsonObj.get("DefinitionName") != null && !jsonObj.get("DefinitionName").isJsonNull()) && !jsonObj.get("DefinitionName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DefinitionName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DefinitionName").toString()));
      }
      if ((jsonObj.get("Email") != null && !jsonObj.get("Email").isJsonNull()) && !jsonObj.get("Email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Email").toString()));
      }
      if ((jsonObj.get("Notes") != null && !jsonObj.get("Notes").isJsonNull()) && !jsonObj.get("Notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Notes").toString()));
      }
      if (!jsonObj.get("Phone").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Phone` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Phone").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AuthorizationCodesSharedModelsAuthorizationContactInformation.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AuthorizationCodesSharedModelsAuthorizationContactInformation' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AuthorizationCodesSharedModelsAuthorizationContactInformation> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AuthorizationCodesSharedModelsAuthorizationContactInformation.class));

       return (TypeAdapter<T>) new TypeAdapter<AuthorizationCodesSharedModelsAuthorizationContactInformation>() {
           @Override
           public void write(JsonWriter out, AuthorizationCodesSharedModelsAuthorizationContactInformation value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AuthorizationCodesSharedModelsAuthorizationContactInformation read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AuthorizationCodesSharedModelsAuthorizationContactInformation given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AuthorizationCodesSharedModelsAuthorizationContactInformation
   * @throws IOException if the JSON string is invalid with respect to AuthorizationCodesSharedModelsAuthorizationContactInformation
   */
  public static AuthorizationCodesSharedModelsAuthorizationContactInformation fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AuthorizationCodesSharedModelsAuthorizationContactInformation.class);
  }

  /**
   * Convert an instance of AuthorizationCodesSharedModelsAuthorizationContactInformation to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

