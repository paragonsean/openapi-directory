/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateSystemModelsPriorityPackage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:35.511967-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateSystemModelsPriorityPackage {
  public static final String SERIALIZED_NAME_AUTORUN = "Autorun";
  @SerializedName(SERIALIZED_NAME_AUTORUN)
  private Boolean autorun;

  public static final String SERIALIZED_NAME_C_R_C = "CRC";
  @SerializedName(SERIALIZED_NAME_C_R_C)
  private String CRC;

  public static final String SERIALIZED_NAME_CLIENT_I_D = "ClientID";
  @SerializedName(SERIALIZED_NAME_CLIENT_I_D)
  private String clientID;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_NOTES = "Notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_PACKAGE_I_D = "PackageID";
  @SerializedName(SERIALIZED_NAME_PACKAGE_I_D)
  private String packageID;

  public static final String SERIALIZED_NAME_PACKAGE_TYPE_I_D = "PackageTypeID";
  @SerializedName(SERIALIZED_NAME_PACKAGE_TYPE_I_D)
  private String packageTypeID;

  public static final String SERIALIZED_NAME_PREVIOUS_VERSION = "PreviousVersion";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_VERSION)
  private Integer previousVersion;

  public static final String SERIALIZED_NAME_PRIORITY_PACKAGE_I_D = "PriorityPackageID";
  @SerializedName(SERIALIZED_NAME_PRIORITY_PACKAGE_I_D)
  private String priorityPackageID;

  public static final String SERIALIZED_NAME_RELEASE_DATE = "ReleaseDate";
  @SerializedName(SERIALIZED_NAME_RELEASE_DATE)
  private OffsetDateTime releaseDate;

  public static final String SERIALIZED_NAME_RELEASED = "Released";
  @SerializedName(SERIALIZED_NAME_RELEASED)
  private Boolean released;

  public static final String SERIALIZED_NAME_REMOVE_ON_SUCCESS = "RemoveOnSuccess";
  @SerializedName(SERIALIZED_NAME_REMOVE_ON_SUCCESS)
  private Boolean removeOnSuccess;

  public static final String SERIALIZED_NAME_SIZE = "Size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private Long size;

  public static final String SERIALIZED_NAME_SWITCHES = "Switches";
  @SerializedName(SERIALIZED_NAME_SWITCHES)
  private String switches;

  public static final String SERIALIZED_NAME_TIME_STAMP = "TimeStamp";
  @SerializedName(SERIALIZED_NAME_TIME_STAMP)
  private OffsetDateTime timeStamp;

  public static final String SERIALIZED_NAME_URL = "Url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_VERSION = "Version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public UpdateSystemModelsPriorityPackage() {
  }

  public UpdateSystemModelsPriorityPackage autorun(Boolean autorun) {
    this.autorun = autorun;
    return this;
  }

  /**
   * Read Only. From the package specified by package ID.              Value is true if package should run automatically. Default value is false.
   * @return autorun
   */
  @javax.annotation.Nullable
  public Boolean getAutorun() {
    return autorun;
  }

  public void setAutorun(Boolean autorun) {
    this.autorun = autorun;
  }


  public UpdateSystemModelsPriorityPackage CRC(String CRC) {
    this.CRC = CRC;
    return this;
  }

  /**
   * Read Only. From the package specified by package ID.
   * @return CRC
   */
  @javax.annotation.Nullable
  public String getCRC() {
    return CRC;
  }

  public void setCRC(String CRC) {
    this.CRC = CRC;
  }


  public UpdateSystemModelsPriorityPackage clientID(String clientID) {
    this.clientID = clientID;
    return this;
  }

  /**
   * The ID of the client to receive the priority package
   * @return clientID
   */
  @javax.annotation.Nonnull
  public String getClientID() {
    return clientID;
  }

  public void setClientID(String clientID) {
    this.clientID = clientID;
  }


  public UpdateSystemModelsPriorityPackage description(String description) {
    this.description = description;
    return this;
  }

  /**
   * Read Only. From the package specified by package ID.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public UpdateSystemModelsPriorityPackage notes(String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * Read Only. From the package specified by package ID.
   * @return notes
   */
  @javax.annotation.Nullable
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  public UpdateSystemModelsPriorityPackage packageID(String packageID) {
    this.packageID = packageID;
    return this;
  }

  /**
   * The ID of the package to push as a priority package.
   * @return packageID
   */
  @javax.annotation.Nonnull
  public String getPackageID() {
    return packageID;
  }

  public void setPackageID(String packageID) {
    this.packageID = packageID;
  }


  public UpdateSystemModelsPriorityPackage packageTypeID(String packageTypeID) {
    this.packageTypeID = packageTypeID;
    return this;
  }

  /**
   * Read Only. From the package specified by package ID.
   * @return packageTypeID
   */
  @javax.annotation.Nullable
  public String getPackageTypeID() {
    return packageTypeID;
  }

  public void setPackageTypeID(String packageTypeID) {
    this.packageTypeID = packageTypeID;
  }


  public UpdateSystemModelsPriorityPackage previousVersion(Integer previousVersion) {
    this.previousVersion = previousVersion;
    return this;
  }

  /**
   * Read Only. From the package specified by package ID.
   * @return previousVersion
   */
  @javax.annotation.Nullable
  public Integer getPreviousVersion() {
    return previousVersion;
  }

  public void setPreviousVersion(Integer previousVersion) {
    this.previousVersion = previousVersion;
  }


  public UpdateSystemModelsPriorityPackage priorityPackageID(String priorityPackageID) {
    this.priorityPackageID = priorityPackageID;
    return this;
  }

  /**
   * Read Only. The ID of the priority package.
   * @return priorityPackageID
   */
  @javax.annotation.Nullable
  public String getPriorityPackageID() {
    return priorityPackageID;
  }

  public void setPriorityPackageID(String priorityPackageID) {
    this.priorityPackageID = priorityPackageID;
  }


  public UpdateSystemModelsPriorityPackage releaseDate(OffsetDateTime releaseDate) {
    this.releaseDate = releaseDate;
    return this;
  }

  /**
   * Read Only. From the package specified by package ID.              The date the package was released
   * @return releaseDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getReleaseDate() {
    return releaseDate;
  }

  public void setReleaseDate(OffsetDateTime releaseDate) {
    this.releaseDate = releaseDate;
  }


  public UpdateSystemModelsPriorityPackage released(Boolean released) {
    this.released = released;
    return this;
  }

  /**
   * Read Only. From the package specified by package ID.
   * @return released
   */
  @javax.annotation.Nullable
  public Boolean getReleased() {
    return released;
  }

  public void setReleased(Boolean released) {
    this.released = released;
  }


  public UpdateSystemModelsPriorityPackage removeOnSuccess(Boolean removeOnSuccess) {
    this.removeOnSuccess = removeOnSuccess;
    return this;
  }

  /**
   * Read Only. From the package specified by package ID.
   * @return removeOnSuccess
   */
  @javax.annotation.Nullable
  public Boolean getRemoveOnSuccess() {
    return removeOnSuccess;
  }

  public void setRemoveOnSuccess(Boolean removeOnSuccess) {
    this.removeOnSuccess = removeOnSuccess;
  }


  public UpdateSystemModelsPriorityPackage size(Long size) {
    this.size = size;
    return this;
  }

  /**
   * Read Only. From the package specified by package ID.
   * @return size
   */
  @javax.annotation.Nullable
  public Long getSize() {
    return size;
  }

  public void setSize(Long size) {
    this.size = size;
  }


  public UpdateSystemModelsPriorityPackage switches(String switches) {
    this.switches = switches;
    return this;
  }

  /**
   * The command line arguments for the priority package.  Default value is an empty string.
   * @return switches
   */
  @javax.annotation.Nullable
  public String getSwitches() {
    return switches;
  }

  public void setSwitches(String switches) {
    this.switches = switches;
  }


  public UpdateSystemModelsPriorityPackage timeStamp(OffsetDateTime timeStamp) {
    this.timeStamp = timeStamp;
    return this;
  }

  /**
   * Read Only. The timestamp of the priority package.
   * @return timeStamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimeStamp() {
    return timeStamp;
  }

  public void setTimeStamp(OffsetDateTime timeStamp) {
    this.timeStamp = timeStamp;
  }


  public UpdateSystemModelsPriorityPackage url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Read Only. From the package specified by package ID.
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public UpdateSystemModelsPriorityPackage version(Integer version) {
    this.version = version;
    return this;
  }

  /**
   * Read Only. From the package specified by package ID.
   * @return version
   */
  @javax.annotation.Nullable
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSystemModelsPriorityPackage updateSystemModelsPriorityPackage = (UpdateSystemModelsPriorityPackage) o;
    return Objects.equals(this.autorun, updateSystemModelsPriorityPackage.autorun) &&
        Objects.equals(this.CRC, updateSystemModelsPriorityPackage.CRC) &&
        Objects.equals(this.clientID, updateSystemModelsPriorityPackage.clientID) &&
        Objects.equals(this.description, updateSystemModelsPriorityPackage.description) &&
        Objects.equals(this.notes, updateSystemModelsPriorityPackage.notes) &&
        Objects.equals(this.packageID, updateSystemModelsPriorityPackage.packageID) &&
        Objects.equals(this.packageTypeID, updateSystemModelsPriorityPackage.packageTypeID) &&
        Objects.equals(this.previousVersion, updateSystemModelsPriorityPackage.previousVersion) &&
        Objects.equals(this.priorityPackageID, updateSystemModelsPriorityPackage.priorityPackageID) &&
        Objects.equals(this.releaseDate, updateSystemModelsPriorityPackage.releaseDate) &&
        Objects.equals(this.released, updateSystemModelsPriorityPackage.released) &&
        Objects.equals(this.removeOnSuccess, updateSystemModelsPriorityPackage.removeOnSuccess) &&
        Objects.equals(this.size, updateSystemModelsPriorityPackage.size) &&
        Objects.equals(this.switches, updateSystemModelsPriorityPackage.switches) &&
        Objects.equals(this.timeStamp, updateSystemModelsPriorityPackage.timeStamp) &&
        Objects.equals(this.url, updateSystemModelsPriorityPackage.url) &&
        Objects.equals(this.version, updateSystemModelsPriorityPackage.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(autorun, CRC, clientID, description, notes, packageID, packageTypeID, previousVersion, priorityPackageID, releaseDate, released, removeOnSuccess, size, switches, timeStamp, url, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSystemModelsPriorityPackage {\n");
    sb.append("    autorun: ").append(toIndentedString(autorun)).append("\n");
    sb.append("    CRC: ").append(toIndentedString(CRC)).append("\n");
    sb.append("    clientID: ").append(toIndentedString(clientID)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    packageID: ").append(toIndentedString(packageID)).append("\n");
    sb.append("    packageTypeID: ").append(toIndentedString(packageTypeID)).append("\n");
    sb.append("    previousVersion: ").append(toIndentedString(previousVersion)).append("\n");
    sb.append("    priorityPackageID: ").append(toIndentedString(priorityPackageID)).append("\n");
    sb.append("    releaseDate: ").append(toIndentedString(releaseDate)).append("\n");
    sb.append("    released: ").append(toIndentedString(released)).append("\n");
    sb.append("    removeOnSuccess: ").append(toIndentedString(removeOnSuccess)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    switches: ").append(toIndentedString(switches)).append("\n");
    sb.append("    timeStamp: ").append(toIndentedString(timeStamp)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Autorun");
    openapiFields.add("CRC");
    openapiFields.add("ClientID");
    openapiFields.add("Description");
    openapiFields.add("Notes");
    openapiFields.add("PackageID");
    openapiFields.add("PackageTypeID");
    openapiFields.add("PreviousVersion");
    openapiFields.add("PriorityPackageID");
    openapiFields.add("ReleaseDate");
    openapiFields.add("Released");
    openapiFields.add("RemoveOnSuccess");
    openapiFields.add("Size");
    openapiFields.add("Switches");
    openapiFields.add("TimeStamp");
    openapiFields.add("Url");
    openapiFields.add("Version");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("ClientID");
    openapiRequiredFields.add("PackageID");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateSystemModelsPriorityPackage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateSystemModelsPriorityPackage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateSystemModelsPriorityPackage is not found in the empty JSON string", UpdateSystemModelsPriorityPackage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateSystemModelsPriorityPackage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateSystemModelsPriorityPackage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : UpdateSystemModelsPriorityPackage.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("CRC") != null && !jsonObj.get("CRC").isJsonNull()) && !jsonObj.get("CRC").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `CRC` to be a primitive type in the JSON string but got `%s`", jsonObj.get("CRC").toString()));
      }
      if (!jsonObj.get("ClientID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ClientID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ClientID").toString()));
      }
      if ((jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) && !jsonObj.get("Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Description").toString()));
      }
      if ((jsonObj.get("Notes") != null && !jsonObj.get("Notes").isJsonNull()) && !jsonObj.get("Notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Notes").toString()));
      }
      if (!jsonObj.get("PackageID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PackageID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PackageID").toString()));
      }
      if ((jsonObj.get("PackageTypeID") != null && !jsonObj.get("PackageTypeID").isJsonNull()) && !jsonObj.get("PackageTypeID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PackageTypeID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PackageTypeID").toString()));
      }
      if ((jsonObj.get("PriorityPackageID") != null && !jsonObj.get("PriorityPackageID").isJsonNull()) && !jsonObj.get("PriorityPackageID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `PriorityPackageID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("PriorityPackageID").toString()));
      }
      if ((jsonObj.get("Switches") != null && !jsonObj.get("Switches").isJsonNull()) && !jsonObj.get("Switches").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Switches` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Switches").toString()));
      }
      if ((jsonObj.get("Url") != null && !jsonObj.get("Url").isJsonNull()) && !jsonObj.get("Url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateSystemModelsPriorityPackage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateSystemModelsPriorityPackage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateSystemModelsPriorityPackage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateSystemModelsPriorityPackage.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateSystemModelsPriorityPackage>() {
           @Override
           public void write(JsonWriter out, UpdateSystemModelsPriorityPackage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateSystemModelsPriorityPackage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateSystemModelsPriorityPackage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateSystemModelsPriorityPackage
   * @throws IOException if the JSON string is invalid with respect to UpdateSystemModelsPriorityPackage
   */
  public static UpdateSystemModelsPriorityPackage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateSystemModelsPriorityPackage.class);
  }

  /**
   * Convert an instance of UpdateSystemModelsPriorityPackage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

