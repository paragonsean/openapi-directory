/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ContentReleaseVersion class
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:35.511967-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ContentSubmissionSharedBusinessEntitiesContentReleaseVersion {
  public static final String SERIALIZED_NAME_CONTENT_DEFINITION_I_D = "ContentDefinitionID";
  @SerializedName(SERIALIZED_NAME_CONTENT_DEFINITION_I_D)
  private Integer contentDefinitionID;

  public static final String SERIALIZED_NAME_CONTENT_RELEASE_I_D = "ContentReleaseID";
  @SerializedName(SERIALIZED_NAME_CONTENT_RELEASE_I_D)
  private Integer contentReleaseID;

  public static final String SERIALIZED_NAME_DELETED = "Deleted";
  @SerializedName(SERIALIZED_NAME_DELETED)
  private Boolean deleted;

  public static final String SERIALIZED_NAME_PUBLISHER_USER_I_D = "PublisherUserID";
  @SerializedName(SERIALIZED_NAME_PUBLISHER_USER_I_D)
  private Integer publisherUserID;

  public static final String SERIALIZED_NAME_RELEASE_I_D = "ReleaseID";
  @SerializedName(SERIALIZED_NAME_RELEASE_I_D)
  private Integer releaseID;

  public static final String SERIALIZED_NAME_TEST_REPORT_URL = "TestReportUrl";
  @SerializedName(SERIALIZED_NAME_TEST_REPORT_URL)
  private String testReportUrl;

  public static final String SERIALIZED_NAME_UPDATED_DATE = "UpdatedDate";
  @SerializedName(SERIALIZED_NAME_UPDATED_DATE)
  private OffsetDateTime updatedDate;

  public static final String SERIALIZED_NAME_VERSION = "Version";
  @SerializedName(SERIALIZED_NAME_VERSION)
  private Integer version;

  public ContentSubmissionSharedBusinessEntitiesContentReleaseVersion() {
  }

  public ContentSubmissionSharedBusinessEntitiesContentReleaseVersion contentDefinitionID(Integer contentDefinitionID) {
    this.contentDefinitionID = contentDefinitionID;
    return this;
  }

  /**
   * ContentDefinitionID
   * @return contentDefinitionID
   */
  @javax.annotation.Nullable
  public Integer getContentDefinitionID() {
    return contentDefinitionID;
  }

  public void setContentDefinitionID(Integer contentDefinitionID) {
    this.contentDefinitionID = contentDefinitionID;
  }


  public ContentSubmissionSharedBusinessEntitiesContentReleaseVersion contentReleaseID(Integer contentReleaseID) {
    this.contentReleaseID = contentReleaseID;
    return this;
  }

  /**
   * ContentReleaseID
   * @return contentReleaseID
   */
  @javax.annotation.Nullable
  public Integer getContentReleaseID() {
    return contentReleaseID;
  }

  public void setContentReleaseID(Integer contentReleaseID) {
    this.contentReleaseID = contentReleaseID;
  }


  public ContentSubmissionSharedBusinessEntitiesContentReleaseVersion deleted(Boolean deleted) {
    this.deleted = deleted;
    return this;
  }

  /**
   * deleted flag
   * @return deleted
   */
  @javax.annotation.Nullable
  public Boolean getDeleted() {
    return deleted;
  }

  public void setDeleted(Boolean deleted) {
    this.deleted = deleted;
  }


  public ContentSubmissionSharedBusinessEntitiesContentReleaseVersion publisherUserID(Integer publisherUserID) {
    this.publisherUserID = publisherUserID;
    return this;
  }

  /**
   * PublisherUser ID
   * @return publisherUserID
   */
  @javax.annotation.Nullable
  public Integer getPublisherUserID() {
    return publisherUserID;
  }

  public void setPublisherUserID(Integer publisherUserID) {
    this.publisherUserID = publisherUserID;
  }


  public ContentSubmissionSharedBusinessEntitiesContentReleaseVersion releaseID(Integer releaseID) {
    this.releaseID = releaseID;
    return this;
  }

  /**
   * rele4ase Id
   * @return releaseID
   */
  @javax.annotation.Nullable
  public Integer getReleaseID() {
    return releaseID;
  }

  public void setReleaseID(Integer releaseID) {
    this.releaseID = releaseID;
  }


  public ContentSubmissionSharedBusinessEntitiesContentReleaseVersion testReportUrl(String testReportUrl) {
    this.testReportUrl = testReportUrl;
    return this;
  }

  /**
   * The URL at which test reports for this content can be found
   * @return testReportUrl
   */
  @javax.annotation.Nullable
  public String getTestReportUrl() {
    return testReportUrl;
  }

  public void setTestReportUrl(String testReportUrl) {
    this.testReportUrl = testReportUrl;
  }


  public ContentSubmissionSharedBusinessEntitiesContentReleaseVersion updatedDate(OffsetDateTime updatedDate) {
    this.updatedDate = updatedDate;
    return this;
  }

  /**
   * Updated Date
   * @return updatedDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedDate() {
    return updatedDate;
  }

  public void setUpdatedDate(OffsetDateTime updatedDate) {
    this.updatedDate = updatedDate;
  }


  public ContentSubmissionSharedBusinessEntitiesContentReleaseVersion version(Integer version) {
    this.version = version;
    return this;
  }

  /**
   * version
   * @return version
   */
  @javax.annotation.Nullable
  public Integer getVersion() {
    return version;
  }

  public void setVersion(Integer version) {
    this.version = version;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ContentSubmissionSharedBusinessEntitiesContentReleaseVersion contentSubmissionSharedBusinessEntitiesContentReleaseVersion = (ContentSubmissionSharedBusinessEntitiesContentReleaseVersion) o;
    return Objects.equals(this.contentDefinitionID, contentSubmissionSharedBusinessEntitiesContentReleaseVersion.contentDefinitionID) &&
        Objects.equals(this.contentReleaseID, contentSubmissionSharedBusinessEntitiesContentReleaseVersion.contentReleaseID) &&
        Objects.equals(this.deleted, contentSubmissionSharedBusinessEntitiesContentReleaseVersion.deleted) &&
        Objects.equals(this.publisherUserID, contentSubmissionSharedBusinessEntitiesContentReleaseVersion.publisherUserID) &&
        Objects.equals(this.releaseID, contentSubmissionSharedBusinessEntitiesContentReleaseVersion.releaseID) &&
        Objects.equals(this.testReportUrl, contentSubmissionSharedBusinessEntitiesContentReleaseVersion.testReportUrl) &&
        Objects.equals(this.updatedDate, contentSubmissionSharedBusinessEntitiesContentReleaseVersion.updatedDate) &&
        Objects.equals(this.version, contentSubmissionSharedBusinessEntitiesContentReleaseVersion.version);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contentDefinitionID, contentReleaseID, deleted, publisherUserID, releaseID, testReportUrl, updatedDate, version);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ContentSubmissionSharedBusinessEntitiesContentReleaseVersion {\n");
    sb.append("    contentDefinitionID: ").append(toIndentedString(contentDefinitionID)).append("\n");
    sb.append("    contentReleaseID: ").append(toIndentedString(contentReleaseID)).append("\n");
    sb.append("    deleted: ").append(toIndentedString(deleted)).append("\n");
    sb.append("    publisherUserID: ").append(toIndentedString(publisherUserID)).append("\n");
    sb.append("    releaseID: ").append(toIndentedString(releaseID)).append("\n");
    sb.append("    testReportUrl: ").append(toIndentedString(testReportUrl)).append("\n");
    sb.append("    updatedDate: ").append(toIndentedString(updatedDate)).append("\n");
    sb.append("    version: ").append(toIndentedString(version)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ContentDefinitionID");
    openapiFields.add("ContentReleaseID");
    openapiFields.add("Deleted");
    openapiFields.add("PublisherUserID");
    openapiFields.add("ReleaseID");
    openapiFields.add("TestReportUrl");
    openapiFields.add("UpdatedDate");
    openapiFields.add("Version");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ContentSubmissionSharedBusinessEntitiesContentReleaseVersion
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ContentSubmissionSharedBusinessEntitiesContentReleaseVersion is not found in the empty JSON string", ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ContentSubmissionSharedBusinessEntitiesContentReleaseVersion` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("TestReportUrl") != null && !jsonObj.get("TestReportUrl").isJsonNull()) && !jsonObj.get("TestReportUrl").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TestReportUrl` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TestReportUrl").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ContentSubmissionSharedBusinessEntitiesContentReleaseVersion' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ContentSubmissionSharedBusinessEntitiesContentReleaseVersion> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.class));

       return (TypeAdapter<T>) new TypeAdapter<ContentSubmissionSharedBusinessEntitiesContentReleaseVersion>() {
           @Override
           public void write(JsonWriter out, ContentSubmissionSharedBusinessEntitiesContentReleaseVersion value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ContentSubmissionSharedBusinessEntitiesContentReleaseVersion read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ContentSubmissionSharedBusinessEntitiesContentReleaseVersion given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ContentSubmissionSharedBusinessEntitiesContentReleaseVersion
   * @throws IOException if the JSON string is invalid with respect to ContentSubmissionSharedBusinessEntitiesContentReleaseVersion
   */
  public static ContentSubmissionSharedBusinessEntitiesContentReleaseVersion fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.class);
  }

  /**
   * Convert an instance of ContentSubmissionSharedBusinessEntitiesContentReleaseVersion to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

