/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.APIIPagedResponseOASSupportSharedModelsTranslationKey;
import org.openapitools.client.model.APIModelsApiError;
import org.openapitools.client.model.OASSupportSharedModelsTranslationKey;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TranslationKeysApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public TranslationKeysApi() {
        this(Configuration.getDefaultApiClient());
    }

    public TranslationKeysApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for translationKeysCreateTranslationKey
     * @param oaSSupportSharedModelsTranslationKey  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationKeysCreateTranslationKeyCall(OASSupportSharedModelsTranslationKey oaSSupportSharedModelsTranslationKey, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = oaSSupportSharedModelsTranslationKey;

        // create path and map variables
        String localVarPath = "/api/v2/TranslationKeys";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json",
            "application/x-www-form-urlencoded",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call translationKeysCreateTranslationKeyValidateBeforeCall(OASSupportSharedModelsTranslationKey oaSSupportSharedModelsTranslationKey, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'oaSSupportSharedModelsTranslationKey' is set
        if (oaSSupportSharedModelsTranslationKey == null) {
            throw new ApiException("Missing the required parameter 'oaSSupportSharedModelsTranslationKey' when calling translationKeysCreateTranslationKey(Async)");
        }

        return translationKeysCreateTranslationKeyCall(oaSSupportSharedModelsTranslationKey, _callback);

    }

    /**
     * Create a translationKey object.
     * No Documentation Found.
     * @param oaSSupportSharedModelsTranslationKey  (required)
     * @return Integer
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public Integer translationKeysCreateTranslationKey(OASSupportSharedModelsTranslationKey oaSSupportSharedModelsTranslationKey) throws ApiException {
        ApiResponse<Integer> localVarResp = translationKeysCreateTranslationKeyWithHttpInfo(oaSSupportSharedModelsTranslationKey);
        return localVarResp.getData();
    }

    /**
     * Create a translationKey object.
     * No Documentation Found.
     * @param oaSSupportSharedModelsTranslationKey  (required)
     * @return ApiResponse&lt;Integer&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Integer> translationKeysCreateTranslationKeyWithHttpInfo(OASSupportSharedModelsTranslationKey oaSSupportSharedModelsTranslationKey) throws ApiException {
        okhttp3.Call localVarCall = translationKeysCreateTranslationKeyValidateBeforeCall(oaSSupportSharedModelsTranslationKey, null);
        Type localVarReturnType = new TypeToken<Integer>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create a translationKey object. (asynchronously)
     * No Documentation Found.
     * @param oaSSupportSharedModelsTranslationKey  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationKeysCreateTranslationKeyAsync(OASSupportSharedModelsTranslationKey oaSSupportSharedModelsTranslationKey, final ApiCallback<Integer> _callback) throws ApiException {

        okhttp3.Call localVarCall = translationKeysCreateTranslationKeyValidateBeforeCall(oaSSupportSharedModelsTranslationKey, _callback);
        Type localVarReturnType = new TypeToken<Integer>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for translationKeysGet
     * @param limit  (optional)
     * @param offset  (optional)
     * @param keyNames Can filter by keyNames, a comma deliminated list. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationKeysGetCall(Integer limit, Integer offset, String keyNames, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v2/TranslationKeys";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (offset != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("offset", offset));
        }

        if (keyNames != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keyNames", keyNames));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call translationKeysGetValidateBeforeCall(Integer limit, Integer offset, String keyNames, final ApiCallback _callback) throws ApiException {
        return translationKeysGetCall(limit, offset, keyNames, _callback);

    }

    /**
     * Get a paged response of TranslationKeys.
     * 
     * @param limit  (optional)
     * @param offset  (optional)
     * @param keyNames Can filter by keyNames, a comma deliminated list. (optional)
     * @return APIIPagedResponseOASSupportSharedModelsTranslationKey
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public APIIPagedResponseOASSupportSharedModelsTranslationKey translationKeysGet(Integer limit, Integer offset, String keyNames) throws ApiException {
        ApiResponse<APIIPagedResponseOASSupportSharedModelsTranslationKey> localVarResp = translationKeysGetWithHttpInfo(limit, offset, keyNames);
        return localVarResp.getData();
    }

    /**
     * Get a paged response of TranslationKeys.
     * 
     * @param limit  (optional)
     * @param offset  (optional)
     * @param keyNames Can filter by keyNames, a comma deliminated list. (optional)
     * @return ApiResponse&lt;APIIPagedResponseOASSupportSharedModelsTranslationKey&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<APIIPagedResponseOASSupportSharedModelsTranslationKey> translationKeysGetWithHttpInfo(Integer limit, Integer offset, String keyNames) throws ApiException {
        okhttp3.Call localVarCall = translationKeysGetValidateBeforeCall(limit, offset, keyNames, null);
        Type localVarReturnType = new TypeToken<APIIPagedResponseOASSupportSharedModelsTranslationKey>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a paged response of TranslationKeys. (asynchronously)
     * 
     * @param limit  (optional)
     * @param offset  (optional)
     * @param keyNames Can filter by keyNames, a comma deliminated list. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationKeysGetAsync(Integer limit, Integer offset, String keyNames, final ApiCallback<APIIPagedResponseOASSupportSharedModelsTranslationKey> _callback) throws ApiException {

        okhttp3.Call localVarCall = translationKeysGetValidateBeforeCall(limit, offset, keyNames, _callback);
        Type localVarReturnType = new TypeToken<APIIPagedResponseOASSupportSharedModelsTranslationKey>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for translationKeysGetTranslationKey
     * @param ID  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationKeysGetTranslationKeyCall(Integer ID, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v2/TranslationKeys/{ID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call translationKeysGetTranslationKeyValidateBeforeCall(Integer ID, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling translationKeysGetTranslationKey(Async)");
        }

        return translationKeysGetTranslationKeyCall(ID, _callback);

    }

    /**
     * Get TranslationKey by ID
     * No Documentation Found.
     * @param ID  (required)
     * @return OASSupportSharedModelsTranslationKey
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public OASSupportSharedModelsTranslationKey translationKeysGetTranslationKey(Integer ID) throws ApiException {
        ApiResponse<OASSupportSharedModelsTranslationKey> localVarResp = translationKeysGetTranslationKeyWithHttpInfo(ID);
        return localVarResp.getData();
    }

    /**
     * Get TranslationKey by ID
     * No Documentation Found.
     * @param ID  (required)
     * @return ApiResponse&lt;OASSupportSharedModelsTranslationKey&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<OASSupportSharedModelsTranslationKey> translationKeysGetTranslationKeyWithHttpInfo(Integer ID) throws ApiException {
        okhttp3.Call localVarCall = translationKeysGetTranslationKeyValidateBeforeCall(ID, null);
        Type localVarReturnType = new TypeToken<OASSupportSharedModelsTranslationKey>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get TranslationKey by ID (asynchronously)
     * No Documentation Found.
     * @param ID  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationKeysGetTranslationKeyAsync(Integer ID, final ApiCallback<OASSupportSharedModelsTranslationKey> _callback) throws ApiException {

        okhttp3.Call localVarCall = translationKeysGetTranslationKeyValidateBeforeCall(ID, _callback);
        Type localVarReturnType = new TypeToken<OASSupportSharedModelsTranslationKey>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for translationKeysUpdateTranslationKey
     * @param ID  (required)
     * @param oaSSupportSharedModelsTranslationKey  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationKeysUpdateTranslationKeyCall(Integer ID, OASSupportSharedModelsTranslationKey oaSSupportSharedModelsTranslationKey, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = oaSSupportSharedModelsTranslationKey;

        // create path and map variables
        String localVarPath = "/api/v2/TranslationKeys/{ID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json",
            "application/x-www-form-urlencoded",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call translationKeysUpdateTranslationKeyValidateBeforeCall(Integer ID, OASSupportSharedModelsTranslationKey oaSSupportSharedModelsTranslationKey, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling translationKeysUpdateTranslationKey(Async)");
        }

        // verify the required parameter 'oaSSupportSharedModelsTranslationKey' is set
        if (oaSSupportSharedModelsTranslationKey == null) {
            throw new ApiException("Missing the required parameter 'oaSSupportSharedModelsTranslationKey' when calling translationKeysUpdateTranslationKey(Async)");
        }

        return translationKeysUpdateTranslationKeyCall(ID, oaSSupportSharedModelsTranslationKey, _callback);

    }

    /**
     * Update the StringID of the translationKey object.
     * No Documentation Found.
     * @param ID  (required)
     * @param oaSSupportSharedModelsTranslationKey  (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public void translationKeysUpdateTranslationKey(Integer ID, OASSupportSharedModelsTranslationKey oaSSupportSharedModelsTranslationKey) throws ApiException {
        translationKeysUpdateTranslationKeyWithHttpInfo(ID, oaSSupportSharedModelsTranslationKey);
    }

    /**
     * Update the StringID of the translationKey object.
     * No Documentation Found.
     * @param ID  (required)
     * @param oaSSupportSharedModelsTranslationKey  (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> translationKeysUpdateTranslationKeyWithHttpInfo(Integer ID, OASSupportSharedModelsTranslationKey oaSSupportSharedModelsTranslationKey) throws ApiException {
        okhttp3.Call localVarCall = translationKeysUpdateTranslationKeyValidateBeforeCall(ID, oaSSupportSharedModelsTranslationKey, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Update the StringID of the translationKey object. (asynchronously)
     * No Documentation Found.
     * @param ID  (required)
     * @param oaSSupportSharedModelsTranslationKey  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call translationKeysUpdateTranslationKeyAsync(Integer ID, OASSupportSharedModelsTranslationKey oaSSupportSharedModelsTranslationKey, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = translationKeysUpdateTranslationKeyValidateBeforeCall(ID, oaSSupportSharedModelsTranslationKey, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
