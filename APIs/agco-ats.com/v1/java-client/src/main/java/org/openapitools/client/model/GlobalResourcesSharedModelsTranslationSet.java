/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GlobalResourcesSharedModelsTranslationSetAttribute;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A set of strings submitted for translation
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:35.511967-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GlobalResourcesSharedModelsTranslationSet {
  public static final String SERIALIZED_NAME_ATTRIBUTES = "Attributes";
  @SerializedName(SERIALIZED_NAME_ATTRIBUTES)
  private List<GlobalResourcesSharedModelsTranslationSetAttribute> attributes = new ArrayList<>();

  public static final String SERIALIZED_NAME_FILE_I_DS = "FileIDs";
  @SerializedName(SERIALIZED_NAME_FILE_I_DS)
  private List<String> fileIDs = new ArrayList<>();

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IN_DATE = "InDate";
  @SerializedName(SERIALIZED_NAME_IN_DATE)
  private OffsetDateTime inDate;

  public static final String SERIALIZED_NAME_NOTES = "Notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_OUT_DATE = "OutDate";
  @SerializedName(SERIALIZED_NAME_OUT_DATE)
  private OffsetDateTime outDate;

  /**
   * An enum indicating the state of the translation set
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    OUT_FOR_PROCESSING("OutForProcessing"),
    
    PROCESSING("Processing"),
    
    PENDING_APPROVAL("PendingApproval"),
    
    OUT_FOR_TRANSLATION("OutForTranslation"),
    
    CANCELLED("Cancelled"),
    
    COMPLETED("Completed");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_TRANSLATION_REQUEST_I_D = "TranslationRequestID";
  @SerializedName(SERIALIZED_NAME_TRANSLATION_REQUEST_I_D)
  private Integer translationRequestID;

  public GlobalResourcesSharedModelsTranslationSet() {
  }

  public GlobalResourcesSharedModelsTranslationSet attributes(List<GlobalResourcesSharedModelsTranslationSetAttribute> attributes) {
    this.attributes = attributes;
    return this;
  }

  public GlobalResourcesSharedModelsTranslationSet addAttributesItem(GlobalResourcesSharedModelsTranslationSetAttribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

  /**
   * Attributes of the Translation Set
   * @return attributes
   */
  @javax.annotation.Nullable
  public List<GlobalResourcesSharedModelsTranslationSetAttribute> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<GlobalResourcesSharedModelsTranslationSetAttribute> attributes) {
    this.attributes = attributes;
  }


  public GlobalResourcesSharedModelsTranslationSet fileIDs(List<String> fileIDs) {
    this.fileIDs = fileIDs;
    return this;
  }

  public GlobalResourcesSharedModelsTranslationSet addFileIDsItem(String fileIDsItem) {
    if (this.fileIDs == null) {
      this.fileIDs = new ArrayList<>();
    }
    this.fileIDs.add(fileIDsItem);
    return this;
  }

  /**
   * IDs for files related to this translation set. For example, the original and processed files
   * @return fileIDs
   */
  @javax.annotation.Nonnull
  public List<String> getFileIDs() {
    return fileIDs;
  }

  public void setFileIDs(List<String> fileIDs) {
    this.fileIDs = fileIDs;
  }


  public GlobalResourcesSharedModelsTranslationSet id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * The id of the TranslationSet.
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public GlobalResourcesSharedModelsTranslationSet inDate(OffsetDateTime inDate) {
    this.inDate = inDate;
    return this;
  }

  /**
   * Read Only. The date the translation set was returned.
   * @return inDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getInDate() {
    return inDate;
  }

  public void setInDate(OffsetDateTime inDate) {
    this.inDate = inDate;
  }


  public GlobalResourcesSharedModelsTranslationSet notes(String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * Notes on the TranslationSet
   * @return notes
   */
  @javax.annotation.Nullable
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  public GlobalResourcesSharedModelsTranslationSet outDate(OffsetDateTime outDate) {
    this.outDate = outDate;
    return this;
  }

  /**
   * Read Only. The date the translation set was sent out.
   * @return outDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getOutDate() {
    return outDate;
  }

  public void setOutDate(OffsetDateTime outDate) {
    this.outDate = outDate;
  }


  public GlobalResourcesSharedModelsTranslationSet state(StateEnum state) {
    this.state = state;
    return this;
  }

  /**
   * An enum indicating the state of the translation set
   * @return state
   */
  @javax.annotation.Nonnull
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }


  public GlobalResourcesSharedModelsTranslationSet translationRequestID(Integer translationRequestID) {
    this.translationRequestID = translationRequestID;
    return this;
  }

  /**
   * Read Only. The Id of the TranslationRequest which generated this translation set.
   * @return translationRequestID
   */
  @javax.annotation.Nullable
  public Integer getTranslationRequestID() {
    return translationRequestID;
  }

  public void setTranslationRequestID(Integer translationRequestID) {
    this.translationRequestID = translationRequestID;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlobalResourcesSharedModelsTranslationSet globalResourcesSharedModelsTranslationSet = (GlobalResourcesSharedModelsTranslationSet) o;
    return Objects.equals(this.attributes, globalResourcesSharedModelsTranslationSet.attributes) &&
        Objects.equals(this.fileIDs, globalResourcesSharedModelsTranslationSet.fileIDs) &&
        Objects.equals(this.id, globalResourcesSharedModelsTranslationSet.id) &&
        Objects.equals(this.inDate, globalResourcesSharedModelsTranslationSet.inDate) &&
        Objects.equals(this.notes, globalResourcesSharedModelsTranslationSet.notes) &&
        Objects.equals(this.outDate, globalResourcesSharedModelsTranslationSet.outDate) &&
        Objects.equals(this.state, globalResourcesSharedModelsTranslationSet.state) &&
        Objects.equals(this.translationRequestID, globalResourcesSharedModelsTranslationSet.translationRequestID);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attributes, fileIDs, id, inDate, notes, outDate, state, translationRequestID);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlobalResourcesSharedModelsTranslationSet {\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    fileIDs: ").append(toIndentedString(fileIDs)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    inDate: ").append(toIndentedString(inDate)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    outDate: ").append(toIndentedString(outDate)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    translationRequestID: ").append(toIndentedString(translationRequestID)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Attributes");
    openapiFields.add("FileIDs");
    openapiFields.add("Id");
    openapiFields.add("InDate");
    openapiFields.add("Notes");
    openapiFields.add("OutDate");
    openapiFields.add("State");
    openapiFields.add("TranslationRequestID");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("FileIDs");
    openapiRequiredFields.add("State");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GlobalResourcesSharedModelsTranslationSet
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GlobalResourcesSharedModelsTranslationSet.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GlobalResourcesSharedModelsTranslationSet is not found in the empty JSON string", GlobalResourcesSharedModelsTranslationSet.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GlobalResourcesSharedModelsTranslationSet.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GlobalResourcesSharedModelsTranslationSet` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GlobalResourcesSharedModelsTranslationSet.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("Attributes") != null && !jsonObj.get("Attributes").isJsonNull()) {
        JsonArray jsonArrayattributes = jsonObj.getAsJsonArray("Attributes");
        if (jsonArrayattributes != null) {
          // ensure the json data is an array
          if (!jsonObj.get("Attributes").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `Attributes` to be an array in the JSON string but got `%s`", jsonObj.get("Attributes").toString()));
          }

          // validate the optional field `Attributes` (array)
          for (int i = 0; i < jsonArrayattributes.size(); i++) {
            GlobalResourcesSharedModelsTranslationSetAttribute.validateJsonElement(jsonArrayattributes.get(i));
          };
        }
      }
      // ensure the required json array is present
      if (jsonObj.get("FileIDs") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("FileIDs").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `FileIDs` to be an array in the JSON string but got `%s`", jsonObj.get("FileIDs").toString()));
      }
      if ((jsonObj.get("Notes") != null && !jsonObj.get("Notes").isJsonNull()) && !jsonObj.get("Notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Notes").toString()));
      }
      if (!jsonObj.get("State").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `State` to be a primitive type in the JSON string but got `%s`", jsonObj.get("State").toString()));
      }
      // validate the required field `State`
      StateEnum.validateJsonElement(jsonObj.get("State"));
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GlobalResourcesSharedModelsTranslationSet.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GlobalResourcesSharedModelsTranslationSet' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GlobalResourcesSharedModelsTranslationSet> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GlobalResourcesSharedModelsTranslationSet.class));

       return (TypeAdapter<T>) new TypeAdapter<GlobalResourcesSharedModelsTranslationSet>() {
           @Override
           public void write(JsonWriter out, GlobalResourcesSharedModelsTranslationSet value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GlobalResourcesSharedModelsTranslationSet read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GlobalResourcesSharedModelsTranslationSet given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GlobalResourcesSharedModelsTranslationSet
   * @throws IOException if the JSON string is invalid with respect to GlobalResourcesSharedModelsTranslationSet
   */
  public static GlobalResourcesSharedModelsTranslationSet fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GlobalResourcesSharedModelsTranslationSet.class);
  }

  /**
   * Convert an instance of GlobalResourcesSharedModelsTranslationSet to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

