/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.APIIPagedResponseGlobalResourcesSharedModelsStringDefinition;
import org.openapitools.client.model.APIModelsApiError;
import org.openapitools.client.model.GlobalResourcesSharedModelsStringDefinition;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class StringDefinitionsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public StringDefinitionsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public StringDefinitionsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for stringDefinitionsGetDefinition
     * @param ID  (required)
     * @param includeTranslations Optional. Indicates whether to include the StringTranslations for the StringDefinition. Defaults to false. (optional)
     * @param includeDeletedLanguages Optional. Indicates whether to include languages marked as deleted. includeTranslations must be true. Defaults to false. (optional)
     * @param languageIds Optional. A comma-delimited list of language ids. Only StringTranslation objects with a matching language id will be returned. Optional. By default all locales are returned. includeTranslations must be true. The StringDefinition is still returned even if the filtered translations list is empty. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stringDefinitionsGetDefinitionCall(String ID, Boolean includeTranslations, Boolean includeDeletedLanguages, String languageIds, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v2/StringDefinitions/{ID}"
            .replace("{" + "ID" + "}", localVarApiClient.escapeString(ID.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (includeTranslations != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeTranslations", includeTranslations));
        }

        if (includeDeletedLanguages != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeDeletedLanguages", includeDeletedLanguages));
        }

        if (languageIds != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("languageIds", languageIds));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call stringDefinitionsGetDefinitionValidateBeforeCall(String ID, Boolean includeTranslations, Boolean includeDeletedLanguages, String languageIds, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'ID' is set
        if (ID == null) {
            throw new ApiException("Missing the required parameter 'ID' when calling stringDefinitionsGetDefinition(Async)");
        }

        return stringDefinitionsGetDefinitionCall(ID, includeTranslations, includeDeletedLanguages, languageIds, _callback);

    }

    /**
     * Get a paged response of Global String Definitions.
     * No Documentation Found.
     * @param ID  (required)
     * @param includeTranslations Optional. Indicates whether to include the StringTranslations for the StringDefinition. Defaults to false. (optional)
     * @param includeDeletedLanguages Optional. Indicates whether to include languages marked as deleted. includeTranslations must be true. Defaults to false. (optional)
     * @param languageIds Optional. A comma-delimited list of language ids. Only StringTranslation objects with a matching language id will be returned. Optional. By default all locales are returned. includeTranslations must be true. The StringDefinition is still returned even if the filtered translations list is empty. (optional)
     * @return GlobalResourcesSharedModelsStringDefinition
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public GlobalResourcesSharedModelsStringDefinition stringDefinitionsGetDefinition(String ID, Boolean includeTranslations, Boolean includeDeletedLanguages, String languageIds) throws ApiException {
        ApiResponse<GlobalResourcesSharedModelsStringDefinition> localVarResp = stringDefinitionsGetDefinitionWithHttpInfo(ID, includeTranslations, includeDeletedLanguages, languageIds);
        return localVarResp.getData();
    }

    /**
     * Get a paged response of Global String Definitions.
     * No Documentation Found.
     * @param ID  (required)
     * @param includeTranslations Optional. Indicates whether to include the StringTranslations for the StringDefinition. Defaults to false. (optional)
     * @param includeDeletedLanguages Optional. Indicates whether to include languages marked as deleted. includeTranslations must be true. Defaults to false. (optional)
     * @param languageIds Optional. A comma-delimited list of language ids. Only StringTranslation objects with a matching language id will be returned. Optional. By default all locales are returned. includeTranslations must be true. The StringDefinition is still returned even if the filtered translations list is empty. (optional)
     * @return ApiResponse&lt;GlobalResourcesSharedModelsStringDefinition&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<GlobalResourcesSharedModelsStringDefinition> stringDefinitionsGetDefinitionWithHttpInfo(String ID, Boolean includeTranslations, Boolean includeDeletedLanguages, String languageIds) throws ApiException {
        okhttp3.Call localVarCall = stringDefinitionsGetDefinitionValidateBeforeCall(ID, includeTranslations, includeDeletedLanguages, languageIds, null);
        Type localVarReturnType = new TypeToken<GlobalResourcesSharedModelsStringDefinition>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a paged response of Global String Definitions. (asynchronously)
     * No Documentation Found.
     * @param ID  (required)
     * @param includeTranslations Optional. Indicates whether to include the StringTranslations for the StringDefinition. Defaults to false. (optional)
     * @param includeDeletedLanguages Optional. Indicates whether to include languages marked as deleted. includeTranslations must be true. Defaults to false. (optional)
     * @param languageIds Optional. A comma-delimited list of language ids. Only StringTranslation objects with a matching language id will be returned. Optional. By default all locales are returned. includeTranslations must be true. The StringDefinition is still returned even if the filtered translations list is empty. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stringDefinitionsGetDefinitionAsync(String ID, Boolean includeTranslations, Boolean includeDeletedLanguages, String languageIds, final ApiCallback<GlobalResourcesSharedModelsStringDefinition> _callback) throws ApiException {

        okhttp3.Call localVarCall = stringDefinitionsGetDefinitionValidateBeforeCall(ID, includeTranslations, includeDeletedLanguages, languageIds, _callback);
        Type localVarReturnType = new TypeToken<GlobalResourcesSharedModelsStringDefinition>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for stringDefinitionsGetDefinitions
     * @param limit Optional. The page limit. The default page limit is 10. Ignored if &#39;stringIds&#39; is provided. (optional)
     * @param modifiedAfterTimestamp Optional. Return only the StringDefinition objects that have a Timestamp value greater than that provided. This will be an encoded byte array. (optional)
     * @param includeTranslations Optional. Indicates whether to include the StringTranslations for the StringDefinition. Defaults to false. (optional)
     * @param stringText Optional. The text for which to search in the StringDefinition object’s translations. Only StringDefinition objects for matching StringTranslation objects are returned. Does not filter if no value is provided. Supports beginning and/or ending wildcards. includeTranslations must be true. (optional)
     * @param descriptionText Optional. The text for which to search in the StringDefinition description field. Only matching objects are returned. Does not filter if no value is provided. Supports beginning and/or ending wildcards. (optional)
     * @param useFullText Optional. This flag is used to determin whether to use the FullText Search or not. (optional)
     * @param includeDeletedLanguages Optional. Indicates whether to include languages marked as deleted. includeTranslations must be true. Defaults to false. (optional)
     * @param languageIds Optional. A comma-delimited list of language ids. Only StringTranslation objects with a matching language id will be returned. Optional. By default all locales are returned. includeTranslations must be true. The StringDefinition is still returned even if the filtered translations list is empty. (optional)
     * @param stringIds Optional. A comma-delimited list of string ids. Up to 40 string IDs may be provided. May not be used with &#39;modifiedAfterTimestamp&#39;, &#39;stringText&#39;, &#39;descriptionText&#39;, or &#39;useFullText&#39;. (optional)
     * @param matchingTranslationsOnly Optional. If false, all translations for returned String Definitions are included. Must be used with &#39;stringText&#39; provided and &#39;includeTranslations&#39; &#x3D; true. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stringDefinitionsGetDefinitionsCall(Integer limit, String modifiedAfterTimestamp, Boolean includeTranslations, String stringText, String descriptionText, Boolean useFullText, Boolean includeDeletedLanguages, String languageIds, String stringIds, Boolean matchingTranslationsOnly, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/api/v2/StringDefinitions";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (modifiedAfterTimestamp != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("modifiedAfterTimestamp", modifiedAfterTimestamp));
        }

        if (includeTranslations != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeTranslations", includeTranslations));
        }

        if (stringText != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("stringText", stringText));
        }

        if (descriptionText != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("descriptionText", descriptionText));
        }

        if (useFullText != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("useFullText", useFullText));
        }

        if (includeDeletedLanguages != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("includeDeletedLanguages", includeDeletedLanguages));
        }

        if (languageIds != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("languageIds", languageIds));
        }

        if (stringIds != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("stringIds", stringIds));
        }

        if (matchingTranslationsOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("matchingTranslationsOnly", matchingTranslationsOnly));
        }

        final String[] localVarAccepts = {
            "application/json",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call stringDefinitionsGetDefinitionsValidateBeforeCall(Integer limit, String modifiedAfterTimestamp, Boolean includeTranslations, String stringText, String descriptionText, Boolean useFullText, Boolean includeDeletedLanguages, String languageIds, String stringIds, Boolean matchingTranslationsOnly, final ApiCallback _callback) throws ApiException {
        return stringDefinitionsGetDefinitionsCall(limit, modifiedAfterTimestamp, includeTranslations, stringText, descriptionText, useFullText, includeDeletedLanguages, languageIds, stringIds, matchingTranslationsOnly, _callback);

    }

    /**
     * Get a paged response of Global String Definitions.
     * No Documentation Found.
     * @param limit Optional. The page limit. The default page limit is 10. Ignored if &#39;stringIds&#39; is provided. (optional)
     * @param modifiedAfterTimestamp Optional. Return only the StringDefinition objects that have a Timestamp value greater than that provided. This will be an encoded byte array. (optional)
     * @param includeTranslations Optional. Indicates whether to include the StringTranslations for the StringDefinition. Defaults to false. (optional)
     * @param stringText Optional. The text for which to search in the StringDefinition object’s translations. Only StringDefinition objects for matching StringTranslation objects are returned. Does not filter if no value is provided. Supports beginning and/or ending wildcards. includeTranslations must be true. (optional)
     * @param descriptionText Optional. The text for which to search in the StringDefinition description field. Only matching objects are returned. Does not filter if no value is provided. Supports beginning and/or ending wildcards. (optional)
     * @param useFullText Optional. This flag is used to determin whether to use the FullText Search or not. (optional)
     * @param includeDeletedLanguages Optional. Indicates whether to include languages marked as deleted. includeTranslations must be true. Defaults to false. (optional)
     * @param languageIds Optional. A comma-delimited list of language ids. Only StringTranslation objects with a matching language id will be returned. Optional. By default all locales are returned. includeTranslations must be true. The StringDefinition is still returned even if the filtered translations list is empty. (optional)
     * @param stringIds Optional. A comma-delimited list of string ids. Up to 40 string IDs may be provided. May not be used with &#39;modifiedAfterTimestamp&#39;, &#39;stringText&#39;, &#39;descriptionText&#39;, or &#39;useFullText&#39;. (optional)
     * @param matchingTranslationsOnly Optional. If false, all translations for returned String Definitions are included. Must be used with &#39;stringText&#39; provided and &#39;includeTranslations&#39; &#x3D; true. (optional)
     * @return APIIPagedResponseGlobalResourcesSharedModelsStringDefinition
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public APIIPagedResponseGlobalResourcesSharedModelsStringDefinition stringDefinitionsGetDefinitions(Integer limit, String modifiedAfterTimestamp, Boolean includeTranslations, String stringText, String descriptionText, Boolean useFullText, Boolean includeDeletedLanguages, String languageIds, String stringIds, Boolean matchingTranslationsOnly) throws ApiException {
        ApiResponse<APIIPagedResponseGlobalResourcesSharedModelsStringDefinition> localVarResp = stringDefinitionsGetDefinitionsWithHttpInfo(limit, modifiedAfterTimestamp, includeTranslations, stringText, descriptionText, useFullText, includeDeletedLanguages, languageIds, stringIds, matchingTranslationsOnly);
        return localVarResp.getData();
    }

    /**
     * Get a paged response of Global String Definitions.
     * No Documentation Found.
     * @param limit Optional. The page limit. The default page limit is 10. Ignored if &#39;stringIds&#39; is provided. (optional)
     * @param modifiedAfterTimestamp Optional. Return only the StringDefinition objects that have a Timestamp value greater than that provided. This will be an encoded byte array. (optional)
     * @param includeTranslations Optional. Indicates whether to include the StringTranslations for the StringDefinition. Defaults to false. (optional)
     * @param stringText Optional. The text for which to search in the StringDefinition object’s translations. Only StringDefinition objects for matching StringTranslation objects are returned. Does not filter if no value is provided. Supports beginning and/or ending wildcards. includeTranslations must be true. (optional)
     * @param descriptionText Optional. The text for which to search in the StringDefinition description field. Only matching objects are returned. Does not filter if no value is provided. Supports beginning and/or ending wildcards. (optional)
     * @param useFullText Optional. This flag is used to determin whether to use the FullText Search or not. (optional)
     * @param includeDeletedLanguages Optional. Indicates whether to include languages marked as deleted. includeTranslations must be true. Defaults to false. (optional)
     * @param languageIds Optional. A comma-delimited list of language ids. Only StringTranslation objects with a matching language id will be returned. Optional. By default all locales are returned. includeTranslations must be true. The StringDefinition is still returned even if the filtered translations list is empty. (optional)
     * @param stringIds Optional. A comma-delimited list of string ids. Up to 40 string IDs may be provided. May not be used with &#39;modifiedAfterTimestamp&#39;, &#39;stringText&#39;, &#39;descriptionText&#39;, or &#39;useFullText&#39;. (optional)
     * @param matchingTranslationsOnly Optional. If false, all translations for returned String Definitions are included. Must be used with &#39;stringText&#39; provided and &#39;includeTranslations&#39; &#x3D; true. (optional)
     * @return ApiResponse&lt;APIIPagedResponseGlobalResourcesSharedModelsStringDefinition&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<APIIPagedResponseGlobalResourcesSharedModelsStringDefinition> stringDefinitionsGetDefinitionsWithHttpInfo(Integer limit, String modifiedAfterTimestamp, Boolean includeTranslations, String stringText, String descriptionText, Boolean useFullText, Boolean includeDeletedLanguages, String languageIds, String stringIds, Boolean matchingTranslationsOnly) throws ApiException {
        okhttp3.Call localVarCall = stringDefinitionsGetDefinitionsValidateBeforeCall(limit, modifiedAfterTimestamp, includeTranslations, stringText, descriptionText, useFullText, includeDeletedLanguages, languageIds, stringIds, matchingTranslationsOnly, null);
        Type localVarReturnType = new TypeToken<APIIPagedResponseGlobalResourcesSharedModelsStringDefinition>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get a paged response of Global String Definitions. (asynchronously)
     * No Documentation Found.
     * @param limit Optional. The page limit. The default page limit is 10. Ignored if &#39;stringIds&#39; is provided. (optional)
     * @param modifiedAfterTimestamp Optional. Return only the StringDefinition objects that have a Timestamp value greater than that provided. This will be an encoded byte array. (optional)
     * @param includeTranslations Optional. Indicates whether to include the StringTranslations for the StringDefinition. Defaults to false. (optional)
     * @param stringText Optional. The text for which to search in the StringDefinition object’s translations. Only StringDefinition objects for matching StringTranslation objects are returned. Does not filter if no value is provided. Supports beginning and/or ending wildcards. includeTranslations must be true. (optional)
     * @param descriptionText Optional. The text for which to search in the StringDefinition description field. Only matching objects are returned. Does not filter if no value is provided. Supports beginning and/or ending wildcards. (optional)
     * @param useFullText Optional. This flag is used to determin whether to use the FullText Search or not. (optional)
     * @param includeDeletedLanguages Optional. Indicates whether to include languages marked as deleted. includeTranslations must be true. Defaults to false. (optional)
     * @param languageIds Optional. A comma-delimited list of language ids. Only StringTranslation objects with a matching language id will be returned. Optional. By default all locales are returned. includeTranslations must be true. The StringDefinition is still returned even if the filtered translations list is empty. (optional)
     * @param stringIds Optional. A comma-delimited list of string ids. Up to 40 string IDs may be provided. May not be used with &#39;modifiedAfterTimestamp&#39;, &#39;stringText&#39;, &#39;descriptionText&#39;, or &#39;useFullText&#39;. (optional)
     * @param matchingTranslationsOnly Optional. If false, all translations for returned String Definitions are included. Must be used with &#39;stringText&#39; provided and &#39;includeTranslations&#39; &#x3D; true. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stringDefinitionsGetDefinitionsAsync(Integer limit, String modifiedAfterTimestamp, Boolean includeTranslations, String stringText, String descriptionText, Boolean useFullText, Boolean includeDeletedLanguages, String languageIds, String stringIds, Boolean matchingTranslationsOnly, final ApiCallback<APIIPagedResponseGlobalResourcesSharedModelsStringDefinition> _callback) throws ApiException {

        okhttp3.Call localVarCall = stringDefinitionsGetDefinitionsValidateBeforeCall(limit, modifiedAfterTimestamp, includeTranslations, stringText, descriptionText, useFullText, includeDeletedLanguages, languageIds, stringIds, matchingTranslationsOnly, _callback);
        Type localVarReturnType = new TypeToken<APIIPagedResponseGlobalResourcesSharedModelsStringDefinition>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for stringDefinitionsPostDefinition
     * @param globalResourcesSharedModelsStringDefinition The StringDefinition Object array, along with originating translation. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stringDefinitionsPostDefinitionCall(List<GlobalResourcesSharedModelsStringDefinition> globalResourcesSharedModelsStringDefinition, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = globalResourcesSharedModelsStringDefinition;

        // create path and map variables
        String localVarPath = "/api/v2/StringDefinitions/Batch";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json",
            "application/x-www-form-urlencoded",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call stringDefinitionsPostDefinitionValidateBeforeCall(List<GlobalResourcesSharedModelsStringDefinition> globalResourcesSharedModelsStringDefinition, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'globalResourcesSharedModelsStringDefinition' is set
        if (globalResourcesSharedModelsStringDefinition == null) {
            throw new ApiException("Missing the required parameter 'globalResourcesSharedModelsStringDefinition' when calling stringDefinitionsPostDefinition(Async)");
        }

        return stringDefinitionsPostDefinitionCall(globalResourcesSharedModelsStringDefinition, _callback);

    }

    /**
     * Create StringDefinition object. The originating translation must be provided. Accepts an array of StringDefinition objects. Returns nothing.
     * No Documentation Found.
     * @param globalResourcesSharedModelsStringDefinition The StringDefinition Object array, along with originating translation. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public void stringDefinitionsPostDefinition(List<GlobalResourcesSharedModelsStringDefinition> globalResourcesSharedModelsStringDefinition) throws ApiException {
        stringDefinitionsPostDefinitionWithHttpInfo(globalResourcesSharedModelsStringDefinition);
    }

    /**
     * Create StringDefinition object. The originating translation must be provided. Accepts an array of StringDefinition objects. Returns nothing.
     * No Documentation Found.
     * @param globalResourcesSharedModelsStringDefinition The StringDefinition Object array, along with originating translation. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> stringDefinitionsPostDefinitionWithHttpInfo(List<GlobalResourcesSharedModelsStringDefinition> globalResourcesSharedModelsStringDefinition) throws ApiException {
        okhttp3.Call localVarCall = stringDefinitionsPostDefinitionValidateBeforeCall(globalResourcesSharedModelsStringDefinition, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Create StringDefinition object. The originating translation must be provided. Accepts an array of StringDefinition objects. Returns nothing. (asynchronously)
     * No Documentation Found.
     * @param globalResourcesSharedModelsStringDefinition The StringDefinition Object array, along with originating translation. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stringDefinitionsPostDefinitionAsync(List<GlobalResourcesSharedModelsStringDefinition> globalResourcesSharedModelsStringDefinition, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = stringDefinitionsPostDefinitionValidateBeforeCall(globalResourcesSharedModelsStringDefinition, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for stringDefinitionsUpdateDefinitions
     * @param globalResourcesSharedModelsStringDefinition The Array of Definitions to update (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stringDefinitionsUpdateDefinitionsCall(List<GlobalResourcesSharedModelsStringDefinition> globalResourcesSharedModelsStringDefinition, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = globalResourcesSharedModelsStringDefinition;

        // create path and map variables
        String localVarPath = "/api/v2/StringDefinitions/Batch";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "*/*"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json",
            "application/x-www-form-urlencoded",
            "application/xml",
            "text/json",
            "text/xml"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call stringDefinitionsUpdateDefinitionsValidateBeforeCall(List<GlobalResourcesSharedModelsStringDefinition> globalResourcesSharedModelsStringDefinition, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'globalResourcesSharedModelsStringDefinition' is set
        if (globalResourcesSharedModelsStringDefinition == null) {
            throw new ApiException("Missing the required parameter 'globalResourcesSharedModelsStringDefinition' when calling stringDefinitionsUpdateDefinitions(Async)");
        }

        return stringDefinitionsUpdateDefinitionsCall(globalResourcesSharedModelsStringDefinition, _callback);

    }

    /**
     * Update StringDefinition objects. Accepts an array of StringDefinition objects. This endpoint will add StringDefinitionChange objects to the database. The DescriptionForTranslator may not be modified after a String is submitted for translation.
     * No Documentation Found.
     * @param globalResourcesSharedModelsStringDefinition The Array of Definitions to update (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public void stringDefinitionsUpdateDefinitions(List<GlobalResourcesSharedModelsStringDefinition> globalResourcesSharedModelsStringDefinition) throws ApiException {
        stringDefinitionsUpdateDefinitionsWithHttpInfo(globalResourcesSharedModelsStringDefinition);
    }

    /**
     * Update StringDefinition objects. Accepts an array of StringDefinition objects. This endpoint will add StringDefinitionChange objects to the database. The DescriptionForTranslator may not be modified after a String is submitted for translation.
     * No Documentation Found.
     * @param globalResourcesSharedModelsStringDefinition The Array of Definitions to update (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> stringDefinitionsUpdateDefinitionsWithHttpInfo(List<GlobalResourcesSharedModelsStringDefinition> globalResourcesSharedModelsStringDefinition) throws ApiException {
        okhttp3.Call localVarCall = stringDefinitionsUpdateDefinitionsValidateBeforeCall(globalResourcesSharedModelsStringDefinition, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Update StringDefinition objects. Accepts an array of StringDefinition objects. This endpoint will add StringDefinitionChange objects to the database. The DescriptionForTranslator may not be modified after a String is submitted for translation. (asynchronously)
     * No Documentation Found.
     * @param globalResourcesSharedModelsStringDefinition The Array of Definitions to update (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td> No Content </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> API Error Response </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call stringDefinitionsUpdateDefinitionsAsync(List<GlobalResourcesSharedModelsStringDefinition> globalResourcesSharedModelsStringDefinition, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = stringDefinitionsUpdateDefinitionsValidateBeforeCall(globalResourcesSharedModelsStringDefinition, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
