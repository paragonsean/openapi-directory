/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * APIModelsNotification
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:35.511967-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class APIModelsNotification {
  public static final String SERIALIZED_NAME_CC_ADDRESSES = "CC_Addresses";
  @SerializedName(SERIALIZED_NAME_CC_ADDRESSES)
  private List<String> ccAddresses = new ArrayList<>();

  public static final String SERIALIZED_NAME_IS_BODY_HTML = "IsBodyHtml";
  @SerializedName(SERIALIZED_NAME_IS_BODY_HTML)
  private Boolean isBodyHtml;

  public static final String SERIALIZED_NAME_MESSAGE_BODY = "MessageBody";
  @SerializedName(SERIALIZED_NAME_MESSAGE_BODY)
  private String messageBody;

  public static final String SERIALIZED_NAME_SUBJECT = "Subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public static final String SERIALIZED_NAME_TO_ADDRESSES = "To_Addresses";
  @SerializedName(SERIALIZED_NAME_TO_ADDRESSES)
  private List<String> toAddresses = new ArrayList<>();

  public APIModelsNotification() {
  }

  public APIModelsNotification ccAddresses(List<String> ccAddresses) {
    this.ccAddresses = ccAddresses;
    return this;
  }

  public APIModelsNotification addCcAddressesItem(String ccAddressesItem) {
    if (this.ccAddresses == null) {
      this.ccAddresses = new ArrayList<>();
    }
    this.ccAddresses.add(ccAddressesItem);
    return this;
  }

  /**
   * Get ccAddresses
   * @return ccAddresses
   */
  @javax.annotation.Nullable
  public List<String> getCcAddresses() {
    return ccAddresses;
  }

  public void setCcAddresses(List<String> ccAddresses) {
    this.ccAddresses = ccAddresses;
  }


  public APIModelsNotification isBodyHtml(Boolean isBodyHtml) {
    this.isBodyHtml = isBodyHtml;
    return this;
  }

  /**
   * Get isBodyHtml
   * @return isBodyHtml
   */
  @javax.annotation.Nonnull
  public Boolean getIsBodyHtml() {
    return isBodyHtml;
  }

  public void setIsBodyHtml(Boolean isBodyHtml) {
    this.isBodyHtml = isBodyHtml;
  }


  public APIModelsNotification messageBody(String messageBody) {
    this.messageBody = messageBody;
    return this;
  }

  /**
   * Get messageBody
   * @return messageBody
   */
  @javax.annotation.Nonnull
  public String getMessageBody() {
    return messageBody;
  }

  public void setMessageBody(String messageBody) {
    this.messageBody = messageBody;
  }


  public APIModelsNotification subject(String subject) {
    this.subject = subject;
    return this;
  }

  /**
   * Get subject
   * @return subject
   */
  @javax.annotation.Nonnull
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }


  public APIModelsNotification toAddresses(List<String> toAddresses) {
    this.toAddresses = toAddresses;
    return this;
  }

  public APIModelsNotification addToAddressesItem(String toAddressesItem) {
    if (this.toAddresses == null) {
      this.toAddresses = new ArrayList<>();
    }
    this.toAddresses.add(toAddressesItem);
    return this;
  }

  /**
   * Get toAddresses
   * @return toAddresses
   */
  @javax.annotation.Nonnull
  public List<String> getToAddresses() {
    return toAddresses;
  }

  public void setToAddresses(List<String> toAddresses) {
    this.toAddresses = toAddresses;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    APIModelsNotification apIModelsNotification = (APIModelsNotification) o;
    return Objects.equals(this.ccAddresses, apIModelsNotification.ccAddresses) &&
        Objects.equals(this.isBodyHtml, apIModelsNotification.isBodyHtml) &&
        Objects.equals(this.messageBody, apIModelsNotification.messageBody) &&
        Objects.equals(this.subject, apIModelsNotification.subject) &&
        Objects.equals(this.toAddresses, apIModelsNotification.toAddresses);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ccAddresses, isBodyHtml, messageBody, subject, toAddresses);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class APIModelsNotification {\n");
    sb.append("    ccAddresses: ").append(toIndentedString(ccAddresses)).append("\n");
    sb.append("    isBodyHtml: ").append(toIndentedString(isBodyHtml)).append("\n");
    sb.append("    messageBody: ").append(toIndentedString(messageBody)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    toAddresses: ").append(toIndentedString(toAddresses)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("CC_Addresses");
    openapiFields.add("IsBodyHtml");
    openapiFields.add("MessageBody");
    openapiFields.add("Subject");
    openapiFields.add("To_Addresses");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("IsBodyHtml");
    openapiRequiredFields.add("MessageBody");
    openapiRequiredFields.add("Subject");
    openapiRequiredFields.add("To_Addresses");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to APIModelsNotification
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!APIModelsNotification.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in APIModelsNotification is not found in the empty JSON string", APIModelsNotification.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!APIModelsNotification.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `APIModelsNotification` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : APIModelsNotification.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the optional json data is an array if present
      if (jsonObj.get("CC_Addresses") != null && !jsonObj.get("CC_Addresses").isJsonNull() && !jsonObj.get("CC_Addresses").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `CC_Addresses` to be an array in the JSON string but got `%s`", jsonObj.get("CC_Addresses").toString()));
      }
      if (!jsonObj.get("MessageBody").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `MessageBody` to be a primitive type in the JSON string but got `%s`", jsonObj.get("MessageBody").toString()));
      }
      if (!jsonObj.get("Subject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Subject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Subject").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("To_Addresses") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("To_Addresses").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `To_Addresses` to be an array in the JSON string but got `%s`", jsonObj.get("To_Addresses").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!APIModelsNotification.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'APIModelsNotification' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<APIModelsNotification> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(APIModelsNotification.class));

       return (TypeAdapter<T>) new TypeAdapter<APIModelsNotification>() {
           @Override
           public void write(JsonWriter out, APIModelsNotification value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public APIModelsNotification read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of APIModelsNotification given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of APIModelsNotification
   * @throws IOException if the JSON string is invalid with respect to APIModelsNotification
   */
  public static APIModelsNotification fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, APIModelsNotification.class);
  }

  /**
   * Convert an instance of APIModelsNotification to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

