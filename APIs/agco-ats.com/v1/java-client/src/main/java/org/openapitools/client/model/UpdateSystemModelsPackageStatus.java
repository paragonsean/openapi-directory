/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UpdateSystemModelsPackageStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:35.511967-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UpdateSystemModelsPackageStatus {
  public static final String SERIALIZED_NAME_CLIENT_I_D = "ClientID";
  @SerializedName(SERIALIZED_NAME_CLIENT_I_D)
  private String clientID;

  public static final String SERIALIZED_NAME_CLIENT_KEY = "ClientKey";
  @SerializedName(SERIALIZED_NAME_CLIENT_KEY)
  private String clientKey;

  public static final String SERIALIZED_NAME_DOWNLOAD_TIME = "DownloadTime";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD_TIME)
  private String downloadTime;

  public static final String SERIALIZED_NAME_DOWNLOADED = "Downloaded";
  @SerializedName(SERIALIZED_NAME_DOWNLOADED)
  private String downloaded;

  public static final String SERIALIZED_NAME_INSTALL_COMPLETED = "InstallCompleted";
  @SerializedName(SERIALIZED_NAME_INSTALL_COMPLETED)
  private String installCompleted;

  public static final String SERIALIZED_NAME_INSTALL_RESULT = "InstallResult";
  @SerializedName(SERIALIZED_NAME_INSTALL_RESULT)
  private String installResult;

  public static final String SERIALIZED_NAME_INSTALL_STARTED = "InstallStarted";
  @SerializedName(SERIALIZED_NAME_INSTALL_STARTED)
  private String installStarted;

  public static final String SERIALIZED_NAME_INSTALL_TIME = "InstallTime";
  @SerializedName(SERIALIZED_NAME_INSTALL_TIME)
  private String installTime;

  public static final String SERIALIZED_NAME_PERCENTAGE = "Percentage";
  @SerializedName(SERIALIZED_NAME_PERCENTAGE)
  private String percentage;

  public static final String SERIALIZED_NAME_SIZE = "Size";
  @SerializedName(SERIALIZED_NAME_SIZE)
  private String size;

  public static final String SERIALIZED_NAME_TIMESTAMP = "Timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  private OffsetDateTime timestamp;

  public UpdateSystemModelsPackageStatus() {
  }

  public UpdateSystemModelsPackageStatus clientID(String clientID) {
    this.clientID = clientID;
    return this;
  }

  /**
   * The id of the client
   * @return clientID
   */
  @javax.annotation.Nullable
  public String getClientID() {
    return clientID;
  }

  public void setClientID(String clientID) {
    this.clientID = clientID;
  }


  public UpdateSystemModelsPackageStatus clientKey(String clientKey) {
    this.clientKey = clientKey;
    return this;
  }

  /**
   * The client&#39;s tag
   * @return clientKey
   */
  @javax.annotation.Nullable
  public String getClientKey() {
    return clientKey;
  }

  public void setClientKey(String clientKey) {
    this.clientKey = clientKey;
  }


  public UpdateSystemModelsPackageStatus downloadTime(String downloadTime) {
    this.downloadTime = downloadTime;
    return this;
  }

  /**
   * The amount of time spent downloading
   * @return downloadTime
   */
  @javax.annotation.Nullable
  public String getDownloadTime() {
    return downloadTime;
  }

  public void setDownloadTime(String downloadTime) {
    this.downloadTime = downloadTime;
  }


  public UpdateSystemModelsPackageStatus downloaded(String downloaded) {
    this.downloaded = downloaded;
    return this;
  }

  /**
   * The number of bytes downloaded
   * @return downloaded
   */
  @javax.annotation.Nullable
  public String getDownloaded() {
    return downloaded;
  }

  public void setDownloaded(String downloaded) {
    this.downloaded = downloaded;
  }


  public UpdateSystemModelsPackageStatus installCompleted(String installCompleted) {
    this.installCompleted = installCompleted;
    return this;
  }

  /**
   * The time the package completed
   * @return installCompleted
   */
  @javax.annotation.Nullable
  public String getInstallCompleted() {
    return installCompleted;
  }

  public void setInstallCompleted(String installCompleted) {
    this.installCompleted = installCompleted;
  }


  public UpdateSystemModelsPackageStatus installResult(String installResult) {
    this.installResult = installResult;
    return this;
  }

  /**
   * The package result
   * @return installResult
   */
  @javax.annotation.Nullable
  public String getInstallResult() {
    return installResult;
  }

  public void setInstallResult(String installResult) {
    this.installResult = installResult;
  }


  public UpdateSystemModelsPackageStatus installStarted(String installStarted) {
    this.installStarted = installStarted;
    return this;
  }

  /**
   * The time the package was started
   * @return installStarted
   */
  @javax.annotation.Nullable
  public String getInstallStarted() {
    return installStarted;
  }

  public void setInstallStarted(String installStarted) {
    this.installStarted = installStarted;
  }


  public UpdateSystemModelsPackageStatus installTime(String installTime) {
    this.installTime = installTime;
    return this;
  }

  /**
   * The amount of time required to run the package
   * @return installTime
   */
  @javax.annotation.Nullable
  public String getInstallTime() {
    return installTime;
  }

  public void setInstallTime(String installTime) {
    this.installTime = installTime;
  }


  public UpdateSystemModelsPackageStatus percentage(String percentage) {
    this.percentage = percentage;
    return this;
  }

  /**
   * The download completion percentage
   * @return percentage
   */
  @javax.annotation.Nullable
  public String getPercentage() {
    return percentage;
  }

  public void setPercentage(String percentage) {
    this.percentage = percentage;
  }


  public UpdateSystemModelsPackageStatus size(String size) {
    this.size = size;
    return this;
  }

  /**
   * The total size of the package
   * @return size
   */
  @javax.annotation.Nullable
  public String getSize() {
    return size;
  }

  public void setSize(String size) {
    this.size = size;
  }


  public UpdateSystemModelsPackageStatus timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * The time the status was last updated
   * @return timestamp
   */
  @javax.annotation.Nullable
  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateSystemModelsPackageStatus updateSystemModelsPackageStatus = (UpdateSystemModelsPackageStatus) o;
    return Objects.equals(this.clientID, updateSystemModelsPackageStatus.clientID) &&
        Objects.equals(this.clientKey, updateSystemModelsPackageStatus.clientKey) &&
        Objects.equals(this.downloadTime, updateSystemModelsPackageStatus.downloadTime) &&
        Objects.equals(this.downloaded, updateSystemModelsPackageStatus.downloaded) &&
        Objects.equals(this.installCompleted, updateSystemModelsPackageStatus.installCompleted) &&
        Objects.equals(this.installResult, updateSystemModelsPackageStatus.installResult) &&
        Objects.equals(this.installStarted, updateSystemModelsPackageStatus.installStarted) &&
        Objects.equals(this.installTime, updateSystemModelsPackageStatus.installTime) &&
        Objects.equals(this.percentage, updateSystemModelsPackageStatus.percentage) &&
        Objects.equals(this.size, updateSystemModelsPackageStatus.size) &&
        Objects.equals(this.timestamp, updateSystemModelsPackageStatus.timestamp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientID, clientKey, downloadTime, downloaded, installCompleted, installResult, installStarted, installTime, percentage, size, timestamp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateSystemModelsPackageStatus {\n");
    sb.append("    clientID: ").append(toIndentedString(clientID)).append("\n");
    sb.append("    clientKey: ").append(toIndentedString(clientKey)).append("\n");
    sb.append("    downloadTime: ").append(toIndentedString(downloadTime)).append("\n");
    sb.append("    downloaded: ").append(toIndentedString(downloaded)).append("\n");
    sb.append("    installCompleted: ").append(toIndentedString(installCompleted)).append("\n");
    sb.append("    installResult: ").append(toIndentedString(installResult)).append("\n");
    sb.append("    installStarted: ").append(toIndentedString(installStarted)).append("\n");
    sb.append("    installTime: ").append(toIndentedString(installTime)).append("\n");
    sb.append("    percentage: ").append(toIndentedString(percentage)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ClientID");
    openapiFields.add("ClientKey");
    openapiFields.add("DownloadTime");
    openapiFields.add("Downloaded");
    openapiFields.add("InstallCompleted");
    openapiFields.add("InstallResult");
    openapiFields.add("InstallStarted");
    openapiFields.add("InstallTime");
    openapiFields.add("Percentage");
    openapiFields.add("Size");
    openapiFields.add("Timestamp");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UpdateSystemModelsPackageStatus
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UpdateSystemModelsPackageStatus.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UpdateSystemModelsPackageStatus is not found in the empty JSON string", UpdateSystemModelsPackageStatus.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UpdateSystemModelsPackageStatus.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UpdateSystemModelsPackageStatus` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("ClientID") != null && !jsonObj.get("ClientID").isJsonNull()) && !jsonObj.get("ClientID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ClientID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ClientID").toString()));
      }
      if ((jsonObj.get("ClientKey") != null && !jsonObj.get("ClientKey").isJsonNull()) && !jsonObj.get("ClientKey").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ClientKey` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ClientKey").toString()));
      }
      if ((jsonObj.get("DownloadTime") != null && !jsonObj.get("DownloadTime").isJsonNull()) && !jsonObj.get("DownloadTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DownloadTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DownloadTime").toString()));
      }
      if ((jsonObj.get("Downloaded") != null && !jsonObj.get("Downloaded").isJsonNull()) && !jsonObj.get("Downloaded").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Downloaded` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Downloaded").toString()));
      }
      if ((jsonObj.get("InstallCompleted") != null && !jsonObj.get("InstallCompleted").isJsonNull()) && !jsonObj.get("InstallCompleted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InstallCompleted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InstallCompleted").toString()));
      }
      if ((jsonObj.get("InstallResult") != null && !jsonObj.get("InstallResult").isJsonNull()) && !jsonObj.get("InstallResult").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InstallResult` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InstallResult").toString()));
      }
      if ((jsonObj.get("InstallStarted") != null && !jsonObj.get("InstallStarted").isJsonNull()) && !jsonObj.get("InstallStarted").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InstallStarted` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InstallStarted").toString()));
      }
      if ((jsonObj.get("InstallTime") != null && !jsonObj.get("InstallTime").isJsonNull()) && !jsonObj.get("InstallTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `InstallTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("InstallTime").toString()));
      }
      if ((jsonObj.get("Percentage") != null && !jsonObj.get("Percentage").isJsonNull()) && !jsonObj.get("Percentage").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Percentage` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Percentage").toString()));
      }
      if ((jsonObj.get("Size") != null && !jsonObj.get("Size").isJsonNull()) && !jsonObj.get("Size").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Size` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Size").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UpdateSystemModelsPackageStatus.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UpdateSystemModelsPackageStatus' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UpdateSystemModelsPackageStatus> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UpdateSystemModelsPackageStatus.class));

       return (TypeAdapter<T>) new TypeAdapter<UpdateSystemModelsPackageStatus>() {
           @Override
           public void write(JsonWriter out, UpdateSystemModelsPackageStatus value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UpdateSystemModelsPackageStatus read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UpdateSystemModelsPackageStatus given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UpdateSystemModelsPackageStatus
   * @throws IOException if the JSON string is invalid with respect to UpdateSystemModelsPackageStatus
   */
  public static UpdateSystemModelsPackageStatus fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UpdateSystemModelsPackageStatus.class);
  }

  /**
   * Convert an instance of UpdateSystemModelsPackageStatus to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

