/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AuthorizationCodesSharedModelsDataField;
import org.openapitools.client.model.AuthorizationCodesSharedModelsValidationField;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the model used to define how a type of authorization code is generated.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:35.511967-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AuthorizationCodesSharedModelsAuthorizationCodeDefinition {
  public static final String SERIALIZED_NAME_AUTHORIZATION_I_D = "AuthorizationID";
  @SerializedName(SERIALIZED_NAME_AUTHORIZATION_I_D)
  private String authorizationID;

  public static final String SERIALIZED_NAME_CREATED_BY_USER_I_D = "CreatedByUserID";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_USER_I_D)
  private Integer createdByUserID;

  public static final String SERIALIZED_NAME_CREATED_DATE = "CreatedDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_DATA_FIELDS = "DataFields";
  @SerializedName(SERIALIZED_NAME_DATA_FIELDS)
  private List<AuthorizationCodesSharedModelsDataField> dataFields = new ArrayList<>();

  public static final String SERIALIZED_NAME_DELETED_BY_USER_I_D = "DeletedByUserID";
  @SerializedName(SERIALIZED_NAME_DELETED_BY_USER_I_D)
  private Integer deletedByUserID;

  public static final String SERIALIZED_NAME_DELETED_DATE = "DeletedDate";
  @SerializedName(SERIALIZED_NAME_DELETED_DATE)
  private OffsetDateTime deletedDate;

  public static final String SERIALIZED_NAME_DESCRIPTION = "Description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_DURATION_ACCURACY = "DurationAccuracy";
  @SerializedName(SERIALIZED_NAME_DURATION_ACCURACY)
  private Integer durationAccuracy;

  public static final String SERIALIZED_NAME_DURATION_AMOUNT = "DurationAmount";
  @SerializedName(SERIALIZED_NAME_DURATION_AMOUNT)
  private Integer durationAmount;

  /**
   * The units of duration used to calculate the Authorization Code. Defaults to &#39;Days&#39;. May not be updated.
   */
  @JsonAdapter(DurationUnitsEnum.Adapter.class)
  public enum DurationUnitsEnum {
    WEEKS("Weeks"),
    
    DAYS("Days"),
    
    HOURS("Hours"),
    
    MINUTES("Minutes");

    private String value;

    DurationUnitsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static DurationUnitsEnum fromValue(String value) {
      for (DurationUnitsEnum b : DurationUnitsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<DurationUnitsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final DurationUnitsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public DurationUnitsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return DurationUnitsEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      DurationUnitsEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_DURATION_UNITS = "DurationUnits";
  @SerializedName(SERIALIZED_NAME_DURATION_UNITS)
  private DurationUnitsEnum durationUnits;

  public static final String SERIALIZED_NAME_HASH_LENGTH = "HashLength";
  @SerializedName(SERIALIZED_NAME_HASH_LENGTH)
  private Integer hashLength;

  public static final String SERIALIZED_NAME_I_D = "ID";
  @SerializedName(SERIALIZED_NAME_I_D)
  private String ID;

  public static final String SERIALIZED_NAME_IS_DELETED = "IsDeleted";
  @SerializedName(SERIALIZED_NAME_IS_DELETED)
  private Boolean isDeleted;

  public static final String SERIALIZED_NAME_NAME = "Name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_RANDOM_LENGTH = "RandomLength";
  @SerializedName(SERIALIZED_NAME_RANDOM_LENGTH)
  private Integer randomLength;

  public static final String SERIALIZED_NAME_VALIDATION_FIELDS = "ValidationFields";
  @SerializedName(SERIALIZED_NAME_VALIDATION_FIELDS)
  private List<AuthorizationCodesSharedModelsValidationField> validationFields = new ArrayList<>();

  public AuthorizationCodesSharedModelsAuthorizationCodeDefinition() {
  }

  public AuthorizationCodesSharedModelsAuthorizationCodeDefinition authorizationID(String authorizationID) {
    this.authorizationID = authorizationID;
    return this;
  }

  /**
   * The value used for securing codes generated.
   * @return authorizationID
   */
  @javax.annotation.Nullable
  public String getAuthorizationID() {
    return authorizationID;
  }

  public void setAuthorizationID(String authorizationID) {
    this.authorizationID = authorizationID;
  }


  public AuthorizationCodesSharedModelsAuthorizationCodeDefinition createdByUserID(Integer createdByUserID) {
    this.createdByUserID = createdByUserID;
    return this;
  }

  /**
   * The ID of the user that created this definition. Read only.
   * @return createdByUserID
   */
  @javax.annotation.Nullable
  public Integer getCreatedByUserID() {
    return createdByUserID;
  }

  public void setCreatedByUserID(Integer createdByUserID) {
    this.createdByUserID = createdByUserID;
  }


  public AuthorizationCodesSharedModelsAuthorizationCodeDefinition createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * A timestamp of when this definition was created. Read only.
   * @return createdDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public AuthorizationCodesSharedModelsAuthorizationCodeDefinition dataFields(List<AuthorizationCodesSharedModelsDataField> dataFields) {
    this.dataFields = dataFields;
    return this;
  }

  public AuthorizationCodesSharedModelsAuthorizationCodeDefinition addDataFieldsItem(AuthorizationCodesSharedModelsDataField dataFieldsItem) {
    if (this.dataFields == null) {
      this.dataFields = new ArrayList<>();
    }
    this.dataFields.add(dataFieldsItem);
    return this;
  }

  /**
   * The defined fields to include in authorization codes generated from this definition. May not be updated.
   * @return dataFields
   */
  @javax.annotation.Nullable
  public List<AuthorizationCodesSharedModelsDataField> getDataFields() {
    return dataFields;
  }

  public void setDataFields(List<AuthorizationCodesSharedModelsDataField> dataFields) {
    this.dataFields = dataFields;
  }


  public AuthorizationCodesSharedModelsAuthorizationCodeDefinition deletedByUserID(Integer deletedByUserID) {
    this.deletedByUserID = deletedByUserID;
    return this;
  }

  /**
   * The ID of the user that deleted this definition. Read only.
   * @return deletedByUserID
   */
  @javax.annotation.Nullable
  public Integer getDeletedByUserID() {
    return deletedByUserID;
  }

  public void setDeletedByUserID(Integer deletedByUserID) {
    this.deletedByUserID = deletedByUserID;
  }


  public AuthorizationCodesSharedModelsAuthorizationCodeDefinition deletedDate(OffsetDateTime deletedDate) {
    this.deletedDate = deletedDate;
    return this;
  }

  /**
   * A timestamp of when this definition was deleted. Read only.
   * @return deletedDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDeletedDate() {
    return deletedDate;
  }

  public void setDeletedDate(OffsetDateTime deletedDate) {
    this.deletedDate = deletedDate;
  }


  public AuthorizationCodesSharedModelsAuthorizationCodeDefinition description(String description) {
    this.description = description;
    return this;
  }

  /**
   * A description of this definition. May not be updated.
   * @return description
   */
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }


  public AuthorizationCodesSharedModelsAuthorizationCodeDefinition durationAccuracy(Integer durationAccuracy) {
    this.durationAccuracy = durationAccuracy;
    return this;
  }

  /**
   * The number of bits used for timestamp verification. Defaults to 5. May not be updated.
   * @return durationAccuracy
   */
  @javax.annotation.Nullable
  public Integer getDurationAccuracy() {
    return durationAccuracy;
  }

  public void setDurationAccuracy(Integer durationAccuracy) {
    this.durationAccuracy = durationAccuracy;
  }


  public AuthorizationCodesSharedModelsAuthorizationCodeDefinition durationAmount(Integer durationAmount) {
    this.durationAmount = durationAmount;
    return this;
  }

  /**
   * The amount of duration for the specified duration unit used to calculate the Authorization Code. Defaults to 1. May not be updated.
   * @return durationAmount
   */
  @javax.annotation.Nullable
  public Integer getDurationAmount() {
    return durationAmount;
  }

  public void setDurationAmount(Integer durationAmount) {
    this.durationAmount = durationAmount;
  }


  public AuthorizationCodesSharedModelsAuthorizationCodeDefinition durationUnits(DurationUnitsEnum durationUnits) {
    this.durationUnits = durationUnits;
    return this;
  }

  /**
   * The units of duration used to calculate the Authorization Code. Defaults to &#39;Days&#39;. May not be updated.
   * @return durationUnits
   */
  @javax.annotation.Nullable
  public DurationUnitsEnum getDurationUnits() {
    return durationUnits;
  }

  public void setDurationUnits(DurationUnitsEnum durationUnits) {
    this.durationUnits = durationUnits;
  }


  public AuthorizationCodesSharedModelsAuthorizationCodeDefinition hashLength(Integer hashLength) {
    this.hashLength = hashLength;
    return this;
  }

  /**
   * The bit length of the hash data which will be used for the authorization code. Defaults to 20. May not be updated.
   * @return hashLength
   */
  @javax.annotation.Nullable
  public Integer getHashLength() {
    return hashLength;
  }

  public void setHashLength(Integer hashLength) {
    this.hashLength = hashLength;
  }


  public AuthorizationCodesSharedModelsAuthorizationCodeDefinition ID(String ID) {
    this.ID = ID;
    return this;
  }

  /**
   * The ID of the authorization code definition. Read only.
   * @return ID
   */
  @javax.annotation.Nullable
  public String getID() {
    return ID;
  }

  public void setID(String ID) {
    this.ID = ID;
  }


  public AuthorizationCodesSharedModelsAuthorizationCodeDefinition isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Indicates whether this definition is enabled. True if generating codes is disabled.
   * @return isDeleted
   */
  @javax.annotation.Nullable
  public Boolean getIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public AuthorizationCodesSharedModelsAuthorizationCodeDefinition name(String name) {
    this.name = name;
    return this;
  }

  /**
   * The name of the authorization code definition. May not be updated.
   * @return name
   */
  @javax.annotation.Nonnull
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public AuthorizationCodesSharedModelsAuthorizationCodeDefinition randomLength(Integer randomLength) {
    this.randomLength = randomLength;
    return this;
  }

  /**
   * The bit length of random data which will be included in the authorization code.  This is necessary to allow creation of \&quot;identical\&quot; authorization codes containing the same timestamp. Defaults to 5. May not be updated.
   * @return randomLength
   */
  @javax.annotation.Nullable
  public Integer getRandomLength() {
    return randomLength;
  }

  public void setRandomLength(Integer randomLength) {
    this.randomLength = randomLength;
  }


  public AuthorizationCodesSharedModelsAuthorizationCodeDefinition validationFields(List<AuthorizationCodesSharedModelsValidationField> validationFields) {
    this.validationFields = validationFields;
    return this;
  }

  public AuthorizationCodesSharedModelsAuthorizationCodeDefinition addValidationFieldsItem(AuthorizationCodesSharedModelsValidationField validationFieldsItem) {
    if (this.validationFields == null) {
      this.validationFields = new ArrayList<>();
    }
    this.validationFields.add(validationFieldsItem);
    return this;
  }

  /**
   * The defined fields to verify when reading authorization codes generated from this definition. May not be updated.
   * @return validationFields
   */
  @javax.annotation.Nullable
  public List<AuthorizationCodesSharedModelsValidationField> getValidationFields() {
    return validationFields;
  }

  public void setValidationFields(List<AuthorizationCodesSharedModelsValidationField> validationFields) {
    this.validationFields = validationFields;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthorizationCodesSharedModelsAuthorizationCodeDefinition authorizationCodesSharedModelsAuthorizationCodeDefinition = (AuthorizationCodesSharedModelsAuthorizationCodeDefinition) o;
    return Objects.equals(this.authorizationID, authorizationCodesSharedModelsAuthorizationCodeDefinition.authorizationID) &&
        Objects.equals(this.createdByUserID, authorizationCodesSharedModelsAuthorizationCodeDefinition.createdByUserID) &&
        Objects.equals(this.createdDate, authorizationCodesSharedModelsAuthorizationCodeDefinition.createdDate) &&
        Objects.equals(this.dataFields, authorizationCodesSharedModelsAuthorizationCodeDefinition.dataFields) &&
        Objects.equals(this.deletedByUserID, authorizationCodesSharedModelsAuthorizationCodeDefinition.deletedByUserID) &&
        Objects.equals(this.deletedDate, authorizationCodesSharedModelsAuthorizationCodeDefinition.deletedDate) &&
        Objects.equals(this.description, authorizationCodesSharedModelsAuthorizationCodeDefinition.description) &&
        Objects.equals(this.durationAccuracy, authorizationCodesSharedModelsAuthorizationCodeDefinition.durationAccuracy) &&
        Objects.equals(this.durationAmount, authorizationCodesSharedModelsAuthorizationCodeDefinition.durationAmount) &&
        Objects.equals(this.durationUnits, authorizationCodesSharedModelsAuthorizationCodeDefinition.durationUnits) &&
        Objects.equals(this.hashLength, authorizationCodesSharedModelsAuthorizationCodeDefinition.hashLength) &&
        Objects.equals(this.ID, authorizationCodesSharedModelsAuthorizationCodeDefinition.ID) &&
        Objects.equals(this.isDeleted, authorizationCodesSharedModelsAuthorizationCodeDefinition.isDeleted) &&
        Objects.equals(this.name, authorizationCodesSharedModelsAuthorizationCodeDefinition.name) &&
        Objects.equals(this.randomLength, authorizationCodesSharedModelsAuthorizationCodeDefinition.randomLength) &&
        Objects.equals(this.validationFields, authorizationCodesSharedModelsAuthorizationCodeDefinition.validationFields);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authorizationID, createdByUserID, createdDate, dataFields, deletedByUserID, deletedDate, description, durationAccuracy, durationAmount, durationUnits, hashLength, ID, isDeleted, name, randomLength, validationFields);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthorizationCodesSharedModelsAuthorizationCodeDefinition {\n");
    sb.append("    authorizationID: ").append(toIndentedString(authorizationID)).append("\n");
    sb.append("    createdByUserID: ").append(toIndentedString(createdByUserID)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    dataFields: ").append(toIndentedString(dataFields)).append("\n");
    sb.append("    deletedByUserID: ").append(toIndentedString(deletedByUserID)).append("\n");
    sb.append("    deletedDate: ").append(toIndentedString(deletedDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    durationAccuracy: ").append(toIndentedString(durationAccuracy)).append("\n");
    sb.append("    durationAmount: ").append(toIndentedString(durationAmount)).append("\n");
    sb.append("    durationUnits: ").append(toIndentedString(durationUnits)).append("\n");
    sb.append("    hashLength: ").append(toIndentedString(hashLength)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    randomLength: ").append(toIndentedString(randomLength)).append("\n");
    sb.append("    validationFields: ").append(toIndentedString(validationFields)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("AuthorizationID");
    openapiFields.add("CreatedByUserID");
    openapiFields.add("CreatedDate");
    openapiFields.add("DataFields");
    openapiFields.add("DeletedByUserID");
    openapiFields.add("DeletedDate");
    openapiFields.add("Description");
    openapiFields.add("DurationAccuracy");
    openapiFields.add("DurationAmount");
    openapiFields.add("DurationUnits");
    openapiFields.add("HashLength");
    openapiFields.add("ID");
    openapiFields.add("IsDeleted");
    openapiFields.add("Name");
    openapiFields.add("RandomLength");
    openapiFields.add("ValidationFields");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Name");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AuthorizationCodesSharedModelsAuthorizationCodeDefinition
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AuthorizationCodesSharedModelsAuthorizationCodeDefinition.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AuthorizationCodesSharedModelsAuthorizationCodeDefinition is not found in the empty JSON string", AuthorizationCodesSharedModelsAuthorizationCodeDefinition.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AuthorizationCodesSharedModelsAuthorizationCodeDefinition.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AuthorizationCodesSharedModelsAuthorizationCodeDefinition` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : AuthorizationCodesSharedModelsAuthorizationCodeDefinition.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("AuthorizationID") != null && !jsonObj.get("AuthorizationID").isJsonNull()) && !jsonObj.get("AuthorizationID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `AuthorizationID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("AuthorizationID").toString()));
      }
      if (jsonObj.get("DataFields") != null && !jsonObj.get("DataFields").isJsonNull()) {
        JsonArray jsonArraydataFields = jsonObj.getAsJsonArray("DataFields");
        if (jsonArraydataFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("DataFields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `DataFields` to be an array in the JSON string but got `%s`", jsonObj.get("DataFields").toString()));
          }

          // validate the optional field `DataFields` (array)
          for (int i = 0; i < jsonArraydataFields.size(); i++) {
            AuthorizationCodesSharedModelsDataField.validateJsonElement(jsonArraydataFields.get(i));
          };
        }
      }
      if ((jsonObj.get("Description") != null && !jsonObj.get("Description").isJsonNull()) && !jsonObj.get("Description").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Description` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Description").toString()));
      }
      if ((jsonObj.get("DurationUnits") != null && !jsonObj.get("DurationUnits").isJsonNull()) && !jsonObj.get("DurationUnits").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DurationUnits` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DurationUnits").toString()));
      }
      // validate the optional field `DurationUnits`
      if (jsonObj.get("DurationUnits") != null && !jsonObj.get("DurationUnits").isJsonNull()) {
        DurationUnitsEnum.validateJsonElement(jsonObj.get("DurationUnits"));
      }
      if ((jsonObj.get("ID") != null && !jsonObj.get("ID").isJsonNull()) && !jsonObj.get("ID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ID").toString()));
      }
      if (!jsonObj.get("Name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Name").toString()));
      }
      if (jsonObj.get("ValidationFields") != null && !jsonObj.get("ValidationFields").isJsonNull()) {
        JsonArray jsonArrayvalidationFields = jsonObj.getAsJsonArray("ValidationFields");
        if (jsonArrayvalidationFields != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ValidationFields").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ValidationFields` to be an array in the JSON string but got `%s`", jsonObj.get("ValidationFields").toString()));
          }

          // validate the optional field `ValidationFields` (array)
          for (int i = 0; i < jsonArrayvalidationFields.size(); i++) {
            AuthorizationCodesSharedModelsValidationField.validateJsonElement(jsonArrayvalidationFields.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AuthorizationCodesSharedModelsAuthorizationCodeDefinition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AuthorizationCodesSharedModelsAuthorizationCodeDefinition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AuthorizationCodesSharedModelsAuthorizationCodeDefinition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AuthorizationCodesSharedModelsAuthorizationCodeDefinition.class));

       return (TypeAdapter<T>) new TypeAdapter<AuthorizationCodesSharedModelsAuthorizationCodeDefinition>() {
           @Override
           public void write(JsonWriter out, AuthorizationCodesSharedModelsAuthorizationCodeDefinition value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AuthorizationCodesSharedModelsAuthorizationCodeDefinition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AuthorizationCodesSharedModelsAuthorizationCodeDefinition given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AuthorizationCodesSharedModelsAuthorizationCodeDefinition
   * @throws IOException if the JSON string is invalid with respect to AuthorizationCodesSharedModelsAuthorizationCodeDefinition
   */
  public static AuthorizationCodesSharedModelsAuthorizationCodeDefinition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AuthorizationCodesSharedModelsAuthorizationCodeDefinition.class);
  }

  /**
   * Convert an instance of AuthorizationCodesSharedModelsAuthorizationCodeDefinition to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

