/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Information needed to translate a string in a translation set
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:35.511967-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GlobalResourcesSharedModelsTranslationSetSourceString {
  public static final String SERIALIZED_NAME_DESCRIPTION_FOR_TRANSLATOR = "DescriptionForTranslator";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION_FOR_TRANSLATOR)
  private String descriptionForTranslator;

  public static final String SERIALIZED_NAME_LANGUAGE_I_D = "LanguageID";
  @SerializedName(SERIALIZED_NAME_LANGUAGE_I_D)
  private Integer languageID;

  public static final String SERIALIZED_NAME_STRING_I_D = "StringID";
  @SerializedName(SERIALIZED_NAME_STRING_I_D)
  private String stringID;

  public static final String SERIALIZED_NAME_STRING_VALUE = "StringValue";
  @SerializedName(SERIALIZED_NAME_STRING_VALUE)
  private String stringValue;

  public GlobalResourcesSharedModelsTranslationSetSourceString() {
  }

  public GlobalResourcesSharedModelsTranslationSetSourceString descriptionForTranslator(String descriptionForTranslator) {
    this.descriptionForTranslator = descriptionForTranslator;
    return this;
  }

  /**
   * A description of the string to translate. This should contain context and parameter count.
   * @return descriptionForTranslator
   */
  @javax.annotation.Nullable
  public String getDescriptionForTranslator() {
    return descriptionForTranslator;
  }

  public void setDescriptionForTranslator(String descriptionForTranslator) {
    this.descriptionForTranslator = descriptionForTranslator;
  }


  public GlobalResourcesSharedModelsTranslationSetSourceString languageID(Integer languageID) {
    this.languageID = languageID;
    return this;
  }

  /**
   * The ID of the language from which to translate the string
   * @return languageID
   */
  @javax.annotation.Nullable
  public Integer getLanguageID() {
    return languageID;
  }

  public void setLanguageID(Integer languageID) {
    this.languageID = languageID;
  }


  public GlobalResourcesSharedModelsTranslationSetSourceString stringID(String stringID) {
    this.stringID = stringID;
    return this;
  }

  /**
   * The ID of the string to translate
   * @return stringID
   */
  @javax.annotation.Nullable
  public String getStringID() {
    return stringID;
  }

  public void setStringID(String stringID) {
    this.stringID = stringID;
  }


  public GlobalResourcesSharedModelsTranslationSetSourceString stringValue(String stringValue) {
    this.stringValue = stringValue;
    return this;
  }

  /**
   * The string to translate
   * @return stringValue
   */
  @javax.annotation.Nullable
  public String getStringValue() {
    return stringValue;
  }

  public void setStringValue(String stringValue) {
    this.stringValue = stringValue;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlobalResourcesSharedModelsTranslationSetSourceString globalResourcesSharedModelsTranslationSetSourceString = (GlobalResourcesSharedModelsTranslationSetSourceString) o;
    return Objects.equals(this.descriptionForTranslator, globalResourcesSharedModelsTranslationSetSourceString.descriptionForTranslator) &&
        Objects.equals(this.languageID, globalResourcesSharedModelsTranslationSetSourceString.languageID) &&
        Objects.equals(this.stringID, globalResourcesSharedModelsTranslationSetSourceString.stringID) &&
        Objects.equals(this.stringValue, globalResourcesSharedModelsTranslationSetSourceString.stringValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(descriptionForTranslator, languageID, stringID, stringValue);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlobalResourcesSharedModelsTranslationSetSourceString {\n");
    sb.append("    descriptionForTranslator: ").append(toIndentedString(descriptionForTranslator)).append("\n");
    sb.append("    languageID: ").append(toIndentedString(languageID)).append("\n");
    sb.append("    stringID: ").append(toIndentedString(stringID)).append("\n");
    sb.append("    stringValue: ").append(toIndentedString(stringValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("DescriptionForTranslator");
    openapiFields.add("LanguageID");
    openapiFields.add("StringID");
    openapiFields.add("StringValue");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GlobalResourcesSharedModelsTranslationSetSourceString
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GlobalResourcesSharedModelsTranslationSetSourceString.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GlobalResourcesSharedModelsTranslationSetSourceString is not found in the empty JSON string", GlobalResourcesSharedModelsTranslationSetSourceString.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GlobalResourcesSharedModelsTranslationSetSourceString.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GlobalResourcesSharedModelsTranslationSetSourceString` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("DescriptionForTranslator") != null && !jsonObj.get("DescriptionForTranslator").isJsonNull()) && !jsonObj.get("DescriptionForTranslator").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DescriptionForTranslator` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DescriptionForTranslator").toString()));
      }
      if ((jsonObj.get("StringID") != null && !jsonObj.get("StringID").isJsonNull()) && !jsonObj.get("StringID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StringID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StringID").toString()));
      }
      if ((jsonObj.get("StringValue") != null && !jsonObj.get("StringValue").isJsonNull()) && !jsonObj.get("StringValue").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `StringValue` to be a primitive type in the JSON string but got `%s`", jsonObj.get("StringValue").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GlobalResourcesSharedModelsTranslationSetSourceString.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GlobalResourcesSharedModelsTranslationSetSourceString' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GlobalResourcesSharedModelsTranslationSetSourceString> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GlobalResourcesSharedModelsTranslationSetSourceString.class));

       return (TypeAdapter<T>) new TypeAdapter<GlobalResourcesSharedModelsTranslationSetSourceString>() {
           @Override
           public void write(JsonWriter out, GlobalResourcesSharedModelsTranslationSetSourceString value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GlobalResourcesSharedModelsTranslationSetSourceString read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GlobalResourcesSharedModelsTranslationSetSourceString given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GlobalResourcesSharedModelsTranslationSetSourceString
   * @throws IOException if the JSON string is invalid with respect to GlobalResourcesSharedModelsTranslationSetSourceString
   */
  public static GlobalResourcesSharedModelsTranslationSetSourceString fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GlobalResourcesSharedModelsTranslationSetSourceString.class);
  }

  /**
   * Convert an instance of GlobalResourcesSharedModelsTranslationSetSourceString to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

