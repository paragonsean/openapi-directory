/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * A request to translate specified strings into specified locales
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:35.511967-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GlobalResourcesSharedModelsTranslationRequest {
  public static final String SERIALIZED_NAME_APPROVAL_USER_ID = "ApprovalUserId";
  @SerializedName(SERIALIZED_NAME_APPROVAL_USER_ID)
  private Integer approvalUserId;

  public static final String SERIALIZED_NAME_CC_EMAIL_ADDRESSES = "CCEmailAddresses";
  @SerializedName(SERIALIZED_NAME_CC_EMAIL_ADDRESSES)
  private List<String> ccEmailAddresses = new ArrayList<>();

  public static final String SERIALIZED_NAME_CHARGE_TO_ACCOUNT = "ChargeToAccount";
  @SerializedName(SERIALIZED_NAME_CHARGE_TO_ACCOUNT)
  private String chargeToAccount;

  public static final String SERIALIZED_NAME_DEADLINE = "Deadline";
  @SerializedName(SERIALIZED_NAME_DEADLINE)
  private OffsetDateTime deadline;

  public static final String SERIALIZED_NAME_ID = "Id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_LOCALE_IDS = "LocaleIds";
  @SerializedName(SERIALIZED_NAME_LOCALE_IDS)
  private List<Integer> localeIds = new ArrayList<>();

  public static final String SERIALIZED_NAME_NOTES = "Notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_QUESTIONS_USER_ID = "QuestionsUserId";
  @SerializedName(SERIALIZED_NAME_QUESTIONS_USER_ID)
  private Integer questionsUserId;

  /**
   * The state of the request
   */
  @JsonAdapter(StateEnum.Adapter.class)
  public enum StateEnum {
    NOT_SUBMITTED("NotSubmitted"),
    
    SUBMITTED("Submitted"),
    
    CANCELLED("Cancelled"),
    
    COMPLETED("Completed");

    private String value;

    StateEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static StateEnum fromValue(String value) {
      for (StateEnum b : StateEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<StateEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final StateEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public StateEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return StateEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      StateEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_STATE = "State";
  @SerializedName(SERIALIZED_NAME_STATE)
  private StateEnum state;

  public static final String SERIALIZED_NAME_SUBMITTED_BY = "SubmittedBy";
  @SerializedName(SERIALIZED_NAME_SUBMITTED_BY)
  private Integer submittedBy;

  public static final String SERIALIZED_NAME_TRANSLATOR_EMAIL = "TranslatorEmail";
  @SerializedName(SERIALIZED_NAME_TRANSLATOR_EMAIL)
  private String translatorEmail;

  public static final String SERIALIZED_NAME_TRANSLATOR_NAME = "TranslatorName";
  @SerializedName(SERIALIZED_NAME_TRANSLATOR_NAME)
  private String translatorName;

  public GlobalResourcesSharedModelsTranslationRequest() {
  }

  public GlobalResourcesSharedModelsTranslationRequest approvalUserId(Integer approvalUserId) {
    this.approvalUserId = approvalUserId;
    return this;
  }

  /**
   * The ID of the user from which approval for the request is required
   * @return approvalUserId
   */
  @javax.annotation.Nullable
  public Integer getApprovalUserId() {
    return approvalUserId;
  }

  public void setApprovalUserId(Integer approvalUserId) {
    this.approvalUserId = approvalUserId;
  }


  public GlobalResourcesSharedModelsTranslationRequest ccEmailAddresses(List<String> ccEmailAddresses) {
    this.ccEmailAddresses = ccEmailAddresses;
    return this;
  }

  public GlobalResourcesSharedModelsTranslationRequest addCcEmailAddressesItem(String ccEmailAddressesItem) {
    if (this.ccEmailAddresses == null) {
      this.ccEmailAddresses = new ArrayList<>();
    }
    this.ccEmailAddresses.add(ccEmailAddressesItem);
    return this;
  }

  /**
   * Additional email addresses to CC on emails pertaining to the request
   * @return ccEmailAddresses
   */
  @javax.annotation.Nonnull
  public List<String> getCcEmailAddresses() {
    return ccEmailAddresses;
  }

  public void setCcEmailAddresses(List<String> ccEmailAddresses) {
    this.ccEmailAddresses = ccEmailAddresses;
  }


  public GlobalResourcesSharedModelsTranslationRequest chargeToAccount(String chargeToAccount) {
    this.chargeToAccount = chargeToAccount;
    return this;
  }

  /**
   * The account to charge for the request
   * @return chargeToAccount
   */
  @javax.annotation.Nonnull
  public String getChargeToAccount() {
    return chargeToAccount;
  }

  public void setChargeToAccount(String chargeToAccount) {
    this.chargeToAccount = chargeToAccount;
  }


  public GlobalResourcesSharedModelsTranslationRequest deadline(OffsetDateTime deadline) {
    this.deadline = deadline;
    return this;
  }

  /**
   * The date by which the translations in the request are needed. Defaults to 30 days from the current date
   * @return deadline
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getDeadline() {
    return deadline;
  }

  public void setDeadline(OffsetDateTime deadline) {
    this.deadline = deadline;
  }


  public GlobalResourcesSharedModelsTranslationRequest id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * The ID of the request
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public GlobalResourcesSharedModelsTranslationRequest localeIds(List<Integer> localeIds) {
    this.localeIds = localeIds;
    return this;
  }

  public GlobalResourcesSharedModelsTranslationRequest addLocaleIdsItem(Integer localeIdsItem) {
    if (this.localeIds == null) {
      this.localeIds = new ArrayList<>();
    }
    this.localeIds.add(localeIdsItem);
    return this;
  }

  /**
   * Locale IDs to which these strings are requested to be translated
   * @return localeIds
   */
  @javax.annotation.Nonnull
  public List<Integer> getLocaleIds() {
    return localeIds;
  }

  public void setLocaleIds(List<Integer> localeIds) {
    this.localeIds = localeIds;
  }


  public GlobalResourcesSharedModelsTranslationRequest notes(String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * Additional notes or comments about the request
   * @return notes
   */
  @javax.annotation.Nonnull
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  public GlobalResourcesSharedModelsTranslationRequest questionsUserId(Integer questionsUserId) {
    this.questionsUserId = questionsUserId;
    return this;
  }

  /**
   * The ID of the user to which to address questions regarding the request
   * @return questionsUserId
   */
  @javax.annotation.Nullable
  public Integer getQuestionsUserId() {
    return questionsUserId;
  }

  public void setQuestionsUserId(Integer questionsUserId) {
    this.questionsUserId = questionsUserId;
  }


  public GlobalResourcesSharedModelsTranslationRequest state(StateEnum state) {
    this.state = state;
    return this;
  }

  /**
   * The state of the request
   * @return state
   */
  @javax.annotation.Nonnull
  public StateEnum getState() {
    return state;
  }

  public void setState(StateEnum state) {
    this.state = state;
  }


  public GlobalResourcesSharedModelsTranslationRequest submittedBy(Integer submittedBy) {
    this.submittedBy = submittedBy;
    return this;
  }

  /**
   * The ID of the User that submitted the request
   * @return submittedBy
   */
  @javax.annotation.Nullable
  public Integer getSubmittedBy() {
    return submittedBy;
  }

  public void setSubmittedBy(Integer submittedBy) {
    this.submittedBy = submittedBy;
  }


  public GlobalResourcesSharedModelsTranslationRequest translatorEmail(String translatorEmail) {
    this.translatorEmail = translatorEmail;
    return this;
  }

  /**
   * The email address for the translator
   * @return translatorEmail
   */
  @javax.annotation.Nullable
  public String getTranslatorEmail() {
    return translatorEmail;
  }

  public void setTranslatorEmail(String translatorEmail) {
    this.translatorEmail = translatorEmail;
  }


  public GlobalResourcesSharedModelsTranslationRequest translatorName(String translatorName) {
    this.translatorName = translatorName;
    return this;
  }

  /**
   * The name of the translator
   * @return translatorName
   */
  @javax.annotation.Nullable
  public String getTranslatorName() {
    return translatorName;
  }

  public void setTranslatorName(String translatorName) {
    this.translatorName = translatorName;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GlobalResourcesSharedModelsTranslationRequest globalResourcesSharedModelsTranslationRequest = (GlobalResourcesSharedModelsTranslationRequest) o;
    return Objects.equals(this.approvalUserId, globalResourcesSharedModelsTranslationRequest.approvalUserId) &&
        Objects.equals(this.ccEmailAddresses, globalResourcesSharedModelsTranslationRequest.ccEmailAddresses) &&
        Objects.equals(this.chargeToAccount, globalResourcesSharedModelsTranslationRequest.chargeToAccount) &&
        Objects.equals(this.deadline, globalResourcesSharedModelsTranslationRequest.deadline) &&
        Objects.equals(this.id, globalResourcesSharedModelsTranslationRequest.id) &&
        Objects.equals(this.localeIds, globalResourcesSharedModelsTranslationRequest.localeIds) &&
        Objects.equals(this.notes, globalResourcesSharedModelsTranslationRequest.notes) &&
        Objects.equals(this.questionsUserId, globalResourcesSharedModelsTranslationRequest.questionsUserId) &&
        Objects.equals(this.state, globalResourcesSharedModelsTranslationRequest.state) &&
        Objects.equals(this.submittedBy, globalResourcesSharedModelsTranslationRequest.submittedBy) &&
        Objects.equals(this.translatorEmail, globalResourcesSharedModelsTranslationRequest.translatorEmail) &&
        Objects.equals(this.translatorName, globalResourcesSharedModelsTranslationRequest.translatorName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(approvalUserId, ccEmailAddresses, chargeToAccount, deadline, id, localeIds, notes, questionsUserId, state, submittedBy, translatorEmail, translatorName);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GlobalResourcesSharedModelsTranslationRequest {\n");
    sb.append("    approvalUserId: ").append(toIndentedString(approvalUserId)).append("\n");
    sb.append("    ccEmailAddresses: ").append(toIndentedString(ccEmailAddresses)).append("\n");
    sb.append("    chargeToAccount: ").append(toIndentedString(chargeToAccount)).append("\n");
    sb.append("    deadline: ").append(toIndentedString(deadline)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    localeIds: ").append(toIndentedString(localeIds)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    questionsUserId: ").append(toIndentedString(questionsUserId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    submittedBy: ").append(toIndentedString(submittedBy)).append("\n");
    sb.append("    translatorEmail: ").append(toIndentedString(translatorEmail)).append("\n");
    sb.append("    translatorName: ").append(toIndentedString(translatorName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("ApprovalUserId");
    openapiFields.add("CCEmailAddresses");
    openapiFields.add("ChargeToAccount");
    openapiFields.add("Deadline");
    openapiFields.add("Id");
    openapiFields.add("LocaleIds");
    openapiFields.add("Notes");
    openapiFields.add("QuestionsUserId");
    openapiFields.add("State");
    openapiFields.add("SubmittedBy");
    openapiFields.add("TranslatorEmail");
    openapiFields.add("TranslatorName");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("CCEmailAddresses");
    openapiRequiredFields.add("ChargeToAccount");
    openapiRequiredFields.add("Deadline");
    openapiRequiredFields.add("LocaleIds");
    openapiRequiredFields.add("Notes");
    openapiRequiredFields.add("State");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GlobalResourcesSharedModelsTranslationRequest
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GlobalResourcesSharedModelsTranslationRequest.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GlobalResourcesSharedModelsTranslationRequest is not found in the empty JSON string", GlobalResourcesSharedModelsTranslationRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GlobalResourcesSharedModelsTranslationRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GlobalResourcesSharedModelsTranslationRequest` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : GlobalResourcesSharedModelsTranslationRequest.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // ensure the required json array is present
      if (jsonObj.get("CCEmailAddresses") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("CCEmailAddresses").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `CCEmailAddresses` to be an array in the JSON string but got `%s`", jsonObj.get("CCEmailAddresses").toString()));
      }
      if (!jsonObj.get("ChargeToAccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `ChargeToAccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("ChargeToAccount").toString()));
      }
      // ensure the required json array is present
      if (jsonObj.get("LocaleIds") == null) {
        throw new IllegalArgumentException("Expected the field `linkedContent` to be an array in the JSON string but got `null`");
      } else if (!jsonObj.get("LocaleIds").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `LocaleIds` to be an array in the JSON string but got `%s`", jsonObj.get("LocaleIds").toString()));
      }
      if (!jsonObj.get("Notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Notes").toString()));
      }
      if (!jsonObj.get("State").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `State` to be a primitive type in the JSON string but got `%s`", jsonObj.get("State").toString()));
      }
      // validate the required field `State`
      StateEnum.validateJsonElement(jsonObj.get("State"));
      if ((jsonObj.get("TranslatorEmail") != null && !jsonObj.get("TranslatorEmail").isJsonNull()) && !jsonObj.get("TranslatorEmail").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TranslatorEmail` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TranslatorEmail").toString()));
      }
      if ((jsonObj.get("TranslatorName") != null && !jsonObj.get("TranslatorName").isJsonNull()) && !jsonObj.get("TranslatorName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `TranslatorName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("TranslatorName").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GlobalResourcesSharedModelsTranslationRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GlobalResourcesSharedModelsTranslationRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GlobalResourcesSharedModelsTranslationRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GlobalResourcesSharedModelsTranslationRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<GlobalResourcesSharedModelsTranslationRequest>() {
           @Override
           public void write(JsonWriter out, GlobalResourcesSharedModelsTranslationRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GlobalResourcesSharedModelsTranslationRequest read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GlobalResourcesSharedModelsTranslationRequest given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GlobalResourcesSharedModelsTranslationRequest
   * @throws IOException if the JSON string is invalid with respect to GlobalResourcesSharedModelsTranslationRequest
   */
  public static GlobalResourcesSharedModelsTranslationRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GlobalResourcesSharedModelsTranslationRequest.class);
  }

  /**
   * Convert an instance of GlobalResourcesSharedModelsTranslationRequest to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

