/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AuthorizationCodesSharedModelsParameter;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Represents the model containing an authorization code used to unlock a feature in machines and EDT
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:57:35.511967-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class AuthorizationCodesSharedModelsAuthorizationCode {
  public static final String SERIALIZED_NAME_CODE = "Code";
  @SerializedName(SERIALIZED_NAME_CODE)
  private String code;

  public static final String SERIALIZED_NAME_CREATED_BY_USER_I_D = "CreatedByUserID";
  @SerializedName(SERIALIZED_NAME_CREATED_BY_USER_I_D)
  private Integer createdByUserID;

  public static final String SERIALIZED_NAME_CREATED_DATE = "CreatedDate";
  @SerializedName(SERIALIZED_NAME_CREATED_DATE)
  private OffsetDateTime createdDate;

  public static final String SERIALIZED_NAME_DATA_PARAMETERS = "DataParameters";
  @SerializedName(SERIALIZED_NAME_DATA_PARAMETERS)
  private List<AuthorizationCodesSharedModelsParameter> dataParameters = new ArrayList<>();

  public static final String SERIALIZED_NAME_DEFINITION_I_D = "DefinitionID";
  @SerializedName(SERIALIZED_NAME_DEFINITION_I_D)
  private String definitionID;

  public static final String SERIALIZED_NAME_DELETED_BY_USER_I_D = "DeletedByUserID";
  @SerializedName(SERIALIZED_NAME_DELETED_BY_USER_I_D)
  private Integer deletedByUserID;

  public static final String SERIALIZED_NAME_DELETED_DATE = "DeletedDate";
  @SerializedName(SERIALIZED_NAME_DELETED_DATE)
  private OffsetDateTime deletedDate;

  public static final String SERIALIZED_NAME_EFFECTIVE_DATE = "EffectiveDate";
  @SerializedName(SERIALIZED_NAME_EFFECTIVE_DATE)
  private OffsetDateTime effectiveDate;

  public static final String SERIALIZED_NAME_I_D = "ID";
  @SerializedName(SERIALIZED_NAME_I_D)
  private Integer ID;

  public static final String SERIALIZED_NAME_IS_DELETED = "IsDeleted";
  @SerializedName(SERIALIZED_NAME_IS_DELETED)
  private Boolean isDeleted;

  public static final String SERIALIZED_NAME_VALIDATION_PARAMETERS = "ValidationParameters";
  @SerializedName(SERIALIZED_NAME_VALIDATION_PARAMETERS)
  private List<AuthorizationCodesSharedModelsParameter> validationParameters = new ArrayList<>();

  public AuthorizationCodesSharedModelsAuthorizationCode() {
  }

  public AuthorizationCodesSharedModelsAuthorizationCode code(String code) {
    this.code = code;
    return this;
  }

  /**
   * The code to enter to unlock a feature. Read only.
   * @return code
   */
  @javax.annotation.Nullable
  public String getCode() {
    return code;
  }

  public void setCode(String code) {
    this.code = code;
  }


  public AuthorizationCodesSharedModelsAuthorizationCode createdByUserID(Integer createdByUserID) {
    this.createdByUserID = createdByUserID;
    return this;
  }

  /**
   * The ID of the user that created this authorization code. Read only.
   * @return createdByUserID
   */
  @javax.annotation.Nullable
  public Integer getCreatedByUserID() {
    return createdByUserID;
  }

  public void setCreatedByUserID(Integer createdByUserID) {
    this.createdByUserID = createdByUserID;
  }


  public AuthorizationCodesSharedModelsAuthorizationCode createdDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
    return this;
  }

  /**
   * A timestamp of when this code was created. Read only.
   * @return createdDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedDate() {
    return createdDate;
  }

  public void setCreatedDate(OffsetDateTime createdDate) {
    this.createdDate = createdDate;
  }


  public AuthorizationCodesSharedModelsAuthorizationCode dataParameters(List<AuthorizationCodesSharedModelsParameter> dataParameters) {
    this.dataParameters = dataParameters;
    return this;
  }

  public AuthorizationCodesSharedModelsAuthorizationCode addDataParametersItem(AuthorizationCodesSharedModelsParameter dataParametersItem) {
    if (this.dataParameters == null) {
      this.dataParameters = new ArrayList<>();
    }
    this.dataParameters.add(dataParametersItem);
    return this;
  }

  /**
   * The parameters and values contained as data in this authorization code. May not be updated.
   * @return dataParameters
   */
  @javax.annotation.Nullable
  public List<AuthorizationCodesSharedModelsParameter> getDataParameters() {
    return dataParameters;
  }

  public void setDataParameters(List<AuthorizationCodesSharedModelsParameter> dataParameters) {
    this.dataParameters = dataParameters;
  }


  public AuthorizationCodesSharedModelsAuthorizationCode definitionID(String definitionID) {
    this.definitionID = definitionID;
    return this;
  }

  /**
   * The id of the definition for this authorization code. May not be updated.
   * @return definitionID
   */
  @javax.annotation.Nullable
  public String getDefinitionID() {
    return definitionID;
  }

  public void setDefinitionID(String definitionID) {
    this.definitionID = definitionID;
  }


  public AuthorizationCodesSharedModelsAuthorizationCode deletedByUserID(Integer deletedByUserID) {
    this.deletedByUserID = deletedByUserID;
    return this;
  }

  /**
   * The ID of the user that deleted this authorization code. Read only.
   * @return deletedByUserID
   */
  @javax.annotation.Nullable
  public Integer getDeletedByUserID() {
    return deletedByUserID;
  }

  public void setDeletedByUserID(Integer deletedByUserID) {
    this.deletedByUserID = deletedByUserID;
  }


  public AuthorizationCodesSharedModelsAuthorizationCode deletedDate(OffsetDateTime deletedDate) {
    this.deletedDate = deletedDate;
    return this;
  }

  /**
   * A timestamp of when this authorization code was deleted. Read only.
   * @return deletedDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDeletedDate() {
    return deletedDate;
  }

  public void setDeletedDate(OffsetDateTime deletedDate) {
    this.deletedDate = deletedDate;
  }


  public AuthorizationCodesSharedModelsAuthorizationCode effectiveDate(OffsetDateTime effectiveDate) {
    this.effectiveDate = effectiveDate;
    return this;
  }

  /**
   * A date at which this code should begin being valid. Optional. Set on create only.
   * @return effectiveDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getEffectiveDate() {
    return effectiveDate;
  }

  public void setEffectiveDate(OffsetDateTime effectiveDate) {
    this.effectiveDate = effectiveDate;
  }


  public AuthorizationCodesSharedModelsAuthorizationCode ID(Integer ID) {
    this.ID = ID;
    return this;
  }

  /**
   * The identifier for the authorization code. Read only.
   * @return ID
   */
  @javax.annotation.Nullable
  public Integer getID() {
    return ID;
  }

  public void setID(Integer ID) {
    this.ID = ID;
  }


  public AuthorizationCodesSharedModelsAuthorizationCode isDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Indicates whether this code is deleted.
   * @return isDeleted
   */
  @javax.annotation.Nullable
  public Boolean getIsDeleted() {
    return isDeleted;
  }

  public void setIsDeleted(Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public AuthorizationCodesSharedModelsAuthorizationCode validationParameters(List<AuthorizationCodesSharedModelsParameter> validationParameters) {
    this.validationParameters = validationParameters;
    return this;
  }

  public AuthorizationCodesSharedModelsAuthorizationCode addValidationParametersItem(AuthorizationCodesSharedModelsParameter validationParametersItem) {
    if (this.validationParameters == null) {
      this.validationParameters = new ArrayList<>();
    }
    this.validationParameters.add(validationParametersItem);
    return this;
  }

  /**
   * The parameters and values used to validate this authorization code. May not be updated.
   * @return validationParameters
   */
  @javax.annotation.Nullable
  public List<AuthorizationCodesSharedModelsParameter> getValidationParameters() {
    return validationParameters;
  }

  public void setValidationParameters(List<AuthorizationCodesSharedModelsParameter> validationParameters) {
    this.validationParameters = validationParameters;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuthorizationCodesSharedModelsAuthorizationCode authorizationCodesSharedModelsAuthorizationCode = (AuthorizationCodesSharedModelsAuthorizationCode) o;
    return Objects.equals(this.code, authorizationCodesSharedModelsAuthorizationCode.code) &&
        Objects.equals(this.createdByUserID, authorizationCodesSharedModelsAuthorizationCode.createdByUserID) &&
        Objects.equals(this.createdDate, authorizationCodesSharedModelsAuthorizationCode.createdDate) &&
        Objects.equals(this.dataParameters, authorizationCodesSharedModelsAuthorizationCode.dataParameters) &&
        Objects.equals(this.definitionID, authorizationCodesSharedModelsAuthorizationCode.definitionID) &&
        Objects.equals(this.deletedByUserID, authorizationCodesSharedModelsAuthorizationCode.deletedByUserID) &&
        Objects.equals(this.deletedDate, authorizationCodesSharedModelsAuthorizationCode.deletedDate) &&
        Objects.equals(this.effectiveDate, authorizationCodesSharedModelsAuthorizationCode.effectiveDate) &&
        Objects.equals(this.ID, authorizationCodesSharedModelsAuthorizationCode.ID) &&
        Objects.equals(this.isDeleted, authorizationCodesSharedModelsAuthorizationCode.isDeleted) &&
        Objects.equals(this.validationParameters, authorizationCodesSharedModelsAuthorizationCode.validationParameters);
  }

  @Override
  public int hashCode() {
    return Objects.hash(code, createdByUserID, createdDate, dataParameters, definitionID, deletedByUserID, deletedDate, effectiveDate, ID, isDeleted, validationParameters);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuthorizationCodesSharedModelsAuthorizationCode {\n");
    sb.append("    code: ").append(toIndentedString(code)).append("\n");
    sb.append("    createdByUserID: ").append(toIndentedString(createdByUserID)).append("\n");
    sb.append("    createdDate: ").append(toIndentedString(createdDate)).append("\n");
    sb.append("    dataParameters: ").append(toIndentedString(dataParameters)).append("\n");
    sb.append("    definitionID: ").append(toIndentedString(definitionID)).append("\n");
    sb.append("    deletedByUserID: ").append(toIndentedString(deletedByUserID)).append("\n");
    sb.append("    deletedDate: ").append(toIndentedString(deletedDate)).append("\n");
    sb.append("    effectiveDate: ").append(toIndentedString(effectiveDate)).append("\n");
    sb.append("    ID: ").append(toIndentedString(ID)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    validationParameters: ").append(toIndentedString(validationParameters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Code");
    openapiFields.add("CreatedByUserID");
    openapiFields.add("CreatedDate");
    openapiFields.add("DataParameters");
    openapiFields.add("DefinitionID");
    openapiFields.add("DeletedByUserID");
    openapiFields.add("DeletedDate");
    openapiFields.add("EffectiveDate");
    openapiFields.add("ID");
    openapiFields.add("IsDeleted");
    openapiFields.add("ValidationParameters");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to AuthorizationCodesSharedModelsAuthorizationCode
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!AuthorizationCodesSharedModelsAuthorizationCode.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in AuthorizationCodesSharedModelsAuthorizationCode is not found in the empty JSON string", AuthorizationCodesSharedModelsAuthorizationCode.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!AuthorizationCodesSharedModelsAuthorizationCode.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AuthorizationCodesSharedModelsAuthorizationCode` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Code") != null && !jsonObj.get("Code").isJsonNull()) && !jsonObj.get("Code").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Code` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Code").toString()));
      }
      if (jsonObj.get("DataParameters") != null && !jsonObj.get("DataParameters").isJsonNull()) {
        JsonArray jsonArraydataParameters = jsonObj.getAsJsonArray("DataParameters");
        if (jsonArraydataParameters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("DataParameters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `DataParameters` to be an array in the JSON string but got `%s`", jsonObj.get("DataParameters").toString()));
          }

          // validate the optional field `DataParameters` (array)
          for (int i = 0; i < jsonArraydataParameters.size(); i++) {
            AuthorizationCodesSharedModelsParameter.validateJsonElement(jsonArraydataParameters.get(i));
          };
        }
      }
      if ((jsonObj.get("DefinitionID") != null && !jsonObj.get("DefinitionID").isJsonNull()) && !jsonObj.get("DefinitionID").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `DefinitionID` to be a primitive type in the JSON string but got `%s`", jsonObj.get("DefinitionID").toString()));
      }
      if (jsonObj.get("ValidationParameters") != null && !jsonObj.get("ValidationParameters").isJsonNull()) {
        JsonArray jsonArrayvalidationParameters = jsonObj.getAsJsonArray("ValidationParameters");
        if (jsonArrayvalidationParameters != null) {
          // ensure the json data is an array
          if (!jsonObj.get("ValidationParameters").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `ValidationParameters` to be an array in the JSON string but got `%s`", jsonObj.get("ValidationParameters").toString()));
          }

          // validate the optional field `ValidationParameters` (array)
          for (int i = 0; i < jsonArrayvalidationParameters.size(); i++) {
            AuthorizationCodesSharedModelsParameter.validateJsonElement(jsonArrayvalidationParameters.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AuthorizationCodesSharedModelsAuthorizationCode.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AuthorizationCodesSharedModelsAuthorizationCode' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AuthorizationCodesSharedModelsAuthorizationCode> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AuthorizationCodesSharedModelsAuthorizationCode.class));

       return (TypeAdapter<T>) new TypeAdapter<AuthorizationCodesSharedModelsAuthorizationCode>() {
           @Override
           public void write(JsonWriter out, AuthorizationCodesSharedModelsAuthorizationCode value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AuthorizationCodesSharedModelsAuthorizationCode read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of AuthorizationCodesSharedModelsAuthorizationCode given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of AuthorizationCodesSharedModelsAuthorizationCode
   * @throws IOException if the JSON string is invalid with respect to AuthorizationCodesSharedModelsAuthorizationCode
   */
  public static AuthorizationCodesSharedModelsAuthorizationCode fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AuthorizationCodesSharedModelsAuthorizationCode.class);
  }

  /**
   * Convert an instance of AuthorizationCodesSharedModelsAuthorizationCode to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

