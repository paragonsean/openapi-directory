/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AGCOPowerServicesModelsECU;
import org.openapitools.client.model.AGCOPowerServicesModelsProductionData;
import org.openapitools.client.model.AGCOPowerServicesModelsUserStatus;
import org.openapitools.client.model.APIModelsApiError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AftermarketServicesApi
 */
@Disabled
public class AftermarketServicesApiTest {

    private final AftermarketServicesApi api = new AftermarketServicesApi();

    /**
     * No Documentation Found.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aftermarketServicesGetCertsTest() throws ApiException {
        Object response = api.aftermarketServicesGetCerts();
        // TODO: test validations
    }

    /**
     * Check whether there is connectivity to AGCO Power Web Services
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aftermarketServicesGetConnectionStatusTest() throws ApiException {
        Boolean response = api.aftermarketServicesGetConnectionStatus();
        // TODO: test validations
    }

    /**
     * Get injector codes given engine.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aftermarketServicesGetEngineIQACodesTest() throws ApiException {
        String serialNumber = null;
        String edTInstanceId = null;
        List<String> response = api.aftermarketServicesGetEngineIQACodes(serialNumber, edTInstanceId);
        // TODO: test validations
    }

    /**
     * Get production calibration data for given engine.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aftermarketServicesGetProductionDataTest() throws ApiException {
        String serialNumber = null;
        String edTInstanceId = null;
        List<AGCOPowerServicesModelsProductionData> response = api.aftermarketServicesGetProductionData(serialNumber, edTInstanceId);
        // TODO: test validations
    }

    /**
     * Retrieve the status of an EDT Kit Registration with AGCO Power Web Services
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aftermarketServicesGetUserStatusTest() throws ApiException {
        String voucherCode = null;
        String dealerCode = null;
        AGCOPowerServicesModelsUserStatus response = api.aftermarketServicesGetUserStatus(voucherCode, dealerCode);
        // TODO: test validations
    }

    /**
     * Activate or Deactivate an ECU, or Report an ECU as Damaged.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aftermarketServicesPutECUTest() throws ApiException {
        String serialNumber = null;
        String edTInstanceId = null;
        AGCOPowerServicesModelsECU agCOPowerServicesModelsECU = null;
        AGCOPowerServicesModelsECU response = api.aftermarketServicesPutECU(serialNumber, edTInstanceId, agCOPowerServicesModelsECU);
        // TODO: test validations
    }

    /**
     * Report the IQA codes used by an engine
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aftermarketServicesPutIQACodesTest() throws ApiException {
        String serialNumber = null;
        String edTInstanceId = null;
        List<String> requestBody = null;
        Boolean response = api.aftermarketServicesPutIQACodes(serialNumber, edTInstanceId, requestBody);
        // TODO: test validations
    }

    /**
     * Update the status of an EDT Kit Registration with AGCO Power Web Services
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void aftermarketServicesUpdateUserStatusTest() throws ApiException {
        AGCOPowerServicesModelsUserStatus agCOPowerServicesModelsUserStatus = null;
        Boolean response = api.aftermarketServicesUpdateUserStatus(agCOPowerServicesModelsUserStatus);
        // TODO: test validations
    }

}
