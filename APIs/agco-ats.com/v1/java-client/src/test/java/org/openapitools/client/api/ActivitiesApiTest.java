/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIModelsApiError;
import org.openapitools.client.model.APIPagedResponseBuildSystemSharedDTOActivity;
import org.openapitools.client.model.BuildSystemSharedDTOActivity;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ActivitiesApi
 */
@Disabled
public class ActivitiesApiTest {

    private final ActivitiesApi api = new ActivitiesApi();

    /**
     * Mark the delete flag for the Activity
     *
     * Deletes an Activity. When successful, the response is empty.  If unsuccessful, an appropriate              ApiError is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void activitiesDeleteActivityTest() throws ApiException {
        Integer activityID = null;
        api.activitiesDeleteActivity(activityID);
        // TODO: test validations
    }

    /**
     * Get Activities
     *
     * Gets a collection of Activities. When successful, the response is a PagedResponse of Activities.                If unsuccessful, an appropriate ApiError is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void activitiesGetActivitiesTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        Boolean isIncludeDeleted = null;
        APIPagedResponseBuildSystemSharedDTOActivity response = api.activitiesGetActivities(limit, offset, isIncludeDeleted);
        // TODO: test validations
    }

    /**
     * Get an Activity by ID
     *
     * Gets an Activity by ID. When successful, the response is the requested Activity.  If unsuccessful,              an appropriate ApiError is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void activitiesGetActivityTest() throws ApiException {
        Integer activityID = null;
        Boolean isIncludeDeleted = null;
        BuildSystemSharedDTOActivity response = api.activitiesGetActivity(activityID, isIncludeDeleted);
        // TODO: test validations
    }

    /**
     * Create an Activity
     *
     * Creates an Activity.  The body of the POST is the Activity to create.  The ActivityID will be assigned              on creation of the Activity.  When successful, the response is the ActivityID.  If unsuccessful, an               appropriate ApiError is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void activitiesPostActivityTest() throws ApiException {
        BuildSystemSharedDTOActivity buildSystemSharedDTOActivity = null;
        Integer response = api.activitiesPostActivity(buildSystemSharedDTOActivity);
        // TODO: test validations
    }

    /**
     * Update an Activity
     *
     * Updates an Activity.  The body of the PUT is the updated Activity.  When successful, the response is empty.              If unsuccessful, an appropriate ApiError is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void activitiesPutActivityTest() throws ApiException {
        Integer activityID = null;
        BuildSystemSharedDTOActivity buildSystemSharedDTOActivity = null;
        api.activitiesPutActivity(activityID, buildSystemSharedDTOActivity);
        // TODO: test validations
    }

}
