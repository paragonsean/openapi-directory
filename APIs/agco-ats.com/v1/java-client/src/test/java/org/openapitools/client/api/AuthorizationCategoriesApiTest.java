/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIIPagedResponseAuthorizationCodesSharedModelsCategory;
import org.openapitools.client.model.APIIPagedResponseAuthorizationCodesSharedModelsCategoryUserReport;
import org.openapitools.client.model.APIModelsApiError;
import org.openapitools.client.model.AuthorizationCodesSharedModelsCategory;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthorizationCategoriesApi
 */
@Disabled
public class AuthorizationCategoriesApiTest {

    private final AuthorizationCategoriesApi api = new AuthorizationCategoriesApi();

    /**
     * Add a category that a user can see.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authorizationCategoriesAddUserTest() throws ApiException {
        String id = null;
        Integer userID = null;
        api.authorizationCategoriesAddUser(id, userID);
        // TODO: test validations
    }

    /**
     * Remove an authorization category.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authorizationCategoriesDeleteTest() throws ApiException {
        String id = null;
        api.authorizationCategoriesDelete(id);
        // TODO: test validations
    }

    /**
     * Get authorization categories.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authorizationCategoriesGetTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        Integer userID = null;
        String definitionID = null;
        APIIPagedResponseAuthorizationCodesSharedModelsCategory response = api.authorizationCategoriesGet(limit, offset, userID, definitionID);
        // TODO: test validations
    }

    /**
     * Returns a report of access that users have to Authorization Categories.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authorizationCategoriesGetUsersTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        String userIDs = null;
        String categoryIDs = null;
        Boolean includeCategories = null;
        Boolean includeUsers = null;
        String userSearch = null;
        APIIPagedResponseAuthorizationCodesSharedModelsCategoryUserReport response = api.authorizationCategoriesGetUsers(limit, offset, userIDs, categoryIDs, includeCategories, includeUsers, userSearch);
        // TODO: test validations
    }

    /**
     * Add an authorization category.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authorizationCategoriesPostTest() throws ApiException {
        AuthorizationCodesSharedModelsCategory authorizationCodesSharedModelsCategory = null;
        String response = api.authorizationCategoriesPost(authorizationCodesSharedModelsCategory);
        // TODO: test validations
    }

    /**
     * Update an authorization category.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authorizationCategoriesPutTest() throws ApiException {
        String id = null;
        AuthorizationCodesSharedModelsCategory authorizationCodesSharedModelsCategory = null;
        api.authorizationCategoriesPut(id, authorizationCodesSharedModelsCategory);
        // TODO: test validations
    }

    /**
     * Deletes a category a user could see.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authorizationCategoriesRemoveUserTest() throws ApiException {
        String id = null;
        Integer userID = null;
        api.authorizationCategoriesRemoveUser(id, userID);
        // TODO: test validations
    }

}
