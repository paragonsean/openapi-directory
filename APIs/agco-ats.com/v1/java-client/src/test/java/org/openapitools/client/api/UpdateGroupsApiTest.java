/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIModelsApiError;
import org.openapitools.client.model.APIPagedResponseUpdateSystemModelsBundle;
import org.openapitools.client.model.APIPagedResponseUpdateSystemModelsUpdateGroup;
import org.openapitools.client.model.UpdateSystemModelsUpdateGroup;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UpdateGroupsApi
 */
@Disabled
public class UpdateGroupsApiTest {

    private final UpdateGroupsApi api = new UpdateGroupsApi();

    /**
     * Get a specific Update Group by ID.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2UpdateGroupsIDGetTest() throws ApiException {
        String ID = null;
        UpdateSystemModelsUpdateGroup response = api.apiV2UpdateGroupsIDGet(ID);
        // TODO: test validations
    }

    /**
     * Add an updateGroup that a user can see.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateGroupsAddUpdateGroupUserTest() throws ApiException {
        String id = null;
        Integer userID = null;
        api.updateGroupsAddUpdateGroupUser(id, userID);
        // TODO: test validations
    }

    /**
     * Delete an Update Group.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateGroupsDeleteTest() throws ApiException {
        String ID = null;
        api.updateGroupsDelete(ID);
        // TODO: test validations
    }

    /**
     * Get a list of Update Groups.  Update Groups are used by the client to register for a specific type of update.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateGroupsGetTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        Integer userID = null;
        APIPagedResponseUpdateSystemModelsUpdateGroup response = api.updateGroupsGet(limit, offset, userID);
        // TODO: test validations
    }

    /**
     * Get a list of bundles for UpdateGroup.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateGroupsGetUpdateGroupBundlesTest() throws ApiException {
        String ID = null;
        Boolean includeInactive = null;
        Integer limit = null;
        Integer offset = null;
        APIPagedResponseUpdateSystemModelsBundle response = api.updateGroupsGetUpdateGroupBundles(ID, includeInactive, limit, offset);
        // TODO: test validations
    }

    /**
     * Add a new Update Group.  The report field is a string that has a dot based request for a specific piece of submitted data.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateGroupsPostTest() throws ApiException {
        UpdateSystemModelsUpdateGroup updateSystemModelsUpdateGroup = null;
        String response = api.updateGroupsPost(updateSystemModelsUpdateGroup);
        // TODO: test validations
    }

    /**
     * Modify an Update Group.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateGroupsPutTest() throws ApiException {
        String ID = null;
        UpdateSystemModelsUpdateGroup updateSystemModelsUpdateGroup = null;
        api.updateGroupsPut(ID, updateSystemModelsUpdateGroup);
        // TODO: test validations
    }

    /**
     * Deletes an update group a user could see.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateGroupsRemoveUpdateGroupUserTest() throws ApiException {
        String id = null;
        Integer userID = null;
        api.updateGroupsRemoveUpdateGroupUser(id, userID);
        // TODO: test validations
    }

}
