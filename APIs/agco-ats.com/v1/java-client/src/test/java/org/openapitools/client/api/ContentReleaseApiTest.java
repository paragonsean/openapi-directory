/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIModelsApiError;
import org.openapitools.client.model.APIPagedResponseContentSubmissionSharedBusinessEntitiesContentReleaseVersion;
import org.openapitools.client.model.ContentSubmissionSharedBusinessEntitiesContentReleaseVersion;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContentReleaseApi
 */
@Disabled
public class ContentReleaseApiTest {

    private final ContentReleaseApi api = new ContentReleaseApi();

    /**
     * Get a Content Release Version by ID
     *
     * Gets a ContentReleaseVersion by ID. When successful, the response is the requested ContentReleaseVersion.              If unsuccessful, an appropriate ApiError is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2ContentReleasesContentReleaseIdGetTest() throws ApiException {
        Integer contentReleaseId = null;
        ContentSubmissionSharedBusinessEntitiesContentReleaseVersion response = api.apiV2ContentReleasesContentReleaseIdGet(contentReleaseId);
        // TODO: test validations
    }

    /**
     * Delete a ContentReleaseVersion
     *
     * Deletes an ContentReleaseVersion. When successful, the response is empty.  If unsuccessful, an appropriate              ApiError is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentReleaseDeleteContentReleaseVersionnTest() throws ApiException {
        Integer contentReleaseId = null;
        api.contentReleaseDeleteContentReleaseVersionn(contentReleaseId);
        // TODO: test validations
    }

    /**
     * Get ContentReleaseVersion
     *
     * Gets a collection of ContentReleaseVersion. When successful, the response is a PagedResponse of ContentReleaseVersion.              If unsuccessful, an appropriate ApiError is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentReleaseGetContentReleaseVersionTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        Boolean deleted = null;
        Integer releaseID = null;
        Integer userId = null;
        Integer contentDefinitionID = null;
        Integer version = null;
        APIPagedResponseContentSubmissionSharedBusinessEntitiesContentReleaseVersion response = api.contentReleaseGetContentReleaseVersion(limit, offset, deleted, releaseID, userId, contentDefinitionID, version);
        // TODO: test validations
    }

    /**
     * Create a ContentReleaseVersion
     *
     * Creates a ContentReleaseVersion.  The body of the POST is the ContentReleaseVersion to create.              The ContentReleaseId will be assigned on creation of the Job.  When successful, the response              is the contentReleaseId.  If unsuccessful, an appropriate ApiError is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentReleasePostContentReleaseTest() throws ApiException {
        ContentSubmissionSharedBusinessEntitiesContentReleaseVersion contentSubmissionSharedBusinessEntitiesContentReleaseVersion = null;
        Integer response = api.contentReleasePostContentRelease(contentSubmissionSharedBusinessEntitiesContentReleaseVersion);
        // TODO: test validations
    }

    /**
     * Update a ContentReleaseVersion
     *
     * Updates a ContentReleaseVersion.  The body of the PUT is the updated ContentReleaseVersion.                When successful, the response is empty.  If unsuccessful, an appropriate ApiError is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentReleasePutContentDefinitionTest() throws ApiException {
        Integer contentReleaseId = null;
        ContentSubmissionSharedBusinessEntitiesContentReleaseVersion contentSubmissionSharedBusinessEntitiesContentReleaseVersion = null;
        api.contentReleasePutContentDefinition(contentReleaseId, contentSubmissionSharedBusinessEntitiesContentReleaseVersion);
        // TODO: test validations
    }

}
