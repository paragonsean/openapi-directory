/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIModelsRole;
import org.openapitools.client.model.APIModelsRolePermissionChange;
import org.openapitools.client.model.APIPagedResponseAPIModelsPermission;
import org.openapitools.client.model.APIPagedResponseAPIModelsRole;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RolesApi
 */
@Disabled
public class RolesApiTest {

    private final RolesApi api = new RolesApi();

    /**
     * Deletes a User Role
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rolesDeleteRoleTest() throws ApiException {
        Integer id = null;
        api.rolesDeleteRole(id);
        // TODO: test validations
    }

    /**
     * Gets a User Role
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rolesGetRoleTest() throws ApiException {
        Integer id = null;
        APIModelsRole response = api.rolesGetRole(id);
        // TODO: test validations
    }

    /**
     * Get the Permissions for a Role
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rolesGetRolePermissionsTest() throws ApiException {
        Integer id = null;
        String name = null;
        Integer limit = null;
        Integer offset = null;
        APIPagedResponseAPIModelsPermission response = api.rolesGetRolePermissions(id, name, limit, offset);
        // TODO: test validations
    }

    /**
     * List Roles
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rolesGetRolesTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        String name = null;
        Integer permissionID = null;
        String permissionName = null;
        APIPagedResponseAPIModelsRole response = api.rolesGetRoles(limit, offset, name, permissionID, permissionName);
        // TODO: test validations
    }

    /**
     * Adds a User Role
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rolesPostRoleTest() throws ApiException {
        APIModelsRole apIModelsRole = null;
        Integer response = api.rolesPostRole(apIModelsRole);
        // TODO: test validations
    }

    /**
     * Updates a User Role
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rolesPutRoleTest() throws ApiException {
        Integer id = null;
        APIModelsRole apIModelsRole = null;
        api.rolesPutRole(id, apIModelsRole);
        // TODO: test validations
    }

    /**
     * Manage the Permissions for a Role
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void rolesPutRolePermissionsTest() throws ApiException {
        Integer id = null;
        List<APIModelsRolePermissionChange> apIModelsRolePermissionChange = null;
        api.rolesPutRolePermissions(id, apIModelsRolePermissionChange);
        // TODO: test validations
    }

}
