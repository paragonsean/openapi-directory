/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIModelsApiError;
import org.openapitools.client.model.APIModelsRoleUserChange;
import org.openapitools.client.model.APIModelsUserRoleChange;
import org.openapitools.client.model.APIPagedResponseAPIModelsRole;
import org.openapitools.client.model.APIPagedResponseAPIModelsUser;
import org.openapitools.client.model.APIPagedResponseAPIModelsUserEffectivePermission;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UserPermissionsApi
 */
@Disabled
public class UserPermissionsApiTest {

    private final UserPermissionsApi api = new UserPermissionsApi();

    /**
     * Update a Role&#39;s users
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2RolesIdUsersPutTest() throws ApiException {
        Integer id = null;
        List<APIModelsRoleUserChange> apIModelsRoleUserChange = null;
        api.apiV2RolesIdUsersPut(id, apIModelsRoleUserChange);
        // TODO: test validations
    }

    /**
     * Get a user&#39;s permissions
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2UsersCurrentPermissionsGetTest() throws ApiException {
        String permission = null;
        Integer limit = null;
        Integer offset = null;
        APIPagedResponseAPIModelsUserEffectivePermission response = api.apiV2UsersCurrentPermissionsGet(permission, limit, offset);
        // TODO: test validations
    }

    /**
     * Gets the current user&#39;s roles
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userPermissionsGetCurrentUserRolesTest() throws ApiException {
        String role = null;
        Integer limit = null;
        Integer offset = null;
        APIPagedResponseAPIModelsRole response = api.userPermissionsGetCurrentUserRoles(role, limit, offset);
        // TODO: test validations
    }

    /**
     * Get a user&#39;s permissions
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userPermissionsGetPermissionsTest() throws ApiException {
        Integer id = null;
        String permission = null;
        Integer limit = null;
        Integer offset = null;
        APIPagedResponseAPIModelsUserEffectivePermission response = api.userPermissionsGetPermissions(id, permission, limit, offset);
        // TODO: test validations
    }

    /**
     * Get a user&#39;s roles
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userPermissionsGetRolesTest() throws ApiException {
        Integer id = null;
        String role = null;
        Integer limit = null;
        Integer offset = null;
        APIPagedResponseAPIModelsRole response = api.userPermissionsGetRoles(id, role, limit, offset);
        // TODO: test validations
    }

    /**
     * Get all user&#39;s in a role
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userPermissionsGetUsersTest() throws ApiException {
        Integer id = null;
        Integer limit = null;
        Integer offset = null;
        APIPagedResponseAPIModelsUser response = api.userPermissionsGetUsers(id, limit, offset);
        // TODO: test validations
    }

    /**
     * Update a user&#39;s roles
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void userPermissionsPutTest() throws ApiException {
        Integer id = null;
        List<APIModelsUserRoleChange> apIModelsUserRoleChange = null;
        api.userPermissionsPut(id, apIModelsUserRoleChange);
        // TODO: test validations
    }

}
