/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIIPagedResponseGlobalResourcesSharedModelsGlobalImage;
import org.openapitools.client.model.APIModelsApiError;
import org.openapitools.client.model.GlobalResourcesSharedModelsGlobalImage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GlobalImagesApi
 */
@Disabled
public class GlobalImagesApiTest {

    private final GlobalImagesApi api = new GlobalImagesApi();

    /**
     * Mark a file as &#39;Removed&#39;. Disables download of the image and hides metadata from GET all method
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void globalImagesDeleteFileTest() throws ApiException {
        String ID = null;
        api.globalImagesDeleteFile(ID);
        // TODO: test validations
    }

    /**
     * Gets a GlobalImage&#39;s metadata.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void globalImagesGetGlobalImageTest() throws ApiException {
        String ID = null;
        GlobalResourcesSharedModelsGlobalImage response = api.globalImagesGetGlobalImage(ID);
        // TODO: test validations
    }

    /**
     * Download the contents of a GlobalImage. The current State of the GlobalImage should be &#39;Available&#39;.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void globalImagesGetGlobalImageContentsTest() throws ApiException {
        String ID = null;
        Boolean isFullImage = null;
        Object response = api.globalImagesGetGlobalImageContents(ID, isFullImage);
        // TODO: test validations
    }

    /**
     * Get a paged response of GlobalImage.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void globalImagesGetGlobalImagesTest() throws ApiException {
        String search = null;
        String categoryId = null;
        String publisher = null;
        Boolean includeDeleted = null;
        Integer limit = null;
        Integer offset = null;
        APIIPagedResponseGlobalResourcesSharedModelsGlobalImage response = api.globalImagesGetGlobalImages(search, categoryId, publisher, includeDeleted, limit, offset);
        // TODO: test validations
    }

    /**
     * Create the metadata for a GlobalImage before uploading. The State should be &#39;Created&#39;.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void globalImagesPostGlobalImageTest() throws ApiException {
        GlobalResourcesSharedModelsGlobalImage globalResourcesSharedModelsGlobalImage = null;
        Boolean overridePublisherOrDate = null;
        String response = api.globalImagesPostGlobalImage(globalResourcesSharedModelsGlobalImage, overridePublisherOrDate);
        // TODO: test validations
    }

    /**
     * Update the metadata for an image.
     *
     * Update the metadata for an image. Size may not be modified by the client.                   Set status to &#39;Available&#39; to publish an image. Both the image and thumbnail must be uploaded.                  Set status to &#39;Created&#39; to reset an image&#39;s contents and re-upload.                   A file may only be &#39;Removed&#39; by the DELETE method.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void globalImagesPutGlobalImageTest() throws ApiException {
        String ID = null;
        GlobalResourcesSharedModelsGlobalImage globalResourcesSharedModelsGlobalImage = null;
        Boolean overridePublisherOrDate = null;
        api.globalImagesPutGlobalImage(ID, globalResourcesSharedModelsGlobalImage, overridePublisherOrDate);
        // TODO: test validations
    }

    /**
     * Upload the contents of a GlobalImage. The current State of the File for the GlobalImage should be &#39;Created&#39;.
     *
     * Both the image and thumbnail must be uploaded.                  Set isFullImage &#x3D; &#39;True&#39; for Full Image, isFullImage &#x3D; &#39;False&#39; for Thumbnail
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void globalImagesPutGlobalImageContentsTest() throws ApiException {
        String ID = null;
        Boolean isFullImage = null;
        Object response = api.globalImagesPutGlobalImageContents(ID, isFullImage);
        // TODO: test validations
    }

}
