/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIPagedResponseDealerDBModelsVoucher;
import org.openapitools.client.model.APIPagedResponseDealerDBModelsVoucherHistory;
import org.openapitools.client.model.DealerDBModelsVoucher;
import java.time.OffsetDateTime;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for VouchersApi
 */
@Disabled
public class VouchersApiTest {

    private final VouchersApi api = new VouchersApi();

    /**
     * Get a voucher
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void apiV2VouchersVoucherCodeGetTest() throws ApiException {
        String voucherCode = null;
        String deleted = null;
        DealerDBModelsVoucher response = api.apiV2VouchersVoucherCodeGet(voucherCode, deleted);
        // TODO: test validations
    }

    /**
     * Delete a voucher
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void vouchersDeleteTest() throws ApiException {
        String voucherCode = null;
        api.vouchersDelete(voucherCode);
        // TODO: test validations
    }

    /**
     * Gets a list of vouchers
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void vouchersGetTest() throws ApiException {
        String type = null;
        String dealerCode = null;
        String licenseTo = null;
        String purpose = null;
        String orderNumber = null;
        String email = null;
        String modifiedBy = null;
        OffsetDateTime createdAfter = null;
        OffsetDateTime createdBefore = null;
        OffsetDateTime punchedAfter = null;
        OffsetDateTime punchedBefore = null;
        Boolean punched = null;
        OffsetDateTime expirationAfter = null;
        OffsetDateTime expirationBefore = null;
        String deleted = null;
        Integer limit = null;
        Integer offset = null;
        APIPagedResponseDealerDBModelsVoucher response = api.vouchersGet(type, dealerCode, licenseTo, purpose, orderNumber, email, modifiedBy, createdAfter, createdBefore, punchedAfter, punchedBefore, punched, expirationAfter, expirationBefore, deleted, limit, offset);
        // TODO: test validations
    }

    /**
     * Get a voucher&#39;s history.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void vouchersGetVoucherHistoryTest() throws ApiException {
        String voucherCode = null;
        Integer limit = null;
        Integer offset = null;
        APIPagedResponseDealerDBModelsVoucherHistory response = api.vouchersGetVoucherHistory(voucherCode, limit, offset);
        // TODO: test validations
    }

    /**
     * Create a voucher
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void vouchersPostTest() throws ApiException {
        DealerDBModelsVoucher dealerDBModelsVoucher = null;
        String response = api.vouchersPost(dealerDBModelsVoucher);
        // TODO: test validations
    }

    /**
     * Update a voucher
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void vouchersPutTest() throws ApiException {
        String voucherCode = null;
        DealerDBModelsVoucher dealerDBModelsVoucher = null;
        api.vouchersPut(voucherCode, dealerDBModelsVoucher);
        // TODO: test validations
    }

}
