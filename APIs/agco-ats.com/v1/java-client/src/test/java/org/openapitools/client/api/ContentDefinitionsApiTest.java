/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIModelsApiError;
import org.openapitools.client.model.APIPagedResponseContentSubmissionSharedBusinessEntitiesContentDefinition;
import org.openapitools.client.model.APIPagedResponseContentSubmissionSharedBusinessEntitiesContentDefinitionAttribute;
import org.openapitools.client.model.ContentSubmissionSharedBusinessEntitiesContentDefinition;
import org.openapitools.client.model.ContentSubmissionSharedBusinessEntitiesContentDefinitionAttribute;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContentDefinitionsApi
 */
@Disabled
public class ContentDefinitionsApiTest {

    private final ContentDefinitionsApi api = new ContentDefinitionsApi();

    /**
     * Delete a ContentDefinition
     *
     * Deletes an ContentDefinition. When successful, the response is empty.  If unsuccessful, an appropriate              ApiError is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentDefinitionsDeleteContentDefinitionTest() throws ApiException {
        Integer contentDefinitionID = null;
        api.contentDefinitionsDeleteContentDefinition(contentDefinitionID);
        // TODO: test validations
    }

    /**
     * Remove an Attribute from a ContentDefinition
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentDefinitionsDeleteContentDefinitionAttributeTest() throws ApiException {
        Integer contentDefinitionAttributeID = null;
        api.contentDefinitionsDeleteContentDefinitionAttribute(contentDefinitionAttributeID);
        // TODO: test validations
    }

    /**
     * Get a ContentDefinition by ID
     *
     * Gets a ContentDefinition by ID. When successful, the response is the requested ContentDefinition.              If unsuccessful, an appropriate ApiError is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentDefinitionsGetContentDefinitionTest() throws ApiException {
        Integer contentDefinitionID = null;
        String includeAttributes = null;
        ContentSubmissionSharedBusinessEntitiesContentDefinition response = api.contentDefinitionsGetContentDefinition(contentDefinitionID, includeAttributes);
        // TODO: test validations
    }

    /**
     * Get Attributes for a ContentDefinition
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentDefinitionsGetContentDefinitionAttributesTest() throws ApiException {
        Integer contentDefinitionID = null;
        Integer limit = null;
        Integer offset = null;
        String name = null;
        APIPagedResponseContentSubmissionSharedBusinessEntitiesContentDefinitionAttribute response = api.contentDefinitionsGetContentDefinitionAttributes(contentDefinitionID, limit, offset, name);
        // TODO: test validations
    }

    /**
     * Get ContentDefinitions
     *
     * Gets a collection of ContentDefinitions. When successful, the response is a PagedResponse of ContentDefinitions.              If unsuccessful, an appropriate ApiError is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentDefinitionsGetContentDefinitionsTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        Integer userID = null;
        String includeAttributes = null;
        String name = null;
        Integer typeID = null;
        String packageTypeID = null;
        APIPagedResponseContentSubmissionSharedBusinessEntitiesContentDefinition response = api.contentDefinitionsGetContentDefinitions(limit, offset, userID, includeAttributes, name, typeID, packageTypeID);
        // TODO: test validations
    }

    /**
     * Create a ContentDefinition
     *
     * Creates a ContentDefinition.  The body of the POST is the ContentDefinition to create.              The ContentDefinitionID will be assigned on creation of the Job.  When successful, the response              is the JobID.  If unsuccessful, an appropriate ApiError is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentDefinitionsPostContentDefinitionTest() throws ApiException {
        ContentSubmissionSharedBusinessEntitiesContentDefinition contentSubmissionSharedBusinessEntitiesContentDefinition = null;
        Integer response = api.contentDefinitionsPostContentDefinition(contentSubmissionSharedBusinessEntitiesContentDefinition);
        // TODO: test validations
    }

    /**
     * Add an Attribute to a ContentDefinition
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentDefinitionsPostContentDefinitionAttributeTest() throws ApiException {
        Integer contentDefinitionID = null;
        ContentSubmissionSharedBusinessEntitiesContentDefinitionAttribute contentSubmissionSharedBusinessEntitiesContentDefinitionAttribute = null;
        Integer response = api.contentDefinitionsPostContentDefinitionAttribute(contentDefinitionID, contentSubmissionSharedBusinessEntitiesContentDefinitionAttribute);
        // TODO: test validations
    }

    /**
     * No Documentation Found.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentDefinitionsPostContentDefinitionAttributesTest() throws ApiException {
        Integer contentDefinitionID = null;
        List<ContentSubmissionSharedBusinessEntitiesContentDefinitionAttribute> contentSubmissionSharedBusinessEntitiesContentDefinitionAttribute = null;
        api.contentDefinitionsPostContentDefinitionAttributes(contentDefinitionID, contentSubmissionSharedBusinessEntitiesContentDefinitionAttribute);
        // TODO: test validations
    }

    /**
     * Update a ContentDefinition
     *
     * Updates a ContentDefinition.  The body of the PUT is the updated ContentDefinition.                When successful, the response is empty.  If unsuccessful, an appropriate ApiError is returned.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentDefinitionsPutContentDefinitionTest() throws ApiException {
        Integer contentDefinitionID = null;
        ContentSubmissionSharedBusinessEntitiesContentDefinition contentSubmissionSharedBusinessEntitiesContentDefinition = null;
        api.contentDefinitionsPutContentDefinition(contentDefinitionID, contentSubmissionSharedBusinessEntitiesContentDefinition);
        // TODO: test validations
    }

    /**
     * Update an Attribute for a ContentDefinition
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentDefinitionsPutContentDefinitionAttributeAsyncTest() throws ApiException {
        Integer contentDefinitionAttributeID = null;
        ContentSubmissionSharedBusinessEntitiesContentDefinitionAttribute contentSubmissionSharedBusinessEntitiesContentDefinitionAttribute = null;
        api.contentDefinitionsPutContentDefinitionAttributeAsync(contentDefinitionAttributeID, contentSubmissionSharedBusinessEntitiesContentDefinitionAttribute);
        // TODO: test validations
    }

    /**
     * No Documentation Found.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void contentDefinitionsPutContentDefinitionAttributesTest() throws ApiException {
        List<ContentSubmissionSharedBusinessEntitiesContentDefinitionAttribute> contentSubmissionSharedBusinessEntitiesContentDefinitionAttribute = null;
        api.contentDefinitionsPutContentDefinitionAttributes(contentSubmissionSharedBusinessEntitiesContentDefinitionAttribute);
        // TODO: test validations
    }

}
