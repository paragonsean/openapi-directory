/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIModelsApiError;
import org.openapitools.client.model.APIPagedResponseUpdateSystemModelsBundle;
import org.openapitools.client.model.APIPagedResponseUpdateSystemModelsClientStatusUpdateSystemModelsPagedClientStatusMetadata;
import org.openapitools.client.model.APIPagedResponseUpdateSystemModelsPackageStatusSummary;
import org.openapitools.client.model.APIPagedResponseUpdateSystemModelsUpdateGroup;
import org.openapitools.client.model.APIPagedResponseUpdateSystemModelsUpdateGroupClientRelationship;
import java.time.OffsetDateTime;
import org.openapitools.client.model.UpdateSystemModelsClient;
import org.openapitools.client.model.UpdateSystemModelsClientInfo;
import org.openapitools.client.model.UpdateSystemModelsPackage;
import org.openapitools.client.model.UpdateSystemModelsPackageStatusSummary;
import org.openapitools.client.model.UpdateSystemModelsUpdateMetricsData;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ReportingApi
 */
@Disabled
public class ReportingApiTest {

    private final ReportingApi api = new ReportingApi();

    /**
     * Get a summary of all Packages in a Bundle
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportingBundleStatusSummaryTest() throws ApiException {
        String bundleID = null;
        Integer limit = null;
        Integer offset = null;
        APIPagedResponseUpdateSystemModelsPackageStatusSummary response = api.reportingBundleStatusSummary(bundleID, limit, offset);
        // TODO: test validations
    }

    /**
     * Get a list of bundles for UpdateGroup.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportingBundlesInUpdateGroupTest() throws ApiException {
        String ID = null;
        Boolean includeInactive = null;
        Integer limit = null;
        Integer offset = null;
        APIPagedResponseUpdateSystemModelsBundle response = api.reportingBundlesInUpdateGroup(ID, includeInactive, limit, offset);
        // TODO: test validations
    }

    /**
     * Get Client Information
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportingClientInfoTest() throws ApiException {
        String clientID = null;
        UpdateSystemModelsClientInfo response = api.reportingClientInfo(clientID);
        // TODO: test validations
    }

    /**
     * Get the current packages for an update group.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportingCurrentPackagesInUpdateGroupTest() throws ApiException {
        String ID = null;
        String subscriptionTypeFilter = null;
        List<UpdateSystemModelsPackage> response = api.reportingCurrentPackagesInUpdateGroup(ID, subscriptionTypeFilter);
        // TODO: test validations
    }

    /**
     * Get a Client in the Update System.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportingGetClientTest() throws ApiException {
        String ID = null;
        UpdateSystemModelsClient response = api.reportingGetClient(ID);
        // TODO: test validations
    }

    /**
     * Get a list of current Client Subscriptions.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportingGetSubscriptionsTest() throws ApiException {
        String clientID = null;
        String updateGroupID = null;
        Integer limit = null;
        Integer offset = null;
        APIPagedResponseUpdateSystemModelsUpdateGroupClientRelationship response = api.reportingGetSubscriptions(clientID, updateGroupID, limit, offset);
        // TODO: test validations
    }

    /**
     * Get a summary report for a Specific Package
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportingPackageStatusSummaryTest() throws ApiException {
        String packageID = null;
        UpdateSystemModelsPackageStatusSummary response = api.reportingPackageStatusSummary(packageID);
        // TODO: test validations
    }

    /**
     * Get a list of subscribed clients
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportingRegisteredClientsTest() throws ApiException {
        String updateGroupID = null;
        String clientID = null;
        String tag = null;
        String reportResult = null;
        Boolean reportResultIsValid = null;
        String reportValue = null;
        OffsetDateTime lastCheckInBefore = null;
        OffsetDateTime lastCheckInAfter = null;
        String orderBy = null;
        Integer limit = null;
        Integer offset = null;
        APIPagedResponseUpdateSystemModelsClientStatusUpdateSystemModelsPagedClientStatusMetadata response = api.reportingRegisteredClients(updateGroupID, clientID, tag, reportResult, reportResultIsValid, reportValue, lastCheckInBefore, lastCheckInAfter, orderBy, limit, offset);
        // TODO: test validations
    }

    /**
     * Get a list of Update Groups.  Update Groups are used by the client to register for a specific type of update.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportingUpdateGroupsTest() throws ApiException {
        Integer limit = null;
        Integer offset = null;
        APIPagedResponseUpdateSystemModelsUpdateGroup response = api.reportingUpdateGroups(limit, offset);
        // TODO: test validations
    }

    /**
     * Get data for pie charts in UpdateMetrics.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void reportingUpdateMetricsTest() throws ApiException {
        String updateGroupID = null;
        Integer bundleNumber = null;
        UpdateSystemModelsUpdateMetricsData response = api.reportingUpdateMetrics(updateGroupID, bundleNumber);
        // TODO: test validations
    }

}
