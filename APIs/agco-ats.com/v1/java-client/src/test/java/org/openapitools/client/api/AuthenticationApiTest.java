/*
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.APIModelsAuthenticatedUser;
import org.openapitools.client.model.APIModelsCredentials;
import org.openapitools.client.model.APIModelsPasswordReset;
import org.openapitools.client.model.APIModelsPasswordResetRequest;
import org.openapitools.client.model.APIModelsTokenOptions;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AuthenticationApi
 */
@Disabled
public class AuthenticationApiTest {

    private final AuthenticationApi api = new AuthenticationApi();

    /**
     * Authenticate a user.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authenticationDefaultTest() throws ApiException {
        APIModelsCredentials apIModelsCredentials = null;
        APIModelsAuthenticatedUser response = api.authenticationDefault(apIModelsCredentials);
        // TODO: test validations
    }

    /**
     * Acknowledges the connection to the API
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authenticationIsAliveTest() throws ApiException {
        api.authenticationIsAlive();
        // TODO: test validations
    }

    /**
     * Manage API tokens.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authenticationPutManageTokensTest() throws ApiException {
        Integer userID = null;
        APIModelsTokenOptions apIModelsTokenOptions = null;
        api.authenticationPutManageTokens(userID, apIModelsTokenOptions);
        // TODO: test validations
    }

    /**
     * Request a password reset.
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authenticationRequestPasswordResetTest() throws ApiException {
        APIModelsPasswordResetRequest apIModelsPasswordResetRequest = null;
        api.authenticationRequestPasswordReset(apIModelsPasswordResetRequest);
        // TODO: test validations
    }

    /**
     * Reset a password
     *
     * No Documentation Found.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void authenticationResetPaswordTest() throws ApiException {
        APIModelsPasswordReset apIModelsPasswordReset = null;
        api.authenticationResetPasword(apIModelsPasswordReset);
        // TODO: test validations
    }

}
