# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class APIModelsPermission(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_description: str=None, data_required: str=None, description: str=None, id: int=None, name: str=None):
        """APIModelsPermission - a model defined in OpenAPI

        :param data_description: The data_description of this APIModelsPermission.
        :param data_required: The data_required of this APIModelsPermission.
        :param description: The description of this APIModelsPermission.
        :param id: The id of this APIModelsPermission.
        :param name: The name of this APIModelsPermission.
        """
        self.openapi_types = {
            'data_description': str,
            'data_required': str,
            'description': str,
            'id': int,
            'name': str
        }

        self.attribute_map = {
            'data_description': 'DataDescription',
            'data_required': 'DataRequired',
            'description': 'Description',
            'id': 'Id',
            'name': 'Name'
        }

        self._data_description = data_description
        self._data_required = data_required
        self._description = description
        self._id = id
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'APIModelsPermission':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The API.Models.Permission of this APIModelsPermission.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_description(self):
        """Gets the data_description of this APIModelsPermission.

        Description of data to be provided with Role Authorization

        :return: The data_description of this APIModelsPermission.
        :rtype: str
        """
        return self._data_description

    @data_description.setter
    def data_description(self, data_description):
        """Sets the data_description of this APIModelsPermission.

        Description of data to be provided with Role Authorization

        :param data_description: The data_description of this APIModelsPermission.
        :type data_description: str
        """

        self._data_description = data_description

    @property
    def data_required(self):
        """Gets the data_required of this APIModelsPermission.

        Indicates if data is required or optional

        :return: The data_required of this APIModelsPermission.
        :rtype: str
        """
        return self._data_required

    @data_required.setter
    def data_required(self, data_required):
        """Sets the data_required of this APIModelsPermission.

        Indicates if data is required or optional

        :param data_required: The data_required of this APIModelsPermission.
        :type data_required: str
        """
        allowed_values = ["true", "false", "Optional"]  # noqa: E501
        if data_required not in allowed_values:
            raise ValueError(
                "Invalid value for `data_required` ({0}), must be one of {1}"
                .format(data_required, allowed_values)
            )

        self._data_required = data_required

    @property
    def description(self):
        """Gets the description of this APIModelsPermission.


        :return: The description of this APIModelsPermission.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this APIModelsPermission.


        :param description: The description of this APIModelsPermission.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this APIModelsPermission.

        The identifier of the permission.

        :return: The id of this APIModelsPermission.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this APIModelsPermission.

        The identifier of the permission.

        :param id: The id of this APIModelsPermission.
        :type id: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this APIModelsPermission.

        The name of the permission.

        :return: The name of this APIModelsPermission.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this APIModelsPermission.

        The name of the permission.

        :param name: The name of this APIModelsPermission.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name
