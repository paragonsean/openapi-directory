# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.authorization_codes_shared_models_authorization_code_user import AuthorizationCodesSharedModelsAuthorizationCodeUser
from openapi_server.models.authorization_codes_shared_models_category import AuthorizationCodesSharedModelsCategory
from openapi_server import util


class AuthorizationCodesSharedModelsCategoryUserReport(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, categories: List[AuthorizationCodesSharedModelsCategory]=None, user: AuthorizationCodesSharedModelsAuthorizationCodeUser=None):
        """AuthorizationCodesSharedModelsCategoryUserReport - a model defined in OpenAPI

        :param categories: The categories of this AuthorizationCodesSharedModelsCategoryUserReport.
        :param user: The user of this AuthorizationCodesSharedModelsCategoryUserReport.
        """
        self.openapi_types = {
            'categories': List[AuthorizationCodesSharedModelsCategory],
            'user': AuthorizationCodesSharedModelsAuthorizationCodeUser
        }

        self.attribute_map = {
            'categories': 'Categories',
            'user': 'User'
        }

        self._categories = categories
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AuthorizationCodesSharedModelsCategoryUserReport':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AuthorizationCodes.Shared.Models.CategoryUserReport of this AuthorizationCodesSharedModelsCategoryUserReport.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def categories(self):
        """Gets the categories of this AuthorizationCodesSharedModelsCategoryUserReport.


        :return: The categories of this AuthorizationCodesSharedModelsCategoryUserReport.
        :rtype: List[AuthorizationCodesSharedModelsCategory]
        """
        return self._categories

    @categories.setter
    def categories(self, categories):
        """Sets the categories of this AuthorizationCodesSharedModelsCategoryUserReport.


        :param categories: The categories of this AuthorizationCodesSharedModelsCategoryUserReport.
        :type categories: List[AuthorizationCodesSharedModelsCategory]
        """

        self._categories = categories

    @property
    def user(self):
        """Gets the user of this AuthorizationCodesSharedModelsCategoryUserReport.


        :return: The user of this AuthorizationCodesSharedModelsCategoryUserReport.
        :rtype: AuthorizationCodesSharedModelsAuthorizationCodeUser
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this AuthorizationCodesSharedModelsCategoryUserReport.


        :param user: The user of this AuthorizationCodesSharedModelsCategoryUserReport.
        :type user: AuthorizationCodesSharedModelsAuthorizationCodeUser
        """

        self._user = user
