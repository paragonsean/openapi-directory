# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_paged_response_metadata import APIPagedResponseMetadata
from openapi_server.models.content_submission_shared_business_entities_content_definition import ContentSubmissionSharedBusinessEntitiesContentDefinition
from openapi_server import util


class APIPagedResponseContentSubmissionSharedBusinessEntitiesContentDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entities: List[ContentSubmissionSharedBusinessEntitiesContentDefinition]=None, metadata: APIPagedResponseMetadata=None):
        """APIPagedResponseContentSubmissionSharedBusinessEntitiesContentDefinition - a model defined in OpenAPI

        :param entities: The entities of this APIPagedResponseContentSubmissionSharedBusinessEntitiesContentDefinition.
        :param metadata: The metadata of this APIPagedResponseContentSubmissionSharedBusinessEntitiesContentDefinition.
        """
        self.openapi_types = {
            'entities': List[ContentSubmissionSharedBusinessEntitiesContentDefinition],
            'metadata': APIPagedResponseMetadata
        }

        self.attribute_map = {
            'entities': 'Entities',
            'metadata': 'Metadata'
        }

        self._entities = entities
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'APIPagedResponseContentSubmissionSharedBusinessEntitiesContentDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The API.PagedResponse_ContentSubmission.Shared.BusinessEntities.ContentDefinition_ of this APIPagedResponseContentSubmissionSharedBusinessEntitiesContentDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entities(self):
        """Gets the entities of this APIPagedResponseContentSubmissionSharedBusinessEntitiesContentDefinition.


        :return: The entities of this APIPagedResponseContentSubmissionSharedBusinessEntitiesContentDefinition.
        :rtype: List[ContentSubmissionSharedBusinessEntitiesContentDefinition]
        """
        return self._entities

    @entities.setter
    def entities(self, entities):
        """Sets the entities of this APIPagedResponseContentSubmissionSharedBusinessEntitiesContentDefinition.


        :param entities: The entities of this APIPagedResponseContentSubmissionSharedBusinessEntitiesContentDefinition.
        :type entities: List[ContentSubmissionSharedBusinessEntitiesContentDefinition]
        """
        if entities is None:
            raise ValueError("Invalid value for `entities`, must not be `None`")

        self._entities = entities

    @property
    def metadata(self):
        """Gets the metadata of this APIPagedResponseContentSubmissionSharedBusinessEntitiesContentDefinition.


        :return: The metadata of this APIPagedResponseContentSubmissionSharedBusinessEntitiesContentDefinition.
        :rtype: APIPagedResponseMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this APIPagedResponseContentSubmissionSharedBusinessEntitiesContentDefinition.


        :param metadata: The metadata of this APIPagedResponseContentSubmissionSharedBusinessEntitiesContentDefinition.
        :type metadata: APIPagedResponseMetadata
        """
        if metadata is None:
            raise ValueError("Invalid value for `metadata`, must not be `None`")

        self._metadata = metadata
