# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.content_submission_shared_business_entities_content_definition import ContentSubmissionSharedBusinessEntitiesContentDefinition
from openapi_server.models.content_submission_shared_business_entities_content_submission_attribute import ContentSubmissionSharedBusinessEntitiesContentSubmissionAttribute
from openapi_server import util


class ContentSubmissionSharedBusinessEntitiesContentSubmission(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: List[ContentSubmissionSharedBusinessEntitiesContentSubmissionAttribute]=None, build_id: int=None, content_definition_id: int=None, content_submission_id: int=None, definition: ContentSubmissionSharedBusinessEntitiesContentDefinition=None, job_run_id: int=None, package_id: str=None, release_notes: str=None, repository: str=None, revision: int=None, submission_date: datetime=None, user_id: int=None, version: int=None):
        """ContentSubmissionSharedBusinessEntitiesContentSubmission - a model defined in OpenAPI

        :param attributes: The attributes of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :param build_id: The build_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :param content_definition_id: The content_definition_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :param content_submission_id: The content_submission_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :param definition: The definition of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :param job_run_id: The job_run_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :param package_id: The package_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :param release_notes: The release_notes of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :param repository: The repository of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :param revision: The revision of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :param submission_date: The submission_date of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :param user_id: The user_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :param version: The version of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        """
        self.openapi_types = {
            'attributes': List[ContentSubmissionSharedBusinessEntitiesContentSubmissionAttribute],
            'build_id': int,
            'content_definition_id': int,
            'content_submission_id': int,
            'definition': ContentSubmissionSharedBusinessEntitiesContentDefinition,
            'job_run_id': int,
            'package_id': str,
            'release_notes': str,
            'repository': str,
            'revision': int,
            'submission_date': datetime,
            'user_id': int,
            'version': int
        }

        self.attribute_map = {
            'attributes': 'Attributes',
            'build_id': 'BuildID',
            'content_definition_id': 'ContentDefinitionID',
            'content_submission_id': 'ContentSubmissionID',
            'definition': 'Definition',
            'job_run_id': 'JobRunID',
            'package_id': 'PackageID',
            'release_notes': 'ReleaseNotes',
            'repository': 'Repository',
            'revision': 'Revision',
            'submission_date': 'SubmissionDate',
            'user_id': 'UserID',
            'version': 'Version'
        }

        self._attributes = attributes
        self._build_id = build_id
        self._content_definition_id = content_definition_id
        self._content_submission_id = content_submission_id
        self._definition = definition
        self._job_run_id = job_run_id
        self._package_id = package_id
        self._release_notes = release_notes
        self._repository = repository
        self._revision = revision
        self._submission_date = submission_date
        self._user_id = user_id
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentSubmissionSharedBusinessEntitiesContentSubmission':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContentSubmission.Shared.BusinessEntities.ContentSubmission of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        Attributes of this ContentSubmission

        :return: The attributes of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :rtype: List[ContentSubmissionSharedBusinessEntitiesContentSubmissionAttribute]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        Attributes of this ContentSubmission

        :param attributes: The attributes of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :type attributes: List[ContentSubmissionSharedBusinessEntitiesContentSubmissionAttribute]
        """

        self._attributes = attributes

    @property
    def build_id(self):
        """Gets the build_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        ReadOnly. The ID of the Azure DevOps Build which will build the content package.

        :return: The build_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :rtype: int
        """
        return self._build_id

    @build_id.setter
    def build_id(self, build_id):
        """Sets the build_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        ReadOnly. The ID of the Azure DevOps Build which will build the content package.

        :param build_id: The build_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :type build_id: int
        """

        self._build_id = build_id

    @property
    def content_definition_id(self):
        """Gets the content_definition_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        The ID of the Content Definition.

        :return: The content_definition_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :rtype: int
        """
        return self._content_definition_id

    @content_definition_id.setter
    def content_definition_id(self, content_definition_id):
        """Sets the content_definition_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        The ID of the Content Definition.

        :param content_definition_id: The content_definition_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :type content_definition_id: int
        """

        self._content_definition_id = content_definition_id

    @property
    def content_submission_id(self):
        """Gets the content_submission_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        The ID of this Content Submission.

        :return: The content_submission_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :rtype: int
        """
        return self._content_submission_id

    @content_submission_id.setter
    def content_submission_id(self, content_submission_id):
        """Sets the content_submission_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        The ID of this Content Submission.

        :param content_submission_id: The content_submission_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :type content_submission_id: int
        """

        self._content_submission_id = content_submission_id

    @property
    def definition(self):
        """Gets the definition of this ContentSubmissionSharedBusinessEntitiesContentSubmission.


        :return: The definition of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :rtype: ContentSubmissionSharedBusinessEntitiesContentDefinition
        """
        return self._definition

    @definition.setter
    def definition(self, definition):
        """Sets the definition of this ContentSubmissionSharedBusinessEntitiesContentSubmission.


        :param definition: The definition of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :type definition: ContentSubmissionSharedBusinessEntitiesContentDefinition
        """

        self._definition = definition

    @property
    def job_run_id(self):
        """Gets the job_run_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        ReadOnly. The ID of the JobRun which will build the content package.

        :return: The job_run_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :rtype: int
        """
        return self._job_run_id

    @job_run_id.setter
    def job_run_id(self, job_run_id):
        """Sets the job_run_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        ReadOnly. The ID of the JobRun which will build the content package.

        :param job_run_id: The job_run_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :type job_run_id: int
        """

        self._job_run_id = job_run_id

    @property
    def package_id(self):
        """Gets the package_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        The ID of package generated by this content submission.

        :return: The package_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :rtype: str
        """
        return self._package_id

    @package_id.setter
    def package_id(self, package_id):
        """Sets the package_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        The ID of package generated by this content submission.

        :param package_id: The package_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :type package_id: str
        """

        self._package_id = package_id

    @property
    def release_notes(self):
        """Gets the release_notes of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        Release Notes for this ContentSubmission

        :return: The release_notes of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :rtype: str
        """
        return self._release_notes

    @release_notes.setter
    def release_notes(self, release_notes):
        """Sets the release_notes of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        Release Notes for this ContentSubmission

        :param release_notes: The release_notes of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :type release_notes: str
        """

        self._release_notes = release_notes

    @property
    def repository(self):
        """Gets the repository of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        The SVN repository used as the source of this content submission

        :return: The repository of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :rtype: str
        """
        return self._repository

    @repository.setter
    def repository(self, repository):
        """Sets the repository of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        The SVN repository used as the source of this content submission

        :param repository: The repository of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :type repository: str
        """

        self._repository = repository

    @property
    def revision(self):
        """Gets the revision of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        The SVN revision used as the source of this content submission.

        :return: The revision of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :rtype: int
        """
        return self._revision

    @revision.setter
    def revision(self, revision):
        """Sets the revision of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        The SVN revision used as the source of this content submission.

        :param revision: The revision of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :type revision: int
        """

        self._revision = revision

    @property
    def submission_date(self):
        """Gets the submission_date of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        Read Only. The UTC date and time the content submission was made.

        :return: The submission_date of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :rtype: datetime
        """
        return self._submission_date

    @submission_date.setter
    def submission_date(self, submission_date):
        """Sets the submission_date of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        Read Only. The UTC date and time the content submission was made.

        :param submission_date: The submission_date of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :type submission_date: datetime
        """

        self._submission_date = submission_date

    @property
    def user_id(self):
        """Gets the user_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        Read Only. The ID of the user who submitted the content

        :return: The user_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        Read Only. The ID of the user who submitted the content

        :param user_id: The user_id of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :type user_id: int
        """

        self._user_id = user_id

    @property
    def version(self):
        """Gets the version of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        Optional.  The version number assigned to this Content Submission and the resulting Package.              If not provided, version shall be 1 if it is the first content submission for the               ContentDefinitionID otherwise it shall be the highest content submission version for the              specified ContentDefinitionID incremented by 1.

        :return: The version of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ContentSubmissionSharedBusinessEntitiesContentSubmission.

        Optional.  The version number assigned to this Content Submission and the resulting Package.              If not provided, version shall be 1 if it is the first content submission for the               ContentDefinitionID otherwise it shall be the highest content submission version for the              specified ContentDefinitionID incremented by 1.

        :param version: The version of this ContentSubmissionSharedBusinessEntitiesContentSubmission.
        :type version: int
        """

        self._version = version
