# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DealerDBModelsLicenseActivation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key: str=None, license_data: str=None):
        """DealerDBModelsLicenseActivation - a model defined in OpenAPI

        :param key: The key of this DealerDBModelsLicenseActivation.
        :param license_data: The license_data of this DealerDBModelsLicenseActivation.
        """
        self.openapi_types = {
            'key': str,
            'license_data': str
        }

        self.attribute_map = {
            'key': 'Key',
            'license_data': 'LicenseData'
        }

        self._key = key
        self._license_data = license_data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DealerDBModelsLicenseActivation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DealerDB.Models.LicenseActivation of this DealerDBModelsLicenseActivation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self):
        """Gets the key of this DealerDBModelsLicenseActivation.

        The license key in base64 format.  This is only provided when the LicenseData is a new license.

        :return: The key of this DealerDBModelsLicenseActivation.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this DealerDBModelsLicenseActivation.

        The license key in base64 format.  This is only provided when the LicenseData is a new license.

        :param key: The key of this DealerDBModelsLicenseActivation.
        :type key: str
        """

        self._key = key

    @property
    def license_data(self):
        """Gets the license_data of this DealerDBModelsLicenseActivation.

        The license data in base64 format.

        :return: The license_data of this DealerDBModelsLicenseActivation.
        :rtype: str
        """
        return self._license_data

    @license_data.setter
    def license_data(self, license_data):
        """Sets the license_data of this DealerDBModelsLicenseActivation.

        The license data in base64 format.

        :param license_data: The license_data of this DealerDBModelsLicenseActivation.
        :type license_data: str
        """

        self._license_data = license_data
