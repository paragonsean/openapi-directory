# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.build_system_shared_dto_activity_run import BuildSystemSharedDTOActivityRun
from openapi_server.models.build_system_shared_dto_parameter_value import BuildSystemSharedDTOParameterValue
from openapi_server import util


class BuildSystemSharedDTOJobRun(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_runs: List[BuildSystemSharedDTOActivityRun]=None, end_date: datetime=None, job_id: int=None, job_run_id: int=None, parameters: List[BuildSystemSharedDTOParameterValue]=None, start_date: datetime=None, status: str=None):
        """BuildSystemSharedDTOJobRun - a model defined in OpenAPI

        :param activity_runs: The activity_runs of this BuildSystemSharedDTOJobRun.
        :param end_date: The end_date of this BuildSystemSharedDTOJobRun.
        :param job_id: The job_id of this BuildSystemSharedDTOJobRun.
        :param job_run_id: The job_run_id of this BuildSystemSharedDTOJobRun.
        :param parameters: The parameters of this BuildSystemSharedDTOJobRun.
        :param start_date: The start_date of this BuildSystemSharedDTOJobRun.
        :param status: The status of this BuildSystemSharedDTOJobRun.
        """
        self.openapi_types = {
            'activity_runs': List[BuildSystemSharedDTOActivityRun],
            'end_date': datetime,
            'job_id': int,
            'job_run_id': int,
            'parameters': List[BuildSystemSharedDTOParameterValue],
            'start_date': datetime,
            'status': str
        }

        self.attribute_map = {
            'activity_runs': 'ActivityRuns',
            'end_date': 'EndDate',
            'job_id': 'JobID',
            'job_run_id': 'JobRunID',
            'parameters': 'Parameters',
            'start_date': 'StartDate',
            'status': 'Status'
        }

        self._activity_runs = activity_runs
        self._end_date = end_date
        self._job_id = job_id
        self._job_run_id = job_run_id
        self._parameters = parameters
        self._start_date = start_date
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuildSystemSharedDTOJobRun':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BuildSystem.Shared.DTO.JobRun of this BuildSystemSharedDTOJobRun.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_runs(self):
        """Gets the activity_runs of this BuildSystemSharedDTOJobRun.

        The activity runs belonging to this JobRun

        :return: The activity_runs of this BuildSystemSharedDTOJobRun.
        :rtype: List[BuildSystemSharedDTOActivityRun]
        """
        return self._activity_runs

    @activity_runs.setter
    def activity_runs(self, activity_runs):
        """Sets the activity_runs of this BuildSystemSharedDTOJobRun.

        The activity runs belonging to this JobRun

        :param activity_runs: The activity_runs of this BuildSystemSharedDTOJobRun.
        :type activity_runs: List[BuildSystemSharedDTOActivityRun]
        """

        self._activity_runs = activity_runs

    @property
    def end_date(self):
        """Gets the end_date of this BuildSystemSharedDTOJobRun.

        The UTC date and time when the job completed

        :return: The end_date of this BuildSystemSharedDTOJobRun.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this BuildSystemSharedDTOJobRun.

        The UTC date and time when the job completed

        :param end_date: The end_date of this BuildSystemSharedDTOJobRun.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def job_id(self):
        """Gets the job_id of this BuildSystemSharedDTOJobRun.

        The ID of the job that defines the run

        :return: The job_id of this BuildSystemSharedDTOJobRun.
        :rtype: int
        """
        return self._job_id

    @job_id.setter
    def job_id(self, job_id):
        """Sets the job_id of this BuildSystemSharedDTOJobRun.

        The ID of the job that defines the run

        :param job_id: The job_id of this BuildSystemSharedDTOJobRun.
        :type job_id: int
        """

        self._job_id = job_id

    @property
    def job_run_id(self):
        """Gets the job_run_id of this BuildSystemSharedDTOJobRun.

        The ID of this JobRun

        :return: The job_run_id of this BuildSystemSharedDTOJobRun.
        :rtype: int
        """
        return self._job_run_id

    @job_run_id.setter
    def job_run_id(self, job_run_id):
        """Sets the job_run_id of this BuildSystemSharedDTOJobRun.

        The ID of this JobRun

        :param job_run_id: The job_run_id of this BuildSystemSharedDTOJobRun.
        :type job_run_id: int
        """

        self._job_run_id = job_run_id

    @property
    def parameters(self):
        """Gets the parameters of this BuildSystemSharedDTOJobRun.

        The parameters used for this run of the job

        :return: The parameters of this BuildSystemSharedDTOJobRun.
        :rtype: List[BuildSystemSharedDTOParameterValue]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this BuildSystemSharedDTOJobRun.

        The parameters used for this run of the job

        :param parameters: The parameters of this BuildSystemSharedDTOJobRun.
        :type parameters: List[BuildSystemSharedDTOParameterValue]
        """

        self._parameters = parameters

    @property
    def start_date(self):
        """Gets the start_date of this BuildSystemSharedDTOJobRun.

        The UTC date and time when the job started

        :return: The start_date of this BuildSystemSharedDTOJobRun.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this BuildSystemSharedDTOJobRun.

        The UTC date and time when the job started

        :param start_date: The start_date of this BuildSystemSharedDTOJobRun.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def status(self):
        """Gets the status of this BuildSystemSharedDTOJobRun.

        The status of this JobRun

        :return: The status of this BuildSystemSharedDTOJobRun.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this BuildSystemSharedDTOJobRun.

        The status of this JobRun

        :param status: The status of this BuildSystemSharedDTOJobRun.
        :type status: str
        """
        allowed_values = ["Ready", "InProgress", "Succeeded", "Cancelled", "Failed"]  # noqa: E501
        if status not in allowed_values:
            raise ValueError(
                "Invalid value for `status` ({0}), must be one of {1}"
                .format(status, allowed_values)
            )

        self._status = status
