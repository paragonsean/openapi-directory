# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DealerDBModelsLicense(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, created_date: datetime=None, deactivated_date: datetime=None, license_activation_type: str=None, license_id: str=None, license_version: str=None, refresh_date: datetime=None, system_info: str=None, updated_license_version: str=None, voucher_code: str=None):
        """DealerDBModelsLicense - a model defined in OpenAPI

        :param active: The active of this DealerDBModelsLicense.
        :param created_date: The created_date of this DealerDBModelsLicense.
        :param deactivated_date: The deactivated_date of this DealerDBModelsLicense.
        :param license_activation_type: The license_activation_type of this DealerDBModelsLicense.
        :param license_id: The license_id of this DealerDBModelsLicense.
        :param license_version: The license_version of this DealerDBModelsLicense.
        :param refresh_date: The refresh_date of this DealerDBModelsLicense.
        :param system_info: The system_info of this DealerDBModelsLicense.
        :param updated_license_version: The updated_license_version of this DealerDBModelsLicense.
        :param voucher_code: The voucher_code of this DealerDBModelsLicense.
        """
        self.openapi_types = {
            'active': bool,
            'created_date': datetime,
            'deactivated_date': datetime,
            'license_activation_type': str,
            'license_id': str,
            'license_version': str,
            'refresh_date': datetime,
            'system_info': str,
            'updated_license_version': str,
            'voucher_code': str
        }

        self.attribute_map = {
            'active': 'Active',
            'created_date': 'CreatedDate',
            'deactivated_date': 'DeactivatedDate',
            'license_activation_type': 'LicenseActivationType',
            'license_id': 'LicenseID',
            'license_version': 'LicenseVersion',
            'refresh_date': 'RefreshDate',
            'system_info': 'SystemInfo',
            'updated_license_version': 'UpdatedLicenseVersion',
            'voucher_code': 'VoucherCode'
        }

        self._active = active
        self._created_date = created_date
        self._deactivated_date = deactivated_date
        self._license_activation_type = license_activation_type
        self._license_id = license_id
        self._license_version = license_version
        self._refresh_date = refresh_date
        self._system_info = system_info
        self._updated_license_version = updated_license_version
        self._voucher_code = voucher_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DealerDBModelsLicense':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DealerDB.Models.License of this DealerDBModelsLicense.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this DealerDBModelsLicense.

        True if license is active.

        :return: The active of this DealerDBModelsLicense.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this DealerDBModelsLicense.

        True if license is active.

        :param active: The active of this DealerDBModelsLicense.
        :type active: bool
        """

        self._active = active

    @property
    def created_date(self):
        """Gets the created_date of this DealerDBModelsLicense.

        The date the license was created.

        :return: The created_date of this DealerDBModelsLicense.
        :rtype: datetime
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this DealerDBModelsLicense.

        The date the license was created.

        :param created_date: The created_date of this DealerDBModelsLicense.
        :type created_date: datetime
        """

        self._created_date = created_date

    @property
    def deactivated_date(self):
        """Gets the deactivated_date of this DealerDBModelsLicense.

        The date the license was deactivated.

        :return: The deactivated_date of this DealerDBModelsLicense.
        :rtype: datetime
        """
        return self._deactivated_date

    @deactivated_date.setter
    def deactivated_date(self, deactivated_date):
        """Sets the deactivated_date of this DealerDBModelsLicense.

        The date the license was deactivated.

        :param deactivated_date: The deactivated_date of this DealerDBModelsLicense.
        :type deactivated_date: datetime
        """

        self._deactivated_date = deactivated_date

    @property
    def license_activation_type(self):
        """Gets the license_activation_type of this DealerDBModelsLicense.

        The type of license (e.g. EDT, EDT Lite)

        :return: The license_activation_type of this DealerDBModelsLicense.
        :rtype: str
        """
        return self._license_activation_type

    @license_activation_type.setter
    def license_activation_type(self, license_activation_type):
        """Sets the license_activation_type of this DealerDBModelsLicense.

        The type of license (e.g. EDT, EDT Lite)

        :param license_activation_type: The license_activation_type of this DealerDBModelsLicense.
        :type license_activation_type: str
        """
        allowed_values = ["EDT", "EDTLite"]  # noqa: E501
        if license_activation_type not in allowed_values:
            raise ValueError(
                "Invalid value for `license_activation_type` ({0}), must be one of {1}"
                .format(license_activation_type, allowed_values)
            )

        self._license_activation_type = license_activation_type

    @property
    def license_id(self):
        """Gets the license_id of this DealerDBModelsLicense.

        The LicenseID

        :return: The license_id of this DealerDBModelsLicense.
        :rtype: str
        """
        return self._license_id

    @license_id.setter
    def license_id(self, license_id):
        """Sets the license_id of this DealerDBModelsLicense.

        The LicenseID

        :param license_id: The license_id of this DealerDBModelsLicense.
        :type license_id: str
        """

        self._license_id = license_id

    @property
    def license_version(self):
        """Gets the license_version of this DealerDBModelsLicense.

        The version of the license.

        :return: The license_version of this DealerDBModelsLicense.
        :rtype: str
        """
        return self._license_version

    @license_version.setter
    def license_version(self, license_version):
        """Sets the license_version of this DealerDBModelsLicense.

        The version of the license.

        :param license_version: The license_version of this DealerDBModelsLicense.
        :type license_version: str
        """

        self._license_version = license_version

    @property
    def refresh_date(self):
        """Gets the refresh_date of this DealerDBModelsLicense.

        The date the license was refreshed.

        :return: The refresh_date of this DealerDBModelsLicense.
        :rtype: datetime
        """
        return self._refresh_date

    @refresh_date.setter
    def refresh_date(self, refresh_date):
        """Sets the refresh_date of this DealerDBModelsLicense.

        The date the license was refreshed.

        :param refresh_date: The refresh_date of this DealerDBModelsLicense.
        :type refresh_date: datetime
        """

        self._refresh_date = refresh_date

    @property
    def system_info(self):
        """Gets the system_info of this DealerDBModelsLicense.

        Information about the system which is licensed.

        :return: The system_info of this DealerDBModelsLicense.
        :rtype: str
        """
        return self._system_info

    @system_info.setter
    def system_info(self, system_info):
        """Sets the system_info of this DealerDBModelsLicense.

        Information about the system which is licensed.

        :param system_info: The system_info of this DealerDBModelsLicense.
        :type system_info: str
        """

        self._system_info = system_info

    @property
    def updated_license_version(self):
        """Gets the updated_license_version of this DealerDBModelsLicense.

        The updated version of the license.  A value in this field indicates that the update has not been confirmed.

        :return: The updated_license_version of this DealerDBModelsLicense.
        :rtype: str
        """
        return self._updated_license_version

    @updated_license_version.setter
    def updated_license_version(self, updated_license_version):
        """Sets the updated_license_version of this DealerDBModelsLicense.

        The updated version of the license.  A value in this field indicates that the update has not been confirmed.

        :param updated_license_version: The updated_license_version of this DealerDBModelsLicense.
        :type updated_license_version: str
        """

        self._updated_license_version = updated_license_version

    @property
    def voucher_code(self):
        """Gets the voucher_code of this DealerDBModelsLicense.

        The voucher code that generated the license.

        :return: The voucher_code of this DealerDBModelsLicense.
        :rtype: str
        """
        return self._voucher_code

    @voucher_code.setter
    def voucher_code(self, voucher_code):
        """Sets the voucher_code of this DealerDBModelsLicense.

        The voucher code that generated the license.

        :param voucher_code: The voucher_code of this DealerDBModelsLicense.
        :type voucher_code: str
        """

        self._voucher_code = voucher_code
