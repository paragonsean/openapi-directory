# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateSystemModelsPackageType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attribute: str=None, category: str=None, description: str=None, icon: str=None, inventory_frequency: int=None, inventory_package: str=None, localized_description: str=None, localized_name: str=None, max_delta_packages: int=None, package_type_id: str=None):
        """UpdateSystemModelsPackageType - a model defined in OpenAPI

        :param attribute: The attribute of this UpdateSystemModelsPackageType.
        :param category: The category of this UpdateSystemModelsPackageType.
        :param description: The description of this UpdateSystemModelsPackageType.
        :param icon: The icon of this UpdateSystemModelsPackageType.
        :param inventory_frequency: The inventory_frequency of this UpdateSystemModelsPackageType.
        :param inventory_package: The inventory_package of this UpdateSystemModelsPackageType.
        :param localized_description: The localized_description of this UpdateSystemModelsPackageType.
        :param localized_name: The localized_name of this UpdateSystemModelsPackageType.
        :param max_delta_packages: The max_delta_packages of this UpdateSystemModelsPackageType.
        :param package_type_id: The package_type_id of this UpdateSystemModelsPackageType.
        """
        self.openapi_types = {
            'attribute': str,
            'category': str,
            'description': str,
            'icon': str,
            'inventory_frequency': int,
            'inventory_package': str,
            'localized_description': str,
            'localized_name': str,
            'max_delta_packages': int,
            'package_type_id': str
        }

        self.attribute_map = {
            'attribute': 'Attribute',
            'category': 'Category',
            'description': 'Description',
            'icon': 'Icon',
            'inventory_frequency': 'InventoryFrequency',
            'inventory_package': 'InventoryPackage',
            'localized_description': 'LocalizedDescription',
            'localized_name': 'LocalizedName',
            'max_delta_packages': 'MaxDeltaPackages',
            'package_type_id': 'PackageTypeID'
        }

        self._attribute = attribute
        self._category = category
        self._description = description
        self._icon = icon
        self._inventory_frequency = inventory_frequency
        self._inventory_package = inventory_package
        self._localized_description = localized_description
        self._localized_name = localized_name
        self._max_delta_packages = max_delta_packages
        self._package_type_id = package_type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateSystemModelsPackageType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateSystem.Models.PackageType of this UpdateSystemModelsPackageType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribute(self):
        """Gets the attribute of this UpdateSystemModelsPackageType.

        The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.

        :return: The attribute of this UpdateSystemModelsPackageType.
        :rtype: str
        """
        return self._attribute

    @attribute.setter
    def attribute(self, attribute):
        """Sets the attribute of this UpdateSystemModelsPackageType.

        The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.

        :param attribute: The attribute of this UpdateSystemModelsPackageType.
        :type attribute: str
        """

        self._attribute = attribute

    @property
    def category(self):
        """Gets the category of this UpdateSystemModelsPackageType.

        The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.

        :return: The category of this UpdateSystemModelsPackageType.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this UpdateSystemModelsPackageType.

        The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.

        :param category: The category of this UpdateSystemModelsPackageType.
        :type category: str
        """

        self._category = category

    @property
    def description(self):
        """Gets the description of this UpdateSystemModelsPackageType.

        The description of the package type

        :return: The description of this UpdateSystemModelsPackageType.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateSystemModelsPackageType.

        The description of the package type

        :param description: The description of this UpdateSystemModelsPackageType.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")

        self._description = description

    @property
    def icon(self):
        """Gets the icon of this UpdateSystemModelsPackageType.

        Optional.  The icon to use for the PackageType, in base 64

        :return: The icon of this UpdateSystemModelsPackageType.
        :rtype: str
        """
        return self._icon

    @icon.setter
    def icon(self, icon):
        """Sets the icon of this UpdateSystemModelsPackageType.

        Optional.  The icon to use for the PackageType, in base 64

        :param icon: The icon of this UpdateSystemModelsPackageType.
        :type icon: str
        """

        self._icon = icon

    @property
    def inventory_frequency(self):
        """Gets the inventory_frequency of this UpdateSystemModelsPackageType.

        The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).

        :return: The inventory_frequency of this UpdateSystemModelsPackageType.
        :rtype: int
        """
        return self._inventory_frequency

    @inventory_frequency.setter
    def inventory_frequency(self, inventory_frequency):
        """Sets the inventory_frequency of this UpdateSystemModelsPackageType.

        The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).

        :param inventory_frequency: The inventory_frequency of this UpdateSystemModelsPackageType.
        :type inventory_frequency: int
        """

        self._inventory_frequency = inventory_frequency

    @property
    def inventory_package(self):
        """Gets the inventory_package of this UpdateSystemModelsPackageType.

        The inventory package used to determine what version of this package type is installed.

        :return: The inventory_package of this UpdateSystemModelsPackageType.
        :rtype: str
        """
        return self._inventory_package

    @inventory_package.setter
    def inventory_package(self, inventory_package):
        """Sets the inventory_package of this UpdateSystemModelsPackageType.

        The inventory package used to determine what version of this package type is installed.

        :param inventory_package: The inventory_package of this UpdateSystemModelsPackageType.
        :type inventory_package: str
        """

        self._inventory_package = inventory_package

    @property
    def localized_description(self):
        """Gets the localized_description of this UpdateSystemModelsPackageType.

        Optional. The StringID used to localize the description of the PackageType

        :return: The localized_description of this UpdateSystemModelsPackageType.
        :rtype: str
        """
        return self._localized_description

    @localized_description.setter
    def localized_description(self, localized_description):
        """Sets the localized_description of this UpdateSystemModelsPackageType.

        Optional. The StringID used to localize the description of the PackageType

        :param localized_description: The localized_description of this UpdateSystemModelsPackageType.
        :type localized_description: str
        """

        self._localized_description = localized_description

    @property
    def localized_name(self):
        """Gets the localized_name of this UpdateSystemModelsPackageType.

        Optional. The StringID used to localize the name of the PackageType

        :return: The localized_name of this UpdateSystemModelsPackageType.
        :rtype: str
        """
        return self._localized_name

    @localized_name.setter
    def localized_name(self, localized_name):
        """Sets the localized_name of this UpdateSystemModelsPackageType.

        Optional. The StringID used to localize the name of the PackageType

        :param localized_name: The localized_name of this UpdateSystemModelsPackageType.
        :type localized_name: str
        """

        self._localized_name = localized_name

    @property
    def max_delta_packages(self):
        """Gets the max_delta_packages of this UpdateSystemModelsPackageType.

        The maximum number of \"chained\" delta packages to use when updating the client

        :return: The max_delta_packages of this UpdateSystemModelsPackageType.
        :rtype: int
        """
        return self._max_delta_packages

    @max_delta_packages.setter
    def max_delta_packages(self, max_delta_packages):
        """Sets the max_delta_packages of this UpdateSystemModelsPackageType.

        The maximum number of \"chained\" delta packages to use when updating the client

        :param max_delta_packages: The max_delta_packages of this UpdateSystemModelsPackageType.
        :type max_delta_packages: int
        """

        self._max_delta_packages = max_delta_packages

    @property
    def package_type_id(self):
        """Gets the package_type_id of this UpdateSystemModelsPackageType.

        Read Only. The package type id.

        :return: The package_type_id of this UpdateSystemModelsPackageType.
        :rtype: str
        """
        return self._package_type_id

    @package_type_id.setter
    def package_type_id(self, package_type_id):
        """Sets the package_type_id of this UpdateSystemModelsPackageType.

        Read Only. The package type id.

        :param package_type_id: The package_type_id of this UpdateSystemModelsPackageType.
        :type package_type_id: str
        """

        self._package_type_id = package_type_id
