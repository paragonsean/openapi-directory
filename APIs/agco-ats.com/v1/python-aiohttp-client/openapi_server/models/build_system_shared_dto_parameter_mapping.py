# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BuildSystemSharedDTOParameterMapping(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, source: str=None, source_type: str=None):
        """BuildSystemSharedDTOParameterMapping - a model defined in OpenAPI

        :param name: The name of this BuildSystemSharedDTOParameterMapping.
        :param source: The source of this BuildSystemSharedDTOParameterMapping.
        :param source_type: The source_type of this BuildSystemSharedDTOParameterMapping.
        """
        self.openapi_types = {
            'name': str,
            'source': str,
            'source_type': str
        }

        self.attribute_map = {
            'name': 'Name',
            'source': 'Source',
            'source_type': 'SourceType'
        }

        self._name = name
        self._source = source
        self._source_type = source_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuildSystemSharedDTOParameterMapping':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BuildSystem.Shared.DTO.ParameterMapping of this BuildSystemSharedDTOParameterMapping.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this BuildSystemSharedDTOParameterMapping.

        The name of the parameter this mapping applies to

        :return: The name of this BuildSystemSharedDTOParameterMapping.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BuildSystemSharedDTOParameterMapping.

        The name of the parameter this mapping applies to

        :param name: The name of this BuildSystemSharedDTOParameterMapping.
        :type name: str
        """

        self._name = name

    @property
    def source(self):
        """Gets the source of this BuildSystemSharedDTOParameterMapping.

        The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable

        :return: The source of this BuildSystemSharedDTOParameterMapping.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this BuildSystemSharedDTOParameterMapping.

        The source of the value.  The meaning of this value is determined by the source type.  When the source type is “Constant” then source is the value formatted as a string.  When the source type is “Variable” then the source is the name of the variable

        :param source: The source of this BuildSystemSharedDTOParameterMapping.
        :type source: str
        """

        self._source = source

    @property
    def source_type(self):
        """Gets the source_type of this BuildSystemSharedDTOParameterMapping.

        The source type used for supplying the parameter

        :return: The source_type of this BuildSystemSharedDTOParameterMapping.
        :rtype: str
        """
        return self._source_type

    @source_type.setter
    def source_type(self, source_type):
        """Sets the source_type of this BuildSystemSharedDTOParameterMapping.

        The source type used for supplying the parameter

        :param source_type: The source_type of this BuildSystemSharedDTOParameterMapping.
        :type source_type: str
        """
        allowed_values = ["Constant", "Variable"]  # noqa: E501
        if source_type not in allowed_values:
            raise ValueError(
                "Invalid value for `source_type` ({0}), must be one of {1}"
                .format(source_type, allowed_values)
            )

        self._source_type = source_type
