# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GlobalResourcesSharedModelsStringTranslation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, author_id: int=None, language_id: int=None, state: str=None, string_id: str=None, string_value: str=None, timestamp: str=None):
        """GlobalResourcesSharedModelsStringTranslation - a model defined in OpenAPI

        :param author_id: The author_id of this GlobalResourcesSharedModelsStringTranslation.
        :param language_id: The language_id of this GlobalResourcesSharedModelsStringTranslation.
        :param state: The state of this GlobalResourcesSharedModelsStringTranslation.
        :param string_id: The string_id of this GlobalResourcesSharedModelsStringTranslation.
        :param string_value: The string_value of this GlobalResourcesSharedModelsStringTranslation.
        :param timestamp: The timestamp of this GlobalResourcesSharedModelsStringTranslation.
        """
        self.openapi_types = {
            'author_id': int,
            'language_id': int,
            'state': str,
            'string_id': str,
            'string_value': str,
            'timestamp': str
        }

        self.attribute_map = {
            'author_id': 'AuthorId',
            'language_id': 'LanguageId',
            'state': 'State',
            'string_id': 'StringId',
            'string_value': 'StringValue',
            'timestamp': 'Timestamp'
        }

        self._author_id = author_id
        self._language_id = language_id
        self._state = state
        self._string_id = string_id
        self._string_value = string_value
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GlobalResourcesSharedModelsStringTranslation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GlobalResources.Shared.Models.StringTranslation of this GlobalResourcesSharedModelsStringTranslation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def author_id(self):
        """Gets the author_id of this GlobalResourcesSharedModelsStringTranslation.

        The id of the user to last edit thie translation

        :return: The author_id of this GlobalResourcesSharedModelsStringTranslation.
        :rtype: int
        """
        return self._author_id

    @author_id.setter
    def author_id(self, author_id):
        """Sets the author_id of this GlobalResourcesSharedModelsStringTranslation.

        The id of the user to last edit thie translation

        :param author_id: The author_id of this GlobalResourcesSharedModelsStringTranslation.
        :type author_id: int
        """

        self._author_id = author_id

    @property
    def language_id(self):
        """Gets the language_id of this GlobalResourcesSharedModelsStringTranslation.

        The id of the language of the translation

        :return: The language_id of this GlobalResourcesSharedModelsStringTranslation.
        :rtype: int
        """
        return self._language_id

    @language_id.setter
    def language_id(self, language_id):
        """Sets the language_id of this GlobalResourcesSharedModelsStringTranslation.

        The id of the language of the translation

        :param language_id: The language_id of this GlobalResourcesSharedModelsStringTranslation.
        :type language_id: int
        """

        self._language_id = language_id

    @property
    def state(self):
        """Gets the state of this GlobalResourcesSharedModelsStringTranslation.

        The state of the translation

        :return: The state of this GlobalResourcesSharedModelsStringTranslation.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GlobalResourcesSharedModelsStringTranslation.

        The state of the translation

        :param state: The state of this GlobalResourcesSharedModelsStringTranslation.
        :type state: str
        """
        allowed_values = ["Original", "Requested", "Processing", "Processed", "Validated", "Invalidated", "RequestPending", "CreatePending"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def string_id(self):
        """Gets the string_id of this GlobalResourcesSharedModelsStringTranslation.

        The id of the string that is translated

        :return: The string_id of this GlobalResourcesSharedModelsStringTranslation.
        :rtype: str
        """
        return self._string_id

    @string_id.setter
    def string_id(self, string_id):
        """Sets the string_id of this GlobalResourcesSharedModelsStringTranslation.

        The id of the string that is translated

        :param string_id: The string_id of this GlobalResourcesSharedModelsStringTranslation.
        :type string_id: str
        """

        self._string_id = string_id

    @property
    def string_value(self):
        """Gets the string_value of this GlobalResourcesSharedModelsStringTranslation.

        The translated string

        :return: The string_value of this GlobalResourcesSharedModelsStringTranslation.
        :rtype: str
        """
        return self._string_value

    @string_value.setter
    def string_value(self, string_value):
        """Sets the string_value of this GlobalResourcesSharedModelsStringTranslation.

        The translated string

        :param string_value: The string_value of this GlobalResourcesSharedModelsStringTranslation.
        :type string_value: str
        """
        if string_value is None:
            raise ValueError("Invalid value for `string_value`, must not be `None`")

        self._string_value = string_value

    @property
    def timestamp(self):
        """Gets the timestamp of this GlobalResourcesSharedModelsStringTranslation.

        A value indicating the last modification of this translation. Read Only.

        :return: The timestamp of this GlobalResourcesSharedModelsStringTranslation.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this GlobalResourcesSharedModelsStringTranslation.

        A value indicating the last modification of this translation. Read Only.

        :param timestamp: The timestamp of this GlobalResourcesSharedModelsStringTranslation.
        :type timestamp: str
        """

        self._timestamp = timestamp
