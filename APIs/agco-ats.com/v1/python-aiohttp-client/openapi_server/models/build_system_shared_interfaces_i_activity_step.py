# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.build_system_shared_interfaces_i_parameter_mapping import BuildSystemSharedInterfacesIParameterMapping
from openapi_server import util


class BuildSystemSharedInterfacesIActivityStep(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, activity_id: int=None, activity_step_id: int=None, implementation_id: str=None, parameter_mappings: List[BuildSystemSharedInterfacesIParameterMapping]=None, run_order: int=None, step_id: int=None, step_name: str=None, use_config: str=None):
        """BuildSystemSharedInterfacesIActivityStep - a model defined in OpenAPI

        :param activity_id: The activity_id of this BuildSystemSharedInterfacesIActivityStep.
        :param activity_step_id: The activity_step_id of this BuildSystemSharedInterfacesIActivityStep.
        :param implementation_id: The implementation_id of this BuildSystemSharedInterfacesIActivityStep.
        :param parameter_mappings: The parameter_mappings of this BuildSystemSharedInterfacesIActivityStep.
        :param run_order: The run_order of this BuildSystemSharedInterfacesIActivityStep.
        :param step_id: The step_id of this BuildSystemSharedInterfacesIActivityStep.
        :param step_name: The step_name of this BuildSystemSharedInterfacesIActivityStep.
        :param use_config: The use_config of this BuildSystemSharedInterfacesIActivityStep.
        """
        self.openapi_types = {
            'activity_id': int,
            'activity_step_id': int,
            'implementation_id': str,
            'parameter_mappings': List[BuildSystemSharedInterfacesIParameterMapping],
            'run_order': int,
            'step_id': int,
            'step_name': str,
            'use_config': str
        }

        self.attribute_map = {
            'activity_id': 'ActivityID',
            'activity_step_id': 'ActivityStepID',
            'implementation_id': 'ImplementationID',
            'parameter_mappings': 'ParameterMappings',
            'run_order': 'RunOrder',
            'step_id': 'StepID',
            'step_name': 'StepName',
            'use_config': 'UseConfig'
        }

        self._activity_id = activity_id
        self._activity_step_id = activity_step_id
        self._implementation_id = implementation_id
        self._parameter_mappings = parameter_mappings
        self._run_order = run_order
        self._step_id = step_id
        self._step_name = step_name
        self._use_config = use_config

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuildSystemSharedInterfacesIActivityStep':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BuildSystem.Shared.Interfaces.IActivityStep of this BuildSystemSharedInterfacesIActivityStep.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def activity_id(self):
        """Gets the activity_id of this BuildSystemSharedInterfacesIActivityStep.

        ActivityID

        :return: The activity_id of this BuildSystemSharedInterfacesIActivityStep.
        :rtype: int
        """
        return self._activity_id

    @activity_id.setter
    def activity_id(self, activity_id):
        """Sets the activity_id of this BuildSystemSharedInterfacesIActivityStep.

        ActivityID

        :param activity_id: The activity_id of this BuildSystemSharedInterfacesIActivityStep.
        :type activity_id: int
        """

        self._activity_id = activity_id

    @property
    def activity_step_id(self):
        """Gets the activity_step_id of this BuildSystemSharedInterfacesIActivityStep.

        ActivityStepID

        :return: The activity_step_id of this BuildSystemSharedInterfacesIActivityStep.
        :rtype: int
        """
        return self._activity_step_id

    @activity_step_id.setter
    def activity_step_id(self, activity_step_id):
        """Sets the activity_step_id of this BuildSystemSharedInterfacesIActivityStep.

        ActivityStepID

        :param activity_step_id: The activity_step_id of this BuildSystemSharedInterfacesIActivityStep.
        :type activity_step_id: int
        """

        self._activity_step_id = activity_step_id

    @property
    def implementation_id(self):
        """Gets the implementation_id of this BuildSystemSharedInterfacesIActivityStep.

        Implementation ID

        :return: The implementation_id of this BuildSystemSharedInterfacesIActivityStep.
        :rtype: str
        """
        return self._implementation_id

    @implementation_id.setter
    def implementation_id(self, implementation_id):
        """Sets the implementation_id of this BuildSystemSharedInterfacesIActivityStep.

        Implementation ID

        :param implementation_id: The implementation_id of this BuildSystemSharedInterfacesIActivityStep.
        :type implementation_id: str
        """

        self._implementation_id = implementation_id

    @property
    def parameter_mappings(self):
        """Gets the parameter_mappings of this BuildSystemSharedInterfacesIActivityStep.

        ParameterMappings

        :return: The parameter_mappings of this BuildSystemSharedInterfacesIActivityStep.
        :rtype: List[BuildSystemSharedInterfacesIParameterMapping]
        """
        return self._parameter_mappings

    @parameter_mappings.setter
    def parameter_mappings(self, parameter_mappings):
        """Sets the parameter_mappings of this BuildSystemSharedInterfacesIActivityStep.

        ParameterMappings

        :param parameter_mappings: The parameter_mappings of this BuildSystemSharedInterfacesIActivityStep.
        :type parameter_mappings: List[BuildSystemSharedInterfacesIParameterMapping]
        """

        self._parameter_mappings = parameter_mappings

    @property
    def run_order(self):
        """Gets the run_order of this BuildSystemSharedInterfacesIActivityStep.

        run order

        :return: The run_order of this BuildSystemSharedInterfacesIActivityStep.
        :rtype: int
        """
        return self._run_order

    @run_order.setter
    def run_order(self, run_order):
        """Sets the run_order of this BuildSystemSharedInterfacesIActivityStep.

        run order

        :param run_order: The run_order of this BuildSystemSharedInterfacesIActivityStep.
        :type run_order: int
        """

        self._run_order = run_order

    @property
    def step_id(self):
        """Gets the step_id of this BuildSystemSharedInterfacesIActivityStep.

        step id

        :return: The step_id of this BuildSystemSharedInterfacesIActivityStep.
        :rtype: int
        """
        return self._step_id

    @step_id.setter
    def step_id(self, step_id):
        """Sets the step_id of this BuildSystemSharedInterfacesIActivityStep.

        step id

        :param step_id: The step_id of this BuildSystemSharedInterfacesIActivityStep.
        :type step_id: int
        """

        self._step_id = step_id

    @property
    def step_name(self):
        """Gets the step_name of this BuildSystemSharedInterfacesIActivityStep.

        steo name

        :return: The step_name of this BuildSystemSharedInterfacesIActivityStep.
        :rtype: str
        """
        return self._step_name

    @step_name.setter
    def step_name(self, step_name):
        """Sets the step_name of this BuildSystemSharedInterfacesIActivityStep.

        steo name

        :param step_name: The step_name of this BuildSystemSharedInterfacesIActivityStep.
        :type step_name: str
        """

        self._step_name = step_name

    @property
    def use_config(self):
        """Gets the use_config of this BuildSystemSharedInterfacesIActivityStep.

        UseConfig

        :return: The use_config of this BuildSystemSharedInterfacesIActivityStep.
        :rtype: str
        """
        return self._use_config

    @use_config.setter
    def use_config(self, use_config):
        """Sets the use_config of this BuildSystemSharedInterfacesIActivityStep.

        UseConfig

        :param use_config: The use_config of this BuildSystemSharedInterfacesIActivityStep.
        :type use_config: str
        """

        self._use_config = use_config
