# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GlobalResourcesSharedModelsFileDownload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, crc: str=None, content_type: str=None, description: str=None, id: str=None, is_public: bool=None, name: str=None, path: str=None, size: int=None, state: str=None):
        """GlobalResourcesSharedModelsFileDownload - a model defined in OpenAPI

        :param crc: The crc of this GlobalResourcesSharedModelsFileDownload.
        :param content_type: The content_type of this GlobalResourcesSharedModelsFileDownload.
        :param description: The description of this GlobalResourcesSharedModelsFileDownload.
        :param id: The id of this GlobalResourcesSharedModelsFileDownload.
        :param is_public: The is_public of this GlobalResourcesSharedModelsFileDownload.
        :param name: The name of this GlobalResourcesSharedModelsFileDownload.
        :param path: The path of this GlobalResourcesSharedModelsFileDownload.
        :param size: The size of this GlobalResourcesSharedModelsFileDownload.
        :param state: The state of this GlobalResourcesSharedModelsFileDownload.
        """
        self.openapi_types = {
            'crc': str,
            'content_type': str,
            'description': str,
            'id': str,
            'is_public': bool,
            'name': str,
            'path': str,
            'size': int,
            'state': str
        }

        self.attribute_map = {
            'crc': 'CRC',
            'content_type': 'ContentType',
            'description': 'Description',
            'id': 'Id',
            'is_public': 'IsPublic',
            'name': 'Name',
            'path': 'Path',
            'size': 'Size',
            'state': 'State'
        }

        self._crc = crc
        self._content_type = content_type
        self._description = description
        self._id = id
        self._is_public = is_public
        self._name = name
        self._path = path
        self._size = size
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GlobalResourcesSharedModelsFileDownload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GlobalResources.Shared.Models.FileDownload of this GlobalResourcesSharedModelsFileDownload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def crc(self):
        """Gets the crc of this GlobalResourcesSharedModelsFileDownload.

        The crc of the file (SHA256, HEX-encoded). Must be provided when creating a file.

        :return: The crc of this GlobalResourcesSharedModelsFileDownload.
        :rtype: str
        """
        return self._crc

    @crc.setter
    def crc(self, crc):
        """Sets the crc of this GlobalResourcesSharedModelsFileDownload.

        The crc of the file (SHA256, HEX-encoded). Must be provided when creating a file.

        :param crc: The crc of this GlobalResourcesSharedModelsFileDownload.
        :type crc: str
        """
        if crc is None:
            raise ValueError("Invalid value for `crc`, must not be `None`")

        self._crc = crc

    @property
    def content_type(self):
        """Gets the content_type of this GlobalResourcesSharedModelsFileDownload.

        The type of file; sent as the content-type header.

        :return: The content_type of this GlobalResourcesSharedModelsFileDownload.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this GlobalResourcesSharedModelsFileDownload.

        The type of file; sent as the content-type header.

        :param content_type: The content_type of this GlobalResourcesSharedModelsFileDownload.
        :type content_type: str
        """
        if content_type is None:
            raise ValueError("Invalid value for `content_type`, must not be `None`")

        self._content_type = content_type

    @property
    def description(self):
        """Gets the description of this GlobalResourcesSharedModelsFileDownload.

        The description of the file.

        :return: The description of this GlobalResourcesSharedModelsFileDownload.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GlobalResourcesSharedModelsFileDownload.

        The description of the file.

        :param description: The description of this GlobalResourcesSharedModelsFileDownload.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")

        self._description = description

    @property
    def id(self):
        """Gets the id of this GlobalResourcesSharedModelsFileDownload.

        The Id of the file.

        :return: The id of this GlobalResourcesSharedModelsFileDownload.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GlobalResourcesSharedModelsFileDownload.

        The Id of the file.

        :param id: The id of this GlobalResourcesSharedModelsFileDownload.
        :type id: str
        """

        self._id = id

    @property
    def is_public(self):
        """Gets the is_public of this GlobalResourcesSharedModelsFileDownload.

        Indicates whether this file is available to the public for download.

        :return: The is_public of this GlobalResourcesSharedModelsFileDownload.
        :rtype: bool
        """
        return self._is_public

    @is_public.setter
    def is_public(self, is_public):
        """Sets the is_public of this GlobalResourcesSharedModelsFileDownload.

        Indicates whether this file is available to the public for download.

        :param is_public: The is_public of this GlobalResourcesSharedModelsFileDownload.
        :type is_public: bool
        """
        if is_public is None:
            raise ValueError("Invalid value for `is_public`, must not be `None`")

        self._is_public = is_public

    @property
    def name(self):
        """Gets the name of this GlobalResourcesSharedModelsFileDownload.

        The name of the file when downloaded.

        :return: The name of this GlobalResourcesSharedModelsFileDownload.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GlobalResourcesSharedModelsFileDownload.

        The name of the file when downloaded.

        :param name: The name of this GlobalResourcesSharedModelsFileDownload.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def path(self):
        """Gets the path of this GlobalResourcesSharedModelsFileDownload.

        The Path of the file.

        :return: The path of this GlobalResourcesSharedModelsFileDownload.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this GlobalResourcesSharedModelsFileDownload.

        The Path of the file.

        :param path: The path of this GlobalResourcesSharedModelsFileDownload.
        :type path: str
        """
        if path is None:
            raise ValueError("Invalid value for `path`, must not be `None`")

        self._path = path

    @property
    def size(self):
        """Gets the size of this GlobalResourcesSharedModelsFileDownload.

        The size of the file in bytes. Null until assigned by server when marked as 'Available'. Read Only

        :return: The size of this GlobalResourcesSharedModelsFileDownload.
        :rtype: int
        """
        return self._size

    @size.setter
    def size(self, size):
        """Sets the size of this GlobalResourcesSharedModelsFileDownload.

        The size of the file in bytes. Null until assigned by server when marked as 'Available'. Read Only

        :param size: The size of this GlobalResourcesSharedModelsFileDownload.
        :type size: int
        """

        self._size = size

    @property
    def state(self):
        """Gets the state of this GlobalResourcesSharedModelsFileDownload.

        Indicates the state of this file. Must be 'Created' when created.

        :return: The state of this GlobalResourcesSharedModelsFileDownload.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GlobalResourcesSharedModelsFileDownload.

        Indicates the state of this file. Must be 'Created' when created.

        :param state: The state of this GlobalResourcesSharedModelsFileDownload.
        :type state: str
        """
        allowed_values = ["Created", "Available", "Removed"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state
