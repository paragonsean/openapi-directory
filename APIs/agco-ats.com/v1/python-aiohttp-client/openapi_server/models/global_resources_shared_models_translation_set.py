# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.global_resources_shared_models_translation_set_attribute import GlobalResourcesSharedModelsTranslationSetAttribute
from openapi_server import util


class GlobalResourcesSharedModelsTranslationSet(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: List[GlobalResourcesSharedModelsTranslationSetAttribute]=None, file_ids: List[str]=None, id: int=None, in_date: datetime=None, notes: str=None, out_date: datetime=None, state: str=None, translation_request_id: int=None):
        """GlobalResourcesSharedModelsTranslationSet - a model defined in OpenAPI

        :param attributes: The attributes of this GlobalResourcesSharedModelsTranslationSet.
        :param file_ids: The file_ids of this GlobalResourcesSharedModelsTranslationSet.
        :param id: The id of this GlobalResourcesSharedModelsTranslationSet.
        :param in_date: The in_date of this GlobalResourcesSharedModelsTranslationSet.
        :param notes: The notes of this GlobalResourcesSharedModelsTranslationSet.
        :param out_date: The out_date of this GlobalResourcesSharedModelsTranslationSet.
        :param state: The state of this GlobalResourcesSharedModelsTranslationSet.
        :param translation_request_id: The translation_request_id of this GlobalResourcesSharedModelsTranslationSet.
        """
        self.openapi_types = {
            'attributes': List[GlobalResourcesSharedModelsTranslationSetAttribute],
            'file_ids': List[str],
            'id': int,
            'in_date': datetime,
            'notes': str,
            'out_date': datetime,
            'state': str,
            'translation_request_id': int
        }

        self.attribute_map = {
            'attributes': 'Attributes',
            'file_ids': 'FileIDs',
            'id': 'Id',
            'in_date': 'InDate',
            'notes': 'Notes',
            'out_date': 'OutDate',
            'state': 'State',
            'translation_request_id': 'TranslationRequestID'
        }

        self._attributes = attributes
        self._file_ids = file_ids
        self._id = id
        self._in_date = in_date
        self._notes = notes
        self._out_date = out_date
        self._state = state
        self._translation_request_id = translation_request_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GlobalResourcesSharedModelsTranslationSet':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GlobalResources.Shared.Models.TranslationSet of this GlobalResourcesSharedModelsTranslationSet.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this GlobalResourcesSharedModelsTranslationSet.

        Attributes of the Translation Set

        :return: The attributes of this GlobalResourcesSharedModelsTranslationSet.
        :rtype: List[GlobalResourcesSharedModelsTranslationSetAttribute]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this GlobalResourcesSharedModelsTranslationSet.

        Attributes of the Translation Set

        :param attributes: The attributes of this GlobalResourcesSharedModelsTranslationSet.
        :type attributes: List[GlobalResourcesSharedModelsTranslationSetAttribute]
        """

        self._attributes = attributes

    @property
    def file_ids(self):
        """Gets the file_ids of this GlobalResourcesSharedModelsTranslationSet.

        IDs for files related to this translation set. For example, the original and processed files

        :return: The file_ids of this GlobalResourcesSharedModelsTranslationSet.
        :rtype: List[str]
        """
        return self._file_ids

    @file_ids.setter
    def file_ids(self, file_ids):
        """Sets the file_ids of this GlobalResourcesSharedModelsTranslationSet.

        IDs for files related to this translation set. For example, the original and processed files

        :param file_ids: The file_ids of this GlobalResourcesSharedModelsTranslationSet.
        :type file_ids: List[str]
        """
        if file_ids is None:
            raise ValueError("Invalid value for `file_ids`, must not be `None`")

        self._file_ids = file_ids

    @property
    def id(self):
        """Gets the id of this GlobalResourcesSharedModelsTranslationSet.

        The id of the TranslationSet.

        :return: The id of this GlobalResourcesSharedModelsTranslationSet.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GlobalResourcesSharedModelsTranslationSet.

        The id of the TranslationSet.

        :param id: The id of this GlobalResourcesSharedModelsTranslationSet.
        :type id: int
        """

        self._id = id

    @property
    def in_date(self):
        """Gets the in_date of this GlobalResourcesSharedModelsTranslationSet.

        Read Only. The date the translation set was returned.

        :return: The in_date of this GlobalResourcesSharedModelsTranslationSet.
        :rtype: datetime
        """
        return self._in_date

    @in_date.setter
    def in_date(self, in_date):
        """Sets the in_date of this GlobalResourcesSharedModelsTranslationSet.

        Read Only. The date the translation set was returned.

        :param in_date: The in_date of this GlobalResourcesSharedModelsTranslationSet.
        :type in_date: datetime
        """

        self._in_date = in_date

    @property
    def notes(self):
        """Gets the notes of this GlobalResourcesSharedModelsTranslationSet.

        Notes on the TranslationSet

        :return: The notes of this GlobalResourcesSharedModelsTranslationSet.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this GlobalResourcesSharedModelsTranslationSet.

        Notes on the TranslationSet

        :param notes: The notes of this GlobalResourcesSharedModelsTranslationSet.
        :type notes: str
        """

        self._notes = notes

    @property
    def out_date(self):
        """Gets the out_date of this GlobalResourcesSharedModelsTranslationSet.

        Read Only. The date the translation set was sent out.

        :return: The out_date of this GlobalResourcesSharedModelsTranslationSet.
        :rtype: datetime
        """
        return self._out_date

    @out_date.setter
    def out_date(self, out_date):
        """Sets the out_date of this GlobalResourcesSharedModelsTranslationSet.

        Read Only. The date the translation set was sent out.

        :param out_date: The out_date of this GlobalResourcesSharedModelsTranslationSet.
        :type out_date: datetime
        """

        self._out_date = out_date

    @property
    def state(self):
        """Gets the state of this GlobalResourcesSharedModelsTranslationSet.

        An enum indicating the state of the translation set

        :return: The state of this GlobalResourcesSharedModelsTranslationSet.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this GlobalResourcesSharedModelsTranslationSet.

        An enum indicating the state of the translation set

        :param state: The state of this GlobalResourcesSharedModelsTranslationSet.
        :type state: str
        """
        allowed_values = ["OutForProcessing", "Processing", "PendingApproval", "OutForTranslation", "Cancelled", "Completed"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def translation_request_id(self):
        """Gets the translation_request_id of this GlobalResourcesSharedModelsTranslationSet.

        Read Only. The Id of the TranslationRequest which generated this translation set.

        :return: The translation_request_id of this GlobalResourcesSharedModelsTranslationSet.
        :rtype: int
        """
        return self._translation_request_id

    @translation_request_id.setter
    def translation_request_id(self, translation_request_id):
        """Sets the translation_request_id of this GlobalResourcesSharedModelsTranslationSet.

        Read Only. The Id of the TranslationRequest which generated this translation set.

        :param translation_request_id: The translation_request_id of this GlobalResourcesSharedModelsTranslationSet.
        :type translation_request_id: int
        """

        self._translation_request_id = translation_request_id
