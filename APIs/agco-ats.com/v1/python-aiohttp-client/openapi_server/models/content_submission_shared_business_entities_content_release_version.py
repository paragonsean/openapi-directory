# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContentSubmissionSharedBusinessEntitiesContentReleaseVersion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_definition_id: int=None, content_release_id: int=None, deleted: bool=None, publisher_user_id: int=None, release_id: int=None, test_report_url: str=None, updated_date: datetime=None, version: int=None):
        """ContentSubmissionSharedBusinessEntitiesContentReleaseVersion - a model defined in OpenAPI

        :param content_definition_id: The content_definition_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :param content_release_id: The content_release_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :param deleted: The deleted of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :param publisher_user_id: The publisher_user_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :param release_id: The release_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :param test_report_url: The test_report_url of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :param updated_date: The updated_date of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :param version: The version of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        """
        self.openapi_types = {
            'content_definition_id': int,
            'content_release_id': int,
            'deleted': bool,
            'publisher_user_id': int,
            'release_id': int,
            'test_report_url': str,
            'updated_date': datetime,
            'version': int
        }

        self.attribute_map = {
            'content_definition_id': 'ContentDefinitionID',
            'content_release_id': 'ContentReleaseID',
            'deleted': 'Deleted',
            'publisher_user_id': 'PublisherUserID',
            'release_id': 'ReleaseID',
            'test_report_url': 'TestReportUrl',
            'updated_date': 'UpdatedDate',
            'version': 'Version'
        }

        self._content_definition_id = content_definition_id
        self._content_release_id = content_release_id
        self._deleted = deleted
        self._publisher_user_id = publisher_user_id
        self._release_id = release_id
        self._test_report_url = test_report_url
        self._updated_date = updated_date
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentSubmissionSharedBusinessEntitiesContentReleaseVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContentSubmission.Shared.BusinessEntities.ContentReleaseVersion of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_definition_id(self):
        """Gets the content_definition_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.

        ContentDefinitionID

        :return: The content_definition_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :rtype: int
        """
        return self._content_definition_id

    @content_definition_id.setter
    def content_definition_id(self, content_definition_id):
        """Sets the content_definition_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.

        ContentDefinitionID

        :param content_definition_id: The content_definition_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :type content_definition_id: int
        """

        self._content_definition_id = content_definition_id

    @property
    def content_release_id(self):
        """Gets the content_release_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.

        ContentReleaseID

        :return: The content_release_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :rtype: int
        """
        return self._content_release_id

    @content_release_id.setter
    def content_release_id(self, content_release_id):
        """Sets the content_release_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.

        ContentReleaseID

        :param content_release_id: The content_release_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :type content_release_id: int
        """

        self._content_release_id = content_release_id

    @property
    def deleted(self):
        """Gets the deleted of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.

        deleted flag

        :return: The deleted of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.

        deleted flag

        :param deleted: The deleted of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :type deleted: bool
        """

        self._deleted = deleted

    @property
    def publisher_user_id(self):
        """Gets the publisher_user_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.

        PublisherUser ID

        :return: The publisher_user_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :rtype: int
        """
        return self._publisher_user_id

    @publisher_user_id.setter
    def publisher_user_id(self, publisher_user_id):
        """Sets the publisher_user_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.

        PublisherUser ID

        :param publisher_user_id: The publisher_user_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :type publisher_user_id: int
        """

        self._publisher_user_id = publisher_user_id

    @property
    def release_id(self):
        """Gets the release_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.

        rele4ase Id

        :return: The release_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :rtype: int
        """
        return self._release_id

    @release_id.setter
    def release_id(self, release_id):
        """Sets the release_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.

        rele4ase Id

        :param release_id: The release_id of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :type release_id: int
        """

        self._release_id = release_id

    @property
    def test_report_url(self):
        """Gets the test_report_url of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.

        The URL at which test reports for this content can be found

        :return: The test_report_url of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :rtype: str
        """
        return self._test_report_url

    @test_report_url.setter
    def test_report_url(self, test_report_url):
        """Sets the test_report_url of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.

        The URL at which test reports for this content can be found

        :param test_report_url: The test_report_url of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :type test_report_url: str
        """

        self._test_report_url = test_report_url

    @property
    def updated_date(self):
        """Gets the updated_date of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.

        Updated Date

        :return: The updated_date of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :rtype: datetime
        """
        return self._updated_date

    @updated_date.setter
    def updated_date(self, updated_date):
        """Sets the updated_date of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.

        Updated Date

        :param updated_date: The updated_date of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :type updated_date: datetime
        """

        self._updated_date = updated_date

    @property
    def version(self):
        """Gets the version of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.

        version

        :return: The version of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :rtype: int
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.

        version

        :param version: The version of this ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.
        :type version: int
        """

        self._version = version
