# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UpdateSystemModelsBundle(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, bundle_id: str=None, bundle_number: int=None, description: str=None, update_group_id: str=None):
        """UpdateSystemModelsBundle - a model defined in OpenAPI

        :param active: The active of this UpdateSystemModelsBundle.
        :param bundle_id: The bundle_id of this UpdateSystemModelsBundle.
        :param bundle_number: The bundle_number of this UpdateSystemModelsBundle.
        :param description: The description of this UpdateSystemModelsBundle.
        :param update_group_id: The update_group_id of this UpdateSystemModelsBundle.
        """
        self.openapi_types = {
            'active': bool,
            'bundle_id': str,
            'bundle_number': int,
            'description': str,
            'update_group_id': str
        }

        self.attribute_map = {
            'active': 'Active',
            'bundle_id': 'BundleID',
            'bundle_number': 'BundleNumber',
            'description': 'Description',
            'update_group_id': 'UpdateGroupID'
        }

        self._active = active
        self._bundle_id = bundle_id
        self._bundle_number = bundle_number
        self._description = description
        self._update_group_id = update_group_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateSystemModelsBundle':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateSystem.Models.Bundle of this UpdateSystemModelsBundle.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this UpdateSystemModelsBundle.

        Default Value: false. During the creation of the Bundle, this field must be false.

        :return: The active of this UpdateSystemModelsBundle.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this UpdateSystemModelsBundle.

        Default Value: false. During the creation of the Bundle, this field must be false.

        :param active: The active of this UpdateSystemModelsBundle.
        :type active: bool
        """

        self._active = active

    @property
    def bundle_id(self):
        """Gets the bundle_id of this UpdateSystemModelsBundle.

        Read-Only.

        :return: The bundle_id of this UpdateSystemModelsBundle.
        :rtype: str
        """
        return self._bundle_id

    @bundle_id.setter
    def bundle_id(self, bundle_id):
        """Sets the bundle_id of this UpdateSystemModelsBundle.

        Read-Only.

        :param bundle_id: The bundle_id of this UpdateSystemModelsBundle.
        :type bundle_id: str
        """

        self._bundle_id = bundle_id

    @property
    def bundle_number(self):
        """Gets the bundle_number of this UpdateSystemModelsBundle.

        The bundle number

        :return: The bundle_number of this UpdateSystemModelsBundle.
        :rtype: int
        """
        return self._bundle_number

    @bundle_number.setter
    def bundle_number(self, bundle_number):
        """Sets the bundle_number of this UpdateSystemModelsBundle.

        The bundle number

        :param bundle_number: The bundle_number of this UpdateSystemModelsBundle.
        :type bundle_number: int
        """
        if bundle_number is None:
            raise ValueError("Invalid value for `bundle_number`, must not be `None`")

        self._bundle_number = bundle_number

    @property
    def description(self):
        """Gets the description of this UpdateSystemModelsBundle.

        The Bundle description.

        :return: The description of this UpdateSystemModelsBundle.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this UpdateSystemModelsBundle.

        The Bundle description.

        :param description: The description of this UpdateSystemModelsBundle.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")

        self._description = description

    @property
    def update_group_id(self):
        """Gets the update_group_id of this UpdateSystemModelsBundle.

        The update group this bundle belongs to.

        :return: The update_group_id of this UpdateSystemModelsBundle.
        :rtype: str
        """
        return self._update_group_id

    @update_group_id.setter
    def update_group_id(self, update_group_id):
        """Sets the update_group_id of this UpdateSystemModelsBundle.

        The update group this bundle belongs to.

        :param update_group_id: The update_group_id of this UpdateSystemModelsBundle.
        :type update_group_id: str
        """
        if update_group_id is None:
            raise ValueError("Invalid value for `update_group_id`, must not be `None`")

        self._update_group_id = update_group_id
