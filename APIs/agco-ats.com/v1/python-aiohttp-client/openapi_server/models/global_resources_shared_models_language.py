# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GlobalResourcesSharedModelsLanguage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, is_deleted: bool=None, locale_id: int=None):
        """GlobalResourcesSharedModelsLanguage - a model defined in OpenAPI

        :param description: The description of this GlobalResourcesSharedModelsLanguage.
        :param is_deleted: The is_deleted of this GlobalResourcesSharedModelsLanguage.
        :param locale_id: The locale_id of this GlobalResourcesSharedModelsLanguage.
        """
        self.openapi_types = {
            'description': str,
            'is_deleted': bool,
            'locale_id': int
        }

        self.attribute_map = {
            'description': 'Description',
            'is_deleted': 'IsDeleted',
            'locale_id': 'LocaleId'
        }

        self._description = description
        self._is_deleted = is_deleted
        self._locale_id = locale_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GlobalResourcesSharedModelsLanguage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GlobalResources.Shared.Models.Language of this GlobalResourcesSharedModelsLanguage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this GlobalResourcesSharedModelsLanguage.

        The description of the language (e.g. “English – United States”).

        :return: The description of this GlobalResourcesSharedModelsLanguage.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this GlobalResourcesSharedModelsLanguage.

        The description of the language (e.g. “English – United States”).

        :param description: The description of this GlobalResourcesSharedModelsLanguage.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")

        self._description = description

    @property
    def is_deleted(self):
        """Gets the is_deleted of this GlobalResourcesSharedModelsLanguage.

        Indicates whether the API supports the language. Must be false when created. Read Only.

        :return: The is_deleted of this GlobalResourcesSharedModelsLanguage.
        :rtype: bool
        """
        return self._is_deleted

    @is_deleted.setter
    def is_deleted(self, is_deleted):
        """Sets the is_deleted of this GlobalResourcesSharedModelsLanguage.

        Indicates whether the API supports the language. Must be false when created. Read Only.

        :param is_deleted: The is_deleted of this GlobalResourcesSharedModelsLanguage.
        :type is_deleted: bool
        """

        self._is_deleted = is_deleted

    @property
    def locale_id(self):
        """Gets the locale_id of this GlobalResourcesSharedModelsLanguage.

        The Locale Id of the language.

        :return: The locale_id of this GlobalResourcesSharedModelsLanguage.
        :rtype: int
        """
        return self._locale_id

    @locale_id.setter
    def locale_id(self, locale_id):
        """Sets the locale_id of this GlobalResourcesSharedModelsLanguage.

        The Locale Id of the language.

        :param locale_id: The locale_id of this GlobalResourcesSharedModelsLanguage.
        :type locale_id: int
        """
        if locale_id is None:
            raise ValueError("Invalid value for `locale_id`, must not be `None`")

        self._locale_id = locale_id
