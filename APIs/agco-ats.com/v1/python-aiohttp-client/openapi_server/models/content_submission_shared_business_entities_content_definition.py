# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.content_submission_shared_business_entities_content_definition_attribute import ContentSubmissionSharedBusinessEntitiesContentDefinitionAttribute
from openapi_server import util


class ContentSubmissionSharedBusinessEntitiesContentDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attributes: List[ContentSubmissionSharedBusinessEntitiesContentDefinitionAttribute]=None, content_definition_id: int=None, description: str=None, name: str=None, package_type_id: str=None, type_id: int=None):
        """ContentSubmissionSharedBusinessEntitiesContentDefinition - a model defined in OpenAPI

        :param attributes: The attributes of this ContentSubmissionSharedBusinessEntitiesContentDefinition.
        :param content_definition_id: The content_definition_id of this ContentSubmissionSharedBusinessEntitiesContentDefinition.
        :param description: The description of this ContentSubmissionSharedBusinessEntitiesContentDefinition.
        :param name: The name of this ContentSubmissionSharedBusinessEntitiesContentDefinition.
        :param package_type_id: The package_type_id of this ContentSubmissionSharedBusinessEntitiesContentDefinition.
        :param type_id: The type_id of this ContentSubmissionSharedBusinessEntitiesContentDefinition.
        """
        self.openapi_types = {
            'attributes': List[ContentSubmissionSharedBusinessEntitiesContentDefinitionAttribute],
            'content_definition_id': int,
            'description': str,
            'name': str,
            'package_type_id': str,
            'type_id': int
        }

        self.attribute_map = {
            'attributes': 'Attributes',
            'content_definition_id': 'ContentDefinitionID',
            'description': 'Description',
            'name': 'Name',
            'package_type_id': 'PackageTypeID',
            'type_id': 'TypeID'
        }

        self._attributes = attributes
        self._content_definition_id = content_definition_id
        self._description = description
        self._name = name
        self._package_type_id = package_type_id
        self._type_id = type_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentSubmissionSharedBusinessEntitiesContentDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContentSubmission.Shared.BusinessEntities.ContentDefinition of this ContentSubmissionSharedBusinessEntitiesContentDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attributes(self):
        """Gets the attributes of this ContentSubmissionSharedBusinessEntitiesContentDefinition.

        Attributes of this ContentDefinition

        :return: The attributes of this ContentSubmissionSharedBusinessEntitiesContentDefinition.
        :rtype: List[ContentSubmissionSharedBusinessEntitiesContentDefinitionAttribute]
        """
        return self._attributes

    @attributes.setter
    def attributes(self, attributes):
        """Sets the attributes of this ContentSubmissionSharedBusinessEntitiesContentDefinition.

        Attributes of this ContentDefinition

        :param attributes: The attributes of this ContentSubmissionSharedBusinessEntitiesContentDefinition.
        :type attributes: List[ContentSubmissionSharedBusinessEntitiesContentDefinitionAttribute]
        """

        self._attributes = attributes

    @property
    def content_definition_id(self):
        """Gets the content_definition_id of this ContentSubmissionSharedBusinessEntitiesContentDefinition.

        The ID of this content definition.

        :return: The content_definition_id of this ContentSubmissionSharedBusinessEntitiesContentDefinition.
        :rtype: int
        """
        return self._content_definition_id

    @content_definition_id.setter
    def content_definition_id(self, content_definition_id):
        """Sets the content_definition_id of this ContentSubmissionSharedBusinessEntitiesContentDefinition.

        The ID of this content definition.

        :param content_definition_id: The content_definition_id of this ContentSubmissionSharedBusinessEntitiesContentDefinition.
        :type content_definition_id: int
        """

        self._content_definition_id = content_definition_id

    @property
    def description(self):
        """Gets the description of this ContentSubmissionSharedBusinessEntitiesContentDefinition.

        The description used on the package type in the AGCO Update System

        :return: The description of this ContentSubmissionSharedBusinessEntitiesContentDefinition.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ContentSubmissionSharedBusinessEntitiesContentDefinition.

        The description used on the package type in the AGCO Update System

        :param description: The description of this ContentSubmissionSharedBusinessEntitiesContentDefinition.
        :type description: str
        """
        if description is None:
            raise ValueError("Invalid value for `description`, must not be `None`")

        self._description = description

    @property
    def name(self):
        """Gets the name of this ContentSubmissionSharedBusinessEntitiesContentDefinition.

        The name of this content. Name must be valid for Attribute on PackageType.

        :return: The name of this ContentSubmissionSharedBusinessEntitiesContentDefinition.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ContentSubmissionSharedBusinessEntitiesContentDefinition.

        The name of this content. Name must be valid for Attribute on PackageType.

        :param name: The name of this ContentSubmissionSharedBusinessEntitiesContentDefinition.
        :type name: str
        """

        self._name = name

    @property
    def package_type_id(self):
        """Gets the package_type_id of this ContentSubmissionSharedBusinessEntitiesContentDefinition.

        Read Only. The ID of the package type used for this content.

        :return: The package_type_id of this ContentSubmissionSharedBusinessEntitiesContentDefinition.
        :rtype: str
        """
        return self._package_type_id

    @package_type_id.setter
    def package_type_id(self, package_type_id):
        """Sets the package_type_id of this ContentSubmissionSharedBusinessEntitiesContentDefinition.

        Read Only. The ID of the package type used for this content.

        :param package_type_id: The package_type_id of this ContentSubmissionSharedBusinessEntitiesContentDefinition.
        :type package_type_id: str
        """

        self._package_type_id = package_type_id

    @property
    def type_id(self):
        """Gets the type_id of this ContentSubmissionSharedBusinessEntitiesContentDefinition.

        The type of content.

        :return: The type_id of this ContentSubmissionSharedBusinessEntitiesContentDefinition.
        :rtype: int
        """
        return self._type_id

    @type_id.setter
    def type_id(self, type_id):
        """Sets the type_id of this ContentSubmissionSharedBusinessEntitiesContentDefinition.

        The type of content.

        :param type_id: The type_id of this ContentSubmissionSharedBusinessEntitiesContentDefinition.
        :type type_id: int
        """

        self._type_id = type_id
