# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContentSubmissionSharedBusinessEntitiesUserContentDefinition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_definition_id: int=None, user_content_definition_id: int=None, user_id: int=None):
        """ContentSubmissionSharedBusinessEntitiesUserContentDefinition - a model defined in OpenAPI

        :param content_definition_id: The content_definition_id of this ContentSubmissionSharedBusinessEntitiesUserContentDefinition.
        :param user_content_definition_id: The user_content_definition_id of this ContentSubmissionSharedBusinessEntitiesUserContentDefinition.
        :param user_id: The user_id of this ContentSubmissionSharedBusinessEntitiesUserContentDefinition.
        """
        self.openapi_types = {
            'content_definition_id': int,
            'user_content_definition_id': int,
            'user_id': int
        }

        self.attribute_map = {
            'content_definition_id': 'ContentDefinitionID',
            'user_content_definition_id': 'UserContentDefinitionID',
            'user_id': 'UserID'
        }

        self._content_definition_id = content_definition_id
        self._user_content_definition_id = user_content_definition_id
        self._user_id = user_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentSubmissionSharedBusinessEntitiesUserContentDefinition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContentSubmission.Shared.BusinessEntities.UserContentDefinition of this ContentSubmissionSharedBusinessEntitiesUserContentDefinition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_definition_id(self):
        """Gets the content_definition_id of this ContentSubmissionSharedBusinessEntitiesUserContentDefinition.

        The ID of the ContentDefinition.

        :return: The content_definition_id of this ContentSubmissionSharedBusinessEntitiesUserContentDefinition.
        :rtype: int
        """
        return self._content_definition_id

    @content_definition_id.setter
    def content_definition_id(self, content_definition_id):
        """Sets the content_definition_id of this ContentSubmissionSharedBusinessEntitiesUserContentDefinition.

        The ID of the ContentDefinition.

        :param content_definition_id: The content_definition_id of this ContentSubmissionSharedBusinessEntitiesUserContentDefinition.
        :type content_definition_id: int
        """

        self._content_definition_id = content_definition_id

    @property
    def user_content_definition_id(self):
        """Gets the user_content_definition_id of this ContentSubmissionSharedBusinessEntitiesUserContentDefinition.

        Read Only. The ID of the User to ContentDefinition relationship.

        :return: The user_content_definition_id of this ContentSubmissionSharedBusinessEntitiesUserContentDefinition.
        :rtype: int
        """
        return self._user_content_definition_id

    @user_content_definition_id.setter
    def user_content_definition_id(self, user_content_definition_id):
        """Sets the user_content_definition_id of this ContentSubmissionSharedBusinessEntitiesUserContentDefinition.

        Read Only. The ID of the User to ContentDefinition relationship.

        :param user_content_definition_id: The user_content_definition_id of this ContentSubmissionSharedBusinessEntitiesUserContentDefinition.
        :type user_content_definition_id: int
        """

        self._user_content_definition_id = user_content_definition_id

    @property
    def user_id(self):
        """Gets the user_id of this ContentSubmissionSharedBusinessEntitiesUserContentDefinition.

        The ID of the user.

        :return: The user_id of this ContentSubmissionSharedBusinessEntitiesUserContentDefinition.
        :rtype: int
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this ContentSubmissionSharedBusinessEntitiesUserContentDefinition.

        The ID of the user.

        :param user_id: The user_id of this ContentSubmissionSharedBusinessEntitiesUserContentDefinition.
        :type user_id: int
        """

        self._user_id = user_id
