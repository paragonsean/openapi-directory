# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.build_system_shared_dto_parameter import BuildSystemSharedDTOParameter
from openapi_server import util


class BuildSystemSharedDTOStep(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, config_required: bool=None, deleted: bool=None, description: str=None, implementation_id: str=None, name: str=None, parameters: List[BuildSystemSharedDTOParameter]=None, step_id: int=None):
        """BuildSystemSharedDTOStep - a model defined in OpenAPI

        :param config_required: The config_required of this BuildSystemSharedDTOStep.
        :param deleted: The deleted of this BuildSystemSharedDTOStep.
        :param description: The description of this BuildSystemSharedDTOStep.
        :param implementation_id: The implementation_id of this BuildSystemSharedDTOStep.
        :param name: The name of this BuildSystemSharedDTOStep.
        :param parameters: The parameters of this BuildSystemSharedDTOStep.
        :param step_id: The step_id of this BuildSystemSharedDTOStep.
        """
        self.openapi_types = {
            'config_required': bool,
            'deleted': bool,
            'description': str,
            'implementation_id': str,
            'name': str,
            'parameters': List[BuildSystemSharedDTOParameter],
            'step_id': int
        }

        self.attribute_map = {
            'config_required': 'ConfigRequired',
            'deleted': 'Deleted',
            'description': 'Description',
            'implementation_id': 'ImplementationID',
            'name': 'Name',
            'parameters': 'Parameters',
            'step_id': 'StepID'
        }

        self._config_required = config_required
        self._deleted = deleted
        self._description = description
        self._implementation_id = implementation_id
        self._name = name
        self._parameters = parameters
        self._step_id = step_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BuildSystemSharedDTOStep':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BuildSystem.Shared.DTO.Step of this BuildSystemSharedDTOStep.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def config_required(self):
        """Gets the config_required of this BuildSystemSharedDTOStep.

        Indicates if the step requires configuration values to be provided by the build agent

        :return: The config_required of this BuildSystemSharedDTOStep.
        :rtype: bool
        """
        return self._config_required

    @config_required.setter
    def config_required(self, config_required):
        """Sets the config_required of this BuildSystemSharedDTOStep.

        Indicates if the step requires configuration values to be provided by the build agent

        :param config_required: The config_required of this BuildSystemSharedDTOStep.
        :type config_required: bool
        """
        if config_required is None:
            raise ValueError("Invalid value for `config_required`, must not be `None`")

        self._config_required = config_required

    @property
    def deleted(self):
        """Gets the deleted of this BuildSystemSharedDTOStep.

        Read Only.  Indicates if the record is deleted.

        :return: The deleted of this BuildSystemSharedDTOStep.
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this BuildSystemSharedDTOStep.

        Read Only.  Indicates if the record is deleted.

        :param deleted: The deleted of this BuildSystemSharedDTOStep.
        :type deleted: bool
        """

        self._deleted = deleted

    @property
    def description(self):
        """Gets the description of this BuildSystemSharedDTOStep.

        A description of the step to be presented to a user

        :return: The description of this BuildSystemSharedDTOStep.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this BuildSystemSharedDTOStep.

        A description of the step to be presented to a user

        :param description: The description of this BuildSystemSharedDTOStep.
        :type description: str
        """

        self._description = description

    @property
    def implementation_id(self):
        """Gets the implementation_id of this BuildSystemSharedDTOStep.

        The implementation ID used to lookup the step implementation when it is executed

        :return: The implementation_id of this BuildSystemSharedDTOStep.
        :rtype: str
        """
        return self._implementation_id

    @implementation_id.setter
    def implementation_id(self, implementation_id):
        """Sets the implementation_id of this BuildSystemSharedDTOStep.

        The implementation ID used to lookup the step implementation when it is executed

        :param implementation_id: The implementation_id of this BuildSystemSharedDTOStep.
        :type implementation_id: str
        """
        if implementation_id is None:
            raise ValueError("Invalid value for `implementation_id`, must not be `None`")

        self._implementation_id = implementation_id

    @property
    def name(self):
        """Gets the name of this BuildSystemSharedDTOStep.

        The name of the step

        :return: The name of this BuildSystemSharedDTOStep.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BuildSystemSharedDTOStep.

        The name of the step

        :param name: The name of this BuildSystemSharedDTOStep.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def parameters(self):
        """Gets the parameters of this BuildSystemSharedDTOStep.

        The parameters for this step

        :return: The parameters of this BuildSystemSharedDTOStep.
        :rtype: List[BuildSystemSharedDTOParameter]
        """
        return self._parameters

    @parameters.setter
    def parameters(self, parameters):
        """Sets the parameters of this BuildSystemSharedDTOStep.

        The parameters for this step

        :param parameters: The parameters of this BuildSystemSharedDTOStep.
        :type parameters: List[BuildSystemSharedDTOParameter]
        """

        self._parameters = parameters

    @property
    def step_id(self):
        """Gets the step_id of this BuildSystemSharedDTOStep.

        The ID of the step

        :return: The step_id of this BuildSystemSharedDTOStep.
        :rtype: int
        """
        return self._step_id

    @step_id.setter
    def step_id(self, step_id):
        """Sets the step_id of this BuildSystemSharedDTOStep.

        The ID of the step

        :param step_id: The step_id of this BuildSystemSharedDTOStep.
        :type step_id: int
        """

        self._step_id = step_id
