# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_system_models_package_type import UpdateSystemModelsPackageType
from openapi_server import util


class UpdateSystemModelsAvailableSubscription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, package_type: UpdateSystemModelsPackageType=None, subscription_type: str=None):
        """UpdateSystemModelsAvailableSubscription - a model defined in OpenAPI

        :param package_type: The package_type of this UpdateSystemModelsAvailableSubscription.
        :param subscription_type: The subscription_type of this UpdateSystemModelsAvailableSubscription.
        """
        self.openapi_types = {
            'package_type': UpdateSystemModelsPackageType,
            'subscription_type': str
        }

        self.attribute_map = {
            'package_type': 'PackageType',
            'subscription_type': 'SubscriptionType'
        }

        self._package_type = package_type
        self._subscription_type = subscription_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateSystemModelsAvailableSubscription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UpdateSystem.Models.AvailableSubscription of this UpdateSystemModelsAvailableSubscription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def package_type(self):
        """Gets the package_type of this UpdateSystemModelsAvailableSubscription.


        :return: The package_type of this UpdateSystemModelsAvailableSubscription.
        :rtype: UpdateSystemModelsPackageType
        """
        return self._package_type

    @package_type.setter
    def package_type(self, package_type):
        """Sets the package_type of this UpdateSystemModelsAvailableSubscription.


        :param package_type: The package_type of this UpdateSystemModelsAvailableSubscription.
        :type package_type: UpdateSystemModelsPackageType
        """

        self._package_type = package_type

    @property
    def subscription_type(self):
        """Gets the subscription_type of this UpdateSystemModelsAvailableSubscription.

        The type of subscription supported.

        :return: The subscription_type of this UpdateSystemModelsAvailableSubscription.
        :rtype: str
        """
        return self._subscription_type

    @subscription_type.setter
    def subscription_type(self, subscription_type):
        """Sets the subscription_type of this UpdateSystemModelsAvailableSubscription.

        The type of subscription supported.

        :param subscription_type: The subscription_type of this UpdateSystemModelsAvailableSubscription.
        :type subscription_type: str
        """
        allowed_values = ["Required", "IncludeByDefault", "ExcludeByDefault"]  # noqa: E501
        if subscription_type not in allowed_values:
            raise ValueError(
                "Invalid value for `subscription_type` ({0}), must be one of {1}"
                .format(subscription_type, allowed_values)
            )

        self._subscription_type = subscription_type
