/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAPI_Models_PasswordResetRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAPI_Models_PasswordResetRequest::OAIAPI_Models_PasswordResetRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAPI_Models_PasswordResetRequest::OAIAPI_Models_PasswordResetRequest() {
    this->initializeModel();
}

OAIAPI_Models_PasswordResetRequest::~OAIAPI_Models_PasswordResetRequest() {}

void OAIAPI_Models_PasswordResetRequest::initializeModel() {

    m_parameter_name_isSet = false;
    m_parameter_name_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;

    m_username_isSet = false;
    m_username_isValid = false;
}

void OAIAPI_Models_PasswordResetRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAPI_Models_PasswordResetRequest::fromJsonObject(QJsonObject json) {

    m_parameter_name_isValid = ::OpenAPI::fromJsonValue(m_parameter_name, json[QString("ParameterName")]);
    m_parameter_name_isSet = !json[QString("ParameterName")].isNull() && m_parameter_name_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("Url")]);
    m_url_isSet = !json[QString("Url")].isNull() && m_url_isValid;

    m_username_isValid = ::OpenAPI::fromJsonValue(m_username, json[QString("Username")]);
    m_username_isSet = !json[QString("Username")].isNull() && m_username_isValid;
}

QString OAIAPI_Models_PasswordResetRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAPI_Models_PasswordResetRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_parameter_name_isSet) {
        obj.insert(QString("ParameterName"), ::OpenAPI::toJsonValue(m_parameter_name));
    }
    if (m_url_isSet) {
        obj.insert(QString("Url"), ::OpenAPI::toJsonValue(m_url));
    }
    if (m_username_isSet) {
        obj.insert(QString("Username"), ::OpenAPI::toJsonValue(m_username));
    }
    return obj;
}

QString OAIAPI_Models_PasswordResetRequest::getParameterName() const {
    return m_parameter_name;
}
void OAIAPI_Models_PasswordResetRequest::setParameterName(const QString &parameter_name) {
    m_parameter_name = parameter_name;
    m_parameter_name_isSet = true;
}

bool OAIAPI_Models_PasswordResetRequest::is_parameter_name_Set() const{
    return m_parameter_name_isSet;
}

bool OAIAPI_Models_PasswordResetRequest::is_parameter_name_Valid() const{
    return m_parameter_name_isValid;
}

QString OAIAPI_Models_PasswordResetRequest::getUrl() const {
    return m_url;
}
void OAIAPI_Models_PasswordResetRequest::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIAPI_Models_PasswordResetRequest::is_url_Set() const{
    return m_url_isSet;
}

bool OAIAPI_Models_PasswordResetRequest::is_url_Valid() const{
    return m_url_isValid;
}

QString OAIAPI_Models_PasswordResetRequest::getUsername() const {
    return m_username;
}
void OAIAPI_Models_PasswordResetRequest::setUsername(const QString &username) {
    m_username = username;
    m_username_isSet = true;
}

bool OAIAPI_Models_PasswordResetRequest::is_username_Set() const{
    return m_username_isSet;
}

bool OAIAPI_Models_PasswordResetRequest::is_username_Valid() const{
    return m_username_isValid;
}

bool OAIAPI_Models_PasswordResetRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_parameter_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAPI_Models_PasswordResetRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_parameter_name_isValid && m_url_isValid && m_username_isValid && true;
}

} // namespace OpenAPI
