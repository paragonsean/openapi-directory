/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAGCOPowerServices_Models_ECU.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAGCOPowerServices_Models_ECU::OAIAGCOPowerServices_Models_ECU(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAGCOPowerServices_Models_ECU::OAIAGCOPowerServices_Models_ECU() {
    this->initializeModel();
}

OAIAGCOPowerServices_Models_ECU::~OAIAGCOPowerServices_Models_ECU() {}

void OAIAGCOPowerServices_Models_ECU::initializeModel() {

    m_activation_code_isSet = false;
    m_activation_code_isValid = false;

    m_damaged_description_isSet = false;
    m_damaged_description_isValid = false;

    m_engine_serial_number_isSet = false;
    m_engine_serial_number_isValid = false;

    m_replaces_ecu_serial_number_isSet = false;
    m_replaces_ecu_serial_number_isValid = false;

    m_serial_number_isSet = false;
    m_serial_number_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIAGCOPowerServices_Models_ECU::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAGCOPowerServices_Models_ECU::fromJsonObject(QJsonObject json) {

    m_activation_code_isValid = ::OpenAPI::fromJsonValue(m_activation_code, json[QString("ActivationCode")]);
    m_activation_code_isSet = !json[QString("ActivationCode")].isNull() && m_activation_code_isValid;

    m_damaged_description_isValid = ::OpenAPI::fromJsonValue(m_damaged_description, json[QString("DamagedDescription")]);
    m_damaged_description_isSet = !json[QString("DamagedDescription")].isNull() && m_damaged_description_isValid;

    m_engine_serial_number_isValid = ::OpenAPI::fromJsonValue(m_engine_serial_number, json[QString("EngineSerialNumber")]);
    m_engine_serial_number_isSet = !json[QString("EngineSerialNumber")].isNull() && m_engine_serial_number_isValid;

    m_replaces_ecu_serial_number_isValid = ::OpenAPI::fromJsonValue(m_replaces_ecu_serial_number, json[QString("ReplacesECUSerialNumber")]);
    m_replaces_ecu_serial_number_isSet = !json[QString("ReplacesECUSerialNumber")].isNull() && m_replaces_ecu_serial_number_isValid;

    m_serial_number_isValid = ::OpenAPI::fromJsonValue(m_serial_number, json[QString("SerialNumber")]);
    m_serial_number_isSet = !json[QString("SerialNumber")].isNull() && m_serial_number_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("State")]);
    m_state_isSet = !json[QString("State")].isNull() && m_state_isValid;
}

QString OAIAGCOPowerServices_Models_ECU::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAGCOPowerServices_Models_ECU::asJsonObject() const {
    QJsonObject obj;
    if (m_activation_code_isSet) {
        obj.insert(QString("ActivationCode"), ::OpenAPI::toJsonValue(m_activation_code));
    }
    if (m_damaged_description_isSet) {
        obj.insert(QString("DamagedDescription"), ::OpenAPI::toJsonValue(m_damaged_description));
    }
    if (m_engine_serial_number_isSet) {
        obj.insert(QString("EngineSerialNumber"), ::OpenAPI::toJsonValue(m_engine_serial_number));
    }
    if (m_replaces_ecu_serial_number_isSet) {
        obj.insert(QString("ReplacesECUSerialNumber"), ::OpenAPI::toJsonValue(m_replaces_ecu_serial_number));
    }
    if (m_serial_number_isSet) {
        obj.insert(QString("SerialNumber"), ::OpenAPI::toJsonValue(m_serial_number));
    }
    if (m_state_isSet) {
        obj.insert(QString("State"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QByteArray OAIAGCOPowerServices_Models_ECU::getActivationCode() const {
    return m_activation_code;
}
void OAIAGCOPowerServices_Models_ECU::setActivationCode(const QByteArray &activation_code) {
    m_activation_code = activation_code;
    m_activation_code_isSet = true;
}

bool OAIAGCOPowerServices_Models_ECU::is_activation_code_Set() const{
    return m_activation_code_isSet;
}

bool OAIAGCOPowerServices_Models_ECU::is_activation_code_Valid() const{
    return m_activation_code_isValid;
}

QString OAIAGCOPowerServices_Models_ECU::getDamagedDescription() const {
    return m_damaged_description;
}
void OAIAGCOPowerServices_Models_ECU::setDamagedDescription(const QString &damaged_description) {
    m_damaged_description = damaged_description;
    m_damaged_description_isSet = true;
}

bool OAIAGCOPowerServices_Models_ECU::is_damaged_description_Set() const{
    return m_damaged_description_isSet;
}

bool OAIAGCOPowerServices_Models_ECU::is_damaged_description_Valid() const{
    return m_damaged_description_isValid;
}

QString OAIAGCOPowerServices_Models_ECU::getEngineSerialNumber() const {
    return m_engine_serial_number;
}
void OAIAGCOPowerServices_Models_ECU::setEngineSerialNumber(const QString &engine_serial_number) {
    m_engine_serial_number = engine_serial_number;
    m_engine_serial_number_isSet = true;
}

bool OAIAGCOPowerServices_Models_ECU::is_engine_serial_number_Set() const{
    return m_engine_serial_number_isSet;
}

bool OAIAGCOPowerServices_Models_ECU::is_engine_serial_number_Valid() const{
    return m_engine_serial_number_isValid;
}

QString OAIAGCOPowerServices_Models_ECU::getReplacesEcuSerialNumber() const {
    return m_replaces_ecu_serial_number;
}
void OAIAGCOPowerServices_Models_ECU::setReplacesEcuSerialNumber(const QString &replaces_ecu_serial_number) {
    m_replaces_ecu_serial_number = replaces_ecu_serial_number;
    m_replaces_ecu_serial_number_isSet = true;
}

bool OAIAGCOPowerServices_Models_ECU::is_replaces_ecu_serial_number_Set() const{
    return m_replaces_ecu_serial_number_isSet;
}

bool OAIAGCOPowerServices_Models_ECU::is_replaces_ecu_serial_number_Valid() const{
    return m_replaces_ecu_serial_number_isValid;
}

QString OAIAGCOPowerServices_Models_ECU::getSerialNumber() const {
    return m_serial_number;
}
void OAIAGCOPowerServices_Models_ECU::setSerialNumber(const QString &serial_number) {
    m_serial_number = serial_number;
    m_serial_number_isSet = true;
}

bool OAIAGCOPowerServices_Models_ECU::is_serial_number_Set() const{
    return m_serial_number_isSet;
}

bool OAIAGCOPowerServices_Models_ECU::is_serial_number_Valid() const{
    return m_serial_number_isValid;
}

QString OAIAGCOPowerServices_Models_ECU::getState() const {
    return m_state;
}
void OAIAGCOPowerServices_Models_ECU::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIAGCOPowerServices_Models_ECU::is_state_Set() const{
    return m_state_isSet;
}

bool OAIAGCOPowerServices_Models_ECU::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIAGCOPowerServices_Models_ECU::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activation_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_damaged_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_engine_serial_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_replaces_ecu_serial_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_serial_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAGCOPowerServices_Models_ECU::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_engine_serial_number_isValid && m_serial_number_isValid && m_state_isValid && true;
}

} // namespace OpenAPI
