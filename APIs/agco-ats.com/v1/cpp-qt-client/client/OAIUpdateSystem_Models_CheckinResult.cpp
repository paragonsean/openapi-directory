/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSystem_Models_CheckinResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSystem_Models_CheckinResult::OAIUpdateSystem_Models_CheckinResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSystem_Models_CheckinResult::OAIUpdateSystem_Models_CheckinResult() {
    this->initializeModel();
}

OAIUpdateSystem_Models_CheckinResult::~OAIUpdateSystem_Models_CheckinResult() {}

void OAIUpdateSystem_Models_CheckinResult::initializeModel() {

    m_packages_isSet = false;
    m_packages_isValid = false;

    m_remove_packages_isSet = false;
    m_remove_packages_isValid = false;
}

void OAIUpdateSystem_Models_CheckinResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSystem_Models_CheckinResult::fromJsonObject(QJsonObject json) {

    m_packages_isValid = ::OpenAPI::fromJsonValue(m_packages, json[QString("Packages")]);
    m_packages_isSet = !json[QString("Packages")].isNull() && m_packages_isValid;

    m_remove_packages_isValid = ::OpenAPI::fromJsonValue(m_remove_packages, json[QString("RemovePackages")]);
    m_remove_packages_isSet = !json[QString("RemovePackages")].isNull() && m_remove_packages_isValid;
}

QString OAIUpdateSystem_Models_CheckinResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSystem_Models_CheckinResult::asJsonObject() const {
    QJsonObject obj;
    if (m_packages.size() > 0) {
        obj.insert(QString("Packages"), ::OpenAPI::toJsonValue(m_packages));
    }
    if (m_remove_packages.size() > 0) {
        obj.insert(QString("RemovePackages"), ::OpenAPI::toJsonValue(m_remove_packages));
    }
    return obj;
}

QList<OAIUpdateSystem_Models_Package> OAIUpdateSystem_Models_CheckinResult::getPackages() const {
    return m_packages;
}
void OAIUpdateSystem_Models_CheckinResult::setPackages(const QList<OAIUpdateSystem_Models_Package> &packages) {
    m_packages = packages;
    m_packages_isSet = true;
}

bool OAIUpdateSystem_Models_CheckinResult::is_packages_Set() const{
    return m_packages_isSet;
}

bool OAIUpdateSystem_Models_CheckinResult::is_packages_Valid() const{
    return m_packages_isValid;
}

QList<QString> OAIUpdateSystem_Models_CheckinResult::getRemovePackages() const {
    return m_remove_packages;
}
void OAIUpdateSystem_Models_CheckinResult::setRemovePackages(const QList<QString> &remove_packages) {
    m_remove_packages = remove_packages;
    m_remove_packages_isSet = true;
}

bool OAIUpdateSystem_Models_CheckinResult::is_remove_packages_Set() const{
    return m_remove_packages_isSet;
}

bool OAIUpdateSystem_Models_CheckinResult::is_remove_packages_Valid() const{
    return m_remove_packages_isValid;
}

bool OAIUpdateSystem_Models_CheckinResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_packages.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_remove_packages.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSystem_Models_CheckinResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
