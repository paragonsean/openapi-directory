/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGlobalResources_Shared_Models_FileDownload.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGlobalResources_Shared_Models_FileDownload::OAIGlobalResources_Shared_Models_FileDownload(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGlobalResources_Shared_Models_FileDownload::OAIGlobalResources_Shared_Models_FileDownload() {
    this->initializeModel();
}

OAIGlobalResources_Shared_Models_FileDownload::~OAIGlobalResources_Shared_Models_FileDownload() {}

void OAIGlobalResources_Shared_Models_FileDownload::initializeModel() {

    m_crc_isSet = false;
    m_crc_isValid = false;

    m_content_type_isSet = false;
    m_content_type_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_public_isSet = false;
    m_is_public_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_path_isSet = false;
    m_path_isValid = false;

    m_size_isSet = false;
    m_size_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIGlobalResources_Shared_Models_FileDownload::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGlobalResources_Shared_Models_FileDownload::fromJsonObject(QJsonObject json) {

    m_crc_isValid = ::OpenAPI::fromJsonValue(m_crc, json[QString("CRC")]);
    m_crc_isSet = !json[QString("CRC")].isNull() && m_crc_isValid;

    m_content_type_isValid = ::OpenAPI::fromJsonValue(m_content_type, json[QString("ContentType")]);
    m_content_type_isSet = !json[QString("ContentType")].isNull() && m_content_type_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_is_public_isValid = ::OpenAPI::fromJsonValue(m_is_public, json[QString("IsPublic")]);
    m_is_public_isSet = !json[QString("IsPublic")].isNull() && m_is_public_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_path_isValid = ::OpenAPI::fromJsonValue(m_path, json[QString("Path")]);
    m_path_isSet = !json[QString("Path")].isNull() && m_path_isValid;

    m_size_isValid = ::OpenAPI::fromJsonValue(m_size, json[QString("Size")]);
    m_size_isSet = !json[QString("Size")].isNull() && m_size_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("State")]);
    m_state_isSet = !json[QString("State")].isNull() && m_state_isValid;
}

QString OAIGlobalResources_Shared_Models_FileDownload::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGlobalResources_Shared_Models_FileDownload::asJsonObject() const {
    QJsonObject obj;
    if (m_crc_isSet) {
        obj.insert(QString("CRC"), ::OpenAPI::toJsonValue(m_crc));
    }
    if (m_content_type_isSet) {
        obj.insert(QString("ContentType"), ::OpenAPI::toJsonValue(m_content_type));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_public_isSet) {
        obj.insert(QString("IsPublic"), ::OpenAPI::toJsonValue(m_is_public));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_path_isSet) {
        obj.insert(QString("Path"), ::OpenAPI::toJsonValue(m_path));
    }
    if (m_size_isSet) {
        obj.insert(QString("Size"), ::OpenAPI::toJsonValue(m_size));
    }
    if (m_state_isSet) {
        obj.insert(QString("State"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

QString OAIGlobalResources_Shared_Models_FileDownload::getCrc() const {
    return m_crc;
}
void OAIGlobalResources_Shared_Models_FileDownload::setCrc(const QString &crc) {
    m_crc = crc;
    m_crc_isSet = true;
}

bool OAIGlobalResources_Shared_Models_FileDownload::is_crc_Set() const{
    return m_crc_isSet;
}

bool OAIGlobalResources_Shared_Models_FileDownload::is_crc_Valid() const{
    return m_crc_isValid;
}

QString OAIGlobalResources_Shared_Models_FileDownload::getContentType() const {
    return m_content_type;
}
void OAIGlobalResources_Shared_Models_FileDownload::setContentType(const QString &content_type) {
    m_content_type = content_type;
    m_content_type_isSet = true;
}

bool OAIGlobalResources_Shared_Models_FileDownload::is_content_type_Set() const{
    return m_content_type_isSet;
}

bool OAIGlobalResources_Shared_Models_FileDownload::is_content_type_Valid() const{
    return m_content_type_isValid;
}

QString OAIGlobalResources_Shared_Models_FileDownload::getDescription() const {
    return m_description;
}
void OAIGlobalResources_Shared_Models_FileDownload::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIGlobalResources_Shared_Models_FileDownload::is_description_Set() const{
    return m_description_isSet;
}

bool OAIGlobalResources_Shared_Models_FileDownload::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIGlobalResources_Shared_Models_FileDownload::getId() const {
    return m_id;
}
void OAIGlobalResources_Shared_Models_FileDownload::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGlobalResources_Shared_Models_FileDownload::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGlobalResources_Shared_Models_FileDownload::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIGlobalResources_Shared_Models_FileDownload::isIsPublic() const {
    return m_is_public;
}
void OAIGlobalResources_Shared_Models_FileDownload::setIsPublic(const bool &is_public) {
    m_is_public = is_public;
    m_is_public_isSet = true;
}

bool OAIGlobalResources_Shared_Models_FileDownload::is_is_public_Set() const{
    return m_is_public_isSet;
}

bool OAIGlobalResources_Shared_Models_FileDownload::is_is_public_Valid() const{
    return m_is_public_isValid;
}

QString OAIGlobalResources_Shared_Models_FileDownload::getName() const {
    return m_name;
}
void OAIGlobalResources_Shared_Models_FileDownload::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIGlobalResources_Shared_Models_FileDownload::is_name_Set() const{
    return m_name_isSet;
}

bool OAIGlobalResources_Shared_Models_FileDownload::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIGlobalResources_Shared_Models_FileDownload::getPath() const {
    return m_path;
}
void OAIGlobalResources_Shared_Models_FileDownload::setPath(const QString &path) {
    m_path = path;
    m_path_isSet = true;
}

bool OAIGlobalResources_Shared_Models_FileDownload::is_path_Set() const{
    return m_path_isSet;
}

bool OAIGlobalResources_Shared_Models_FileDownload::is_path_Valid() const{
    return m_path_isValid;
}

qint64 OAIGlobalResources_Shared_Models_FileDownload::getSize() const {
    return m_size;
}
void OAIGlobalResources_Shared_Models_FileDownload::setSize(const qint64 &size) {
    m_size = size;
    m_size_isSet = true;
}

bool OAIGlobalResources_Shared_Models_FileDownload::is_size_Set() const{
    return m_size_isSet;
}

bool OAIGlobalResources_Shared_Models_FileDownload::is_size_Valid() const{
    return m_size_isValid;
}

QString OAIGlobalResources_Shared_Models_FileDownload::getState() const {
    return m_state;
}
void OAIGlobalResources_Shared_Models_FileDownload::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGlobalResources_Shared_Models_FileDownload::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGlobalResources_Shared_Models_FileDownload::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIGlobalResources_Shared_Models_FileDownload::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_crc_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_public_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_path_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_size_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGlobalResources_Shared_Models_FileDownload::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_crc_isValid && m_content_type_isValid && m_description_isValid && m_is_public_isValid && m_name_isValid && m_path_isValid && m_state_isValid && true;
}

} // namespace OpenAPI
