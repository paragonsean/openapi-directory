/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord::OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord::OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord() {
    this->initializeModel();
}

OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord::~OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord() {}

void OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord::initializeModel() {

    m_client_count_isSet = false;
    m_client_count_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;
}

void OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord::fromJsonObject(QJsonObject json) {

    m_client_count_isValid = ::OpenAPI::fromJsonValue(m_client_count, json[QString("ClientCount")]);
    m_client_count_isSet = !json[QString("ClientCount")].isNull() && m_client_count_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("State")]);
    m_state_isSet = !json[QString("State")].isNull() && m_state_isValid;
}

QString OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord::asJsonObject() const {
    QJsonObject obj;
    if (m_client_count_isSet) {
        obj.insert(QString("ClientCount"), ::OpenAPI::toJsonValue(m_client_count));
    }
    if (m_state_isSet) {
        obj.insert(QString("State"), ::OpenAPI::toJsonValue(m_state));
    }
    return obj;
}

qint32 OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord::getClientCount() const {
    return m_client_count;
}
void OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord::setClientCount(const qint32 &client_count) {
    m_client_count = client_count;
    m_client_count_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord::is_client_count_Set() const{
    return m_client_count_isSet;
}

bool OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord::is_client_count_Valid() const{
    return m_client_count_isValid;
}

QString OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord::getState() const {
    return m_state;
}
void OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord::is_state_Set() const{
    return m_state_isSet;
}

bool OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord::is_state_Valid() const{
    return m_state_isValid;
}

bool OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
