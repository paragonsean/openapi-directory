/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSystem_Models_ClientStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSystem_Models_ClientStatus::OAIUpdateSystem_Models_ClientStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSystem_Models_ClientStatus::OAIUpdateSystem_Models_ClientStatus() {
    this->initializeModel();
}

OAIUpdateSystem_Models_ClientStatus::~OAIUpdateSystem_Models_ClientStatus() {}

void OAIUpdateSystem_Models_ClientStatus::initializeModel() {

    m_client_id_isSet = false;
    m_client_id_isValid = false;

    m_last_checkin_isSet = false;
    m_last_checkin_isValid = false;

    m_minutes_elapsed_isSet = false;
    m_minutes_elapsed_isValid = false;

    m_report_result_isSet = false;
    m_report_result_isValid = false;

    m_report_result_is_valid_isSet = false;
    m_report_result_is_valid_isValid = false;

    m_report_value_isSet = false;
    m_report_value_isValid = false;

    m_tag_isSet = false;
    m_tag_isValid = false;
}

void OAIUpdateSystem_Models_ClientStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSystem_Models_ClientStatus::fromJsonObject(QJsonObject json) {

    m_client_id_isValid = ::OpenAPI::fromJsonValue(m_client_id, json[QString("ClientID")]);
    m_client_id_isSet = !json[QString("ClientID")].isNull() && m_client_id_isValid;

    m_last_checkin_isValid = ::OpenAPI::fromJsonValue(m_last_checkin, json[QString("LastCheckin")]);
    m_last_checkin_isSet = !json[QString("LastCheckin")].isNull() && m_last_checkin_isValid;

    m_minutes_elapsed_isValid = ::OpenAPI::fromJsonValue(m_minutes_elapsed, json[QString("MinutesElapsed")]);
    m_minutes_elapsed_isSet = !json[QString("MinutesElapsed")].isNull() && m_minutes_elapsed_isValid;

    m_report_result_isValid = ::OpenAPI::fromJsonValue(m_report_result, json[QString("ReportResult")]);
    m_report_result_isSet = !json[QString("ReportResult")].isNull() && m_report_result_isValid;

    m_report_result_is_valid_isValid = ::OpenAPI::fromJsonValue(m_report_result_is_valid, json[QString("ReportResultIsValid")]);
    m_report_result_is_valid_isSet = !json[QString("ReportResultIsValid")].isNull() && m_report_result_is_valid_isValid;

    m_report_value_isValid = ::OpenAPI::fromJsonValue(m_report_value, json[QString("ReportValue")]);
    m_report_value_isSet = !json[QString("ReportValue")].isNull() && m_report_value_isValid;

    m_tag_isValid = ::OpenAPI::fromJsonValue(m_tag, json[QString("Tag")]);
    m_tag_isSet = !json[QString("Tag")].isNull() && m_tag_isValid;
}

QString OAIUpdateSystem_Models_ClientStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSystem_Models_ClientStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_client_id_isSet) {
        obj.insert(QString("ClientID"), ::OpenAPI::toJsonValue(m_client_id));
    }
    if (m_last_checkin_isSet) {
        obj.insert(QString("LastCheckin"), ::OpenAPI::toJsonValue(m_last_checkin));
    }
    if (m_minutes_elapsed_isSet) {
        obj.insert(QString("MinutesElapsed"), ::OpenAPI::toJsonValue(m_minutes_elapsed));
    }
    if (m_report_result_isSet) {
        obj.insert(QString("ReportResult"), ::OpenAPI::toJsonValue(m_report_result));
    }
    if (m_report_result_is_valid_isSet) {
        obj.insert(QString("ReportResultIsValid"), ::OpenAPI::toJsonValue(m_report_result_is_valid));
    }
    if (m_report_value_isSet) {
        obj.insert(QString("ReportValue"), ::OpenAPI::toJsonValue(m_report_value));
    }
    if (m_tag_isSet) {
        obj.insert(QString("Tag"), ::OpenAPI::toJsonValue(m_tag));
    }
    return obj;
}

QString OAIUpdateSystem_Models_ClientStatus::getClientId() const {
    return m_client_id;
}
void OAIUpdateSystem_Models_ClientStatus::setClientId(const QString &client_id) {
    m_client_id = client_id;
    m_client_id_isSet = true;
}

bool OAIUpdateSystem_Models_ClientStatus::is_client_id_Set() const{
    return m_client_id_isSet;
}

bool OAIUpdateSystem_Models_ClientStatus::is_client_id_Valid() const{
    return m_client_id_isValid;
}

QDateTime OAIUpdateSystem_Models_ClientStatus::getLastCheckin() const {
    return m_last_checkin;
}
void OAIUpdateSystem_Models_ClientStatus::setLastCheckin(const QDateTime &last_checkin) {
    m_last_checkin = last_checkin;
    m_last_checkin_isSet = true;
}

bool OAIUpdateSystem_Models_ClientStatus::is_last_checkin_Set() const{
    return m_last_checkin_isSet;
}

bool OAIUpdateSystem_Models_ClientStatus::is_last_checkin_Valid() const{
    return m_last_checkin_isValid;
}

qint32 OAIUpdateSystem_Models_ClientStatus::getMinutesElapsed() const {
    return m_minutes_elapsed;
}
void OAIUpdateSystem_Models_ClientStatus::setMinutesElapsed(const qint32 &minutes_elapsed) {
    m_minutes_elapsed = minutes_elapsed;
    m_minutes_elapsed_isSet = true;
}

bool OAIUpdateSystem_Models_ClientStatus::is_minutes_elapsed_Set() const{
    return m_minutes_elapsed_isSet;
}

bool OAIUpdateSystem_Models_ClientStatus::is_minutes_elapsed_Valid() const{
    return m_minutes_elapsed_isValid;
}

QString OAIUpdateSystem_Models_ClientStatus::getReportResult() const {
    return m_report_result;
}
void OAIUpdateSystem_Models_ClientStatus::setReportResult(const QString &report_result) {
    m_report_result = report_result;
    m_report_result_isSet = true;
}

bool OAIUpdateSystem_Models_ClientStatus::is_report_result_Set() const{
    return m_report_result_isSet;
}

bool OAIUpdateSystem_Models_ClientStatus::is_report_result_Valid() const{
    return m_report_result_isValid;
}

bool OAIUpdateSystem_Models_ClientStatus::isReportResultIsValid() const {
    return m_report_result_is_valid;
}
void OAIUpdateSystem_Models_ClientStatus::setReportResultIsValid(const bool &report_result_is_valid) {
    m_report_result_is_valid = report_result_is_valid;
    m_report_result_is_valid_isSet = true;
}

bool OAIUpdateSystem_Models_ClientStatus::is_report_result_is_valid_Set() const{
    return m_report_result_is_valid_isSet;
}

bool OAIUpdateSystem_Models_ClientStatus::is_report_result_is_valid_Valid() const{
    return m_report_result_is_valid_isValid;
}

QString OAIUpdateSystem_Models_ClientStatus::getReportValue() const {
    return m_report_value;
}
void OAIUpdateSystem_Models_ClientStatus::setReportValue(const QString &report_value) {
    m_report_value = report_value;
    m_report_value_isSet = true;
}

bool OAIUpdateSystem_Models_ClientStatus::is_report_value_Set() const{
    return m_report_value_isSet;
}

bool OAIUpdateSystem_Models_ClientStatus::is_report_value_Valid() const{
    return m_report_value_isValid;
}

QString OAIUpdateSystem_Models_ClientStatus::getTag() const {
    return m_tag;
}
void OAIUpdateSystem_Models_ClientStatus::setTag(const QString &tag) {
    m_tag = tag;
    m_tag_isSet = true;
}

bool OAIUpdateSystem_Models_ClientStatus::is_tag_Set() const{
    return m_tag_isSet;
}

bool OAIUpdateSystem_Models_ClientStatus::is_tag_Valid() const{
    return m_tag_isValid;
}

bool OAIUpdateSystem_Models_ClientStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_checkin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_minutes_elapsed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_result_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_result_is_valid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tag_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSystem_Models_ClientStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
