/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSystem_Models_PackageReport.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSystem_Models_PackageReport::OAIUpdateSystem_Models_PackageReport(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSystem_Models_PackageReport::OAIUpdateSystem_Models_PackageReport() {
    this->initializeModel();
}

OAIUpdateSystem_Models_PackageReport::~OAIUpdateSystem_Models_PackageReport() {}

void OAIUpdateSystem_Models_PackageReport::initializeModel() {

    m_categories_isSet = false;
    m_categories_isValid = false;

    m_package_description_isSet = false;
    m_package_description_isValid = false;

    m_package_id_isSet = false;
    m_package_id_isValid = false;
}

void OAIUpdateSystem_Models_PackageReport::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSystem_Models_PackageReport::fromJsonObject(QJsonObject json) {

    m_categories_isValid = ::OpenAPI::fromJsonValue(m_categories, json[QString("Categories")]);
    m_categories_isSet = !json[QString("Categories")].isNull() && m_categories_isValid;

    m_package_description_isValid = ::OpenAPI::fromJsonValue(m_package_description, json[QString("PackageDescription")]);
    m_package_description_isSet = !json[QString("PackageDescription")].isNull() && m_package_description_isValid;

    m_package_id_isValid = ::OpenAPI::fromJsonValue(m_package_id, json[QString("PackageID")]);
    m_package_id_isSet = !json[QString("PackageID")].isNull() && m_package_id_isValid;
}

QString OAIUpdateSystem_Models_PackageReport::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSystem_Models_PackageReport::asJsonObject() const {
    QJsonObject obj;
    if (m_categories.size() > 0) {
        obj.insert(QString("Categories"), ::OpenAPI::toJsonValue(m_categories));
    }
    if (m_package_description_isSet) {
        obj.insert(QString("PackageDescription"), ::OpenAPI::toJsonValue(m_package_description));
    }
    if (m_package_id_isSet) {
        obj.insert(QString("PackageID"), ::OpenAPI::toJsonValue(m_package_id));
    }
    return obj;
}

QList<OAIUpdateSystem_Models_Category> OAIUpdateSystem_Models_PackageReport::getCategories() const {
    return m_categories;
}
void OAIUpdateSystem_Models_PackageReport::setCategories(const QList<OAIUpdateSystem_Models_Category> &categories) {
    m_categories = categories;
    m_categories_isSet = true;
}

bool OAIUpdateSystem_Models_PackageReport::is_categories_Set() const{
    return m_categories_isSet;
}

bool OAIUpdateSystem_Models_PackageReport::is_categories_Valid() const{
    return m_categories_isValid;
}

QString OAIUpdateSystem_Models_PackageReport::getPackageDescription() const {
    return m_package_description;
}
void OAIUpdateSystem_Models_PackageReport::setPackageDescription(const QString &package_description) {
    m_package_description = package_description;
    m_package_description_isSet = true;
}

bool OAIUpdateSystem_Models_PackageReport::is_package_description_Set() const{
    return m_package_description_isSet;
}

bool OAIUpdateSystem_Models_PackageReport::is_package_description_Valid() const{
    return m_package_description_isValid;
}

QString OAIUpdateSystem_Models_PackageReport::getPackageId() const {
    return m_package_id;
}
void OAIUpdateSystem_Models_PackageReport::setPackageId(const QString &package_id) {
    m_package_id = package_id;
    m_package_id_isSet = true;
}

bool OAIUpdateSystem_Models_PackageReport::is_package_id_Set() const{
    return m_package_id_isSet;
}

bool OAIUpdateSystem_Models_PackageReport::is_package_id_Valid() const{
    return m_package_id_isValid;
}

bool OAIUpdateSystem_Models_PackageReport::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_categories.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_package_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_package_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSystem_Models_PackageReport::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
