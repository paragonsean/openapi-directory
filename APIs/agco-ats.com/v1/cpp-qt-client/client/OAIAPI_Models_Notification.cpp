/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAPI_Models_Notification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAPI_Models_Notification::OAIAPI_Models_Notification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAPI_Models_Notification::OAIAPI_Models_Notification() {
    this->initializeModel();
}

OAIAPI_Models_Notification::~OAIAPI_Models_Notification() {}

void OAIAPI_Models_Notification::initializeModel() {

    m_cc_addresses_isSet = false;
    m_cc_addresses_isValid = false;

    m_is_body_html_isSet = false;
    m_is_body_html_isValid = false;

    m_message_body_isSet = false;
    m_message_body_isValid = false;

    m_subject_isSet = false;
    m_subject_isValid = false;

    m_to_addresses_isSet = false;
    m_to_addresses_isValid = false;
}

void OAIAPI_Models_Notification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAPI_Models_Notification::fromJsonObject(QJsonObject json) {

    m_cc_addresses_isValid = ::OpenAPI::fromJsonValue(m_cc_addresses, json[QString("CC_Addresses")]);
    m_cc_addresses_isSet = !json[QString("CC_Addresses")].isNull() && m_cc_addresses_isValid;

    m_is_body_html_isValid = ::OpenAPI::fromJsonValue(m_is_body_html, json[QString("IsBodyHtml")]);
    m_is_body_html_isSet = !json[QString("IsBodyHtml")].isNull() && m_is_body_html_isValid;

    m_message_body_isValid = ::OpenAPI::fromJsonValue(m_message_body, json[QString("MessageBody")]);
    m_message_body_isSet = !json[QString("MessageBody")].isNull() && m_message_body_isValid;

    m_subject_isValid = ::OpenAPI::fromJsonValue(m_subject, json[QString("Subject")]);
    m_subject_isSet = !json[QString("Subject")].isNull() && m_subject_isValid;

    m_to_addresses_isValid = ::OpenAPI::fromJsonValue(m_to_addresses, json[QString("To_Addresses")]);
    m_to_addresses_isSet = !json[QString("To_Addresses")].isNull() && m_to_addresses_isValid;
}

QString OAIAPI_Models_Notification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAPI_Models_Notification::asJsonObject() const {
    QJsonObject obj;
    if (m_cc_addresses.size() > 0) {
        obj.insert(QString("CC_Addresses"), ::OpenAPI::toJsonValue(m_cc_addresses));
    }
    if (m_is_body_html_isSet) {
        obj.insert(QString("IsBodyHtml"), ::OpenAPI::toJsonValue(m_is_body_html));
    }
    if (m_message_body_isSet) {
        obj.insert(QString("MessageBody"), ::OpenAPI::toJsonValue(m_message_body));
    }
    if (m_subject_isSet) {
        obj.insert(QString("Subject"), ::OpenAPI::toJsonValue(m_subject));
    }
    if (m_to_addresses.size() > 0) {
        obj.insert(QString("To_Addresses"), ::OpenAPI::toJsonValue(m_to_addresses));
    }
    return obj;
}

QList<QString> OAIAPI_Models_Notification::getCcAddresses() const {
    return m_cc_addresses;
}
void OAIAPI_Models_Notification::setCcAddresses(const QList<QString> &cc_addresses) {
    m_cc_addresses = cc_addresses;
    m_cc_addresses_isSet = true;
}

bool OAIAPI_Models_Notification::is_cc_addresses_Set() const{
    return m_cc_addresses_isSet;
}

bool OAIAPI_Models_Notification::is_cc_addresses_Valid() const{
    return m_cc_addresses_isValid;
}

bool OAIAPI_Models_Notification::isIsBodyHtml() const {
    return m_is_body_html;
}
void OAIAPI_Models_Notification::setIsBodyHtml(const bool &is_body_html) {
    m_is_body_html = is_body_html;
    m_is_body_html_isSet = true;
}

bool OAIAPI_Models_Notification::is_is_body_html_Set() const{
    return m_is_body_html_isSet;
}

bool OAIAPI_Models_Notification::is_is_body_html_Valid() const{
    return m_is_body_html_isValid;
}

QString OAIAPI_Models_Notification::getMessageBody() const {
    return m_message_body;
}
void OAIAPI_Models_Notification::setMessageBody(const QString &message_body) {
    m_message_body = message_body;
    m_message_body_isSet = true;
}

bool OAIAPI_Models_Notification::is_message_body_Set() const{
    return m_message_body_isSet;
}

bool OAIAPI_Models_Notification::is_message_body_Valid() const{
    return m_message_body_isValid;
}

QString OAIAPI_Models_Notification::getSubject() const {
    return m_subject;
}
void OAIAPI_Models_Notification::setSubject(const QString &subject) {
    m_subject = subject;
    m_subject_isSet = true;
}

bool OAIAPI_Models_Notification::is_subject_Set() const{
    return m_subject_isSet;
}

bool OAIAPI_Models_Notification::is_subject_Valid() const{
    return m_subject_isValid;
}

QList<QString> OAIAPI_Models_Notification::getToAddresses() const {
    return m_to_addresses;
}
void OAIAPI_Models_Notification::setToAddresses(const QList<QString> &to_addresses) {
    m_to_addresses = to_addresses;
    m_to_addresses_isSet = true;
}

bool OAIAPI_Models_Notification::is_to_addresses_Set() const{
    return m_to_addresses_isSet;
}

bool OAIAPI_Models_Notification::is_to_addresses_Valid() const{
    return m_to_addresses_isValid;
}

bool OAIAPI_Models_Notification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_cc_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_body_html_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_body_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subject_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAPI_Models_Notification::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_is_body_html_isValid && m_message_body_isValid && m_subject_isValid && m_to_addresses_isValid && true;
}

} // namespace OpenAPI
