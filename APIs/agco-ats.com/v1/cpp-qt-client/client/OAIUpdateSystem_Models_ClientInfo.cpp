/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSystem_Models_ClientInfo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSystem_Models_ClientInfo::OAIUpdateSystem_Models_ClientInfo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSystem_Models_ClientInfo::OAIUpdateSystem_Models_ClientInfo() {
    this->initializeModel();
}

OAIUpdateSystem_Models_ClientInfo::~OAIUpdateSystem_Models_ClientInfo() {}

void OAIUpdateSystem_Models_ClientInfo::initializeModel() {

    m_client_id_isSet = false;
    m_client_id_isValid = false;

    m_package_isSet = false;
    m_package_isValid = false;
}

void OAIUpdateSystem_Models_ClientInfo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSystem_Models_ClientInfo::fromJsonObject(QJsonObject json) {

    m_client_id_isValid = ::OpenAPI::fromJsonValue(m_client_id, json[QString("ClientID")]);
    m_client_id_isSet = !json[QString("ClientID")].isNull() && m_client_id_isValid;

    m_package_isValid = ::OpenAPI::fromJsonValue(m_package, json[QString("Package")]);
    m_package_isSet = !json[QString("Package")].isNull() && m_package_isValid;
}

QString OAIUpdateSystem_Models_ClientInfo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSystem_Models_ClientInfo::asJsonObject() const {
    QJsonObject obj;
    if (m_client_id_isSet) {
        obj.insert(QString("ClientID"), ::OpenAPI::toJsonValue(m_client_id));
    }
    if (m_package.size() > 0) {
        obj.insert(QString("Package"), ::OpenAPI::toJsonValue(m_package));
    }
    return obj;
}

QString OAIUpdateSystem_Models_ClientInfo::getClientId() const {
    return m_client_id;
}
void OAIUpdateSystem_Models_ClientInfo::setClientId(const QString &client_id) {
    m_client_id = client_id;
    m_client_id_isSet = true;
}

bool OAIUpdateSystem_Models_ClientInfo::is_client_id_Set() const{
    return m_client_id_isSet;
}

bool OAIUpdateSystem_Models_ClientInfo::is_client_id_Valid() const{
    return m_client_id_isValid;
}

QList<OAIUpdateSystem_Models_PackageReport> OAIUpdateSystem_Models_ClientInfo::getPackage() const {
    return m_package;
}
void OAIUpdateSystem_Models_ClientInfo::setPackage(const QList<OAIUpdateSystem_Models_PackageReport> &package) {
    m_package = package;
    m_package_isSet = true;
}

bool OAIUpdateSystem_Models_ClientInfo::is_package_Set() const{
    return m_package_isSet;
}

bool OAIUpdateSystem_Models_ClientInfo::is_package_Valid() const{
    return m_package_isValid;
}

bool OAIUpdateSystem_Models_ClientInfo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_package.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSystem_Models_ClientInfo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
