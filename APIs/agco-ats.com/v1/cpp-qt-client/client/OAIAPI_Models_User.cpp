/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAPI_Models_User.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAPI_Models_User::OAIAPI_Models_User(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAPI_Models_User::OAIAPI_Models_User() {
    this->initializeModel();
}

OAIAPI_Models_User::~OAIAPI_Models_User() {}

void OAIAPI_Models_User::initializeModel() {

    m_change_password_isSet = false;
    m_change_password_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_password_isSet = false;
    m_password_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;

    m_username_isSet = false;
    m_username_isValid = false;
}

void OAIAPI_Models_User::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAPI_Models_User::fromJsonObject(QJsonObject json) {

    m_change_password_isValid = ::OpenAPI::fromJsonValue(m_change_password, json[QString("ChangePassword")]);
    m_change_password_isSet = !json[QString("ChangePassword")].isNull() && m_change_password_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("Email")]);
    m_email_isSet = !json[QString("Email")].isNull() && m_email_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_password_isValid = ::OpenAPI::fromJsonValue(m_password, json[QString("Password")]);
    m_password_isSet = !json[QString("Password")].isNull() && m_password_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("UserID")]);
    m_user_id_isSet = !json[QString("UserID")].isNull() && m_user_id_isValid;

    m_username_isValid = ::OpenAPI::fromJsonValue(m_username, json[QString("Username")]);
    m_username_isSet = !json[QString("Username")].isNull() && m_username_isValid;
}

QString OAIAPI_Models_User::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAPI_Models_User::asJsonObject() const {
    QJsonObject obj;
    if (m_change_password_isSet) {
        obj.insert(QString("ChangePassword"), ::OpenAPI::toJsonValue(m_change_password));
    }
    if (m_email_isSet) {
        obj.insert(QString("Email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_password_isSet) {
        obj.insert(QString("Password"), ::OpenAPI::toJsonValue(m_password));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("UserID"), ::OpenAPI::toJsonValue(m_user_id));
    }
    if (m_username_isSet) {
        obj.insert(QString("Username"), ::OpenAPI::toJsonValue(m_username));
    }
    return obj;
}

QString OAIAPI_Models_User::getChangePassword() const {
    return m_change_password;
}
void OAIAPI_Models_User::setChangePassword(const QString &change_password) {
    m_change_password = change_password;
    m_change_password_isSet = true;
}

bool OAIAPI_Models_User::is_change_password_Set() const{
    return m_change_password_isSet;
}

bool OAIAPI_Models_User::is_change_password_Valid() const{
    return m_change_password_isValid;
}

QString OAIAPI_Models_User::getEmail() const {
    return m_email;
}
void OAIAPI_Models_User::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIAPI_Models_User::is_email_Set() const{
    return m_email_isSet;
}

bool OAIAPI_Models_User::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIAPI_Models_User::getName() const {
    return m_name;
}
void OAIAPI_Models_User::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAPI_Models_User::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAPI_Models_User::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIAPI_Models_User::getPassword() const {
    return m_password;
}
void OAIAPI_Models_User::setPassword(const QString &password) {
    m_password = password;
    m_password_isSet = true;
}

bool OAIAPI_Models_User::is_password_Set() const{
    return m_password_isSet;
}

bool OAIAPI_Models_User::is_password_Valid() const{
    return m_password_isValid;
}

qint32 OAIAPI_Models_User::getUserId() const {
    return m_user_id;
}
void OAIAPI_Models_User::setUserId(const qint32 &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIAPI_Models_User::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIAPI_Models_User::is_user_id_Valid() const{
    return m_user_id_isValid;
}

QString OAIAPI_Models_User::getUsername() const {
    return m_username;
}
void OAIAPI_Models_User::setUsername(const QString &username) {
    m_username = username;
    m_username_isSet = true;
}

bool OAIAPI_Models_User::is_username_Set() const{
    return m_username_isSet;
}

bool OAIAPI_Models_User::is_username_Valid() const{
    return m_username_isValid;
}

bool OAIAPI_Models_User::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_change_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAPI_Models_User::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
