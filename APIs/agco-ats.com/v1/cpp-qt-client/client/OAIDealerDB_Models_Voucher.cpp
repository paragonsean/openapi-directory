/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDealerDB_Models_Voucher.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDealerDB_Models_Voucher::OAIDealerDB_Models_Voucher(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDealerDB_Models_Voucher::OAIDealerDB_Models_Voucher() {
    this->initializeModel();
}

OAIDealerDB_Models_Voucher::~OAIDealerDB_Models_Voucher() {}

void OAIDealerDB_Models_Voucher::initializeModel() {

    m_created_date_isSet = false;
    m_created_date_isValid = false;

    m_dealer_code_isSet = false;
    m_dealer_code_isValid = false;

    m_deleted_isSet = false;
    m_deleted_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_expiration_date_isSet = false;
    m_expiration_date_isValid = false;

    m_license_to_isSet = false;
    m_license_to_isValid = false;

    m_modified_by_isSet = false;
    m_modified_by_isValid = false;

    m_order_number_isSet = false;
    m_order_number_isValid = false;

    m_punched_isSet = false;
    m_punched_isValid = false;

    m_punched_date_isSet = false;
    m_punched_date_isValid = false;

    m_purpose_isSet = false;
    m_purpose_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_voucher_code_isSet = false;
    m_voucher_code_isValid = false;
}

void OAIDealerDB_Models_Voucher::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDealerDB_Models_Voucher::fromJsonObject(QJsonObject json) {

    m_created_date_isValid = ::OpenAPI::fromJsonValue(m_created_date, json[QString("CreatedDate")]);
    m_created_date_isSet = !json[QString("CreatedDate")].isNull() && m_created_date_isValid;

    m_dealer_code_isValid = ::OpenAPI::fromJsonValue(m_dealer_code, json[QString("DealerCode")]);
    m_dealer_code_isSet = !json[QString("DealerCode")].isNull() && m_dealer_code_isValid;

    m_deleted_isValid = ::OpenAPI::fromJsonValue(m_deleted, json[QString("Deleted")]);
    m_deleted_isSet = !json[QString("Deleted")].isNull() && m_deleted_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("Email")]);
    m_email_isSet = !json[QString("Email")].isNull() && m_email_isValid;

    m_expiration_date_isValid = ::OpenAPI::fromJsonValue(m_expiration_date, json[QString("ExpirationDate")]);
    m_expiration_date_isSet = !json[QString("ExpirationDate")].isNull() && m_expiration_date_isValid;

    m_license_to_isValid = ::OpenAPI::fromJsonValue(m_license_to, json[QString("LicenseTo")]);
    m_license_to_isSet = !json[QString("LicenseTo")].isNull() && m_license_to_isValid;

    m_modified_by_isValid = ::OpenAPI::fromJsonValue(m_modified_by, json[QString("ModifiedBy")]);
    m_modified_by_isSet = !json[QString("ModifiedBy")].isNull() && m_modified_by_isValid;

    m_order_number_isValid = ::OpenAPI::fromJsonValue(m_order_number, json[QString("OrderNumber")]);
    m_order_number_isSet = !json[QString("OrderNumber")].isNull() && m_order_number_isValid;

    m_punched_isValid = ::OpenAPI::fromJsonValue(m_punched, json[QString("Punched")]);
    m_punched_isSet = !json[QString("Punched")].isNull() && m_punched_isValid;

    m_punched_date_isValid = ::OpenAPI::fromJsonValue(m_punched_date, json[QString("PunchedDate")]);
    m_punched_date_isSet = !json[QString("PunchedDate")].isNull() && m_punched_date_isValid;

    m_purpose_isValid = ::OpenAPI::fromJsonValue(m_purpose, json[QString("Purpose")]);
    m_purpose_isSet = !json[QString("Purpose")].isNull() && m_purpose_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("Type")]);
    m_type_isSet = !json[QString("Type")].isNull() && m_type_isValid;

    m_voucher_code_isValid = ::OpenAPI::fromJsonValue(m_voucher_code, json[QString("VoucherCode")]);
    m_voucher_code_isSet = !json[QString("VoucherCode")].isNull() && m_voucher_code_isValid;
}

QString OAIDealerDB_Models_Voucher::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDealerDB_Models_Voucher::asJsonObject() const {
    QJsonObject obj;
    if (m_created_date_isSet) {
        obj.insert(QString("CreatedDate"), ::OpenAPI::toJsonValue(m_created_date));
    }
    if (m_dealer_code_isSet) {
        obj.insert(QString("DealerCode"), ::OpenAPI::toJsonValue(m_dealer_code));
    }
    if (m_deleted_isSet) {
        obj.insert(QString("Deleted"), ::OpenAPI::toJsonValue(m_deleted));
    }
    if (m_email_isSet) {
        obj.insert(QString("Email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_expiration_date_isSet) {
        obj.insert(QString("ExpirationDate"), ::OpenAPI::toJsonValue(m_expiration_date));
    }
    if (m_license_to_isSet) {
        obj.insert(QString("LicenseTo"), ::OpenAPI::toJsonValue(m_license_to));
    }
    if (m_modified_by_isSet) {
        obj.insert(QString("ModifiedBy"), ::OpenAPI::toJsonValue(m_modified_by));
    }
    if (m_order_number_isSet) {
        obj.insert(QString("OrderNumber"), ::OpenAPI::toJsonValue(m_order_number));
    }
    if (m_punched_isSet) {
        obj.insert(QString("Punched"), ::OpenAPI::toJsonValue(m_punched));
    }
    if (m_punched_date_isSet) {
        obj.insert(QString("PunchedDate"), ::OpenAPI::toJsonValue(m_punched_date));
    }
    if (m_purpose_isSet) {
        obj.insert(QString("Purpose"), ::OpenAPI::toJsonValue(m_purpose));
    }
    if (m_type_isSet) {
        obj.insert(QString("Type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_voucher_code_isSet) {
        obj.insert(QString("VoucherCode"), ::OpenAPI::toJsonValue(m_voucher_code));
    }
    return obj;
}

QDateTime OAIDealerDB_Models_Voucher::getCreatedDate() const {
    return m_created_date;
}
void OAIDealerDB_Models_Voucher::setCreatedDate(const QDateTime &created_date) {
    m_created_date = created_date;
    m_created_date_isSet = true;
}

bool OAIDealerDB_Models_Voucher::is_created_date_Set() const{
    return m_created_date_isSet;
}

bool OAIDealerDB_Models_Voucher::is_created_date_Valid() const{
    return m_created_date_isValid;
}

QString OAIDealerDB_Models_Voucher::getDealerCode() const {
    return m_dealer_code;
}
void OAIDealerDB_Models_Voucher::setDealerCode(const QString &dealer_code) {
    m_dealer_code = dealer_code;
    m_dealer_code_isSet = true;
}

bool OAIDealerDB_Models_Voucher::is_dealer_code_Set() const{
    return m_dealer_code_isSet;
}

bool OAIDealerDB_Models_Voucher::is_dealer_code_Valid() const{
    return m_dealer_code_isValid;
}

bool OAIDealerDB_Models_Voucher::isDeleted() const {
    return m_deleted;
}
void OAIDealerDB_Models_Voucher::setDeleted(const bool &deleted) {
    m_deleted = deleted;
    m_deleted_isSet = true;
}

bool OAIDealerDB_Models_Voucher::is_deleted_Set() const{
    return m_deleted_isSet;
}

bool OAIDealerDB_Models_Voucher::is_deleted_Valid() const{
    return m_deleted_isValid;
}

QString OAIDealerDB_Models_Voucher::getEmail() const {
    return m_email;
}
void OAIDealerDB_Models_Voucher::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIDealerDB_Models_Voucher::is_email_Set() const{
    return m_email_isSet;
}

bool OAIDealerDB_Models_Voucher::is_email_Valid() const{
    return m_email_isValid;
}

QDateTime OAIDealerDB_Models_Voucher::getExpirationDate() const {
    return m_expiration_date;
}
void OAIDealerDB_Models_Voucher::setExpirationDate(const QDateTime &expiration_date) {
    m_expiration_date = expiration_date;
    m_expiration_date_isSet = true;
}

bool OAIDealerDB_Models_Voucher::is_expiration_date_Set() const{
    return m_expiration_date_isSet;
}

bool OAIDealerDB_Models_Voucher::is_expiration_date_Valid() const{
    return m_expiration_date_isValid;
}

QString OAIDealerDB_Models_Voucher::getLicenseTo() const {
    return m_license_to;
}
void OAIDealerDB_Models_Voucher::setLicenseTo(const QString &license_to) {
    m_license_to = license_to;
    m_license_to_isSet = true;
}

bool OAIDealerDB_Models_Voucher::is_license_to_Set() const{
    return m_license_to_isSet;
}

bool OAIDealerDB_Models_Voucher::is_license_to_Valid() const{
    return m_license_to_isValid;
}

QString OAIDealerDB_Models_Voucher::getModifiedBy() const {
    return m_modified_by;
}
void OAIDealerDB_Models_Voucher::setModifiedBy(const QString &modified_by) {
    m_modified_by = modified_by;
    m_modified_by_isSet = true;
}

bool OAIDealerDB_Models_Voucher::is_modified_by_Set() const{
    return m_modified_by_isSet;
}

bool OAIDealerDB_Models_Voucher::is_modified_by_Valid() const{
    return m_modified_by_isValid;
}

QString OAIDealerDB_Models_Voucher::getOrderNumber() const {
    return m_order_number;
}
void OAIDealerDB_Models_Voucher::setOrderNumber(const QString &order_number) {
    m_order_number = order_number;
    m_order_number_isSet = true;
}

bool OAIDealerDB_Models_Voucher::is_order_number_Set() const{
    return m_order_number_isSet;
}

bool OAIDealerDB_Models_Voucher::is_order_number_Valid() const{
    return m_order_number_isValid;
}

bool OAIDealerDB_Models_Voucher::isPunched() const {
    return m_punched;
}
void OAIDealerDB_Models_Voucher::setPunched(const bool &punched) {
    m_punched = punched;
    m_punched_isSet = true;
}

bool OAIDealerDB_Models_Voucher::is_punched_Set() const{
    return m_punched_isSet;
}

bool OAIDealerDB_Models_Voucher::is_punched_Valid() const{
    return m_punched_isValid;
}

QDateTime OAIDealerDB_Models_Voucher::getPunchedDate() const {
    return m_punched_date;
}
void OAIDealerDB_Models_Voucher::setPunchedDate(const QDateTime &punched_date) {
    m_punched_date = punched_date;
    m_punched_date_isSet = true;
}

bool OAIDealerDB_Models_Voucher::is_punched_date_Set() const{
    return m_punched_date_isSet;
}

bool OAIDealerDB_Models_Voucher::is_punched_date_Valid() const{
    return m_punched_date_isValid;
}

QString OAIDealerDB_Models_Voucher::getPurpose() const {
    return m_purpose;
}
void OAIDealerDB_Models_Voucher::setPurpose(const QString &purpose) {
    m_purpose = purpose;
    m_purpose_isSet = true;
}

bool OAIDealerDB_Models_Voucher::is_purpose_Set() const{
    return m_purpose_isSet;
}

bool OAIDealerDB_Models_Voucher::is_purpose_Valid() const{
    return m_purpose_isValid;
}

QString OAIDealerDB_Models_Voucher::getType() const {
    return m_type;
}
void OAIDealerDB_Models_Voucher::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIDealerDB_Models_Voucher::is_type_Set() const{
    return m_type_isSet;
}

bool OAIDealerDB_Models_Voucher::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIDealerDB_Models_Voucher::getVoucherCode() const {
    return m_voucher_code;
}
void OAIDealerDB_Models_Voucher::setVoucherCode(const QString &voucher_code) {
    m_voucher_code = voucher_code;
    m_voucher_code_isSet = true;
}

bool OAIDealerDB_Models_Voucher::is_voucher_code_Set() const{
    return m_voucher_code_isSet;
}

bool OAIDealerDB_Models_Voucher::is_voucher_code_Valid() const{
    return m_voucher_code_isValid;
}

bool OAIDealerDB_Models_Voucher::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dealer_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deleted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiration_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_license_to_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_punched_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_punched_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_purpose_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_voucher_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDealerDB_Models_Voucher::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
