/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSystem_Models_Bundle.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSystem_Models_Bundle::OAIUpdateSystem_Models_Bundle(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSystem_Models_Bundle::OAIUpdateSystem_Models_Bundle() {
    this->initializeModel();
}

OAIUpdateSystem_Models_Bundle::~OAIUpdateSystem_Models_Bundle() {}

void OAIUpdateSystem_Models_Bundle::initializeModel() {

    m_active_isSet = false;
    m_active_isValid = false;

    m_bundle_id_isSet = false;
    m_bundle_id_isValid = false;

    m_bundle_number_isSet = false;
    m_bundle_number_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_update_group_id_isSet = false;
    m_update_group_id_isValid = false;
}

void OAIUpdateSystem_Models_Bundle::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSystem_Models_Bundle::fromJsonObject(QJsonObject json) {

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("Active")]);
    m_active_isSet = !json[QString("Active")].isNull() && m_active_isValid;

    m_bundle_id_isValid = ::OpenAPI::fromJsonValue(m_bundle_id, json[QString("BundleID")]);
    m_bundle_id_isSet = !json[QString("BundleID")].isNull() && m_bundle_id_isValid;

    m_bundle_number_isValid = ::OpenAPI::fromJsonValue(m_bundle_number, json[QString("BundleNumber")]);
    m_bundle_number_isSet = !json[QString("BundleNumber")].isNull() && m_bundle_number_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_update_group_id_isValid = ::OpenAPI::fromJsonValue(m_update_group_id, json[QString("UpdateGroupID")]);
    m_update_group_id_isSet = !json[QString("UpdateGroupID")].isNull() && m_update_group_id_isValid;
}

QString OAIUpdateSystem_Models_Bundle::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSystem_Models_Bundle::asJsonObject() const {
    QJsonObject obj;
    if (m_active_isSet) {
        obj.insert(QString("Active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_bundle_id_isSet) {
        obj.insert(QString("BundleID"), ::OpenAPI::toJsonValue(m_bundle_id));
    }
    if (m_bundle_number_isSet) {
        obj.insert(QString("BundleNumber"), ::OpenAPI::toJsonValue(m_bundle_number));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_update_group_id_isSet) {
        obj.insert(QString("UpdateGroupID"), ::OpenAPI::toJsonValue(m_update_group_id));
    }
    return obj;
}

bool OAIUpdateSystem_Models_Bundle::isActive() const {
    return m_active;
}
void OAIUpdateSystem_Models_Bundle::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAIUpdateSystem_Models_Bundle::is_active_Set() const{
    return m_active_isSet;
}

bool OAIUpdateSystem_Models_Bundle::is_active_Valid() const{
    return m_active_isValid;
}

QString OAIUpdateSystem_Models_Bundle::getBundleId() const {
    return m_bundle_id;
}
void OAIUpdateSystem_Models_Bundle::setBundleId(const QString &bundle_id) {
    m_bundle_id = bundle_id;
    m_bundle_id_isSet = true;
}

bool OAIUpdateSystem_Models_Bundle::is_bundle_id_Set() const{
    return m_bundle_id_isSet;
}

bool OAIUpdateSystem_Models_Bundle::is_bundle_id_Valid() const{
    return m_bundle_id_isValid;
}

qint32 OAIUpdateSystem_Models_Bundle::getBundleNumber() const {
    return m_bundle_number;
}
void OAIUpdateSystem_Models_Bundle::setBundleNumber(const qint32 &bundle_number) {
    m_bundle_number = bundle_number;
    m_bundle_number_isSet = true;
}

bool OAIUpdateSystem_Models_Bundle::is_bundle_number_Set() const{
    return m_bundle_number_isSet;
}

bool OAIUpdateSystem_Models_Bundle::is_bundle_number_Valid() const{
    return m_bundle_number_isValid;
}

QString OAIUpdateSystem_Models_Bundle::getDescription() const {
    return m_description;
}
void OAIUpdateSystem_Models_Bundle::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateSystem_Models_Bundle::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateSystem_Models_Bundle::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIUpdateSystem_Models_Bundle::getUpdateGroupId() const {
    return m_update_group_id;
}
void OAIUpdateSystem_Models_Bundle::setUpdateGroupId(const QString &update_group_id) {
    m_update_group_id = update_group_id;
    m_update_group_id_isSet = true;
}

bool OAIUpdateSystem_Models_Bundle::is_update_group_id_Set() const{
    return m_update_group_id_isSet;
}

bool OAIUpdateSystem_Models_Bundle::is_update_group_id_Valid() const{
    return m_update_group_id_isValid;
}

bool OAIUpdateSystem_Models_Bundle::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bundle_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bundle_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSystem_Models_Bundle::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_bundle_number_isValid && m_description_isValid && m_update_group_id_isValid && true;
}

} // namespace OpenAPI
