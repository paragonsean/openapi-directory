/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSystem_Models_AvailableUpdateGroupSubscription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSystem_Models_AvailableUpdateGroupSubscription::OAIUpdateSystem_Models_AvailableUpdateGroupSubscription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSystem_Models_AvailableUpdateGroupSubscription::OAIUpdateSystem_Models_AvailableUpdateGroupSubscription() {
    this->initializeModel();
}

OAIUpdateSystem_Models_AvailableUpdateGroupSubscription::~OAIUpdateSystem_Models_AvailableUpdateGroupSubscription() {}

void OAIUpdateSystem_Models_AvailableUpdateGroupSubscription::initializeModel() {

    m_available_subscriptions_isSet = false;
    m_available_subscriptions_isValid = false;

    m_update_group_isSet = false;
    m_update_group_isValid = false;
}

void OAIUpdateSystem_Models_AvailableUpdateGroupSubscription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSystem_Models_AvailableUpdateGroupSubscription::fromJsonObject(QJsonObject json) {

    m_available_subscriptions_isValid = ::OpenAPI::fromJsonValue(m_available_subscriptions, json[QString("AvailableSubscriptions")]);
    m_available_subscriptions_isSet = !json[QString("AvailableSubscriptions")].isNull() && m_available_subscriptions_isValid;

    m_update_group_isValid = ::OpenAPI::fromJsonValue(m_update_group, json[QString("UpdateGroup")]);
    m_update_group_isSet = !json[QString("UpdateGroup")].isNull() && m_update_group_isValid;
}

QString OAIUpdateSystem_Models_AvailableUpdateGroupSubscription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSystem_Models_AvailableUpdateGroupSubscription::asJsonObject() const {
    QJsonObject obj;
    if (m_available_subscriptions.size() > 0) {
        obj.insert(QString("AvailableSubscriptions"), ::OpenAPI::toJsonValue(m_available_subscriptions));
    }
    if (m_update_group.isSet()) {
        obj.insert(QString("UpdateGroup"), ::OpenAPI::toJsonValue(m_update_group));
    }
    return obj;
}

QList<OAIUpdateSystem_Models_AvailableSubscription> OAIUpdateSystem_Models_AvailableUpdateGroupSubscription::getAvailableSubscriptions() const {
    return m_available_subscriptions;
}
void OAIUpdateSystem_Models_AvailableUpdateGroupSubscription::setAvailableSubscriptions(const QList<OAIUpdateSystem_Models_AvailableSubscription> &available_subscriptions) {
    m_available_subscriptions = available_subscriptions;
    m_available_subscriptions_isSet = true;
}

bool OAIUpdateSystem_Models_AvailableUpdateGroupSubscription::is_available_subscriptions_Set() const{
    return m_available_subscriptions_isSet;
}

bool OAIUpdateSystem_Models_AvailableUpdateGroupSubscription::is_available_subscriptions_Valid() const{
    return m_available_subscriptions_isValid;
}

OAIUpdateSystem_Models_UpdateGroup OAIUpdateSystem_Models_AvailableUpdateGroupSubscription::getUpdateGroup() const {
    return m_update_group;
}
void OAIUpdateSystem_Models_AvailableUpdateGroupSubscription::setUpdateGroup(const OAIUpdateSystem_Models_UpdateGroup &update_group) {
    m_update_group = update_group;
    m_update_group_isSet = true;
}

bool OAIUpdateSystem_Models_AvailableUpdateGroupSubscription::is_update_group_Set() const{
    return m_update_group_isSet;
}

bool OAIUpdateSystem_Models_AvailableUpdateGroupSubscription::is_update_group_Valid() const{
    return m_update_group_isValid;
}

bool OAIUpdateSystem_Models_AvailableUpdateGroupSubscription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_available_subscriptions.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_group.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSystem_Models_AvailableUpdateGroupSubscription::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
