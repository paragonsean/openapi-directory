/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition() {
    this->initializeModel();
}

OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::~OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition() {}

void OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::initializeModel() {

    m_authorization_id_isSet = false;
    m_authorization_id_isValid = false;

    m_created_by_user_id_isSet = false;
    m_created_by_user_id_isValid = false;

    m_created_date_isSet = false;
    m_created_date_isValid = false;

    m_data_fields_isSet = false;
    m_data_fields_isValid = false;

    m_deleted_by_user_id_isSet = false;
    m_deleted_by_user_id_isValid = false;

    m_deleted_date_isSet = false;
    m_deleted_date_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_duration_accuracy_isSet = false;
    m_duration_accuracy_isValid = false;

    m_duration_amount_isSet = false;
    m_duration_amount_isValid = false;

    m_duration_units_isSet = false;
    m_duration_units_isValid = false;

    m_hash_length_isSet = false;
    m_hash_length_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_is_deleted_isSet = false;
    m_is_deleted_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_random_length_isSet = false;
    m_random_length_isValid = false;

    m_validation_fields_isSet = false;
    m_validation_fields_isValid = false;
}

void OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::fromJsonObject(QJsonObject json) {

    m_authorization_id_isValid = ::OpenAPI::fromJsonValue(m_authorization_id, json[QString("AuthorizationID")]);
    m_authorization_id_isSet = !json[QString("AuthorizationID")].isNull() && m_authorization_id_isValid;

    m_created_by_user_id_isValid = ::OpenAPI::fromJsonValue(m_created_by_user_id, json[QString("CreatedByUserID")]);
    m_created_by_user_id_isSet = !json[QString("CreatedByUserID")].isNull() && m_created_by_user_id_isValid;

    m_created_date_isValid = ::OpenAPI::fromJsonValue(m_created_date, json[QString("CreatedDate")]);
    m_created_date_isSet = !json[QString("CreatedDate")].isNull() && m_created_date_isValid;

    m_data_fields_isValid = ::OpenAPI::fromJsonValue(m_data_fields, json[QString("DataFields")]);
    m_data_fields_isSet = !json[QString("DataFields")].isNull() && m_data_fields_isValid;

    m_deleted_by_user_id_isValid = ::OpenAPI::fromJsonValue(m_deleted_by_user_id, json[QString("DeletedByUserID")]);
    m_deleted_by_user_id_isSet = !json[QString("DeletedByUserID")].isNull() && m_deleted_by_user_id_isValid;

    m_deleted_date_isValid = ::OpenAPI::fromJsonValue(m_deleted_date, json[QString("DeletedDate")]);
    m_deleted_date_isSet = !json[QString("DeletedDate")].isNull() && m_deleted_date_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_duration_accuracy_isValid = ::OpenAPI::fromJsonValue(m_duration_accuracy, json[QString("DurationAccuracy")]);
    m_duration_accuracy_isSet = !json[QString("DurationAccuracy")].isNull() && m_duration_accuracy_isValid;

    m_duration_amount_isValid = ::OpenAPI::fromJsonValue(m_duration_amount, json[QString("DurationAmount")]);
    m_duration_amount_isSet = !json[QString("DurationAmount")].isNull() && m_duration_amount_isValid;

    m_duration_units_isValid = ::OpenAPI::fromJsonValue(m_duration_units, json[QString("DurationUnits")]);
    m_duration_units_isSet = !json[QString("DurationUnits")].isNull() && m_duration_units_isValid;

    m_hash_length_isValid = ::OpenAPI::fromJsonValue(m_hash_length, json[QString("HashLength")]);
    m_hash_length_isSet = !json[QString("HashLength")].isNull() && m_hash_length_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("ID")]);
    m_id_isSet = !json[QString("ID")].isNull() && m_id_isValid;

    m_is_deleted_isValid = ::OpenAPI::fromJsonValue(m_is_deleted, json[QString("IsDeleted")]);
    m_is_deleted_isSet = !json[QString("IsDeleted")].isNull() && m_is_deleted_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_random_length_isValid = ::OpenAPI::fromJsonValue(m_random_length, json[QString("RandomLength")]);
    m_random_length_isSet = !json[QString("RandomLength")].isNull() && m_random_length_isValid;

    m_validation_fields_isValid = ::OpenAPI::fromJsonValue(m_validation_fields, json[QString("ValidationFields")]);
    m_validation_fields_isSet = !json[QString("ValidationFields")].isNull() && m_validation_fields_isValid;
}

QString OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_authorization_id_isSet) {
        obj.insert(QString("AuthorizationID"), ::OpenAPI::toJsonValue(m_authorization_id));
    }
    if (m_created_by_user_id_isSet) {
        obj.insert(QString("CreatedByUserID"), ::OpenAPI::toJsonValue(m_created_by_user_id));
    }
    if (m_created_date_isSet) {
        obj.insert(QString("CreatedDate"), ::OpenAPI::toJsonValue(m_created_date));
    }
    if (m_data_fields.size() > 0) {
        obj.insert(QString("DataFields"), ::OpenAPI::toJsonValue(m_data_fields));
    }
    if (m_deleted_by_user_id_isSet) {
        obj.insert(QString("DeletedByUserID"), ::OpenAPI::toJsonValue(m_deleted_by_user_id));
    }
    if (m_deleted_date_isSet) {
        obj.insert(QString("DeletedDate"), ::OpenAPI::toJsonValue(m_deleted_date));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_duration_accuracy_isSet) {
        obj.insert(QString("DurationAccuracy"), ::OpenAPI::toJsonValue(m_duration_accuracy));
    }
    if (m_duration_amount_isSet) {
        obj.insert(QString("DurationAmount"), ::OpenAPI::toJsonValue(m_duration_amount));
    }
    if (m_duration_units_isSet) {
        obj.insert(QString("DurationUnits"), ::OpenAPI::toJsonValue(m_duration_units));
    }
    if (m_hash_length_isSet) {
        obj.insert(QString("HashLength"), ::OpenAPI::toJsonValue(m_hash_length));
    }
    if (m_id_isSet) {
        obj.insert(QString("ID"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_is_deleted_isSet) {
        obj.insert(QString("IsDeleted"), ::OpenAPI::toJsonValue(m_is_deleted));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_random_length_isSet) {
        obj.insert(QString("RandomLength"), ::OpenAPI::toJsonValue(m_random_length));
    }
    if (m_validation_fields.size() > 0) {
        obj.insert(QString("ValidationFields"), ::OpenAPI::toJsonValue(m_validation_fields));
    }
    return obj;
}

QString OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::getAuthorizationId() const {
    return m_authorization_id;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::setAuthorizationId(const QString &authorization_id) {
    m_authorization_id = authorization_id;
    m_authorization_id_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_authorization_id_Set() const{
    return m_authorization_id_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_authorization_id_Valid() const{
    return m_authorization_id_isValid;
}

qint32 OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::getCreatedByUserId() const {
    return m_created_by_user_id;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::setCreatedByUserId(const qint32 &created_by_user_id) {
    m_created_by_user_id = created_by_user_id;
    m_created_by_user_id_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_created_by_user_id_Set() const{
    return m_created_by_user_id_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_created_by_user_id_Valid() const{
    return m_created_by_user_id_isValid;
}

QDateTime OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::getCreatedDate() const {
    return m_created_date;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::setCreatedDate(const QDateTime &created_date) {
    m_created_date = created_date;
    m_created_date_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_created_date_Set() const{
    return m_created_date_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_created_date_Valid() const{
    return m_created_date_isValid;
}

QList<OAIAuthorizationCodes_Shared_Models_DataField> OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::getDataFields() const {
    return m_data_fields;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::setDataFields(const QList<OAIAuthorizationCodes_Shared_Models_DataField> &data_fields) {
    m_data_fields = data_fields;
    m_data_fields_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_data_fields_Set() const{
    return m_data_fields_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_data_fields_Valid() const{
    return m_data_fields_isValid;
}

qint32 OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::getDeletedByUserId() const {
    return m_deleted_by_user_id;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::setDeletedByUserId(const qint32 &deleted_by_user_id) {
    m_deleted_by_user_id = deleted_by_user_id;
    m_deleted_by_user_id_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_deleted_by_user_id_Set() const{
    return m_deleted_by_user_id_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_deleted_by_user_id_Valid() const{
    return m_deleted_by_user_id_isValid;
}

QDateTime OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::getDeletedDate() const {
    return m_deleted_date;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::setDeletedDate(const QDateTime &deleted_date) {
    m_deleted_date = deleted_date;
    m_deleted_date_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_deleted_date_Set() const{
    return m_deleted_date_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_deleted_date_Valid() const{
    return m_deleted_date_isValid;
}

QString OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::getDescription() const {
    return m_description;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_description_Set() const{
    return m_description_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_description_Valid() const{
    return m_description_isValid;
}

qint32 OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::getDurationAccuracy() const {
    return m_duration_accuracy;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::setDurationAccuracy(const qint32 &duration_accuracy) {
    m_duration_accuracy = duration_accuracy;
    m_duration_accuracy_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_duration_accuracy_Set() const{
    return m_duration_accuracy_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_duration_accuracy_Valid() const{
    return m_duration_accuracy_isValid;
}

qint32 OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::getDurationAmount() const {
    return m_duration_amount;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::setDurationAmount(const qint32 &duration_amount) {
    m_duration_amount = duration_amount;
    m_duration_amount_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_duration_amount_Set() const{
    return m_duration_amount_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_duration_amount_Valid() const{
    return m_duration_amount_isValid;
}

QString OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::getDurationUnits() const {
    return m_duration_units;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::setDurationUnits(const QString &duration_units) {
    m_duration_units = duration_units;
    m_duration_units_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_duration_units_Set() const{
    return m_duration_units_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_duration_units_Valid() const{
    return m_duration_units_isValid;
}

qint32 OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::getHashLength() const {
    return m_hash_length;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::setHashLength(const qint32 &hash_length) {
    m_hash_length = hash_length;
    m_hash_length_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_hash_length_Set() const{
    return m_hash_length_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_hash_length_Valid() const{
    return m_hash_length_isValid;
}

QString OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::getId() const {
    return m_id;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_id_Valid() const{
    return m_id_isValid;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::isIsDeleted() const {
    return m_is_deleted;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::setIsDeleted(const bool &is_deleted) {
    m_is_deleted = is_deleted;
    m_is_deleted_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_is_deleted_Set() const{
    return m_is_deleted_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_is_deleted_Valid() const{
    return m_is_deleted_isValid;
}

QString OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::getName() const {
    return m_name;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::getRandomLength() const {
    return m_random_length;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::setRandomLength(const qint32 &random_length) {
    m_random_length = random_length;
    m_random_length_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_random_length_Set() const{
    return m_random_length_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_random_length_Valid() const{
    return m_random_length_isValid;
}

QList<OAIAuthorizationCodes_Shared_Models_ValidationField> OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::getValidationFields() const {
    return m_validation_fields;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::setValidationFields(const QList<OAIAuthorizationCodes_Shared_Models_ValidationField> &validation_fields) {
    m_validation_fields = validation_fields;
    m_validation_fields_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_validation_fields_Set() const{
    return m_validation_fields_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::is_validation_fields_Valid() const{
    return m_validation_fields_isValid;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_authorization_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_deleted_by_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deleted_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_accuracy_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_units_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hash_length_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_deleted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_random_length_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_validation_fields.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationCodeDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && true;
}

} // namespace OpenAPI
