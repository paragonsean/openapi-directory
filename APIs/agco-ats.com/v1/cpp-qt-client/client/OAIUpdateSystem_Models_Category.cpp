/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSystem_Models_Category.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSystem_Models_Category::OAIUpdateSystem_Models_Category(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSystem_Models_Category::OAIUpdateSystem_Models_Category() {
    this->initializeModel();
}

OAIUpdateSystem_Models_Category::~OAIUpdateSystem_Models_Category() {}

void OAIUpdateSystem_Models_Category::initializeModel() {

    m_values_isSet = false;
    m_values_isValid = false;

    m_category_isSet = false;
    m_category_isValid = false;
}

void OAIUpdateSystem_Models_Category::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSystem_Models_Category::fromJsonObject(QJsonObject json) {

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("Values")]);
    m_values_isSet = !json[QString("Values")].isNull() && m_values_isValid;

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("category")]);
    m_category_isSet = !json[QString("category")].isNull() && m_category_isValid;
}

QString OAIUpdateSystem_Models_Category::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSystem_Models_Category::asJsonObject() const {
    QJsonObject obj;
    if (m_values.size() > 0) {
        obj.insert(QString("Values"), ::OpenAPI::toJsonValue(m_values));
    }
    if (m_category_isSet) {
        obj.insert(QString("category"), ::OpenAPI::toJsonValue(m_category));
    }
    return obj;
}

QList<OAIUpdateSystem_Models_AttributeValue> OAIUpdateSystem_Models_Category::getValues() const {
    return m_values;
}
void OAIUpdateSystem_Models_Category::setValues(const QList<OAIUpdateSystem_Models_AttributeValue> &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIUpdateSystem_Models_Category::is_values_Set() const{
    return m_values_isSet;
}

bool OAIUpdateSystem_Models_Category::is_values_Valid() const{
    return m_values_isValid;
}

QString OAIUpdateSystem_Models_Category::getCategory() const {
    return m_category;
}
void OAIUpdateSystem_Models_Category::setCategory(const QString &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAIUpdateSystem_Models_Category::is_category_Set() const{
    return m_category_isSet;
}

bool OAIUpdateSystem_Models_Category::is_category_Valid() const{
    return m_category_isValid;
}

bool OAIUpdateSystem_Models_Category::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_values.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSystem_Models_Category::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_category_isValid && true;
}

} // namespace OpenAPI
