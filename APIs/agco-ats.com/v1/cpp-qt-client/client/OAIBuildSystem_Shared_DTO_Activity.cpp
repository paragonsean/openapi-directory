/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBuildSystem_Shared_DTO_Activity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBuildSystem_Shared_DTO_Activity::OAIBuildSystem_Shared_DTO_Activity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBuildSystem_Shared_DTO_Activity::OAIBuildSystem_Shared_DTO_Activity() {
    this->initializeModel();
}

OAIBuildSystem_Shared_DTO_Activity::~OAIBuildSystem_Shared_DTO_Activity() {}

void OAIBuildSystem_Shared_DTO_Activity::initializeModel() {

    m_activity_id_isSet = false;
    m_activity_id_isValid = false;

    m_deleted_isSet = false;
    m_deleted_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;

    m_steps_isSet = false;
    m_steps_isValid = false;
}

void OAIBuildSystem_Shared_DTO_Activity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBuildSystem_Shared_DTO_Activity::fromJsonObject(QJsonObject json) {

    m_activity_id_isValid = ::OpenAPI::fromJsonValue(m_activity_id, json[QString("ActivityID")]);
    m_activity_id_isSet = !json[QString("ActivityID")].isNull() && m_activity_id_isValid;

    m_deleted_isValid = ::OpenAPI::fromJsonValue(m_deleted, json[QString("Deleted")]);
    m_deleted_isSet = !json[QString("Deleted")].isNull() && m_deleted_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("Parameters")]);
    m_parameters_isSet = !json[QString("Parameters")].isNull() && m_parameters_isValid;

    m_steps_isValid = ::OpenAPI::fromJsonValue(m_steps, json[QString("Steps")]);
    m_steps_isSet = !json[QString("Steps")].isNull() && m_steps_isValid;
}

QString OAIBuildSystem_Shared_DTO_Activity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBuildSystem_Shared_DTO_Activity::asJsonObject() const {
    QJsonObject obj;
    if (m_activity_id_isSet) {
        obj.insert(QString("ActivityID"), ::OpenAPI::toJsonValue(m_activity_id));
    }
    if (m_deleted_isSet) {
        obj.insert(QString("Deleted"), ::OpenAPI::toJsonValue(m_deleted));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("Parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    if (m_steps.size() > 0) {
        obj.insert(QString("Steps"), ::OpenAPI::toJsonValue(m_steps));
    }
    return obj;
}

qint32 OAIBuildSystem_Shared_DTO_Activity::getActivityId() const {
    return m_activity_id;
}
void OAIBuildSystem_Shared_DTO_Activity::setActivityId(const qint32 &activity_id) {
    m_activity_id = activity_id;
    m_activity_id_isSet = true;
}

bool OAIBuildSystem_Shared_DTO_Activity::is_activity_id_Set() const{
    return m_activity_id_isSet;
}

bool OAIBuildSystem_Shared_DTO_Activity::is_activity_id_Valid() const{
    return m_activity_id_isValid;
}

bool OAIBuildSystem_Shared_DTO_Activity::isDeleted() const {
    return m_deleted;
}
void OAIBuildSystem_Shared_DTO_Activity::setDeleted(const bool &deleted) {
    m_deleted = deleted;
    m_deleted_isSet = true;
}

bool OAIBuildSystem_Shared_DTO_Activity::is_deleted_Set() const{
    return m_deleted_isSet;
}

bool OAIBuildSystem_Shared_DTO_Activity::is_deleted_Valid() const{
    return m_deleted_isValid;
}

QString OAIBuildSystem_Shared_DTO_Activity::getName() const {
    return m_name;
}
void OAIBuildSystem_Shared_DTO_Activity::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIBuildSystem_Shared_DTO_Activity::is_name_Set() const{
    return m_name_isSet;
}

bool OAIBuildSystem_Shared_DTO_Activity::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIBuildSystem_Shared_DTO_Parameter> OAIBuildSystem_Shared_DTO_Activity::getParameters() const {
    return m_parameters;
}
void OAIBuildSystem_Shared_DTO_Activity::setParameters(const QList<OAIBuildSystem_Shared_DTO_Parameter> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIBuildSystem_Shared_DTO_Activity::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIBuildSystem_Shared_DTO_Activity::is_parameters_Valid() const{
    return m_parameters_isValid;
}

QList<OAIBuildSystem_Shared_DTO_ActivityStep> OAIBuildSystem_Shared_DTO_Activity::getSteps() const {
    return m_steps;
}
void OAIBuildSystem_Shared_DTO_Activity::setSteps(const QList<OAIBuildSystem_Shared_DTO_ActivityStep> &steps) {
    m_steps = steps;
    m_steps_isSet = true;
}

bool OAIBuildSystem_Shared_DTO_Activity::is_steps_Set() const{
    return m_steps_isSet;
}

bool OAIBuildSystem_Shared_DTO_Activity::is_steps_Valid() const{
    return m_steps_isValid;
}

bool OAIBuildSystem_Shared_DTO_Activity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activity_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deleted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_steps.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBuildSystem_Shared_DTO_Activity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
