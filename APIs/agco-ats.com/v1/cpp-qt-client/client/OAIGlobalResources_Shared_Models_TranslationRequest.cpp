/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGlobalResources_Shared_Models_TranslationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGlobalResources_Shared_Models_TranslationRequest::OAIGlobalResources_Shared_Models_TranslationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGlobalResources_Shared_Models_TranslationRequest::OAIGlobalResources_Shared_Models_TranslationRequest() {
    this->initializeModel();
}

OAIGlobalResources_Shared_Models_TranslationRequest::~OAIGlobalResources_Shared_Models_TranslationRequest() {}

void OAIGlobalResources_Shared_Models_TranslationRequest::initializeModel() {

    m_approval_user_id_isSet = false;
    m_approval_user_id_isValid = false;

    m_cc_email_addresses_isSet = false;
    m_cc_email_addresses_isValid = false;

    m_charge_to_account_isSet = false;
    m_charge_to_account_isValid = false;

    m_deadline_isSet = false;
    m_deadline_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_locale_ids_isSet = false;
    m_locale_ids_isValid = false;

    m_notes_isSet = false;
    m_notes_isValid = false;

    m_questions_user_id_isSet = false;
    m_questions_user_id_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_submitted_by_isSet = false;
    m_submitted_by_isValid = false;

    m_translator_email_isSet = false;
    m_translator_email_isValid = false;

    m_translator_name_isSet = false;
    m_translator_name_isValid = false;
}

void OAIGlobalResources_Shared_Models_TranslationRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGlobalResources_Shared_Models_TranslationRequest::fromJsonObject(QJsonObject json) {

    m_approval_user_id_isValid = ::OpenAPI::fromJsonValue(m_approval_user_id, json[QString("ApprovalUserId")]);
    m_approval_user_id_isSet = !json[QString("ApprovalUserId")].isNull() && m_approval_user_id_isValid;

    m_cc_email_addresses_isValid = ::OpenAPI::fromJsonValue(m_cc_email_addresses, json[QString("CCEmailAddresses")]);
    m_cc_email_addresses_isSet = !json[QString("CCEmailAddresses")].isNull() && m_cc_email_addresses_isValid;

    m_charge_to_account_isValid = ::OpenAPI::fromJsonValue(m_charge_to_account, json[QString("ChargeToAccount")]);
    m_charge_to_account_isSet = !json[QString("ChargeToAccount")].isNull() && m_charge_to_account_isValid;

    m_deadline_isValid = ::OpenAPI::fromJsonValue(m_deadline, json[QString("Deadline")]);
    m_deadline_isSet = !json[QString("Deadline")].isNull() && m_deadline_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("Id")]);
    m_id_isSet = !json[QString("Id")].isNull() && m_id_isValid;

    m_locale_ids_isValid = ::OpenAPI::fromJsonValue(m_locale_ids, json[QString("LocaleIds")]);
    m_locale_ids_isSet = !json[QString("LocaleIds")].isNull() && m_locale_ids_isValid;

    m_notes_isValid = ::OpenAPI::fromJsonValue(m_notes, json[QString("Notes")]);
    m_notes_isSet = !json[QString("Notes")].isNull() && m_notes_isValid;

    m_questions_user_id_isValid = ::OpenAPI::fromJsonValue(m_questions_user_id, json[QString("QuestionsUserId")]);
    m_questions_user_id_isSet = !json[QString("QuestionsUserId")].isNull() && m_questions_user_id_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("State")]);
    m_state_isSet = !json[QString("State")].isNull() && m_state_isValid;

    m_submitted_by_isValid = ::OpenAPI::fromJsonValue(m_submitted_by, json[QString("SubmittedBy")]);
    m_submitted_by_isSet = !json[QString("SubmittedBy")].isNull() && m_submitted_by_isValid;

    m_translator_email_isValid = ::OpenAPI::fromJsonValue(m_translator_email, json[QString("TranslatorEmail")]);
    m_translator_email_isSet = !json[QString("TranslatorEmail")].isNull() && m_translator_email_isValid;

    m_translator_name_isValid = ::OpenAPI::fromJsonValue(m_translator_name, json[QString("TranslatorName")]);
    m_translator_name_isSet = !json[QString("TranslatorName")].isNull() && m_translator_name_isValid;
}

QString OAIGlobalResources_Shared_Models_TranslationRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGlobalResources_Shared_Models_TranslationRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_approval_user_id_isSet) {
        obj.insert(QString("ApprovalUserId"), ::OpenAPI::toJsonValue(m_approval_user_id));
    }
    if (m_cc_email_addresses.size() > 0) {
        obj.insert(QString("CCEmailAddresses"), ::OpenAPI::toJsonValue(m_cc_email_addresses));
    }
    if (m_charge_to_account_isSet) {
        obj.insert(QString("ChargeToAccount"), ::OpenAPI::toJsonValue(m_charge_to_account));
    }
    if (m_deadline_isSet) {
        obj.insert(QString("Deadline"), ::OpenAPI::toJsonValue(m_deadline));
    }
    if (m_id_isSet) {
        obj.insert(QString("Id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_locale_ids.size() > 0) {
        obj.insert(QString("LocaleIds"), ::OpenAPI::toJsonValue(m_locale_ids));
    }
    if (m_notes_isSet) {
        obj.insert(QString("Notes"), ::OpenAPI::toJsonValue(m_notes));
    }
    if (m_questions_user_id_isSet) {
        obj.insert(QString("QuestionsUserId"), ::OpenAPI::toJsonValue(m_questions_user_id));
    }
    if (m_state_isSet) {
        obj.insert(QString("State"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_submitted_by_isSet) {
        obj.insert(QString("SubmittedBy"), ::OpenAPI::toJsonValue(m_submitted_by));
    }
    if (m_translator_email_isSet) {
        obj.insert(QString("TranslatorEmail"), ::OpenAPI::toJsonValue(m_translator_email));
    }
    if (m_translator_name_isSet) {
        obj.insert(QString("TranslatorName"), ::OpenAPI::toJsonValue(m_translator_name));
    }
    return obj;
}

qint32 OAIGlobalResources_Shared_Models_TranslationRequest::getApprovalUserId() const {
    return m_approval_user_id;
}
void OAIGlobalResources_Shared_Models_TranslationRequest::setApprovalUserId(const qint32 &approval_user_id) {
    m_approval_user_id = approval_user_id;
    m_approval_user_id_isSet = true;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_approval_user_id_Set() const{
    return m_approval_user_id_isSet;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_approval_user_id_Valid() const{
    return m_approval_user_id_isValid;
}

QList<QString> OAIGlobalResources_Shared_Models_TranslationRequest::getCcEmailAddresses() const {
    return m_cc_email_addresses;
}
void OAIGlobalResources_Shared_Models_TranslationRequest::setCcEmailAddresses(const QList<QString> &cc_email_addresses) {
    m_cc_email_addresses = cc_email_addresses;
    m_cc_email_addresses_isSet = true;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_cc_email_addresses_Set() const{
    return m_cc_email_addresses_isSet;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_cc_email_addresses_Valid() const{
    return m_cc_email_addresses_isValid;
}

QString OAIGlobalResources_Shared_Models_TranslationRequest::getChargeToAccount() const {
    return m_charge_to_account;
}
void OAIGlobalResources_Shared_Models_TranslationRequest::setChargeToAccount(const QString &charge_to_account) {
    m_charge_to_account = charge_to_account;
    m_charge_to_account_isSet = true;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_charge_to_account_Set() const{
    return m_charge_to_account_isSet;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_charge_to_account_Valid() const{
    return m_charge_to_account_isValid;
}

QDateTime OAIGlobalResources_Shared_Models_TranslationRequest::getDeadline() const {
    return m_deadline;
}
void OAIGlobalResources_Shared_Models_TranslationRequest::setDeadline(const QDateTime &deadline) {
    m_deadline = deadline;
    m_deadline_isSet = true;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_deadline_Set() const{
    return m_deadline_isSet;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_deadline_Valid() const{
    return m_deadline_isValid;
}

qint32 OAIGlobalResources_Shared_Models_TranslationRequest::getId() const {
    return m_id;
}
void OAIGlobalResources_Shared_Models_TranslationRequest::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_id_Set() const{
    return m_id_isSet;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_id_Valid() const{
    return m_id_isValid;
}

QList<qint32> OAIGlobalResources_Shared_Models_TranslationRequest::getLocaleIds() const {
    return m_locale_ids;
}
void OAIGlobalResources_Shared_Models_TranslationRequest::setLocaleIds(const QList<qint32> &locale_ids) {
    m_locale_ids = locale_ids;
    m_locale_ids_isSet = true;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_locale_ids_Set() const{
    return m_locale_ids_isSet;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_locale_ids_Valid() const{
    return m_locale_ids_isValid;
}

QString OAIGlobalResources_Shared_Models_TranslationRequest::getNotes() const {
    return m_notes;
}
void OAIGlobalResources_Shared_Models_TranslationRequest::setNotes(const QString &notes) {
    m_notes = notes;
    m_notes_isSet = true;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_notes_Set() const{
    return m_notes_isSet;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_notes_Valid() const{
    return m_notes_isValid;
}

qint32 OAIGlobalResources_Shared_Models_TranslationRequest::getQuestionsUserId() const {
    return m_questions_user_id;
}
void OAIGlobalResources_Shared_Models_TranslationRequest::setQuestionsUserId(const qint32 &questions_user_id) {
    m_questions_user_id = questions_user_id;
    m_questions_user_id_isSet = true;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_questions_user_id_Set() const{
    return m_questions_user_id_isSet;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_questions_user_id_Valid() const{
    return m_questions_user_id_isValid;
}

QString OAIGlobalResources_Shared_Models_TranslationRequest::getState() const {
    return m_state;
}
void OAIGlobalResources_Shared_Models_TranslationRequest::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_state_Set() const{
    return m_state_isSet;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_state_Valid() const{
    return m_state_isValid;
}

qint32 OAIGlobalResources_Shared_Models_TranslationRequest::getSubmittedBy() const {
    return m_submitted_by;
}
void OAIGlobalResources_Shared_Models_TranslationRequest::setSubmittedBy(const qint32 &submitted_by) {
    m_submitted_by = submitted_by;
    m_submitted_by_isSet = true;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_submitted_by_Set() const{
    return m_submitted_by_isSet;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_submitted_by_Valid() const{
    return m_submitted_by_isValid;
}

QString OAIGlobalResources_Shared_Models_TranslationRequest::getTranslatorEmail() const {
    return m_translator_email;
}
void OAIGlobalResources_Shared_Models_TranslationRequest::setTranslatorEmail(const QString &translator_email) {
    m_translator_email = translator_email;
    m_translator_email_isSet = true;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_translator_email_Set() const{
    return m_translator_email_isSet;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_translator_email_Valid() const{
    return m_translator_email_isValid;
}

QString OAIGlobalResources_Shared_Models_TranslationRequest::getTranslatorName() const {
    return m_translator_name;
}
void OAIGlobalResources_Shared_Models_TranslationRequest::setTranslatorName(const QString &translator_name) {
    m_translator_name = translator_name;
    m_translator_name_isSet = true;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_translator_name_Set() const{
    return m_translator_name_isSet;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::is_translator_name_Valid() const{
    return m_translator_name_isValid;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_approval_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_cc_email_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_charge_to_account_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deadline_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_locale_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_notes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_questions_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_submitted_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_translator_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_translator_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGlobalResources_Shared_Models_TranslationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_cc_email_addresses_isValid && m_charge_to_account_isValid && m_deadline_isValid && m_locale_ids_isValid && m_notes_isValid && m_state_isValid && true;
}

} // namespace OpenAPI
