/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSystem_Models_UpdateGroupSubscription.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSystem_Models_UpdateGroupSubscription::OAIUpdateSystem_Models_UpdateGroupSubscription(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSystem_Models_UpdateGroupSubscription::OAIUpdateSystem_Models_UpdateGroupSubscription() {
    this->initializeModel();
}

OAIUpdateSystem_Models_UpdateGroupSubscription::~OAIUpdateSystem_Models_UpdateGroupSubscription() {}

void OAIUpdateSystem_Models_UpdateGroupSubscription::initializeModel() {

    m_client_id_isSet = false;
    m_client_id_isValid = false;

    m_include_isSet = false;
    m_include_isValid = false;

    m_package_type_id_isSet = false;
    m_package_type_id_isValid = false;

    m_update_group_id_isSet = false;
    m_update_group_id_isValid = false;

    m_update_group_subscription_id_isSet = false;
    m_update_group_subscription_id_isValid = false;
}

void OAIUpdateSystem_Models_UpdateGroupSubscription::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSystem_Models_UpdateGroupSubscription::fromJsonObject(QJsonObject json) {

    m_client_id_isValid = ::OpenAPI::fromJsonValue(m_client_id, json[QString("ClientID")]);
    m_client_id_isSet = !json[QString("ClientID")].isNull() && m_client_id_isValid;

    m_include_isValid = ::OpenAPI::fromJsonValue(m_include, json[QString("Include")]);
    m_include_isSet = !json[QString("Include")].isNull() && m_include_isValid;

    m_package_type_id_isValid = ::OpenAPI::fromJsonValue(m_package_type_id, json[QString("PackageTypeID")]);
    m_package_type_id_isSet = !json[QString("PackageTypeID")].isNull() && m_package_type_id_isValid;

    m_update_group_id_isValid = ::OpenAPI::fromJsonValue(m_update_group_id, json[QString("UpdateGroupID")]);
    m_update_group_id_isSet = !json[QString("UpdateGroupID")].isNull() && m_update_group_id_isValid;

    m_update_group_subscription_id_isValid = ::OpenAPI::fromJsonValue(m_update_group_subscription_id, json[QString("UpdateGroupSubscriptionID")]);
    m_update_group_subscription_id_isSet = !json[QString("UpdateGroupSubscriptionID")].isNull() && m_update_group_subscription_id_isValid;
}

QString OAIUpdateSystem_Models_UpdateGroupSubscription::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSystem_Models_UpdateGroupSubscription::asJsonObject() const {
    QJsonObject obj;
    if (m_client_id_isSet) {
        obj.insert(QString("ClientID"), ::OpenAPI::toJsonValue(m_client_id));
    }
    if (m_include_isSet) {
        obj.insert(QString("Include"), ::OpenAPI::toJsonValue(m_include));
    }
    if (m_package_type_id_isSet) {
        obj.insert(QString("PackageTypeID"), ::OpenAPI::toJsonValue(m_package_type_id));
    }
    if (m_update_group_id_isSet) {
        obj.insert(QString("UpdateGroupID"), ::OpenAPI::toJsonValue(m_update_group_id));
    }
    if (m_update_group_subscription_id_isSet) {
        obj.insert(QString("UpdateGroupSubscriptionID"), ::OpenAPI::toJsonValue(m_update_group_subscription_id));
    }
    return obj;
}

QString OAIUpdateSystem_Models_UpdateGroupSubscription::getClientId() const {
    return m_client_id;
}
void OAIUpdateSystem_Models_UpdateGroupSubscription::setClientId(const QString &client_id) {
    m_client_id = client_id;
    m_client_id_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroupSubscription::is_client_id_Set() const{
    return m_client_id_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroupSubscription::is_client_id_Valid() const{
    return m_client_id_isValid;
}

bool OAIUpdateSystem_Models_UpdateGroupSubscription::isInclude() const {
    return m_include;
}
void OAIUpdateSystem_Models_UpdateGroupSubscription::setInclude(const bool &include) {
    m_include = include;
    m_include_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroupSubscription::is_include_Set() const{
    return m_include_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroupSubscription::is_include_Valid() const{
    return m_include_isValid;
}

QString OAIUpdateSystem_Models_UpdateGroupSubscription::getPackageTypeId() const {
    return m_package_type_id;
}
void OAIUpdateSystem_Models_UpdateGroupSubscription::setPackageTypeId(const QString &package_type_id) {
    m_package_type_id = package_type_id;
    m_package_type_id_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroupSubscription::is_package_type_id_Set() const{
    return m_package_type_id_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroupSubscription::is_package_type_id_Valid() const{
    return m_package_type_id_isValid;
}

QString OAIUpdateSystem_Models_UpdateGroupSubscription::getUpdateGroupId() const {
    return m_update_group_id;
}
void OAIUpdateSystem_Models_UpdateGroupSubscription::setUpdateGroupId(const QString &update_group_id) {
    m_update_group_id = update_group_id;
    m_update_group_id_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroupSubscription::is_update_group_id_Set() const{
    return m_update_group_id_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroupSubscription::is_update_group_id_Valid() const{
    return m_update_group_id_isValid;
}

qint32 OAIUpdateSystem_Models_UpdateGroupSubscription::getUpdateGroupSubscriptionId() const {
    return m_update_group_subscription_id;
}
void OAIUpdateSystem_Models_UpdateGroupSubscription::setUpdateGroupSubscriptionId(const qint32 &update_group_subscription_id) {
    m_update_group_subscription_id = update_group_subscription_id;
    m_update_group_subscription_id_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroupSubscription::is_update_group_subscription_id_Set() const{
    return m_update_group_subscription_id_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroupSubscription::is_update_group_subscription_id_Valid() const{
    return m_update_group_subscription_id_isValid;
}

bool OAIUpdateSystem_Models_UpdateGroupSubscription::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_include_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_package_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_group_subscription_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSystem_Models_UpdateGroupSubscription::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_client_id_isValid && m_include_isValid && m_package_type_id_isValid && m_update_group_id_isValid && true;
}

} // namespace OpenAPI
