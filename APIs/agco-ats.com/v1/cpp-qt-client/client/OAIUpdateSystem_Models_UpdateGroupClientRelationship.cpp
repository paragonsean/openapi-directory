/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSystem_Models_UpdateGroupClientRelationship.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSystem_Models_UpdateGroupClientRelationship::OAIUpdateSystem_Models_UpdateGroupClientRelationship(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSystem_Models_UpdateGroupClientRelationship::OAIUpdateSystem_Models_UpdateGroupClientRelationship() {
    this->initializeModel();
}

OAIUpdateSystem_Models_UpdateGroupClientRelationship::~OAIUpdateSystem_Models_UpdateGroupClientRelationship() {}

void OAIUpdateSystem_Models_UpdateGroupClientRelationship::initializeModel() {

    m_active_isSet = false;
    m_active_isValid = false;

    m_client_id_isSet = false;
    m_client_id_isValid = false;

    m_last_checkin_isSet = false;
    m_last_checkin_isValid = false;

    m_relationship_id_isSet = false;
    m_relationship_id_isValid = false;

    m_update_group_id_isSet = false;
    m_update_group_id_isValid = false;
}

void OAIUpdateSystem_Models_UpdateGroupClientRelationship::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSystem_Models_UpdateGroupClientRelationship::fromJsonObject(QJsonObject json) {

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("Active")]);
    m_active_isSet = !json[QString("Active")].isNull() && m_active_isValid;

    m_client_id_isValid = ::OpenAPI::fromJsonValue(m_client_id, json[QString("ClientID")]);
    m_client_id_isSet = !json[QString("ClientID")].isNull() && m_client_id_isValid;

    m_last_checkin_isValid = ::OpenAPI::fromJsonValue(m_last_checkin, json[QString("LastCheckin")]);
    m_last_checkin_isSet = !json[QString("LastCheckin")].isNull() && m_last_checkin_isValid;

    m_relationship_id_isValid = ::OpenAPI::fromJsonValue(m_relationship_id, json[QString("RelationshipID")]);
    m_relationship_id_isSet = !json[QString("RelationshipID")].isNull() && m_relationship_id_isValid;

    m_update_group_id_isValid = ::OpenAPI::fromJsonValue(m_update_group_id, json[QString("UpdateGroupID")]);
    m_update_group_id_isSet = !json[QString("UpdateGroupID")].isNull() && m_update_group_id_isValid;
}

QString OAIUpdateSystem_Models_UpdateGroupClientRelationship::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSystem_Models_UpdateGroupClientRelationship::asJsonObject() const {
    QJsonObject obj;
    if (m_active_isSet) {
        obj.insert(QString("Active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_client_id_isSet) {
        obj.insert(QString("ClientID"), ::OpenAPI::toJsonValue(m_client_id));
    }
    if (m_last_checkin_isSet) {
        obj.insert(QString("LastCheckin"), ::OpenAPI::toJsonValue(m_last_checkin));
    }
    if (m_relationship_id_isSet) {
        obj.insert(QString("RelationshipID"), ::OpenAPI::toJsonValue(m_relationship_id));
    }
    if (m_update_group_id_isSet) {
        obj.insert(QString("UpdateGroupID"), ::OpenAPI::toJsonValue(m_update_group_id));
    }
    return obj;
}

bool OAIUpdateSystem_Models_UpdateGroupClientRelationship::isActive() const {
    return m_active;
}
void OAIUpdateSystem_Models_UpdateGroupClientRelationship::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroupClientRelationship::is_active_Set() const{
    return m_active_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroupClientRelationship::is_active_Valid() const{
    return m_active_isValid;
}

QString OAIUpdateSystem_Models_UpdateGroupClientRelationship::getClientId() const {
    return m_client_id;
}
void OAIUpdateSystem_Models_UpdateGroupClientRelationship::setClientId(const QString &client_id) {
    m_client_id = client_id;
    m_client_id_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroupClientRelationship::is_client_id_Set() const{
    return m_client_id_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroupClientRelationship::is_client_id_Valid() const{
    return m_client_id_isValid;
}

QDateTime OAIUpdateSystem_Models_UpdateGroupClientRelationship::getLastCheckin() const {
    return m_last_checkin;
}
void OAIUpdateSystem_Models_UpdateGroupClientRelationship::setLastCheckin(const QDateTime &last_checkin) {
    m_last_checkin = last_checkin;
    m_last_checkin_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroupClientRelationship::is_last_checkin_Set() const{
    return m_last_checkin_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroupClientRelationship::is_last_checkin_Valid() const{
    return m_last_checkin_isValid;
}

QString OAIUpdateSystem_Models_UpdateGroupClientRelationship::getRelationshipId() const {
    return m_relationship_id;
}
void OAIUpdateSystem_Models_UpdateGroupClientRelationship::setRelationshipId(const QString &relationship_id) {
    m_relationship_id = relationship_id;
    m_relationship_id_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroupClientRelationship::is_relationship_id_Set() const{
    return m_relationship_id_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroupClientRelationship::is_relationship_id_Valid() const{
    return m_relationship_id_isValid;
}

QString OAIUpdateSystem_Models_UpdateGroupClientRelationship::getUpdateGroupId() const {
    return m_update_group_id;
}
void OAIUpdateSystem_Models_UpdateGroupClientRelationship::setUpdateGroupId(const QString &update_group_id) {
    m_update_group_id = update_group_id;
    m_update_group_id_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroupClientRelationship::is_update_group_id_Set() const{
    return m_update_group_id_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroupClientRelationship::is_update_group_id_Valid() const{
    return m_update_group_id_isValid;
}

bool OAIUpdateSystem_Models_UpdateGroupClientRelationship::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_client_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_checkin_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_relationship_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSystem_Models_UpdateGroupClientRelationship::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_client_id_isValid && m_update_group_id_isValid && true;
}

} // namespace OpenAPI
