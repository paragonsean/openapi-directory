/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBuildSystem_Shared_Interfaces_IActivityRun.h
 *
 * IActivityRun
 */

#ifndef OAIBuildSystem_Shared_Interfaces_IActivityRun_H
#define OAIBuildSystem_Shared_Interfaces_IActivityRun_H

#include <QJsonObject>

#include "OAIBuildSystem_Shared_Interfaces_IActivityRunStatus.h"
#include "OAIBuildSystem_Shared_Interfaces_IActivityStep.h"
#include "OAIBuildSystem_Shared_Interfaces_IParameterValue.h"
#include <QDateTime>
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBuildSystem_Shared_Interfaces_IParameterValue;
class OAIBuildSystem_Shared_Interfaces_IActivityRunStatus;
class OAIBuildSystem_Shared_Interfaces_IActivityStep;

class OAIBuildSystem_Shared_Interfaces_IActivityRun : public OAIObject {
public:
    OAIBuildSystem_Shared_Interfaces_IActivityRun();
    OAIBuildSystem_Shared_Interfaces_IActivityRun(QString json);
    ~OAIBuildSystem_Shared_Interfaces_IActivityRun() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getActivityRunId() const;
    void setActivityRunId(const qint32 &activity_run_id);
    bool is_activity_run_id_Set() const;
    bool is_activity_run_id_Valid() const;

    QDateTime getEndDate() const;
    void setEndDate(const QDateTime &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    qint32 getJobActivityId() const;
    void setJobActivityId(const qint32 &job_activity_id);
    bool is_job_activity_id_Set() const;
    bool is_job_activity_id_Valid() const;

    qint32 getJobRunId() const;
    void setJobRunId(const qint32 &job_run_id);
    bool is_job_run_id_Set() const;
    bool is_job_run_id_Valid() const;

    QList<OAIBuildSystem_Shared_Interfaces_IParameterValue> getParameters() const;
    void setParameters(const QList<OAIBuildSystem_Shared_Interfaces_IParameterValue> &parameters);
    bool is_parameters_Set() const;
    bool is_parameters_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    OAIBuildSystem_Shared_Interfaces_IActivityRunStatus getStatus() const;
    void setStatus(const OAIBuildSystem_Shared_Interfaces_IActivityRunStatus &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QList<OAIBuildSystem_Shared_Interfaces_IActivityStep> getSteps() const;
    void setSteps(const QList<OAIBuildSystem_Shared_Interfaces_IActivityStep> &steps);
    bool is_steps_Set() const;
    bool is_steps_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_activity_run_id;
    bool m_activity_run_id_isSet;
    bool m_activity_run_id_isValid;

    QDateTime m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    qint32 m_job_activity_id;
    bool m_job_activity_id_isSet;
    bool m_job_activity_id_isValid;

    qint32 m_job_run_id;
    bool m_job_run_id_isSet;
    bool m_job_run_id_isValid;

    QList<OAIBuildSystem_Shared_Interfaces_IParameterValue> m_parameters;
    bool m_parameters_isSet;
    bool m_parameters_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    OAIBuildSystem_Shared_Interfaces_IActivityRunStatus m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QList<OAIBuildSystem_Shared_Interfaces_IActivityStep> m_steps;
    bool m_steps_isSet;
    bool m_steps_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBuildSystem_Shared_Interfaces_IActivityRun)

#endif // OAIBuildSystem_Shared_Interfaces_IActivityRun_H
