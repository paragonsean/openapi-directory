/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAPI_Models_AuthenticatedUser.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAPI_Models_AuthenticatedUser::OAIAPI_Models_AuthenticatedUser(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAPI_Models_AuthenticatedUser::OAIAPI_Models_AuthenticatedUser() {
    this->initializeModel();
}

OAIAPI_Models_AuthenticatedUser::~OAIAPI_Models_AuthenticatedUser() {}

void OAIAPI_Models_AuthenticatedUser::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;

    m_macid_isSet = false;
    m_macid_isValid = false;

    m_mac_token_isSet = false;
    m_mac_token_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_token_isSet = false;
    m_token_isValid = false;

    m_user_id_isSet = false;
    m_user_id_isValid = false;

    m_username_isSet = false;
    m_username_isValid = false;
}

void OAIAPI_Models_AuthenticatedUser::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAPI_Models_AuthenticatedUser::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("Email")]);
    m_email_isSet = !json[QString("Email")].isNull() && m_email_isValid;

    m_macid_isValid = ::OpenAPI::fromJsonValue(m_macid, json[QString("MACId")]);
    m_macid_isSet = !json[QString("MACId")].isNull() && m_macid_isValid;

    m_mac_token_isValid = ::OpenAPI::fromJsonValue(m_mac_token, json[QString("MACToken")]);
    m_mac_token_isSet = !json[QString("MACToken")].isNull() && m_mac_token_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_token_isValid = ::OpenAPI::fromJsonValue(m_token, json[QString("Token")]);
    m_token_isSet = !json[QString("Token")].isNull() && m_token_isValid;

    m_user_id_isValid = ::OpenAPI::fromJsonValue(m_user_id, json[QString("UserID")]);
    m_user_id_isSet = !json[QString("UserID")].isNull() && m_user_id_isValid;

    m_username_isValid = ::OpenAPI::fromJsonValue(m_username, json[QString("Username")]);
    m_username_isSet = !json[QString("Username")].isNull() && m_username_isValid;
}

QString OAIAPI_Models_AuthenticatedUser::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAPI_Models_AuthenticatedUser::asJsonObject() const {
    QJsonObject obj;
    if (m_email_isSet) {
        obj.insert(QString("Email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_macid_isSet) {
        obj.insert(QString("MACId"), ::OpenAPI::toJsonValue(m_macid));
    }
    if (m_mac_token_isSet) {
        obj.insert(QString("MACToken"), ::OpenAPI::toJsonValue(m_mac_token));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_token_isSet) {
        obj.insert(QString("Token"), ::OpenAPI::toJsonValue(m_token));
    }
    if (m_user_id_isSet) {
        obj.insert(QString("UserID"), ::OpenAPI::toJsonValue(m_user_id));
    }
    if (m_username_isSet) {
        obj.insert(QString("Username"), ::OpenAPI::toJsonValue(m_username));
    }
    return obj;
}

QString OAIAPI_Models_AuthenticatedUser::getEmail() const {
    return m_email;
}
void OAIAPI_Models_AuthenticatedUser::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIAPI_Models_AuthenticatedUser::is_email_Set() const{
    return m_email_isSet;
}

bool OAIAPI_Models_AuthenticatedUser::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIAPI_Models_AuthenticatedUser::getMacid() const {
    return m_macid;
}
void OAIAPI_Models_AuthenticatedUser::setMacid(const QString &macid) {
    m_macid = macid;
    m_macid_isSet = true;
}

bool OAIAPI_Models_AuthenticatedUser::is_macid_Set() const{
    return m_macid_isSet;
}

bool OAIAPI_Models_AuthenticatedUser::is_macid_Valid() const{
    return m_macid_isValid;
}

QString OAIAPI_Models_AuthenticatedUser::getMacToken() const {
    return m_mac_token;
}
void OAIAPI_Models_AuthenticatedUser::setMacToken(const QString &mac_token) {
    m_mac_token = mac_token;
    m_mac_token_isSet = true;
}

bool OAIAPI_Models_AuthenticatedUser::is_mac_token_Set() const{
    return m_mac_token_isSet;
}

bool OAIAPI_Models_AuthenticatedUser::is_mac_token_Valid() const{
    return m_mac_token_isValid;
}

QString OAIAPI_Models_AuthenticatedUser::getName() const {
    return m_name;
}
void OAIAPI_Models_AuthenticatedUser::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIAPI_Models_AuthenticatedUser::is_name_Set() const{
    return m_name_isSet;
}

bool OAIAPI_Models_AuthenticatedUser::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIAPI_Models_AuthenticatedUser::getToken() const {
    return m_token;
}
void OAIAPI_Models_AuthenticatedUser::setToken(const QString &token) {
    m_token = token;
    m_token_isSet = true;
}

bool OAIAPI_Models_AuthenticatedUser::is_token_Set() const{
    return m_token_isSet;
}

bool OAIAPI_Models_AuthenticatedUser::is_token_Valid() const{
    return m_token_isValid;
}

qint32 OAIAPI_Models_AuthenticatedUser::getUserId() const {
    return m_user_id;
}
void OAIAPI_Models_AuthenticatedUser::setUserId(const qint32 &user_id) {
    m_user_id = user_id;
    m_user_id_isSet = true;
}

bool OAIAPI_Models_AuthenticatedUser::is_user_id_Set() const{
    return m_user_id_isSet;
}

bool OAIAPI_Models_AuthenticatedUser::is_user_id_Valid() const{
    return m_user_id_isValid;
}

QString OAIAPI_Models_AuthenticatedUser::getUsername() const {
    return m_username;
}
void OAIAPI_Models_AuthenticatedUser::setUsername(const QString &username) {
    m_username = username;
    m_username_isSet = true;
}

bool OAIAPI_Models_AuthenticatedUser::is_username_Set() const{
    return m_username_isSet;
}

bool OAIAPI_Models_AuthenticatedUser::is_username_Valid() const{
    return m_username_isValid;
}

bool OAIAPI_Models_AuthenticatedUser::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_macid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mac_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_token_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_username_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAPI_Models_AuthenticatedUser::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
