/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSystem_Models_PackageType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSystem_Models_PackageType::OAIUpdateSystem_Models_PackageType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSystem_Models_PackageType::OAIUpdateSystem_Models_PackageType() {
    this->initializeModel();
}

OAIUpdateSystem_Models_PackageType::~OAIUpdateSystem_Models_PackageType() {}

void OAIUpdateSystem_Models_PackageType::initializeModel() {

    m_attribute_isSet = false;
    m_attribute_isValid = false;

    m_category_isSet = false;
    m_category_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_icon_isSet = false;
    m_icon_isValid = false;

    m_inventory_frequency_isSet = false;
    m_inventory_frequency_isValid = false;

    m_inventory_package_isSet = false;
    m_inventory_package_isValid = false;

    m_localized_description_isSet = false;
    m_localized_description_isValid = false;

    m_localized_name_isSet = false;
    m_localized_name_isValid = false;

    m_max_delta_packages_isSet = false;
    m_max_delta_packages_isValid = false;

    m_package_type_id_isSet = false;
    m_package_type_id_isValid = false;
}

void OAIUpdateSystem_Models_PackageType::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSystem_Models_PackageType::fromJsonObject(QJsonObject json) {

    m_attribute_isValid = ::OpenAPI::fromJsonValue(m_attribute, json[QString("Attribute")]);
    m_attribute_isSet = !json[QString("Attribute")].isNull() && m_attribute_isValid;

    m_category_isValid = ::OpenAPI::fromJsonValue(m_category, json[QString("Category")]);
    m_category_isSet = !json[QString("Category")].isNull() && m_category_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_icon_isValid = ::OpenAPI::fromJsonValue(m_icon, json[QString("Icon")]);
    m_icon_isSet = !json[QString("Icon")].isNull() && m_icon_isValid;

    m_inventory_frequency_isValid = ::OpenAPI::fromJsonValue(m_inventory_frequency, json[QString("InventoryFrequency")]);
    m_inventory_frequency_isSet = !json[QString("InventoryFrequency")].isNull() && m_inventory_frequency_isValid;

    m_inventory_package_isValid = ::OpenAPI::fromJsonValue(m_inventory_package, json[QString("InventoryPackage")]);
    m_inventory_package_isSet = !json[QString("InventoryPackage")].isNull() && m_inventory_package_isValid;

    m_localized_description_isValid = ::OpenAPI::fromJsonValue(m_localized_description, json[QString("LocalizedDescription")]);
    m_localized_description_isSet = !json[QString("LocalizedDescription")].isNull() && m_localized_description_isValid;

    m_localized_name_isValid = ::OpenAPI::fromJsonValue(m_localized_name, json[QString("LocalizedName")]);
    m_localized_name_isSet = !json[QString("LocalizedName")].isNull() && m_localized_name_isValid;

    m_max_delta_packages_isValid = ::OpenAPI::fromJsonValue(m_max_delta_packages, json[QString("MaxDeltaPackages")]);
    m_max_delta_packages_isSet = !json[QString("MaxDeltaPackages")].isNull() && m_max_delta_packages_isValid;

    m_package_type_id_isValid = ::OpenAPI::fromJsonValue(m_package_type_id, json[QString("PackageTypeID")]);
    m_package_type_id_isSet = !json[QString("PackageTypeID")].isNull() && m_package_type_id_isValid;
}

QString OAIUpdateSystem_Models_PackageType::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSystem_Models_PackageType::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_isSet) {
        obj.insert(QString("Attribute"), ::OpenAPI::toJsonValue(m_attribute));
    }
    if (m_category_isSet) {
        obj.insert(QString("Category"), ::OpenAPI::toJsonValue(m_category));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_icon_isSet) {
        obj.insert(QString("Icon"), ::OpenAPI::toJsonValue(m_icon));
    }
    if (m_inventory_frequency_isSet) {
        obj.insert(QString("InventoryFrequency"), ::OpenAPI::toJsonValue(m_inventory_frequency));
    }
    if (m_inventory_package_isSet) {
        obj.insert(QString("InventoryPackage"), ::OpenAPI::toJsonValue(m_inventory_package));
    }
    if (m_localized_description_isSet) {
        obj.insert(QString("LocalizedDescription"), ::OpenAPI::toJsonValue(m_localized_description));
    }
    if (m_localized_name_isSet) {
        obj.insert(QString("LocalizedName"), ::OpenAPI::toJsonValue(m_localized_name));
    }
    if (m_max_delta_packages_isSet) {
        obj.insert(QString("MaxDeltaPackages"), ::OpenAPI::toJsonValue(m_max_delta_packages));
    }
    if (m_package_type_id_isSet) {
        obj.insert(QString("PackageTypeID"), ::OpenAPI::toJsonValue(m_package_type_id));
    }
    return obj;
}

QString OAIUpdateSystem_Models_PackageType::getAttribute() const {
    return m_attribute;
}
void OAIUpdateSystem_Models_PackageType::setAttribute(const QString &attribute) {
    m_attribute = attribute;
    m_attribute_isSet = true;
}

bool OAIUpdateSystem_Models_PackageType::is_attribute_Set() const{
    return m_attribute_isSet;
}

bool OAIUpdateSystem_Models_PackageType::is_attribute_Valid() const{
    return m_attribute_isValid;
}

QString OAIUpdateSystem_Models_PackageType::getCategory() const {
    return m_category;
}
void OAIUpdateSystem_Models_PackageType::setCategory(const QString &category) {
    m_category = category;
    m_category_isSet = true;
}

bool OAIUpdateSystem_Models_PackageType::is_category_Set() const{
    return m_category_isSet;
}

bool OAIUpdateSystem_Models_PackageType::is_category_Valid() const{
    return m_category_isValid;
}

QString OAIUpdateSystem_Models_PackageType::getDescription() const {
    return m_description;
}
void OAIUpdateSystem_Models_PackageType::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateSystem_Models_PackageType::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateSystem_Models_PackageType::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIUpdateSystem_Models_PackageType::getIcon() const {
    return m_icon;
}
void OAIUpdateSystem_Models_PackageType::setIcon(const QString &icon) {
    m_icon = icon;
    m_icon_isSet = true;
}

bool OAIUpdateSystem_Models_PackageType::is_icon_Set() const{
    return m_icon_isSet;
}

bool OAIUpdateSystem_Models_PackageType::is_icon_Valid() const{
    return m_icon_isValid;
}

qint32 OAIUpdateSystem_Models_PackageType::getInventoryFrequency() const {
    return m_inventory_frequency;
}
void OAIUpdateSystem_Models_PackageType::setInventoryFrequency(const qint32 &inventory_frequency) {
    m_inventory_frequency = inventory_frequency;
    m_inventory_frequency_isSet = true;
}

bool OAIUpdateSystem_Models_PackageType::is_inventory_frequency_Set() const{
    return m_inventory_frequency_isSet;
}

bool OAIUpdateSystem_Models_PackageType::is_inventory_frequency_Valid() const{
    return m_inventory_frequency_isValid;
}

QString OAIUpdateSystem_Models_PackageType::getInventoryPackage() const {
    return m_inventory_package;
}
void OAIUpdateSystem_Models_PackageType::setInventoryPackage(const QString &inventory_package) {
    m_inventory_package = inventory_package;
    m_inventory_package_isSet = true;
}

bool OAIUpdateSystem_Models_PackageType::is_inventory_package_Set() const{
    return m_inventory_package_isSet;
}

bool OAIUpdateSystem_Models_PackageType::is_inventory_package_Valid() const{
    return m_inventory_package_isValid;
}

QString OAIUpdateSystem_Models_PackageType::getLocalizedDescription() const {
    return m_localized_description;
}
void OAIUpdateSystem_Models_PackageType::setLocalizedDescription(const QString &localized_description) {
    m_localized_description = localized_description;
    m_localized_description_isSet = true;
}

bool OAIUpdateSystem_Models_PackageType::is_localized_description_Set() const{
    return m_localized_description_isSet;
}

bool OAIUpdateSystem_Models_PackageType::is_localized_description_Valid() const{
    return m_localized_description_isValid;
}

QString OAIUpdateSystem_Models_PackageType::getLocalizedName() const {
    return m_localized_name;
}
void OAIUpdateSystem_Models_PackageType::setLocalizedName(const QString &localized_name) {
    m_localized_name = localized_name;
    m_localized_name_isSet = true;
}

bool OAIUpdateSystem_Models_PackageType::is_localized_name_Set() const{
    return m_localized_name_isSet;
}

bool OAIUpdateSystem_Models_PackageType::is_localized_name_Valid() const{
    return m_localized_name_isValid;
}

qint32 OAIUpdateSystem_Models_PackageType::getMaxDeltaPackages() const {
    return m_max_delta_packages;
}
void OAIUpdateSystem_Models_PackageType::setMaxDeltaPackages(const qint32 &max_delta_packages) {
    m_max_delta_packages = max_delta_packages;
    m_max_delta_packages_isSet = true;
}

bool OAIUpdateSystem_Models_PackageType::is_max_delta_packages_Set() const{
    return m_max_delta_packages_isSet;
}

bool OAIUpdateSystem_Models_PackageType::is_max_delta_packages_Valid() const{
    return m_max_delta_packages_isValid;
}

QString OAIUpdateSystem_Models_PackageType::getPackageTypeId() const {
    return m_package_type_id;
}
void OAIUpdateSystem_Models_PackageType::setPackageTypeId(const QString &package_type_id) {
    m_package_type_id = package_type_id;
    m_package_type_id_isSet = true;
}

bool OAIUpdateSystem_Models_PackageType::is_package_type_id_Set() const{
    return m_package_type_id_isSet;
}

bool OAIUpdateSystem_Models_PackageType::is_package_type_id_Valid() const{
    return m_package_type_id_isValid;
}

bool OAIUpdateSystem_Models_PackageType::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_category_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_icon_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inventory_frequency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inventory_package_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_localized_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_localized_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_max_delta_packages_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_package_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSystem_Models_PackageType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_description_isValid && true;
}

} // namespace OpenAPI
