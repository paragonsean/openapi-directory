/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDealerDB_Models_LicenseActivationUpdate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDealerDB_Models_LicenseActivationUpdate::OAIDealerDB_Models_LicenseActivationUpdate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDealerDB_Models_LicenseActivationUpdate::OAIDealerDB_Models_LicenseActivationUpdate() {
    this->initializeModel();
}

OAIDealerDB_Models_LicenseActivationUpdate::~OAIDealerDB_Models_LicenseActivationUpdate() {}

void OAIDealerDB_Models_LicenseActivationUpdate::initializeModel() {

    m_license_version_isSet = false;
    m_license_version_isValid = false;

    m_system_info_isSet = false;
    m_system_info_isValid = false;
}

void OAIDealerDB_Models_LicenseActivationUpdate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDealerDB_Models_LicenseActivationUpdate::fromJsonObject(QJsonObject json) {

    m_license_version_isValid = ::OpenAPI::fromJsonValue(m_license_version, json[QString("LicenseVersion")]);
    m_license_version_isSet = !json[QString("LicenseVersion")].isNull() && m_license_version_isValid;

    m_system_info_isValid = ::OpenAPI::fromJsonValue(m_system_info, json[QString("SystemInfo")]);
    m_system_info_isSet = !json[QString("SystemInfo")].isNull() && m_system_info_isValid;
}

QString OAIDealerDB_Models_LicenseActivationUpdate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDealerDB_Models_LicenseActivationUpdate::asJsonObject() const {
    QJsonObject obj;
    if (m_license_version_isSet) {
        obj.insert(QString("LicenseVersion"), ::OpenAPI::toJsonValue(m_license_version));
    }
    if (m_system_info_isSet) {
        obj.insert(QString("SystemInfo"), ::OpenAPI::toJsonValue(m_system_info));
    }
    return obj;
}

QString OAIDealerDB_Models_LicenseActivationUpdate::getLicenseVersion() const {
    return m_license_version;
}
void OAIDealerDB_Models_LicenseActivationUpdate::setLicenseVersion(const QString &license_version) {
    m_license_version = license_version;
    m_license_version_isSet = true;
}

bool OAIDealerDB_Models_LicenseActivationUpdate::is_license_version_Set() const{
    return m_license_version_isSet;
}

bool OAIDealerDB_Models_LicenseActivationUpdate::is_license_version_Valid() const{
    return m_license_version_isValid;
}

QString OAIDealerDB_Models_LicenseActivationUpdate::getSystemInfo() const {
    return m_system_info;
}
void OAIDealerDB_Models_LicenseActivationUpdate::setSystemInfo(const QString &system_info) {
    m_system_info = system_info;
    m_system_info_isSet = true;
}

bool OAIDealerDB_Models_LicenseActivationUpdate::is_system_info_Set() const{
    return m_system_info_isSet;
}

bool OAIDealerDB_Models_LicenseActivationUpdate::is_system_info_Valid() const{
    return m_system_info_isValid;
}

bool OAIDealerDB_Models_LicenseActivationUpdate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_license_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_system_info_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDealerDB_Models_LicenseActivationUpdate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_license_version_isValid && true;
}

} // namespace OpenAPI
