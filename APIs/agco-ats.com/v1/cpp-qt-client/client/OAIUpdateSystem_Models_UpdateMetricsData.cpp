/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSystem_Models_UpdateMetricsData.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSystem_Models_UpdateMetricsData::OAIUpdateSystem_Models_UpdateMetricsData(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSystem_Models_UpdateMetricsData::OAIUpdateSystem_Models_UpdateMetricsData() {
    this->initializeModel();
}

OAIUpdateSystem_Models_UpdateMetricsData::~OAIUpdateSystem_Models_UpdateMetricsData() {}

void OAIUpdateSystem_Models_UpdateMetricsData::initializeModel() {

    m_active_version_isSet = false;
    m_active_version_isValid = false;

    m_active_version_by_client_isSet = false;
    m_active_version_by_client_isValid = false;

    m_current_state_by_client_isSet = false;
    m_current_state_by_client_isValid = false;

    m_cut_off_date_isSet = false;
    m_cut_off_date_isValid = false;

    m_data_refreshed_isSet = false;
    m_data_refreshed_isValid = false;

    m_filtered_client_count_isSet = false;
    m_filtered_client_count_isValid = false;

    m_package_errors_isSet = false;
    m_package_errors_isValid = false;

    m_total_client_count_isSet = false;
    m_total_client_count_isValid = false;
}

void OAIUpdateSystem_Models_UpdateMetricsData::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSystem_Models_UpdateMetricsData::fromJsonObject(QJsonObject json) {

    m_active_version_isValid = ::OpenAPI::fromJsonValue(m_active_version, json[QString("ActiveVersion")]);
    m_active_version_isSet = !json[QString("ActiveVersion")].isNull() && m_active_version_isValid;

    m_active_version_by_client_isValid = ::OpenAPI::fromJsonValue(m_active_version_by_client, json[QString("ActiveVersionByClient")]);
    m_active_version_by_client_isSet = !json[QString("ActiveVersionByClient")].isNull() && m_active_version_by_client_isValid;

    m_current_state_by_client_isValid = ::OpenAPI::fromJsonValue(m_current_state_by_client, json[QString("CurrentStateByClient")]);
    m_current_state_by_client_isSet = !json[QString("CurrentStateByClient")].isNull() && m_current_state_by_client_isValid;

    m_cut_off_date_isValid = ::OpenAPI::fromJsonValue(m_cut_off_date, json[QString("CutOffDate")]);
    m_cut_off_date_isSet = !json[QString("CutOffDate")].isNull() && m_cut_off_date_isValid;

    m_data_refreshed_isValid = ::OpenAPI::fromJsonValue(m_data_refreshed, json[QString("DataRefreshed")]);
    m_data_refreshed_isSet = !json[QString("DataRefreshed")].isNull() && m_data_refreshed_isValid;

    m_filtered_client_count_isValid = ::OpenAPI::fromJsonValue(m_filtered_client_count, json[QString("FilteredClientCount")]);
    m_filtered_client_count_isSet = !json[QString("FilteredClientCount")].isNull() && m_filtered_client_count_isValid;

    m_package_errors_isValid = ::OpenAPI::fromJsonValue(m_package_errors, json[QString("PackageErrors")]);
    m_package_errors_isSet = !json[QString("PackageErrors")].isNull() && m_package_errors_isValid;

    m_total_client_count_isValid = ::OpenAPI::fromJsonValue(m_total_client_count, json[QString("TotalClientCount")]);
    m_total_client_count_isSet = !json[QString("TotalClientCount")].isNull() && m_total_client_count_isValid;
}

QString OAIUpdateSystem_Models_UpdateMetricsData::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSystem_Models_UpdateMetricsData::asJsonObject() const {
    QJsonObject obj;
    if (m_active_version_isSet) {
        obj.insert(QString("ActiveVersion"), ::OpenAPI::toJsonValue(m_active_version));
    }
    if (m_active_version_by_client.size() > 0) {
        obj.insert(QString("ActiveVersionByClient"), ::OpenAPI::toJsonValue(m_active_version_by_client));
    }
    if (m_current_state_by_client.size() > 0) {
        obj.insert(QString("CurrentStateByClient"), ::OpenAPI::toJsonValue(m_current_state_by_client));
    }
    if (m_cut_off_date_isSet) {
        obj.insert(QString("CutOffDate"), ::OpenAPI::toJsonValue(m_cut_off_date));
    }
    if (m_data_refreshed_isSet) {
        obj.insert(QString("DataRefreshed"), ::OpenAPI::toJsonValue(m_data_refreshed));
    }
    if (m_filtered_client_count_isSet) {
        obj.insert(QString("FilteredClientCount"), ::OpenAPI::toJsonValue(m_filtered_client_count));
    }
    if (m_package_errors.size() > 0) {
        obj.insert(QString("PackageErrors"), ::OpenAPI::toJsonValue(m_package_errors));
    }
    if (m_total_client_count_isSet) {
        obj.insert(QString("TotalClientCount"), ::OpenAPI::toJsonValue(m_total_client_count));
    }
    return obj;
}

QString OAIUpdateSystem_Models_UpdateMetricsData::getActiveVersion() const {
    return m_active_version;
}
void OAIUpdateSystem_Models_UpdateMetricsData::setActiveVersion(const QString &active_version) {
    m_active_version = active_version;
    m_active_version_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateMetricsData::is_active_version_Set() const{
    return m_active_version_isSet;
}

bool OAIUpdateSystem_Models_UpdateMetricsData::is_active_version_Valid() const{
    return m_active_version_isValid;
}

QList<OAIUpdateSystem_Models_UpdateMetricsData_ActiveVersionByClientRecord> OAIUpdateSystem_Models_UpdateMetricsData::getActiveVersionByClient() const {
    return m_active_version_by_client;
}
void OAIUpdateSystem_Models_UpdateMetricsData::setActiveVersionByClient(const QList<OAIUpdateSystem_Models_UpdateMetricsData_ActiveVersionByClientRecord> &active_version_by_client) {
    m_active_version_by_client = active_version_by_client;
    m_active_version_by_client_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateMetricsData::is_active_version_by_client_Set() const{
    return m_active_version_by_client_isSet;
}

bool OAIUpdateSystem_Models_UpdateMetricsData::is_active_version_by_client_Valid() const{
    return m_active_version_by_client_isValid;
}

QList<OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord> OAIUpdateSystem_Models_UpdateMetricsData::getCurrentStateByClient() const {
    return m_current_state_by_client;
}
void OAIUpdateSystem_Models_UpdateMetricsData::setCurrentStateByClient(const QList<OAIUpdateSystem_Models_UpdateMetricsData_CurrentStateByClientRecord> &current_state_by_client) {
    m_current_state_by_client = current_state_by_client;
    m_current_state_by_client_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateMetricsData::is_current_state_by_client_Set() const{
    return m_current_state_by_client_isSet;
}

bool OAIUpdateSystem_Models_UpdateMetricsData::is_current_state_by_client_Valid() const{
    return m_current_state_by_client_isValid;
}

QDateTime OAIUpdateSystem_Models_UpdateMetricsData::getCutOffDate() const {
    return m_cut_off_date;
}
void OAIUpdateSystem_Models_UpdateMetricsData::setCutOffDate(const QDateTime &cut_off_date) {
    m_cut_off_date = cut_off_date;
    m_cut_off_date_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateMetricsData::is_cut_off_date_Set() const{
    return m_cut_off_date_isSet;
}

bool OAIUpdateSystem_Models_UpdateMetricsData::is_cut_off_date_Valid() const{
    return m_cut_off_date_isValid;
}

QDateTime OAIUpdateSystem_Models_UpdateMetricsData::getDataRefreshed() const {
    return m_data_refreshed;
}
void OAIUpdateSystem_Models_UpdateMetricsData::setDataRefreshed(const QDateTime &data_refreshed) {
    m_data_refreshed = data_refreshed;
    m_data_refreshed_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateMetricsData::is_data_refreshed_Set() const{
    return m_data_refreshed_isSet;
}

bool OAIUpdateSystem_Models_UpdateMetricsData::is_data_refreshed_Valid() const{
    return m_data_refreshed_isValid;
}

qint32 OAIUpdateSystem_Models_UpdateMetricsData::getFilteredClientCount() const {
    return m_filtered_client_count;
}
void OAIUpdateSystem_Models_UpdateMetricsData::setFilteredClientCount(const qint32 &filtered_client_count) {
    m_filtered_client_count = filtered_client_count;
    m_filtered_client_count_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateMetricsData::is_filtered_client_count_Set() const{
    return m_filtered_client_count_isSet;
}

bool OAIUpdateSystem_Models_UpdateMetricsData::is_filtered_client_count_Valid() const{
    return m_filtered_client_count_isValid;
}

QList<OAIUpdateSystem_Models_UpdateMetricsData_PackageErrorsRecord> OAIUpdateSystem_Models_UpdateMetricsData::getPackageErrors() const {
    return m_package_errors;
}
void OAIUpdateSystem_Models_UpdateMetricsData::setPackageErrors(const QList<OAIUpdateSystem_Models_UpdateMetricsData_PackageErrorsRecord> &package_errors) {
    m_package_errors = package_errors;
    m_package_errors_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateMetricsData::is_package_errors_Set() const{
    return m_package_errors_isSet;
}

bool OAIUpdateSystem_Models_UpdateMetricsData::is_package_errors_Valid() const{
    return m_package_errors_isValid;
}

qint32 OAIUpdateSystem_Models_UpdateMetricsData::getTotalClientCount() const {
    return m_total_client_count;
}
void OAIUpdateSystem_Models_UpdateMetricsData::setTotalClientCount(const qint32 &total_client_count) {
    m_total_client_count = total_client_count;
    m_total_client_count_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateMetricsData::is_total_client_count_Set() const{
    return m_total_client_count_isSet;
}

bool OAIUpdateSystem_Models_UpdateMetricsData::is_total_client_count_Valid() const{
    return m_total_client_count_isValid;
}

bool OAIUpdateSystem_Models_UpdateMetricsData::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_active_version_by_client.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_current_state_by_client.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_cut_off_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_data_refreshed_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_filtered_client_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_package_errors.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_client_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSystem_Models_UpdateMetricsData::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
