/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAPI_Models_ApiError.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAPI_Models_ApiError::OAIAPI_Models_ApiError(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAPI_Models_ApiError::OAIAPI_Models_ApiError() {
    this->initializeModel();
}

OAIAPI_Models_ApiError::~OAIAPI_Models_ApiError() {}

void OAIAPI_Models_ApiError::initializeModel() {

    m_developer_message_isSet = false;
    m_developer_message_isValid = false;

    m_error_code_isSet = false;
    m_error_code_isValid = false;

    m_more_info_isSet = false;
    m_more_info_isValid = false;

    m_user_message_isSet = false;
    m_user_message_isValid = false;
}

void OAIAPI_Models_ApiError::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAPI_Models_ApiError::fromJsonObject(QJsonObject json) {

    m_developer_message_isValid = ::OpenAPI::fromJsonValue(m_developer_message, json[QString("DeveloperMessage")]);
    m_developer_message_isSet = !json[QString("DeveloperMessage")].isNull() && m_developer_message_isValid;

    m_error_code_isValid = ::OpenAPI::fromJsonValue(m_error_code, json[QString("ErrorCode")]);
    m_error_code_isSet = !json[QString("ErrorCode")].isNull() && m_error_code_isValid;

    m_more_info_isValid = ::OpenAPI::fromJsonValue(m_more_info, json[QString("MoreInfo")]);
    m_more_info_isSet = !json[QString("MoreInfo")].isNull() && m_more_info_isValid;

    m_user_message_isValid = ::OpenAPI::fromJsonValue(m_user_message, json[QString("UserMessage")]);
    m_user_message_isSet = !json[QString("UserMessage")].isNull() && m_user_message_isValid;
}

QString OAIAPI_Models_ApiError::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAPI_Models_ApiError::asJsonObject() const {
    QJsonObject obj;
    if (m_developer_message_isSet) {
        obj.insert(QString("DeveloperMessage"), ::OpenAPI::toJsonValue(m_developer_message));
    }
    if (m_error_code_isSet) {
        obj.insert(QString("ErrorCode"), ::OpenAPI::toJsonValue(m_error_code));
    }
    if (m_more_info_isSet) {
        obj.insert(QString("MoreInfo"), ::OpenAPI::toJsonValue(m_more_info));
    }
    if (m_user_message_isSet) {
        obj.insert(QString("UserMessage"), ::OpenAPI::toJsonValue(m_user_message));
    }
    return obj;
}

QString OAIAPI_Models_ApiError::getDeveloperMessage() const {
    return m_developer_message;
}
void OAIAPI_Models_ApiError::setDeveloperMessage(const QString &developer_message) {
    m_developer_message = developer_message;
    m_developer_message_isSet = true;
}

bool OAIAPI_Models_ApiError::is_developer_message_Set() const{
    return m_developer_message_isSet;
}

bool OAIAPI_Models_ApiError::is_developer_message_Valid() const{
    return m_developer_message_isValid;
}

qint32 OAIAPI_Models_ApiError::getErrorCode() const {
    return m_error_code;
}
void OAIAPI_Models_ApiError::setErrorCode(const qint32 &error_code) {
    m_error_code = error_code;
    m_error_code_isSet = true;
}

bool OAIAPI_Models_ApiError::is_error_code_Set() const{
    return m_error_code_isSet;
}

bool OAIAPI_Models_ApiError::is_error_code_Valid() const{
    return m_error_code_isValid;
}

QString OAIAPI_Models_ApiError::getMoreInfo() const {
    return m_more_info;
}
void OAIAPI_Models_ApiError::setMoreInfo(const QString &more_info) {
    m_more_info = more_info;
    m_more_info_isSet = true;
}

bool OAIAPI_Models_ApiError::is_more_info_Set() const{
    return m_more_info_isSet;
}

bool OAIAPI_Models_ApiError::is_more_info_Valid() const{
    return m_more_info_isValid;
}

QString OAIAPI_Models_ApiError::getUserMessage() const {
    return m_user_message;
}
void OAIAPI_Models_ApiError::setUserMessage(const QString &user_message) {
    m_user_message = user_message;
    m_user_message_isSet = true;
}

bool OAIAPI_Models_ApiError::is_user_message_Set() const{
    return m_user_message_isSet;
}

bool OAIAPI_Models_ApiError::is_user_message_Valid() const{
    return m_user_message_isValid;
}

bool OAIAPI_Models_ApiError::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_developer_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_error_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_more_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_user_message_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAPI_Models_ApiError::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
