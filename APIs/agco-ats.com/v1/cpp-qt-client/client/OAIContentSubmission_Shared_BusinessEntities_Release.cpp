/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContentSubmission_Shared_BusinessEntities_Release.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContentSubmission_Shared_BusinessEntities_Release::OAIContentSubmission_Shared_BusinessEntities_Release(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContentSubmission_Shared_BusinessEntities_Release::OAIContentSubmission_Shared_BusinessEntities_Release() {
    this->initializeModel();
}

OAIContentSubmission_Shared_BusinessEntities_Release::~OAIContentSubmission_Shared_BusinessEntities_Release() {}

void OAIContentSubmission_Shared_BusinessEntities_Release::initializeModel() {

    m_build_date_isSet = false;
    m_build_date_isValid = false;

    m_bundle_ids_isSet = false;
    m_bundle_ids_isValid = false;

    m_release_date_isSet = false;
    m_release_date_isValid = false;

    m_release_id_isSet = false;
    m_release_id_isValid = false;

    m_release_number_isSet = false;
    m_release_number_isValid = false;

    m_visible_isSet = false;
    m_visible_isValid = false;
}

void OAIContentSubmission_Shared_BusinessEntities_Release::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContentSubmission_Shared_BusinessEntities_Release::fromJsonObject(QJsonObject json) {

    m_build_date_isValid = ::OpenAPI::fromJsonValue(m_build_date, json[QString("BuildDate")]);
    m_build_date_isSet = !json[QString("BuildDate")].isNull() && m_build_date_isValid;

    m_bundle_ids_isValid = ::OpenAPI::fromJsonValue(m_bundle_ids, json[QString("BundleIDs")]);
    m_bundle_ids_isSet = !json[QString("BundleIDs")].isNull() && m_bundle_ids_isValid;

    m_release_date_isValid = ::OpenAPI::fromJsonValue(m_release_date, json[QString("ReleaseDate")]);
    m_release_date_isSet = !json[QString("ReleaseDate")].isNull() && m_release_date_isValid;

    m_release_id_isValid = ::OpenAPI::fromJsonValue(m_release_id, json[QString("ReleaseID")]);
    m_release_id_isSet = !json[QString("ReleaseID")].isNull() && m_release_id_isValid;

    m_release_number_isValid = ::OpenAPI::fromJsonValue(m_release_number, json[QString("ReleaseNumber")]);
    m_release_number_isSet = !json[QString("ReleaseNumber")].isNull() && m_release_number_isValid;

    m_visible_isValid = ::OpenAPI::fromJsonValue(m_visible, json[QString("Visible")]);
    m_visible_isSet = !json[QString("Visible")].isNull() && m_visible_isValid;
}

QString OAIContentSubmission_Shared_BusinessEntities_Release::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContentSubmission_Shared_BusinessEntities_Release::asJsonObject() const {
    QJsonObject obj;
    if (m_build_date_isSet) {
        obj.insert(QString("BuildDate"), ::OpenAPI::toJsonValue(m_build_date));
    }
    if (m_bundle_ids.size() > 0) {
        obj.insert(QString("BundleIDs"), ::OpenAPI::toJsonValue(m_bundle_ids));
    }
    if (m_release_date_isSet) {
        obj.insert(QString("ReleaseDate"), ::OpenAPI::toJsonValue(m_release_date));
    }
    if (m_release_id_isSet) {
        obj.insert(QString("ReleaseID"), ::OpenAPI::toJsonValue(m_release_id));
    }
    if (m_release_number_isSet) {
        obj.insert(QString("ReleaseNumber"), ::OpenAPI::toJsonValue(m_release_number));
    }
    if (m_visible_isSet) {
        obj.insert(QString("Visible"), ::OpenAPI::toJsonValue(m_visible));
    }
    return obj;
}

QDateTime OAIContentSubmission_Shared_BusinessEntities_Release::getBuildDate() const {
    return m_build_date;
}
void OAIContentSubmission_Shared_BusinessEntities_Release::setBuildDate(const QDateTime &build_date) {
    m_build_date = build_date;
    m_build_date_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_Release::is_build_date_Set() const{
    return m_build_date_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_Release::is_build_date_Valid() const{
    return m_build_date_isValid;
}

QList<QString> OAIContentSubmission_Shared_BusinessEntities_Release::getBundleIds() const {
    return m_bundle_ids;
}
void OAIContentSubmission_Shared_BusinessEntities_Release::setBundleIds(const QList<QString> &bundle_ids) {
    m_bundle_ids = bundle_ids;
    m_bundle_ids_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_Release::is_bundle_ids_Set() const{
    return m_bundle_ids_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_Release::is_bundle_ids_Valid() const{
    return m_bundle_ids_isValid;
}

QDateTime OAIContentSubmission_Shared_BusinessEntities_Release::getReleaseDate() const {
    return m_release_date;
}
void OAIContentSubmission_Shared_BusinessEntities_Release::setReleaseDate(const QDateTime &release_date) {
    m_release_date = release_date;
    m_release_date_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_Release::is_release_date_Set() const{
    return m_release_date_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_Release::is_release_date_Valid() const{
    return m_release_date_isValid;
}

qint32 OAIContentSubmission_Shared_BusinessEntities_Release::getReleaseId() const {
    return m_release_id;
}
void OAIContentSubmission_Shared_BusinessEntities_Release::setReleaseId(const qint32 &release_id) {
    m_release_id = release_id;
    m_release_id_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_Release::is_release_id_Set() const{
    return m_release_id_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_Release::is_release_id_Valid() const{
    return m_release_id_isValid;
}

QString OAIContentSubmission_Shared_BusinessEntities_Release::getReleaseNumber() const {
    return m_release_number;
}
void OAIContentSubmission_Shared_BusinessEntities_Release::setReleaseNumber(const QString &release_number) {
    m_release_number = release_number;
    m_release_number_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_Release::is_release_number_Set() const{
    return m_release_number_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_Release::is_release_number_Valid() const{
    return m_release_number_isValid;
}

bool OAIContentSubmission_Shared_BusinessEntities_Release::isVisible() const {
    return m_visible;
}
void OAIContentSubmission_Shared_BusinessEntities_Release::setVisible(const bool &visible) {
    m_visible = visible;
    m_visible_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_Release::is_visible_Set() const{
    return m_visible_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_Release::is_visible_Valid() const{
    return m_visible_isValid;
}

bool OAIContentSubmission_Shared_BusinessEntities_Release::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_build_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_bundle_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_release_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_release_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_release_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_visible_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContentSubmission_Shared_BusinessEntities_Release::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
