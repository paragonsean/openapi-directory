/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDealerDB_Models_LicenseActivationCreate.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDealerDB_Models_LicenseActivationCreate::OAIDealerDB_Models_LicenseActivationCreate(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDealerDB_Models_LicenseActivationCreate::OAIDealerDB_Models_LicenseActivationCreate() {
    this->initializeModel();
}

OAIDealerDB_Models_LicenseActivationCreate::~OAIDealerDB_Models_LicenseActivationCreate() {}

void OAIDealerDB_Models_LicenseActivationCreate::initializeModel() {

    m_dealer_code_isSet = false;
    m_dealer_code_isValid = false;

    m_license_activation_type_isSet = false;
    m_license_activation_type_isValid = false;

    m_postal_code_isSet = false;
    m_postal_code_isValid = false;

    m_system_info_isSet = false;
    m_system_info_isValid = false;

    m_voucher_code_isSet = false;
    m_voucher_code_isValid = false;
}

void OAIDealerDB_Models_LicenseActivationCreate::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDealerDB_Models_LicenseActivationCreate::fromJsonObject(QJsonObject json) {

    m_dealer_code_isValid = ::OpenAPI::fromJsonValue(m_dealer_code, json[QString("DealerCode")]);
    m_dealer_code_isSet = !json[QString("DealerCode")].isNull() && m_dealer_code_isValid;

    m_license_activation_type_isValid = ::OpenAPI::fromJsonValue(m_license_activation_type, json[QString("LicenseActivationType")]);
    m_license_activation_type_isSet = !json[QString("LicenseActivationType")].isNull() && m_license_activation_type_isValid;

    m_postal_code_isValid = ::OpenAPI::fromJsonValue(m_postal_code, json[QString("PostalCode")]);
    m_postal_code_isSet = !json[QString("PostalCode")].isNull() && m_postal_code_isValid;

    m_system_info_isValid = ::OpenAPI::fromJsonValue(m_system_info, json[QString("SystemInfo")]);
    m_system_info_isSet = !json[QString("SystemInfo")].isNull() && m_system_info_isValid;

    m_voucher_code_isValid = ::OpenAPI::fromJsonValue(m_voucher_code, json[QString("VoucherCode")]);
    m_voucher_code_isSet = !json[QString("VoucherCode")].isNull() && m_voucher_code_isValid;
}

QString OAIDealerDB_Models_LicenseActivationCreate::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDealerDB_Models_LicenseActivationCreate::asJsonObject() const {
    QJsonObject obj;
    if (m_dealer_code_isSet) {
        obj.insert(QString("DealerCode"), ::OpenAPI::toJsonValue(m_dealer_code));
    }
    if (m_license_activation_type_isSet) {
        obj.insert(QString("LicenseActivationType"), ::OpenAPI::toJsonValue(m_license_activation_type));
    }
    if (m_postal_code_isSet) {
        obj.insert(QString("PostalCode"), ::OpenAPI::toJsonValue(m_postal_code));
    }
    if (m_system_info_isSet) {
        obj.insert(QString("SystemInfo"), ::OpenAPI::toJsonValue(m_system_info));
    }
    if (m_voucher_code_isSet) {
        obj.insert(QString("VoucherCode"), ::OpenAPI::toJsonValue(m_voucher_code));
    }
    return obj;
}

QString OAIDealerDB_Models_LicenseActivationCreate::getDealerCode() const {
    return m_dealer_code;
}
void OAIDealerDB_Models_LicenseActivationCreate::setDealerCode(const QString &dealer_code) {
    m_dealer_code = dealer_code;
    m_dealer_code_isSet = true;
}

bool OAIDealerDB_Models_LicenseActivationCreate::is_dealer_code_Set() const{
    return m_dealer_code_isSet;
}

bool OAIDealerDB_Models_LicenseActivationCreate::is_dealer_code_Valid() const{
    return m_dealer_code_isValid;
}

QString OAIDealerDB_Models_LicenseActivationCreate::getLicenseActivationType() const {
    return m_license_activation_type;
}
void OAIDealerDB_Models_LicenseActivationCreate::setLicenseActivationType(const QString &license_activation_type) {
    m_license_activation_type = license_activation_type;
    m_license_activation_type_isSet = true;
}

bool OAIDealerDB_Models_LicenseActivationCreate::is_license_activation_type_Set() const{
    return m_license_activation_type_isSet;
}

bool OAIDealerDB_Models_LicenseActivationCreate::is_license_activation_type_Valid() const{
    return m_license_activation_type_isValid;
}

QString OAIDealerDB_Models_LicenseActivationCreate::getPostalCode() const {
    return m_postal_code;
}
void OAIDealerDB_Models_LicenseActivationCreate::setPostalCode(const QString &postal_code) {
    m_postal_code = postal_code;
    m_postal_code_isSet = true;
}

bool OAIDealerDB_Models_LicenseActivationCreate::is_postal_code_Set() const{
    return m_postal_code_isSet;
}

bool OAIDealerDB_Models_LicenseActivationCreate::is_postal_code_Valid() const{
    return m_postal_code_isValid;
}

QString OAIDealerDB_Models_LicenseActivationCreate::getSystemInfo() const {
    return m_system_info;
}
void OAIDealerDB_Models_LicenseActivationCreate::setSystemInfo(const QString &system_info) {
    m_system_info = system_info;
    m_system_info_isSet = true;
}

bool OAIDealerDB_Models_LicenseActivationCreate::is_system_info_Set() const{
    return m_system_info_isSet;
}

bool OAIDealerDB_Models_LicenseActivationCreate::is_system_info_Valid() const{
    return m_system_info_isValid;
}

QString OAIDealerDB_Models_LicenseActivationCreate::getVoucherCode() const {
    return m_voucher_code;
}
void OAIDealerDB_Models_LicenseActivationCreate::setVoucherCode(const QString &voucher_code) {
    m_voucher_code = voucher_code;
    m_voucher_code_isSet = true;
}

bool OAIDealerDB_Models_LicenseActivationCreate::is_voucher_code_Set() const{
    return m_voucher_code_isSet;
}

bool OAIDealerDB_Models_LicenseActivationCreate::is_voucher_code_Valid() const{
    return m_voucher_code_isValid;
}

bool OAIDealerDB_Models_LicenseActivationCreate::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_dealer_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_license_activation_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postal_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_system_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_voucher_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDealerDB_Models_LicenseActivationCreate::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_dealer_code_isValid && m_postal_code_isValid && m_system_info_isValid && m_voucher_code_isValid && true;
}

} // namespace OpenAPI
