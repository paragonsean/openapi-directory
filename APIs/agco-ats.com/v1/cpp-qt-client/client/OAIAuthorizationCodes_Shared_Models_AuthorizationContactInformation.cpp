/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation() {
    this->initializeModel();
}

OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::~OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation() {}

void OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::initializeModel() {

    m_authorization_code_id_isSet = false;
    m_authorization_code_id_isValid = false;

    m_code_isSet = false;
    m_code_isValid = false;

    m_contact_isSet = false;
    m_contact_isValid = false;

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_created_date_isSet = false;
    m_created_date_isValid = false;

    m_dealer_code_isSet = false;
    m_dealer_code_isValid = false;

    m_dealership_isSet = false;
    m_dealership_isValid = false;

    m_definition_name_isSet = false;
    m_definition_name_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_notes_isSet = false;
    m_notes_isValid = false;

    m_phone_isSet = false;
    m_phone_isValid = false;
}

void OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::fromJsonObject(QJsonObject json) {

    m_authorization_code_id_isValid = ::OpenAPI::fromJsonValue(m_authorization_code_id, json[QString("AuthorizationCodeID")]);
    m_authorization_code_id_isSet = !json[QString("AuthorizationCodeID")].isNull() && m_authorization_code_id_isValid;

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("Code")]);
    m_code_isSet = !json[QString("Code")].isNull() && m_code_isValid;

    m_contact_isValid = ::OpenAPI::fromJsonValue(m_contact, json[QString("Contact")]);
    m_contact_isSet = !json[QString("Contact")].isNull() && m_contact_isValid;

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("CreatedBy")]);
    m_created_by_isSet = !json[QString("CreatedBy")].isNull() && m_created_by_isValid;

    m_created_date_isValid = ::OpenAPI::fromJsonValue(m_created_date, json[QString("CreatedDate")]);
    m_created_date_isSet = !json[QString("CreatedDate")].isNull() && m_created_date_isValid;

    m_dealer_code_isValid = ::OpenAPI::fromJsonValue(m_dealer_code, json[QString("DealerCode")]);
    m_dealer_code_isSet = !json[QString("DealerCode")].isNull() && m_dealer_code_isValid;

    m_dealership_isValid = ::OpenAPI::fromJsonValue(m_dealership, json[QString("Dealership")]);
    m_dealership_isSet = !json[QString("Dealership")].isNull() && m_dealership_isValid;

    m_definition_name_isValid = ::OpenAPI::fromJsonValue(m_definition_name, json[QString("DefinitionName")]);
    m_definition_name_isSet = !json[QString("DefinitionName")].isNull() && m_definition_name_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("Email")]);
    m_email_isSet = !json[QString("Email")].isNull() && m_email_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("ID")]);
    m_id_isSet = !json[QString("ID")].isNull() && m_id_isValid;

    m_notes_isValid = ::OpenAPI::fromJsonValue(m_notes, json[QString("Notes")]);
    m_notes_isSet = !json[QString("Notes")].isNull() && m_notes_isValid;

    m_phone_isValid = ::OpenAPI::fromJsonValue(m_phone, json[QString("Phone")]);
    m_phone_isSet = !json[QString("Phone")].isNull() && m_phone_isValid;
}

QString OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::asJsonObject() const {
    QJsonObject obj;
    if (m_authorization_code_id_isSet) {
        obj.insert(QString("AuthorizationCodeID"), ::OpenAPI::toJsonValue(m_authorization_code_id));
    }
    if (m_code_isSet) {
        obj.insert(QString("Code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_contact_isSet) {
        obj.insert(QString("Contact"), ::OpenAPI::toJsonValue(m_contact));
    }
    if (m_created_by_isSet) {
        obj.insert(QString("CreatedBy"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_created_date_isSet) {
        obj.insert(QString("CreatedDate"), ::OpenAPI::toJsonValue(m_created_date));
    }
    if (m_dealer_code_isSet) {
        obj.insert(QString("DealerCode"), ::OpenAPI::toJsonValue(m_dealer_code));
    }
    if (m_dealership_isSet) {
        obj.insert(QString("Dealership"), ::OpenAPI::toJsonValue(m_dealership));
    }
    if (m_definition_name_isSet) {
        obj.insert(QString("DefinitionName"), ::OpenAPI::toJsonValue(m_definition_name));
    }
    if (m_email_isSet) {
        obj.insert(QString("Email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_id_isSet) {
        obj.insert(QString("ID"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_notes_isSet) {
        obj.insert(QString("Notes"), ::OpenAPI::toJsonValue(m_notes));
    }
    if (m_phone_isSet) {
        obj.insert(QString("Phone"), ::OpenAPI::toJsonValue(m_phone));
    }
    return obj;
}

qint32 OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::getAuthorizationCodeId() const {
    return m_authorization_code_id;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::setAuthorizationCodeId(const qint32 &authorization_code_id) {
    m_authorization_code_id = authorization_code_id;
    m_authorization_code_id_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_authorization_code_id_Set() const{
    return m_authorization_code_id_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_authorization_code_id_Valid() const{
    return m_authorization_code_id_isValid;
}

QString OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::getCode() const {
    return m_code;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_code_Set() const{
    return m_code_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_code_Valid() const{
    return m_code_isValid;
}

QString OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::getContact() const {
    return m_contact;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::setContact(const QString &contact) {
    m_contact = contact;
    m_contact_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_contact_Set() const{
    return m_contact_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_contact_Valid() const{
    return m_contact_isValid;
}

QString OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::getCreatedBy() const {
    return m_created_by;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::setCreatedBy(const QString &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QDateTime OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::getCreatedDate() const {
    return m_created_date;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::setCreatedDate(const QDateTime &created_date) {
    m_created_date = created_date;
    m_created_date_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_created_date_Set() const{
    return m_created_date_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_created_date_Valid() const{
    return m_created_date_isValid;
}

QString OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::getDealerCode() const {
    return m_dealer_code;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::setDealerCode(const QString &dealer_code) {
    m_dealer_code = dealer_code;
    m_dealer_code_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_dealer_code_Set() const{
    return m_dealer_code_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_dealer_code_Valid() const{
    return m_dealer_code_isValid;
}

QString OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::getDealership() const {
    return m_dealership;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::setDealership(const QString &dealership) {
    m_dealership = dealership;
    m_dealership_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_dealership_Set() const{
    return m_dealership_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_dealership_Valid() const{
    return m_dealership_isValid;
}

QString OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::getDefinitionName() const {
    return m_definition_name;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::setDefinitionName(const QString &definition_name) {
    m_definition_name = definition_name;
    m_definition_name_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_definition_name_Set() const{
    return m_definition_name_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_definition_name_Valid() const{
    return m_definition_name_isValid;
}

QString OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::getEmail() const {
    return m_email;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_email_Set() const{
    return m_email_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_email_Valid() const{
    return m_email_isValid;
}

qint32 OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::getId() const {
    return m_id;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::getNotes() const {
    return m_notes;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::setNotes(const QString &notes) {
    m_notes = notes;
    m_notes_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_notes_Set() const{
    return m_notes_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_notes_Valid() const{
    return m_notes_isValid;
}

QString OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::getPhone() const {
    return m_phone;
}
void OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::setPhone(const QString &phone) {
    m_phone = phone;
    m_phone_isSet = true;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_phone_Set() const{
    return m_phone_isSet;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::is_phone_Valid() const{
    return m_phone_isValid;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_authorization_code_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_contact_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dealer_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dealership_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_definition_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_phone_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAuthorizationCodes_Shared_Models_AuthorizationContactInformation::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_authorization_code_id_isValid && m_contact_isValid && m_dealer_code_isValid && m_dealership_isValid && m_phone_isValid && true;
}

} // namespace OpenAPI
