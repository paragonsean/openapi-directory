/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDealerDB_Models_License.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDealerDB_Models_License::OAIDealerDB_Models_License(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDealerDB_Models_License::OAIDealerDB_Models_License() {
    this->initializeModel();
}

OAIDealerDB_Models_License::~OAIDealerDB_Models_License() {}

void OAIDealerDB_Models_License::initializeModel() {

    m_active_isSet = false;
    m_active_isValid = false;

    m_created_date_isSet = false;
    m_created_date_isValid = false;

    m_deactivated_date_isSet = false;
    m_deactivated_date_isValid = false;

    m_license_activation_type_isSet = false;
    m_license_activation_type_isValid = false;

    m_license_id_isSet = false;
    m_license_id_isValid = false;

    m_license_version_isSet = false;
    m_license_version_isValid = false;

    m_refresh_date_isSet = false;
    m_refresh_date_isValid = false;

    m_system_info_isSet = false;
    m_system_info_isValid = false;

    m_updated_license_version_isSet = false;
    m_updated_license_version_isValid = false;

    m_voucher_code_isSet = false;
    m_voucher_code_isValid = false;
}

void OAIDealerDB_Models_License::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDealerDB_Models_License::fromJsonObject(QJsonObject json) {

    m_active_isValid = ::OpenAPI::fromJsonValue(m_active, json[QString("Active")]);
    m_active_isSet = !json[QString("Active")].isNull() && m_active_isValid;

    m_created_date_isValid = ::OpenAPI::fromJsonValue(m_created_date, json[QString("CreatedDate")]);
    m_created_date_isSet = !json[QString("CreatedDate")].isNull() && m_created_date_isValid;

    m_deactivated_date_isValid = ::OpenAPI::fromJsonValue(m_deactivated_date, json[QString("DeactivatedDate")]);
    m_deactivated_date_isSet = !json[QString("DeactivatedDate")].isNull() && m_deactivated_date_isValid;

    m_license_activation_type_isValid = ::OpenAPI::fromJsonValue(m_license_activation_type, json[QString("LicenseActivationType")]);
    m_license_activation_type_isSet = !json[QString("LicenseActivationType")].isNull() && m_license_activation_type_isValid;

    m_license_id_isValid = ::OpenAPI::fromJsonValue(m_license_id, json[QString("LicenseID")]);
    m_license_id_isSet = !json[QString("LicenseID")].isNull() && m_license_id_isValid;

    m_license_version_isValid = ::OpenAPI::fromJsonValue(m_license_version, json[QString("LicenseVersion")]);
    m_license_version_isSet = !json[QString("LicenseVersion")].isNull() && m_license_version_isValid;

    m_refresh_date_isValid = ::OpenAPI::fromJsonValue(m_refresh_date, json[QString("RefreshDate")]);
    m_refresh_date_isSet = !json[QString("RefreshDate")].isNull() && m_refresh_date_isValid;

    m_system_info_isValid = ::OpenAPI::fromJsonValue(m_system_info, json[QString("SystemInfo")]);
    m_system_info_isSet = !json[QString("SystemInfo")].isNull() && m_system_info_isValid;

    m_updated_license_version_isValid = ::OpenAPI::fromJsonValue(m_updated_license_version, json[QString("UpdatedLicenseVersion")]);
    m_updated_license_version_isSet = !json[QString("UpdatedLicenseVersion")].isNull() && m_updated_license_version_isValid;

    m_voucher_code_isValid = ::OpenAPI::fromJsonValue(m_voucher_code, json[QString("VoucherCode")]);
    m_voucher_code_isSet = !json[QString("VoucherCode")].isNull() && m_voucher_code_isValid;
}

QString OAIDealerDB_Models_License::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDealerDB_Models_License::asJsonObject() const {
    QJsonObject obj;
    if (m_active_isSet) {
        obj.insert(QString("Active"), ::OpenAPI::toJsonValue(m_active));
    }
    if (m_created_date_isSet) {
        obj.insert(QString("CreatedDate"), ::OpenAPI::toJsonValue(m_created_date));
    }
    if (m_deactivated_date_isSet) {
        obj.insert(QString("DeactivatedDate"), ::OpenAPI::toJsonValue(m_deactivated_date));
    }
    if (m_license_activation_type_isSet) {
        obj.insert(QString("LicenseActivationType"), ::OpenAPI::toJsonValue(m_license_activation_type));
    }
    if (m_license_id_isSet) {
        obj.insert(QString("LicenseID"), ::OpenAPI::toJsonValue(m_license_id));
    }
    if (m_license_version_isSet) {
        obj.insert(QString("LicenseVersion"), ::OpenAPI::toJsonValue(m_license_version));
    }
    if (m_refresh_date_isSet) {
        obj.insert(QString("RefreshDate"), ::OpenAPI::toJsonValue(m_refresh_date));
    }
    if (m_system_info_isSet) {
        obj.insert(QString("SystemInfo"), ::OpenAPI::toJsonValue(m_system_info));
    }
    if (m_updated_license_version_isSet) {
        obj.insert(QString("UpdatedLicenseVersion"), ::OpenAPI::toJsonValue(m_updated_license_version));
    }
    if (m_voucher_code_isSet) {
        obj.insert(QString("VoucherCode"), ::OpenAPI::toJsonValue(m_voucher_code));
    }
    return obj;
}

bool OAIDealerDB_Models_License::isActive() const {
    return m_active;
}
void OAIDealerDB_Models_License::setActive(const bool &active) {
    m_active = active;
    m_active_isSet = true;
}

bool OAIDealerDB_Models_License::is_active_Set() const{
    return m_active_isSet;
}

bool OAIDealerDB_Models_License::is_active_Valid() const{
    return m_active_isValid;
}

QDateTime OAIDealerDB_Models_License::getCreatedDate() const {
    return m_created_date;
}
void OAIDealerDB_Models_License::setCreatedDate(const QDateTime &created_date) {
    m_created_date = created_date;
    m_created_date_isSet = true;
}

bool OAIDealerDB_Models_License::is_created_date_Set() const{
    return m_created_date_isSet;
}

bool OAIDealerDB_Models_License::is_created_date_Valid() const{
    return m_created_date_isValid;
}

QDateTime OAIDealerDB_Models_License::getDeactivatedDate() const {
    return m_deactivated_date;
}
void OAIDealerDB_Models_License::setDeactivatedDate(const QDateTime &deactivated_date) {
    m_deactivated_date = deactivated_date;
    m_deactivated_date_isSet = true;
}

bool OAIDealerDB_Models_License::is_deactivated_date_Set() const{
    return m_deactivated_date_isSet;
}

bool OAIDealerDB_Models_License::is_deactivated_date_Valid() const{
    return m_deactivated_date_isValid;
}

QString OAIDealerDB_Models_License::getLicenseActivationType() const {
    return m_license_activation_type;
}
void OAIDealerDB_Models_License::setLicenseActivationType(const QString &license_activation_type) {
    m_license_activation_type = license_activation_type;
    m_license_activation_type_isSet = true;
}

bool OAIDealerDB_Models_License::is_license_activation_type_Set() const{
    return m_license_activation_type_isSet;
}

bool OAIDealerDB_Models_License::is_license_activation_type_Valid() const{
    return m_license_activation_type_isValid;
}

QString OAIDealerDB_Models_License::getLicenseId() const {
    return m_license_id;
}
void OAIDealerDB_Models_License::setLicenseId(const QString &license_id) {
    m_license_id = license_id;
    m_license_id_isSet = true;
}

bool OAIDealerDB_Models_License::is_license_id_Set() const{
    return m_license_id_isSet;
}

bool OAIDealerDB_Models_License::is_license_id_Valid() const{
    return m_license_id_isValid;
}

QString OAIDealerDB_Models_License::getLicenseVersion() const {
    return m_license_version;
}
void OAIDealerDB_Models_License::setLicenseVersion(const QString &license_version) {
    m_license_version = license_version;
    m_license_version_isSet = true;
}

bool OAIDealerDB_Models_License::is_license_version_Set() const{
    return m_license_version_isSet;
}

bool OAIDealerDB_Models_License::is_license_version_Valid() const{
    return m_license_version_isValid;
}

QDateTime OAIDealerDB_Models_License::getRefreshDate() const {
    return m_refresh_date;
}
void OAIDealerDB_Models_License::setRefreshDate(const QDateTime &refresh_date) {
    m_refresh_date = refresh_date;
    m_refresh_date_isSet = true;
}

bool OAIDealerDB_Models_License::is_refresh_date_Set() const{
    return m_refresh_date_isSet;
}

bool OAIDealerDB_Models_License::is_refresh_date_Valid() const{
    return m_refresh_date_isValid;
}

QString OAIDealerDB_Models_License::getSystemInfo() const {
    return m_system_info;
}
void OAIDealerDB_Models_License::setSystemInfo(const QString &system_info) {
    m_system_info = system_info;
    m_system_info_isSet = true;
}

bool OAIDealerDB_Models_License::is_system_info_Set() const{
    return m_system_info_isSet;
}

bool OAIDealerDB_Models_License::is_system_info_Valid() const{
    return m_system_info_isValid;
}

QString OAIDealerDB_Models_License::getUpdatedLicenseVersion() const {
    return m_updated_license_version;
}
void OAIDealerDB_Models_License::setUpdatedLicenseVersion(const QString &updated_license_version) {
    m_updated_license_version = updated_license_version;
    m_updated_license_version_isSet = true;
}

bool OAIDealerDB_Models_License::is_updated_license_version_Set() const{
    return m_updated_license_version_isSet;
}

bool OAIDealerDB_Models_License::is_updated_license_version_Valid() const{
    return m_updated_license_version_isValid;
}

QString OAIDealerDB_Models_License::getVoucherCode() const {
    return m_voucher_code;
}
void OAIDealerDB_Models_License::setVoucherCode(const QString &voucher_code) {
    m_voucher_code = voucher_code;
    m_voucher_code_isSet = true;
}

bool OAIDealerDB_Models_License::is_voucher_code_Set() const{
    return m_voucher_code_isSet;
}

bool OAIDealerDB_Models_License::is_voucher_code_Valid() const{
    return m_voucher_code_isValid;
}

bool OAIDealerDB_Models_License::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_active_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deactivated_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_license_activation_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_license_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_license_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_refresh_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_system_info_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_license_version_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_voucher_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDealerDB_Models_License::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
