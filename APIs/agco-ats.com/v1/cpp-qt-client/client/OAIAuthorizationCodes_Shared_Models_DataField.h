/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAuthorizationCodes_Shared_Models_DataField.h
 *
 * 
 */

#ifndef OAIAuthorizationCodes_Shared_Models_DataField_H
#define OAIAuthorizationCodes_Shared_Models_DataField_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAuthorizationCodes_Shared_Models_DataField : public OAIObject {
public:
    OAIAuthorizationCodes_Shared_Models_DataField();
    OAIAuthorizationCodes_Shared_Models_DataField(QString json);
    ~OAIAuthorizationCodes_Shared_Models_DataField() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDigitsPrecision() const;
    void setDigitsPrecision(const qint32 &digits_precision);
    bool is_digits_precision_Set() const;
    bool is_digits_precision_Valid() const;

    qint32 getMaxExponent() const;
    void setMaxExponent(const qint32 &max_exponent);
    bool is_max_exponent_Set() const;
    bool is_max_exponent_Valid() const;

    double getMaxValue() const;
    void setMaxValue(const double &max_value);
    bool is_max_value_Set() const;
    bool is_max_value_Valid() const;

    qint32 getMinExponent() const;
    void setMinExponent(const qint32 &min_exponent);
    bool is_min_exponent_Set() const;
    bool is_min_exponent_Valid() const;

    double getMinValue() const;
    void setMinValue(const double &min_value);
    bool is_min_value_Set() const;
    bool is_min_value_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    double getScaleFactor() const;
    void setScaleFactor(const double &scale_factor);
    bool is_scale_factor_Set() const;
    bool is_scale_factor_Valid() const;

    bool isRSigned() const;
    void setRSigned(const bool &r_signed);
    bool is_r_signed_Set() const;
    bool is_r_signed_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_digits_precision;
    bool m_digits_precision_isSet;
    bool m_digits_precision_isValid;

    qint32 m_max_exponent;
    bool m_max_exponent_isSet;
    bool m_max_exponent_isValid;

    double m_max_value;
    bool m_max_value_isSet;
    bool m_max_value_isValid;

    qint32 m_min_exponent;
    bool m_min_exponent_isSet;
    bool m_min_exponent_isValid;

    double m_min_value;
    bool m_min_value_isSet;
    bool m_min_value_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    double m_scale_factor;
    bool m_scale_factor_isSet;
    bool m_scale_factor_isValid;

    bool m_r_signed;
    bool m_r_signed_isSet;
    bool m_r_signed_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAuthorizationCodes_Shared_Models_DataField)

#endif // OAIAuthorizationCodes_Shared_Models_DataField_H
