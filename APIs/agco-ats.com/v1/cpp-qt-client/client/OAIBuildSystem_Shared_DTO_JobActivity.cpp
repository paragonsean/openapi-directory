/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBuildSystem_Shared_DTO_JobActivity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBuildSystem_Shared_DTO_JobActivity::OAIBuildSystem_Shared_DTO_JobActivity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBuildSystem_Shared_DTO_JobActivity::OAIBuildSystem_Shared_DTO_JobActivity() {
    this->initializeModel();
}

OAIBuildSystem_Shared_DTO_JobActivity::~OAIBuildSystem_Shared_DTO_JobActivity() {}

void OAIBuildSystem_Shared_DTO_JobActivity::initializeModel() {

    m_activity_id_isSet = false;
    m_activity_id_isValid = false;

    m_job_activity_id_isSet = false;
    m_job_activity_id_isValid = false;

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_parameter_mappings_isSet = false;
    m_parameter_mappings_isValid = false;

    m_run_order_isSet = false;
    m_run_order_isValid = false;
}

void OAIBuildSystem_Shared_DTO_JobActivity::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBuildSystem_Shared_DTO_JobActivity::fromJsonObject(QJsonObject json) {

    m_activity_id_isValid = ::OpenAPI::fromJsonValue(m_activity_id, json[QString("ActivityID")]);
    m_activity_id_isSet = !json[QString("ActivityID")].isNull() && m_activity_id_isValid;

    m_job_activity_id_isValid = ::OpenAPI::fromJsonValue(m_job_activity_id, json[QString("JobActivityID")]);
    m_job_activity_id_isSet = !json[QString("JobActivityID")].isNull() && m_job_activity_id_isValid;

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("JobID")]);
    m_job_id_isSet = !json[QString("JobID")].isNull() && m_job_id_isValid;

    m_parameter_mappings_isValid = ::OpenAPI::fromJsonValue(m_parameter_mappings, json[QString("ParameterMappings")]);
    m_parameter_mappings_isSet = !json[QString("ParameterMappings")].isNull() && m_parameter_mappings_isValid;

    m_run_order_isValid = ::OpenAPI::fromJsonValue(m_run_order, json[QString("RunOrder")]);
    m_run_order_isSet = !json[QString("RunOrder")].isNull() && m_run_order_isValid;
}

QString OAIBuildSystem_Shared_DTO_JobActivity::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBuildSystem_Shared_DTO_JobActivity::asJsonObject() const {
    QJsonObject obj;
    if (m_activity_id_isSet) {
        obj.insert(QString("ActivityID"), ::OpenAPI::toJsonValue(m_activity_id));
    }
    if (m_job_activity_id_isSet) {
        obj.insert(QString("JobActivityID"), ::OpenAPI::toJsonValue(m_job_activity_id));
    }
    if (m_job_id_isSet) {
        obj.insert(QString("JobID"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_parameter_mappings.size() > 0) {
        obj.insert(QString("ParameterMappings"), ::OpenAPI::toJsonValue(m_parameter_mappings));
    }
    if (m_run_order_isSet) {
        obj.insert(QString("RunOrder"), ::OpenAPI::toJsonValue(m_run_order));
    }
    return obj;
}

qint32 OAIBuildSystem_Shared_DTO_JobActivity::getActivityId() const {
    return m_activity_id;
}
void OAIBuildSystem_Shared_DTO_JobActivity::setActivityId(const qint32 &activity_id) {
    m_activity_id = activity_id;
    m_activity_id_isSet = true;
}

bool OAIBuildSystem_Shared_DTO_JobActivity::is_activity_id_Set() const{
    return m_activity_id_isSet;
}

bool OAIBuildSystem_Shared_DTO_JobActivity::is_activity_id_Valid() const{
    return m_activity_id_isValid;
}

qint32 OAIBuildSystem_Shared_DTO_JobActivity::getJobActivityId() const {
    return m_job_activity_id;
}
void OAIBuildSystem_Shared_DTO_JobActivity::setJobActivityId(const qint32 &job_activity_id) {
    m_job_activity_id = job_activity_id;
    m_job_activity_id_isSet = true;
}

bool OAIBuildSystem_Shared_DTO_JobActivity::is_job_activity_id_Set() const{
    return m_job_activity_id_isSet;
}

bool OAIBuildSystem_Shared_DTO_JobActivity::is_job_activity_id_Valid() const{
    return m_job_activity_id_isValid;
}

qint32 OAIBuildSystem_Shared_DTO_JobActivity::getJobId() const {
    return m_job_id;
}
void OAIBuildSystem_Shared_DTO_JobActivity::setJobId(const qint32 &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIBuildSystem_Shared_DTO_JobActivity::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIBuildSystem_Shared_DTO_JobActivity::is_job_id_Valid() const{
    return m_job_id_isValid;
}

QList<OAIBuildSystem_Shared_DTO_ParameterMapping> OAIBuildSystem_Shared_DTO_JobActivity::getParameterMappings() const {
    return m_parameter_mappings;
}
void OAIBuildSystem_Shared_DTO_JobActivity::setParameterMappings(const QList<OAIBuildSystem_Shared_DTO_ParameterMapping> &parameter_mappings) {
    m_parameter_mappings = parameter_mappings;
    m_parameter_mappings_isSet = true;
}

bool OAIBuildSystem_Shared_DTO_JobActivity::is_parameter_mappings_Set() const{
    return m_parameter_mappings_isSet;
}

bool OAIBuildSystem_Shared_DTO_JobActivity::is_parameter_mappings_Valid() const{
    return m_parameter_mappings_isValid;
}

qint32 OAIBuildSystem_Shared_DTO_JobActivity::getRunOrder() const {
    return m_run_order;
}
void OAIBuildSystem_Shared_DTO_JobActivity::setRunOrder(const qint32 &run_order) {
    m_run_order = run_order;
    m_run_order_isSet = true;
}

bool OAIBuildSystem_Shared_DTO_JobActivity::is_run_order_Set() const{
    return m_run_order_isSet;
}

bool OAIBuildSystem_Shared_DTO_JobActivity::is_run_order_Valid() const{
    return m_run_order_isValid;
}

bool OAIBuildSystem_Shared_DTO_JobActivity::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activity_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_activity_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameter_mappings.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_run_order_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBuildSystem_Shared_DTO_JobActivity::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
