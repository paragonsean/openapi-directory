/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion() {
    this->initializeModel();
}

OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::~OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion() {}

void OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::initializeModel() {

    m_content_definition_id_isSet = false;
    m_content_definition_id_isValid = false;

    m_content_release_id_isSet = false;
    m_content_release_id_isValid = false;

    m_deleted_isSet = false;
    m_deleted_isValid = false;

    m_publisher_user_id_isSet = false;
    m_publisher_user_id_isValid = false;

    m_release_id_isSet = false;
    m_release_id_isValid = false;

    m_test_report_url_isSet = false;
    m_test_report_url_isValid = false;

    m_updated_date_isSet = false;
    m_updated_date_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::fromJsonObject(QJsonObject json) {

    m_content_definition_id_isValid = ::OpenAPI::fromJsonValue(m_content_definition_id, json[QString("ContentDefinitionID")]);
    m_content_definition_id_isSet = !json[QString("ContentDefinitionID")].isNull() && m_content_definition_id_isValid;

    m_content_release_id_isValid = ::OpenAPI::fromJsonValue(m_content_release_id, json[QString("ContentReleaseID")]);
    m_content_release_id_isSet = !json[QString("ContentReleaseID")].isNull() && m_content_release_id_isValid;

    m_deleted_isValid = ::OpenAPI::fromJsonValue(m_deleted, json[QString("Deleted")]);
    m_deleted_isSet = !json[QString("Deleted")].isNull() && m_deleted_isValid;

    m_publisher_user_id_isValid = ::OpenAPI::fromJsonValue(m_publisher_user_id, json[QString("PublisherUserID")]);
    m_publisher_user_id_isSet = !json[QString("PublisherUserID")].isNull() && m_publisher_user_id_isValid;

    m_release_id_isValid = ::OpenAPI::fromJsonValue(m_release_id, json[QString("ReleaseID")]);
    m_release_id_isSet = !json[QString("ReleaseID")].isNull() && m_release_id_isValid;

    m_test_report_url_isValid = ::OpenAPI::fromJsonValue(m_test_report_url, json[QString("TestReportUrl")]);
    m_test_report_url_isSet = !json[QString("TestReportUrl")].isNull() && m_test_report_url_isValid;

    m_updated_date_isValid = ::OpenAPI::fromJsonValue(m_updated_date, json[QString("UpdatedDate")]);
    m_updated_date_isSet = !json[QString("UpdatedDate")].isNull() && m_updated_date_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("Version")]);
    m_version_isSet = !json[QString("Version")].isNull() && m_version_isValid;
}

QString OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::asJsonObject() const {
    QJsonObject obj;
    if (m_content_definition_id_isSet) {
        obj.insert(QString("ContentDefinitionID"), ::OpenAPI::toJsonValue(m_content_definition_id));
    }
    if (m_content_release_id_isSet) {
        obj.insert(QString("ContentReleaseID"), ::OpenAPI::toJsonValue(m_content_release_id));
    }
    if (m_deleted_isSet) {
        obj.insert(QString("Deleted"), ::OpenAPI::toJsonValue(m_deleted));
    }
    if (m_publisher_user_id_isSet) {
        obj.insert(QString("PublisherUserID"), ::OpenAPI::toJsonValue(m_publisher_user_id));
    }
    if (m_release_id_isSet) {
        obj.insert(QString("ReleaseID"), ::OpenAPI::toJsonValue(m_release_id));
    }
    if (m_test_report_url_isSet) {
        obj.insert(QString("TestReportUrl"), ::OpenAPI::toJsonValue(m_test_report_url));
    }
    if (m_updated_date_isSet) {
        obj.insert(QString("UpdatedDate"), ::OpenAPI::toJsonValue(m_updated_date));
    }
    if (m_version_isSet) {
        obj.insert(QString("Version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

qint32 OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::getContentDefinitionId() const {
    return m_content_definition_id;
}
void OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::setContentDefinitionId(const qint32 &content_definition_id) {
    m_content_definition_id = content_definition_id;
    m_content_definition_id_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::is_content_definition_id_Set() const{
    return m_content_definition_id_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::is_content_definition_id_Valid() const{
    return m_content_definition_id_isValid;
}

qint32 OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::getContentReleaseId() const {
    return m_content_release_id;
}
void OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::setContentReleaseId(const qint32 &content_release_id) {
    m_content_release_id = content_release_id;
    m_content_release_id_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::is_content_release_id_Set() const{
    return m_content_release_id_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::is_content_release_id_Valid() const{
    return m_content_release_id_isValid;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::isDeleted() const {
    return m_deleted;
}
void OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::setDeleted(const bool &deleted) {
    m_deleted = deleted;
    m_deleted_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::is_deleted_Set() const{
    return m_deleted_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::is_deleted_Valid() const{
    return m_deleted_isValid;
}

qint32 OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::getPublisherUserId() const {
    return m_publisher_user_id;
}
void OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::setPublisherUserId(const qint32 &publisher_user_id) {
    m_publisher_user_id = publisher_user_id;
    m_publisher_user_id_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::is_publisher_user_id_Set() const{
    return m_publisher_user_id_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::is_publisher_user_id_Valid() const{
    return m_publisher_user_id_isValid;
}

qint32 OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::getReleaseId() const {
    return m_release_id;
}
void OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::setReleaseId(const qint32 &release_id) {
    m_release_id = release_id;
    m_release_id_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::is_release_id_Set() const{
    return m_release_id_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::is_release_id_Valid() const{
    return m_release_id_isValid;
}

QString OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::getTestReportUrl() const {
    return m_test_report_url;
}
void OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::setTestReportUrl(const QString &test_report_url) {
    m_test_report_url = test_report_url;
    m_test_report_url_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::is_test_report_url_Set() const{
    return m_test_report_url_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::is_test_report_url_Valid() const{
    return m_test_report_url_isValid;
}

QDateTime OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::getUpdatedDate() const {
    return m_updated_date;
}
void OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::setUpdatedDate(const QDateTime &updated_date) {
    m_updated_date = updated_date;
    m_updated_date_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::is_updated_date_Set() const{
    return m_updated_date_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::is_updated_date_Valid() const{
    return m_updated_date_isValid;
}

qint32 OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::getVersion() const {
    return m_version;
}
void OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::setVersion(const qint32 &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::is_version_Set() const{
    return m_version_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_content_definition_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_release_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deleted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publisher_user_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_release_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_test_report_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentReleaseVersion::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
