/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBuildSystem_Shared_DTO_Job.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBuildSystem_Shared_DTO_Job::OAIBuildSystem_Shared_DTO_Job(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBuildSystem_Shared_DTO_Job::OAIBuildSystem_Shared_DTO_Job() {
    this->initializeModel();
}

OAIBuildSystem_Shared_DTO_Job::~OAIBuildSystem_Shared_DTO_Job() {}

void OAIBuildSystem_Shared_DTO_Job::initializeModel() {

    m_activities_isSet = false;
    m_activities_isValid = false;

    m_deleted_isSet = false;
    m_deleted_isValid = false;

    m_job_id_isSet = false;
    m_job_id_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_parameters_isSet = false;
    m_parameters_isValid = false;
}

void OAIBuildSystem_Shared_DTO_Job::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBuildSystem_Shared_DTO_Job::fromJsonObject(QJsonObject json) {

    m_activities_isValid = ::OpenAPI::fromJsonValue(m_activities, json[QString("Activities")]);
    m_activities_isSet = !json[QString("Activities")].isNull() && m_activities_isValid;

    m_deleted_isValid = ::OpenAPI::fromJsonValue(m_deleted, json[QString("Deleted")]);
    m_deleted_isSet = !json[QString("Deleted")].isNull() && m_deleted_isValid;

    m_job_id_isValid = ::OpenAPI::fromJsonValue(m_job_id, json[QString("JobID")]);
    m_job_id_isSet = !json[QString("JobID")].isNull() && m_job_id_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_parameters_isValid = ::OpenAPI::fromJsonValue(m_parameters, json[QString("Parameters")]);
    m_parameters_isSet = !json[QString("Parameters")].isNull() && m_parameters_isValid;
}

QString OAIBuildSystem_Shared_DTO_Job::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBuildSystem_Shared_DTO_Job::asJsonObject() const {
    QJsonObject obj;
    if (m_activities.size() > 0) {
        obj.insert(QString("Activities"), ::OpenAPI::toJsonValue(m_activities));
    }
    if (m_deleted_isSet) {
        obj.insert(QString("Deleted"), ::OpenAPI::toJsonValue(m_deleted));
    }
    if (m_job_id_isSet) {
        obj.insert(QString("JobID"), ::OpenAPI::toJsonValue(m_job_id));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_parameters.size() > 0) {
        obj.insert(QString("Parameters"), ::OpenAPI::toJsonValue(m_parameters));
    }
    return obj;
}

QList<OAIBuildSystem_Shared_DTO_JobActivity> OAIBuildSystem_Shared_DTO_Job::getActivities() const {
    return m_activities;
}
void OAIBuildSystem_Shared_DTO_Job::setActivities(const QList<OAIBuildSystem_Shared_DTO_JobActivity> &activities) {
    m_activities = activities;
    m_activities_isSet = true;
}

bool OAIBuildSystem_Shared_DTO_Job::is_activities_Set() const{
    return m_activities_isSet;
}

bool OAIBuildSystem_Shared_DTO_Job::is_activities_Valid() const{
    return m_activities_isValid;
}

bool OAIBuildSystem_Shared_DTO_Job::isDeleted() const {
    return m_deleted;
}
void OAIBuildSystem_Shared_DTO_Job::setDeleted(const bool &deleted) {
    m_deleted = deleted;
    m_deleted_isSet = true;
}

bool OAIBuildSystem_Shared_DTO_Job::is_deleted_Set() const{
    return m_deleted_isSet;
}

bool OAIBuildSystem_Shared_DTO_Job::is_deleted_Valid() const{
    return m_deleted_isValid;
}

qint32 OAIBuildSystem_Shared_DTO_Job::getJobId() const {
    return m_job_id;
}
void OAIBuildSystem_Shared_DTO_Job::setJobId(const qint32 &job_id) {
    m_job_id = job_id;
    m_job_id_isSet = true;
}

bool OAIBuildSystem_Shared_DTO_Job::is_job_id_Set() const{
    return m_job_id_isSet;
}

bool OAIBuildSystem_Shared_DTO_Job::is_job_id_Valid() const{
    return m_job_id_isValid;
}

QString OAIBuildSystem_Shared_DTO_Job::getName() const {
    return m_name;
}
void OAIBuildSystem_Shared_DTO_Job::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIBuildSystem_Shared_DTO_Job::is_name_Set() const{
    return m_name_isSet;
}

bool OAIBuildSystem_Shared_DTO_Job::is_name_Valid() const{
    return m_name_isValid;
}

QList<OAIBuildSystem_Shared_DTO_Parameter> OAIBuildSystem_Shared_DTO_Job::getParameters() const {
    return m_parameters;
}
void OAIBuildSystem_Shared_DTO_Job::setParameters(const QList<OAIBuildSystem_Shared_DTO_Parameter> &parameters) {
    m_parameters = parameters;
    m_parameters_isSet = true;
}

bool OAIBuildSystem_Shared_DTO_Job::is_parameters_Set() const{
    return m_parameters_isSet;
}

bool OAIBuildSystem_Shared_DTO_Job::is_parameters_Valid() const{
    return m_parameters_isValid;
}

bool OAIBuildSystem_Shared_DTO_Job::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activities.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_deleted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameters.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBuildSystem_Shared_DTO_Job::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
