/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIUpdateSystem_Models_Package.h
 *
 * 
 */

#ifndef OAIUpdateSystem_Models_Package_H
#define OAIUpdateSystem_Models_Package_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIUpdateSystem_Models_Package : public OAIObject {
public:
    OAIUpdateSystem_Models_Package();
    OAIUpdateSystem_Models_Package(QString json);
    ~OAIUpdateSystem_Models_Package() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAutorun() const;
    void setAutorun(const bool &autorun);
    bool is_autorun_Set() const;
    bool is_autorun_Valid() const;

    QString getCrc() const;
    void setCrc(const QString &crc);
    bool is_crc_Set() const;
    bool is_crc_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getLocalizedName() const;
    void setLocalizedName(const QString &localized_name);
    bool is_localized_name_Set() const;
    bool is_localized_name_Valid() const;

    QString getNotes() const;
    void setNotes(const QString &notes);
    bool is_notes_Set() const;
    bool is_notes_Valid() const;

    QString getPackageId() const;
    void setPackageId(const QString &package_id);
    bool is_package_id_Set() const;
    bool is_package_id_Valid() const;

    QString getPackageTypeId() const;
    void setPackageTypeId(const QString &package_type_id);
    bool is_package_type_id_Set() const;
    bool is_package_type_id_Valid() const;

    qint32 getPreviousVersion() const;
    void setPreviousVersion(const qint32 &previous_version);
    bool is_previous_version_Set() const;
    bool is_previous_version_Valid() const;

    QDateTime getReleaseDate() const;
    void setReleaseDate(const QDateTime &release_date);
    bool is_release_date_Set() const;
    bool is_release_date_Valid() const;

    bool isReleased() const;
    void setReleased(const bool &released);
    bool is_released_Set() const;
    bool is_released_Valid() const;

    bool isRemoveOnSuccess() const;
    void setRemoveOnSuccess(const bool &remove_on_success);
    bool is_remove_on_success_Set() const;
    bool is_remove_on_success_Valid() const;

    qint64 getSize() const;
    void setSize(const qint64 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getSwitches() const;
    void setSwitches(const QString &switches);
    bool is_switches_Set() const;
    bool is_switches_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    qint32 getVersion() const;
    void setVersion(const qint32 &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_autorun;
    bool m_autorun_isSet;
    bool m_autorun_isValid;

    QString m_crc;
    bool m_crc_isSet;
    bool m_crc_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_localized_name;
    bool m_localized_name_isSet;
    bool m_localized_name_isValid;

    QString m_notes;
    bool m_notes_isSet;
    bool m_notes_isValid;

    QString m_package_id;
    bool m_package_id_isSet;
    bool m_package_id_isValid;

    QString m_package_type_id;
    bool m_package_type_id_isSet;
    bool m_package_type_id_isValid;

    qint32 m_previous_version;
    bool m_previous_version_isSet;
    bool m_previous_version_isValid;

    QDateTime m_release_date;
    bool m_release_date_isSet;
    bool m_release_date_isValid;

    bool m_released;
    bool m_released_isSet;
    bool m_released_isValid;

    bool m_remove_on_success;
    bool m_remove_on_success_isSet;
    bool m_remove_on_success_isValid;

    qint64 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_switches;
    bool m_switches_isSet;
    bool m_switches_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    qint32 m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIUpdateSystem_Models_Package)

#endif // OAIUpdateSystem_Models_Package_H
