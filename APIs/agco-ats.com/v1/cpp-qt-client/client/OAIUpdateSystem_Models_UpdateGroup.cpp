/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpdateSystem_Models_UpdateGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpdateSystem_Models_UpdateGroup::OAIUpdateSystem_Models_UpdateGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpdateSystem_Models_UpdateGroup::OAIUpdateSystem_Models_UpdateGroup() {
    this->initializeModel();
}

OAIUpdateSystem_Models_UpdateGroup::~OAIUpdateSystem_Models_UpdateGroup() {}

void OAIUpdateSystem_Models_UpdateGroup::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_inventory_frequency_isSet = false;
    m_inventory_frequency_isValid = false;

    m_inventory_package_isSet = false;
    m_inventory_package_isValid = false;

    m_localized_description_isSet = false;
    m_localized_description_isValid = false;

    m_localized_name_isSet = false;
    m_localized_name_isValid = false;

    m_priority_isSet = false;
    m_priority_isValid = false;

    m_report_field_isSet = false;
    m_report_field_isValid = false;

    m_update_type_isSet = false;
    m_update_type_isValid = false;

    m_validating_field_isSet = false;
    m_validating_field_isValid = false;

    m_value_to_validate_isSet = false;
    m_value_to_validate_isValid = false;

    m_version_isSet = false;
    m_version_isValid = false;
}

void OAIUpdateSystem_Models_UpdateGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpdateSystem_Models_UpdateGroup::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("ID")]);
    m_id_isSet = !json[QString("ID")].isNull() && m_id_isValid;

    m_inventory_frequency_isValid = ::OpenAPI::fromJsonValue(m_inventory_frequency, json[QString("InventoryFrequency")]);
    m_inventory_frequency_isSet = !json[QString("InventoryFrequency")].isNull() && m_inventory_frequency_isValid;

    m_inventory_package_isValid = ::OpenAPI::fromJsonValue(m_inventory_package, json[QString("InventoryPackage")]);
    m_inventory_package_isSet = !json[QString("InventoryPackage")].isNull() && m_inventory_package_isValid;

    m_localized_description_isValid = ::OpenAPI::fromJsonValue(m_localized_description, json[QString("LocalizedDescription")]);
    m_localized_description_isSet = !json[QString("LocalizedDescription")].isNull() && m_localized_description_isValid;

    m_localized_name_isValid = ::OpenAPI::fromJsonValue(m_localized_name, json[QString("LocalizedName")]);
    m_localized_name_isSet = !json[QString("LocalizedName")].isNull() && m_localized_name_isValid;

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("Priority")]);
    m_priority_isSet = !json[QString("Priority")].isNull() && m_priority_isValid;

    m_report_field_isValid = ::OpenAPI::fromJsonValue(m_report_field, json[QString("ReportField")]);
    m_report_field_isSet = !json[QString("ReportField")].isNull() && m_report_field_isValid;

    m_update_type_isValid = ::OpenAPI::fromJsonValue(m_update_type, json[QString("UpdateType")]);
    m_update_type_isSet = !json[QString("UpdateType")].isNull() && m_update_type_isValid;

    m_validating_field_isValid = ::OpenAPI::fromJsonValue(m_validating_field, json[QString("ValidatingField")]);
    m_validating_field_isSet = !json[QString("ValidatingField")].isNull() && m_validating_field_isValid;

    m_value_to_validate_isValid = ::OpenAPI::fromJsonValue(m_value_to_validate, json[QString("ValueToValidate")]);
    m_value_to_validate_isSet = !json[QString("ValueToValidate")].isNull() && m_value_to_validate_isValid;

    m_version_isValid = ::OpenAPI::fromJsonValue(m_version, json[QString("Version")]);
    m_version_isSet = !json[QString("Version")].isNull() && m_version_isValid;
}

QString OAIUpdateSystem_Models_UpdateGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpdateSystem_Models_UpdateGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_id_isSet) {
        obj.insert(QString("ID"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_inventory_frequency_isSet) {
        obj.insert(QString("InventoryFrequency"), ::OpenAPI::toJsonValue(m_inventory_frequency));
    }
    if (m_inventory_package_isSet) {
        obj.insert(QString("InventoryPackage"), ::OpenAPI::toJsonValue(m_inventory_package));
    }
    if (m_localized_description_isSet) {
        obj.insert(QString("LocalizedDescription"), ::OpenAPI::toJsonValue(m_localized_description));
    }
    if (m_localized_name_isSet) {
        obj.insert(QString("LocalizedName"), ::OpenAPI::toJsonValue(m_localized_name));
    }
    if (m_priority_isSet) {
        obj.insert(QString("Priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    if (m_report_field_isSet) {
        obj.insert(QString("ReportField"), ::OpenAPI::toJsonValue(m_report_field));
    }
    if (m_update_type_isSet) {
        obj.insert(QString("UpdateType"), ::OpenAPI::toJsonValue(m_update_type));
    }
    if (m_validating_field_isSet) {
        obj.insert(QString("ValidatingField"), ::OpenAPI::toJsonValue(m_validating_field));
    }
    if (m_value_to_validate_isSet) {
        obj.insert(QString("ValueToValidate"), ::OpenAPI::toJsonValue(m_value_to_validate));
    }
    if (m_version_isSet) {
        obj.insert(QString("Version"), ::OpenAPI::toJsonValue(m_version));
    }
    return obj;
}

QString OAIUpdateSystem_Models_UpdateGroup::getDescription() const {
    return m_description;
}
void OAIUpdateSystem_Models_UpdateGroup::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_description_Set() const{
    return m_description_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIUpdateSystem_Models_UpdateGroup::getId() const {
    return m_id;
}
void OAIUpdateSystem_Models_UpdateGroup::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_id_Set() const{
    return m_id_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_id_Valid() const{
    return m_id_isValid;
}

qint32 OAIUpdateSystem_Models_UpdateGroup::getInventoryFrequency() const {
    return m_inventory_frequency;
}
void OAIUpdateSystem_Models_UpdateGroup::setInventoryFrequency(const qint32 &inventory_frequency) {
    m_inventory_frequency = inventory_frequency;
    m_inventory_frequency_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_inventory_frequency_Set() const{
    return m_inventory_frequency_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_inventory_frequency_Valid() const{
    return m_inventory_frequency_isValid;
}

QString OAIUpdateSystem_Models_UpdateGroup::getInventoryPackage() const {
    return m_inventory_package;
}
void OAIUpdateSystem_Models_UpdateGroup::setInventoryPackage(const QString &inventory_package) {
    m_inventory_package = inventory_package;
    m_inventory_package_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_inventory_package_Set() const{
    return m_inventory_package_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_inventory_package_Valid() const{
    return m_inventory_package_isValid;
}

QString OAIUpdateSystem_Models_UpdateGroup::getLocalizedDescription() const {
    return m_localized_description;
}
void OAIUpdateSystem_Models_UpdateGroup::setLocalizedDescription(const QString &localized_description) {
    m_localized_description = localized_description;
    m_localized_description_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_localized_description_Set() const{
    return m_localized_description_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_localized_description_Valid() const{
    return m_localized_description_isValid;
}

QString OAIUpdateSystem_Models_UpdateGroup::getLocalizedName() const {
    return m_localized_name;
}
void OAIUpdateSystem_Models_UpdateGroup::setLocalizedName(const QString &localized_name) {
    m_localized_name = localized_name;
    m_localized_name_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_localized_name_Set() const{
    return m_localized_name_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_localized_name_Valid() const{
    return m_localized_name_isValid;
}

qint32 OAIUpdateSystem_Models_UpdateGroup::getPriority() const {
    return m_priority;
}
void OAIUpdateSystem_Models_UpdateGroup::setPriority(const qint32 &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_priority_Valid() const{
    return m_priority_isValid;
}

QString OAIUpdateSystem_Models_UpdateGroup::getReportField() const {
    return m_report_field;
}
void OAIUpdateSystem_Models_UpdateGroup::setReportField(const QString &report_field) {
    m_report_field = report_field;
    m_report_field_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_report_field_Set() const{
    return m_report_field_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_report_field_Valid() const{
    return m_report_field_isValid;
}

QString OAIUpdateSystem_Models_UpdateGroup::getUpdateType() const {
    return m_update_type;
}
void OAIUpdateSystem_Models_UpdateGroup::setUpdateType(const QString &update_type) {
    m_update_type = update_type;
    m_update_type_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_update_type_Set() const{
    return m_update_type_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_update_type_Valid() const{
    return m_update_type_isValid;
}

QString OAIUpdateSystem_Models_UpdateGroup::getValidatingField() const {
    return m_validating_field;
}
void OAIUpdateSystem_Models_UpdateGroup::setValidatingField(const QString &validating_field) {
    m_validating_field = validating_field;
    m_validating_field_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_validating_field_Set() const{
    return m_validating_field_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_validating_field_Valid() const{
    return m_validating_field_isValid;
}

QString OAIUpdateSystem_Models_UpdateGroup::getValueToValidate() const {
    return m_value_to_validate;
}
void OAIUpdateSystem_Models_UpdateGroup::setValueToValidate(const QString &value_to_validate) {
    m_value_to_validate = value_to_validate;
    m_value_to_validate_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_value_to_validate_Set() const{
    return m_value_to_validate_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_value_to_validate_Valid() const{
    return m_value_to_validate_isValid;
}

QByteArray OAIUpdateSystem_Models_UpdateGroup::getVersion() const {
    return m_version;
}
void OAIUpdateSystem_Models_UpdateGroup::setVersion(const QByteArray &version) {
    m_version = version;
    m_version_isSet = true;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_version_Set() const{
    return m_version_isSet;
}

bool OAIUpdateSystem_Models_UpdateGroup::is_version_Valid() const{
    return m_version_isValid;
}

bool OAIUpdateSystem_Models_UpdateGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inventory_frequency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_inventory_package_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_localized_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_localized_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_priority_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_report_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_update_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_validating_field_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_value_to_validate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_version_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpdateSystem_Models_UpdateGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_description_isValid && m_priority_isValid && m_update_type_isValid && true;
}

} // namespace OpenAPI
