/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOASSupport_Shared_Models_TranslationKey.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOASSupport_Shared_Models_TranslationKey::OAIOASSupport_Shared_Models_TranslationKey(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOASSupport_Shared_Models_TranslationKey::OAIOASSupport_Shared_Models_TranslationKey() {
    this->initializeModel();
}

OAIOASSupport_Shared_Models_TranslationKey::~OAIOASSupport_Shared_Models_TranslationKey() {}

void OAIOASSupport_Shared_Models_TranslationKey::initializeModel() {

    m_id_isSet = false;
    m_id_isValid = false;

    m_key_name_isSet = false;
    m_key_name_isValid = false;

    m_string_id_isSet = false;
    m_string_id_isValid = false;
}

void OAIOASSupport_Shared_Models_TranslationKey::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOASSupport_Shared_Models_TranslationKey::fromJsonObject(QJsonObject json) {

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("ID")]);
    m_id_isSet = !json[QString("ID")].isNull() && m_id_isValid;

    m_key_name_isValid = ::OpenAPI::fromJsonValue(m_key_name, json[QString("KeyName")]);
    m_key_name_isSet = !json[QString("KeyName")].isNull() && m_key_name_isValid;

    m_string_id_isValid = ::OpenAPI::fromJsonValue(m_string_id, json[QString("StringID")]);
    m_string_id_isSet = !json[QString("StringID")].isNull() && m_string_id_isValid;
}

QString OAIOASSupport_Shared_Models_TranslationKey::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOASSupport_Shared_Models_TranslationKey::asJsonObject() const {
    QJsonObject obj;
    if (m_id_isSet) {
        obj.insert(QString("ID"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_key_name_isSet) {
        obj.insert(QString("KeyName"), ::OpenAPI::toJsonValue(m_key_name));
    }
    if (m_string_id_isSet) {
        obj.insert(QString("StringID"), ::OpenAPI::toJsonValue(m_string_id));
    }
    return obj;
}

qint32 OAIOASSupport_Shared_Models_TranslationKey::getId() const {
    return m_id;
}
void OAIOASSupport_Shared_Models_TranslationKey::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIOASSupport_Shared_Models_TranslationKey::is_id_Set() const{
    return m_id_isSet;
}

bool OAIOASSupport_Shared_Models_TranslationKey::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIOASSupport_Shared_Models_TranslationKey::getKeyName() const {
    return m_key_name;
}
void OAIOASSupport_Shared_Models_TranslationKey::setKeyName(const QString &key_name) {
    m_key_name = key_name;
    m_key_name_isSet = true;
}

bool OAIOASSupport_Shared_Models_TranslationKey::is_key_name_Set() const{
    return m_key_name_isSet;
}

bool OAIOASSupport_Shared_Models_TranslationKey::is_key_name_Valid() const{
    return m_key_name_isValid;
}

QString OAIOASSupport_Shared_Models_TranslationKey::getStringId() const {
    return m_string_id;
}
void OAIOASSupport_Shared_Models_TranslationKey::setStringId(const QString &string_id) {
    m_string_id = string_id;
    m_string_id_isSet = true;
}

bool OAIOASSupport_Shared_Models_TranslationKey::is_string_id_Set() const{
    return m_string_id_isSet;
}

bool OAIOASSupport_Shared_Models_TranslationKey::is_string_id_Valid() const{
    return m_string_id_isValid;
}

bool OAIOASSupport_Shared_Models_TranslationKey::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_string_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOASSupport_Shared_Models_TranslationKey::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_key_name_isValid && m_string_id_isValid && true;
}

} // namespace OpenAPI
