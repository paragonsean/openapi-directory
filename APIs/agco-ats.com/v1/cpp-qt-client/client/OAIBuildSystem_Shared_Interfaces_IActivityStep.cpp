/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBuildSystem_Shared_Interfaces_IActivityStep.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBuildSystem_Shared_Interfaces_IActivityStep::OAIBuildSystem_Shared_Interfaces_IActivityStep(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBuildSystem_Shared_Interfaces_IActivityStep::OAIBuildSystem_Shared_Interfaces_IActivityStep() {
    this->initializeModel();
}

OAIBuildSystem_Shared_Interfaces_IActivityStep::~OAIBuildSystem_Shared_Interfaces_IActivityStep() {}

void OAIBuildSystem_Shared_Interfaces_IActivityStep::initializeModel() {

    m_activity_id_isSet = false;
    m_activity_id_isValid = false;

    m_activity_step_id_isSet = false;
    m_activity_step_id_isValid = false;

    m_implementation_id_isSet = false;
    m_implementation_id_isValid = false;

    m_parameter_mappings_isSet = false;
    m_parameter_mappings_isValid = false;

    m_run_order_isSet = false;
    m_run_order_isValid = false;

    m_step_id_isSet = false;
    m_step_id_isValid = false;

    m_step_name_isSet = false;
    m_step_name_isValid = false;

    m_use_config_isSet = false;
    m_use_config_isValid = false;
}

void OAIBuildSystem_Shared_Interfaces_IActivityStep::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBuildSystem_Shared_Interfaces_IActivityStep::fromJsonObject(QJsonObject json) {

    m_activity_id_isValid = ::OpenAPI::fromJsonValue(m_activity_id, json[QString("ActivityID")]);
    m_activity_id_isSet = !json[QString("ActivityID")].isNull() && m_activity_id_isValid;

    m_activity_step_id_isValid = ::OpenAPI::fromJsonValue(m_activity_step_id, json[QString("ActivityStepID")]);
    m_activity_step_id_isSet = !json[QString("ActivityStepID")].isNull() && m_activity_step_id_isValid;

    m_implementation_id_isValid = ::OpenAPI::fromJsonValue(m_implementation_id, json[QString("ImplementationID")]);
    m_implementation_id_isSet = !json[QString("ImplementationID")].isNull() && m_implementation_id_isValid;

    m_parameter_mappings_isValid = ::OpenAPI::fromJsonValue(m_parameter_mappings, json[QString("ParameterMappings")]);
    m_parameter_mappings_isSet = !json[QString("ParameterMappings")].isNull() && m_parameter_mappings_isValid;

    m_run_order_isValid = ::OpenAPI::fromJsonValue(m_run_order, json[QString("RunOrder")]);
    m_run_order_isSet = !json[QString("RunOrder")].isNull() && m_run_order_isValid;

    m_step_id_isValid = ::OpenAPI::fromJsonValue(m_step_id, json[QString("StepID")]);
    m_step_id_isSet = !json[QString("StepID")].isNull() && m_step_id_isValid;

    m_step_name_isValid = ::OpenAPI::fromJsonValue(m_step_name, json[QString("StepName")]);
    m_step_name_isSet = !json[QString("StepName")].isNull() && m_step_name_isValid;

    m_use_config_isValid = ::OpenAPI::fromJsonValue(m_use_config, json[QString("UseConfig")]);
    m_use_config_isSet = !json[QString("UseConfig")].isNull() && m_use_config_isValid;
}

QString OAIBuildSystem_Shared_Interfaces_IActivityStep::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBuildSystem_Shared_Interfaces_IActivityStep::asJsonObject() const {
    QJsonObject obj;
    if (m_activity_id_isSet) {
        obj.insert(QString("ActivityID"), ::OpenAPI::toJsonValue(m_activity_id));
    }
    if (m_activity_step_id_isSet) {
        obj.insert(QString("ActivityStepID"), ::OpenAPI::toJsonValue(m_activity_step_id));
    }
    if (m_implementation_id_isSet) {
        obj.insert(QString("ImplementationID"), ::OpenAPI::toJsonValue(m_implementation_id));
    }
    if (m_parameter_mappings.size() > 0) {
        obj.insert(QString("ParameterMappings"), ::OpenAPI::toJsonValue(m_parameter_mappings));
    }
    if (m_run_order_isSet) {
        obj.insert(QString("RunOrder"), ::OpenAPI::toJsonValue(m_run_order));
    }
    if (m_step_id_isSet) {
        obj.insert(QString("StepID"), ::OpenAPI::toJsonValue(m_step_id));
    }
    if (m_step_name_isSet) {
        obj.insert(QString("StepName"), ::OpenAPI::toJsonValue(m_step_name));
    }
    if (m_use_config_isSet) {
        obj.insert(QString("UseConfig"), ::OpenAPI::toJsonValue(m_use_config));
    }
    return obj;
}

qint32 OAIBuildSystem_Shared_Interfaces_IActivityStep::getActivityId() const {
    return m_activity_id;
}
void OAIBuildSystem_Shared_Interfaces_IActivityStep::setActivityId(const qint32 &activity_id) {
    m_activity_id = activity_id;
    m_activity_id_isSet = true;
}

bool OAIBuildSystem_Shared_Interfaces_IActivityStep::is_activity_id_Set() const{
    return m_activity_id_isSet;
}

bool OAIBuildSystem_Shared_Interfaces_IActivityStep::is_activity_id_Valid() const{
    return m_activity_id_isValid;
}

qint32 OAIBuildSystem_Shared_Interfaces_IActivityStep::getActivityStepId() const {
    return m_activity_step_id;
}
void OAIBuildSystem_Shared_Interfaces_IActivityStep::setActivityStepId(const qint32 &activity_step_id) {
    m_activity_step_id = activity_step_id;
    m_activity_step_id_isSet = true;
}

bool OAIBuildSystem_Shared_Interfaces_IActivityStep::is_activity_step_id_Set() const{
    return m_activity_step_id_isSet;
}

bool OAIBuildSystem_Shared_Interfaces_IActivityStep::is_activity_step_id_Valid() const{
    return m_activity_step_id_isValid;
}

QString OAIBuildSystem_Shared_Interfaces_IActivityStep::getImplementationId() const {
    return m_implementation_id;
}
void OAIBuildSystem_Shared_Interfaces_IActivityStep::setImplementationId(const QString &implementation_id) {
    m_implementation_id = implementation_id;
    m_implementation_id_isSet = true;
}

bool OAIBuildSystem_Shared_Interfaces_IActivityStep::is_implementation_id_Set() const{
    return m_implementation_id_isSet;
}

bool OAIBuildSystem_Shared_Interfaces_IActivityStep::is_implementation_id_Valid() const{
    return m_implementation_id_isValid;
}

QList<OAIBuildSystem_Shared_Interfaces_IParameterMapping> OAIBuildSystem_Shared_Interfaces_IActivityStep::getParameterMappings() const {
    return m_parameter_mappings;
}
void OAIBuildSystem_Shared_Interfaces_IActivityStep::setParameterMappings(const QList<OAIBuildSystem_Shared_Interfaces_IParameterMapping> &parameter_mappings) {
    m_parameter_mappings = parameter_mappings;
    m_parameter_mappings_isSet = true;
}

bool OAIBuildSystem_Shared_Interfaces_IActivityStep::is_parameter_mappings_Set() const{
    return m_parameter_mappings_isSet;
}

bool OAIBuildSystem_Shared_Interfaces_IActivityStep::is_parameter_mappings_Valid() const{
    return m_parameter_mappings_isValid;
}

qint32 OAIBuildSystem_Shared_Interfaces_IActivityStep::getRunOrder() const {
    return m_run_order;
}
void OAIBuildSystem_Shared_Interfaces_IActivityStep::setRunOrder(const qint32 &run_order) {
    m_run_order = run_order;
    m_run_order_isSet = true;
}

bool OAIBuildSystem_Shared_Interfaces_IActivityStep::is_run_order_Set() const{
    return m_run_order_isSet;
}

bool OAIBuildSystem_Shared_Interfaces_IActivityStep::is_run_order_Valid() const{
    return m_run_order_isValid;
}

qint32 OAIBuildSystem_Shared_Interfaces_IActivityStep::getStepId() const {
    return m_step_id;
}
void OAIBuildSystem_Shared_Interfaces_IActivityStep::setStepId(const qint32 &step_id) {
    m_step_id = step_id;
    m_step_id_isSet = true;
}

bool OAIBuildSystem_Shared_Interfaces_IActivityStep::is_step_id_Set() const{
    return m_step_id_isSet;
}

bool OAIBuildSystem_Shared_Interfaces_IActivityStep::is_step_id_Valid() const{
    return m_step_id_isValid;
}

QString OAIBuildSystem_Shared_Interfaces_IActivityStep::getStepName() const {
    return m_step_name;
}
void OAIBuildSystem_Shared_Interfaces_IActivityStep::setStepName(const QString &step_name) {
    m_step_name = step_name;
    m_step_name_isSet = true;
}

bool OAIBuildSystem_Shared_Interfaces_IActivityStep::is_step_name_Set() const{
    return m_step_name_isSet;
}

bool OAIBuildSystem_Shared_Interfaces_IActivityStep::is_step_name_Valid() const{
    return m_step_name_isValid;
}

QString OAIBuildSystem_Shared_Interfaces_IActivityStep::getUseConfig() const {
    return m_use_config;
}
void OAIBuildSystem_Shared_Interfaces_IActivityStep::setUseConfig(const QString &use_config) {
    m_use_config = use_config;
    m_use_config_isSet = true;
}

bool OAIBuildSystem_Shared_Interfaces_IActivityStep::is_use_config_Set() const{
    return m_use_config_isSet;
}

bool OAIBuildSystem_Shared_Interfaces_IActivityStep::is_use_config_Valid() const{
    return m_use_config_isValid;
}

bool OAIBuildSystem_Shared_Interfaces_IActivityStep::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_activity_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_activity_step_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_implementation_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parameter_mappings.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_run_order_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_step_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_step_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_use_config_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBuildSystem_Shared_Interfaces_IActivityStep::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
