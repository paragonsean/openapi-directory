/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBuildSystem_Shared_Interfaces_IParameterMapping.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBuildSystem_Shared_Interfaces_IParameterMapping::OAIBuildSystem_Shared_Interfaces_IParameterMapping(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBuildSystem_Shared_Interfaces_IParameterMapping::OAIBuildSystem_Shared_Interfaces_IParameterMapping() {
    this->initializeModel();
}

OAIBuildSystem_Shared_Interfaces_IParameterMapping::~OAIBuildSystem_Shared_Interfaces_IParameterMapping() {}

void OAIBuildSystem_Shared_Interfaces_IParameterMapping::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_source_isSet = false;
    m_source_isValid = false;

    m_source_type_isSet = false;
    m_source_type_isValid = false;
}

void OAIBuildSystem_Shared_Interfaces_IParameterMapping::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBuildSystem_Shared_Interfaces_IParameterMapping::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_source_isValid = ::OpenAPI::fromJsonValue(m_source, json[QString("Source")]);
    m_source_isSet = !json[QString("Source")].isNull() && m_source_isValid;

    m_source_type_isValid = ::OpenAPI::fromJsonValue(m_source_type, json[QString("SourceType")]);
    m_source_type_isSet = !json[QString("SourceType")].isNull() && m_source_type_isValid;
}

QString OAIBuildSystem_Shared_Interfaces_IParameterMapping::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBuildSystem_Shared_Interfaces_IParameterMapping::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_source_isSet) {
        obj.insert(QString("Source"), ::OpenAPI::toJsonValue(m_source));
    }
    if (m_source_type_isSet) {
        obj.insert(QString("SourceType"), ::OpenAPI::toJsonValue(m_source_type));
    }
    return obj;
}

QString OAIBuildSystem_Shared_Interfaces_IParameterMapping::getName() const {
    return m_name;
}
void OAIBuildSystem_Shared_Interfaces_IParameterMapping::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIBuildSystem_Shared_Interfaces_IParameterMapping::is_name_Set() const{
    return m_name_isSet;
}

bool OAIBuildSystem_Shared_Interfaces_IParameterMapping::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIBuildSystem_Shared_Interfaces_IParameterMapping::getSource() const {
    return m_source;
}
void OAIBuildSystem_Shared_Interfaces_IParameterMapping::setSource(const QString &source) {
    m_source = source;
    m_source_isSet = true;
}

bool OAIBuildSystem_Shared_Interfaces_IParameterMapping::is_source_Set() const{
    return m_source_isSet;
}

bool OAIBuildSystem_Shared_Interfaces_IParameterMapping::is_source_Valid() const{
    return m_source_isValid;
}

QString OAIBuildSystem_Shared_Interfaces_IParameterMapping::getSourceType() const {
    return m_source_type;
}
void OAIBuildSystem_Shared_Interfaces_IParameterMapping::setSourceType(const QString &source_type) {
    m_source_type = source_type;
    m_source_type_isSet = true;
}

bool OAIBuildSystem_Shared_Interfaces_IParameterMapping::is_source_type_Set() const{
    return m_source_type_isSet;
}

bool OAIBuildSystem_Shared_Interfaces_IParameterMapping::is_source_type_Valid() const{
    return m_source_type_isValid;
}

bool OAIBuildSystem_Shared_Interfaces_IParameterMapping::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_source_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBuildSystem_Shared_Interfaces_IParameterMapping::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
