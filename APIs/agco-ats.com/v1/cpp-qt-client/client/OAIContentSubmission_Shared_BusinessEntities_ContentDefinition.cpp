/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIContentSubmission_Shared_BusinessEntities_ContentDefinition.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::OAIContentSubmission_Shared_BusinessEntities_ContentDefinition(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::OAIContentSubmission_Shared_BusinessEntities_ContentDefinition() {
    this->initializeModel();
}

OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::~OAIContentSubmission_Shared_BusinessEntities_ContentDefinition() {}

void OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::initializeModel() {

    m_attributes_isSet = false;
    m_attributes_isValid = false;

    m_content_definition_id_isSet = false;
    m_content_definition_id_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_package_type_id_isSet = false;
    m_package_type_id_isValid = false;

    m_type_id_isSet = false;
    m_type_id_isValid = false;
}

void OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::fromJsonObject(QJsonObject json) {

    m_attributes_isValid = ::OpenAPI::fromJsonValue(m_attributes, json[QString("Attributes")]);
    m_attributes_isSet = !json[QString("Attributes")].isNull() && m_attributes_isValid;

    m_content_definition_id_isValid = ::OpenAPI::fromJsonValue(m_content_definition_id, json[QString("ContentDefinitionID")]);
    m_content_definition_id_isSet = !json[QString("ContentDefinitionID")].isNull() && m_content_definition_id_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("Description")]);
    m_description_isSet = !json[QString("Description")].isNull() && m_description_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("Name")]);
    m_name_isSet = !json[QString("Name")].isNull() && m_name_isValid;

    m_package_type_id_isValid = ::OpenAPI::fromJsonValue(m_package_type_id, json[QString("PackageTypeID")]);
    m_package_type_id_isSet = !json[QString("PackageTypeID")].isNull() && m_package_type_id_isValid;

    m_type_id_isValid = ::OpenAPI::fromJsonValue(m_type_id, json[QString("TypeID")]);
    m_type_id_isSet = !json[QString("TypeID")].isNull() && m_type_id_isValid;
}

QString OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::asJsonObject() const {
    QJsonObject obj;
    if (m_attributes.size() > 0) {
        obj.insert(QString("Attributes"), ::OpenAPI::toJsonValue(m_attributes));
    }
    if (m_content_definition_id_isSet) {
        obj.insert(QString("ContentDefinitionID"), ::OpenAPI::toJsonValue(m_content_definition_id));
    }
    if (m_description_isSet) {
        obj.insert(QString("Description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_name_isSet) {
        obj.insert(QString("Name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_package_type_id_isSet) {
        obj.insert(QString("PackageTypeID"), ::OpenAPI::toJsonValue(m_package_type_id));
    }
    if (m_type_id_isSet) {
        obj.insert(QString("TypeID"), ::OpenAPI::toJsonValue(m_type_id));
    }
    return obj;
}

QList<OAIContentSubmission_Shared_BusinessEntities_ContentDefinitionAttribute> OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::getAttributes() const {
    return m_attributes;
}
void OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::setAttributes(const QList<OAIContentSubmission_Shared_BusinessEntities_ContentDefinitionAttribute> &attributes) {
    m_attributes = attributes;
    m_attributes_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::is_attributes_Set() const{
    return m_attributes_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::is_attributes_Valid() const{
    return m_attributes_isValid;
}

qint32 OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::getContentDefinitionId() const {
    return m_content_definition_id;
}
void OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::setContentDefinitionId(const qint32 &content_definition_id) {
    m_content_definition_id = content_definition_id;
    m_content_definition_id_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::is_content_definition_id_Set() const{
    return m_content_definition_id_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::is_content_definition_id_Valid() const{
    return m_content_definition_id_isValid;
}

QString OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::getDescription() const {
    return m_description;
}
void OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::is_description_Set() const{
    return m_description_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::getName() const {
    return m_name;
}
void OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::is_name_Set() const{
    return m_name_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::getPackageTypeId() const {
    return m_package_type_id;
}
void OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::setPackageTypeId(const QString &package_type_id) {
    m_package_type_id = package_type_id;
    m_package_type_id_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::is_package_type_id_Set() const{
    return m_package_type_id_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::is_package_type_id_Valid() const{
    return m_package_type_id_isValid;
}

qint32 OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::getTypeId() const {
    return m_type_id;
}
void OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::setTypeId(const qint32 &type_id) {
    m_type_id = type_id;
    m_type_id_isSet = true;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::is_type_id_Set() const{
    return m_type_id_isSet;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::is_type_id_Valid() const{
    return m_type_id_isValid;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_content_definition_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_package_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIContentSubmission_Shared_BusinessEntities_ContentDefinition::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_description_isValid && true;
}

} // namespace OpenAPI
