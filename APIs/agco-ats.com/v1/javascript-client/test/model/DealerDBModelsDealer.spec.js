/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AgcoApi);
  }
}(this, function(expect, AgcoApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AgcoApi.DealerDBModelsDealer();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DealerDBModelsDealer', function() {
    it('should create an instance of DealerDBModelsDealer', function() {
      // uncomment below and update the code to test DealerDBModelsDealer
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be.a(AgcoApi.DealerDBModelsDealer);
    });

    it('should have the property billingAddress (base name: "BillingAddress")', function() {
      // uncomment below and update the code to test the property billingAddress
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property billingAddress2 (base name: "BillingAddress2")', function() {
      // uncomment below and update the code to test the property billingAddress2
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property billingAddress3 (base name: "BillingAddress3")', function() {
      // uncomment below and update the code to test the property billingAddress3
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property billingAddress4 (base name: "BillingAddress4")', function() {
      // uncomment below and update the code to test the property billingAddress4
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property billingCity (base name: "BillingCity")', function() {
      // uncomment below and update the code to test the property billingCity
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property billingCountry (base name: "BillingCountry")', function() {
      // uncomment below and update the code to test the property billingCountry
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property billingCountryCode (base name: "BillingCountryCode")', function() {
      // uncomment below and update the code to test the property billingCountryCode
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property billingState (base name: "BillingState")', function() {
      // uncomment below and update the code to test the property billingState
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property billingZip (base name: "BillingZip")', function() {
      // uncomment below and update the code to test the property billingZip
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property brands (base name: "Brands")', function() {
      // uncomment below and update the code to test the property brands
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property dealerCode (base name: "DealerCode")', function() {
      // uncomment below and update the code to test the property dealerCode
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property dealerName (base name: "DealerName")', function() {
      // uncomment below and update the code to test the property dealerName
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property dealerStatus (base name: "DealerStatus")', function() {
      // uncomment below and update the code to test the property dealerStatus
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property dealerStatusUpdateDate (base name: "DealerStatusUpdateDate")', function() {
      // uncomment below and update the code to test the property dealerStatusUpdateDate
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property filler (base name: "Filler")', function() {
      // uncomment below and update the code to test the property filler
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property isValid (base name: "IsValid")', function() {
      // uncomment below and update the code to test the property isValid
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property languagePreference (base name: "LanguagePreference")', function() {
      // uncomment below and update the code to test the property languagePreference
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property region1 (base name: "Region1")', function() {
      // uncomment below and update the code to test the property region1
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property region2 (base name: "Region2")', function() {
      // uncomment below and update the code to test the property region2
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property regionMapping (base name: "RegionMapping")', function() {
      // uncomment below and update the code to test the property regionMapping
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property roleBrand (base name: "RoleBrand")', function() {
      // uncomment below and update the code to test the property roleBrand
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property shippingAddress2 (base name: "ShippingAddress2")', function() {
      // uncomment below and update the code to test the property shippingAddress2
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property shippingAddress3 (base name: "ShippingAddress3")', function() {
      // uncomment below and update the code to test the property shippingAddress3
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property shippingAddress4 (base name: "ShippingAddress4")', function() {
      // uncomment below and update the code to test the property shippingAddress4
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property shippingCity (base name: "ShippingCity")', function() {
      // uncomment below and update the code to test the property shippingCity
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property shippingCountry (base name: "ShippingCountry")', function() {
      // uncomment below and update the code to test the property shippingCountry
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property shippingState (base name: "ShippingState")', function() {
      // uncomment below and update the code to test the property shippingState
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property shippingStreet (base name: "ShippingStreet")', function() {
      // uncomment below and update the code to test the property shippingStreet
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property shippingZip (base name: "ShippingZip")', function() {
      // uncomment below and update the code to test the property shippingZip
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property telephone (base name: "Telephone")', function() {
      // uncomment below and update the code to test the property telephone
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

    it('should have the property vATCode (base name: "VATCode")', function() {
      // uncomment below and update the code to test the property vATCode
      //var instance = new AgcoApi.DealerDBModelsDealer();
      //expect(instance).to.be();
    });

  });

}));
