/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.AgcoApi);
  }
}(this, function(expect, AgcoApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new AgcoApi.ReportingApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ReportingApi', function() {
    describe('reportingBundleStatusSummary', function() {
      it('should call reportingBundleStatusSummary successfully', function(done) {
        //uncomment below and update the code to test reportingBundleStatusSummary
        //instance.reportingBundleStatusSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportingBundlesInUpdateGroup', function() {
      it('should call reportingBundlesInUpdateGroup successfully', function(done) {
        //uncomment below and update the code to test reportingBundlesInUpdateGroup
        //instance.reportingBundlesInUpdateGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportingClientInfo', function() {
      it('should call reportingClientInfo successfully', function(done) {
        //uncomment below and update the code to test reportingClientInfo
        //instance.reportingClientInfo(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportingCurrentPackagesInUpdateGroup', function() {
      it('should call reportingCurrentPackagesInUpdateGroup successfully', function(done) {
        //uncomment below and update the code to test reportingCurrentPackagesInUpdateGroup
        //instance.reportingCurrentPackagesInUpdateGroup(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportingGetClient', function() {
      it('should call reportingGetClient successfully', function(done) {
        //uncomment below and update the code to test reportingGetClient
        //instance.reportingGetClient(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportingGetSubscriptions', function() {
      it('should call reportingGetSubscriptions successfully', function(done) {
        //uncomment below and update the code to test reportingGetSubscriptions
        //instance.reportingGetSubscriptions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportingPackageStatusSummary', function() {
      it('should call reportingPackageStatusSummary successfully', function(done) {
        //uncomment below and update the code to test reportingPackageStatusSummary
        //instance.reportingPackageStatusSummary(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportingRegisteredClients', function() {
      it('should call reportingRegisteredClients successfully', function(done) {
        //uncomment below and update the code to test reportingRegisteredClients
        //instance.reportingRegisteredClients(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportingUpdateGroups', function() {
      it('should call reportingUpdateGroups successfully', function(done) {
        //uncomment below and update the code to test reportingUpdateGroups
        //instance.reportingUpdateGroups(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('reportingUpdateMetrics', function() {
      it('should call reportingUpdateMetrics successfully', function(done) {
        //uncomment below and update the code to test reportingUpdateMetrics
        //instance.reportingUpdateMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
