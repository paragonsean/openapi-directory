/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateSystemModelsPackageTypeIDtoBundle model module.
 * @module model/UpdateSystemModelsPackageTypeIDtoBundle
 * @version v1
 */
class UpdateSystemModelsPackageTypeIDtoBundle {
    /**
     * Constructs a new <code>UpdateSystemModelsPackageTypeIDtoBundle</code>.
     * @alias module:model/UpdateSystemModelsPackageTypeIDtoBundle
     * @param bundleID {String} The bundle to include the package in.
     * @param packageTypeID {String} The package type id of the package to include
     * @param packageVersion {Number} The package version of the package to include
     * @param priority {Number} The execution priority of the package relative to other packages in the bundle. Range 1 - 100, lower value indication higher priority.
     */
    constructor(bundleID, packageTypeID, packageVersion, priority) { 
        
        UpdateSystemModelsPackageTypeIDtoBundle.initialize(this, bundleID, packageTypeID, packageVersion, priority);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, bundleID, packageTypeID, packageVersion, priority) { 
        obj['BundleID'] = bundleID;
        obj['PackageTypeID'] = packageTypeID;
        obj['PackageVersion'] = packageVersion;
        obj['Priority'] = priority;
    }

    /**
     * Constructs a <code>UpdateSystemModelsPackageTypeIDtoBundle</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateSystemModelsPackageTypeIDtoBundle} obj Optional instance to populate.
     * @return {module:model/UpdateSystemModelsPackageTypeIDtoBundle} The populated <code>UpdateSystemModelsPackageTypeIDtoBundle</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateSystemModelsPackageTypeIDtoBundle();

            if (data.hasOwnProperty('BundleID')) {
                obj['BundleID'] = ApiClient.convertToType(data['BundleID'], 'String');
            }
            if (data.hasOwnProperty('PackageTypeID')) {
                obj['PackageTypeID'] = ApiClient.convertToType(data['PackageTypeID'], 'String');
            }
            if (data.hasOwnProperty('PackageVersion')) {
                obj['PackageVersion'] = ApiClient.convertToType(data['PackageVersion'], 'Number');
            }
            if (data.hasOwnProperty('Priority')) {
                obj['Priority'] = ApiClient.convertToType(data['Priority'], 'Number');
            }
            if (data.hasOwnProperty('SubscriptionType')) {
                obj['SubscriptionType'] = ApiClient.convertToType(data['SubscriptionType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateSystemModelsPackageTypeIDtoBundle</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateSystemModelsPackageTypeIDtoBundle</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateSystemModelsPackageTypeIDtoBundle.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['BundleID'] && !(typeof data['BundleID'] === 'string' || data['BundleID'] instanceof String)) {
            throw new Error("Expected the field `BundleID` to be a primitive type in the JSON string but got " + data['BundleID']);
        }
        // ensure the json data is a string
        if (data['PackageTypeID'] && !(typeof data['PackageTypeID'] === 'string' || data['PackageTypeID'] instanceof String)) {
            throw new Error("Expected the field `PackageTypeID` to be a primitive type in the JSON string but got " + data['PackageTypeID']);
        }
        // ensure the json data is a string
        if (data['SubscriptionType'] && !(typeof data['SubscriptionType'] === 'string' || data['SubscriptionType'] instanceof String)) {
            throw new Error("Expected the field `SubscriptionType` to be a primitive type in the JSON string but got " + data['SubscriptionType']);
        }

        return true;
    }


}

UpdateSystemModelsPackageTypeIDtoBundle.RequiredProperties = ["BundleID", "PackageTypeID", "PackageVersion", "Priority"];

/**
 * The bundle to include the package in.
 * @member {String} BundleID
 */
UpdateSystemModelsPackageTypeIDtoBundle.prototype['BundleID'] = undefined;

/**
 * The package type id of the package to include
 * @member {String} PackageTypeID
 */
UpdateSystemModelsPackageTypeIDtoBundle.prototype['PackageTypeID'] = undefined;

/**
 * The package version of the package to include
 * @member {Number} PackageVersion
 */
UpdateSystemModelsPackageTypeIDtoBundle.prototype['PackageVersion'] = undefined;

/**
 * The execution priority of the package relative to other packages in the bundle. Range 1 - 100, lower value indication higher priority.
 * @member {Number} Priority
 */
UpdateSystemModelsPackageTypeIDtoBundle.prototype['Priority'] = undefined;

/**
 * Optional. The type of subscription supported.  The default subscription type is Required.
 * @member {module:model/UpdateSystemModelsPackageTypeIDtoBundle.SubscriptionTypeEnum} SubscriptionType
 */
UpdateSystemModelsPackageTypeIDtoBundle.prototype['SubscriptionType'] = undefined;





/**
 * Allowed values for the <code>SubscriptionType</code> property.
 * @enum {String}
 * @readonly
 */
UpdateSystemModelsPackageTypeIDtoBundle['SubscriptionTypeEnum'] = {

    /**
     * value: "Required"
     * @const
     */
    "Required": "Required",

    /**
     * value: "IncludeByDefault"
     * @const
     */
    "IncludeByDefault": "IncludeByDefault",

    /**
     * value: "ExcludeByDefault"
     * @const
     */
    "ExcludeByDefault": "ExcludeByDefault"
};



export default UpdateSystemModelsPackageTypeIDtoBundle;

