/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContentSubmissionSharedBusinessEntitiesContentSubmissionType model module.
 * @module model/ContentSubmissionSharedBusinessEntitiesContentSubmissionType
 * @version v1
 */
class ContentSubmissionSharedBusinessEntitiesContentSubmissionType {
    /**
     * Constructs a new <code>ContentSubmissionSharedBusinessEntitiesContentSubmissionType</code>.
     * A type of content available for submission
     * @alias module:model/ContentSubmissionSharedBusinessEntitiesContentSubmissionType
     * @param description {String} A description for the Content Submission Type
     * @param name {String} The Name of the Content Submission Type
     */
    constructor(description, name) { 
        
        ContentSubmissionSharedBusinessEntitiesContentSubmissionType.initialize(this, description, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, description, name) { 
        obj['Description'] = description;
        obj['Name'] = name;
    }

    /**
     * Constructs a <code>ContentSubmissionSharedBusinessEntitiesContentSubmissionType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContentSubmissionSharedBusinessEntitiesContentSubmissionType} obj Optional instance to populate.
     * @return {module:model/ContentSubmissionSharedBusinessEntitiesContentSubmissionType} The populated <code>ContentSubmissionSharedBusinessEntitiesContentSubmissionType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContentSubmissionSharedBusinessEntitiesContentSubmissionType();

            if (data.hasOwnProperty('AttributeTemplate')) {
                obj['AttributeTemplate'] = ApiClient.convertToType(data['AttributeTemplate'], 'String');
            }
            if (data.hasOwnProperty('BuildDefinitionID')) {
                obj['BuildDefinitionID'] = ApiClient.convertToType(data['BuildDefinitionID'], 'Number');
            }
            if (data.hasOwnProperty('CategoryTemplate')) {
                obj['CategoryTemplate'] = ApiClient.convertToType(data['CategoryTemplate'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Enabled')) {
                obj['Enabled'] = ApiClient.convertToType(data['Enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('ID')) {
                obj['ID'] = ApiClient.convertToType(data['ID'], 'Number');
            }
            if (data.hasOwnProperty('InventoryPackageID')) {
                obj['InventoryPackageID'] = ApiClient.convertToType(data['InventoryPackageID'], 'String');
            }
            if (data.hasOwnProperty('JobID')) {
                obj['JobID'] = ApiClient.convertToType(data['JobID'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('ReleaseNotesDescription')) {
                obj['ReleaseNotesDescription'] = ApiClient.convertToType(data['ReleaseNotesDescription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContentSubmissionSharedBusinessEntitiesContentSubmissionType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContentSubmissionSharedBusinessEntitiesContentSubmissionType</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ContentSubmissionSharedBusinessEntitiesContentSubmissionType.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['AttributeTemplate'] && !(typeof data['AttributeTemplate'] === 'string' || data['AttributeTemplate'] instanceof String)) {
            throw new Error("Expected the field `AttributeTemplate` to be a primitive type in the JSON string but got " + data['AttributeTemplate']);
        }
        // ensure the json data is a string
        if (data['CategoryTemplate'] && !(typeof data['CategoryTemplate'] === 'string' || data['CategoryTemplate'] instanceof String)) {
            throw new Error("Expected the field `CategoryTemplate` to be a primitive type in the JSON string but got " + data['CategoryTemplate']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['InventoryPackageID'] && !(typeof data['InventoryPackageID'] === 'string' || data['InventoryPackageID'] instanceof String)) {
            throw new Error("Expected the field `InventoryPackageID` to be a primitive type in the JSON string but got " + data['InventoryPackageID']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['ReleaseNotesDescription'] && !(typeof data['ReleaseNotesDescription'] === 'string' || data['ReleaseNotesDescription'] instanceof String)) {
            throw new Error("Expected the field `ReleaseNotesDescription` to be a primitive type in the JSON string but got " + data['ReleaseNotesDescription']);
        }

        return true;
    }


}

ContentSubmissionSharedBusinessEntitiesContentSubmissionType.RequiredProperties = ["Description", "Name"];

/**
 * A template for the Attribute from which to read the version of the package installed. The following placeholders are valid: {ContentDefinitionType}, {ContentDefinitionID}, {ContentDefinitionName}
 * @member {String} AttributeTemplate
 */
ContentSubmissionSharedBusinessEntitiesContentSubmissionType.prototype['AttributeTemplate'] = undefined;

/**
 * The ID of the Azure DevOps Build Definition for which to create a Build. Either 'BuildDefinitionID' or 'JobID' is required.
 * @member {Number} BuildDefinitionID
 */
ContentSubmissionSharedBusinessEntitiesContentSubmissionType.prototype['BuildDefinitionID'] = undefined;

/**
 * A template for the category from which to read the version of the package installed. The following placeholders are valid: {ContentDefinitionType}, {ContentDefinitionID}, {ContentDefinitionName}
 * @member {String} CategoryTemplate
 */
ContentSubmissionSharedBusinessEntitiesContentSubmissionType.prototype['CategoryTemplate'] = undefined;

/**
 * A description for the Content Submission Type
 * @member {String} Description
 */
ContentSubmissionSharedBusinessEntitiesContentSubmissionType.prototype['Description'] = undefined;

/**
 * Indicates whether this submission type is available to be used
 * @member {Boolean} Enabled
 */
ContentSubmissionSharedBusinessEntitiesContentSubmissionType.prototype['Enabled'] = undefined;

/**
 * The ID of the Content Submission Type
 * @member {Number} ID
 */
ContentSubmissionSharedBusinessEntitiesContentSubmissionType.prototype['ID'] = undefined;

/**
 * The ID of the Inventory Package from which to read the version of the package installed.
 * @member {String} InventoryPackageID
 */
ContentSubmissionSharedBusinessEntitiesContentSubmissionType.prototype['InventoryPackageID'] = undefined;

/**
 * The ID of the JobDefinition for which to initiate a Job. A value of '0' will cause a submission to fail. Either 'BuildDefinitionID' or 'JobID' is required.
 * @member {Number} JobID
 */
ContentSubmissionSharedBusinessEntitiesContentSubmissionType.prototype['JobID'] = undefined;

/**
 * The Name of the Content Submission Type
 * @member {String} Name
 */
ContentSubmissionSharedBusinessEntitiesContentSubmissionType.prototype['Name'] = undefined;

/**
 * A description of how release notes for this Content Submission Type are used
 * @member {String} ReleaseNotesDescription
 */
ContentSubmissionSharedBusinessEntitiesContentSubmissionType.prototype['ReleaseNotesDescription'] = undefined;






export default ContentSubmissionSharedBusinessEntitiesContentSubmissionType;

