/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BuildSystemSharedDTOStepConfiguration model module.
 * @module model/BuildSystemSharedDTOStepConfiguration
 * @version v1
 */
class BuildSystemSharedDTOStepConfiguration {
    /**
     * Constructs a new <code>BuildSystemSharedDTOStepConfiguration</code>.
     * Step Configuration
     * @alias module:model/BuildSystemSharedDTOStepConfiguration
     * @param stepImplementationID {String} The Implementation ID of the step this configuration is for
     */
    constructor(stepImplementationID) { 
        
        BuildSystemSharedDTOStepConfiguration.initialize(this, stepImplementationID);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, stepImplementationID) { 
        obj['StepImplementationID'] = stepImplementationID;
    }

    /**
     * Constructs a <code>BuildSystemSharedDTOStepConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildSystemSharedDTOStepConfiguration} obj Optional instance to populate.
     * @return {module:model/BuildSystemSharedDTOStepConfiguration} The populated <code>BuildSystemSharedDTOStepConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildSystemSharedDTOStepConfiguration();

            if (data.hasOwnProperty('Configurations')) {
                obj['Configurations'] = ApiClient.convertToType(data['Configurations'], ['String']);
            }
            if (data.hasOwnProperty('StepImplementationID')) {
                obj['StepImplementationID'] = ApiClient.convertToType(data['StepImplementationID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildSystemSharedDTOStepConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildSystemSharedDTOStepConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BuildSystemSharedDTOStepConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['Configurations'])) {
            throw new Error("Expected the field `Configurations` to be an array in the JSON data but got " + data['Configurations']);
        }
        // ensure the json data is a string
        if (data['StepImplementationID'] && !(typeof data['StepImplementationID'] === 'string' || data['StepImplementationID'] instanceof String)) {
            throw new Error("Expected the field `StepImplementationID` to be a primitive type in the JSON string but got " + data['StepImplementationID']);
        }

        return true;
    }


}

BuildSystemSharedDTOStepConfiguration.RequiredProperties = ["StepImplementationID"];

/**
 * The configuration names supported.  The configurations collection is empty for steps which do not require configuration.
 * @member {Array.<String>} Configurations
 */
BuildSystemSharedDTOStepConfiguration.prototype['Configurations'] = undefined;

/**
 * The Implementation ID of the step this configuration is for
 * @member {String} StepImplementationID
 */
BuildSystemSharedDTOStepConfiguration.prototype['StepImplementationID'] = undefined;






export default BuildSystemSharedDTOStepConfiguration;

