/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuildSystemSharedDTOActivityRunStatus from './BuildSystemSharedDTOActivityRunStatus';
import BuildSystemSharedDTOActivityStep from './BuildSystemSharedDTOActivityStep';
import BuildSystemSharedDTOParameterValue from './BuildSystemSharedDTOParameterValue';

/**
 * The BuildSystemSharedDTOActivityRun model module.
 * @module model/BuildSystemSharedDTOActivityRun
 * @version v1
 */
class BuildSystemSharedDTOActivityRun {
    /**
     * Constructs a new <code>BuildSystemSharedDTOActivityRun</code>.
     * A DTO for an IActivityRun
     * @alias module:model/BuildSystemSharedDTOActivityRun
     * @param status {module:model/BuildSystemSharedDTOActivityRunStatus} 
     */
    constructor(status) { 
        
        BuildSystemSharedDTOActivityRun.initialize(this, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, status) { 
        obj['Status'] = status;
    }

    /**
     * Constructs a <code>BuildSystemSharedDTOActivityRun</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildSystemSharedDTOActivityRun} obj Optional instance to populate.
     * @return {module:model/BuildSystemSharedDTOActivityRun} The populated <code>BuildSystemSharedDTOActivityRun</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildSystemSharedDTOActivityRun();

            if (data.hasOwnProperty('ActivityRunID')) {
                obj['ActivityRunID'] = ApiClient.convertToType(data['ActivityRunID'], 'Number');
            }
            if (data.hasOwnProperty('EndDate')) {
                obj['EndDate'] = ApiClient.convertToType(data['EndDate'], 'Date');
            }
            if (data.hasOwnProperty('JobActivityID')) {
                obj['JobActivityID'] = ApiClient.convertToType(data['JobActivityID'], 'Number');
            }
            if (data.hasOwnProperty('JobRunID')) {
                obj['JobRunID'] = ApiClient.convertToType(data['JobRunID'], 'Number');
            }
            if (data.hasOwnProperty('Parameters')) {
                obj['Parameters'] = ApiClient.convertToType(data['Parameters'], [BuildSystemSharedDTOParameterValue]);
            }
            if (data.hasOwnProperty('StartDate')) {
                obj['StartDate'] = ApiClient.convertToType(data['StartDate'], 'Date');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = BuildSystemSharedDTOActivityRunStatus.constructFromObject(data['Status']);
            }
            if (data.hasOwnProperty('Steps')) {
                obj['Steps'] = ApiClient.convertToType(data['Steps'], [BuildSystemSharedDTOActivityStep]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildSystemSharedDTOActivityRun</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildSystemSharedDTOActivityRun</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BuildSystemSharedDTOActivityRun.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['Parameters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Parameters'])) {
                throw new Error("Expected the field `Parameters` to be an array in the JSON data but got " + data['Parameters']);
            }
            // validate the optional field `Parameters` (array)
            for (const item of data['Parameters']) {
                BuildSystemSharedDTOParameterValue.validateJSON(item);
            };
        }
        // validate the optional field `Status`
        if (data['Status']) { // data not null
          BuildSystemSharedDTOActivityRunStatus.validateJSON(data['Status']);
        }
        if (data['Steps']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Steps'])) {
                throw new Error("Expected the field `Steps` to be an array in the JSON data but got " + data['Steps']);
            }
            // validate the optional field `Steps` (array)
            for (const item of data['Steps']) {
                BuildSystemSharedDTOActivityStep.validateJSON(item);
            };
        }

        return true;
    }


}

BuildSystemSharedDTOActivityRun.RequiredProperties = ["Status"];

/**
 * The identifier for the ActivityRun
 * @member {Number} ActivityRunID
 */
BuildSystemSharedDTOActivityRun.prototype['ActivityRunID'] = undefined;

/**
 * Read Only. The UTC date and time when the activity completed
 * @member {Date} EndDate
 */
BuildSystemSharedDTOActivityRun.prototype['EndDate'] = undefined;

/**
 * Read Only. The ID of the Job Activity that defines this activity run
 * @member {Number} JobActivityID
 */
BuildSystemSharedDTOActivityRun.prototype['JobActivityID'] = undefined;

/**
 * Read Only. The ID of the JobRun under which this ActivityRun is executing
 * @member {Number} JobRunID
 */
BuildSystemSharedDTOActivityRun.prototype['JobRunID'] = undefined;

/**
 * The parameters used for this run of the activity.  Parameters cannot be added or removed, but output parameter values may be updated.
 * @member {Array.<module:model/BuildSystemSharedDTOParameterValue>} Parameters
 */
BuildSystemSharedDTOActivityRun.prototype['Parameters'] = undefined;

/**
 * Read Only. The UTC date and time when the activity started
 * @member {Date} StartDate
 */
BuildSystemSharedDTOActivityRun.prototype['StartDate'] = undefined;

/**
 * @member {module:model/BuildSystemSharedDTOActivityRunStatus} Status
 */
BuildSystemSharedDTOActivityRun.prototype['Status'] = undefined;

/**
 * Read Only. The steps to be executed for the activity.  These steps come from the relationship through JobActivity down to ActivityStep
 * @member {Array.<module:model/BuildSystemSharedDTOActivityStep>} Steps
 */
BuildSystemSharedDTOActivityRun.prototype['Steps'] = undefined;






export default BuildSystemSharedDTOActivityRun;

