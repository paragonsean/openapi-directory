/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DealerDBModelsEDTLiteRegistration model module.
 * @module model/DealerDBModelsEDTLiteRegistration
 * @version v1
 */
class DealerDBModelsEDTLiteRegistration {
    /**
     * Constructs a new <code>DealerDBModelsEDTLiteRegistration</code>.
     * Registration for an EDT Lite
     * @alias module:model/DealerDBModelsEDTLiteRegistration
     * @param expirationDate {Date} The date at which the content of the EDT Lite expires.
     * @param instanceID {String} The identifier for the EDT Lite.
     * @param voucherCode {String} The voucher code with which the EDT Lite was created.
     */
    constructor(expirationDate, instanceID, voucherCode) { 
        
        DealerDBModelsEDTLiteRegistration.initialize(this, expirationDate, instanceID, voucherCode);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, expirationDate, instanceID, voucherCode) { 
        obj['ExpirationDate'] = expirationDate;
        obj['InstanceID'] = instanceID;
        obj['VoucherCode'] = voucherCode;
    }

    /**
     * Constructs a <code>DealerDBModelsEDTLiteRegistration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DealerDBModelsEDTLiteRegistration} obj Optional instance to populate.
     * @return {module:model/DealerDBModelsEDTLiteRegistration} The populated <code>DealerDBModelsEDTLiteRegistration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DealerDBModelsEDTLiteRegistration();

            if (data.hasOwnProperty('DealerCode')) {
                obj['DealerCode'] = ApiClient.convertToType(data['DealerCode'], 'String');
            }
            if (data.hasOwnProperty('ExpirationDate')) {
                obj['ExpirationDate'] = ApiClient.convertToType(data['ExpirationDate'], 'Date');
            }
            if (data.hasOwnProperty('InstanceID')) {
                obj['InstanceID'] = ApiClient.convertToType(data['InstanceID'], 'String');
            }
            if (data.hasOwnProperty('VoucherCode')) {
                obj['VoucherCode'] = ApiClient.convertToType(data['VoucherCode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DealerDBModelsEDTLiteRegistration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DealerDBModelsEDTLiteRegistration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DealerDBModelsEDTLiteRegistration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['DealerCode'] && !(typeof data['DealerCode'] === 'string' || data['DealerCode'] instanceof String)) {
            throw new Error("Expected the field `DealerCode` to be a primitive type in the JSON string but got " + data['DealerCode']);
        }
        // ensure the json data is a string
        if (data['InstanceID'] && !(typeof data['InstanceID'] === 'string' || data['InstanceID'] instanceof String)) {
            throw new Error("Expected the field `InstanceID` to be a primitive type in the JSON string but got " + data['InstanceID']);
        }
        // ensure the json data is a string
        if (data['VoucherCode'] && !(typeof data['VoucherCode'] === 'string' || data['VoucherCode'] instanceof String)) {
            throw new Error("Expected the field `VoucherCode` to be a primitive type in the JSON string but got " + data['VoucherCode']);
        }

        return true;
    }


}

DealerDBModelsEDTLiteRegistration.RequiredProperties = ["ExpirationDate", "InstanceID", "VoucherCode"];

/**
 * The dealer code with which the EDT Lite was created.
 * @member {String} DealerCode
 */
DealerDBModelsEDTLiteRegistration.prototype['DealerCode'] = undefined;

/**
 * The date at which the content of the EDT Lite expires.
 * @member {Date} ExpirationDate
 */
DealerDBModelsEDTLiteRegistration.prototype['ExpirationDate'] = undefined;

/**
 * The identifier for the EDT Lite.
 * @member {String} InstanceID
 */
DealerDBModelsEDTLiteRegistration.prototype['InstanceID'] = undefined;

/**
 * The voucher code with which the EDT Lite was created.
 * @member {String} VoucherCode
 */
DealerDBModelsEDTLiteRegistration.prototype['VoucherCode'] = undefined;






export default DealerDBModelsEDTLiteRegistration;

