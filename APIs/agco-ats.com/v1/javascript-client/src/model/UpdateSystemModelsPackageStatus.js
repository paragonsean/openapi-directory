/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateSystemModelsPackageStatus model module.
 * @module model/UpdateSystemModelsPackageStatus
 * @version v1
 */
class UpdateSystemModelsPackageStatus {
    /**
     * Constructs a new <code>UpdateSystemModelsPackageStatus</code>.
     * @alias module:model/UpdateSystemModelsPackageStatus
     */
    constructor() { 
        
        UpdateSystemModelsPackageStatus.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateSystemModelsPackageStatus</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateSystemModelsPackageStatus} obj Optional instance to populate.
     * @return {module:model/UpdateSystemModelsPackageStatus} The populated <code>UpdateSystemModelsPackageStatus</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateSystemModelsPackageStatus();

            if (data.hasOwnProperty('ClientID')) {
                obj['ClientID'] = ApiClient.convertToType(data['ClientID'], 'String');
            }
            if (data.hasOwnProperty('ClientKey')) {
                obj['ClientKey'] = ApiClient.convertToType(data['ClientKey'], 'String');
            }
            if (data.hasOwnProperty('DownloadTime')) {
                obj['DownloadTime'] = ApiClient.convertToType(data['DownloadTime'], 'String');
            }
            if (data.hasOwnProperty('Downloaded')) {
                obj['Downloaded'] = ApiClient.convertToType(data['Downloaded'], 'String');
            }
            if (data.hasOwnProperty('InstallCompleted')) {
                obj['InstallCompleted'] = ApiClient.convertToType(data['InstallCompleted'], 'String');
            }
            if (data.hasOwnProperty('InstallResult')) {
                obj['InstallResult'] = ApiClient.convertToType(data['InstallResult'], 'String');
            }
            if (data.hasOwnProperty('InstallStarted')) {
                obj['InstallStarted'] = ApiClient.convertToType(data['InstallStarted'], 'String');
            }
            if (data.hasOwnProperty('InstallTime')) {
                obj['InstallTime'] = ApiClient.convertToType(data['InstallTime'], 'String');
            }
            if (data.hasOwnProperty('Percentage')) {
                obj['Percentage'] = ApiClient.convertToType(data['Percentage'], 'String');
            }
            if (data.hasOwnProperty('Size')) {
                obj['Size'] = ApiClient.convertToType(data['Size'], 'String');
            }
            if (data.hasOwnProperty('Timestamp')) {
                obj['Timestamp'] = ApiClient.convertToType(data['Timestamp'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateSystemModelsPackageStatus</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateSystemModelsPackageStatus</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ClientID'] && !(typeof data['ClientID'] === 'string' || data['ClientID'] instanceof String)) {
            throw new Error("Expected the field `ClientID` to be a primitive type in the JSON string but got " + data['ClientID']);
        }
        // ensure the json data is a string
        if (data['ClientKey'] && !(typeof data['ClientKey'] === 'string' || data['ClientKey'] instanceof String)) {
            throw new Error("Expected the field `ClientKey` to be a primitive type in the JSON string but got " + data['ClientKey']);
        }
        // ensure the json data is a string
        if (data['DownloadTime'] && !(typeof data['DownloadTime'] === 'string' || data['DownloadTime'] instanceof String)) {
            throw new Error("Expected the field `DownloadTime` to be a primitive type in the JSON string but got " + data['DownloadTime']);
        }
        // ensure the json data is a string
        if (data['Downloaded'] && !(typeof data['Downloaded'] === 'string' || data['Downloaded'] instanceof String)) {
            throw new Error("Expected the field `Downloaded` to be a primitive type in the JSON string but got " + data['Downloaded']);
        }
        // ensure the json data is a string
        if (data['InstallCompleted'] && !(typeof data['InstallCompleted'] === 'string' || data['InstallCompleted'] instanceof String)) {
            throw new Error("Expected the field `InstallCompleted` to be a primitive type in the JSON string but got " + data['InstallCompleted']);
        }
        // ensure the json data is a string
        if (data['InstallResult'] && !(typeof data['InstallResult'] === 'string' || data['InstallResult'] instanceof String)) {
            throw new Error("Expected the field `InstallResult` to be a primitive type in the JSON string but got " + data['InstallResult']);
        }
        // ensure the json data is a string
        if (data['InstallStarted'] && !(typeof data['InstallStarted'] === 'string' || data['InstallStarted'] instanceof String)) {
            throw new Error("Expected the field `InstallStarted` to be a primitive type in the JSON string but got " + data['InstallStarted']);
        }
        // ensure the json data is a string
        if (data['InstallTime'] && !(typeof data['InstallTime'] === 'string' || data['InstallTime'] instanceof String)) {
            throw new Error("Expected the field `InstallTime` to be a primitive type in the JSON string but got " + data['InstallTime']);
        }
        // ensure the json data is a string
        if (data['Percentage'] && !(typeof data['Percentage'] === 'string' || data['Percentage'] instanceof String)) {
            throw new Error("Expected the field `Percentage` to be a primitive type in the JSON string but got " + data['Percentage']);
        }
        // ensure the json data is a string
        if (data['Size'] && !(typeof data['Size'] === 'string' || data['Size'] instanceof String)) {
            throw new Error("Expected the field `Size` to be a primitive type in the JSON string but got " + data['Size']);
        }

        return true;
    }


}



/**
 * The id of the client
 * @member {String} ClientID
 */
UpdateSystemModelsPackageStatus.prototype['ClientID'] = undefined;

/**
 * The client's tag
 * @member {String} ClientKey
 */
UpdateSystemModelsPackageStatus.prototype['ClientKey'] = undefined;

/**
 * The amount of time spent downloading
 * @member {String} DownloadTime
 */
UpdateSystemModelsPackageStatus.prototype['DownloadTime'] = undefined;

/**
 * The number of bytes downloaded
 * @member {String} Downloaded
 */
UpdateSystemModelsPackageStatus.prototype['Downloaded'] = undefined;

/**
 * The time the package completed
 * @member {String} InstallCompleted
 */
UpdateSystemModelsPackageStatus.prototype['InstallCompleted'] = undefined;

/**
 * The package result
 * @member {String} InstallResult
 */
UpdateSystemModelsPackageStatus.prototype['InstallResult'] = undefined;

/**
 * The time the package was started
 * @member {String} InstallStarted
 */
UpdateSystemModelsPackageStatus.prototype['InstallStarted'] = undefined;

/**
 * The amount of time required to run the package
 * @member {String} InstallTime
 */
UpdateSystemModelsPackageStatus.prototype['InstallTime'] = undefined;

/**
 * The download completion percentage
 * @member {String} Percentage
 */
UpdateSystemModelsPackageStatus.prototype['Percentage'] = undefined;

/**
 * The total size of the package
 * @member {String} Size
 */
UpdateSystemModelsPackageStatus.prototype['Size'] = undefined;

/**
 * The time the status was last updated
 * @member {Date} Timestamp
 */
UpdateSystemModelsPackageStatus.prototype['Timestamp'] = undefined;






export default UpdateSystemModelsPackageStatus;

