/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ContentSubmissionSharedBusinessEntitiesContentReleaseVersion model module.
 * @module model/ContentSubmissionSharedBusinessEntitiesContentReleaseVersion
 * @version v1
 */
class ContentSubmissionSharedBusinessEntitiesContentReleaseVersion {
    /**
     * Constructs a new <code>ContentSubmissionSharedBusinessEntitiesContentReleaseVersion</code>.
     * ContentReleaseVersion class
     * @alias module:model/ContentSubmissionSharedBusinessEntitiesContentReleaseVersion
     */
    constructor() { 
        
        ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ContentSubmissionSharedBusinessEntitiesContentReleaseVersion</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContentSubmissionSharedBusinessEntitiesContentReleaseVersion} obj Optional instance to populate.
     * @return {module:model/ContentSubmissionSharedBusinessEntitiesContentReleaseVersion} The populated <code>ContentSubmissionSharedBusinessEntitiesContentReleaseVersion</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContentSubmissionSharedBusinessEntitiesContentReleaseVersion();

            if (data.hasOwnProperty('ContentDefinitionID')) {
                obj['ContentDefinitionID'] = ApiClient.convertToType(data['ContentDefinitionID'], 'Number');
            }
            if (data.hasOwnProperty('ContentReleaseID')) {
                obj['ContentReleaseID'] = ApiClient.convertToType(data['ContentReleaseID'], 'Number');
            }
            if (data.hasOwnProperty('Deleted')) {
                obj['Deleted'] = ApiClient.convertToType(data['Deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('PublisherUserID')) {
                obj['PublisherUserID'] = ApiClient.convertToType(data['PublisherUserID'], 'Number');
            }
            if (data.hasOwnProperty('ReleaseID')) {
                obj['ReleaseID'] = ApiClient.convertToType(data['ReleaseID'], 'Number');
            }
            if (data.hasOwnProperty('TestReportUrl')) {
                obj['TestReportUrl'] = ApiClient.convertToType(data['TestReportUrl'], 'String');
            }
            if (data.hasOwnProperty('UpdatedDate')) {
                obj['UpdatedDate'] = ApiClient.convertToType(data['UpdatedDate'], 'Date');
            }
            if (data.hasOwnProperty('Version')) {
                obj['Version'] = ApiClient.convertToType(data['Version'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContentSubmissionSharedBusinessEntitiesContentReleaseVersion</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContentSubmissionSharedBusinessEntitiesContentReleaseVersion</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['TestReportUrl'] && !(typeof data['TestReportUrl'] === 'string' || data['TestReportUrl'] instanceof String)) {
            throw new Error("Expected the field `TestReportUrl` to be a primitive type in the JSON string but got " + data['TestReportUrl']);
        }

        return true;
    }


}



/**
 * ContentDefinitionID
 * @member {Number} ContentDefinitionID
 */
ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.prototype['ContentDefinitionID'] = undefined;

/**
 * ContentReleaseID
 * @member {Number} ContentReleaseID
 */
ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.prototype['ContentReleaseID'] = undefined;

/**
 * deleted flag
 * @member {Boolean} Deleted
 */
ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.prototype['Deleted'] = undefined;

/**
 * PublisherUser ID
 * @member {Number} PublisherUserID
 */
ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.prototype['PublisherUserID'] = undefined;

/**
 * rele4ase Id
 * @member {Number} ReleaseID
 */
ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.prototype['ReleaseID'] = undefined;

/**
 * The URL at which test reports for this content can be found
 * @member {String} TestReportUrl
 */
ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.prototype['TestReportUrl'] = undefined;

/**
 * Updated Date
 * @member {Date} UpdatedDate
 */
ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.prototype['UpdatedDate'] = undefined;

/**
 * version
 * @member {Number} Version
 */
ContentSubmissionSharedBusinessEntitiesContentReleaseVersion.prototype['Version'] = undefined;






export default ContentSubmissionSharedBusinessEntitiesContentReleaseVersion;

