/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ContentSubmissionSharedBusinessEntitiesContentDefinitionAttribute from './ContentSubmissionSharedBusinessEntitiesContentDefinitionAttribute';

/**
 * The ContentSubmissionSharedBusinessEntitiesContentDefinition model module.
 * @module model/ContentSubmissionSharedBusinessEntitiesContentDefinition
 * @version v1
 */
class ContentSubmissionSharedBusinessEntitiesContentDefinition {
    /**
     * Constructs a new <code>ContentSubmissionSharedBusinessEntitiesContentDefinition</code>.
     * The definition of the content for submission
     * @alias module:model/ContentSubmissionSharedBusinessEntitiesContentDefinition
     * @param description {String} The description used on the package type in the AGCO Update System
     */
    constructor(description) { 
        
        ContentSubmissionSharedBusinessEntitiesContentDefinition.initialize(this, description);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, description) { 
        obj['Description'] = description;
    }

    /**
     * Constructs a <code>ContentSubmissionSharedBusinessEntitiesContentDefinition</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ContentSubmissionSharedBusinessEntitiesContentDefinition} obj Optional instance to populate.
     * @return {module:model/ContentSubmissionSharedBusinessEntitiesContentDefinition} The populated <code>ContentSubmissionSharedBusinessEntitiesContentDefinition</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ContentSubmissionSharedBusinessEntitiesContentDefinition();

            if (data.hasOwnProperty('Attributes')) {
                obj['Attributes'] = ApiClient.convertToType(data['Attributes'], [ContentSubmissionSharedBusinessEntitiesContentDefinitionAttribute]);
            }
            if (data.hasOwnProperty('ContentDefinitionID')) {
                obj['ContentDefinitionID'] = ApiClient.convertToType(data['ContentDefinitionID'], 'Number');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('PackageTypeID')) {
                obj['PackageTypeID'] = ApiClient.convertToType(data['PackageTypeID'], 'String');
            }
            if (data.hasOwnProperty('TypeID')) {
                obj['TypeID'] = ApiClient.convertToType(data['TypeID'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ContentSubmissionSharedBusinessEntitiesContentDefinition</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ContentSubmissionSharedBusinessEntitiesContentDefinition</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ContentSubmissionSharedBusinessEntitiesContentDefinition.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['Attributes']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Attributes'])) {
                throw new Error("Expected the field `Attributes` to be an array in the JSON data but got " + data['Attributes']);
            }
            // validate the optional field `Attributes` (array)
            for (const item of data['Attributes']) {
                ContentSubmissionSharedBusinessEntitiesContentDefinitionAttribute.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['PackageTypeID'] && !(typeof data['PackageTypeID'] === 'string' || data['PackageTypeID'] instanceof String)) {
            throw new Error("Expected the field `PackageTypeID` to be a primitive type in the JSON string but got " + data['PackageTypeID']);
        }

        return true;
    }


}

ContentSubmissionSharedBusinessEntitiesContentDefinition.RequiredProperties = ["Description"];

/**
 * Attributes of this ContentDefinition
 * @member {Array.<module:model/ContentSubmissionSharedBusinessEntitiesContentDefinitionAttribute>} Attributes
 */
ContentSubmissionSharedBusinessEntitiesContentDefinition.prototype['Attributes'] = undefined;

/**
 * The ID of this content definition.
 * @member {Number} ContentDefinitionID
 */
ContentSubmissionSharedBusinessEntitiesContentDefinition.prototype['ContentDefinitionID'] = undefined;

/**
 * The description used on the package type in the AGCO Update System
 * @member {String} Description
 */
ContentSubmissionSharedBusinessEntitiesContentDefinition.prototype['Description'] = undefined;

/**
 * The name of this content. Name must be valid for Attribute on PackageType.
 * @member {String} Name
 */
ContentSubmissionSharedBusinessEntitiesContentDefinition.prototype['Name'] = undefined;

/**
 * Read Only. The ID of the package type used for this content.
 * @member {String} PackageTypeID
 */
ContentSubmissionSharedBusinessEntitiesContentDefinition.prototype['PackageTypeID'] = undefined;

/**
 * The type of content.
 * @member {Number} TypeID
 */
ContentSubmissionSharedBusinessEntitiesContentDefinition.prototype['TypeID'] = undefined;






export default ContentSubmissionSharedBusinessEntitiesContentDefinition;

