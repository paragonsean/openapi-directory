/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The BuildSystemSharedDTOParameter model module.
 * @module model/BuildSystemSharedDTOParameter
 * @version v1
 */
class BuildSystemSharedDTOParameter {
    /**
     * Constructs a new <code>BuildSystemSharedDTOParameter</code>.
     * A DTO for an IParameter
     * @alias module:model/BuildSystemSharedDTOParameter
     */
    constructor() { 
        
        BuildSystemSharedDTOParameter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BuildSystemSharedDTOParameter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildSystemSharedDTOParameter} obj Optional instance to populate.
     * @return {module:model/BuildSystemSharedDTOParameter} The populated <code>BuildSystemSharedDTOParameter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildSystemSharedDTOParameter();

            if (data.hasOwnProperty('Direction')) {
                obj['Direction'] = ApiClient.convertToType(data['Direction'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildSystemSharedDTOParameter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildSystemSharedDTOParameter</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Direction'] && !(typeof data['Direction'] === 'string' || data['Direction'] instanceof String)) {
            throw new Error("Expected the field `Direction` to be a primitive type in the JSON string but got " + data['Direction']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Type'] && !(typeof data['Type'] === 'string' || data['Type'] instanceof String)) {
            throw new Error("Expected the field `Type` to be a primitive type in the JSON string but got " + data['Type']);
        }

        return true;
    }


}



/**
 * The parameter direction (Input or Output)
 * @member {module:model/BuildSystemSharedDTOParameter.DirectionEnum} Direction
 */
BuildSystemSharedDTOParameter.prototype['Direction'] = undefined;

/**
 * The name of the parameter
 * @member {String} Name
 */
BuildSystemSharedDTOParameter.prototype['Name'] = undefined;

/**
 * The data type of the parameter
 * @member {module:model/BuildSystemSharedDTOParameter.TypeEnum} Type
 */
BuildSystemSharedDTOParameter.prototype['Type'] = undefined;





/**
 * Allowed values for the <code>Direction</code> property.
 * @enum {String}
 * @readonly
 */
BuildSystemSharedDTOParameter['DirectionEnum'] = {

    /**
     * value: "Input"
     * @const
     */
    "Input": "Input",

    /**
     * value: "Output"
     * @const
     */
    "Output": "Output"
};


/**
 * Allowed values for the <code>Type</code> property.
 * @enum {String}
 * @readonly
 */
BuildSystemSharedDTOParameter['TypeEnum'] = {

    /**
     * value: "String"
     * @const
     */
    "String": "String",

    /**
     * value: "Boolean"
     * @const
     */
    "Boolean": "Boolean",

    /**
     * value: "Integer"
     * @const
     */
    "Integer": "Integer",

    /**
     * value: "Float"
     * @const
     */
    "Float": "Float",

    /**
     * value: "StringDictionary"
     * @const
     */
    "StringDictionary": "StringDictionary"
};



export default BuildSystemSharedDTOParameter;

