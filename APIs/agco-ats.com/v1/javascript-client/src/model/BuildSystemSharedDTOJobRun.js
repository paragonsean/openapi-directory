/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuildSystemSharedDTOActivityRun from './BuildSystemSharedDTOActivityRun';
import BuildSystemSharedDTOParameterValue from './BuildSystemSharedDTOParameterValue';

/**
 * The BuildSystemSharedDTOJobRun model module.
 * @module model/BuildSystemSharedDTOJobRun
 * @version v1
 */
class BuildSystemSharedDTOJobRun {
    /**
     * Constructs a new <code>BuildSystemSharedDTOJobRun</code>.
     * A DTO for an IJobRun
     * @alias module:model/BuildSystemSharedDTOJobRun
     */
    constructor() { 
        
        BuildSystemSharedDTOJobRun.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>BuildSystemSharedDTOJobRun</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildSystemSharedDTOJobRun} obj Optional instance to populate.
     * @return {module:model/BuildSystemSharedDTOJobRun} The populated <code>BuildSystemSharedDTOJobRun</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildSystemSharedDTOJobRun();

            if (data.hasOwnProperty('ActivityRuns')) {
                obj['ActivityRuns'] = ApiClient.convertToType(data['ActivityRuns'], [BuildSystemSharedDTOActivityRun]);
            }
            if (data.hasOwnProperty('EndDate')) {
                obj['EndDate'] = ApiClient.convertToType(data['EndDate'], 'Date');
            }
            if (data.hasOwnProperty('JobID')) {
                obj['JobID'] = ApiClient.convertToType(data['JobID'], 'Number');
            }
            if (data.hasOwnProperty('JobRunID')) {
                obj['JobRunID'] = ApiClient.convertToType(data['JobRunID'], 'Number');
            }
            if (data.hasOwnProperty('Parameters')) {
                obj['Parameters'] = ApiClient.convertToType(data['Parameters'], [BuildSystemSharedDTOParameterValue]);
            }
            if (data.hasOwnProperty('StartDate')) {
                obj['StartDate'] = ApiClient.convertToType(data['StartDate'], 'Date');
            }
            if (data.hasOwnProperty('Status')) {
                obj['Status'] = ApiClient.convertToType(data['Status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildSystemSharedDTOJobRun</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildSystemSharedDTOJobRun</code>.
     */
    static validateJSON(data) {
        if (data['ActivityRuns']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['ActivityRuns'])) {
                throw new Error("Expected the field `ActivityRuns` to be an array in the JSON data but got " + data['ActivityRuns']);
            }
            // validate the optional field `ActivityRuns` (array)
            for (const item of data['ActivityRuns']) {
                BuildSystemSharedDTOActivityRun.validateJSON(item);
            };
        }
        if (data['Parameters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Parameters'])) {
                throw new Error("Expected the field `Parameters` to be an array in the JSON data but got " + data['Parameters']);
            }
            // validate the optional field `Parameters` (array)
            for (const item of data['Parameters']) {
                BuildSystemSharedDTOParameterValue.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['Status'] && !(typeof data['Status'] === 'string' || data['Status'] instanceof String)) {
            throw new Error("Expected the field `Status` to be a primitive type in the JSON string but got " + data['Status']);
        }

        return true;
    }


}



/**
 * The activity runs belonging to this JobRun
 * @member {Array.<module:model/BuildSystemSharedDTOActivityRun>} ActivityRuns
 */
BuildSystemSharedDTOJobRun.prototype['ActivityRuns'] = undefined;

/**
 * The UTC date and time when the job completed
 * @member {Date} EndDate
 */
BuildSystemSharedDTOJobRun.prototype['EndDate'] = undefined;

/**
 * The ID of the job that defines the run
 * @member {Number} JobID
 */
BuildSystemSharedDTOJobRun.prototype['JobID'] = undefined;

/**
 * The ID of this JobRun
 * @member {Number} JobRunID
 */
BuildSystemSharedDTOJobRun.prototype['JobRunID'] = undefined;

/**
 * The parameters used for this run of the job
 * @member {Array.<module:model/BuildSystemSharedDTOParameterValue>} Parameters
 */
BuildSystemSharedDTOJobRun.prototype['Parameters'] = undefined;

/**
 * The UTC date and time when the job started
 * @member {Date} StartDate
 */
BuildSystemSharedDTOJobRun.prototype['StartDate'] = undefined;

/**
 * The status of this JobRun
 * @member {module:model/BuildSystemSharedDTOJobRun.StatusEnum} Status
 */
BuildSystemSharedDTOJobRun.prototype['Status'] = undefined;





/**
 * Allowed values for the <code>Status</code> property.
 * @enum {String}
 * @readonly
 */
BuildSystemSharedDTOJobRun['StatusEnum'] = {

    /**
     * value: "Ready"
     * @const
     */
    "Ready": "Ready",

    /**
     * value: "InProgress"
     * @const
     */
    "InProgress": "InProgress",

    /**
     * value: "Succeeded"
     * @const
     */
    "Succeeded": "Succeeded",

    /**
     * value: "Cancelled"
     * @const
     */
    "Cancelled": "Cancelled",

    /**
     * value: "Failed"
     * @const
     */
    "Failed": "Failed"
};



export default BuildSystemSharedDTOJobRun;

