/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpdateSystemModelsPackageType model module.
 * @module model/UpdateSystemModelsPackageType
 * @version v1
 */
class UpdateSystemModelsPackageType {
    /**
     * Constructs a new <code>UpdateSystemModelsPackageType</code>.
     * @alias module:model/UpdateSystemModelsPackageType
     * @param description {String} The description of the package type
     */
    constructor(description) { 
        
        UpdateSystemModelsPackageType.initialize(this, description);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, description) { 
        obj['Description'] = description;
    }

    /**
     * Constructs a <code>UpdateSystemModelsPackageType</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateSystemModelsPackageType} obj Optional instance to populate.
     * @return {module:model/UpdateSystemModelsPackageType} The populated <code>UpdateSystemModelsPackageType</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateSystemModelsPackageType();

            if (data.hasOwnProperty('Attribute')) {
                obj['Attribute'] = ApiClient.convertToType(data['Attribute'], 'String');
            }
            if (data.hasOwnProperty('Category')) {
                obj['Category'] = ApiClient.convertToType(data['Category'], 'String');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('Icon')) {
                obj['Icon'] = ApiClient.convertToType(data['Icon'], 'String');
            }
            if (data.hasOwnProperty('InventoryFrequency')) {
                obj['InventoryFrequency'] = ApiClient.convertToType(data['InventoryFrequency'], 'Number');
            }
            if (data.hasOwnProperty('InventoryPackage')) {
                obj['InventoryPackage'] = ApiClient.convertToType(data['InventoryPackage'], 'String');
            }
            if (data.hasOwnProperty('LocalizedDescription')) {
                obj['LocalizedDescription'] = ApiClient.convertToType(data['LocalizedDescription'], 'String');
            }
            if (data.hasOwnProperty('LocalizedName')) {
                obj['LocalizedName'] = ApiClient.convertToType(data['LocalizedName'], 'String');
            }
            if (data.hasOwnProperty('MaxDeltaPackages')) {
                obj['MaxDeltaPackages'] = ApiClient.convertToType(data['MaxDeltaPackages'], 'Number');
            }
            if (data.hasOwnProperty('PackageTypeID')) {
                obj['PackageTypeID'] = ApiClient.convertToType(data['PackageTypeID'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateSystemModelsPackageType</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateSystemModelsPackageType</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateSystemModelsPackageType.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Attribute'] && !(typeof data['Attribute'] === 'string' || data['Attribute'] instanceof String)) {
            throw new Error("Expected the field `Attribute` to be a primitive type in the JSON string but got " + data['Attribute']);
        }
        // ensure the json data is a string
        if (data['Category'] && !(typeof data['Category'] === 'string' || data['Category'] instanceof String)) {
            throw new Error("Expected the field `Category` to be a primitive type in the JSON string but got " + data['Category']);
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['Icon'] && !(typeof data['Icon'] === 'string' || data['Icon'] instanceof String)) {
            throw new Error("Expected the field `Icon` to be a primitive type in the JSON string but got " + data['Icon']);
        }
        // ensure the json data is a string
        if (data['InventoryPackage'] && !(typeof data['InventoryPackage'] === 'string' || data['InventoryPackage'] instanceof String)) {
            throw new Error("Expected the field `InventoryPackage` to be a primitive type in the JSON string but got " + data['InventoryPackage']);
        }
        // ensure the json data is a string
        if (data['LocalizedDescription'] && !(typeof data['LocalizedDescription'] === 'string' || data['LocalizedDescription'] instanceof String)) {
            throw new Error("Expected the field `LocalizedDescription` to be a primitive type in the JSON string but got " + data['LocalizedDescription']);
        }
        // ensure the json data is a string
        if (data['LocalizedName'] && !(typeof data['LocalizedName'] === 'string' || data['LocalizedName'] instanceof String)) {
            throw new Error("Expected the field `LocalizedName` to be a primitive type in the JSON string but got " + data['LocalizedName']);
        }
        // ensure the json data is a string
        if (data['PackageTypeID'] && !(typeof data['PackageTypeID'] === 'string' || data['PackageTypeID'] instanceof String)) {
            throw new Error("Expected the field `PackageTypeID` to be a primitive type in the JSON string but got " + data['PackageTypeID']);
        }

        return true;
    }


}

UpdateSystemModelsPackageType.RequiredProperties = ["Description"];

/**
 * The inventory attribute (from the InventoryPackage) used to determine what version of this package type is installed.
 * @member {String} Attribute
 */
UpdateSystemModelsPackageType.prototype['Attribute'] = undefined;

/**
 * The inventory category (from the InventoryPackage) used to determine what version of this package type is installed.
 * @member {String} Category
 */
UpdateSystemModelsPackageType.prototype['Category'] = undefined;

/**
 * The description of the package type
 * @member {String} Description
 */
UpdateSystemModelsPackageType.prototype['Description'] = undefined;

/**
 * Optional.  The icon to use for the PackageType, in base 64
 * @member {String} Icon
 */
UpdateSystemModelsPackageType.prototype['Icon'] = undefined;

/**
 * The number of minutes to wait before requesting another inventory.  The default value is 1440 (24 hours).
 * @member {Number} InventoryFrequency
 */
UpdateSystemModelsPackageType.prototype['InventoryFrequency'] = undefined;

/**
 * The inventory package used to determine what version of this package type is installed.
 * @member {String} InventoryPackage
 */
UpdateSystemModelsPackageType.prototype['InventoryPackage'] = undefined;

/**
 * Optional. The StringID used to localize the description of the PackageType
 * @member {String} LocalizedDescription
 */
UpdateSystemModelsPackageType.prototype['LocalizedDescription'] = undefined;

/**
 * Optional. The StringID used to localize the name of the PackageType
 * @member {String} LocalizedName
 */
UpdateSystemModelsPackageType.prototype['LocalizedName'] = undefined;

/**
 * The maximum number of \"chained\" delta packages to use when updating the client
 * @member {Number} MaxDeltaPackages
 */
UpdateSystemModelsPackageType.prototype['MaxDeltaPackages'] = undefined;

/**
 * Read Only. The package type id.
 * @member {String} PackageTypeID
 */
UpdateSystemModelsPackageType.prototype['PackageTypeID'] = undefined;






export default UpdateSystemModelsPackageType;

