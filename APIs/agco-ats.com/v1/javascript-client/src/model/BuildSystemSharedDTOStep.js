/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import BuildSystemSharedDTOParameter from './BuildSystemSharedDTOParameter';

/**
 * The BuildSystemSharedDTOStep model module.
 * @module model/BuildSystemSharedDTOStep
 * @version v1
 */
class BuildSystemSharedDTOStep {
    /**
     * Constructs a new <code>BuildSystemSharedDTOStep</code>.
     * Step
     * @alias module:model/BuildSystemSharedDTOStep
     * @param configRequired {Boolean} Indicates if the step requires configuration values to be provided by the build agent
     * @param implementationID {String} The implementation ID used to lookup the step implementation when it is executed
     * @param name {String} The name of the step
     */
    constructor(configRequired, implementationID, name) { 
        
        BuildSystemSharedDTOStep.initialize(this, configRequired, implementationID, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, configRequired, implementationID, name) { 
        obj['ConfigRequired'] = configRequired;
        obj['ImplementationID'] = implementationID;
        obj['Name'] = name;
    }

    /**
     * Constructs a <code>BuildSystemSharedDTOStep</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/BuildSystemSharedDTOStep} obj Optional instance to populate.
     * @return {module:model/BuildSystemSharedDTOStep} The populated <code>BuildSystemSharedDTOStep</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new BuildSystemSharedDTOStep();

            if (data.hasOwnProperty('ConfigRequired')) {
                obj['ConfigRequired'] = ApiClient.convertToType(data['ConfigRequired'], 'Boolean');
            }
            if (data.hasOwnProperty('Deleted')) {
                obj['Deleted'] = ApiClient.convertToType(data['Deleted'], 'Boolean');
            }
            if (data.hasOwnProperty('Description')) {
                obj['Description'] = ApiClient.convertToType(data['Description'], 'String');
            }
            if (data.hasOwnProperty('ImplementationID')) {
                obj['ImplementationID'] = ApiClient.convertToType(data['ImplementationID'], 'String');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('Parameters')) {
                obj['Parameters'] = ApiClient.convertToType(data['Parameters'], [BuildSystemSharedDTOParameter]);
            }
            if (data.hasOwnProperty('StepID')) {
                obj['StepID'] = ApiClient.convertToType(data['StepID'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>BuildSystemSharedDTOStep</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>BuildSystemSharedDTOStep</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of BuildSystemSharedDTOStep.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Description'] && !(typeof data['Description'] === 'string' || data['Description'] instanceof String)) {
            throw new Error("Expected the field `Description` to be a primitive type in the JSON string but got " + data['Description']);
        }
        // ensure the json data is a string
        if (data['ImplementationID'] && !(typeof data['ImplementationID'] === 'string' || data['ImplementationID'] instanceof String)) {
            throw new Error("Expected the field `ImplementationID` to be a primitive type in the JSON string but got " + data['ImplementationID']);
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        if (data['Parameters']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['Parameters'])) {
                throw new Error("Expected the field `Parameters` to be an array in the JSON data but got " + data['Parameters']);
            }
            // validate the optional field `Parameters` (array)
            for (const item of data['Parameters']) {
                BuildSystemSharedDTOParameter.validateJSON(item);
            };
        }

        return true;
    }


}

BuildSystemSharedDTOStep.RequiredProperties = ["ConfigRequired", "ImplementationID", "Name"];

/**
 * Indicates if the step requires configuration values to be provided by the build agent
 * @member {Boolean} ConfigRequired
 */
BuildSystemSharedDTOStep.prototype['ConfigRequired'] = undefined;

/**
 * Read Only.  Indicates if the record is deleted.
 * @member {Boolean} Deleted
 */
BuildSystemSharedDTOStep.prototype['Deleted'] = undefined;

/**
 * A description of the step to be presented to a user
 * @member {String} Description
 */
BuildSystemSharedDTOStep.prototype['Description'] = undefined;

/**
 * The implementation ID used to lookup the step implementation when it is executed
 * @member {String} ImplementationID
 */
BuildSystemSharedDTOStep.prototype['ImplementationID'] = undefined;

/**
 * The name of the step
 * @member {String} Name
 */
BuildSystemSharedDTOStep.prototype['Name'] = undefined;

/**
 * The parameters for this step
 * @member {Array.<module:model/BuildSystemSharedDTOParameter>} Parameters
 */
BuildSystemSharedDTOStep.prototype['Parameters'] = undefined;

/**
 * The ID of the step
 * @member {Number} StepID
 */
BuildSystemSharedDTOStep.prototype['StepID'] = undefined;






export default BuildSystemSharedDTOStep;

