/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AGCOPowerServicesModelsECU model module.
 * @module model/AGCOPowerServicesModelsECU
 * @version v1
 */
class AGCOPowerServicesModelsECU {
    /**
     * Constructs a new <code>AGCOPowerServicesModelsECU</code>.
     * An AGCO Power ECU
     * @alias module:model/AGCOPowerServicesModelsECU
     * @param engineSerialNumber {String} The serial number of the ECU’s engine
     * @param serialNumber {String} The serial number of the ECU
     * @param state {module:model/AGCOPowerServicesModelsECU.StateEnum} The state of the ECU
     */
    constructor(engineSerialNumber, serialNumber, state) { 
        
        AGCOPowerServicesModelsECU.initialize(this, engineSerialNumber, serialNumber, state);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, engineSerialNumber, serialNumber, state) { 
        obj['EngineSerialNumber'] = engineSerialNumber;
        obj['SerialNumber'] = serialNumber;
        obj['State'] = state;
    }

    /**
     * Constructs a <code>AGCOPowerServicesModelsECU</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AGCOPowerServicesModelsECU} obj Optional instance to populate.
     * @return {module:model/AGCOPowerServicesModelsECU} The populated <code>AGCOPowerServicesModelsECU</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AGCOPowerServicesModelsECU();

            if (data.hasOwnProperty('ActivationCode')) {
                obj['ActivationCode'] = ApiClient.convertToType(data['ActivationCode'], 'Blob');
            }
            if (data.hasOwnProperty('DamagedDescription')) {
                obj['DamagedDescription'] = ApiClient.convertToType(data['DamagedDescription'], 'String');
            }
            if (data.hasOwnProperty('EngineSerialNumber')) {
                obj['EngineSerialNumber'] = ApiClient.convertToType(data['EngineSerialNumber'], 'String');
            }
            if (data.hasOwnProperty('ReplacesECUSerialNumber')) {
                obj['ReplacesECUSerialNumber'] = ApiClient.convertToType(data['ReplacesECUSerialNumber'], 'String');
            }
            if (data.hasOwnProperty('SerialNumber')) {
                obj['SerialNumber'] = ApiClient.convertToType(data['SerialNumber'], 'String');
            }
            if (data.hasOwnProperty('State')) {
                obj['State'] = ApiClient.convertToType(data['State'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AGCOPowerServicesModelsECU</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AGCOPowerServicesModelsECU</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AGCOPowerServicesModelsECU.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['DamagedDescription'] && !(typeof data['DamagedDescription'] === 'string' || data['DamagedDescription'] instanceof String)) {
            throw new Error("Expected the field `DamagedDescription` to be a primitive type in the JSON string but got " + data['DamagedDescription']);
        }
        // ensure the json data is a string
        if (data['EngineSerialNumber'] && !(typeof data['EngineSerialNumber'] === 'string' || data['EngineSerialNumber'] instanceof String)) {
            throw new Error("Expected the field `EngineSerialNumber` to be a primitive type in the JSON string but got " + data['EngineSerialNumber']);
        }
        // ensure the json data is a string
        if (data['ReplacesECUSerialNumber'] && !(typeof data['ReplacesECUSerialNumber'] === 'string' || data['ReplacesECUSerialNumber'] instanceof String)) {
            throw new Error("Expected the field `ReplacesECUSerialNumber` to be a primitive type in the JSON string but got " + data['ReplacesECUSerialNumber']);
        }
        // ensure the json data is a string
        if (data['SerialNumber'] && !(typeof data['SerialNumber'] === 'string' || data['SerialNumber'] instanceof String)) {
            throw new Error("Expected the field `SerialNumber` to be a primitive type in the JSON string but got " + data['SerialNumber']);
        }
        // ensure the json data is a string
        if (data['State'] && !(typeof data['State'] === 'string' || data['State'] instanceof String)) {
            throw new Error("Expected the field `State` to be a primitive type in the JSON string but got " + data['State']);
        }

        return true;
    }


}

AGCOPowerServicesModelsECU.RequiredProperties = ["EngineSerialNumber", "SerialNumber", "State"];

/**
 * The code used to activate the ECU. May not be modified. Returned only on activation.
 * @member {Blob} ActivationCode
 */
AGCOPowerServicesModelsECU.prototype['ActivationCode'] = undefined;

/**
 * A description why the ECU cannot be deactivated.
 * @member {String} DamagedDescription
 */
AGCOPowerServicesModelsECU.prototype['DamagedDescription'] = undefined;

/**
 * The serial number of the ECU’s engine
 * @member {String} EngineSerialNumber
 */
AGCOPowerServicesModelsECU.prototype['EngineSerialNumber'] = undefined;

/**
 * The serial number of the ECU that this ECU replaces. Required if activating an ECU..
 * @member {String} ReplacesECUSerialNumber
 */
AGCOPowerServicesModelsECU.prototype['ReplacesECUSerialNumber'] = undefined;

/**
 * The serial number of the ECU
 * @member {String} SerialNumber
 */
AGCOPowerServicesModelsECU.prototype['SerialNumber'] = undefined;

/**
 * The state of the ECU
 * @member {module:model/AGCOPowerServicesModelsECU.StateEnum} State
 */
AGCOPowerServicesModelsECU.prototype['State'] = undefined;





/**
 * Allowed values for the <code>State</code> property.
 * @enum {String}
 * @readonly
 */
AGCOPowerServicesModelsECU['StateEnum'] = {

    /**
     * value: "Active"
     * @const
     */
    "Active": "Active",

    /**
     * value: "Inactive"
     * @const
     */
    "Inactive": "Inactive",

    /**
     * value: "Damaged"
     * @const
     */
    "Damaged": "Damaged"
};



export default AGCOPowerServicesModelsECU;

