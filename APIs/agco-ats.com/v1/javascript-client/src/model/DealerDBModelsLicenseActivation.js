/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DealerDBModelsLicenseActivation model module.
 * @module model/DealerDBModelsLicenseActivation
 * @version v1
 */
class DealerDBModelsLicenseActivation {
    /**
     * Constructs a new <code>DealerDBModelsLicenseActivation</code>.
     * @alias module:model/DealerDBModelsLicenseActivation
     */
    constructor() { 
        
        DealerDBModelsLicenseActivation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DealerDBModelsLicenseActivation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DealerDBModelsLicenseActivation} obj Optional instance to populate.
     * @return {module:model/DealerDBModelsLicenseActivation} The populated <code>DealerDBModelsLicenseActivation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DealerDBModelsLicenseActivation();

            if (data.hasOwnProperty('Key')) {
                obj['Key'] = ApiClient.convertToType(data['Key'], 'String');
            }
            if (data.hasOwnProperty('LicenseData')) {
                obj['LicenseData'] = ApiClient.convertToType(data['LicenseData'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DealerDBModelsLicenseActivation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DealerDBModelsLicenseActivation</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['Key'] && !(typeof data['Key'] === 'string' || data['Key'] instanceof String)) {
            throw new Error("Expected the field `Key` to be a primitive type in the JSON string but got " + data['Key']);
        }
        // ensure the json data is a string
        if (data['LicenseData'] && !(typeof data['LicenseData'] === 'string' || data['LicenseData'] instanceof String)) {
            throw new Error("Expected the field `LicenseData` to be a primitive type in the JSON string but got " + data['LicenseData']);
        }

        return true;
    }


}



/**
 * The license key in base64 format.  This is only provided when the LicenseData is a new license.
 * @member {String} Key
 */
DealerDBModelsLicenseActivation.prototype['Key'] = undefined;

/**
 * The license data in base64 format.
 * @member {String} LicenseData
 */
DealerDBModelsLicenseActivation.prototype['LicenseData'] = undefined;






export default DealerDBModelsLicenseActivation;

