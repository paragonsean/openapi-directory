/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The APIModelsNotification model module.
 * @module model/APIModelsNotification
 * @version v1
 */
class APIModelsNotification {
    /**
     * Constructs a new <code>APIModelsNotification</code>.
     * @alias module:model/APIModelsNotification
     * @param isBodyHtml {Boolean} 
     * @param messageBody {String} 
     * @param subject {String} 
     * @param toAddresses {Array.<String>} 
     */
    constructor(isBodyHtml, messageBody, subject, toAddresses) { 
        
        APIModelsNotification.initialize(this, isBodyHtml, messageBody, subject, toAddresses);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, isBodyHtml, messageBody, subject, toAddresses) { 
        obj['IsBodyHtml'] = isBodyHtml;
        obj['MessageBody'] = messageBody;
        obj['Subject'] = subject;
        obj['To_Addresses'] = toAddresses;
    }

    /**
     * Constructs a <code>APIModelsNotification</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/APIModelsNotification} obj Optional instance to populate.
     * @return {module:model/APIModelsNotification} The populated <code>APIModelsNotification</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new APIModelsNotification();

            if (data.hasOwnProperty('CC_Addresses')) {
                obj['CC_Addresses'] = ApiClient.convertToType(data['CC_Addresses'], ['String']);
            }
            if (data.hasOwnProperty('IsBodyHtml')) {
                obj['IsBodyHtml'] = ApiClient.convertToType(data['IsBodyHtml'], 'Boolean');
            }
            if (data.hasOwnProperty('MessageBody')) {
                obj['MessageBody'] = ApiClient.convertToType(data['MessageBody'], 'String');
            }
            if (data.hasOwnProperty('Subject')) {
                obj['Subject'] = ApiClient.convertToType(data['Subject'], 'String');
            }
            if (data.hasOwnProperty('To_Addresses')) {
                obj['To_Addresses'] = ApiClient.convertToType(data['To_Addresses'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>APIModelsNotification</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>APIModelsNotification</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of APIModelsNotification.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['CC_Addresses'])) {
            throw new Error("Expected the field `CC_Addresses` to be an array in the JSON data but got " + data['CC_Addresses']);
        }
        // ensure the json data is a string
        if (data['MessageBody'] && !(typeof data['MessageBody'] === 'string' || data['MessageBody'] instanceof String)) {
            throw new Error("Expected the field `MessageBody` to be a primitive type in the JSON string but got " + data['MessageBody']);
        }
        // ensure the json data is a string
        if (data['Subject'] && !(typeof data['Subject'] === 'string' || data['Subject'] instanceof String)) {
            throw new Error("Expected the field `Subject` to be a primitive type in the JSON string but got " + data['Subject']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['To_Addresses'])) {
            throw new Error("Expected the field `To_Addresses` to be an array in the JSON data but got " + data['To_Addresses']);
        }

        return true;
    }


}

APIModelsNotification.RequiredProperties = ["IsBodyHtml", "MessageBody", "Subject", "To_Addresses"];

/**
 * @member {Array.<String>} CC_Addresses
 */
APIModelsNotification.prototype['CC_Addresses'] = undefined;

/**
 * @member {Boolean} IsBodyHtml
 */
APIModelsNotification.prototype['IsBodyHtml'] = undefined;

/**
 * @member {String} MessageBody
 */
APIModelsNotification.prototype['MessageBody'] = undefined;

/**
 * @member {String} Subject
 */
APIModelsNotification.prototype['Subject'] = undefined;

/**
 * @member {Array.<String>} To_Addresses
 */
APIModelsNotification.prototype['To_Addresses'] = undefined;






export default APIModelsNotification;

