/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AuthorizationCodesSharedModelsDataField model module.
 * @module model/AuthorizationCodesSharedModelsDataField
 * @version v1
 */
class AuthorizationCodesSharedModelsDataField {
    /**
     * Constructs a new <code>AuthorizationCodesSharedModelsDataField</code>.
     * @alias module:model/AuthorizationCodesSharedModelsDataField
     * @param name {String} The name of the field.
     * @param type {module:model/AuthorizationCodesSharedModelsDataField.TypeEnum} The type of this data field.
     */
    constructor(name, type) { 
        
        AuthorizationCodesSharedModelsDataField.initialize(this, name, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, type) { 
        obj['Name'] = name;
        obj['Type'] = type;
    }

    /**
     * Constructs a <code>AuthorizationCodesSharedModelsDataField</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AuthorizationCodesSharedModelsDataField} obj Optional instance to populate.
     * @return {module:model/AuthorizationCodesSharedModelsDataField} The populated <code>AuthorizationCodesSharedModelsDataField</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AuthorizationCodesSharedModelsDataField();

            if (data.hasOwnProperty('DigitsPrecision')) {
                obj['DigitsPrecision'] = ApiClient.convertToType(data['DigitsPrecision'], 'Number');
            }
            if (data.hasOwnProperty('MaxExponent')) {
                obj['MaxExponent'] = ApiClient.convertToType(data['MaxExponent'], 'Number');
            }
            if (data.hasOwnProperty('MaxValue')) {
                obj['MaxValue'] = ApiClient.convertToType(data['MaxValue'], 'Number');
            }
            if (data.hasOwnProperty('MinExponent')) {
                obj['MinExponent'] = ApiClient.convertToType(data['MinExponent'], 'Number');
            }
            if (data.hasOwnProperty('MinValue')) {
                obj['MinValue'] = ApiClient.convertToType(data['MinValue'], 'Number');
            }
            if (data.hasOwnProperty('Name')) {
                obj['Name'] = ApiClient.convertToType(data['Name'], 'String');
            }
            if (data.hasOwnProperty('ScaleFactor')) {
                obj['ScaleFactor'] = ApiClient.convertToType(data['ScaleFactor'], 'Number');
            }
            if (data.hasOwnProperty('Signed')) {
                obj['Signed'] = ApiClient.convertToType(data['Signed'], 'Boolean');
            }
            if (data.hasOwnProperty('Type')) {
                obj['Type'] = ApiClient.convertToType(data['Type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AuthorizationCodesSharedModelsDataField</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AuthorizationCodesSharedModelsDataField</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AuthorizationCodesSharedModelsDataField.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['Name'] && !(typeof data['Name'] === 'string' || data['Name'] instanceof String)) {
            throw new Error("Expected the field `Name` to be a primitive type in the JSON string but got " + data['Name']);
        }
        // ensure the json data is a string
        if (data['Type'] && !(typeof data['Type'] === 'string' || data['Type'] instanceof String)) {
            throw new Error("Expected the field `Type` to be a primitive type in the JSON string but got " + data['Type']);
        }

        return true;
    }


}

AuthorizationCodesSharedModelsDataField.RequiredProperties = ["Name", "Type"];

/**
 * The number of decimal digits to be used by this data field. Required only by the 'Float' data type. Must be in range 1 - 15.
 * @member {Number} DigitsPrecision
 */
AuthorizationCodesSharedModelsDataField.prototype['DigitsPrecision'] = undefined;

/**
 * The maximum exponent to be used by this data field. Required only by the 'Float' data type. May not be greater than 307.
 * @member {Number} MaxExponent
 */
AuthorizationCodesSharedModelsDataField.prototype['MaxExponent'] = undefined;

/**
 * The maximum value that can be represented by this data field. Required only by the 'Decimal' data type.
 * @member {Number} MaxValue
 */
AuthorizationCodesSharedModelsDataField.prototype['MaxValue'] = undefined;

/**
 * The minimum exponent to be used by this data field. Required only by the 'Float' data type. May not be less than -292.
 * @member {Number} MinExponent
 */
AuthorizationCodesSharedModelsDataField.prototype['MinExponent'] = undefined;

/**
 * The minimum value that can be represented by this data field. Required only by the 'Decimal' data type.
 * @member {Number} MinValue
 */
AuthorizationCodesSharedModelsDataField.prototype['MinValue'] = undefined;

/**
 * The name of the field.
 * @member {String} Name
 */
AuthorizationCodesSharedModelsDataField.prototype['Name'] = undefined;

/**
 * The resolution of values that can be represented by this data field. The base value is multiplied by this to compute the final value. Required only by the 'Decimal' data type.
 * @member {Number} ScaleFactor
 */
AuthorizationCodesSharedModelsDataField.prototype['ScaleFactor'] = undefined;

/**
 * Indicates whether this value is signed. Required only by the 'Float' data type.
 * @member {Boolean} Signed
 */
AuthorizationCodesSharedModelsDataField.prototype['Signed'] = undefined;

/**
 * The type of this data field.
 * @member {module:model/AuthorizationCodesSharedModelsDataField.TypeEnum} Type
 */
AuthorizationCodesSharedModelsDataField.prototype['Type'] = undefined;





/**
 * Allowed values for the <code>Type</code> property.
 * @enum {String}
 * @readonly
 */
AuthorizationCodesSharedModelsDataField['TypeEnum'] = {

    /**
     * value: "Boolean"
     * @const
     */
    "Boolean": "Boolean",

    /**
     * value: "Decimal"
     * @const
     */
    "Decimal": "Decimal",

    /**
     * value: "Float"
     * @const
     */
    "Float": "Float",

    /**
     * value: "VariableLengthByteArray"
     * @const
     */
    "VariableLengthByteArray": "VariableLengthByteArray"
};



export default AuthorizationCodesSharedModelsDataField;

