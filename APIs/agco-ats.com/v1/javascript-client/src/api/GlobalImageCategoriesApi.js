/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIIPagedResponseGlobalResourcesSharedModelsGlobalImageCategory from '../model/APIIPagedResponseGlobalResourcesSharedModelsGlobalImageCategory';
import APIModelsApiError from '../model/APIModelsApiError';
import GlobalResourcesSharedModelsGlobalImageCategory from '../model/GlobalResourcesSharedModelsGlobalImageCategory';

/**
* GlobalImageCategories service.
* @module api/GlobalImageCategoriesApi
* @version v1
*/
export default class GlobalImageCategoriesApi {

    /**
    * Constructs a new GlobalImageCategoriesApi. 
    * @alias module:api/GlobalImageCategoriesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the globalImageCategoriesGetFile operation.
     * @callback module:api/GlobalImageCategoriesApi~globalImageCategoriesGetFileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GlobalResourcesSharedModelsGlobalImageCategory} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a file's metadata.
     * No Documentation Found.
     * @param {String} ID The file's id.
     * @param {module:api/GlobalImageCategoriesApi~globalImageCategoriesGetFileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GlobalResourcesSharedModelsGlobalImageCategory}
     */
    globalImageCategoriesGetFile(ID, callback) {
      let postBody = null;
      // verify the required parameter 'ID' is set
      if (ID === undefined || ID === null) {
        throw new Error("Missing the required parameter 'ID' when calling globalImageCategoriesGetFile");
      }

      let pathParams = {
        'ID': ID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = GlobalResourcesSharedModelsGlobalImageCategory;
      return this.apiClient.callApi(
        '/api/v2/GlobalImageCategories/{ID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the globalImageCategoriesGetFiles operation.
     * @callback module:api/GlobalImageCategoriesApi~globalImageCategoriesGetFilesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIIPagedResponseGlobalResourcesSharedModelsGlobalImageCategory} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a paged response of file metadata.
     * No Documentation Found.
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] Optional. The page limit. The default page limit is 10.
     * @param {Number} [offset] Optional. The page offset. The default page offset is 0.
     * @param {module:api/GlobalImageCategoriesApi~globalImageCategoriesGetFilesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIIPagedResponseGlobalResourcesSharedModelsGlobalImageCategory}
     */
    globalImageCategoriesGetFiles(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = APIIPagedResponseGlobalResourcesSharedModelsGlobalImageCategory;
      return this.apiClient.callApi(
        '/api/v2/GlobalImageCategories', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the globalImageCategoriesPostFile operation.
     * @callback module:api/GlobalImageCategoriesApi~globalImageCategoriesPostFileCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create the metadata for a file before uploading. The State should be 'Created'.
     * No Documentation Found.
     * @param {module:model/GlobalResourcesSharedModelsGlobalImageCategory} globalResourcesSharedModelsGlobalImageCategory The file's metadata.
     * @param {module:api/GlobalImageCategoriesApi~globalImageCategoriesPostFileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    globalImageCategoriesPostFile(globalResourcesSharedModelsGlobalImageCategory, callback) {
      let postBody = globalResourcesSharedModelsGlobalImageCategory;
      // verify the required parameter 'globalResourcesSharedModelsGlobalImageCategory' is set
      if (globalResourcesSharedModelsGlobalImageCategory === undefined || globalResourcesSharedModelsGlobalImageCategory === null) {
        throw new Error("Missing the required parameter 'globalResourcesSharedModelsGlobalImageCategory' when calling globalImageCategoriesPostFile");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/api/v2/GlobalImageCategories', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
