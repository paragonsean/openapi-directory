/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIModelsApiError from '../model/APIModelsApiError';
import APIPagedResponseUpdateSystemModelsUpdateGroupClientRelationship from '../model/APIPagedResponseUpdateSystemModelsUpdateGroupClientRelationship';
import UpdateSystemModelsUpdateGroupClientRelationship from '../model/UpdateSystemModelsUpdateGroupClientRelationship';

/**
* UpdateGroupClientRelationships service.
* @module api/UpdateGroupClientRelationshipsApi
* @version v1
*/
export default class UpdateGroupClientRelationshipsApi {

    /**
    * Constructs a new UpdateGroupClientRelationshipsApi. 
    * @alias module:api/UpdateGroupClientRelationshipsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the updateGroupClientRelationshipsGetSubscription operation.
     * @callback module:api/UpdateGroupClientRelationshipsApi~updateGroupClientRelationshipsGetSubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateSystemModelsUpdateGroupClientRelationship} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a subscription by RelationshipID
     * No Documentation Found.
     * @param {String} relationshipID The RelationshipID.
     * @param {module:api/UpdateGroupClientRelationshipsApi~updateGroupClientRelationshipsGetSubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateSystemModelsUpdateGroupClientRelationship}
     */
    updateGroupClientRelationshipsGetSubscription(relationshipID, callback) {
      let postBody = null;
      // verify the required parameter 'relationshipID' is set
      if (relationshipID === undefined || relationshipID === null) {
        throw new Error("Missing the required parameter 'relationshipID' when calling updateGroupClientRelationshipsGetSubscription");
      }

      let pathParams = {
        'RelationshipID': relationshipID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = UpdateSystemModelsUpdateGroupClientRelationship;
      return this.apiClient.callApi(
        '/api/v2/UpdateGroupClientRelationships/{RelationshipID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateGroupClientRelationshipsGetSubscriptions operation.
     * @callback module:api/UpdateGroupClientRelationshipsApi~updateGroupClientRelationshipsGetSubscriptionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIPagedResponseUpdateSystemModelsUpdateGroupClientRelationship} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of current Client Subscriptions.
     * No Documentation Found.
     * @param {Object} opts Optional parameters
     * @param {String} [clientID] Optional. Filter by Client ID
     * @param {String} [updateGroupID] Optional. Filter by Update Group ID
     * @param {Number} [limit] Optional. The page limit. The default page limit is 10.
     * @param {Number} [offset] Optional. The page offset. The default page offset is 0.
     * @param {Boolean} [active] Optional. Filter by Active
     * @param {module:api/UpdateGroupClientRelationshipsApi~updateGroupClientRelationshipsGetSubscriptionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIPagedResponseUpdateSystemModelsUpdateGroupClientRelationship}
     */
    updateGroupClientRelationshipsGetSubscriptions(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'ClientID': opts['clientID'],
        'UpdateGroupID': opts['updateGroupID'],
        'limit': opts['limit'],
        'offset': opts['offset'],
        'Active': opts['active']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = APIPagedResponseUpdateSystemModelsUpdateGroupClientRelationship;
      return this.apiClient.callApi(
        '/api/v2/UpdateGroupClientRelationships', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateGroupClientRelationshipsPostSubscription operation.
     * @callback module:api/UpdateGroupClientRelationshipsApi~updateGroupClientRelationshipsPostSubscriptionCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a subscription
     * No Documentation Found.
     * @param {module:model/UpdateSystemModelsUpdateGroupClientRelationship} updateSystemModelsUpdateGroupClientRelationship The UpdateGroupClientRelationship to add.
     * @param {module:api/UpdateGroupClientRelationshipsApi~updateGroupClientRelationshipsPostSubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    updateGroupClientRelationshipsPostSubscription(updateSystemModelsUpdateGroupClientRelationship, callback) {
      let postBody = updateSystemModelsUpdateGroupClientRelationship;
      // verify the required parameter 'updateSystemModelsUpdateGroupClientRelationship' is set
      if (updateSystemModelsUpdateGroupClientRelationship === undefined || updateSystemModelsUpdateGroupClientRelationship === null) {
        throw new Error("Missing the required parameter 'updateSystemModelsUpdateGroupClientRelationship' when calling updateGroupClientRelationshipsPostSubscription");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/api/v2/UpdateGroupClientRelationships', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateGroupClientRelationshipsPutSubscription operation.
     * @callback module:api/UpdateGroupClientRelationshipsApi~updateGroupClientRelationshipsPutSubscriptionCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates a Subscription
     * No Documentation Found.
     * @param {String} relationshipID The relationship id of the UpdateGroupClientRelationship
     * @param {module:model/UpdateSystemModelsUpdateGroupClientRelationship} updateSystemModelsUpdateGroupClientRelationship The updated UpdateGroupClientRelationship
     * @param {module:api/UpdateGroupClientRelationshipsApi~updateGroupClientRelationshipsPutSubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateGroupClientRelationshipsPutSubscription(relationshipID, updateSystemModelsUpdateGroupClientRelationship, callback) {
      let postBody = updateSystemModelsUpdateGroupClientRelationship;
      // verify the required parameter 'relationshipID' is set
      if (relationshipID === undefined || relationshipID === null) {
        throw new Error("Missing the required parameter 'relationshipID' when calling updateGroupClientRelationshipsPutSubscription");
      }
      // verify the required parameter 'updateSystemModelsUpdateGroupClientRelationship' is set
      if (updateSystemModelsUpdateGroupClientRelationship === undefined || updateSystemModelsUpdateGroupClientRelationship === null) {
        throw new Error("Missing the required parameter 'updateSystemModelsUpdateGroupClientRelationship' when calling updateGroupClientRelationshipsPutSubscription");
      }

      let pathParams = {
        'RelationshipID': relationshipID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['*/*'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/UpdateGroupClientRelationships/{RelationshipID}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateGroupClientRelationshipsPutSubscriptionByClientIDUpdateGroupID operation.
     * @callback module:api/UpdateGroupClientRelationshipsApi~updateGroupClientRelationshipsPutSubscriptionByClientIDUpdateGroupIDCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * DEPRECATED. Set client subscription status for an update group.
     * No Documentation Found.
     * @param {String} clientID The Client ID.  This can be a client ID that has not been registered yet.
     * @param {String} updateGroupID The Update Group ID
     * @param {Boolean} active Subscribe the client to the Update Group.
     * @param {module:api/UpdateGroupClientRelationshipsApi~updateGroupClientRelationshipsPutSubscriptionByClientIDUpdateGroupIDCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateGroupClientRelationshipsPutSubscriptionByClientIDUpdateGroupID(clientID, updateGroupID, active, callback) {
      let postBody = null;
      // verify the required parameter 'clientID' is set
      if (clientID === undefined || clientID === null) {
        throw new Error("Missing the required parameter 'clientID' when calling updateGroupClientRelationshipsPutSubscriptionByClientIDUpdateGroupID");
      }
      // verify the required parameter 'updateGroupID' is set
      if (updateGroupID === undefined || updateGroupID === null) {
        throw new Error("Missing the required parameter 'updateGroupID' when calling updateGroupClientRelationshipsPutSubscriptionByClientIDUpdateGroupID");
      }
      // verify the required parameter 'active' is set
      if (active === undefined || active === null) {
        throw new Error("Missing the required parameter 'active' when calling updateGroupClientRelationshipsPutSubscriptionByClientIDUpdateGroupID");
      }

      let pathParams = {
      };
      let queryParams = {
        'ClientID': clientID,
        'UpdateGroupID': updateGroupID,
        'Active': active
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/UpdateGroupClientRelationships', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
