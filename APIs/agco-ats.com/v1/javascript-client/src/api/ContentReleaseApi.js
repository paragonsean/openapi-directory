/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIModelsApiError from '../model/APIModelsApiError';
import APIPagedResponseContentSubmissionSharedBusinessEntitiesContentReleaseVersion from '../model/APIPagedResponseContentSubmissionSharedBusinessEntitiesContentReleaseVersion';
import ContentSubmissionSharedBusinessEntitiesContentReleaseVersion from '../model/ContentSubmissionSharedBusinessEntitiesContentReleaseVersion';

/**
* ContentRelease service.
* @module api/ContentReleaseApi
* @version v1
*/
export default class ContentReleaseApi {

    /**
    * Constructs a new ContentReleaseApi. 
    * @alias module:api/ContentReleaseApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV2ContentReleasesContentReleaseIdGet operation.
     * @callback module:api/ContentReleaseApi~apiV2ContentReleasesContentReleaseIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentSubmissionSharedBusinessEntitiesContentReleaseVersion} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a Content Release Version by ID
     * Gets a ContentReleaseVersion by ID. When successful, the response is the requested ContentReleaseVersion.              If unsuccessful, an appropriate ApiError is returned.
     * @param {Number} contentReleaseId The ID of the ContentReleaseVersion to get.
     * @param {module:api/ContentReleaseApi~apiV2ContentReleasesContentReleaseIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentSubmissionSharedBusinessEntitiesContentReleaseVersion}
     */
    apiV2ContentReleasesContentReleaseIdGet(contentReleaseId, callback) {
      let postBody = null;
      // verify the required parameter 'contentReleaseId' is set
      if (contentReleaseId === undefined || contentReleaseId === null) {
        throw new Error("Missing the required parameter 'contentReleaseId' when calling apiV2ContentReleasesContentReleaseIdGet");
      }

      let pathParams = {
        'ContentReleaseId': contentReleaseId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = ContentSubmissionSharedBusinessEntitiesContentReleaseVersion;
      return this.apiClient.callApi(
        '/api/v2/ContentReleases/{ContentReleaseId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the contentReleaseDeleteContentReleaseVersionn operation.
     * @callback module:api/ContentReleaseApi~contentReleaseDeleteContentReleaseVersionnCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a ContentReleaseVersion
     * Deletes an ContentReleaseVersion. When successful, the response is empty.  If unsuccessful, an appropriate              ApiError is returned.
     * @param {Number} contentReleaseId The ID of the ContentReleaseVersion to delete
     * @param {module:api/ContentReleaseApi~contentReleaseDeleteContentReleaseVersionnCallback} callback The callback function, accepting three arguments: error, data, response
     */
    contentReleaseDeleteContentReleaseVersionn(contentReleaseId, callback) {
      let postBody = null;
      // verify the required parameter 'contentReleaseId' is set
      if (contentReleaseId === undefined || contentReleaseId === null) {
        throw new Error("Missing the required parameter 'contentReleaseId' when calling contentReleaseDeleteContentReleaseVersionn");
      }

      let pathParams = {
        'ContentReleaseId': contentReleaseId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/ContentReleases/{ContentReleaseId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the contentReleaseGetContentReleaseVersion operation.
     * @callback module:api/ContentReleaseApi~contentReleaseGetContentReleaseVersionCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIPagedResponseContentSubmissionSharedBusinessEntitiesContentReleaseVersion} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get ContentReleaseVersion
     * Gets a collection of ContentReleaseVersion. When successful, the response is a PagedResponse of ContentReleaseVersion.              If unsuccessful, an appropriate ApiError is returned.
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] Optional. The page limit.  If not specified, the default page limit is 10.
     * @param {Number} [offset] Optional. The page offset.  If not specified, the default page offset is 0.
     * @param {Boolean} [deleted] Optional. Filter by deleted.
     * @param {Number} [releaseID] Optional. Filter by releaseID.
     * @param {Number} [userId] Optional. Filter by UserID.
     * @param {Number} [contentDefinitionID] Optional. Filter by ContentDefinitionID.
     * @param {Number} [version] Optional. Filter by Version.
     * @param {module:api/ContentReleaseApi~contentReleaseGetContentReleaseVersionCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIPagedResponseContentSubmissionSharedBusinessEntitiesContentReleaseVersion}
     */
    contentReleaseGetContentReleaseVersion(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'offset': opts['offset'],
        'deleted': opts['deleted'],
        'releaseID': opts['releaseID'],
        'userId': opts['userId'],
        'contentDefinitionID': opts['contentDefinitionID'],
        'version': opts['version']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = APIPagedResponseContentSubmissionSharedBusinessEntitiesContentReleaseVersion;
      return this.apiClient.callApi(
        '/api/v2/ContentReleases', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the contentReleasePostContentRelease operation.
     * @callback module:api/ContentReleaseApi~contentReleasePostContentReleaseCallback
     * @param {String} error Error message, if any.
     * @param {Number} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a ContentReleaseVersion
     * Creates a ContentReleaseVersion.  The body of the POST is the ContentReleaseVersion to create.              The ContentReleaseId will be assigned on creation of the Job.  When successful, the response              is the contentReleaseId.  If unsuccessful, an appropriate ApiError is returned.
     * @param {module:model/ContentSubmissionSharedBusinessEntitiesContentReleaseVersion} contentSubmissionSharedBusinessEntitiesContentReleaseVersion The ContentReleaseVersion to create.
     * @param {module:api/ContentReleaseApi~contentReleasePostContentReleaseCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Number}
     */
    contentReleasePostContentRelease(contentSubmissionSharedBusinessEntitiesContentReleaseVersion, callback) {
      let postBody = contentSubmissionSharedBusinessEntitiesContentReleaseVersion;
      // verify the required parameter 'contentSubmissionSharedBusinessEntitiesContentReleaseVersion' is set
      if (contentSubmissionSharedBusinessEntitiesContentReleaseVersion === undefined || contentSubmissionSharedBusinessEntitiesContentReleaseVersion === null) {
        throw new Error("Missing the required parameter 'contentSubmissionSharedBusinessEntitiesContentReleaseVersion' when calling contentReleasePostContentRelease");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = 'Number';
      return this.apiClient.callApi(
        '/api/v2/ContentReleases', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the contentReleasePutContentDefinition operation.
     * @callback module:api/ContentReleaseApi~contentReleasePutContentDefinitionCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a ContentReleaseVersion
     * Updates a ContentReleaseVersion.  The body of the PUT is the updated ContentReleaseVersion.                When successful, the response is empty.  If unsuccessful, an appropriate ApiError is returned.
     * @param {Number} contentReleaseId The ID of the ContentReleaseVersion to update
     * @param {module:model/ContentSubmissionSharedBusinessEntitiesContentReleaseVersion} contentSubmissionSharedBusinessEntitiesContentReleaseVersion The updated ContentReleaseVersion
     * @param {module:api/ContentReleaseApi~contentReleasePutContentDefinitionCallback} callback The callback function, accepting three arguments: error, data, response
     */
    contentReleasePutContentDefinition(contentReleaseId, contentSubmissionSharedBusinessEntitiesContentReleaseVersion, callback) {
      let postBody = contentSubmissionSharedBusinessEntitiesContentReleaseVersion;
      // verify the required parameter 'contentReleaseId' is set
      if (contentReleaseId === undefined || contentReleaseId === null) {
        throw new Error("Missing the required parameter 'contentReleaseId' when calling contentReleasePutContentDefinition");
      }
      // verify the required parameter 'contentSubmissionSharedBusinessEntitiesContentReleaseVersion' is set
      if (contentSubmissionSharedBusinessEntitiesContentReleaseVersion === undefined || contentSubmissionSharedBusinessEntitiesContentReleaseVersion === null) {
        throw new Error("Missing the required parameter 'contentSubmissionSharedBusinessEntitiesContentReleaseVersion' when calling contentReleasePutContentDefinition");
      }

      let pathParams = {
        'ContentReleaseId': contentReleaseId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['*/*'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/ContentReleases/{ContentReleaseId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
