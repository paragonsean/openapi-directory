/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIModelsApiError from '../model/APIModelsApiError';
import APIPagedResponseDealerDBModelsLicense from '../model/APIPagedResponseDealerDBModelsLicense';
import DealerDBModelsLicense from '../model/DealerDBModelsLicense';

/**
* Licenses service.
* @module api/LicensesApi
* @version v1
*/
export default class LicensesApi {

    /**
    * Constructs a new LicensesApi. 
    * @alias module:api/LicensesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV2LicensesIDGet operation.
     * @callback module:api/LicensesApi~apiV2LicensesIDGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DealerDBModelsLicense} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a license.
     * No Documentation Found.
     * @param {String} ID The ID of the license to get.
     * @param {module:api/LicensesApi~apiV2LicensesIDGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DealerDBModelsLicense}
     */
    apiV2LicensesIDGet(ID, callback) {
      let postBody = null;
      // verify the required parameter 'ID' is set
      if (ID === undefined || ID === null) {
        throw new Error("Missing the required parameter 'ID' when calling apiV2LicensesIDGet");
      }

      let pathParams = {
        'ID': ID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = DealerDBModelsLicense;
      return this.apiClient.callApi(
        '/api/v2/Licenses/{ID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the licensesGet operation.
     * @callback module:api/LicensesApi~licensesGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIPagedResponseDealerDBModelsLicense} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets a list of licenses with the specified criteria.
     * No Documentation Found.
     * @param {Object} opts Optional parameters
     * @param {String} [voucherCode] Optional. Filter by VoucherCode
     * @param {String} [dealerCode] Optional. Filter by DealerCode
     * @param {module:model/String} [status] Optional. Filter by Status.  By default only active licenses will be returned.
     * @param {Number} [limit] Optional. The page limit. The default page limit is 10.
     * @param {Number} [offset] Optional. The page offset. The default page offset is 0.
     * @param {module:api/LicensesApi~licensesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIPagedResponseDealerDBModelsLicense}
     */
    licensesGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'VoucherCode': opts['voucherCode'],
        'DealerCode': opts['dealerCode'],
        'Status': opts['status'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = APIPagedResponseDealerDBModelsLicense;
      return this.apiClient.callApi(
        '/api/v2/Licenses', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
