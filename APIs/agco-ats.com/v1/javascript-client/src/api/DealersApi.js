/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIModelsApiError from '../model/APIModelsApiError';
import APIPagedResponseDealerDBModelsDealer from '../model/APIPagedResponseDealerDBModelsDealer';
import DealerDBModelsDealer from '../model/DealerDBModelsDealer';

/**
* Dealers service.
* @module api/DealersApi
* @version v1
*/
export default class DealersApi {

    /**
    * Constructs a new DealersApi. 
    * @alias module:api/DealersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the dealersGetDealerbyDealerCode operation.
     * @callback module:api/DealersApi~dealersGetDealerbyDealerCodeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DealerDBModelsDealer} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lookup a dealer using a dealer code.
     * No Documentation Found.
     * @param {String} dealerCode The Dealer Code to Search for
     * @param {module:api/DealersApi~dealersGetDealerbyDealerCodeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DealerDBModelsDealer}
     */
    dealersGetDealerbyDealerCode(dealerCode, callback) {
      let postBody = null;
      // verify the required parameter 'dealerCode' is set
      if (dealerCode === undefined || dealerCode === null) {
        throw new Error("Missing the required parameter 'dealerCode' when calling dealersGetDealerbyDealerCode");
      }

      let pathParams = {
        'DealerCode': dealerCode
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = DealerDBModelsDealer;
      return this.apiClient.callApi(
        '/api/v2/Dealers/{DealerCode}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the dealersGetDealers operation.
     * @callback module:api/DealersApi~dealersGetDealersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIPagedResponseDealerDBModelsDealer} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of dealers.
     * No Documentation Found.
     * @param {Object} opts Optional parameters
     * @param {String} [brand] The brand to filter by.
     * @param {String} [shippingCountry] The country to filter by.
     * @param {String} [dealerName] The partial Dealer Name to filter by. Wildcard supported (*).
     * @param {Number} [limit] Optional. The page limit. The default page limit is 10.
     * @param {Number} [offset] Optional. The page offset. The default page offset is 0.
     * @param {module:api/DealersApi~dealersGetDealersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIPagedResponseDealerDBModelsDealer}
     */
    dealersGetDealers(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'Brand': opts['brand'],
        'ShippingCountry': opts['shippingCountry'],
        'DealerName': opts['dealerName'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = APIPagedResponseDealerDBModelsDealer;
      return this.apiClient.callApi(
        '/api/v2/Dealers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
