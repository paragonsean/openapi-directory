/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIModelsApiError from '../model/APIModelsApiError';
import APIPagedResponseBuildSystemSharedDTOStep from '../model/APIPagedResponseBuildSystemSharedDTOStep';
import BuildSystemSharedDTOStep from '../model/BuildSystemSharedDTOStep';

/**
* Steps service.
* @module api/StepsApi
* @version v1
*/
export default class StepsApi {

    /**
    * Constructs a new StepsApi. 
    * @alias module:api/StepsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the stepsGetStep operation.
     * @callback module:api/StepsApi~stepsGetStepCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BuildSystemSharedDTOStep} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a Step by ID
     * Gets a Step by ID. When successful, the response is the requested Step.              If unsuccessful, an appropriate ApiError is returned.  Steps.Read permission is required.
     * @param {Number} stepID The ID of the Step to get.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [isIncludeDeleted] Does it include deleted step, or not
     * @param {module:api/StepsApi~stepsGetStepCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BuildSystemSharedDTOStep}
     */
    stepsGetStep(stepID, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'stepID' is set
      if (stepID === undefined || stepID === null) {
        throw new Error("Missing the required parameter 'stepID' when calling stepsGetStep");
      }

      let pathParams = {
        'stepID': stepID
      };
      let queryParams = {
        'isIncludeDeleted': opts['isIncludeDeleted']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = BuildSystemSharedDTOStep;
      return this.apiClient.callApi(
        '/api/v2/steps/{stepID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the stepsGetSteps operation.
     * @callback module:api/StepsApi~stepsGetStepsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIPagedResponseBuildSystemSharedDTOStep} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Steps
     * Gets a collection of Steps. When successful, the response is a PagedResponse of Steps.              If unsuccessful, an appropriate ApiError is returned.  Steps.Read permission is required.
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] Optional. The page limit.  If not specified, the default page limit is 10.
     * @param {Number} [offset] Optional. The page offset.  If not specified, the default page offset is 0.
     * @param {Boolean} [includeDeleted] Does it include deleted step, or not
     * @param {module:api/StepsApi~stepsGetStepsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIPagedResponseBuildSystemSharedDTOStep}
     */
    stepsGetSteps(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'offset': opts['offset'],
        'includeDeleted': opts['includeDeleted']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = APIPagedResponseBuildSystemSharedDTOStep;
      return this.apiClient.callApi(
        '/api/v2/steps', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the stepsPostStep operation.
     * @callback module:api/StepsApi~stepsPostStepCallback
     * @param {String} error Error message, if any.
     * @param {Number} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a Step
     * No Documentation Found.
     * @param {module:model/BuildSystemSharedDTOStep} buildSystemSharedDTOStep The step to create
     * @param {module:api/StepsApi~stepsPostStepCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Number}
     */
    stepsPostStep(buildSystemSharedDTOStep, callback) {
      let postBody = buildSystemSharedDTOStep;
      // verify the required parameter 'buildSystemSharedDTOStep' is set
      if (buildSystemSharedDTOStep === undefined || buildSystemSharedDTOStep === null) {
        throw new Error("Missing the required parameter 'buildSystemSharedDTOStep' when calling stepsPostStep");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = 'Number';
      return this.apiClient.callApi(
        '/api/v2/steps', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the stepsPutStep operation.
     * @callback module:api/StepsApi~stepsPutStepCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a Step
     * No Documentation Found.
     * @param {Number} stepID The step ID of the step to update
     * @param {module:model/BuildSystemSharedDTOStep} buildSystemSharedDTOStep The updated step
     * @param {module:api/StepsApi~stepsPutStepCallback} callback The callback function, accepting three arguments: error, data, response
     */
    stepsPutStep(stepID, buildSystemSharedDTOStep, callback) {
      let postBody = buildSystemSharedDTOStep;
      // verify the required parameter 'stepID' is set
      if (stepID === undefined || stepID === null) {
        throw new Error("Missing the required parameter 'stepID' when calling stepsPutStep");
      }
      // verify the required parameter 'buildSystemSharedDTOStep' is set
      if (buildSystemSharedDTOStep === undefined || buildSystemSharedDTOStep === null) {
        throw new Error("Missing the required parameter 'buildSystemSharedDTOStep' when calling stepsPutStep");
      }

      let pathParams = {
        'stepID': stepID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['*/*'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/steps/{stepID}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
