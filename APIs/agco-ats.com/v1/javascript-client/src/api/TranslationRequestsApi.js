/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIIPagedResponseGlobalResourcesSharedModelsTranslationRequest from '../model/APIIPagedResponseGlobalResourcesSharedModelsTranslationRequest';
import APIModelsApiError from '../model/APIModelsApiError';
import GlobalResourcesSharedModelsTranslationRequest from '../model/GlobalResourcesSharedModelsTranslationRequest';

/**
* TranslationRequests service.
* @module api/TranslationRequestsApi
* @version v1
*/
export default class TranslationRequestsApi {

    /**
    * Constructs a new TranslationRequestsApi. 
    * @alias module:api/TranslationRequestsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the translationRequestsCreateTranslationRequest operation.
     * @callback module:api/TranslationRequestsApi~translationRequestsCreateTranslationRequestCallback
     * @param {String} error Error message, if any.
     * @param {Number} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a translation request. Accepts a TranslationRequest object. Returns the Id of the created object. The state of the TranslationRequest must be ‘NotSubmitted’.
     * No Documentation Found.
     * @param {module:model/GlobalResourcesSharedModelsTranslationRequest} globalResourcesSharedModelsTranslationRequest 
     * @param {module:api/TranslationRequestsApi~translationRequestsCreateTranslationRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Number}
     */
    translationRequestsCreateTranslationRequest(globalResourcesSharedModelsTranslationRequest, callback) {
      let postBody = globalResourcesSharedModelsTranslationRequest;
      // verify the required parameter 'globalResourcesSharedModelsTranslationRequest' is set
      if (globalResourcesSharedModelsTranslationRequest === undefined || globalResourcesSharedModelsTranslationRequest === null) {
        throw new Error("Missing the required parameter 'globalResourcesSharedModelsTranslationRequest' when calling translationRequestsCreateTranslationRequest");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = 'Number';
      return this.apiClient.callApi(
        '/api/v2/TranslationRequests', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the translationRequestsGetTranslationRequest operation.
     * @callback module:api/TranslationRequestsApi~translationRequestsGetTranslationRequestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GlobalResourcesSharedModelsTranslationRequest} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a TranslationRequest object by id. Returns TranslationRequest object with its language ids and string ids.
     * No Documentation Found.
     * @param {Number} id 
     * @param {module:api/TranslationRequestsApi~translationRequestsGetTranslationRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GlobalResourcesSharedModelsTranslationRequest}
     */
    translationRequestsGetTranslationRequest(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling translationRequestsGetTranslationRequest");
      }

      let pathParams = {
        'Id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = GlobalResourcesSharedModelsTranslationRequest;
      return this.apiClient.callApi(
        '/api/v2/TranslationRequests/{Id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the translationRequestsGetTranslationRequests operation.
     * @callback module:api/TranslationRequestsApi~translationRequestsGetTranslationRequestsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIIPagedResponseGlobalResourcesSharedModelsTranslationRequest} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all TranslationRequest objects. Returns a PagedResponse of TranslationRequest objects with their language ids and string ids.
     * No Documentation Found.
     * @param {Object} opts Optional parameters
     * @param {Number} [limit] 
     * @param {Number} [offset] 
     * @param {module:api/TranslationRequestsApi~translationRequestsGetTranslationRequestsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIIPagedResponseGlobalResourcesSharedModelsTranslationRequest}
     */
    translationRequestsGetTranslationRequests(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = APIIPagedResponseGlobalResourcesSharedModelsTranslationRequest;
      return this.apiClient.callApi(
        '/api/v2/TranslationRequests', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the translationRequestsUpdateTranslationRequest operation.
     * @callback module:api/TranslationRequestsApi~translationRequestsUpdateTranslationRequestCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a TranslationRequest object by id. Accepts a TranslationRequest object.
     * No Documentation Found.
     * @param {Number} id 
     * @param {module:model/GlobalResourcesSharedModelsTranslationRequest} globalResourcesSharedModelsTranslationRequest 
     * @param {Object} opts Optional parameters
     * @param {Boolean} [doResendRequest] 
     * @param {module:api/TranslationRequestsApi~translationRequestsUpdateTranslationRequestCallback} callback The callback function, accepting three arguments: error, data, response
     */
    translationRequestsUpdateTranslationRequest(id, globalResourcesSharedModelsTranslationRequest, opts, callback) {
      opts = opts || {};
      let postBody = globalResourcesSharedModelsTranslationRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling translationRequestsUpdateTranslationRequest");
      }
      // verify the required parameter 'globalResourcesSharedModelsTranslationRequest' is set
      if (globalResourcesSharedModelsTranslationRequest === undefined || globalResourcesSharedModelsTranslationRequest === null) {
        throw new Error("Missing the required parameter 'globalResourcesSharedModelsTranslationRequest' when calling translationRequestsUpdateTranslationRequest");
      }

      let pathParams = {
        'Id': id
      };
      let queryParams = {
        'doResendRequest': opts['doResendRequest']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['*/*'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/TranslationRequests/{Id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the translationRequestsUpdateTranslationRequestStrings operation.
     * @callback module:api/TranslationRequestsApi~translationRequestsUpdateTranslationRequestStringsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * No Documentation Found.
     * No Documentation Found.
     * @param {Number} id 
     * @param {Array.<String>} requestBody 
     * @param {module:api/TranslationRequestsApi~translationRequestsUpdateTranslationRequestStringsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    translationRequestsUpdateTranslationRequestStrings(id, requestBody, callback) {
      let postBody = requestBody;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling translationRequestsUpdateTranslationRequestStrings");
      }
      // verify the required parameter 'requestBody' is set
      if (requestBody === undefined || requestBody === null) {
        throw new Error("Missing the required parameter 'requestBody' when calling translationRequestsUpdateTranslationRequestStrings");
      }

      let pathParams = {
        'Id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['*/*'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/TranslationRequests/{Id}/Strings', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
