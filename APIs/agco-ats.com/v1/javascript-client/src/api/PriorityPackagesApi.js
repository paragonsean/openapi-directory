/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIModelsApiError from '../model/APIModelsApiError';
import APIPagedResponseUpdateSystemModelsPriorityPackage from '../model/APIPagedResponseUpdateSystemModelsPriorityPackage';
import UpdateSystemModelsPriorityPackage from '../model/UpdateSystemModelsPriorityPackage';

/**
* PriorityPackages service.
* @module api/PriorityPackagesApi
* @version v1
*/
export default class PriorityPackagesApi {

    /**
    * Constructs a new PriorityPackagesApi. 
    * @alias module:api/PriorityPackagesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the priorityPackagesDeletePriorityPackages operation.
     * @callback module:api/PriorityPackagesApi~priorityPackagesDeletePriorityPackagesCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a Priority Package for a Client.
     * No Documentation Found.
     * @param {String} ID The Priority Package ID
     * @param {module:api/PriorityPackagesApi~priorityPackagesDeletePriorityPackagesCallback} callback The callback function, accepting three arguments: error, data, response
     */
    priorityPackagesDeletePriorityPackages(ID, callback) {
      let postBody = null;
      // verify the required parameter 'ID' is set
      if (ID === undefined || ID === null) {
        throw new Error("Missing the required parameter 'ID' when calling priorityPackagesDeletePriorityPackages");
      }

      let pathParams = {
        'ID': ID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/PriorityPackages/{ID}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the priorityPackagesGetPriorityPackage operation.
     * @callback module:api/PriorityPackagesApi~priorityPackagesGetPriorityPackageCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateSystemModelsPriorityPackage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a Priority Packages for a Client.
     * No Documentation Found.
     * @param {String} ID The Priority Package ID
     * @param {module:api/PriorityPackagesApi~priorityPackagesGetPriorityPackageCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateSystemModelsPriorityPackage}
     */
    priorityPackagesGetPriorityPackage(ID, callback) {
      let postBody = null;
      // verify the required parameter 'ID' is set
      if (ID === undefined || ID === null) {
        throw new Error("Missing the required parameter 'ID' when calling priorityPackagesGetPriorityPackage");
      }

      let pathParams = {
        'ID': ID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = UpdateSystemModelsPriorityPackage;
      return this.apiClient.callApi(
        '/api/v2/PriorityPackages/{ID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the priorityPackagesGetPriorityPackages operation.
     * @callback module:api/PriorityPackagesApi~priorityPackagesGetPriorityPackagesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIPagedResponseUpdateSystemModelsPriorityPackage} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of Priority Packages by Client.
     * No Documentation Found.
     * @param {Object} opts Optional parameters
     * @param {String} [clientID] Optional. Filter priority packages by ClientID.
     * @param {module:model/String} [status] Optional. Filter returned packages by status. By default only active packages will be returned.
     * @param {Number} [limit] Optional. The page limit. The default page limit is 10.
     * @param {Number} [offset] Optional. The page offset. The default page offset is 0.
     * @param {module:api/PriorityPackagesApi~priorityPackagesGetPriorityPackagesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIPagedResponseUpdateSystemModelsPriorityPackage}
     */
    priorityPackagesGetPriorityPackages(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'ClientID': opts['clientID'],
        'Status': opts['status'],
        'limit': opts['limit'],
        'offset': opts['offset']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = APIPagedResponseUpdateSystemModelsPriorityPackage;
      return this.apiClient.callApi(
        '/api/v2/PriorityPackages', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the priorityPackagesPostPriorityPackages operation.
     * @callback module:api/PriorityPackagesApi~priorityPackagesPostPriorityPackagesCallback
     * @param {String} error Error message, if any.
     * @param {String} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a Priority Package for a Client.
     * No Documentation Found.
     * @param {module:model/UpdateSystemModelsPriorityPackage} updateSystemModelsPriorityPackage The PriorityPackage to add
     * @param {module:api/PriorityPackagesApi~priorityPackagesPostPriorityPackagesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link String}
     */
    priorityPackagesPostPriorityPackages(updateSystemModelsPriorityPackage, callback) {
      let postBody = updateSystemModelsPriorityPackage;
      // verify the required parameter 'updateSystemModelsPriorityPackage' is set
      if (updateSystemModelsPriorityPackage === undefined || updateSystemModelsPriorityPackage === null) {
        throw new Error("Missing the required parameter 'updateSystemModelsPriorityPackage' when calling priorityPackagesPostPriorityPackages");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = 'String';
      return this.apiClient.callApi(
        '/api/v2/PriorityPackages', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
