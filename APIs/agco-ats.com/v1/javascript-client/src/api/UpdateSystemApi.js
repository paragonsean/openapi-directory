/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIModelsApiError from '../model/APIModelsApiError';
import UpdateSystemModelsCheckinResult from '../model/UpdateSystemModelsCheckinResult';

/**
* UpdateSystem service.
* @module api/UpdateSystemApi
* @version v1
*/
export default class UpdateSystemApi {

    /**
    * Constructs a new UpdateSystemApi. 
    * @alias module:api/UpdateSystemApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the updateSystemGetCachedFiles operation.
     * @callback module:api/UpdateSystemApi~updateSystemGetCachedFilesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<String>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of Cached Files installed on the client Machine.
     * No Documentation Found.
     * @param {String} clientID The ClientID of the Client
     * @param {Boolean} expired Only Expired Files (true|false)
     * @param {module:api/UpdateSystemApi~updateSystemGetCachedFilesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<String>}
     */
    updateSystemGetCachedFiles(clientID, expired, callback) {
      let postBody = null;
      // verify the required parameter 'clientID' is set
      if (clientID === undefined || clientID === null) {
        throw new Error("Missing the required parameter 'clientID' when calling updateSystemGetCachedFiles");
      }
      // verify the required parameter 'expired' is set
      if (expired === undefined || expired === null) {
        throw new Error("Missing the required parameter 'expired' when calling updateSystemGetCachedFiles");
      }

      let pathParams = {
        'ClientID': clientID
      };
      let queryParams = {
        'Expired': expired
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = ['String'];
      return this.apiClient.callApi(
        '/api/v2/Clients/{ClientID}/CachedFiles', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateSystemGetCheckin operation.
     * @callback module:api/UpdateSystemApi~updateSystemGetCheckinCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UpdateSystemModelsCheckinResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Checks the Client ID into the Update System.
     * No Documentation Found.
     * @param {String} clientID The Client ID to check-in.  If this is a new client ID it will be added to Clients.
     * @param {Boolean} preview Get Pkgs w\\o updating Datetimes(true|false)
     * @param {Object} opts Optional parameters
     * @param {Boolean} [runAllInventories] Force return inventories. Defaults to false.
     * @param {module:api/UpdateSystemApi~updateSystemGetCheckinCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UpdateSystemModelsCheckinResult}
     */
    updateSystemGetCheckin(clientID, preview, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'clientID' is set
      if (clientID === undefined || clientID === null) {
        throw new Error("Missing the required parameter 'clientID' when calling updateSystemGetCheckin");
      }
      // verify the required parameter 'preview' is set
      if (preview === undefined || preview === null) {
        throw new Error("Missing the required parameter 'preview' when calling updateSystemGetCheckin");
      }

      let pathParams = {
      };
      let queryParams = {
        'ClientID': clientID,
        'Preview': preview,
        'RunAllInventories': opts['runAllInventories']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = UpdateSystemModelsCheckinResult;
      return this.apiClient.callApi(
        '/api/v2/UpdateSystem', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
