/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIModelsApiError from '../model/APIModelsApiError';
import ContentSubmissionSharedBusinessEntitiesContentSubmissionType from '../model/ContentSubmissionSharedBusinessEntitiesContentSubmissionType';

/**
* ContentSubmissionTypes service.
* @module api/ContentSubmissionTypesApi
* @version v1
*/
export default class ContentSubmissionTypesApi {

    /**
    * Constructs a new ContentSubmissionTypesApi. 
    * @alias module:api/ContentSubmissionTypesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the contentSubmissionTypesDeleteContentSubmissionType operation.
     * @callback module:api/ContentSubmissionTypesApi~contentSubmissionTypesDeleteContentSubmissionTypeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove a Content Submission Type
     * No Documentation Found.
     * @param {Number} id The ID of the Content Submission Type
     * @param {module:api/ContentSubmissionTypesApi~contentSubmissionTypesDeleteContentSubmissionTypeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    contentSubmissionTypesDeleteContentSubmissionType(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling contentSubmissionTypesDeleteContentSubmissionType");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/ContentSubmissionTypes/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the contentSubmissionTypesGetContentSubmissionType operation.
     * @callback module:api/ContentSubmissionTypesApi~contentSubmissionTypesGetContentSubmissionTypeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ContentSubmissionSharedBusinessEntitiesContentSubmissionType} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a Content Submission Type by its ID.
     * No Documentation Found.
     * @param {Number} id The ID of the Content Submission Type
     * @param {module:api/ContentSubmissionTypesApi~contentSubmissionTypesGetContentSubmissionTypeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ContentSubmissionSharedBusinessEntitiesContentSubmissionType}
     */
    contentSubmissionTypesGetContentSubmissionType(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling contentSubmissionTypesGetContentSubmissionType");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = ContentSubmissionSharedBusinessEntitiesContentSubmissionType;
      return this.apiClient.callApi(
        '/api/v2/ContentSubmissionTypes/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the contentSubmissionTypesGetContentSubmissionTypes operation.
     * @callback module:api/ContentSubmissionTypesApi~contentSubmissionTypesGetContentSubmissionTypesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ContentSubmissionSharedBusinessEntitiesContentSubmissionType>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns available Content Submission Types.
     * No Documentation Found.
     * @param {Object} opts Optional parameters
     * @param {Boolean} [enabled] 
     * @param {module:api/ContentSubmissionTypesApi~contentSubmissionTypesGetContentSubmissionTypesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ContentSubmissionSharedBusinessEntitiesContentSubmissionType>}
     */
    contentSubmissionTypesGetContentSubmissionTypes(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'enabled': opts['enabled']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = [ContentSubmissionSharedBusinessEntitiesContentSubmissionType];
      return this.apiClient.callApi(
        '/api/v2/ContentSubmissionTypes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the contentSubmissionTypesPostContentSubmissionType operation.
     * @callback module:api/ContentSubmissionTypesApi~contentSubmissionTypesPostContentSubmissionTypeCallback
     * @param {String} error Error message, if any.
     * @param {Number} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a Content Submission Type
     * No Documentation Found.
     * @param {module:model/ContentSubmissionSharedBusinessEntitiesContentSubmissionType} contentSubmissionSharedBusinessEntitiesContentSubmissionType The Content Submission Type
     * @param {module:api/ContentSubmissionTypesApi~contentSubmissionTypesPostContentSubmissionTypeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Number}
     */
    contentSubmissionTypesPostContentSubmissionType(contentSubmissionSharedBusinessEntitiesContentSubmissionType, callback) {
      let postBody = contentSubmissionSharedBusinessEntitiesContentSubmissionType;
      // verify the required parameter 'contentSubmissionSharedBusinessEntitiesContentSubmissionType' is set
      if (contentSubmissionSharedBusinessEntitiesContentSubmissionType === undefined || contentSubmissionSharedBusinessEntitiesContentSubmissionType === null) {
        throw new Error("Missing the required parameter 'contentSubmissionSharedBusinessEntitiesContentSubmissionType' when calling contentSubmissionTypesPostContentSubmissionType");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = 'Number';
      return this.apiClient.callApi(
        '/api/v2/ContentSubmissionTypes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the contentSubmissionTypesPutContentSubmissionType operation.
     * @callback module:api/ContentSubmissionTypesApi~contentSubmissionTypesPutContentSubmissionTypeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a Content Submission Type
     * No Documentation Found.
     * @param {Number} id The ID of the Content Submission Type
     * @param {module:model/ContentSubmissionSharedBusinessEntitiesContentSubmissionType} contentSubmissionSharedBusinessEntitiesContentSubmissionType The Content Submission Type
     * @param {module:api/ContentSubmissionTypesApi~contentSubmissionTypesPutContentSubmissionTypeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    contentSubmissionTypesPutContentSubmissionType(id, contentSubmissionSharedBusinessEntitiesContentSubmissionType, callback) {
      let postBody = contentSubmissionSharedBusinessEntitiesContentSubmissionType;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling contentSubmissionTypesPutContentSubmissionType");
      }
      // verify the required parameter 'contentSubmissionSharedBusinessEntitiesContentSubmissionType' is set
      if (contentSubmissionSharedBusinessEntitiesContentSubmissionType === undefined || contentSubmissionSharedBusinessEntitiesContentSubmissionType === null) {
        throw new Error("Missing the required parameter 'contentSubmissionSharedBusinessEntitiesContentSubmissionType' when calling contentSubmissionTypesPutContentSubmissionType");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['*/*'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/ContentSubmissionTypes/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
