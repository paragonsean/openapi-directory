/**
 * AGCO API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import APIIPagedResponseAuthorizationCodesSharedModelsAuthorizationCode from '../model/APIIPagedResponseAuthorizationCodesSharedModelsAuthorizationCode';
import APIModelsApiError from '../model/APIModelsApiError';
import AuthorizationCodesSharedModelsAuthorizationCode from '../model/AuthorizationCodesSharedModelsAuthorizationCode';
import AuthorizationCodesSharedModelsAuthorizationContactInformation from '../model/AuthorizationCodesSharedModelsAuthorizationContactInformation';
import AuthorizationCodesSharedModelsCodeValidationModel from '../model/AuthorizationCodesSharedModelsCodeValidationModel';

/**
* AuthorizationCodes service.
* @module api/AuthorizationCodesApi
* @version v1
*/
export default class AuthorizationCodesApi {

    /**
    * Constructs a new AuthorizationCodesApi. 
    * @alias module:api/AuthorizationCodesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the authorizationCodesDeleteAuthorizationCode operation.
     * @callback module:api/AuthorizationCodesApi~authorizationCodesDeleteAuthorizationCodeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Hide an authorization code.
     * No Documentation Found.
     * @param {Number} id The id of the authorization code.
     * @param {module:api/AuthorizationCodesApi~authorizationCodesDeleteAuthorizationCodeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    authorizationCodesDeleteAuthorizationCode(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling authorizationCodesDeleteAuthorizationCode");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['*/*'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/AuthorizationCodes/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the authorizationCodesGetAuthorizationCode operation.
     * @callback module:api/AuthorizationCodesApi~authorizationCodesGetAuthorizationCodeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AuthorizationCodesSharedModelsAuthorizationCode} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get an authorization code by its ID.
     * No Documentation Found.
     * @param {Number} id The id of the authorization code.
     * @param {module:api/AuthorizationCodesApi~authorizationCodesGetAuthorizationCodeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AuthorizationCodesSharedModelsAuthorizationCode}
     */
    authorizationCodesGetAuthorizationCode(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling authorizationCodesGetAuthorizationCode");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = AuthorizationCodesSharedModelsAuthorizationCode;
      return this.apiClient.callApi(
        '/api/v2/AuthorizationCodes/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the authorizationCodesGetAuthorizationCodes operation.
     * @callback module:api/AuthorizationCodesApi~authorizationCodesGetAuthorizationCodesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/APIIPagedResponseAuthorizationCodesSharedModelsAuthorizationCode} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get authorization codes.
     * Additional searches: validationParameters[Name]=Value and dataParameters[Name]=Value. These can be used to search for authorization codes that have been generated using specified values for data or validation parameters.
     * @param {Object} opts Optional parameters
     * @param {String} [code] Optional. If provided, searches for entities with the provided authorization code.
     * @param {Number} [limit] Optional. The page limit.  If not specified, the default page limit is 10.
     * @param {Number} [offset] Optional. The page offset.  If not specified, the default page offset is 0.
     * @param {String} [definitionID] Optional. If specified, filters codes by definition id.
     * @param {Number} [createdByUserID] Optional. If specified, filters codes to those created by the given User ID.
     * @param {Number} [deletedByUserID] Optional. If specified, filters codes to those deleted by the given User ID.
     * @param {Boolean} [includeDeleted] Optional. Whether to include deleted codes. 'False' by default.
     * @param {module:api/AuthorizationCodesApi~authorizationCodesGetAuthorizationCodesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/APIIPagedResponseAuthorizationCodesSharedModelsAuthorizationCode}
     */
    authorizationCodesGetAuthorizationCodes(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'code': opts['code'],
        'limit': opts['limit'],
        'offset': opts['offset'],
        'definitionID': opts['definitionID'],
        'createdByUserID': opts['createdByUserID'],
        'deletedByUserID': opts['deletedByUserID'],
        'includeDeleted': opts['includeDeleted']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = APIIPagedResponseAuthorizationCodesSharedModelsAuthorizationCode;
      return this.apiClient.callApi(
        '/api/v2/AuthorizationCodes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the authorizationCodesGetContactInformation operation.
     * @callback module:api/AuthorizationCodesApi~authorizationCodesGetContactInformationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AuthorizationCodesSharedModelsAuthorizationContactInformation} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get contact information for an authorization code.
     * No Documentation Found.
     * @param {Number} id The id of the authorization code.
     * @param {module:api/AuthorizationCodesApi~authorizationCodesGetContactInformationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AuthorizationCodesSharedModelsAuthorizationContactInformation}
     */
    authorizationCodesGetContactInformation(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling authorizationCodesGetContactInformation");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = AuthorizationCodesSharedModelsAuthorizationContactInformation;
      return this.apiClient.callApi(
        '/api/v2/AuthorizationCodes/{id}/ContactInformation', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the authorizationCodesPostAuthorizationCode operation.
     * @callback module:api/AuthorizationCodesApi~authorizationCodesPostAuthorizationCodeCallback
     * @param {String} error Error message, if any.
     * @param {Number} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generates an authorization code using the provided definition and parameters.
     * No Documentation Found.
     * @param {module:model/AuthorizationCodesSharedModelsAuthorizationCode} authorizationCodesSharedModelsAuthorizationCode The model from which to generate an authorization code.
     * @param {module:api/AuthorizationCodesApi~authorizationCodesPostAuthorizationCodeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Number}
     */
    authorizationCodesPostAuthorizationCode(authorizationCodesSharedModelsAuthorizationCode, callback) {
      let postBody = authorizationCodesSharedModelsAuthorizationCode;
      // verify the required parameter 'authorizationCodesSharedModelsAuthorizationCode' is set
      if (authorizationCodesSharedModelsAuthorizationCode === undefined || authorizationCodesSharedModelsAuthorizationCode === null) {
        throw new Error("Missing the required parameter 'authorizationCodesSharedModelsAuthorizationCode' when calling authorizationCodesPostAuthorizationCode");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = 'Number';
      return this.apiClient.callApi(
        '/api/v2/AuthorizationCodes', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the authorizationCodesPutAuthorizationCode operation.
     * @callback module:api/AuthorizationCodesApi~authorizationCodesPutAuthorizationCodeCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update an authorization code.
     * No Documentation Found.
     * @param {Number} id The id of the authorization code.
     * @param {module:model/AuthorizationCodesSharedModelsAuthorizationCode} authorizationCodesSharedModelsAuthorizationCode The model from which to update an authorization code.
     * @param {module:api/AuthorizationCodesApi~authorizationCodesPutAuthorizationCodeCallback} callback The callback function, accepting three arguments: error, data, response
     */
    authorizationCodesPutAuthorizationCode(id, authorizationCodesSharedModelsAuthorizationCode, callback) {
      let postBody = authorizationCodesSharedModelsAuthorizationCode;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling authorizationCodesPutAuthorizationCode");
      }
      // verify the required parameter 'authorizationCodesSharedModelsAuthorizationCode' is set
      if (authorizationCodesSharedModelsAuthorizationCode === undefined || authorizationCodesSharedModelsAuthorizationCode === null) {
        throw new Error("Missing the required parameter 'authorizationCodesSharedModelsAuthorizationCode' when calling authorizationCodesPutAuthorizationCode");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json', 'application/x-www-form-urlencoded', 'application/xml', 'text/json', 'text/xml'];
      let accepts = ['*/*'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/AuthorizationCodes/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the authorizationCodesValidateAuthorizationCode operation.
     * @callback module:api/AuthorizationCodesApi~authorizationCodesValidateAuthorizationCodeCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AuthorizationCodesSharedModelsCodeValidationModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * No Documentation Found.
     * No Documentation Found.
     * @param {Number} id 
     * @param {module:api/AuthorizationCodesApi~authorizationCodesValidateAuthorizationCodeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AuthorizationCodesSharedModelsCodeValidationModel}
     */
    authorizationCodesValidateAuthorizationCode(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling authorizationCodesValidateAuthorizationCode");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json', 'application/xml', 'text/json', 'text/xml'];
      let returnType = AuthorizationCodesSharedModelsCodeValidationModel;
      return this.apiClient.callApi(
        '/api/v2/AuthorizationCodes/{id}/Validate', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
