/*
 * Users (Okta API)
 * The [Okta User API](/docs/api/rest/users.html) provides operations to manage users in your organization.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for LifecycleOperationsApi
 */
@Disabled
public class LifecycleOperationsApiTest {

    private final LifecycleOperationsApi api = new LifecycleOperationsApi();

    /**
     * Activate User
     *
     * Activate User
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void activateUserTest() throws ApiException {
        String userId = null;
        String sendEmail = null;
        api.activateUser(userId, sendEmail);
        // TODO: test validations
    }

    /**
     * Deactivate User
     *
     * Deactivate User
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deactivateUserTest() throws ApiException {
        String userId = null;
        api.deactivateUser(userId);
        // TODO: test validations
    }

    /**
     * Reset Password
     *
     * Reset Password
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resetPasswordTest() throws ApiException {
        String userId = null;
        String sendEmail = null;
        api.resetPassword(userId, sendEmail);
        // TODO: test validations
    }

    /**
     * Set Temp Password
     *
     * Set Temp Password
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void setTempPasswordTest() throws ApiException {
        String userId = null;
        String tempPassword = null;
        api.setTempPassword(userId, tempPassword);
        // TODO: test validations
    }

    /**
     * Suspend User
     *
     * Suspend User
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void suspendUserTest() throws ApiException {
        String userId = null;
        api.suspendUser(userId);
        // TODO: test validations
    }

    /**
     * Unlock User
     *
     * Unlock User
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unlockUserTest() throws ApiException {
        String userId = null;
        api.unlockUser(userId);
        // TODO: test validations
    }

    /**
     * Unsuspend User
     *
     * Unsuspend User
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unsuspendUserTest() throws ApiException {
        String userId = null;
        api.unsuspendUser(userId);
        // TODO: test validations
    }

}
