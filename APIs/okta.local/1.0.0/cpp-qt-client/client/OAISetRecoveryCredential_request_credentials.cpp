/**
 * Users (Okta API)
 * The [Okta User API](/docs/api/rest/users.html) provides operations to manage users in your organization.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISetRecoveryCredential_request_credentials.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISetRecoveryCredential_request_credentials::OAISetRecoveryCredential_request_credentials(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISetRecoveryCredential_request_credentials::OAISetRecoveryCredential_request_credentials() {
    this->initializeModel();
}

OAISetRecoveryCredential_request_credentials::~OAISetRecoveryCredential_request_credentials() {}

void OAISetRecoveryCredential_request_credentials::initializeModel() {

    m_recovery_question_isSet = false;
    m_recovery_question_isValid = false;
}

void OAISetRecoveryCredential_request_credentials::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISetRecoveryCredential_request_credentials::fromJsonObject(QJsonObject json) {

    m_recovery_question_isValid = ::OpenAPI::fromJsonValue(m_recovery_question, json[QString("recovery_question")]);
    m_recovery_question_isSet = !json[QString("recovery_question")].isNull() && m_recovery_question_isValid;
}

QString OAISetRecoveryCredential_request_credentials::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISetRecoveryCredential_request_credentials::asJsonObject() const {
    QJsonObject obj;
    if (m_recovery_question.isSet()) {
        obj.insert(QString("recovery_question"), ::OpenAPI::toJsonValue(m_recovery_question));
    }
    return obj;
}

OAISetRecoveryCredential_request_credentials_recovery_question OAISetRecoveryCredential_request_credentials::getRecoveryQuestion() const {
    return m_recovery_question;
}
void OAISetRecoveryCredential_request_credentials::setRecoveryQuestion(const OAISetRecoveryCredential_request_credentials_recovery_question &recovery_question) {
    m_recovery_question = recovery_question;
    m_recovery_question_isSet = true;
}

bool OAISetRecoveryCredential_request_credentials::is_recovery_question_Set() const{
    return m_recovery_question_isSet;
}

bool OAISetRecoveryCredential_request_credentials::is_recovery_question_Valid() const{
    return m_recovery_question_isValid;
}

bool OAISetRecoveryCredential_request_credentials::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_recovery_question.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISetRecoveryCredential_request_credentials::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
