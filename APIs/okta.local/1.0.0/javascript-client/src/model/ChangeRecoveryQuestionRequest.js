/**
 * Users (Okta API)
 * The [Okta User API](/docs/api/rest/users.html) provides operations to manage users in your organization.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ChangePasswordRequestOldPassword from './ChangePasswordRequestOldPassword';
import ChangeRecoveryQuestionRequestRecoveryQuestion from './ChangeRecoveryQuestionRequestRecoveryQuestion';

/**
 * The ChangeRecoveryQuestionRequest model module.
 * @module model/ChangeRecoveryQuestionRequest
 * @version 1.0.0
 */
class ChangeRecoveryQuestionRequest {
    /**
     * Constructs a new <code>ChangeRecoveryQuestionRequest</code>.
     * @alias module:model/ChangeRecoveryQuestionRequest
     */
    constructor() { 
        
        ChangeRecoveryQuestionRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ChangeRecoveryQuestionRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ChangeRecoveryQuestionRequest} obj Optional instance to populate.
     * @return {module:model/ChangeRecoveryQuestionRequest} The populated <code>ChangeRecoveryQuestionRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ChangeRecoveryQuestionRequest();

            if (data.hasOwnProperty('password')) {
                obj['password'] = ChangePasswordRequestOldPassword.constructFromObject(data['password']);
            }
            if (data.hasOwnProperty('recovery_question')) {
                obj['recovery_question'] = ChangeRecoveryQuestionRequestRecoveryQuestion.constructFromObject(data['recovery_question']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ChangeRecoveryQuestionRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ChangeRecoveryQuestionRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `password`
        if (data['password']) { // data not null
          ChangePasswordRequestOldPassword.validateJSON(data['password']);
        }
        // validate the optional field `recovery_question`
        if (data['recovery_question']) { // data not null
          ChangeRecoveryQuestionRequestRecoveryQuestion.validateJSON(data['recovery_question']);
        }

        return true;
    }


}



/**
 * @member {module:model/ChangePasswordRequestOldPassword} password
 */
ChangeRecoveryQuestionRequest.prototype['password'] = undefined;

/**
 * @member {module:model/ChangeRecoveryQuestionRequestRecoveryQuestion} recovery_question
 */
ChangeRecoveryQuestionRequest.prototype['recovery_question'] = undefined;






export default ChangeRecoveryQuestionRequest;

