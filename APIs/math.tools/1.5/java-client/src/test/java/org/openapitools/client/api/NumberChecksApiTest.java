/*
 * Numbers API
 * All about Numbers. REST access with json/xml/jsonp result support. Below is the documentation for the Numbers API. You can try them out right here. Find more information and subscribe at [math.tools](https://math.tools/api/numbers/)   
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for NumberChecksApi
 */
@Disabled
public class NumberChecksApiTest {

    private final NumberChecksApi api = new NumberChecksApi();

    /**
     * Checks whether a given number is a cube number or not.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void numbersIsCubeGetTest() throws ApiException {
        Integer number = null;
        api.numbersIsCubeGet(number);
        // TODO: test validations
    }

    /**
     * Checks whether a given number is a palindrome number or not.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void numbersIsPalindromeGetTest() throws ApiException {
        Integer number = null;
        api.numbersIsPalindromeGet(number);
        // TODO: test validations
    }

    /**
     * Checks whether a given number is a square number or not.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void numbersIsSquareGetTest() throws ApiException {
        Integer number = null;
        api.numbersIsSquareGet(number);
        // TODO: test validations
    }

    /**
     * Checks whether a given number is a triangle number or not.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void numbersIsTriangleGetTest() throws ApiException {
        Integer number = null;
        api.numbersIsTriangleGet(number);
        // TODO: test validations
    }

    /**
     * Checks whether a given number is a known fermat prime number or not.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void numbersPrimeIsFermatPrimeGet_0Test() throws ApiException {
        Integer number = null;
        api.numbersPrimeIsFermatPrimeGet_0(number);
        // TODO: test validations
    }

    /**
     * Checks whether a given number is a known fibonacci prime number or not.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void numbersPrimeIsFibonacciPrimeGet_0Test() throws ApiException {
        Integer number = null;
        api.numbersPrimeIsFibonacciPrimeGet_0(number);
        // TODO: test validations
    }

    /**
     * Checks whether a given number is a known mersenne prime number or not.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void numbersPrimeIsMersennePrimeGet_0Test() throws ApiException {
        Integer number = null;
        api.numbersPrimeIsMersennePrimeGet_0(number);
        // TODO: test validations
    }

    /**
     * Checks whether a given number is a known partition prime number or not.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void numbersPrimeIsPartitionPrimeGet_0Test() throws ApiException {
        Integer number = null;
        api.numbersPrimeIsPartitionPrimeGet_0(number);
        // TODO: test validations
    }

    /**
     * Checks whether a given number is a known pell prime number or not.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void numbersPrimeIsPellPrimeGet_0Test() throws ApiException {
        Integer number = null;
        api.numbersPrimeIsPellPrimeGet_0(number);
        // TODO: test validations
    }

    /**
     * Checks whether a given number is a perfect number or not.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void numbersPrimeIsPerfectGet_0Test() throws ApiException {
        Integer number = null;
        api.numbersPrimeIsPerfectGet_0(number);
        // TODO: test validations
    }

    /**
     * Checks whether a given number is a known prime number or not.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void numbersPrimeIsPrimeGet_0Test() throws ApiException {
        Integer number = null;
        api.numbersPrimeIsPrimeGet_0(number);
        // TODO: test validations
    }

}
