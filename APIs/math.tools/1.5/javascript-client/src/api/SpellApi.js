/**
 * Numbers API
 * All about Numbers. REST access with json/xml/jsonp result support. Below is the documentation for the Numbers API. You can try them out right here. Find more information and subscribe at [math.tools](https://math.tools/api/numbers/)   
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";

/**
* Spell service.
* @module api/SpellApi
* @version 1.5
*/
export default class SpellApi {

    /**
    * Constructs a new SpellApi. 
    * @alias module:api/SpellApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the numbersCardinalGet operation.
     * @callback module:api/SpellApi~numbersCardinalGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the cardinal of the given number
     * @param {Object} opts Optional parameters
     * @param {Number} [number] Number value
     * @param {String} [language] Language to use
     * @param {module:api/SpellApi~numbersCardinalGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    numbersCardinalGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'number': opts['number'],
        'language': opts['language']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Mathtools-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/numbers/cardinal', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the numbersCurrencyGet operation.
     * @callback module:api/SpellApi~numbersCurrencyGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Spells out the number as a currency
     * @param {Object} opts Optional parameters
     * @param {Number} [number] Number to spell
     * @param {String} [language] Language to use
     * @param {module:api/SpellApi~numbersCurrencyGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    numbersCurrencyGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'number': opts['number'],
        'language': opts['language']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Mathtools-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/numbers/currency', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the numbersOrdinalGet operation.
     * @callback module:api/SpellApi~numbersOrdinalGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the ordinal of the given number
     * @param {Object} opts Optional parameters
     * @param {Number} [number] Number value
     * @param {module:api/SpellApi~numbersOrdinalGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    numbersOrdinalGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'number': opts['number']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['X-Mathtools-Api-Secret'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/numbers/ordinal', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
