/**
 * Numbers API
 * All about Numbers. REST access with json/xml/jsonp result support. Below is the documentation for the Numbers API. You can try them out right here. Find more information and subscribe at [math.tools](https://math.tools/api/numbers/)   
 *
 * The version of the OpenAPI document: 1.5
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BaseConversionApi from './api/BaseConversionApi';
import NumberChecksApi from './api/NumberChecksApi';
import NumberFactsApi from './api/NumberFactsApi';
import NumberGenerationApi from './api/NumberGenerationApi';
import NumberOfTheDayApi from './api/NumberOfTheDayApi';
import NumberSystemsConversionApi from './api/NumberSystemsConversionApi';
import PIApi from './api/PIApi';
import PrimeApi from './api/PrimeApi';
import SpellApi from './api/SpellApi';


/**
* All about Numbers. REST access with json/xml/jsonp result support. Below is the documentation for the Numbers API. You can try them out right here. Find more information and subscribe at [math.tools](https://math.tools/api/numbers/)   .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var NumbersApi = require('index'); // See note below*.
* var xxxSvc = new NumbersApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new NumbersApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new NumbersApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new NumbersApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.5
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
    * The BaseConversionApi service constructor.
    * @property {module:api/BaseConversionApi}
    */
    BaseConversionApi,

    /**
    * The NumberChecksApi service constructor.
    * @property {module:api/NumberChecksApi}
    */
    NumberChecksApi,

    /**
    * The NumberFactsApi service constructor.
    * @property {module:api/NumberFactsApi}
    */
    NumberFactsApi,

    /**
    * The NumberGenerationApi service constructor.
    * @property {module:api/NumberGenerationApi}
    */
    NumberGenerationApi,

    /**
    * The NumberOfTheDayApi service constructor.
    * @property {module:api/NumberOfTheDayApi}
    */
    NumberOfTheDayApi,

    /**
    * The NumberSystemsConversionApi service constructor.
    * @property {module:api/NumberSystemsConversionApi}
    */
    NumberSystemsConversionApi,

    /**
    * The PIApi service constructor.
    * @property {module:api/PIApi}
    */
    PIApi,

    /**
    * The PrimeApi service constructor.
    * @property {module:api/PrimeApi}
    */
    PrimeApi,

    /**
    * The SpellApi service constructor.
    * @property {module:api/SpellApi}
    */
    SpellApi
};
