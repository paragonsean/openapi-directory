# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OutputCollectionNumber(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, item: float=None, items: List[float]=None, status: bool=None):
        """OutputCollectionNumber - a model defined in OpenAPI

        :param item: The item of this OutputCollectionNumber.
        :param items: The items of this OutputCollectionNumber.
        :param status: The status of this OutputCollectionNumber.
        """
        self.openapi_types = {
            'item': float,
            'items': List[float],
            'status': bool
        }

        self.attribute_map = {
            'item': 'item',
            'items': 'items',
            'status': 'status'
        }

        self._item = item
        self._items = items
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OutputCollectionNumber':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The outputCollectionNumber of this OutputCollectionNumber.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def item(self):
        """Gets the item of this OutputCollectionNumber.

        First Value

        :return: The item of this OutputCollectionNumber.
        :rtype: float
        """
        return self._item

    @item.setter
    def item(self, item):
        """Sets the item of this OutputCollectionNumber.

        First Value

        :param item: The item of this OutputCollectionNumber.
        :type item: float
        """

        self._item = item

    @property
    def items(self):
        """Gets the items of this OutputCollectionNumber.

        All Values

        :return: The items of this OutputCollectionNumber.
        :rtype: List[float]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this OutputCollectionNumber.

        All Values

        :param items: The items of this OutputCollectionNumber.
        :type items: List[float]
        """

        self._items = items

    @property
    def status(self):
        """Gets the status of this OutputCollectionNumber.

        Success

        :return: The status of this OutputCollectionNumber.
        :rtype: bool
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this OutputCollectionNumber.

        Success

        :param status: The status of this OutputCollectionNumber.
        :type status: bool
        """

        self._status = status
