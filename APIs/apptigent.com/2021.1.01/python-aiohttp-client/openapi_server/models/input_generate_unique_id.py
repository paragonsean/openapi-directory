# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InputGenerateUniqueID(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, uppercase: str=None):
        """InputGenerateUniqueID - a model defined in OpenAPI

        :param uppercase: The uppercase of this InputGenerateUniqueID.
        """
        self.openapi_types = {
            'uppercase': str
        }

        self.attribute_map = {
            'uppercase': 'uppercase'
        }

        self._uppercase = uppercase

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InputGenerateUniqueID':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The inputGenerateUniqueID of this InputGenerateUniqueID.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def uppercase(self):
        """Gets the uppercase of this InputGenerateUniqueID.

        All uppercase alpha characters

        :return: The uppercase of this InputGenerateUniqueID.
        :rtype: str
        """
        return self._uppercase

    @uppercase.setter
    def uppercase(self, uppercase):
        """Sets the uppercase of this InputGenerateUniqueID.

        All uppercase alpha characters

        :param uppercase: The uppercase of this InputGenerateUniqueID.
        :type uppercase: str
        """
        allowed_values = ["true", "false"]  # noqa: E501
        if uppercase not in allowed_values:
            raise ValueError(
                "Invalid value for `uppercase` ({0}), must be one of {1}"
                .format(uppercase, allowed_values)
            )

        self._uppercase = uppercase
