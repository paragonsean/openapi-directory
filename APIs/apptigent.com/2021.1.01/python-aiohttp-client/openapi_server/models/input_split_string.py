# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InputSplitString(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, characters: str=None, input: str=None):
        """InputSplitString - a model defined in OpenAPI

        :param characters: The characters of this InputSplitString.
        :param input: The input of this InputSplitString.
        """
        self.openapi_types = {
            'characters': str,
            'input': str
        }

        self.attribute_map = {
            'characters': 'characters',
            'input': 'input'
        }

        self._characters = characters
        self._input = input

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InputSplitString':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The inputSplitString of this InputSplitString.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def characters(self):
        """Gets the characters of this InputSplitString.

        One or more characters that will be used to split the text

        :return: The characters of this InputSplitString.
        :rtype: str
        """
        return self._characters

    @characters.setter
    def characters(self, characters):
        """Sets the characters of this InputSplitString.

        One or more characters that will be used to split the text

        :param characters: The characters of this InputSplitString.
        :type characters: str
        """
        if characters is None:
            raise ValueError("Invalid value for `characters`, must not be `None`")

        self._characters = characters

    @property
    def input(self):
        """Gets the input of this InputSplitString.

        Text to split

        :return: The input of this InputSplitString.
        :rtype: str
        """
        return self._input

    @input.setter
    def input(self, input):
        """Sets the input of this InputSplitString.

        Text to split

        :param input: The input of this InputSplitString.
        :type input: str
        """
        if input is None:
            raise ValueError("Invalid value for `input`, must not be `None`")

        self._input = input
