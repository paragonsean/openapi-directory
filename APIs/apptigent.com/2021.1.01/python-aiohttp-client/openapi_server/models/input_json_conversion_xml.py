# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InputJsonConversionXML(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, input: str=None, root: str=None):
        """InputJsonConversionXML - a model defined in OpenAPI

        :param input: The input of this InputJsonConversionXML.
        :param root: The root of this InputJsonConversionXML.
        """
        self.openapi_types = {
            'input': str,
            'root': str
        }

        self.attribute_map = {
            'input': 'input',
            'root': 'root'
        }

        self._input = input
        self._root = root

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InputJsonConversionXML':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The inputJsonConversionXML of this InputJsonConversionXML.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def input(self):
        """Gets the input of this InputJsonConversionXML.

        JSON array object

        :return: The input of this InputJsonConversionXML.
        :rtype: str
        """
        return self._input

    @input.setter
    def input(self, input):
        """Sets the input of this InputJsonConversionXML.

        JSON array object

        :param input: The input of this InputJsonConversionXML.
        :type input: str
        """
        if input is None:
            raise ValueError("Invalid value for `input`, must not be `None`")

        self._input = input

    @property
    def root(self):
        """Gets the root of this InputJsonConversionXML.

        Name of root node

        :return: The root of this InputJsonConversionXML.
        :rtype: str
        """
        return self._root

    @root.setter
    def root(self, root):
        """Sets the root of this InputJsonConversionXML.

        Name of root node

        :param root: The root of this InputJsonConversionXML.
        :type root: str
        """
        if root is None:
            raise ValueError("Invalid value for `root`, must not be `None`")

        self._root = root
