# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InputDateTimeConversion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, format: str=None, input: str=None, source: str='GMT Standard Time - (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London', target: str='GMT Standard Time - (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London'):
        """InputDateTimeConversion - a model defined in OpenAPI

        :param format: The format of this InputDateTimeConversion.
        :param input: The input of this InputDateTimeConversion.
        :param source: The source of this InputDateTimeConversion.
        :param target: The target of this InputDateTimeConversion.
        """
        self.openapi_types = {
            'format': str,
            'input': str,
            'source': str,
            'target': str
        }

        self.attribute_map = {
            'format': 'format',
            'input': 'input',
            'source': 'source',
            'target': 'target'
        }

        self._format = format
        self._input = input
        self._source = source
        self._target = target

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InputDateTimeConversion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The inputDateTimeConversion of this InputDateTimeConversion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def format(self):
        """Gets the format of this InputDateTimeConversion.

        Display format (defaults to 'yyyy-MM-dd HH:mm:ss')

        :return: The format of this InputDateTimeConversion.
        :rtype: str
        """
        return self._format

    @format.setter
    def format(self, format):
        """Sets the format of this InputDateTimeConversion.

        Display format (defaults to 'yyyy-MM-dd HH:mm:ss')

        :param format: The format of this InputDateTimeConversion.
        :type format: str
        """

        self._format = format

    @property
    def input(self):
        """Gets the input of this InputDateTimeConversion.

        Source date and time

        :return: The input of this InputDateTimeConversion.
        :rtype: str
        """
        return self._input

    @input.setter
    def input(self, input):
        """Sets the input of this InputDateTimeConversion.

        Source date and time

        :param input: The input of this InputDateTimeConversion.
        :type input: str
        """
        if input is None:
            raise ValueError("Invalid value for `input`, must not be `None`")

        self._input = input

    @property
    def source(self):
        """Gets the source of this InputDateTimeConversion.


        :return: The source of this InputDateTimeConversion.
        :rtype: str
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this InputDateTimeConversion.


        :param source: The source of this InputDateTimeConversion.
        :type source: str
        """
        allowed_values = ["GMT Standard Time - (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London", "Greenwich Standard Time - (GMT) Monrovia, Reykjavik", "W. Europe Standard Time - (GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna", "Central Europe Standard Time - (GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague", "Central European Standard Time - (GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb", "W. Central Africa Standard Time - (GMT+01:00) West Central Africa", "GTB Standard Time - (GMT+02:00) Athens, Bucharest, Istanbul", "Middle East Standard Time - (GMT+02:00) Beirut", "Egypt Standard Time - (GMT+02:00) Cairo", "South Africa Standard Time - (GMT+02:00) Harare, Pretoria", "FLE Standard Time - (GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius", "Israel Standard Time - (GMT+02:00) Jerusalem", "E. Europe Standard Time - (GMT+02:00) Minsk", "Namibia Standard Time - (GMT+02:00) Windhoek", "Arabic Standard Time - (GMT+03:00) Baghdad", "Arab Standard Time - (GMT+03:00) Kuwait, Riyadh", "Russian Standard Time - (GMT+03:00) Moscow, St. Petersburg, Volgograd", "E. Africa Standard Time - (GMT+03:00) Nairobi", "Georgian Standard Time - (GMT+03:00) Tbilisi", "Iran Standard Time - (GMT+03:30) Tehran", "Arabian Standard Time - (GMT+04:00) Abu Dhabi, Muscat", "Azerbaijan Standard Time - (GMT+04:00) Baku", "Mauritius Standard Time - (GMT+04:00) Port Louis", "Caucasus Standard Time - (GMT+04:00) Yerevan", "Afghanistan Standard Time - (GMT+04:30) Kabul", "Ekaterinburg Standard Time - (GMT+05:00) Ekaterinburg", "Pakistan Standard Time - (GMT+05:00) Islamabad, Karachi", "West Asia Standard Time - (GMT+05:00) Tashkent", "India Standard Time - (GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi", "Sri Lanka Standard Time - (GMT+05:30) Sri Jayawardenepura", "Nepal Standard Time - (GMT+05:45) Kathmandu", "N. Central Asia Standard Time - (GMT+06:00) Almaty, Novosibirsk", "Central Asia Standard Time - (GMT+06:00) Astana, Dhaka", "Myanmar Standard Time - (GMT+06:30) Yangon (Rangoon)", "SE Asia Standard Time - (GMT+07:00) Bangkok, Hanoi, Jakarta", "North Asia Standard Time - (GMT+07:00) Krasnoyarsk", "China Standard Time - (GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi", "North Asia East Standard Time - (GMT+08:00) Irkutsk, Ulaan Bataar", "Singapore Standard Time - (GMT+08:00) Kuala Lumpur, Singapore", "W. Australia Standard Time - (GMT+08:00) Perth", "Taipei Standard Time - (GMT+08:00) Taipei", "Tokyo Standard Time - (GMT+09:00) Osaka, Sapporo, Tokyo", "Korea Standard Time - (GMT+09:00) Seoul", "Yakutsk Standard Time - (GMT+09:00) Yakutsk", "Cen. Australia Standard Time - (GMT+09:30) Adelaide", "AUS Central Standard Time - (GMT+09:30) Darwin", "E. Australia Standard Time - (GMT+10:00) Brisbane", "AUS Eastern Standard Time - (GMT+10:00) Canberra, Melbourne, Sydney", "West Pacific Standard Time - (GMT+10:00) Guam, Port Moresby", "Tasmania Standard Time - (GMT+10:00) Hobart", "Vladivostok Standard Time - (GMT+10:00) Vladivostok", "Central Pacific Standard Time - (GMT+11:00) Magadan, Solomon Is., New Caledonia", "New Zealand Standard Time - (GMT+12:00) Auckland, Wellington", "Fiji Standard Time - (GMT+12:00) Fiji, Kamchatka, Marshall Is.", "Tonga Standard Time - (GMT+13:00) Nuku'alofa", "Azores Standard Time - (GMT-01:00) Azores", "Cape Verde Standard Time - (GMT-01:00) Cape Verde Is.", "Mid-Atlantic Standard Time - (GMT-02:00) Mid-Atlantic", "E. South America Standard Time - (GMT-03:00) Brasilia", "Argentina Standard Time - (GMT-03:00) Buenos Aires", "SA Eastern Standard Time - (GMT-03:00) Georgetown", "Greenland Standard Time - (GMT-03:00) Greenland", "Montevideo Standard Time - (GMT-03:00) Montevideo", "Newfoundland Standard Time - (GMT-03:30) Newfoundland", "Atlantic Standard Time - (GMT-04:00) Atlantic Time (Canada)", "SA Western Standard Time - (GMT-04:00) La Paz", "Central Brazilian Standard Time - (GMT-04:00) Manaus", "Pacific SA Standard Time - (GMT-04:00) Santiago", "Venezuela Standard Time - (GMT-04:30) Caracas", "SA Pacific Standard Time - (GMT-05:00) Bogota, Lima, Quito, Rio Branco", "Eastern Standard Time - (GMT-05:00) Eastern Time (US & Canada)", "US Eastern Standard Time - (GMT-05:00) Indiana (East)", "Central America Standard Time - (GMT-06:00) Central America", "Central Standard Time - (GMT-06:00) Central Time (US & Canada)", "Central Standard Time (Mexico) - (GMT-06:00) Guadalajara, Mexico City, Monterrey", "Canada Central Standard Time - (GMT-06:00) Saskatchewan", "US Mountain Standard Time - (GMT-07:00) Arizona", "Mountain Standard Time (Mexico) - (GMT-07:00) Chihuahua, La Paz, Mazatlan", "Mountain Standard Time - (GMT-07:00) Mountain Time (US & Canada)", "Pacific Standard Time - (GMT-08:00) Pacific Time (US & Canada)", "Pacific Standard Time (Mexico) - (GMT-08:00) Tijuana, Baja California", "Alaskan Standard Time - (GMT-09:00) Alaska", "Hawaiian Standard Time - (GMT-10:00) Hawaii", "Samoa Standard Time - (GMT-11:00) Midway Island, Samoa", "Dateline Standard Time - (GMT-12:00) International Date Line West"]  # noqa: E501
        if source not in allowed_values:
            raise ValueError(
                "Invalid value for `source` ({0}), must be one of {1}"
                .format(source, allowed_values)
            )

        self._source = source

    @property
    def target(self):
        """Gets the target of this InputDateTimeConversion.


        :return: The target of this InputDateTimeConversion.
        :rtype: str
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this InputDateTimeConversion.


        :param target: The target of this InputDateTimeConversion.
        :type target: str
        """
        allowed_values = ["GMT Standard Time - (GMT) Greenwich Mean Time : Dublin, Edinburgh, Lisbon, London", "Greenwich Standard Time - (GMT) Monrovia, Reykjavik", "W. Europe Standard Time - (GMT+01:00) Amsterdam, Berlin, Bern, Rome, Stockholm, Vienna", "Central Europe Standard Time - (GMT+01:00) Belgrade, Bratislava, Budapest, Ljubljana, Prague", "Central European Standard Time - (GMT+01:00) Sarajevo, Skopje, Warsaw, Zagreb", "W. Central Africa Standard Time - (GMT+01:00) West Central Africa", "GTB Standard Time - (GMT+02:00) Athens, Bucharest, Istanbul", "Middle East Standard Time - (GMT+02:00) Beirut", "Egypt Standard Time - (GMT+02:00) Cairo", "South Africa Standard Time - (GMT+02:00) Harare, Pretoria", "FLE Standard Time - (GMT+02:00) Helsinki, Kyiv, Riga, Sofia, Tallinn, Vilnius", "Israel Standard Time - (GMT+02:00) Jerusalem", "E. Europe Standard Time - (GMT+02:00) Minsk", "Namibia Standard Time - (GMT+02:00) Windhoek", "Arabic Standard Time - (GMT+03:00) Baghdad", "Arab Standard Time - (GMT+03:00) Kuwait, Riyadh", "Russian Standard Time - (GMT+03:00) Moscow, St. Petersburg, Volgograd", "E. Africa Standard Time - (GMT+03:00) Nairobi", "Georgian Standard Time - (GMT+03:00) Tbilisi", "Iran Standard Time - (GMT+03:30) Tehran", "Arabian Standard Time - (GMT+04:00) Abu Dhabi, Muscat", "Azerbaijan Standard Time - (GMT+04:00) Baku", "Mauritius Standard Time - (GMT+04:00) Port Louis", "Caucasus Standard Time - (GMT+04:00) Yerevan", "Afghanistan Standard Time - (GMT+04:30) Kabul", "Ekaterinburg Standard Time - (GMT+05:00) Ekaterinburg", "Pakistan Standard Time - (GMT+05:00) Islamabad, Karachi", "West Asia Standard Time - (GMT+05:00) Tashkent", "India Standard Time - (GMT+05:30) Chennai, Kolkata, Mumbai, New Delhi", "Sri Lanka Standard Time - (GMT+05:30) Sri Jayawardenepura", "Nepal Standard Time - (GMT+05:45) Kathmandu", "N. Central Asia Standard Time - (GMT+06:00) Almaty, Novosibirsk", "Central Asia Standard Time - (GMT+06:00) Astana, Dhaka", "Myanmar Standard Time - (GMT+06:30) Yangon (Rangoon)", "SE Asia Standard Time - (GMT+07:00) Bangkok, Hanoi, Jakarta", "North Asia Standard Time - (GMT+07:00) Krasnoyarsk", "China Standard Time - (GMT+08:00) Beijing, Chongqing, Hong Kong, Urumqi", "North Asia East Standard Time - (GMT+08:00) Irkutsk, Ulaan Bataar", "Singapore Standard Time - (GMT+08:00) Kuala Lumpur, Singapore", "W. Australia Standard Time - (GMT+08:00) Perth", "Taipei Standard Time - (GMT+08:00) Taipei", "Tokyo Standard Time - (GMT+09:00) Osaka, Sapporo, Tokyo", "Korea Standard Time - (GMT+09:00) Seoul", "Yakutsk Standard Time - (GMT+09:00) Yakutsk", "Cen. Australia Standard Time - (GMT+09:30) Adelaide", "AUS Central Standard Time - (GMT+09:30) Darwin", "E. Australia Standard Time - (GMT+10:00) Brisbane", "AUS Eastern Standard Time - (GMT+10:00) Canberra, Melbourne, Sydney", "West Pacific Standard Time - (GMT+10:00) Guam, Port Moresby", "Tasmania Standard Time - (GMT+10:00) Hobart", "Vladivostok Standard Time - (GMT+10:00) Vladivostok", "Central Pacific Standard Time - (GMT+11:00) Magadan, Solomon Is., New Caledonia", "New Zealand Standard Time - (GMT+12:00) Auckland, Wellington", "Fiji Standard Time - (GMT+12:00) Fiji, Kamchatka, Marshall Is.", "Tonga Standard Time - (GMT+13:00) Nuku'alofa", "Azores Standard Time - (GMT-01:00) Azores", "Cape Verde Standard Time - (GMT-01:00) Cape Verde Is.", "Mid-Atlantic Standard Time - (GMT-02:00) Mid-Atlantic", "E. South America Standard Time - (GMT-03:00) Brasilia", "Argentina Standard Time - (GMT-03:00) Buenos Aires", "SA Eastern Standard Time - (GMT-03:00) Georgetown", "Greenland Standard Time - (GMT-03:00) Greenland", "Montevideo Standard Time - (GMT-03:00) Montevideo", "Newfoundland Standard Time - (GMT-03:30) Newfoundland", "Atlantic Standard Time - (GMT-04:00) Atlantic Time (Canada)", "SA Western Standard Time - (GMT-04:00) La Paz", "Central Brazilian Standard Time - (GMT-04:00) Manaus", "Pacific SA Standard Time - (GMT-04:00) Santiago", "Venezuela Standard Time - (GMT-04:30) Caracas", "SA Pacific Standard Time - (GMT-05:00) Bogota, Lima, Quito, Rio Branco", "Eastern Standard Time - (GMT-05:00) Eastern Time (US & Canada)", "US Eastern Standard Time - (GMT-05:00) Indiana (East)", "Central America Standard Time - (GMT-06:00) Central America", "Central Standard Time - (GMT-06:00) Central Time (US & Canada)", "Central Standard Time (Mexico) - (GMT-06:00) Guadalajara, Mexico City, Monterrey", "Canada Central Standard Time - (GMT-06:00) Saskatchewan", "US Mountain Standard Time - (GMT-07:00) Arizona", "Mountain Standard Time (Mexico) - (GMT-07:00) Chihuahua, La Paz, Mazatlan", "Mountain Standard Time - (GMT-07:00) Mountain Time (US & Canada)", "Pacific Standard Time - (GMT-08:00) Pacific Time (US & Canada)", "Pacific Standard Time (Mexico) - (GMT-08:00) Tijuana, Baja California", "Alaskan Standard Time - (GMT-09:00) Alaska", "Hawaiian Standard Time - (GMT-10:00) Hawaii", "Samoa Standard Time - (GMT-11:00) Midway Island, Samoa", "Dateline Standard Time - (GMT-12:00) International Date Line West"]  # noqa: E501
        if target not in allowed_values:
            raise ValueError(
                "Invalid value for `target` ({0}), must be one of {1}"
                .format(target, allowed_values)
            )

        self._target = target
