/**
 * PowerTools Developer
 * Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.
 *
 * The version of the OpenAPI document: 2021.1.01
 * Contact: support@apptigent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInputCollectionCount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInputCollectionCount::OAIInputCollectionCount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInputCollectionCount::OAIInputCollectionCount() {
    this->initializeModel();
}

OAIInputCollectionCount::~OAIInputCollectionCount() {}

void OAIInputCollectionCount::initializeModel() {

    m_input_isSet = false;
    m_input_isValid = false;
}

void OAIInputCollectionCount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInputCollectionCount::fromJsonObject(QJsonObject json) {

    m_input_isValid = ::OpenAPI::fromJsonValue(m_input, json[QString("input")]);
    m_input_isSet = !json[QString("input")].isNull() && m_input_isValid;
}

QString OAIInputCollectionCount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInputCollectionCount::asJsonObject() const {
    QJsonObject obj;
    if (m_input.size() > 0) {
        obj.insert(QString("input"), ::OpenAPI::toJsonValue(m_input));
    }
    return obj;
}

QList<QString> OAIInputCollectionCount::getInput() const {
    return m_input;
}
void OAIInputCollectionCount::setInput(const QList<QString> &input) {
    m_input = input;
    m_input_isSet = true;
}

bool OAIInputCollectionCount::is_input_Set() const{
    return m_input_isSet;
}

bool OAIInputCollectionCount::is_input_Valid() const{
    return m_input_isValid;
}

bool OAIInputCollectionCount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_input.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInputCollectionCount::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_input_isValid && true;
}

} // namespace OpenAPI
