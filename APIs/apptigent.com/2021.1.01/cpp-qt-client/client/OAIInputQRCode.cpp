/**
 * PowerTools Developer
 * Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.
 *
 * The version of the OpenAPI document: 2021.1.01
 * Contact: support@apptigent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInputQRCode.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInputQRCode::OAIInputQRCode(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInputQRCode::OAIInputQRCode() {
    this->initializeModel();
}

OAIInputQRCode::~OAIInputQRCode() {}

void OAIInputQRCode::initializeModel() {

    m_input_isSet = false;
    m_input_isValid = false;

    m_payload_isSet = false;
    m_payload_isValid = false;
}

void OAIInputQRCode::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInputQRCode::fromJsonObject(QJsonObject json) {

    m_input_isValid = ::OpenAPI::fromJsonValue(m_input, json[QString("input")]);
    m_input_isSet = !json[QString("input")].isNull() && m_input_isValid;

    m_payload_isValid = ::OpenAPI::fromJsonValue(m_payload, json[QString("payload")]);
    m_payload_isSet = !json[QString("payload")].isNull() && m_payload_isValid;
}

QString OAIInputQRCode::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInputQRCode::asJsonObject() const {
    QJsonObject obj;
    if (m_input_isSet) {
        obj.insert(QString("input"), ::OpenAPI::toJsonValue(m_input));
    }
    if (m_payload_isSet) {
        obj.insert(QString("payload"), ::OpenAPI::toJsonValue(m_payload));
    }
    return obj;
}

QString OAIInputQRCode::getInput() const {
    return m_input;
}
void OAIInputQRCode::setInput(const QString &input) {
    m_input = input;
    m_input_isSet = true;
}

bool OAIInputQRCode::is_input_Set() const{
    return m_input_isSet;
}

bool OAIInputQRCode::is_input_Valid() const{
    return m_input_isValid;
}

QString OAIInputQRCode::getPayload() const {
    return m_payload;
}
void OAIInputQRCode::setPayload(const QString &payload) {
    m_payload = payload;
    m_payload_isSet = true;
}

bool OAIInputQRCode::is_payload_Set() const{
    return m_payload_isSet;
}

bool OAIInputQRCode::is_payload_Valid() const{
    return m_payload_isValid;
}

bool OAIInputQRCode::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_input_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payload_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInputQRCode::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_input_isValid && m_payload_isValid && true;
}

} // namespace OpenAPI
