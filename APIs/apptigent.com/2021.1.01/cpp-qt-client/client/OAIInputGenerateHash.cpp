/**
 * PowerTools Developer
 * Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.
 *
 * The version of the OpenAPI document: 2021.1.01
 * Contact: support@apptigent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInputGenerateHash.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInputGenerateHash::OAIInputGenerateHash(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInputGenerateHash::OAIInputGenerateHash() {
    this->initializeModel();
}

OAIInputGenerateHash::~OAIInputGenerateHash() {}

void OAIInputGenerateHash::initializeModel() {

    m_algorithm_isSet = false;
    m_algorithm_isValid = false;

    m_input_isSet = false;
    m_input_isValid = false;
}

void OAIInputGenerateHash::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInputGenerateHash::fromJsonObject(QJsonObject json) {

    m_algorithm_isValid = ::OpenAPI::fromJsonValue(m_algorithm, json[QString("algorithm")]);
    m_algorithm_isSet = !json[QString("algorithm")].isNull() && m_algorithm_isValid;

    m_input_isValid = ::OpenAPI::fromJsonValue(m_input, json[QString("input")]);
    m_input_isSet = !json[QString("input")].isNull() && m_input_isValid;
}

QString OAIInputGenerateHash::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInputGenerateHash::asJsonObject() const {
    QJsonObject obj;
    if (m_algorithm_isSet) {
        obj.insert(QString("algorithm"), ::OpenAPI::toJsonValue(m_algorithm));
    }
    if (m_input_isSet) {
        obj.insert(QString("input"), ::OpenAPI::toJsonValue(m_input));
    }
    return obj;
}

QString OAIInputGenerateHash::getAlgorithm() const {
    return m_algorithm;
}
void OAIInputGenerateHash::setAlgorithm(const QString &algorithm) {
    m_algorithm = algorithm;
    m_algorithm_isSet = true;
}

bool OAIInputGenerateHash::is_algorithm_Set() const{
    return m_algorithm_isSet;
}

bool OAIInputGenerateHash::is_algorithm_Valid() const{
    return m_algorithm_isValid;
}

QString OAIInputGenerateHash::getInput() const {
    return m_input;
}
void OAIInputGenerateHash::setInput(const QString &input) {
    m_input = input;
    m_input_isSet = true;
}

bool OAIInputGenerateHash::is_input_Set() const{
    return m_input_isSet;
}

bool OAIInputGenerateHash::is_input_Valid() const{
    return m_input_isValid;
}

bool OAIInputGenerateHash::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_algorithm_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_input_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInputGenerateHash::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_algorithm_isValid && m_input_isValid && true;
}

} // namespace OpenAPI
