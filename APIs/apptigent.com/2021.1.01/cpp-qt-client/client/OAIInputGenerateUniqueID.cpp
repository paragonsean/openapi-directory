/**
 * PowerTools Developer
 * Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.
 *
 * The version of the OpenAPI document: 2021.1.01
 * Contact: support@apptigent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInputGenerateUniqueID.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInputGenerateUniqueID::OAIInputGenerateUniqueID(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInputGenerateUniqueID::OAIInputGenerateUniqueID() {
    this->initializeModel();
}

OAIInputGenerateUniqueID::~OAIInputGenerateUniqueID() {}

void OAIInputGenerateUniqueID::initializeModel() {

    m_uppercase_isSet = false;
    m_uppercase_isValid = false;
}

void OAIInputGenerateUniqueID::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInputGenerateUniqueID::fromJsonObject(QJsonObject json) {

    m_uppercase_isValid = ::OpenAPI::fromJsonValue(m_uppercase, json[QString("uppercase")]);
    m_uppercase_isSet = !json[QString("uppercase")].isNull() && m_uppercase_isValid;
}

QString OAIInputGenerateUniqueID::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInputGenerateUniqueID::asJsonObject() const {
    QJsonObject obj;
    if (m_uppercase_isSet) {
        obj.insert(QString("uppercase"), ::OpenAPI::toJsonValue(m_uppercase));
    }
    return obj;
}

QString OAIInputGenerateUniqueID::getUppercase() const {
    return m_uppercase;
}
void OAIInputGenerateUniqueID::setUppercase(const QString &uppercase) {
    m_uppercase = uppercase;
    m_uppercase_isSet = true;
}

bool OAIInputGenerateUniqueID::is_uppercase_Set() const{
    return m_uppercase_isSet;
}

bool OAIInputGenerateUniqueID::is_uppercase_Valid() const{
    return m_uppercase_isValid;
}

bool OAIInputGenerateUniqueID::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_uppercase_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInputGenerateUniqueID::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_uppercase_isValid && true;
}

} // namespace OpenAPI
