/**
 * PowerTools Developer
 * Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.
 *
 * The version of the OpenAPI document: 2021.1.01
 * Contact: support@apptigent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInputXmlConversionJSON.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInputXmlConversionJSON::OAIInputXmlConversionJSON(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInputXmlConversionJSON::OAIInputXmlConversionJSON() {
    this->initializeModel();
}

OAIInputXmlConversionJSON::~OAIInputXmlConversionJSON() {}

void OAIInputXmlConversionJSON::initializeModel() {

    m_input_isSet = false;
    m_input_isValid = false;
}

void OAIInputXmlConversionJSON::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInputXmlConversionJSON::fromJsonObject(QJsonObject json) {

    m_input_isValid = ::OpenAPI::fromJsonValue(m_input, json[QString("input")]);
    m_input_isSet = !json[QString("input")].isNull() && m_input_isValid;
}

QString OAIInputXmlConversionJSON::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInputXmlConversionJSON::asJsonObject() const {
    QJsonObject obj;
    if (m_input_isSet) {
        obj.insert(QString("input"), ::OpenAPI::toJsonValue(m_input));
    }
    return obj;
}

QString OAIInputXmlConversionJSON::getInput() const {
    return m_input;
}
void OAIInputXmlConversionJSON::setInput(const QString &input) {
    m_input = input;
    m_input_isSet = true;
}

bool OAIInputXmlConversionJSON::is_input_Set() const{
    return m_input_isSet;
}

bool OAIInputXmlConversionJSON::is_input_Valid() const{
    return m_input_isValid;
}

bool OAIInputXmlConversionJSON::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_input_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInputXmlConversionJSON::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_input_isValid && true;
}

} // namespace OpenAPI
