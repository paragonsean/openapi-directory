/**
 * PowerTools Developer
 * Apptigent PowerTools Developer Edition is a powerful suite of API endpoints for custom applications running on any stack. Manipulate text, modify collections, format dates and times, convert currency, perform advanced mathematical calculations, shorten URL's, encode strings, convert text to speech, translate content into multiple languages, process images, and more. PowerTools is the ultimate developer toolkit.
 *
 * The version of the OpenAPI document: 2021.1.01
 * Contact: support@apptigent.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInputCollectionSearch.h
 *
 * 
 */

#ifndef OAIInputCollectionSearch_H
#define OAIInputCollectionSearch_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInputCollectionSearch : public OAIObject {
public:
    OAIInputCollectionSearch();
    OAIInputCollectionSearch(QString json);
    ~OAIInputCollectionSearch() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getIgnorecase() const;
    void setIgnorecase(const QString &ignorecase);
    bool is_ignorecase_Set() const;
    bool is_ignorecase_Valid() const;

    QList<QString> getInput() const;
    void setInput(const QList<QString> &input);
    bool is_input_Set() const;
    bool is_input_Valid() const;

    QString getMatch() const;
    void setMatch(const QString &match);
    bool is_match_Set() const;
    bool is_match_Valid() const;

    QString getTrim() const;
    void setTrim(const QString &trim);
    bool is_trim_Set() const;
    bool is_trim_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_ignorecase;
    bool m_ignorecase_isSet;
    bool m_ignorecase_isValid;

    QList<QString> m_input;
    bool m_input_isSet;
    bool m_input_isValid;

    QString m_match;
    bool m_match_isSet;
    bool m_match_isValid;

    QString m_trim;
    bool m_trim_isSet;
    bool m_trim_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInputCollectionSearch)

#endif // OAIInputCollectionSearch_H
