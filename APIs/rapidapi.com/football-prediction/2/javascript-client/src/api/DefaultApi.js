/**
 * Football Prediction API
 * The Football Prediction API allows developers to get predictions for upcoming football (soccer) matches, results for past matches, and performance monitoring for statistical models.
 *
 * The version of the OpenAPI document: 2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ApiV2ListFederationsGet200Response from '../model/ApiV2ListFederationsGet200Response';
import ApiV2ListFederationsGet404Response from '../model/ApiV2ListFederationsGet404Response';
import ApiV2ListMarketsGet200Response from '../model/ApiV2ListMarketsGet200Response';
import ApiV2PerformanceStatsGet200Response from '../model/ApiV2PerformanceStatsGet200Response';
import ApiV2PredictionsIdGet200Response from '../model/ApiV2PredictionsIdGet200Response';

/**
* Default service.
* @module api/DefaultApi
* @version 2
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the apiV2ListFederationsGet operation.
     * @callback module:api/DefaultApi~apiV2ListFederationsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV2ListFederationsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns an array of all the available federations.
     * @param {Object} opts Optional parameters
     * @param {String} [xRapidApiKey] Your key obtained from https://boggio-analytics.com/fp-api/
     * @param {module:api/DefaultApi~apiV2ListFederationsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV2ListFederationsGet200Response}
     */
    apiV2ListFederationsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-RapidApi-Key': opts['xRapidApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiV2ListFederationsGet200Response;
      return this.apiClient.callApi(
        '/api/v2/list-federations', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2ListMarketsGet operation.
     * @callback module:api/DefaultApi~apiV2ListMarketsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV2ListMarketsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns an array of all the supported prediction markets
     * @param {Object} opts Optional parameters
     * @param {String} [xRapidApiKey] Your key obtained from https://boggio-analytics.com/fp-api/
     * @param {module:api/DefaultApi~apiV2ListMarketsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV2ListMarketsGet200Response}
     */
    apiV2ListMarketsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-RapidApi-Key': opts['xRapidApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiV2ListMarketsGet200Response;
      return this.apiClient.callApi(
        '/api/v2/list-markets', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2PerformanceStatsGet operation.
     * @callback module:api/DefaultApi~apiV2PerformanceStatsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV2PerformanceStatsGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns predictions accuracy in the last 1, 7, 14, 30 days.
     * @param {Object} opts Optional parameters
     * @param {String} [xRapidApiKey] Your key obtained from https://boggio-analytics.com/fp-api/
     * @param {module:api/DefaultApi~apiV2PerformanceStatsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV2PerformanceStatsGet200Response}
     */
    apiV2PerformanceStatsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-RapidApi-Key': opts['xRapidApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiV2PerformanceStatsGet200Response;
      return this.apiClient.callApi(
        '/api/v2/performance-stats', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2PredictionsGet operation.
     * @callback module:api/DefaultApi~apiV2PredictionsGetCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This endpoint returns by default the next non-expired football predictions. URL parameters can be specified to show specific date in the past or future or to filter by federation and prediction market name.
     * @param {Object} opts Optional parameters
     * @param {String} [xRapidApiKey] Your key obtained from https://boggio-analytics.com/fp-api/
     * @param {module:api/DefaultApi~apiV2PredictionsGetCallback} callback The callback function, accepting three arguments: error, data, response
     */
    apiV2PredictionsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-RapidApi-Key': opts['xRapidApiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/api/v2/predictions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the apiV2PredictionsIdGet operation.
     * @callback module:api/DefaultApi~apiV2PredictionsIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ApiV2PredictionsIdGet200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns all predictions available for a match id.
     * @param {Number} id ID of match
     * @param {module:api/DefaultApi~apiV2PredictionsIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ApiV2PredictionsIdGet200Response}
     */
    apiV2PredictionsIdGet(id, callback) {
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling apiV2PredictionsIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ApiV2PredictionsIdGet200Response;
      return this.apiClient.callApi(
        '/api/v2/predictions/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
