/**
 * Football Prediction API
 * The Football Prediction API allows developers to get predictions for upcoming football (soccer) matches, results for past matches, and performance monitoring for statistical models.
 *
 * The version of the OpenAPI document: 2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAI_api_v2_performance_stats_get_200_response_data_details.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAI_api_v2_performance_stats_get_200_response_data_details::OAI_api_v2_performance_stats_get_200_response_data_details(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAI_api_v2_performance_stats_get_200_response_data_details::OAI_api_v2_performance_stats_get_200_response_data_details() {
    this->initializeModel();
}

OAI_api_v2_performance_stats_get_200_response_data_details::~OAI_api_v2_performance_stats_get_200_response_data_details() {}

void OAI_api_v2_performance_stats_get_200_response_data_details::initializeModel() {

    m_last_14_days_isSet = false;
    m_last_14_days_isValid = false;

    m_last_30_days_isSet = false;
    m_last_30_days_isValid = false;

    m_last_7_days_isSet = false;
    m_last_7_days_isValid = false;

    m_yesterday_isSet = false;
    m_yesterday_isValid = false;
}

void OAI_api_v2_performance_stats_get_200_response_data_details::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAI_api_v2_performance_stats_get_200_response_data_details::fromJsonObject(QJsonObject json) {

    m_last_14_days_isValid = ::OpenAPI::fromJsonValue(m_last_14_days, json[QString("last_14_days")]);
    m_last_14_days_isSet = !json[QString("last_14_days")].isNull() && m_last_14_days_isValid;

    m_last_30_days_isValid = ::OpenAPI::fromJsonValue(m_last_30_days, json[QString("last_30_days")]);
    m_last_30_days_isSet = !json[QString("last_30_days")].isNull() && m_last_30_days_isValid;

    m_last_7_days_isValid = ::OpenAPI::fromJsonValue(m_last_7_days, json[QString("last_7_days")]);
    m_last_7_days_isSet = !json[QString("last_7_days")].isNull() && m_last_7_days_isValid;

    m_yesterday_isValid = ::OpenAPI::fromJsonValue(m_yesterday, json[QString("yesterday")]);
    m_yesterday_isSet = !json[QString("yesterday")].isNull() && m_yesterday_isValid;
}

QString OAI_api_v2_performance_stats_get_200_response_data_details::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAI_api_v2_performance_stats_get_200_response_data_details::asJsonObject() const {
    QJsonObject obj;
    if (m_last_14_days.isSet()) {
        obj.insert(QString("last_14_days"), ::OpenAPI::toJsonValue(m_last_14_days));
    }
    if (m_last_30_days.isSet()) {
        obj.insert(QString("last_30_days"), ::OpenAPI::toJsonValue(m_last_30_days));
    }
    if (m_last_7_days.isSet()) {
        obj.insert(QString("last_7_days"), ::OpenAPI::toJsonValue(m_last_7_days));
    }
    if (m_yesterday.isSet()) {
        obj.insert(QString("yesterday"), ::OpenAPI::toJsonValue(m_yesterday));
    }
    return obj;
}

OAI_api_v2_performance_stats_get_200_response_data_details_last_14_days OAI_api_v2_performance_stats_get_200_response_data_details::getLast14Days() const {
    return m_last_14_days;
}
void OAI_api_v2_performance_stats_get_200_response_data_details::setLast14Days(const OAI_api_v2_performance_stats_get_200_response_data_details_last_14_days &last_14_days) {
    m_last_14_days = last_14_days;
    m_last_14_days_isSet = true;
}

bool OAI_api_v2_performance_stats_get_200_response_data_details::is_last_14_days_Set() const{
    return m_last_14_days_isSet;
}

bool OAI_api_v2_performance_stats_get_200_response_data_details::is_last_14_days_Valid() const{
    return m_last_14_days_isValid;
}

OAI_api_v2_performance_stats_get_200_response_data_details_last_14_days OAI_api_v2_performance_stats_get_200_response_data_details::getLast30Days() const {
    return m_last_30_days;
}
void OAI_api_v2_performance_stats_get_200_response_data_details::setLast30Days(const OAI_api_v2_performance_stats_get_200_response_data_details_last_14_days &last_30_days) {
    m_last_30_days = last_30_days;
    m_last_30_days_isSet = true;
}

bool OAI_api_v2_performance_stats_get_200_response_data_details::is_last_30_days_Set() const{
    return m_last_30_days_isSet;
}

bool OAI_api_v2_performance_stats_get_200_response_data_details::is_last_30_days_Valid() const{
    return m_last_30_days_isValid;
}

OAI_api_v2_performance_stats_get_200_response_data_details_last_14_days OAI_api_v2_performance_stats_get_200_response_data_details::getLast7Days() const {
    return m_last_7_days;
}
void OAI_api_v2_performance_stats_get_200_response_data_details::setLast7Days(const OAI_api_v2_performance_stats_get_200_response_data_details_last_14_days &last_7_days) {
    m_last_7_days = last_7_days;
    m_last_7_days_isSet = true;
}

bool OAI_api_v2_performance_stats_get_200_response_data_details::is_last_7_days_Set() const{
    return m_last_7_days_isSet;
}

bool OAI_api_v2_performance_stats_get_200_response_data_details::is_last_7_days_Valid() const{
    return m_last_7_days_isValid;
}

OAI_api_v2_performance_stats_get_200_response_data_details_last_14_days OAI_api_v2_performance_stats_get_200_response_data_details::getYesterday() const {
    return m_yesterday;
}
void OAI_api_v2_performance_stats_get_200_response_data_details::setYesterday(const OAI_api_v2_performance_stats_get_200_response_data_details_last_14_days &yesterday) {
    m_yesterday = yesterday;
    m_yesterday_isSet = true;
}

bool OAI_api_v2_performance_stats_get_200_response_data_details::is_yesterday_Set() const{
    return m_yesterday_isSet;
}

bool OAI_api_v2_performance_stats_get_200_response_data_details::is_yesterday_Valid() const{
    return m_yesterday_isValid;
}

bool OAI_api_v2_performance_stats_get_200_response_data_details::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_14_days.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_30_days.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_7_days.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_yesterday.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAI_api_v2_performance_stats_get_200_response_data_details::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
