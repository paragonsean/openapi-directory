/**
 * Football Prediction API
 * The Football Prediction API allows developers to get predictions for upcoming football (soccer) matches, results for past matches, and performance monitoring for statistical models.
 *
 * The version of the OpenAPI document: 2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAI_api_v2_performance_stats_get_200_response_data.h
 *
 * 
 */

#ifndef OAI_api_v2_performance_stats_get_200_response_data_H
#define OAI_api_v2_performance_stats_get_200_response_data_H

#include <QJsonObject>

#include "OAI_api_v2_performance_stats_get_200_response_data_accuracy.h"
#include "OAI_api_v2_performance_stats_get_200_response_data_details.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAI_api_v2_performance_stats_get_200_response_data_accuracy;
class OAI_api_v2_performance_stats_get_200_response_data_details;

class OAI_api_v2_performance_stats_get_200_response_data : public OAIObject {
public:
    OAI_api_v2_performance_stats_get_200_response_data();
    OAI_api_v2_performance_stats_get_200_response_data(QString json);
    ~OAI_api_v2_performance_stats_get_200_response_data() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAI_api_v2_performance_stats_get_200_response_data_accuracy getAccuracy() const;
    void setAccuracy(const OAI_api_v2_performance_stats_get_200_response_data_accuracy &accuracy);
    bool is_accuracy_Set() const;
    bool is_accuracy_Valid() const;

    OAI_api_v2_performance_stats_get_200_response_data_details getDetails() const;
    void setDetails(const OAI_api_v2_performance_stats_get_200_response_data_details &details);
    bool is_details_Set() const;
    bool is_details_Valid() const;

    QString getMarket() const;
    void setMarket(const QString &market);
    bool is_market_Set() const;
    bool is_market_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAI_api_v2_performance_stats_get_200_response_data_accuracy m_accuracy;
    bool m_accuracy_isSet;
    bool m_accuracy_isValid;

    OAI_api_v2_performance_stats_get_200_response_data_details m_details;
    bool m_details_isSet;
    bool m_details_isValid;

    QString m_market;
    bool m_market_isSet;
    bool m_market_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAI_api_v2_performance_stats_get_200_response_data)

#endif // OAI_api_v2_performance_stats_get_200_response_data_H
