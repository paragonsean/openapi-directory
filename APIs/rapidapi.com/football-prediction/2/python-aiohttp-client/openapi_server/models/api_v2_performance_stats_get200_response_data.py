# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.api_v2_performance_stats_get200_response_data_accuracy import ApiV2PerformanceStatsGet200ResponseDataAccuracy
from openapi_server.models.api_v2_performance_stats_get200_response_data_details import ApiV2PerformanceStatsGet200ResponseDataDetails
from openapi_server import util


class ApiV2PerformanceStatsGet200ResponseData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accuracy: ApiV2PerformanceStatsGet200ResponseDataAccuracy=None, details: ApiV2PerformanceStatsGet200ResponseDataDetails=None, market: str=None):
        """ApiV2PerformanceStatsGet200ResponseData - a model defined in OpenAPI

        :param accuracy: The accuracy of this ApiV2PerformanceStatsGet200ResponseData.
        :param details: The details of this ApiV2PerformanceStatsGet200ResponseData.
        :param market: The market of this ApiV2PerformanceStatsGet200ResponseData.
        """
        self.openapi_types = {
            'accuracy': ApiV2PerformanceStatsGet200ResponseDataAccuracy,
            'details': ApiV2PerformanceStatsGet200ResponseDataDetails,
            'market': str
        }

        self.attribute_map = {
            'accuracy': 'accuracy',
            'details': 'details',
            'market': 'market'
        }

        self._accuracy = accuracy
        self._details = details
        self._market = market

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApiV2PerformanceStatsGet200ResponseData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _api_v2_performance_stats_get_200_response_data of this ApiV2PerformanceStatsGet200ResponseData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accuracy(self):
        """Gets the accuracy of this ApiV2PerformanceStatsGet200ResponseData.


        :return: The accuracy of this ApiV2PerformanceStatsGet200ResponseData.
        :rtype: ApiV2PerformanceStatsGet200ResponseDataAccuracy
        """
        return self._accuracy

    @accuracy.setter
    def accuracy(self, accuracy):
        """Sets the accuracy of this ApiV2PerformanceStatsGet200ResponseData.


        :param accuracy: The accuracy of this ApiV2PerformanceStatsGet200ResponseData.
        :type accuracy: ApiV2PerformanceStatsGet200ResponseDataAccuracy
        """

        self._accuracy = accuracy

    @property
    def details(self):
        """Gets the details of this ApiV2PerformanceStatsGet200ResponseData.


        :return: The details of this ApiV2PerformanceStatsGet200ResponseData.
        :rtype: ApiV2PerformanceStatsGet200ResponseDataDetails
        """
        return self._details

    @details.setter
    def details(self, details):
        """Sets the details of this ApiV2PerformanceStatsGet200ResponseData.


        :param details: The details of this ApiV2PerformanceStatsGet200ResponseData.
        :type details: ApiV2PerformanceStatsGet200ResponseDataDetails
        """

        self._details = details

    @property
    def market(self):
        """Gets the market of this ApiV2PerformanceStatsGet200ResponseData.


        :return: The market of this ApiV2PerformanceStatsGet200ResponseData.
        :rtype: str
        """
        return self._market

    @market.setter
    def market(self, market):
        """Sets the market of this ApiV2PerformanceStatsGet200ResponseData.


        :param market: The market of this ApiV2PerformanceStatsGet200ResponseData.
        :type market: str
        """

        self._market = market
