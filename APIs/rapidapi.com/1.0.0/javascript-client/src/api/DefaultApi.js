/**
 * Moon API
 * # Moon-API.com Postman Collection  Welcome to the Moon Phase API Postman Collection! This collection contains a set of pre-configured API requests to interact with the Moon Phase API endpoints provided by [moon-api.com](https://moon-api.com). Explore the enchanting world of the moon and its ever-changing phases with ease using this collection.  ## Getting Started  To start using this Postman collection, follow these steps:  1. [Download and install Postman](https://www.postman.com/downloads/) if you haven't already. 2. Import the Moon API Postman Collection into your Postman app. 3. Set your RapidAPI key in the collection's environment variables. 4. Begin making requests to explore the moon phase data and retrieve lunar information.       ## Collection Structure  The Moon-API.com Postman Collection consists of the following requests:  - **Basic Moon Phase**: Retrieve the main moon phase data. - **Advanced Moon Phase**: Get detailed moon phase data based on a specific timezone and coordinates. - **Plain Text Moon Phase**: Get a plain text description of the current moon phase. - **Emoji Moon Phase**: Get the relevant emoji of the current moon phase. - **Lunar Calender**: Get the current year's moon phases in a markdown calender.       ## Environment Variables  The collection uses environment variables to store your RapidAPI key. To use this collection effectively, ensure you set the `X-Rapidapi-Key` variable in the collection's environment with your actual RapidAPI key.  ## How to Use  1. Select the desired request from the Moon API collection. 2. Click on the request to open it. 3. Send the request and view the response to retrieve the moon phase data.       ## Documentation  For more information on the Moon Phase API endpoints and their response formats, refer to the [official Moon API documentation](https://rapidapi.com/MoonAPIcom/api/moon-phase/details). Visit [moon-api.com](https://moon-api.com) to learn more about the Moon Phase API and the services provided.  Happy moon exploration with the Moon Phase API Postman Collection provided by [moon-api.com](https://moon-api.com)!
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GetAdvancedMoonPhaseData200Response from '../model/GetAdvancedMoonPhaseData200Response';
import GetBasicMoonPhaseData200Response from '../model/GetBasicMoonPhaseData200Response';

/**
* Default service.
* @module api/DefaultApi
* @version 1.0.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getAdvancedMoonPhaseData operation.
     * @callback module:api/DefaultApi~getAdvancedMoonPhaseDataCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetAdvancedMoonPhaseData200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Advanced Moon Phase Data
     * Get Advanced Moon Phase Data
     * @param {Object} opts Optional parameters
     * @param {String} [filters] Filter data in the Advanced Moon API by specifying the desired fields using the `filters` parameter in the request. Include a comma-separated list of keys to retrieve customized data, allowing you to fetch specific moon phase information and related details.
     * @param {String} [xRapidapiKey] 
     * @param {module:api/DefaultApi~getAdvancedMoonPhaseDataCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetAdvancedMoonPhaseData200Response}
     */
    getAdvancedMoonPhaseData(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filters': opts['filters']
      };
      let headerParams = {
        'X-Rapidapi-Key': opts['xRapidapiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetAdvancedMoonPhaseData200Response;
      return this.apiClient.callApi(
        '/advanced', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBasicMoonPhaseData operation.
     * @callback module:api/DefaultApi~getBasicMoonPhaseDataCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GetBasicMoonPhaseData200Response} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Basic Moon Phase Data
     * Get Basic Moon Phase Data
     * @param {Object} opts Optional parameters
     * @param {String} [xRapidapiKey] 
     * @param {module:api/DefaultApi~getBasicMoonPhaseDataCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GetBasicMoonPhaseData200Response}
     */
    getBasicMoonPhaseData(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Rapidapi-Key': opts['xRapidapiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = GetBasicMoonPhaseData200Response;
      return this.apiClient.callApi(
        '/basic', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getEmojiOfMoonPhase operation.
     * @callback module:api/DefaultApi~getEmojiOfMoonPhaseCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Emoji of Moon Phase
     * Get Emoji of Moon Phase
     * @param {Object} opts Optional parameters
     * @param {String} [xRapidapiKey] 
     * @param {module:api/DefaultApi~getEmojiOfMoonPhaseCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getEmojiOfMoonPhase(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Rapidapi-Key': opts['xRapidapiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain'];
      let returnType = null;
      return this.apiClient.callApi(
        '/emoji', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getLunarCalendar operation.
     * @callback module:api/DefaultApi~getLunarCalendarCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Lunar Calendar
     * Get Lunar Calendar
     * @param {Object} opts Optional parameters
     * @param {String} [filters] Filter data in the Advanced Moon API by specifying the desired fields using the `filters` parameter in the request. Include a comma-separated list of keys to retrieve customized data, allowing you to fetch specific moon phase information and related details.
     * @param {String} [xRapidapiKey] 
     * @param {module:api/DefaultApi~getLunarCalendarCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getLunarCalendar(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'filters': opts['filters']
      };
      let headerParams = {
        'X-Rapidapi-Key': opts['xRapidapiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain'];
      let returnType = null;
      return this.apiClient.callApi(
        '/calendar', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPlainTextMoonPhaseData operation.
     * @callback module:api/DefaultApi~getPlainTextMoonPhaseDataCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get Plain Text Moon Phase Data
     * Get Plain Text Moon Phase Data
     * @param {Object} opts Optional parameters
     * @param {String} [xRapidapiKey] 
     * @param {module:api/DefaultApi~getPlainTextMoonPhaseDataCallback} callback The callback function, accepting three arguments: error, data, response
     */
    getPlainTextMoonPhaseData(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'X-Rapidapi-Key': opts['xRapidapiKey']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['text/plain'];
      let returnType = null;
      return this.apiClient.callApi(
        '/plain-text', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
