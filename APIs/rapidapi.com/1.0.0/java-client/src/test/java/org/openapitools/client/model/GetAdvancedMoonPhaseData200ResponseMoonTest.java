/*
 * Moon API
 * # Moon-API.com Postman Collection  Welcome to the Moon Phase API Postman Collection! This collection contains a set of pre-configured API requests to interact with the Moon Phase API endpoints provided by [moon-api.com](https://moon-api.com). Explore the enchanting world of the moon and its ever-changing phases with ease using this collection.  ## Getting Started  To start using this Postman collection, follow these steps:  1. [Download and install Postman](https://www.postman.com/downloads/) if you haven't already. 2. Import the Moon API Postman Collection into your Postman app. 3. Set your RapidAPI key in the collection's environment variables. 4. Begin making requests to explore the moon phase data and retrieve lunar information.       ## Collection Structure  The Moon-API.com Postman Collection consists of the following requests:  - **Basic Moon Phase**: Retrieve the main moon phase data. - **Advanced Moon Phase**: Get detailed moon phase data based on a specific timezone and coordinates. - **Plain Text Moon Phase**: Get a plain text description of the current moon phase. - **Emoji Moon Phase**: Get the relevant emoji of the current moon phase. - **Lunar Calender**: Get the current year's moon phases in a markdown calender.       ## Environment Variables  The collection uses environment variables to store your RapidAPI key. To use this collection effectively, ensure you set the `X-Rapidapi-Key` variable in the collection's environment with your actual RapidAPI key.  ## How to Use  1. Select the desired request from the Moon API collection. 2. Click on the request to open it. 3. Send the request and view the response to retrieve the moon phase data.       ## Documentation  For more information on the Moon Phase API endpoints and their response formats, refer to the [official Moon API documentation](https://rapidapi.com/MoonAPIcom/api/moon-phase/details). Visit [moon-api.com](https://moon-api.com) to learn more about the Moon Phase API and the services provided.  Happy moon exploration with the Moon Phase API Postman Collection provided by [moon-api.com](https://moon-api.com)!
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for GetAdvancedMoonPhaseData200ResponseMoon
 */
public class GetAdvancedMoonPhaseData200ResponseMoonTest {
    private final GetAdvancedMoonPhaseData200ResponseMoon model = new GetAdvancedMoonPhaseData200ResponseMoon();

    /**
     * Model tests for GetAdvancedMoonPhaseData200ResponseMoon
     */
    @Test
    public void testGetAdvancedMoonPhaseData200ResponseMoon() {
        // TODO: test GetAdvancedMoonPhaseData200ResponseMoon
    }

    /**
     * Test the property 'ageDays'
     */
    @Test
    public void ageDaysTest() {
        // TODO: test ageDays
    }

    /**
     * Test the property 'emoji'
     */
    @Test
    public void emojiTest() {
        // TODO: test emoji
    }

    /**
     * Test the property 'illumination'
     */
    @Test
    public void illuminationTest() {
        // TODO: test illumination
    }

    /**
     * Test the property 'lunarCycle'
     */
    @Test
    public void lunarCycleTest() {
        // TODO: test lunarCycle
    }

    /**
     * Test the property 'moonAltitude'
     */
    @Test
    public void moonAltitudeTest() {
        // TODO: test moonAltitude
    }

    /**
     * Test the property 'moonAzimuth'
     */
    @Test
    public void moonAzimuthTest() {
        // TODO: test moonAzimuth
    }

    /**
     * Test the property 'moonDistance'
     */
    @Test
    public void moonDistanceTest() {
        // TODO: test moonDistance
    }

    /**
     * Test the property 'moonParallacticAngle'
     */
    @Test
    public void moonParallacticAngleTest() {
        // TODO: test moonParallacticAngle
    }

    /**
     * Test the property 'moonrise'
     */
    @Test
    public void moonriseTest() {
        // TODO: test moonrise
    }

    /**
     * Test the property 'moonriseTimestamp'
     */
    @Test
    public void moonriseTimestampTest() {
        // TODO: test moonriseTimestamp
    }

    /**
     * Test the property 'moonset'
     */
    @Test
    public void moonsetTest() {
        // TODO: test moonset
    }

    /**
     * Test the property 'moonsetTimestamp'
     */
    @Test
    public void moonsetTimestampTest() {
        // TODO: test moonsetTimestamp
    }

    /**
     * Test the property 'phase'
     */
    @Test
    public void phaseTest() {
        // TODO: test phase
    }

    /**
     * Test the property 'phaseName'
     */
    @Test
    public void phaseNameTest() {
        // TODO: test phaseName
    }

    /**
     * Test the property 'stage'
     */
    @Test
    public void stageTest() {
        // TODO: test stage
    }

    /**
     * Test the property 'zodiacSign'
     */
    @Test
    public void zodiacSignTest() {
        // TODO: test zodiacSign
    }

}
