# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Stats(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aadt: int=None):
        """Stats - a model defined in OpenAPI

        :param aadt: The aadt of this Stats.
        """
        self.openapi_types = {
            'aadt': int
        }

        self.attribute_map = {
            'aadt': 'aadt'
        }

        self._aadt = aadt

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Stats':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Stats of this Stats.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aadt(self):
        """Gets the aadt of this Stats.


        :return: The aadt of this Stats.
        :rtype: int
        """
        return self._aadt

    @aadt.setter
    def aadt(self, aadt):
        """Sets the aadt of this Stats.


        :param aadt: The aadt of this Stats.
        :type aadt: int
        """
        if aadt is None:
            raise ValueError("Invalid value for `aadt`, must not be `None`")

        self._aadt = aadt
