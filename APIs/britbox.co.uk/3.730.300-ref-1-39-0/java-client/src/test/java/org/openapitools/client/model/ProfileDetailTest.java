/*
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ClassificationSummary;
import org.openapitools.client.model.Watched;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ProfileDetail
 */
public class ProfileDetailTest {
    private final ProfileDetail model = new ProfileDetail();

    /**
     * Model tests for ProfileDetail
     */
    @Test
    public void testProfileDetail() {
        // TODO: test ProfileDetail
    }

    /**
     * Test the property 'color'
     */
    @Test
    public void colorTest() {
        // TODO: test color
    }

    /**
     * Test the property 'heroAutoplay'
     */
    @Test
    public void heroAutoplayTest() {
        // TODO: test heroAutoplay
    }

    /**
     * Test the property 'heroWithAudio'
     */
    @Test
    public void heroWithAudioTest() {
        // TODO: test heroWithAudio
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isActive'
     */
    @Test
    public void isActiveTest() {
        // TODO: test isActive
    }

    /**
     * Test the property 'languageCode'
     */
    @Test
    public void languageCodeTest() {
        // TODO: test languageCode
    }

    /**
     * Test the property 'marketingEnabled'
     */
    @Test
    public void marketingEnabledTest() {
        // TODO: test marketingEnabled
    }

    /**
     * Test the property 'maxRatingContentFilter'
     */
    @Test
    public void maxRatingContentFilterTest() {
        // TODO: test maxRatingContentFilter
    }

    /**
     * Test the property 'minRatingPlaybackGuard'
     */
    @Test
    public void minRatingPlaybackGuardTest() {
        // TODO: test minRatingPlaybackGuard
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'pinEnabled'
     */
    @Test
    public void pinEnabledTest() {
        // TODO: test pinEnabled
    }

    /**
     * Test the property 'purchaseEnabled'
     */
    @Test
    public void purchaseEnabledTest() {
        // TODO: test purchaseEnabled
    }

    /**
     * Test the property 'segments'
     */
    @Test
    public void segmentsTest() {
        // TODO: test segments
    }

    /**
     * Test the property 'bookmarked'
     */
    @Test
    public void bookmarkedTest() {
        // TODO: test bookmarked
    }

    /**
     * Test the property 'rated'
     */
    @Test
    public void ratedTest() {
        // TODO: test rated
    }

    /**
     * Test the property 'watched'
     */
    @Test
    public void watchedTest() {
        // TODO: test watched
    }

}
