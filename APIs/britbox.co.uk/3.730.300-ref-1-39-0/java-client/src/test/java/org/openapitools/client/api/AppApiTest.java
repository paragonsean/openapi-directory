/*
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AppConfig;
import org.openapitools.client.model.Page;
import org.openapitools.client.model.ServiceError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for AppApi
 */
@Disabled
public class AppApiTest {

    private final AppApi api = new AppApi();

    /**
     * Get the global configuration for an application. Should be called during app statup.  This includes things like device and playback rules, classifications, sitemap and subscriptions.  You have the option to select specific configuration objects using the &#39;include&#39; parameter, or if unspecified, getting all configuration. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAppConfigTest() throws ApiException {
        List<String> include = null;
        String system = null;
        String device = null;
        String sub = null;
        List<String> segments = null;
        List<String> ff = null;
        String lang = null;
        AppConfig response = api.getAppConfig(include, system, device, sub, segments, ff, lang);
        // TODO: test validations
    }

    /**
     * Returns a page with the specified id.  This is a cut down version for low memory devices.123  If targeting the search page you must url encode the search term as a parameter using the &#x60;q&#x60; key. For example if your browser path looks like &#x60;/search?q&#x3D;the&#x60; then what you pass to this endpoint would look like &#x60;/itv/page?path&#x3D;/search%3Fq%3Dthe&#x60;. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getItvPageTest() throws ApiException {
        String path = null;
        Integer listPageSize = null;
        Integer listPageSizeLarge = null;
        Integer maxListPrefetch = null;
        String itemDetailExpand = null;
        String itemDetailSelectSeason = null;
        String textEntryFormat = null;
        String maxRating = null;
        String device = null;
        String sub = null;
        List<String> segments = null;
        List<String> ff = null;
        String lang = null;
        Page response = api.getItvPage(path, listPageSize, listPageSizeLarge, maxListPrefetch, itemDetailExpand, itemDetailSelectSeason, textEntryFormat, maxRating, device, sub, segments, ff, lang);
        // TODO: test validations
    }

    /**
     * Returns a page with the specified id.  If targeting the search page you must url encode the search term as a parameter using the &#x60;q&#x60; key. For example if your browser path looks like &#x60;/search?q&#x3D;the&#x60; then what you pass to this endpoint would look like &#x60;/page?path&#x3D;/search%3Fq%3Dthe&#x60;. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPageTest() throws ApiException {
        String path = null;
        Integer listPageSize = null;
        Integer listPageSizeLarge = null;
        Integer maxListPrefetch = null;
        String itemDetailExpand = null;
        String itemDetailSelectSeason = null;
        String textEntryFormat = null;
        String maxRating = null;
        String device = null;
        String sub = null;
        List<String> segments = null;
        List<String> ff = null;
        String lang = null;
        Page response = api.getPage(path, listPageSize, listPageSizeLarge, maxListPrefetch, itemDetailExpand, itemDetailSelectSeason, textEntryFormat, maxRating, device, sub, segments, ff, lang);
        // TODO: test validations
    }

}
