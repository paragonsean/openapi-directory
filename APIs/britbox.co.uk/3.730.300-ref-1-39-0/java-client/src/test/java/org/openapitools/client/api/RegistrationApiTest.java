/*
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccessToken;
import org.openapitools.client.model.RegistrationRequest;
import org.openapitools.client.model.ServiceError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for RegistrationApi
 */
@Disabled
public class RegistrationApiTest {

    private final RegistrationApi api = new RegistrationApi();

    /**
     * Register a new user, creating them an account.  Registration, when successful, will return an array of access tokens so the user is immediately signed in.  It returns Catalog and Commerce scoped tokens for both Account and Profile. The Commerce ones are intended to allow the purchase of a subscription plan in the step after registration, without the user being prompted to enter their username and password again.  An email will also be sent with a link they need to click to confirm their email address. This confirmation is done via the /verify-email endpoint. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void registerTest() throws ApiException {
        RegistrationRequest registrationRequest = null;
        List<String> ff = null;
        String lang = null;
        List<AccessToken> response = api.register(registrationRequest, ff, lang);
        // TODO: test validations
    }

}
