/*
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for Plan
 */
public class PlanTest {
    private final Plan model = new Plan();

    /**
     * Model tests for Plan
     */
    @Test
    public void testPlan() {
        // TODO: test Plan
    }

    /**
     * Test the property 'alias'
     */
    @Test
    public void aliasTest() {
        // TODO: test alias
    }

    /**
     * Test the property 'benefits'
     */
    @Test
    public void benefitsTest() {
        // TODO: test benefits
    }

    /**
     * Test the property 'billingPeriodFrequency'
     */
    @Test
    public void billingPeriodFrequencyTest() {
        // TODO: test billingPeriodFrequency
    }

    /**
     * Test the property 'billingPeriodType'
     */
    @Test
    public void billingPeriodTypeTest() {
        // TODO: test billingPeriodType
    }

    /**
     * Test the property 'currency'
     */
    @Test
    public void currencyTest() {
        // TODO: test currency
    }

    /**
     * Test the property 'customFields'
     */
    @Test
    public void customFieldsTest() {
        // TODO: test customFields
    }

    /**
     * Test the property 'hasTrialPeriod'
     */
    @Test
    public void hasTrialPeriodTest() {
        // TODO: test hasTrialPeriod
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'isActive'
     */
    @Test
    public void isActiveTest() {
        // TODO: test isActive
    }

    /**
     * Test the property 'isFeatured'
     */
    @Test
    public void isFeaturedTest() {
        // TODO: test isFeatured
    }

    /**
     * Test the property 'isPrivate'
     */
    @Test
    public void isPrivateTest() {
        // TODO: test isPrivate
    }

    /**
     * Test the property 'price'
     */
    @Test
    public void priceTest() {
        // TODO: test price
    }

    /**
     * Test the property 'revenueType'
     */
    @Test
    public void revenueTypeTest() {
        // TODO: test revenueType
    }

    /**
     * Test the property 'subscriptionCode'
     */
    @Test
    public void subscriptionCodeTest() {
        // TODO: test subscriptionCode
    }

    /**
     * Test the property 'tagline'
     */
    @Test
    public void taglineTest() {
        // TODO: test tagline
    }

    /**
     * Test the property 'termsAndConditions'
     */
    @Test
    public void termsAndConditionsTest() {
        // TODO: test termsAndConditions
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'trialPeriodDays'
     */
    @Test
    public void trialPeriodDaysTest() {
        // TODO: test trialPeriodDays
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

}
