/*
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.net.URI;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import org.openapitools.client.model.ClassificationSummary;
import org.openapitools.client.model.Offer;
import org.openapitools.client.model.Theme;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ItemSummary
 */
public class ItemSummaryTest {
    private final ItemSummary model = new ItemSummary();

    /**
     * Model tests for ItemSummary
     */
    @Test
    public void testItemSummary() {
        // TODO: test ItemSummary
    }

    /**
     * Test the property 'advisoryText'
     */
    @Test
    public void advisoryTextTest() {
        // TODO: test advisoryText
    }

    /**
     * Test the property 'availableEpisodeCount'
     */
    @Test
    public void availableEpisodeCountTest() {
        // TODO: test availableEpisodeCount
    }

    /**
     * Test the property 'availableSeasonCount'
     */
    @Test
    public void availableSeasonCountTest() {
        // TODO: test availableSeasonCount
    }

    /**
     * Test the property 'averageUserRating'
     */
    @Test
    public void averageUserRatingTest() {
        // TODO: test averageUserRating
    }

    /**
     * Test the property 'badge'
     */
    @Test
    public void badgeTest() {
        // TODO: test badge
    }

    /**
     * Test the property 'channelShortCode'
     */
    @Test
    public void channelShortCodeTest() {
        // TODO: test channelShortCode
    }

    /**
     * Test the property 'classification'
     */
    @Test
    public void classificationTest() {
        // TODO: test classification
    }

    /**
     * Test the property 'contextualTitle'
     */
    @Test
    public void contextualTitleTest() {
        // TODO: test contextualTitle
    }

    /**
     * Test the property 'customFields'
     */
    @Test
    public void customFieldsTest() {
        // TODO: test customFields
    }

    /**
     * Test the property 'customId'
     */
    @Test
    public void customIdTest() {
        // TODO: test customId
    }

    /**
     * Test the property 'duration'
     */
    @Test
    public void durationTest() {
        // TODO: test duration
    }

    /**
     * Test the property 'episodeCount'
     */
    @Test
    public void episodeCountTest() {
        // TODO: test episodeCount
    }

    /**
     * Test the property 'episodeName'
     */
    @Test
    public void episodeNameTest() {
        // TODO: test episodeName
    }

    /**
     * Test the property 'episodeNumber'
     */
    @Test
    public void episodeNumberTest() {
        // TODO: test episodeNumber
    }

    /**
     * Test the property 'genres'
     */
    @Test
    public void genresTest() {
        // TODO: test genres
    }

    /**
     * Test the property 'hasClosedCaptions'
     */
    @Test
    public void hasClosedCaptionsTest() {
        // TODO: test hasClosedCaptions
    }

    /**
     * Test the property 'id'
     */
    @Test
    public void idTest() {
        // TODO: test id
    }

    /**
     * Test the property 'images'
     */
    @Test
    public void imagesTest() {
        // TODO: test images
    }

    /**
     * Test the property 'offers'
     */
    @Test
    public void offersTest() {
        // TODO: test offers
    }

    /**
     * Test the property 'path'
     */
    @Test
    public void pathTest() {
        // TODO: test path
    }

    /**
     * Test the property 'releaseYear'
     */
    @Test
    public void releaseYearTest() {
        // TODO: test releaseYear
    }

    /**
     * Test the property 'scopes'
     */
    @Test
    public void scopesTest() {
        // TODO: test scopes
    }

    /**
     * Test the property 'seasonId'
     */
    @Test
    public void seasonIdTest() {
        // TODO: test seasonId
    }

    /**
     * Test the property 'seasonNumber'
     */
    @Test
    public void seasonNumberTest() {
        // TODO: test seasonNumber
    }

    /**
     * Test the property 'shortDescription'
     */
    @Test
    public void shortDescriptionTest() {
        // TODO: test shortDescription
    }

    /**
     * Test the property 'showId'
     */
    @Test
    public void showIdTest() {
        // TODO: test showId
    }

    /**
     * Test the property 'showTitle'
     */
    @Test
    public void showTitleTest() {
        // TODO: test showTitle
    }

    /**
     * Test the property 'subtype'
     */
    @Test
    public void subtypeTest() {
        // TODO: test subtype
    }

    /**
     * Test the property 'tagline'
     */
    @Test
    public void taglineTest() {
        // TODO: test tagline
    }

    /**
     * Test the property 'themes'
     */
    @Test
    public void themesTest() {
        // TODO: test themes
    }

    /**
     * Test the property 'title'
     */
    @Test
    public void titleTest() {
        // TODO: test title
    }

    /**
     * Test the property 'type'
     */
    @Test
    public void typeTest() {
        // TODO: test type
    }

    /**
     * Test the property 'watchPath'
     */
    @Test
    public void watchPathTest() {
        // TODO: test watchPath
    }

}
