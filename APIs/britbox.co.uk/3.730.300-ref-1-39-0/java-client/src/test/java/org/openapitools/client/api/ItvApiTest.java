/*
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AccessToken;
import org.openapitools.client.model.ItemList;
import org.openapitools.client.model.ItvBillingHistory;
import org.openapitools.client.model.ItvBillingHistoryRequest;
import org.openapitools.client.model.ItvCancelSubscriptionRequest;
import org.openapitools.client.model.ItvCardDetails;
import org.openapitools.client.model.ItvChangeCardDetailsRequest;
import org.openapitools.client.model.ItvChangeEmailRequest;
import org.openapitools.client.model.ItvChangeMarketingRequest;
import org.openapitools.client.model.ItvCurrentSubscription;
import org.openapitools.client.model.ItvDeleteAccountRequest;
import org.openapitools.client.model.ItvEntitlementCurrent;
import org.openapitools.client.model.ItvEntitlementsHistory;
import org.openapitools.client.model.ItvFeatureFlag;
import org.openapitools.client.model.ItvGetCardDetailsRequest;
import org.openapitools.client.model.ItvGetDiscountResponse;
import org.openapitools.client.model.ItvGooglePaySubscriptionRequest;
import org.openapitools.client.model.ItvHadEntitlement;
import org.openapitools.client.model.ItvPinAuthRequest;
import org.openapitools.client.model.ItvPlans;
import org.openapitools.client.model.ItvProfileToken;
import org.openapitools.client.model.ItvProfileTokenRequest;
import org.openapitools.client.model.ItvPurchase;
import org.openapitools.client.model.ItvPurchaseRequest;
import org.openapitools.client.model.ItvPurchaseStrongRequest;
import org.openapitools.client.model.ItvPurchaseStrongResponse;
import org.openapitools.client.model.ItvPurchaseWithOfferRequest;
import org.openapitools.client.model.ItvPurchaseWithOfferResponse;
import org.openapitools.client.model.ItvRokuTransactionRequest;
import org.openapitools.client.model.ItvSubscriptionFullPriceRenewal;
import org.openapitools.client.model.ItvSubscriptionState;
import org.openapitools.client.model.ItvSubscriptionStatusResponse;
import org.openapitools.client.model.ItvUpdateIntentStrongRequest;
import org.openapitools.client.model.ItvUpdateIntentStrongResponse;
import org.openapitools.client.model.ItvUpdatePaymentStrongRequest;
import org.openapitools.client.model.ItvUpdateProfileRequest;
import org.openapitools.client.model.ItvUpgradePlanRequest;
import org.openapitools.client.model.ItvVoucher;
import org.openapitools.client.model.ItvVoucherRequest;
import org.openapitools.client.model.RokuPlans;
import org.openapitools.client.model.SamsungPreview;
import org.openapitools.client.model.ServiceError;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ItvApi
 */
@Disabled
public class ItvApiTest {

    private final ItvApi api = new ItvApi();

    /**
     * Activates the discount for a user. Only Stripe platform is currently supported.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void activateSaveOfferTest() throws ApiException {
        String body = null;
        String lang = null;
        api.activateSaveOffer(body, lang);
        // TODO: test validations
    }

    /**
     * Change payment card details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void changeCardDetailsTest() throws ApiException {
        String platform = null;
        ItvChangeCardDetailsRequest itvChangeCardDetailsRequest = null;
        String lang = null;
        api.changeCardDetails(platform, itvChangeCardDetailsRequest, lang);
        // TODO: test validations
    }

    /**
     * Change email address related to account/profile.  The expected token scope is Settings. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void changeEmailTest() throws ApiException {
        ItvChangeEmailRequest itvChangeEmailRequest = null;
        List<String> ff = null;
        String lang = null;
        api.changeEmail(itvChangeEmailRequest, ff, lang);
        // TODO: test validations
    }

    /**
     * Change marketing preferences related to account/profile.  The expected token scope is Settings. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void changeMarketingTest() throws ApiException {
        ItvChangeMarketingRequest itvChangeMarketingRequest = null;
        List<String> ff = null;
        String lang = null;
        api.changeMarketing(itvChangeMarketingRequest, ff, lang);
        // TODO: test validations
    }

    /**
     * Check whether the user has been previously entitled.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void checkPreviousEntitlementsTest() throws ApiException {
        String lang = null;
        ItvHadEntitlement response = api.checkPreviousEntitlements(lang);
        // TODO: test validations
    }

    /**
     * Validates the coupon/voucher for specified payment platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void checkVoucherTest() throws ApiException {
        String platform = null;
        ItvVoucherRequest itvVoucherRequest = null;
        String lang = null;
        ItvVoucher response = api.checkVoucher(platform, itvVoucherRequest, lang);
        // TODO: test validations
    }

    /**
     * Confirms purchase and returns the details of purchased subscription for specified payment platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void confirmPurchaseTest() throws ApiException {
        String platform = null;
        ItvPurchaseRequest itvPurchaseRequest = null;
        String lang = null;
        ItvPurchase response = api.confirmPurchase(platform, itvPurchaseRequest, lang);
        // TODO: test validations
    }

    /**
     * Confirms purchase and returns the details of purchased subscription for specified payment platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void confirmPurchaseStrongTest() throws ApiException {
        String platform = null;
        ItvPurchaseStrongRequest itvPurchaseStrongRequest = null;
        String lang = null;
        ItvPurchaseStrongResponse response = api.confirmPurchaseStrong(platform, itvPurchaseStrongRequest, lang);
        // TODO: test validations
    }

    /**
     * Confirms purchase and returns the details of purchased subscription for specified payment platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void confirmPurchaseWithOfferTest() throws ApiException {
        String platform = null;
        ItvPurchaseWithOfferRequest itvPurchaseWithOfferRequest = null;
        String lang = null;
        ItvPurchaseWithOfferResponse response = api.confirmPurchaseWithOffer(platform, itvPurchaseWithOfferRequest, lang);
        // TODO: test validations
    }

    /**
     * Delete account in compliance with GDPR.  The expected token scope is Settings. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteAccountTest() throws ApiException {
        ItvDeleteAccountRequest itvDeleteAccountRequest = null;
        List<String> ff = null;
        String lang = null;
        api.deleteAccount(itvDeleteAccountRequest, ff, lang);
        // TODO: test validations
    }

    /**
     * Sends request to execute specified transaction.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void executeTransactionTest() throws ApiException {
        String transactionid = null;
        ItvRokuTransactionRequest itvRokuTransactionRequest = null;
        String lang = null;
        api.executeTransaction(transactionid, itvRokuTransactionRequest, lang);
        // TODO: test validations
    }

    /**
     * Provides authorization with parental control pin.  Returns an array containing account token with Playback scope.  Requires access token with Catalog scope.  Pin must be a 4-digit string 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAccountTokenWithPinTest() throws ApiException {
        ItvPinAuthRequest itvPinAuthRequest = null;
        List<String> ff = null;
        String lang = null;
        List<AccessToken> response = api.getAccountTokenWithPin(itvPinAuthRequest, ff, lang);
        // TODO: test validations
    }

    /**
     * Returns the list of billing records for specified payment platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getBillingHistoryTest() throws ApiException {
        String platform = null;
        ItvBillingHistoryRequest itvBillingHistoryRequest = null;
        String lang = null;
        ItvBillingHistory response = api.getBillingHistory(platform, itvBillingHistoryRequest, lang);
        // TODO: test validations
    }

    /**
     * Get payment card details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCardDetailsTest() throws ApiException {
        String platform = null;
        ItvGetCardDetailsRequest itvGetCardDetailsRequest = null;
        String lang = null;
        ItvCardDetails response = api.getCardDetails(platform, itvGetCardDetailsRequest, lang);
        // TODO: test validations
    }

    /**
     * Returns current entitlement.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCurrentEntitlementTest() throws ApiException {
        String lang = null;
        ItvEntitlementCurrent response = api.getCurrentEntitlement(lang);
        // TODO: test validations
    }

    /**
     * Returns the details of current subscription for specified payment platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getCurrentSubscriptionTest() throws ApiException {
        String platform = null;
        String lang = null;
        ItvCurrentSubscription response = api.getCurrentSubscription(platform, lang);
        // TODO: test validations
    }

    /**
     * Returns the state of subscription for any payment platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getEntitlementsHistoryTest() throws ApiException {
        String lang = null;
        ItvEntitlementsHistory response = api.getEntitlementsHistory(lang);
        // TODO: test validations
    }

    /**
     * Gets info whether or not a feature is enabled or disabled using a feature flag. Feature flags are set as a custom field within PM. It also supports custom feature flag data if needed. Such data can be return as well.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFeatureFlagTest() throws ApiException {
        String feature = null;
        String lang = null;
        ItvFeatureFlag response = api.getFeatureFlag(feature, lang);
        // TODO: test validations
    }

    /**
     * Returns full price renewal state and reason for specific user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getFullPriceRenewalTest() throws ApiException {
        String lang = null;
        ItvSubscriptionFullPriceRenewal response = api.getFullPriceRenewal(lang);
        // TODO: test validations
    }

    /**
     * Returns the ITV profile token.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getItvProfileTokenTest() throws ApiException {
        ItvProfileTokenRequest itvProfileTokenRequest = null;
        String lang = null;
        ItvProfileToken response = api.getItvProfileToken(itvProfileTokenRequest, lang);
        // TODO: test validations
    }

    /**
     * Returns public preview for Samsung based on the page &#39;/samsung-preview&#39; configured in PresentationManager. There is a hard limit of max 40 items to be returned. It splits evenly items count into the page rows, remaining items are added into the first row. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getPublicPreviewTest() throws ApiException {
        SamsungPreview response = api.getPublicPreview();
        // TODO: test validations
    }

    /**
     * Get the list of recommended items under the active profile.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getRecommendedListTest() throws ApiException {
        List<String> itemTypes = null;
        Integer page = null;
        Integer pageSize = null;
        String device = null;
        String sub = null;
        List<String> segments = null;
        List<String> ff = null;
        String lang = null;
        ItemList response = api.getRecommendedList(itemTypes, page, pageSize, device, sub, segments, ff, lang);
        // TODO: test validations
    }

    /**
     * Checks the provided coupon id for a user. Only Stripe platform is currently supported.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSaveOfferTest() throws ApiException {
        String lang = null;
        ItvGetDiscountResponse response = api.getSaveOffer(lang);
        // TODO: test validations
    }

    /**
     * Returns the state of subscription for any payment platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSubscriptionStateTest() throws ApiException {
        String lang = null;
        ItvSubscriptionState response = api.getSubscriptionState(lang);
        // TODO: test validations
    }

    /**
     * Returns status of latest payment intent.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSubscriptionStatusTest() throws ApiException {
        String platform = null;
        String lang = null;
        ItvSubscriptionStatusResponse response = api.getSubscriptionStatus(platform, lang);
        // TODO: test validations
    }

    /**
     * Returns an upcoming invoice
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getUpcomingInvoiceTest() throws ApiException {
        String lang = null;
        ItvGetDiscountResponse response = api.getUpcomingInvoice(lang);
        // TODO: test validations
    }

    /**
     * Checks the provided coupon id for a user. Only Stripe platform is currently supported.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getVoucherByIdTest() throws ApiException {
        String voucherId = null;
        String planId = null;
        String lang = null;
        ItvVoucher response = api.getVoucherById(voucherId, planId, lang);
        // TODO: test validations
    }

    /**
     * Get the list of recommended items under the active profile.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void googlePaySubscriptionTest() throws ApiException {
        ItvGooglePaySubscriptionRequest itvGooglePaySubscriptionRequest = null;
        String lang = null;
        api.googlePaySubscription(itvGooglePaySubscriptionRequest, lang);
        // TODO: test validations
    }

    /**
     * Redirects to corresponding Axis Item details page.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void itvItemsummaryExternalIdGetTest() throws ApiException {
        String externalId = null;
        ServiceError response = api.itvItemsummaryExternalIdGet(externalId);
        // TODO: test validations
    }

    /**
     * Returns the plans available for specified payment platform.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void itvPlansPlatformGetTest() throws ApiException {
        String platform = null;
        String lang = null;
        ItvPlans response = api.itvPlansPlatformGet(platform, lang);
        // TODO: test validations
    }

    /**
     * Returns the ITV profile object.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void itvProfileGetTest() throws ApiException {
        String lang = null;
        Object response = api.itvProfileGet(lang);
        // TODO: test validations
    }

    /**
     * Cancel a plan subscription.  A cancelled subscription will continue to be valid until the subscription expiry date or next renewal date. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void itvPurchasePlatformDeleteTest() throws ApiException {
        String platform = null;
        ItvCancelSubscriptionRequest itvCancelSubscriptionRequest = null;
        String lang = null;
        api.itvPurchasePlatformDelete(platform, itvCancelSubscriptionRequest, lang);
        // TODO: test validations
    }

    /**
     * Gets available Roku plans.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void itvRokuPlansGetTest() throws ApiException {
        String lang = null;
        RokuPlans response = api.itvRokuPlansGet(lang);
        // TODO: test validations
    }

    /**
     * Resubscription for a user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void resubscribeTest() throws ApiException {
        String planId = null;
        String platform = null;
        String lang = null;
        Object response = api.resubscribe(planId, platform, lang);
        // TODO: test validations
    }

    /**
     * Change payment method details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePaymentIntentStrongTest() throws ApiException {
        String platform = null;
        ItvUpdateIntentStrongRequest itvUpdateIntentStrongRequest = null;
        String lang = null;
        ItvUpdateIntentStrongResponse response = api.updatePaymentIntentStrong(platform, itvUpdateIntentStrongRequest, lang);
        // TODO: test validations
    }

    /**
     * Change payment method details.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updatePaymentMethodStrongTest() throws ApiException {
        String platform = null;
        ItvUpdatePaymentStrongRequest itvUpdatePaymentStrongRequest = null;
        String lang = null;
        api.updatePaymentMethodStrong(platform, itvUpdatePaymentStrongRequest, lang);
        // TODO: test validations
    }

    /**
     * Update ITV profile.  The expected token scope is Settings. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateProfileTest() throws ApiException {
        ItvUpdateProfileRequest itvUpdateProfileRequest = null;
        List<String> ff = null;
        String lang = null;
        api.updateProfile(itvUpdateProfileRequest, ff, lang);
        // TODO: test validations
    }

    /**
     * Upgrades the plan for the current user.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void upgradePlanTest() throws ApiException {
        String platform = null;
        ItvUpgradePlanRequest itvUpgradePlanRequest = null;
        String lang = null;
        api.upgradePlan(platform, itvUpgradePlanRequest, lang);
        // TODO: test validations
    }

}
