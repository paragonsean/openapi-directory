/*
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ItvPurchaseWithOfferResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:29:39.003134-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class ItvPurchaseWithOfferResponse {
  public static final String SERIALIZED_NAME_CLIENT_SECRET = "clientSecret";
  @SerializedName(SERIALIZED_NAME_CLIENT_SECRET)
  private String clientSecret;

  public static final String SERIALIZED_NAME_CUSTOMER_ID = "customerId";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ID)
  private String customerId;

  public static final String SERIALIZED_NAME_INTENT_ID = "intentId";
  @SerializedName(SERIALIZED_NAME_INTENT_ID)
  private String intentId;

  public static final String SERIALIZED_NAME_INTENT_TYPE = "intentType";
  @SerializedName(SERIALIZED_NAME_INTENT_TYPE)
  private String intentType;

  public static final String SERIALIZED_NAME_PAYMENT_METHOD_ID = "paymentMethodId";
  @SerializedName(SERIALIZED_NAME_PAYMENT_METHOD_ID)
  private String paymentMethodId;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_SUBSCRIPTION_ID = "subscriptionId";
  @SerializedName(SERIALIZED_NAME_SUBSCRIPTION_ID)
  private String subscriptionId;

  public ItvPurchaseWithOfferResponse() {
  }

  public ItvPurchaseWithOfferResponse clientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
    return this;
  }

  /**
   * clientSecret.
   * @return clientSecret
   */
  @javax.annotation.Nullable
  public String getClientSecret() {
    return clientSecret;
  }

  public void setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
  }


  public ItvPurchaseWithOfferResponse customerId(String customerId) {
    this.customerId = customerId;
    return this;
  }

  /**
   * The identifier of user in payment system.
   * @return customerId
   */
  @javax.annotation.Nullable
  public String getCustomerId() {
    return customerId;
  }

  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public ItvPurchaseWithOfferResponse intentId(String intentId) {
    this.intentId = intentId;
    return this;
  }

  /**
   * IntentId.
   * @return intentId
   */
  @javax.annotation.Nullable
  public String getIntentId() {
    return intentId;
  }

  public void setIntentId(String intentId) {
    this.intentId = intentId;
  }


  public ItvPurchaseWithOfferResponse intentType(String intentType) {
    this.intentType = intentType;
    return this;
  }

  /**
   * intentType.
   * @return intentType
   */
  @javax.annotation.Nullable
  public String getIntentType() {
    return intentType;
  }

  public void setIntentType(String intentType) {
    this.intentType = intentType;
  }


  public ItvPurchaseWithOfferResponse paymentMethodId(String paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
    return this;
  }

  /**
   * Payment Method ID
   * @return paymentMethodId
   */
  @javax.annotation.Nullable
  public String getPaymentMethodId() {
    return paymentMethodId;
  }

  public void setPaymentMethodId(String paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
  }


  public ItvPurchaseWithOfferResponse status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Status.
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public ItvPurchaseWithOfferResponse subscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
    return this;
  }

  /**
   * The identifier of subscription in payment system.
   * @return subscriptionId
   */
  @javax.annotation.Nullable
  public String getSubscriptionId() {
    return subscriptionId;
  }

  public void setSubscriptionId(String subscriptionId) {
    this.subscriptionId = subscriptionId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ItvPurchaseWithOfferResponse itvPurchaseWithOfferResponse = (ItvPurchaseWithOfferResponse) o;
    return Objects.equals(this.clientSecret, itvPurchaseWithOfferResponse.clientSecret) &&
        Objects.equals(this.customerId, itvPurchaseWithOfferResponse.customerId) &&
        Objects.equals(this.intentId, itvPurchaseWithOfferResponse.intentId) &&
        Objects.equals(this.intentType, itvPurchaseWithOfferResponse.intentType) &&
        Objects.equals(this.paymentMethodId, itvPurchaseWithOfferResponse.paymentMethodId) &&
        Objects.equals(this.status, itvPurchaseWithOfferResponse.status) &&
        Objects.equals(this.subscriptionId, itvPurchaseWithOfferResponse.subscriptionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientSecret, customerId, intentId, intentType, paymentMethodId, status, subscriptionId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ItvPurchaseWithOfferResponse {\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    intentId: ").append(toIndentedString(intentId)).append("\n");
    sb.append("    intentType: ").append(toIndentedString(intentType)).append("\n");
    sb.append("    paymentMethodId: ").append(toIndentedString(paymentMethodId)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    subscriptionId: ").append(toIndentedString(subscriptionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("clientSecret");
    openapiFields.add("customerId");
    openapiFields.add("intentId");
    openapiFields.add("intentType");
    openapiFields.add("paymentMethodId");
    openapiFields.add("status");
    openapiFields.add("subscriptionId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ItvPurchaseWithOfferResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ItvPurchaseWithOfferResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ItvPurchaseWithOfferResponse is not found in the empty JSON string", ItvPurchaseWithOfferResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ItvPurchaseWithOfferResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ItvPurchaseWithOfferResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("clientSecret") != null && !jsonObj.get("clientSecret").isJsonNull()) && !jsonObj.get("clientSecret").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `clientSecret` to be a primitive type in the JSON string but got `%s`", jsonObj.get("clientSecret").toString()));
      }
      if ((jsonObj.get("customerId") != null && !jsonObj.get("customerId").isJsonNull()) && !jsonObj.get("customerId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `customerId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("customerId").toString()));
      }
      if ((jsonObj.get("intentId") != null && !jsonObj.get("intentId").isJsonNull()) && !jsonObj.get("intentId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `intentId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("intentId").toString()));
      }
      if ((jsonObj.get("intentType") != null && !jsonObj.get("intentType").isJsonNull()) && !jsonObj.get("intentType").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `intentType` to be a primitive type in the JSON string but got `%s`", jsonObj.get("intentType").toString()));
      }
      if ((jsonObj.get("paymentMethodId") != null && !jsonObj.get("paymentMethodId").isJsonNull()) && !jsonObj.get("paymentMethodId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `paymentMethodId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("paymentMethodId").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      if ((jsonObj.get("subscriptionId") != null && !jsonObj.get("subscriptionId").isJsonNull()) && !jsonObj.get("subscriptionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subscriptionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subscriptionId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ItvPurchaseWithOfferResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ItvPurchaseWithOfferResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ItvPurchaseWithOfferResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ItvPurchaseWithOfferResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<ItvPurchaseWithOfferResponse>() {
           @Override
           public void write(JsonWriter out, ItvPurchaseWithOfferResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ItvPurchaseWithOfferResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ItvPurchaseWithOfferResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ItvPurchaseWithOfferResponse
   * @throws IOException if the JSON string is invalid with respect to ItvPurchaseWithOfferResponse
   */
  public static ItvPurchaseWithOfferResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ItvPurchaseWithOfferResponse.class);
  }

  /**
   * Convert an instance of ItvPurchaseWithOfferResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

