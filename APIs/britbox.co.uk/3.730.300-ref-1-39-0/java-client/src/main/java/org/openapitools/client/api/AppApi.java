/*
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.AppConfig;
import org.openapitools.client.model.Page;
import org.openapitools.client.model.ServiceError;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class AppApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public AppApi() {
        this(Configuration.getDefaultApiClient());
    }

    public AppApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getAppConfig
     * @param include A comma delimited list of config objects to return. If none specified then all configuration is returned.  (optional)
     * @param system Classification system to load in case include &#x3D; classification.  (optional)
     * @param device The type of device the content is targeting. (optional, default to web_browser)
     * @param sub The active subscription code. (optional)
     * @param segments The list of segments to filter the response by. (optional)
     * @param ff The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - &#x60;all&#x60; - Enable all flags. Useful for testing. _Don&#39;t use in production_. - &#x60;idp&#x60; - Dynamic item detail pages with schedulable rows. - &#x60;ldp&#x60; - Dynamic list detail pages with schedulable rows. - &#x60;hb&#x60; - Hubble formatted image urls. - &#x60;rpt&#x60; - Updated resume point threshold logic. - &#x60;cas&#x60; - \&quot;Custom Asset Search\&quot;, inlcude &#x60;customAssets&#x60; in search results. - &#x60;lrl&#x60; - Do not pre-populate related list if more than &#x60;max_list_prefetch&#x60; down the page. - &#x60;cd&#x60; - Custom Destination support.  See the &#x60;feature-flags.md&#x60; for available flag details.  (optional)
     * @param lang Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to &#39;en&#39;, unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The list of available pages </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. </td><td>  -  </td></tr>
        <tr><td> 415 </td><td> Unsupported Media Type </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal server error. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Service error. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAppConfigCall(List<String> include, String system, String device, String sub, List<String> segments, List<String> ff, String lang, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/config";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (include != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "include", include));
        }

        if (system != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("system", system));
        }

        if (device != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("device", device));
        }

        if (sub != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sub", sub));
        }

        if (segments != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "segments", segments));
        }

        if (ff != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "ff", ff));
        }

        if (lang != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lang", lang));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getAppConfigValidateBeforeCall(List<String> include, String system, String device, String sub, List<String> segments, List<String> ff, String lang, final ApiCallback _callback) throws ApiException {
        return getAppConfigCall(include, system, device, sub, segments, ff, lang, _callback);

    }

    /**
     * 
     * Get the global configuration for an application. Should be called during app statup.  This includes things like device and playback rules, classifications, sitemap and subscriptions.  You have the option to select specific configuration objects using the &#39;include&#39; parameter, or if unspecified, getting all configuration. 
     * @param include A comma delimited list of config objects to return. If none specified then all configuration is returned.  (optional)
     * @param system Classification system to load in case include &#x3D; classification.  (optional)
     * @param device The type of device the content is targeting. (optional, default to web_browser)
     * @param sub The active subscription code. (optional)
     * @param segments The list of segments to filter the response by. (optional)
     * @param ff The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - &#x60;all&#x60; - Enable all flags. Useful for testing. _Don&#39;t use in production_. - &#x60;idp&#x60; - Dynamic item detail pages with schedulable rows. - &#x60;ldp&#x60; - Dynamic list detail pages with schedulable rows. - &#x60;hb&#x60; - Hubble formatted image urls. - &#x60;rpt&#x60; - Updated resume point threshold logic. - &#x60;cas&#x60; - \&quot;Custom Asset Search\&quot;, inlcude &#x60;customAssets&#x60; in search results. - &#x60;lrl&#x60; - Do not pre-populate related list if more than &#x60;max_list_prefetch&#x60; down the page. - &#x60;cd&#x60; - Custom Destination support.  See the &#x60;feature-flags.md&#x60; for available flag details.  (optional)
     * @param lang Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to &#39;en&#39;, unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes  (optional)
     * @return AppConfig
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The list of available pages </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. </td><td>  -  </td></tr>
        <tr><td> 415 </td><td> Unsupported Media Type </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal server error. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Service error. </td><td>  -  </td></tr>
     </table>
     */
    public AppConfig getAppConfig(List<String> include, String system, String device, String sub, List<String> segments, List<String> ff, String lang) throws ApiException {
        ApiResponse<AppConfig> localVarResp = getAppConfigWithHttpInfo(include, system, device, sub, segments, ff, lang);
        return localVarResp.getData();
    }

    /**
     * 
     * Get the global configuration for an application. Should be called during app statup.  This includes things like device and playback rules, classifications, sitemap and subscriptions.  You have the option to select specific configuration objects using the &#39;include&#39; parameter, or if unspecified, getting all configuration. 
     * @param include A comma delimited list of config objects to return. If none specified then all configuration is returned.  (optional)
     * @param system Classification system to load in case include &#x3D; classification.  (optional)
     * @param device The type of device the content is targeting. (optional, default to web_browser)
     * @param sub The active subscription code. (optional)
     * @param segments The list of segments to filter the response by. (optional)
     * @param ff The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - &#x60;all&#x60; - Enable all flags. Useful for testing. _Don&#39;t use in production_. - &#x60;idp&#x60; - Dynamic item detail pages with schedulable rows. - &#x60;ldp&#x60; - Dynamic list detail pages with schedulable rows. - &#x60;hb&#x60; - Hubble formatted image urls. - &#x60;rpt&#x60; - Updated resume point threshold logic. - &#x60;cas&#x60; - \&quot;Custom Asset Search\&quot;, inlcude &#x60;customAssets&#x60; in search results. - &#x60;lrl&#x60; - Do not pre-populate related list if more than &#x60;max_list_prefetch&#x60; down the page. - &#x60;cd&#x60; - Custom Destination support.  See the &#x60;feature-flags.md&#x60; for available flag details.  (optional)
     * @param lang Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to &#39;en&#39;, unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes  (optional)
     * @return ApiResponse&lt;AppConfig&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The list of available pages </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. </td><td>  -  </td></tr>
        <tr><td> 415 </td><td> Unsupported Media Type </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal server error. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Service error. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AppConfig> getAppConfigWithHttpInfo(List<String> include, String system, String device, String sub, List<String> segments, List<String> ff, String lang) throws ApiException {
        okhttp3.Call localVarCall = getAppConfigValidateBeforeCall(include, system, device, sub, segments, ff, lang, null);
        Type localVarReturnType = new TypeToken<AppConfig>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Get the global configuration for an application. Should be called during app statup.  This includes things like device and playback rules, classifications, sitemap and subscriptions.  You have the option to select specific configuration objects using the &#39;include&#39; parameter, or if unspecified, getting all configuration. 
     * @param include A comma delimited list of config objects to return. If none specified then all configuration is returned.  (optional)
     * @param system Classification system to load in case include &#x3D; classification.  (optional)
     * @param device The type of device the content is targeting. (optional, default to web_browser)
     * @param sub The active subscription code. (optional)
     * @param segments The list of segments to filter the response by. (optional)
     * @param ff The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - &#x60;all&#x60; - Enable all flags. Useful for testing. _Don&#39;t use in production_. - &#x60;idp&#x60; - Dynamic item detail pages with schedulable rows. - &#x60;ldp&#x60; - Dynamic list detail pages with schedulable rows. - &#x60;hb&#x60; - Hubble formatted image urls. - &#x60;rpt&#x60; - Updated resume point threshold logic. - &#x60;cas&#x60; - \&quot;Custom Asset Search\&quot;, inlcude &#x60;customAssets&#x60; in search results. - &#x60;lrl&#x60; - Do not pre-populate related list if more than &#x60;max_list_prefetch&#x60; down the page. - &#x60;cd&#x60; - Custom Destination support.  See the &#x60;feature-flags.md&#x60; for available flag details.  (optional)
     * @param lang Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to &#39;en&#39;, unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The list of available pages </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. </td><td>  -  </td></tr>
        <tr><td> 415 </td><td> Unsupported Media Type </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal server error. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Service error. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getAppConfigAsync(List<String> include, String system, String device, String sub, List<String> segments, List<String> ff, String lang, final ApiCallback<AppConfig> _callback) throws ApiException {

        okhttp3.Call localVarCall = getAppConfigValidateBeforeCall(include, system, device, sub, segments, ff, lang, _callback);
        Type localVarReturnType = new TypeToken<AppConfig>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getItvPage
     * @param path The path of the page to load, e.g. &#39;/movies&#39;. (required)
     * @param listPageSize The number of items to load when prefetching and paging each list in the page row. (optional, default to 12)
     * @param listPageSizeLarge The number of items to load when prefetching a continuous scroll list entry in a page.  By default any list page entry with template pattern &#x60;/^CS\\d+$/&#x60; will be considered a continuous scroll list.  (optional, default to 50)
     * @param maxListPrefetch The maximum number of lists to prefetch in the page. (optional, default to 2)
     * @param itemDetailExpand Only relevant when loading item detail pages as these embed a detailed item in the main page entry.  If no value is specified no item dependencies are expanded.  If &#39;children&#39; is specified then the list of any direct children will be expanded. For example seasons of a show or episodes of a season.  If &#39;all&#39; is specified then the parent chain will be expanded along with any child list at each level. For example if an episode is specified then its season will be expanded and that season&#39;s episode list. The season will have its show expanded and the show will have its season list expanded.  The &#39;all&#39; options is useful when you deep link into a show/season/episode for the first time as it provides full context for navigating around the show page. Subsequent navigation around children of the show should only need to request expand of children.  If &#39;ancestors&#39; is specified then only the parent chain is included  If an expand is specified which is not relevant to the item type, it will be ignored.  (optional)
     * @param itemDetailSelectSeason Only relevant when loading show detail pages as these embed a detailed item in the main page entry.  Since the introduction of the D1,2,3 templates this parameter is now somewhat redundant, or less likely to have any effect. While it may still be useful in some cases, most of the time the season selection will be dictated by the configuration of the rows scheduled on the show detail page. This parameter will only take effect if there are rows used to schedule episodes of a season, like D1,2,3, or if no rows have a value set for their &#x60;seasonOrder&#x60; custom field.  Given a targeted show page, it can be useful to get the details of a child season. This option provides a means to return the &#x60;first&#x60; or &#x60;latest&#x60; season of a show embedded in the page.  The &#x60;expand&#x60; parameter also works here so for example you could land on a show page and request the &#x60;item_detail_select_season&#x3D;latest&#x60; along with &#x60;item_detail_expand&#x3D;all&#x60;. This would then return the detail of the latest season with its list of child episode summaries, and also expand the detail of the show with its list of seasons summaries.  (optional)
     * @param textEntryFormat Only relevant to page entries of type &#x60;TextEntry&#x60;.  Converts the value of a text page entry to the specified format.  (optional, default to markdown)
     * @param maxRating The maximum rating (inclusive) of items returned, e.g. &#39;auoflc-pg&#39;. (optional)
     * @param device The type of device the content is targeting. (optional, default to web_browser)
     * @param sub The active subscription code. (optional)
     * @param segments The list of segments to filter the response by. (optional)
     * @param ff The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - &#x60;all&#x60; - Enable all flags. Useful for testing. _Don&#39;t use in production_. - &#x60;idp&#x60; - Dynamic item detail pages with schedulable rows. - &#x60;ldp&#x60; - Dynamic list detail pages with schedulable rows. - &#x60;hb&#x60; - Hubble formatted image urls. - &#x60;rpt&#x60; - Updated resume point threshold logic. - &#x60;cas&#x60; - \&quot;Custom Asset Search\&quot;, inlcude &#x60;customAssets&#x60; in search results. - &#x60;lrl&#x60; - Do not pre-populate related list if more than &#x60;max_list_prefetch&#x60; down the page. - &#x60;cd&#x60; - Custom Destination support.  See the &#x60;feature-flags.md&#x60; for available flag details.  (optional)
     * @param lang Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to &#39;en&#39;, unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The page requested. </td><td>  -  </td></tr>
        <tr><td> 301 </td><td> Returned if feature flag &#x60;cd&#x60; is set and item detail is requested of an item that has Custom Destination set to an External URL. The &#x60;Location&#x60; response header contains the URL.  </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. </td><td>  -  </td></tr>
        <tr><td> 415 </td><td> Unsupported Media Type </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal server error. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Service error. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getItvPageCall(String path, Integer listPageSize, Integer listPageSizeLarge, Integer maxListPrefetch, String itemDetailExpand, String itemDetailSelectSeason, String textEntryFormat, String maxRating, String device, String sub, List<String> segments, List<String> ff, String lang, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/itv/page";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (path != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("path", path));
        }

        if (listPageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("list_page_size", listPageSize));
        }

        if (listPageSizeLarge != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("list_page_size_large", listPageSizeLarge));
        }

        if (maxListPrefetch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_list_prefetch", maxListPrefetch));
        }

        if (itemDetailExpand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("item_detail_expand", itemDetailExpand));
        }

        if (itemDetailSelectSeason != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("item_detail_select_season", itemDetailSelectSeason));
        }

        if (textEntryFormat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("text_entry_format", textEntryFormat));
        }

        if (maxRating != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_rating", maxRating));
        }

        if (device != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("device", device));
        }

        if (sub != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sub", sub));
        }

        if (segments != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "segments", segments));
        }

        if (ff != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "ff", ff));
        }

        if (lang != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lang", lang));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getItvPageValidateBeforeCall(String path, Integer listPageSize, Integer listPageSizeLarge, Integer maxListPrefetch, String itemDetailExpand, String itemDetailSelectSeason, String textEntryFormat, String maxRating, String device, String sub, List<String> segments, List<String> ff, String lang, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'path' is set
        if (path == null) {
            throw new ApiException("Missing the required parameter 'path' when calling getItvPage(Async)");
        }

        return getItvPageCall(path, listPageSize, listPageSizeLarge, maxListPrefetch, itemDetailExpand, itemDetailSelectSeason, textEntryFormat, maxRating, device, sub, segments, ff, lang, _callback);

    }

    /**
     * 
     * Returns a page with the specified id.  This is a cut down version for low memory devices.123  If targeting the search page you must url encode the search term as a parameter using the &#x60;q&#x60; key. For example if your browser path looks like &#x60;/search?q&#x3D;the&#x60; then what you pass to this endpoint would look like &#x60;/itv/page?path&#x3D;/search%3Fq%3Dthe&#x60;. 
     * @param path The path of the page to load, e.g. &#39;/movies&#39;. (required)
     * @param listPageSize The number of items to load when prefetching and paging each list in the page row. (optional, default to 12)
     * @param listPageSizeLarge The number of items to load when prefetching a continuous scroll list entry in a page.  By default any list page entry with template pattern &#x60;/^CS\\d+$/&#x60; will be considered a continuous scroll list.  (optional, default to 50)
     * @param maxListPrefetch The maximum number of lists to prefetch in the page. (optional, default to 2)
     * @param itemDetailExpand Only relevant when loading item detail pages as these embed a detailed item in the main page entry.  If no value is specified no item dependencies are expanded.  If &#39;children&#39; is specified then the list of any direct children will be expanded. For example seasons of a show or episodes of a season.  If &#39;all&#39; is specified then the parent chain will be expanded along with any child list at each level. For example if an episode is specified then its season will be expanded and that season&#39;s episode list. The season will have its show expanded and the show will have its season list expanded.  The &#39;all&#39; options is useful when you deep link into a show/season/episode for the first time as it provides full context for navigating around the show page. Subsequent navigation around children of the show should only need to request expand of children.  If &#39;ancestors&#39; is specified then only the parent chain is included  If an expand is specified which is not relevant to the item type, it will be ignored.  (optional)
     * @param itemDetailSelectSeason Only relevant when loading show detail pages as these embed a detailed item in the main page entry.  Since the introduction of the D1,2,3 templates this parameter is now somewhat redundant, or less likely to have any effect. While it may still be useful in some cases, most of the time the season selection will be dictated by the configuration of the rows scheduled on the show detail page. This parameter will only take effect if there are rows used to schedule episodes of a season, like D1,2,3, or if no rows have a value set for their &#x60;seasonOrder&#x60; custom field.  Given a targeted show page, it can be useful to get the details of a child season. This option provides a means to return the &#x60;first&#x60; or &#x60;latest&#x60; season of a show embedded in the page.  The &#x60;expand&#x60; parameter also works here so for example you could land on a show page and request the &#x60;item_detail_select_season&#x3D;latest&#x60; along with &#x60;item_detail_expand&#x3D;all&#x60;. This would then return the detail of the latest season with its list of child episode summaries, and also expand the detail of the show with its list of seasons summaries.  (optional)
     * @param textEntryFormat Only relevant to page entries of type &#x60;TextEntry&#x60;.  Converts the value of a text page entry to the specified format.  (optional, default to markdown)
     * @param maxRating The maximum rating (inclusive) of items returned, e.g. &#39;auoflc-pg&#39;. (optional)
     * @param device The type of device the content is targeting. (optional, default to web_browser)
     * @param sub The active subscription code. (optional)
     * @param segments The list of segments to filter the response by. (optional)
     * @param ff The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - &#x60;all&#x60; - Enable all flags. Useful for testing. _Don&#39;t use in production_. - &#x60;idp&#x60; - Dynamic item detail pages with schedulable rows. - &#x60;ldp&#x60; - Dynamic list detail pages with schedulable rows. - &#x60;hb&#x60; - Hubble formatted image urls. - &#x60;rpt&#x60; - Updated resume point threshold logic. - &#x60;cas&#x60; - \&quot;Custom Asset Search\&quot;, inlcude &#x60;customAssets&#x60; in search results. - &#x60;lrl&#x60; - Do not pre-populate related list if more than &#x60;max_list_prefetch&#x60; down the page. - &#x60;cd&#x60; - Custom Destination support.  See the &#x60;feature-flags.md&#x60; for available flag details.  (optional)
     * @param lang Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to &#39;en&#39;, unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes  (optional)
     * @return Page
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The page requested. </td><td>  -  </td></tr>
        <tr><td> 301 </td><td> Returned if feature flag &#x60;cd&#x60; is set and item detail is requested of an item that has Custom Destination set to an External URL. The &#x60;Location&#x60; response header contains the URL.  </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. </td><td>  -  </td></tr>
        <tr><td> 415 </td><td> Unsupported Media Type </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal server error. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Service error. </td><td>  -  </td></tr>
     </table>
     */
    public Page getItvPage(String path, Integer listPageSize, Integer listPageSizeLarge, Integer maxListPrefetch, String itemDetailExpand, String itemDetailSelectSeason, String textEntryFormat, String maxRating, String device, String sub, List<String> segments, List<String> ff, String lang) throws ApiException {
        ApiResponse<Page> localVarResp = getItvPageWithHttpInfo(path, listPageSize, listPageSizeLarge, maxListPrefetch, itemDetailExpand, itemDetailSelectSeason, textEntryFormat, maxRating, device, sub, segments, ff, lang);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns a page with the specified id.  This is a cut down version for low memory devices.123  If targeting the search page you must url encode the search term as a parameter using the &#x60;q&#x60; key. For example if your browser path looks like &#x60;/search?q&#x3D;the&#x60; then what you pass to this endpoint would look like &#x60;/itv/page?path&#x3D;/search%3Fq%3Dthe&#x60;. 
     * @param path The path of the page to load, e.g. &#39;/movies&#39;. (required)
     * @param listPageSize The number of items to load when prefetching and paging each list in the page row. (optional, default to 12)
     * @param listPageSizeLarge The number of items to load when prefetching a continuous scroll list entry in a page.  By default any list page entry with template pattern &#x60;/^CS\\d+$/&#x60; will be considered a continuous scroll list.  (optional, default to 50)
     * @param maxListPrefetch The maximum number of lists to prefetch in the page. (optional, default to 2)
     * @param itemDetailExpand Only relevant when loading item detail pages as these embed a detailed item in the main page entry.  If no value is specified no item dependencies are expanded.  If &#39;children&#39; is specified then the list of any direct children will be expanded. For example seasons of a show or episodes of a season.  If &#39;all&#39; is specified then the parent chain will be expanded along with any child list at each level. For example if an episode is specified then its season will be expanded and that season&#39;s episode list. The season will have its show expanded and the show will have its season list expanded.  The &#39;all&#39; options is useful when you deep link into a show/season/episode for the first time as it provides full context for navigating around the show page. Subsequent navigation around children of the show should only need to request expand of children.  If &#39;ancestors&#39; is specified then only the parent chain is included  If an expand is specified which is not relevant to the item type, it will be ignored.  (optional)
     * @param itemDetailSelectSeason Only relevant when loading show detail pages as these embed a detailed item in the main page entry.  Since the introduction of the D1,2,3 templates this parameter is now somewhat redundant, or less likely to have any effect. While it may still be useful in some cases, most of the time the season selection will be dictated by the configuration of the rows scheduled on the show detail page. This parameter will only take effect if there are rows used to schedule episodes of a season, like D1,2,3, or if no rows have a value set for their &#x60;seasonOrder&#x60; custom field.  Given a targeted show page, it can be useful to get the details of a child season. This option provides a means to return the &#x60;first&#x60; or &#x60;latest&#x60; season of a show embedded in the page.  The &#x60;expand&#x60; parameter also works here so for example you could land on a show page and request the &#x60;item_detail_select_season&#x3D;latest&#x60; along with &#x60;item_detail_expand&#x3D;all&#x60;. This would then return the detail of the latest season with its list of child episode summaries, and also expand the detail of the show with its list of seasons summaries.  (optional)
     * @param textEntryFormat Only relevant to page entries of type &#x60;TextEntry&#x60;.  Converts the value of a text page entry to the specified format.  (optional, default to markdown)
     * @param maxRating The maximum rating (inclusive) of items returned, e.g. &#39;auoflc-pg&#39;. (optional)
     * @param device The type of device the content is targeting. (optional, default to web_browser)
     * @param sub The active subscription code. (optional)
     * @param segments The list of segments to filter the response by. (optional)
     * @param ff The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - &#x60;all&#x60; - Enable all flags. Useful for testing. _Don&#39;t use in production_. - &#x60;idp&#x60; - Dynamic item detail pages with schedulable rows. - &#x60;ldp&#x60; - Dynamic list detail pages with schedulable rows. - &#x60;hb&#x60; - Hubble formatted image urls. - &#x60;rpt&#x60; - Updated resume point threshold logic. - &#x60;cas&#x60; - \&quot;Custom Asset Search\&quot;, inlcude &#x60;customAssets&#x60; in search results. - &#x60;lrl&#x60; - Do not pre-populate related list if more than &#x60;max_list_prefetch&#x60; down the page. - &#x60;cd&#x60; - Custom Destination support.  See the &#x60;feature-flags.md&#x60; for available flag details.  (optional)
     * @param lang Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to &#39;en&#39;, unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes  (optional)
     * @return ApiResponse&lt;Page&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The page requested. </td><td>  -  </td></tr>
        <tr><td> 301 </td><td> Returned if feature flag &#x60;cd&#x60; is set and item detail is requested of an item that has Custom Destination set to an External URL. The &#x60;Location&#x60; response header contains the URL.  </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. </td><td>  -  </td></tr>
        <tr><td> 415 </td><td> Unsupported Media Type </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal server error. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Service error. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Page> getItvPageWithHttpInfo(String path, Integer listPageSize, Integer listPageSizeLarge, Integer maxListPrefetch, String itemDetailExpand, String itemDetailSelectSeason, String textEntryFormat, String maxRating, String device, String sub, List<String> segments, List<String> ff, String lang) throws ApiException {
        okhttp3.Call localVarCall = getItvPageValidateBeforeCall(path, listPageSize, listPageSizeLarge, maxListPrefetch, itemDetailExpand, itemDetailSelectSeason, textEntryFormat, maxRating, device, sub, segments, ff, lang, null);
        Type localVarReturnType = new TypeToken<Page>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns a page with the specified id.  This is a cut down version for low memory devices.123  If targeting the search page you must url encode the search term as a parameter using the &#x60;q&#x60; key. For example if your browser path looks like &#x60;/search?q&#x3D;the&#x60; then what you pass to this endpoint would look like &#x60;/itv/page?path&#x3D;/search%3Fq%3Dthe&#x60;. 
     * @param path The path of the page to load, e.g. &#39;/movies&#39;. (required)
     * @param listPageSize The number of items to load when prefetching and paging each list in the page row. (optional, default to 12)
     * @param listPageSizeLarge The number of items to load when prefetching a continuous scroll list entry in a page.  By default any list page entry with template pattern &#x60;/^CS\\d+$/&#x60; will be considered a continuous scroll list.  (optional, default to 50)
     * @param maxListPrefetch The maximum number of lists to prefetch in the page. (optional, default to 2)
     * @param itemDetailExpand Only relevant when loading item detail pages as these embed a detailed item in the main page entry.  If no value is specified no item dependencies are expanded.  If &#39;children&#39; is specified then the list of any direct children will be expanded. For example seasons of a show or episodes of a season.  If &#39;all&#39; is specified then the parent chain will be expanded along with any child list at each level. For example if an episode is specified then its season will be expanded and that season&#39;s episode list. The season will have its show expanded and the show will have its season list expanded.  The &#39;all&#39; options is useful when you deep link into a show/season/episode for the first time as it provides full context for navigating around the show page. Subsequent navigation around children of the show should only need to request expand of children.  If &#39;ancestors&#39; is specified then only the parent chain is included  If an expand is specified which is not relevant to the item type, it will be ignored.  (optional)
     * @param itemDetailSelectSeason Only relevant when loading show detail pages as these embed a detailed item in the main page entry.  Since the introduction of the D1,2,3 templates this parameter is now somewhat redundant, or less likely to have any effect. While it may still be useful in some cases, most of the time the season selection will be dictated by the configuration of the rows scheduled on the show detail page. This parameter will only take effect if there are rows used to schedule episodes of a season, like D1,2,3, or if no rows have a value set for their &#x60;seasonOrder&#x60; custom field.  Given a targeted show page, it can be useful to get the details of a child season. This option provides a means to return the &#x60;first&#x60; or &#x60;latest&#x60; season of a show embedded in the page.  The &#x60;expand&#x60; parameter also works here so for example you could land on a show page and request the &#x60;item_detail_select_season&#x3D;latest&#x60; along with &#x60;item_detail_expand&#x3D;all&#x60;. This would then return the detail of the latest season with its list of child episode summaries, and also expand the detail of the show with its list of seasons summaries.  (optional)
     * @param textEntryFormat Only relevant to page entries of type &#x60;TextEntry&#x60;.  Converts the value of a text page entry to the specified format.  (optional, default to markdown)
     * @param maxRating The maximum rating (inclusive) of items returned, e.g. &#39;auoflc-pg&#39;. (optional)
     * @param device The type of device the content is targeting. (optional, default to web_browser)
     * @param sub The active subscription code. (optional)
     * @param segments The list of segments to filter the response by. (optional)
     * @param ff The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - &#x60;all&#x60; - Enable all flags. Useful for testing. _Don&#39;t use in production_. - &#x60;idp&#x60; - Dynamic item detail pages with schedulable rows. - &#x60;ldp&#x60; - Dynamic list detail pages with schedulable rows. - &#x60;hb&#x60; - Hubble formatted image urls. - &#x60;rpt&#x60; - Updated resume point threshold logic. - &#x60;cas&#x60; - \&quot;Custom Asset Search\&quot;, inlcude &#x60;customAssets&#x60; in search results. - &#x60;lrl&#x60; - Do not pre-populate related list if more than &#x60;max_list_prefetch&#x60; down the page. - &#x60;cd&#x60; - Custom Destination support.  See the &#x60;feature-flags.md&#x60; for available flag details.  (optional)
     * @param lang Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to &#39;en&#39;, unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The page requested. </td><td>  -  </td></tr>
        <tr><td> 301 </td><td> Returned if feature flag &#x60;cd&#x60; is set and item detail is requested of an item that has Custom Destination set to an External URL. The &#x60;Location&#x60; response header contains the URL.  </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. </td><td>  -  </td></tr>
        <tr><td> 415 </td><td> Unsupported Media Type </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal server error. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Service error. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getItvPageAsync(String path, Integer listPageSize, Integer listPageSizeLarge, Integer maxListPrefetch, String itemDetailExpand, String itemDetailSelectSeason, String textEntryFormat, String maxRating, String device, String sub, List<String> segments, List<String> ff, String lang, final ApiCallback<Page> _callback) throws ApiException {

        okhttp3.Call localVarCall = getItvPageValidateBeforeCall(path, listPageSize, listPageSizeLarge, maxListPrefetch, itemDetailExpand, itemDetailSelectSeason, textEntryFormat, maxRating, device, sub, segments, ff, lang, _callback);
        Type localVarReturnType = new TypeToken<Page>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for getPage
     * @param path The path of the page to load, e.g. &#39;/movies&#39;. (required)
     * @param listPageSize The number of items to load when prefetching and paging each list in the page row. (optional, default to 12)
     * @param listPageSizeLarge The number of items to load when prefetching a continuous scroll list entry in a page.  By default any list page entry with template pattern &#x60;/^CS\\d+$/&#x60; will be considered a continuous scroll list.  (optional, default to 50)
     * @param maxListPrefetch The maximum number of lists to prefetch in the page. (optional, default to 2)
     * @param itemDetailExpand Only relevant when loading item detail pages as these embed a detailed item in the main page entry.  If no value is specified no item dependencies are expanded.  If &#39;children&#39; is specified then the list of any direct children will be expanded. For example seasons of a show or episodes of a season.  If &#39;all&#39; is specified then the parent chain will be expanded along with any child list at each level. For example if an episode is specified then its season will be expanded and that season&#39;s episode list. The season will have its show expanded and the show will have its season list expanded.  The &#39;all&#39; options is useful when you deep link into a show/season/episode for the first time as it provides full context for navigating around the show page. Subsequent navigation around children of the show should only need to request expand of children.  If &#39;ancestors&#39; is specified then only the parent chain is included  If an expand is specified which is not relevant to the item type, it will be ignored.  (optional)
     * @param itemDetailSelectSeason Only relevant when loading show detail pages as these embed a detailed item in the main page entry.  Since the introduction of the D1,2,3 templates this parameter is now somewhat redundant, or less likely to have any effect. While it may still be useful in some cases, most of the time the season selection will be dictated by the configuration of the rows scheduled on the show detail page. This parameter will only take effect if there are rows used to schedule episodes of a season, like D1,2,3, or if no rows have a value set for their &#x60;seasonOrder&#x60; custom field.  Given a targeted show page, it can be useful to get the details of a child season. This option provides a means to return the &#x60;first&#x60; or &#x60;latest&#x60; season of a show embedded in the page.  The &#x60;expand&#x60; parameter also works here so for example you could land on a show page and request the &#x60;item_detail_select_season&#x3D;latest&#x60; along with &#x60;item_detail_expand&#x3D;all&#x60;. This would then return the detail of the latest season with its list of child episode summaries, and also expand the detail of the show with its list of seasons summaries.  (optional)
     * @param textEntryFormat Only relevant to page entries of type &#x60;TextEntry&#x60;.  Converts the value of a text page entry to the specified format.  (optional, default to markdown)
     * @param maxRating The maximum rating (inclusive) of items returned, e.g. &#39;auoflc-pg&#39;. (optional)
     * @param device The type of device the content is targeting. (optional, default to web_browser)
     * @param sub The active subscription code. (optional)
     * @param segments The list of segments to filter the response by. (optional)
     * @param ff The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - &#x60;all&#x60; - Enable all flags. Useful for testing. _Don&#39;t use in production_. - &#x60;idp&#x60; - Dynamic item detail pages with schedulable rows. - &#x60;ldp&#x60; - Dynamic list detail pages with schedulable rows. - &#x60;hb&#x60; - Hubble formatted image urls. - &#x60;rpt&#x60; - Updated resume point threshold logic. - &#x60;cas&#x60; - \&quot;Custom Asset Search\&quot;, inlcude &#x60;customAssets&#x60; in search results. - &#x60;lrl&#x60; - Do not pre-populate related list if more than &#x60;max_list_prefetch&#x60; down the page. - &#x60;cd&#x60; - Custom Destination support.  See the &#x60;feature-flags.md&#x60; for available flag details.  (optional)
     * @param lang Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to &#39;en&#39;, unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The page requested. </td><td>  -  </td></tr>
        <tr><td> 301 </td><td> Returned if feature flag &#x60;cd&#x60; is set and item detail is requested of an item that has Custom Destination set to an External URL. The &#x60;Location&#x60; response header contains the URL.  </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. </td><td>  -  </td></tr>
        <tr><td> 415 </td><td> Unsupported Media Type </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal server error. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Service error. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getPageCall(String path, Integer listPageSize, Integer listPageSizeLarge, Integer maxListPrefetch, String itemDetailExpand, String itemDetailSelectSeason, String textEntryFormat, String maxRating, String device, String sub, List<String> segments, List<String> ff, String lang, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/page";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (path != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("path", path));
        }

        if (listPageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("list_page_size", listPageSize));
        }

        if (listPageSizeLarge != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("list_page_size_large", listPageSizeLarge));
        }

        if (maxListPrefetch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_list_prefetch", maxListPrefetch));
        }

        if (itemDetailExpand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("item_detail_expand", itemDetailExpand));
        }

        if (itemDetailSelectSeason != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("item_detail_select_season", itemDetailSelectSeason));
        }

        if (textEntryFormat != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("text_entry_format", textEntryFormat));
        }

        if (maxRating != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_rating", maxRating));
        }

        if (device != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("device", device));
        }

        if (sub != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sub", sub));
        }

        if (segments != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "segments", segments));
        }

        if (ff != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "ff", ff));
        }

        if (lang != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lang", lang));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getPageValidateBeforeCall(String path, Integer listPageSize, Integer listPageSizeLarge, Integer maxListPrefetch, String itemDetailExpand, String itemDetailSelectSeason, String textEntryFormat, String maxRating, String device, String sub, List<String> segments, List<String> ff, String lang, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'path' is set
        if (path == null) {
            throw new ApiException("Missing the required parameter 'path' when calling getPage(Async)");
        }

        return getPageCall(path, listPageSize, listPageSizeLarge, maxListPrefetch, itemDetailExpand, itemDetailSelectSeason, textEntryFormat, maxRating, device, sub, segments, ff, lang, _callback);

    }

    /**
     * 
     * Returns a page with the specified id.  If targeting the search page you must url encode the search term as a parameter using the &#x60;q&#x60; key. For example if your browser path looks like &#x60;/search?q&#x3D;the&#x60; then what you pass to this endpoint would look like &#x60;/page?path&#x3D;/search%3Fq%3Dthe&#x60;. 
     * @param path The path of the page to load, e.g. &#39;/movies&#39;. (required)
     * @param listPageSize The number of items to load when prefetching and paging each list in the page row. (optional, default to 12)
     * @param listPageSizeLarge The number of items to load when prefetching a continuous scroll list entry in a page.  By default any list page entry with template pattern &#x60;/^CS\\d+$/&#x60; will be considered a continuous scroll list.  (optional, default to 50)
     * @param maxListPrefetch The maximum number of lists to prefetch in the page. (optional, default to 2)
     * @param itemDetailExpand Only relevant when loading item detail pages as these embed a detailed item in the main page entry.  If no value is specified no item dependencies are expanded.  If &#39;children&#39; is specified then the list of any direct children will be expanded. For example seasons of a show or episodes of a season.  If &#39;all&#39; is specified then the parent chain will be expanded along with any child list at each level. For example if an episode is specified then its season will be expanded and that season&#39;s episode list. The season will have its show expanded and the show will have its season list expanded.  The &#39;all&#39; options is useful when you deep link into a show/season/episode for the first time as it provides full context for navigating around the show page. Subsequent navigation around children of the show should only need to request expand of children.  If &#39;ancestors&#39; is specified then only the parent chain is included  If an expand is specified which is not relevant to the item type, it will be ignored.  (optional)
     * @param itemDetailSelectSeason Only relevant when loading show detail pages as these embed a detailed item in the main page entry.  Since the introduction of the D1,2,3 templates this parameter is now somewhat redundant, or less likely to have any effect. While it may still be useful in some cases, most of the time the season selection will be dictated by the configuration of the rows scheduled on the show detail page. This parameter will only take effect if there are rows used to schedule episodes of a season, like D1,2,3, or if no rows have a value set for their &#x60;seasonOrder&#x60; custom field.  Given a targeted show page, it can be useful to get the details of a child season. This option provides a means to return the &#x60;first&#x60; or &#x60;latest&#x60; season of a show embedded in the page.  The &#x60;expand&#x60; parameter also works here so for example you could land on a show page and request the &#x60;item_detail_select_season&#x3D;latest&#x60; along with &#x60;item_detail_expand&#x3D;all&#x60;. This would then return the detail of the latest season with its list of child episode summaries, and also expand the detail of the show with its list of seasons summaries.  (optional)
     * @param textEntryFormat Only relevant to page entries of type &#x60;TextEntry&#x60;.  Converts the value of a text page entry to the specified format.  (optional, default to markdown)
     * @param maxRating The maximum rating (inclusive) of items returned, e.g. &#39;auoflc-pg&#39;. (optional)
     * @param device The type of device the content is targeting. (optional, default to web_browser)
     * @param sub The active subscription code. (optional)
     * @param segments The list of segments to filter the response by. (optional)
     * @param ff The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - &#x60;all&#x60; - Enable all flags. Useful for testing. _Don&#39;t use in production_. - &#x60;idp&#x60; - Dynamic item detail pages with schedulable rows. - &#x60;ldp&#x60; - Dynamic list detail pages with schedulable rows. - &#x60;hb&#x60; - Hubble formatted image urls. - &#x60;rpt&#x60; - Updated resume point threshold logic. - &#x60;cas&#x60; - \&quot;Custom Asset Search\&quot;, inlcude &#x60;customAssets&#x60; in search results. - &#x60;lrl&#x60; - Do not pre-populate related list if more than &#x60;max_list_prefetch&#x60; down the page. - &#x60;cd&#x60; - Custom Destination support.  See the &#x60;feature-flags.md&#x60; for available flag details.  (optional)
     * @param lang Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to &#39;en&#39;, unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes  (optional)
     * @return Page
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The page requested. </td><td>  -  </td></tr>
        <tr><td> 301 </td><td> Returned if feature flag &#x60;cd&#x60; is set and item detail is requested of an item that has Custom Destination set to an External URL. The &#x60;Location&#x60; response header contains the URL.  </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. </td><td>  -  </td></tr>
        <tr><td> 415 </td><td> Unsupported Media Type </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal server error. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Service error. </td><td>  -  </td></tr>
     </table>
     */
    public Page getPage(String path, Integer listPageSize, Integer listPageSizeLarge, Integer maxListPrefetch, String itemDetailExpand, String itemDetailSelectSeason, String textEntryFormat, String maxRating, String device, String sub, List<String> segments, List<String> ff, String lang) throws ApiException {
        ApiResponse<Page> localVarResp = getPageWithHttpInfo(path, listPageSize, listPageSizeLarge, maxListPrefetch, itemDetailExpand, itemDetailSelectSeason, textEntryFormat, maxRating, device, sub, segments, ff, lang);
        return localVarResp.getData();
    }

    /**
     * 
     * Returns a page with the specified id.  If targeting the search page you must url encode the search term as a parameter using the &#x60;q&#x60; key. For example if your browser path looks like &#x60;/search?q&#x3D;the&#x60; then what you pass to this endpoint would look like &#x60;/page?path&#x3D;/search%3Fq%3Dthe&#x60;. 
     * @param path The path of the page to load, e.g. &#39;/movies&#39;. (required)
     * @param listPageSize The number of items to load when prefetching and paging each list in the page row. (optional, default to 12)
     * @param listPageSizeLarge The number of items to load when prefetching a continuous scroll list entry in a page.  By default any list page entry with template pattern &#x60;/^CS\\d+$/&#x60; will be considered a continuous scroll list.  (optional, default to 50)
     * @param maxListPrefetch The maximum number of lists to prefetch in the page. (optional, default to 2)
     * @param itemDetailExpand Only relevant when loading item detail pages as these embed a detailed item in the main page entry.  If no value is specified no item dependencies are expanded.  If &#39;children&#39; is specified then the list of any direct children will be expanded. For example seasons of a show or episodes of a season.  If &#39;all&#39; is specified then the parent chain will be expanded along with any child list at each level. For example if an episode is specified then its season will be expanded and that season&#39;s episode list. The season will have its show expanded and the show will have its season list expanded.  The &#39;all&#39; options is useful when you deep link into a show/season/episode for the first time as it provides full context for navigating around the show page. Subsequent navigation around children of the show should only need to request expand of children.  If &#39;ancestors&#39; is specified then only the parent chain is included  If an expand is specified which is not relevant to the item type, it will be ignored.  (optional)
     * @param itemDetailSelectSeason Only relevant when loading show detail pages as these embed a detailed item in the main page entry.  Since the introduction of the D1,2,3 templates this parameter is now somewhat redundant, or less likely to have any effect. While it may still be useful in some cases, most of the time the season selection will be dictated by the configuration of the rows scheduled on the show detail page. This parameter will only take effect if there are rows used to schedule episodes of a season, like D1,2,3, or if no rows have a value set for their &#x60;seasonOrder&#x60; custom field.  Given a targeted show page, it can be useful to get the details of a child season. This option provides a means to return the &#x60;first&#x60; or &#x60;latest&#x60; season of a show embedded in the page.  The &#x60;expand&#x60; parameter also works here so for example you could land on a show page and request the &#x60;item_detail_select_season&#x3D;latest&#x60; along with &#x60;item_detail_expand&#x3D;all&#x60;. This would then return the detail of the latest season with its list of child episode summaries, and also expand the detail of the show with its list of seasons summaries.  (optional)
     * @param textEntryFormat Only relevant to page entries of type &#x60;TextEntry&#x60;.  Converts the value of a text page entry to the specified format.  (optional, default to markdown)
     * @param maxRating The maximum rating (inclusive) of items returned, e.g. &#39;auoflc-pg&#39;. (optional)
     * @param device The type of device the content is targeting. (optional, default to web_browser)
     * @param sub The active subscription code. (optional)
     * @param segments The list of segments to filter the response by. (optional)
     * @param ff The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - &#x60;all&#x60; - Enable all flags. Useful for testing. _Don&#39;t use in production_. - &#x60;idp&#x60; - Dynamic item detail pages with schedulable rows. - &#x60;ldp&#x60; - Dynamic list detail pages with schedulable rows. - &#x60;hb&#x60; - Hubble formatted image urls. - &#x60;rpt&#x60; - Updated resume point threshold logic. - &#x60;cas&#x60; - \&quot;Custom Asset Search\&quot;, inlcude &#x60;customAssets&#x60; in search results. - &#x60;lrl&#x60; - Do not pre-populate related list if more than &#x60;max_list_prefetch&#x60; down the page. - &#x60;cd&#x60; - Custom Destination support.  See the &#x60;feature-flags.md&#x60; for available flag details.  (optional)
     * @param lang Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to &#39;en&#39;, unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes  (optional)
     * @return ApiResponse&lt;Page&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The page requested. </td><td>  -  </td></tr>
        <tr><td> 301 </td><td> Returned if feature flag &#x60;cd&#x60; is set and item detail is requested of an item that has Custom Destination set to an External URL. The &#x60;Location&#x60; response header contains the URL.  </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. </td><td>  -  </td></tr>
        <tr><td> 415 </td><td> Unsupported Media Type </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal server error. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Service error. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Page> getPageWithHttpInfo(String path, Integer listPageSize, Integer listPageSizeLarge, Integer maxListPrefetch, String itemDetailExpand, String itemDetailSelectSeason, String textEntryFormat, String maxRating, String device, String sub, List<String> segments, List<String> ff, String lang) throws ApiException {
        okhttp3.Call localVarCall = getPageValidateBeforeCall(path, listPageSize, listPageSizeLarge, maxListPrefetch, itemDetailExpand, itemDetailSelectSeason, textEntryFormat, maxRating, device, sub, segments, ff, lang, null);
        Type localVarReturnType = new TypeToken<Page>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Returns a page with the specified id.  If targeting the search page you must url encode the search term as a parameter using the &#x60;q&#x60; key. For example if your browser path looks like &#x60;/search?q&#x3D;the&#x60; then what you pass to this endpoint would look like &#x60;/page?path&#x3D;/search%3Fq%3Dthe&#x60;. 
     * @param path The path of the page to load, e.g. &#39;/movies&#39;. (required)
     * @param listPageSize The number of items to load when prefetching and paging each list in the page row. (optional, default to 12)
     * @param listPageSizeLarge The number of items to load when prefetching a continuous scroll list entry in a page.  By default any list page entry with template pattern &#x60;/^CS\\d+$/&#x60; will be considered a continuous scroll list.  (optional, default to 50)
     * @param maxListPrefetch The maximum number of lists to prefetch in the page. (optional, default to 2)
     * @param itemDetailExpand Only relevant when loading item detail pages as these embed a detailed item in the main page entry.  If no value is specified no item dependencies are expanded.  If &#39;children&#39; is specified then the list of any direct children will be expanded. For example seasons of a show or episodes of a season.  If &#39;all&#39; is specified then the parent chain will be expanded along with any child list at each level. For example if an episode is specified then its season will be expanded and that season&#39;s episode list. The season will have its show expanded and the show will have its season list expanded.  The &#39;all&#39; options is useful when you deep link into a show/season/episode for the first time as it provides full context for navigating around the show page. Subsequent navigation around children of the show should only need to request expand of children.  If &#39;ancestors&#39; is specified then only the parent chain is included  If an expand is specified which is not relevant to the item type, it will be ignored.  (optional)
     * @param itemDetailSelectSeason Only relevant when loading show detail pages as these embed a detailed item in the main page entry.  Since the introduction of the D1,2,3 templates this parameter is now somewhat redundant, or less likely to have any effect. While it may still be useful in some cases, most of the time the season selection will be dictated by the configuration of the rows scheduled on the show detail page. This parameter will only take effect if there are rows used to schedule episodes of a season, like D1,2,3, or if no rows have a value set for their &#x60;seasonOrder&#x60; custom field.  Given a targeted show page, it can be useful to get the details of a child season. This option provides a means to return the &#x60;first&#x60; or &#x60;latest&#x60; season of a show embedded in the page.  The &#x60;expand&#x60; parameter also works here so for example you could land on a show page and request the &#x60;item_detail_select_season&#x3D;latest&#x60; along with &#x60;item_detail_expand&#x3D;all&#x60;. This would then return the detail of the latest season with its list of child episode summaries, and also expand the detail of the show with its list of seasons summaries.  (optional)
     * @param textEntryFormat Only relevant to page entries of type &#x60;TextEntry&#x60;.  Converts the value of a text page entry to the specified format.  (optional, default to markdown)
     * @param maxRating The maximum rating (inclusive) of items returned, e.g. &#39;auoflc-pg&#39;. (optional)
     * @param device The type of device the content is targeting. (optional, default to web_browser)
     * @param sub The active subscription code. (optional)
     * @param segments The list of segments to filter the response by. (optional)
     * @param ff The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - &#x60;all&#x60; - Enable all flags. Useful for testing. _Don&#39;t use in production_. - &#x60;idp&#x60; - Dynamic item detail pages with schedulable rows. - &#x60;ldp&#x60; - Dynamic list detail pages with schedulable rows. - &#x60;hb&#x60; - Hubble formatted image urls. - &#x60;rpt&#x60; - Updated resume point threshold logic. - &#x60;cas&#x60; - \&quot;Custom Asset Search\&quot;, inlcude &#x60;customAssets&#x60; in search results. - &#x60;lrl&#x60; - Do not pre-populate related list if more than &#x60;max_list_prefetch&#x60; down the page. - &#x60;cd&#x60; - Custom Destination support.  See the &#x60;feature-flags.md&#x60; for available flag details.  (optional)
     * @param lang Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to &#39;en&#39;, unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> The page requested. </td><td>  -  </td></tr>
        <tr><td> 301 </td><td> Returned if feature flag &#x60;cd&#x60; is set and item detail is requested of an item that has Custom Destination set to an External URL. The &#x60;Location&#x60; response header contains the URL.  </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request. </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> Not found. </td><td>  -  </td></tr>
        <tr><td> 415 </td><td> Unsupported Media Type </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> Internal server error. </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> Service error. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call getPageAsync(String path, Integer listPageSize, Integer listPageSizeLarge, Integer maxListPrefetch, String itemDetailExpand, String itemDetailSelectSeason, String textEntryFormat, String maxRating, String device, String sub, List<String> segments, List<String> ff, String lang, final ApiCallback<Page> _callback) throws ApiException {

        okhttp3.Call localVarCall = getPageValidateBeforeCall(path, listPageSize, listPageSizeLarge, maxListPrefetch, itemDetailExpand, itemDetailSelectSeason, textEntryFormat, maxRating, device, sub, segments, ff, lang, _callback);
        Type localVarReturnType = new TypeToken<Page>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
