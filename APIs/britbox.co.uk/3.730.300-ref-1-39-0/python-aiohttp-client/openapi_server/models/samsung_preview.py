# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.samsung_preview_section import SamsungPreviewSection
from openapi_server import util


class SamsungPreview(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, expires: int=None, expires_only: bool=False, sections: List[SamsungPreviewSection]=None):
        """SamsungPreview - a model defined in OpenAPI

        :param expires: The expires of this SamsungPreview.
        :param expires_only: The expires_only of this SamsungPreview.
        :param sections: The sections of this SamsungPreview.
        """
        self.openapi_types = {
            'expires': int,
            'expires_only': bool,
            'sections': List[SamsungPreviewSection]
        }

        self.attribute_map = {
            'expires': 'expires',
            'expires_only': 'expires_only',
            'sections': 'sections'
        }

        self._expires = expires
        self._expires_only = expires_only
        self._sections = sections

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SamsungPreview':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SamsungPreview of this SamsungPreview.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def expires(self):
        """Gets the expires of this SamsungPreview.

        For public preview only If specified, the time at which the preview content is updated. The time is at most 1 week into the future. By default, the preview content is updated every 10 minutes, whenever the TV is switched on, or the JSON file changes. 

        :return: The expires of this SamsungPreview.
        :rtype: int
        """
        return self._expires

    @expires.setter
    def expires(self, expires):
        """Sets the expires of this SamsungPreview.

        For public preview only If specified, the time at which the preview content is updated. The time is at most 1 week into the future. By default, the preview content is updated every 10 minutes, whenever the TV is switched on, or the JSON file changes. 

        :param expires: The expires of this SamsungPreview.
        :type expires: int
        """

        self._expires = expires

    @property
    def expires_only(self):
        """Gets the expires_only of this SamsungPreview.

        For public preview only If this value is \"true\", the preview content is updated only at the time specified by the \"expires\" parameter. 

        :return: The expires_only of this SamsungPreview.
        :rtype: bool
        """
        return self._expires_only

    @expires_only.setter
    def expires_only(self, expires_only):
        """Sets the expires_only of this SamsungPreview.

        For public preview only If this value is \"true\", the preview content is updated only at the time specified by the \"expires\" parameter. 

        :param expires_only: The expires_only of this SamsungPreview.
        :type expires_only: bool
        """

        self._expires_only = expires_only

    @property
    def sections(self):
        """Gets the sections of this SamsungPreview.

        Preview sections

        :return: The sections of this SamsungPreview.
        :rtype: List[SamsungPreviewSection]
        """
        return self._sections

    @sections.setter
    def sections(self, sections):
        """Sets the sections of this SamsungPreview.

        Preview sections

        :param sections: The sections of this SamsungPreview.
        :type sections: List[SamsungPreviewSection]
        """
        if sections is None:
            raise ValueError("Invalid value for `sections`, must not be `None`")

        self._sections = sections
