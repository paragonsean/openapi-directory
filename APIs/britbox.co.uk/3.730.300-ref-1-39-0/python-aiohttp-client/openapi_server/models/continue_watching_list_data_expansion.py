# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.item_summary import ItemSummary
from openapi_server import util


class ContinueWatchingListDataExpansion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, episode: ItemSummary=None, season: ItemSummary=None, show: ItemSummary=None):
        """ContinueWatchingListDataExpansion - a model defined in OpenAPI

        :param episode: The episode of this ContinueWatchingListDataExpansion.
        :param season: The season of this ContinueWatchingListDataExpansion.
        :param show: The show of this ContinueWatchingListDataExpansion.
        """
        self.openapi_types = {
            'episode': ItemSummary,
            'season': ItemSummary,
            'show': ItemSummary
        }

        self.attribute_map = {
            'episode': 'episode',
            'season': 'season',
            'show': 'show'
        }

        self._episode = episode
        self._season = season
        self._show = show

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContinueWatchingListDataExpansion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContinueWatchingListDataExpansion of this ContinueWatchingListDataExpansion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def episode(self):
        """Gets the episode of this ContinueWatchingListDataExpansion.


        :return: The episode of this ContinueWatchingListDataExpansion.
        :rtype: ItemSummary
        """
        return self._episode

    @episode.setter
    def episode(self, episode):
        """Sets the episode of this ContinueWatchingListDataExpansion.


        :param episode: The episode of this ContinueWatchingListDataExpansion.
        :type episode: ItemSummary
        """

        self._episode = episode

    @property
    def season(self):
        """Gets the season of this ContinueWatchingListDataExpansion.


        :return: The season of this ContinueWatchingListDataExpansion.
        :rtype: ItemSummary
        """
        return self._season

    @season.setter
    def season(self, season):
        """Sets the season of this ContinueWatchingListDataExpansion.


        :param season: The season of this ContinueWatchingListDataExpansion.
        :type season: ItemSummary
        """

        self._season = season

    @property
    def show(self):
        """Gets the show of this ContinueWatchingListDataExpansion.


        :return: The show of this ContinueWatchingListDataExpansion.
        :rtype: ItemSummary
        """
        return self._show

    @show.setter
    def show(self, show):
        """Sets the show of this ContinueWatchingListDataExpansion.


        :param show: The show of this ContinueWatchingListDataExpansion.
        :type show: ItemSummary
        """

        self._show = show
