# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ItvVoucherRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, voucher: str=None):
        """ItvVoucherRequest - a model defined in OpenAPI

        :param voucher: The voucher of this ItvVoucherRequest.
        """
        self.openapi_types = {
            'voucher': str
        }

        self.attribute_map = {
            'voucher': 'voucher'
        }

        self._voucher = voucher

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ItvVoucherRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ItvVoucherRequest of this ItvVoucherRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def voucher(self):
        """Gets the voucher of this ItvVoucherRequest.

        The voucher.

        :return: The voucher of this ItvVoucherRequest.
        :rtype: str
        """
        return self._voucher

    @voucher.setter
    def voucher(self, voucher):
        """Sets the voucher of this ItvVoucherRequest.

        The voucher.

        :param voucher: The voucher of this ItvVoucherRequest.
        :type voucher: str
        """
        if voucher is None:
            raise ValueError("Invalid value for `voucher`, must not be `None`")

        self._voucher = voucher
