# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PageMetadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, keywords: List[str]=None, segments: List[str]=None):
        """PageMetadata - a model defined in OpenAPI

        :param description: The description of this PageMetadata.
        :param keywords: The keywords of this PageMetadata.
        :param segments: The segments of this PageMetadata.
        """
        self.openapi_types = {
            'description': str,
            'keywords': List[str],
            'segments': List[str]
        }

        self.attribute_map = {
            'description': 'description',
            'keywords': 'keywords',
            'segments': 'segments'
        }

        self._description = description
        self._keywords = keywords
        self._segments = segments

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PageMetadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PageMetadata of this PageMetadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this PageMetadata.


        :return: The description of this PageMetadata.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this PageMetadata.


        :param description: The description of this PageMetadata.
        :type description: str
        """

        self._description = description

    @property
    def keywords(self):
        """Gets the keywords of this PageMetadata.


        :return: The keywords of this PageMetadata.
        :rtype: List[str]
        """
        return self._keywords

    @keywords.setter
    def keywords(self, keywords):
        """Sets the keywords of this PageMetadata.


        :param keywords: The keywords of this PageMetadata.
        :type keywords: List[str]
        """

        self._keywords = keywords

    @property
    def segments(self):
        """Gets the segments of this PageMetadata.


        :return: The segments of this PageMetadata.
        :rtype: List[str]
        """
        return self._segments

    @segments.setter
    def segments(self, segments):
        """Sets the segments of this PageMetadata.


        :param segments: The segments of this PageMetadata.
        :type segments: List[str]
        """

        self._segments = segments
