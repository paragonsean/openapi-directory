# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.itv_billing_history_record import ItvBillingHistoryRecord
from openapi_server import util


class ItvBillingHistory(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, payment_history: List[ItvBillingHistoryRecord]=None):
        """ItvBillingHistory - a model defined in OpenAPI

        :param payment_history: The payment_history of this ItvBillingHistory.
        """
        self.openapi_types = {
            'payment_history': List[ItvBillingHistoryRecord]
        }

        self.attribute_map = {
            'payment_history': 'payment_history'
        }

        self._payment_history = payment_history

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ItvBillingHistory':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ItvBillingHistory of this ItvBillingHistory.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def payment_history(self):
        """Gets the payment_history of this ItvBillingHistory.

        The array of objects with subscription payment details.

        :return: The payment_history of this ItvBillingHistory.
        :rtype: List[ItvBillingHistoryRecord]
        """
        return self._payment_history

    @payment_history.setter
    def payment_history(self, payment_history):
        """Sets the payment_history of this ItvBillingHistory.

        The array of objects with subscription payment details.

        :param payment_history: The payment_history of this ItvBillingHistory.
        :type payment_history: List[ItvBillingHistoryRecord]
        """
        if payment_history is None:
            raise ValueError("Invalid value for `payment_history`, must not be `None`")

        self._payment_history = payment_history
