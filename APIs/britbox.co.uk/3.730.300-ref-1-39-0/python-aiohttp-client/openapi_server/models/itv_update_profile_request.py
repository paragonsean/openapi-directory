# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ItvUpdateProfileRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, date_of_birth: str=None, email: str=None, first_name: str=None, last_name: str=None, postcode: str=None, profile_token: str=None, title: str=None):
        """ItvUpdateProfileRequest - a model defined in OpenAPI

        :param date_of_birth: The date_of_birth of this ItvUpdateProfileRequest.
        :param email: The email of this ItvUpdateProfileRequest.
        :param first_name: The first_name of this ItvUpdateProfileRequest.
        :param last_name: The last_name of this ItvUpdateProfileRequest.
        :param postcode: The postcode of this ItvUpdateProfileRequest.
        :param profile_token: The profile_token of this ItvUpdateProfileRequest.
        :param title: The title of this ItvUpdateProfileRequest.
        """
        self.openapi_types = {
            'date_of_birth': str,
            'email': str,
            'first_name': str,
            'last_name': str,
            'postcode': str,
            'profile_token': str,
            'title': str
        }

        self.attribute_map = {
            'date_of_birth': 'dateOfBirth',
            'email': 'email',
            'first_name': 'firstName',
            'last_name': 'lastName',
            'postcode': 'postcode',
            'profile_token': 'profileToken',
            'title': 'title'
        }

        self._date_of_birth = date_of_birth
        self._email = email
        self._first_name = first_name
        self._last_name = last_name
        self._postcode = postcode
        self._profile_token = profile_token
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ItvUpdateProfileRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ItvUpdateProfileRequest of this ItvUpdateProfileRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def date_of_birth(self):
        """Gets the date_of_birth of this ItvUpdateProfileRequest.

        The date of birth.

        :return: The date_of_birth of this ItvUpdateProfileRequest.
        :rtype: str
        """
        return self._date_of_birth

    @date_of_birth.setter
    def date_of_birth(self, date_of_birth):
        """Sets the date_of_birth of this ItvUpdateProfileRequest.

        The date of birth.

        :param date_of_birth: The date_of_birth of this ItvUpdateProfileRequest.
        :type date_of_birth: str
        """

        self._date_of_birth = date_of_birth

    @property
    def email(self):
        """Gets the email of this ItvUpdateProfileRequest.

        The email address.

        :return: The email of this ItvUpdateProfileRequest.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ItvUpdateProfileRequest.

        The email address.

        :param email: The email of this ItvUpdateProfileRequest.
        :type email: str
        """

        self._email = email

    @property
    def first_name(self):
        """Gets the first_name of this ItvUpdateProfileRequest.

        Last name.

        :return: The first_name of this ItvUpdateProfileRequest.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this ItvUpdateProfileRequest.

        Last name.

        :param first_name: The first_name of this ItvUpdateProfileRequest.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this ItvUpdateProfileRequest.

        First name.

        :return: The last_name of this ItvUpdateProfileRequest.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this ItvUpdateProfileRequest.

        First name.

        :param last_name: The last_name of this ItvUpdateProfileRequest.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def postcode(self):
        """Gets the postcode of this ItvUpdateProfileRequest.

        The postal code.

        :return: The postcode of this ItvUpdateProfileRequest.
        :rtype: str
        """
        return self._postcode

    @postcode.setter
    def postcode(self, postcode):
        """Sets the postcode of this ItvUpdateProfileRequest.

        The postal code.

        :param postcode: The postcode of this ItvUpdateProfileRequest.
        :type postcode: str
        """

        self._postcode = postcode

    @property
    def profile_token(self):
        """Gets the profile_token of this ItvUpdateProfileRequest.

        The ITV profile token.

        :return: The profile_token of this ItvUpdateProfileRequest.
        :rtype: str
        """
        return self._profile_token

    @profile_token.setter
    def profile_token(self, profile_token):
        """Sets the profile_token of this ItvUpdateProfileRequest.

        The ITV profile token.

        :param profile_token: The profile_token of this ItvUpdateProfileRequest.
        :type profile_token: str
        """
        if profile_token is None:
            raise ValueError("Invalid value for `profile_token`, must not be `None`")

        self._profile_token = profile_token

    @property
    def title(self):
        """Gets the title of this ItvUpdateProfileRequest.

        The title.

        :return: The title of this ItvUpdateProfileRequest.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ItvUpdateProfileRequest.

        The title.

        :param title: The title of this ItvUpdateProfileRequest.
        :type title: str
        """

        self._title = title
