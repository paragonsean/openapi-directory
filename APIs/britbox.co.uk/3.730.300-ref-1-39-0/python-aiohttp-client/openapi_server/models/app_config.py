# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_config_display import AppConfigDisplay
from openapi_server.models.app_config_general import AppConfigGeneral
from openapi_server.models.app_config_i18n import AppConfigI18n
from openapi_server.models.app_config_linear import AppConfigLinear
from openapi_server.models.app_config_playback import AppConfigPlayback
from openapi_server.models.app_config_subscription import AppConfigSubscription
from openapi_server.models.classification import Classification
from openapi_server.models.navigation import Navigation
from openapi_server.models.page_summary import PageSummary
from openapi_server import util


class AppConfig(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, classification: Dict[str, Classification]=None, display: AppConfigDisplay=None, general: AppConfigGeneral=None, i18n: AppConfigI18n=None, linear: AppConfigLinear=None, navigation: Navigation=None, playback: AppConfigPlayback=None, sitemap: List[PageSummary]=None, subscription: AppConfigSubscription=None):
        """AppConfig - a model defined in OpenAPI

        :param classification: The classification of this AppConfig.
        :param display: The display of this AppConfig.
        :param general: The general of this AppConfig.
        :param i18n: The i18n of this AppConfig.
        :param linear: The linear of this AppConfig.
        :param navigation: The navigation of this AppConfig.
        :param playback: The playback of this AppConfig.
        :param sitemap: The sitemap of this AppConfig.
        :param subscription: The subscription of this AppConfig.
        """
        self.openapi_types = {
            'classification': Dict[str, Classification],
            'display': AppConfigDisplay,
            'general': AppConfigGeneral,
            'i18n': AppConfigI18n,
            'linear': AppConfigLinear,
            'navigation': Navigation,
            'playback': AppConfigPlayback,
            'sitemap': List[PageSummary],
            'subscription': AppConfigSubscription
        }

        self.attribute_map = {
            'classification': 'classification',
            'display': 'display',
            'general': 'general',
            'i18n': 'i18n',
            'linear': 'linear',
            'navigation': 'navigation',
            'playback': 'playback',
            'sitemap': 'sitemap',
            'subscription': 'subscription'
        }

        self._classification = classification
        self._display = display
        self._general = general
        self._i18n = i18n
        self._linear = linear
        self._navigation = navigation
        self._playback = playback
        self._sitemap = sitemap
        self._subscription = subscription

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppConfig':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppConfig of this AppConfig.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def classification(self):
        """Gets the classification of this AppConfig.

        The map of classification ratings.

        :return: The classification of this AppConfig.
        :rtype: Dict[str, Classification]
        """
        return self._classification

    @classification.setter
    def classification(self, classification):
        """Sets the classification of this AppConfig.

        The map of classification ratings.

        :param classification: The classification of this AppConfig.
        :type classification: Dict[str, Classification]
        """

        self._classification = classification

    @property
    def display(self):
        """Gets the display of this AppConfig.


        :return: The display of this AppConfig.
        :rtype: AppConfigDisplay
        """
        return self._display

    @display.setter
    def display(self, display):
        """Sets the display of this AppConfig.


        :param display: The display of this AppConfig.
        :type display: AppConfigDisplay
        """

        self._display = display

    @property
    def general(self):
        """Gets the general of this AppConfig.


        :return: The general of this AppConfig.
        :rtype: AppConfigGeneral
        """
        return self._general

    @general.setter
    def general(self, general):
        """Sets the general of this AppConfig.


        :param general: The general of this AppConfig.
        :type general: AppConfigGeneral
        """

        self._general = general

    @property
    def i18n(self):
        """Gets the i18n of this AppConfig.


        :return: The i18n of this AppConfig.
        :rtype: AppConfigI18n
        """
        return self._i18n

    @i18n.setter
    def i18n(self, i18n):
        """Sets the i18n of this AppConfig.


        :param i18n: The i18n of this AppConfig.
        :type i18n: AppConfigI18n
        """

        self._i18n = i18n

    @property
    def linear(self):
        """Gets the linear of this AppConfig.


        :return: The linear of this AppConfig.
        :rtype: AppConfigLinear
        """
        return self._linear

    @linear.setter
    def linear(self, linear):
        """Sets the linear of this AppConfig.


        :param linear: The linear of this AppConfig.
        :type linear: AppConfigLinear
        """

        self._linear = linear

    @property
    def navigation(self):
        """Gets the navigation of this AppConfig.


        :return: The navigation of this AppConfig.
        :rtype: Navigation
        """
        return self._navigation

    @navigation.setter
    def navigation(self, navigation):
        """Sets the navigation of this AppConfig.


        :param navigation: The navigation of this AppConfig.
        :type navigation: Navigation
        """

        self._navigation = navigation

    @property
    def playback(self):
        """Gets the playback of this AppConfig.


        :return: The playback of this AppConfig.
        :rtype: AppConfigPlayback
        """
        return self._playback

    @playback.setter
    def playback(self, playback):
        """Sets the playback of this AppConfig.


        :param playback: The playback of this AppConfig.
        :type playback: AppConfigPlayback
        """

        self._playback = playback

    @property
    def sitemap(self):
        """Gets the sitemap of this AppConfig.


        :return: The sitemap of this AppConfig.
        :rtype: List[PageSummary]
        """
        return self._sitemap

    @sitemap.setter
    def sitemap(self, sitemap):
        """Sets the sitemap of this AppConfig.


        :param sitemap: The sitemap of this AppConfig.
        :type sitemap: List[PageSummary]
        """

        self._sitemap = sitemap

    @property
    def subscription(self):
        """Gets the subscription of this AppConfig.


        :return: The subscription of this AppConfig.
        :rtype: AppConfigSubscription
        """
        return self._subscription

    @subscription.setter
    def subscription(self, subscription):
        """Sets the subscription of this AppConfig.


        :param subscription: The subscription of this AppConfig.
        :type subscription: AppConfigSubscription
        """

        self._subscription = subscription
