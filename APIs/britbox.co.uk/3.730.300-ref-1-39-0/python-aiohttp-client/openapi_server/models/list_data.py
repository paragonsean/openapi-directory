# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.continue_watching_list_data import ContinueWatchingListData
from openapi_server import util


class ListData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, continue_watching: ContinueWatchingListData=None):
        """ListData - a model defined in OpenAPI

        :param continue_watching: The continue_watching of this ListData.
        """
        self.openapi_types = {
            'continue_watching': ContinueWatchingListData
        }

        self.attribute_map = {
            'continue_watching': 'ContinueWatching'
        }

        self._continue_watching = continue_watching

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ListData of this ListData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def continue_watching(self):
        """Gets the continue_watching of this ListData.


        :return: The continue_watching of this ListData.
        :rtype: ContinueWatchingListData
        """
        return self._continue_watching

    @continue_watching.setter
    def continue_watching(self, continue_watching):
        """Sets the continue_watching of this ListData.


        :param continue_watching: The continue_watching of this ListData.
        :type continue_watching: ContinueWatchingListData
        """

        self._continue_watching = continue_watching
