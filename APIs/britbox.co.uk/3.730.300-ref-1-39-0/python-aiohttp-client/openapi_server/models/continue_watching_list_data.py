# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.continue_watching_list_data_expansion import ContinueWatchingListDataExpansion
from openapi_server import util


class ContinueWatchingListData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, item_inclusions: Dict[str, ContinueWatchingListDataExpansion]=None):
        """ContinueWatchingListData - a model defined in OpenAPI

        :param item_inclusions: The item_inclusions of this ContinueWatchingListData.
        """
        self.openapi_types = {
            'item_inclusions': Dict[str, ContinueWatchingListDataExpansion]
        }

        self.attribute_map = {
            'item_inclusions': 'itemInclusions'
        }

        self._item_inclusions = item_inclusions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContinueWatchingListData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContinueWatchingListData of this ContinueWatchingListData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def item_inclusions(self):
        """Gets the item_inclusions of this ContinueWatchingListData.

        Object where keys are itemIds for the items in the list and values are objects containing additional items (either episode/season/show) that were requested in the \"include\" query option.  For example if you request the ContinueWatching list with \"season\" items in the list, you can specify `include=episode` and then the specific next episode will be returned in this object. 

        :return: The item_inclusions of this ContinueWatchingListData.
        :rtype: Dict[str, ContinueWatchingListDataExpansion]
        """
        return self._item_inclusions

    @item_inclusions.setter
    def item_inclusions(self, item_inclusions):
        """Sets the item_inclusions of this ContinueWatchingListData.

        Object where keys are itemIds for the items in the list and values are objects containing additional items (either episode/season/show) that were requested in the \"include\" query option.  For example if you request the ContinueWatching list with \"season\" items in the list, you can specify `include=episode` and then the specific next episode will be returned in this object. 

        :param item_inclusions: The item_inclusions of this ContinueWatchingListData.
        :type item_inclusions: Dict[str, ContinueWatchingListDataExpansion]
        """

        self._item_inclusions = item_inclusions
