# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.samsung_preview_section_tile import SamsungPreviewSectionTile
from openapi_server import util


class SamsungPreviewSection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, position: int=None, tiles: List[SamsungPreviewSectionTile]=None, title: str=None):
        """SamsungPreviewSection - a model defined in OpenAPI

        :param position: The position of this SamsungPreviewSection.
        :param tiles: The tiles of this SamsungPreviewSection.
        :param title: The title of this SamsungPreviewSection.
        """
        self.openapi_types = {
            'position': int,
            'tiles': List[SamsungPreviewSectionTile],
            'title': str
        }

        self.attribute_map = {
            'position': 'position',
            'tiles': 'tiles',
            'title': 'title'
        }

        self._position = position
        self._tiles = tiles
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SamsungPreviewSection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SamsungPreviewSection of this SamsungPreviewSection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def position(self):
        """Gets the position of this SamsungPreviewSection.

        Section position. If specified, sections are shown in ascending position order.

        :return: The position of this SamsungPreviewSection.
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this SamsungPreviewSection.

        Section position. If specified, sections are shown in ascending position order.

        :param position: The position of this SamsungPreviewSection.
        :type position: int
        """

        self._position = position

    @property
    def tiles(self):
        """Gets the tiles of this SamsungPreviewSection.

        Tiles within the section

        :return: The tiles of this SamsungPreviewSection.
        :rtype: List[SamsungPreviewSectionTile]
        """
        return self._tiles

    @tiles.setter
    def tiles(self, tiles):
        """Sets the tiles of this SamsungPreviewSection.

        Tiles within the section

        :param tiles: The tiles of this SamsungPreviewSection.
        :type tiles: List[SamsungPreviewSectionTile]
        """
        if tiles is None:
            raise ValueError("Invalid value for `tiles`, must not be `None`")

        self._tiles = tiles

    @property
    def title(self):
        """Gets the title of this SamsungPreviewSection.

        Section title

        :return: The title of this SamsungPreviewSection.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this SamsungPreviewSection.

        Section title

        :param title: The title of this SamsungPreviewSection.
        :type title: str
        """

        self._title = title
