# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ItvChangeEmailRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email: str=None, profile_token: str=None):
        """ItvChangeEmailRequest - a model defined in OpenAPI

        :param email: The email of this ItvChangeEmailRequest.
        :param profile_token: The profile_token of this ItvChangeEmailRequest.
        """
        self.openapi_types = {
            'email': str,
            'profile_token': str
        }

        self.attribute_map = {
            'email': 'email',
            'profile_token': 'profileToken'
        }

        self._email = email
        self._profile_token = profile_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ItvChangeEmailRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ItvChangeEmailRequest of this ItvChangeEmailRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email(self):
        """Gets the email of this ItvChangeEmailRequest.

        New email address for account/profile.

        :return: The email of this ItvChangeEmailRequest.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ItvChangeEmailRequest.

        New email address for account/profile.

        :param email: The email of this ItvChangeEmailRequest.
        :type email: str
        """
        if email is None:
            raise ValueError("Invalid value for `email`, must not be `None`")

        self._email = email

    @property
    def profile_token(self):
        """Gets the profile_token of this ItvChangeEmailRequest.

        The ITV profile token.

        :return: The profile_token of this ItvChangeEmailRequest.
        :rtype: str
        """
        return self._profile_token

    @profile_token.setter
    def profile_token(self, profile_token):
        """Sets the profile_token of this ItvChangeEmailRequest.

        The ITV profile token.

        :param profile_token: The profile_token of this ItvChangeEmailRequest.
        :type profile_token: str
        """
        if profile_token is None:
            raise ValueError("Invalid value for `profile_token`, must not be `None`")

        self._profile_token = profile_token
