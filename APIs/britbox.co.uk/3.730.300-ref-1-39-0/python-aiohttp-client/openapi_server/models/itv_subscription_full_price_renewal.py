# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ItvSubscriptionFullPriceRenewal(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, full_price_renewal: bool=None, reason: str=None):
        """ItvSubscriptionFullPriceRenewal - a model defined in OpenAPI

        :param full_price_renewal: The full_price_renewal of this ItvSubscriptionFullPriceRenewal.
        :param reason: The reason of this ItvSubscriptionFullPriceRenewal.
        """
        self.openapi_types = {
            'full_price_renewal': bool,
            'reason': str
        }

        self.attribute_map = {
            'full_price_renewal': 'fullPriceRenewal',
            'reason': 'reason'
        }

        self._full_price_renewal = full_price_renewal
        self._reason = reason

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ItvSubscriptionFullPriceRenewal':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ItvSubscriptionFullPriceRenewal of this ItvSubscriptionFullPriceRenewal.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def full_price_renewal(self):
        """Gets the full_price_renewal of this ItvSubscriptionFullPriceRenewal.

        full price renewal state.

        :return: The full_price_renewal of this ItvSubscriptionFullPriceRenewal.
        :rtype: bool
        """
        return self._full_price_renewal

    @full_price_renewal.setter
    def full_price_renewal(self, full_price_renewal):
        """Sets the full_price_renewal of this ItvSubscriptionFullPriceRenewal.

        full price renewal state.

        :param full_price_renewal: The full_price_renewal of this ItvSubscriptionFullPriceRenewal.
        :type full_price_renewal: bool
        """
        if full_price_renewal is None:
            raise ValueError("Invalid value for `full_price_renewal`, must not be `None`")

        self._full_price_renewal = full_price_renewal

    @property
    def reason(self):
        """Gets the reason of this ItvSubscriptionFullPriceRenewal.

        reason of full price renewal state.

        :return: The reason of this ItvSubscriptionFullPriceRenewal.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this ItvSubscriptionFullPriceRenewal.

        reason of full price renewal state.

        :param reason: The reason of this ItvSubscriptionFullPriceRenewal.
        :type reason: str
        """
        if reason is None:
            raise ValueError("Invalid value for `reason`, must not be `None`")

        self._reason = reason
