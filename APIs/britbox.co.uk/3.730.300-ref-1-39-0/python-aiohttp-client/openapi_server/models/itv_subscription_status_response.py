# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ItvSubscriptionStatusResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_active: bool=None):
        """ItvSubscriptionStatusResponse - a model defined in OpenAPI

        :param is_active: The is_active of this ItvSubscriptionStatusResponse.
        """
        self.openapi_types = {
            'is_active': bool
        }

        self.attribute_map = {
            'is_active': 'is_active'
        }

        self._is_active = is_active

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ItvSubscriptionStatusResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ItvSubscriptionStatusResponse of this ItvSubscriptionStatusResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_active(self):
        """Gets the is_active of this ItvSubscriptionStatusResponse.

        Defines whether last payment intent was successful or not.

        :return: The is_active of this ItvSubscriptionStatusResponse.
        :rtype: bool
        """
        return self._is_active

    @is_active.setter
    def is_active(self, is_active):
        """Sets the is_active of this ItvSubscriptionStatusResponse.

        Defines whether last payment intent was successful or not.

        :param is_active: The is_active of this ItvSubscriptionStatusResponse.
        :type is_active: bool
        """
        if is_active is None:
            raise ValueError("Invalid value for `is_active`, must not be `None`")

        self._is_active = is_active
