# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppConfigGeneral(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency_code: str=None, custom_fields: Dict[str, object]=None, default_time_zone: str=None, facebook_app_id: str=None, ga_token: str=None, item_image_types: Dict[str, str]=None, mandatory_sign_in: bool=None, max_user_rating: int=None, stripe_key: str=None, website_url: str=None):
        """AppConfigGeneral - a model defined in OpenAPI

        :param currency_code: The currency_code of this AppConfigGeneral.
        :param custom_fields: The custom_fields of this AppConfigGeneral.
        :param default_time_zone: The default_time_zone of this AppConfigGeneral.
        :param facebook_app_id: The facebook_app_id of this AppConfigGeneral.
        :param ga_token: The ga_token of this AppConfigGeneral.
        :param item_image_types: The item_image_types of this AppConfigGeneral.
        :param mandatory_sign_in: The mandatory_sign_in of this AppConfigGeneral.
        :param max_user_rating: The max_user_rating of this AppConfigGeneral.
        :param stripe_key: The stripe_key of this AppConfigGeneral.
        :param website_url: The website_url of this AppConfigGeneral.
        """
        self.openapi_types = {
            'currency_code': str,
            'custom_fields': Dict[str, object],
            'default_time_zone': str,
            'facebook_app_id': str,
            'ga_token': str,
            'item_image_types': Dict[str, str],
            'mandatory_sign_in': bool,
            'max_user_rating': int,
            'stripe_key': str,
            'website_url': str
        }

        self.attribute_map = {
            'currency_code': 'currencyCode',
            'custom_fields': 'customFields',
            'default_time_zone': 'defaultTimeZone',
            'facebook_app_id': 'facebookAppId',
            'ga_token': 'gaToken',
            'item_image_types': 'itemImageTypes',
            'mandatory_sign_in': 'mandatorySignIn',
            'max_user_rating': 'maxUserRating',
            'stripe_key': 'stripeKey',
            'website_url': 'websiteUrl'
        }

        self._currency_code = currency_code
        self._custom_fields = custom_fields
        self._default_time_zone = default_time_zone
        self._facebook_app_id = facebook_app_id
        self._ga_token = ga_token
        self._item_image_types = item_image_types
        self._mandatory_sign_in = mandatory_sign_in
        self._max_user_rating = max_user_rating
        self._stripe_key = stripe_key
        self._website_url = website_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppConfigGeneral':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppConfigGeneral of this AppConfigGeneral.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency_code(self):
        """Gets the currency_code of this AppConfigGeneral.

        The currency code to target.

        :return: The currency_code of this AppConfigGeneral.
        :rtype: str
        """
        return self._currency_code

    @currency_code.setter
    def currency_code(self, currency_code):
        """Sets the currency_code of this AppConfigGeneral.

        The currency code to target.

        :param currency_code: The currency_code of this AppConfigGeneral.
        :type currency_code: str
        """

        self._currency_code = currency_code

    @property
    def custom_fields(self):
        """Gets the custom_fields of this AppConfigGeneral.

        A map of custom configuration fields.

        :return: The custom_fields of this AppConfigGeneral.
        :rtype: Dict[str, object]
        """
        return self._custom_fields

    @custom_fields.setter
    def custom_fields(self, custom_fields):
        """Sets the custom_fields of this AppConfigGeneral.

        A map of custom configuration fields.

        :param custom_fields: The custom_fields of this AppConfigGeneral.
        :type custom_fields: Dict[str, object]
        """

        self._custom_fields = custom_fields

    @property
    def default_time_zone(self):
        """Gets the default_time_zone of this AppConfigGeneral.

        The default time zone of the site. e.g. \"Etc/GMT\"

        :return: The default_time_zone of this AppConfigGeneral.
        :rtype: str
        """
        return self._default_time_zone

    @default_time_zone.setter
    def default_time_zone(self, default_time_zone):
        """Sets the default_time_zone of this AppConfigGeneral.

        The default time zone of the site. e.g. \"Etc/GMT\"

        :param default_time_zone: The default_time_zone of this AppConfigGeneral.
        :type default_time_zone: str
        """

        self._default_time_zone = default_time_zone

    @property
    def facebook_app_id(self):
        """Gets the facebook_app_id of this AppConfigGeneral.

        The Facebook application id associated with an environment.

        :return: The facebook_app_id of this AppConfigGeneral.
        :rtype: str
        """
        return self._facebook_app_id

    @facebook_app_id.setter
    def facebook_app_id(self, facebook_app_id):
        """Sets the facebook_app_id of this AppConfigGeneral.

        The Facebook application id associated with an environment.

        :param facebook_app_id: The facebook_app_id of this AppConfigGeneral.
        :type facebook_app_id: str
        """

        self._facebook_app_id = facebook_app_id

    @property
    def ga_token(self):
        """Gets the ga_token of this AppConfigGeneral.

        A Google Analytics token to track applicaton user events.

        :return: The ga_token of this AppConfigGeneral.
        :rtype: str
        """
        return self._ga_token

    @ga_token.setter
    def ga_token(self, ga_token):
        """Sets the ga_token of this AppConfigGeneral.

        A Google Analytics token to track applicaton user events.

        :param ga_token: The ga_token of this AppConfigGeneral.
        :type ga_token: str
        """

        self._ga_token = ga_token

    @property
    def item_image_types(self):
        """Gets the item_image_types of this AppConfigGeneral.

        A map of default item image types where the key is the item types.

        :return: The item_image_types of this AppConfigGeneral.
        :rtype: Dict[str, str]
        """
        return self._item_image_types

    @item_image_types.setter
    def item_image_types(self, item_image_types):
        """Sets the item_image_types of this AppConfigGeneral.

        A map of default item image types where the key is the item types.

        :param item_image_types: The item_image_types of this AppConfigGeneral.
        :type item_image_types: Dict[str, str]
        """

        self._item_image_types = item_image_types

    @property
    def mandatory_sign_in(self):
        """Gets the mandatory_sign_in of this AppConfigGeneral.

        Whether to require sign in for customers to access content.

        :return: The mandatory_sign_in of this AppConfigGeneral.
        :rtype: bool
        """
        return self._mandatory_sign_in

    @mandatory_sign_in.setter
    def mandatory_sign_in(self, mandatory_sign_in):
        """Sets the mandatory_sign_in of this AppConfigGeneral.

        Whether to require sign in for customers to access content.

        :param mandatory_sign_in: The mandatory_sign_in of this AppConfigGeneral.
        :type mandatory_sign_in: bool
        """

        self._mandatory_sign_in = mandatory_sign_in

    @property
    def max_user_rating(self):
        """Gets the max_user_rating of this AppConfigGeneral.

        The maximum value allowed for user ratings.

        :return: The max_user_rating of this AppConfigGeneral.
        :rtype: int
        """
        return self._max_user_rating

    @max_user_rating.setter
    def max_user_rating(self, max_user_rating):
        """Sets the max_user_rating of this AppConfigGeneral.

        The maximum value allowed for user ratings.

        :param max_user_rating: The max_user_rating of this AppConfigGeneral.
        :type max_user_rating: int
        """

        self._max_user_rating = max_user_rating

    @property
    def stripe_key(self):
        """Gets the stripe_key of this AppConfigGeneral.

        The public Stripe key to use for payment transactions.

        :return: The stripe_key of this AppConfigGeneral.
        :rtype: str
        """
        return self._stripe_key

    @stripe_key.setter
    def stripe_key(self, stripe_key):
        """Sets the stripe_key of this AppConfigGeneral.

        The public Stripe key to use for payment transactions.

        :param stripe_key: The stripe_key of this AppConfigGeneral.
        :type stripe_key: str
        """

        self._stripe_key = stripe_key

    @property
    def website_url(self):
        """Gets the website_url of this AppConfigGeneral.

        The url of the primary website.

        :return: The website_url of this AppConfigGeneral.
        :rtype: str
        """
        return self._website_url

    @website_url.setter
    def website_url(self, website_url):
        """Sets the website_url of this AppConfigGeneral.

        The url of the primary website.

        :param website_url: The website_url of this AppConfigGeneral.
        :type website_url: str
        """

        self._website_url = website_url
