# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ItvGetDiscountResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, currency: str=None, description: str=None, headline: str=None, id: str=None, initial_cost: float=None, long_description: str=None, nickname: str=None, offerdurationperiod: str=None, short_description: str=None):
        """ItvGetDiscountResponse - a model defined in OpenAPI

        :param currency: The currency of this ItvGetDiscountResponse.
        :param description: The description of this ItvGetDiscountResponse.
        :param headline: The headline of this ItvGetDiscountResponse.
        :param id: The id of this ItvGetDiscountResponse.
        :param initial_cost: The initial_cost of this ItvGetDiscountResponse.
        :param long_description: The long_description of this ItvGetDiscountResponse.
        :param nickname: The nickname of this ItvGetDiscountResponse.
        :param offerdurationperiod: The offerdurationperiod of this ItvGetDiscountResponse.
        :param short_description: The short_description of this ItvGetDiscountResponse.
        """
        self.openapi_types = {
            'currency': str,
            'description': str,
            'headline': str,
            'id': str,
            'initial_cost': float,
            'long_description': str,
            'nickname': str,
            'offerdurationperiod': str,
            'short_description': str
        }

        self.attribute_map = {
            'currency': 'currency',
            'description': 'description',
            'headline': 'headline',
            'id': 'id',
            'initial_cost': 'initialCost',
            'long_description': 'longDescription',
            'nickname': 'nickname',
            'offerdurationperiod': 'offerdurationperiod',
            'short_description': 'shortDescription'
        }

        self._currency = currency
        self._description = description
        self._headline = headline
        self._id = id
        self._initial_cost = initial_cost
        self._long_description = long_description
        self._nickname = nickname
        self._offerdurationperiod = offerdurationperiod
        self._short_description = short_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ItvGetDiscountResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ItvGetDiscountResponse of this ItvGetDiscountResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def currency(self):
        """Gets the currency of this ItvGetDiscountResponse.

        Payment currency.

        :return: The currency of this ItvGetDiscountResponse.
        :rtype: str
        """
        return self._currency

    @currency.setter
    def currency(self, currency):
        """Sets the currency of this ItvGetDiscountResponse.

        Payment currency.

        :param currency: The currency of this ItvGetDiscountResponse.
        :type currency: str
        """

        self._currency = currency

    @property
    def description(self):
        """Gets the description of this ItvGetDiscountResponse.

        Description

        :return: The description of this ItvGetDiscountResponse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ItvGetDiscountResponse.

        Description

        :param description: The description of this ItvGetDiscountResponse.
        :type description: str
        """

        self._description = description

    @property
    def headline(self):
        """Gets the headline of this ItvGetDiscountResponse.

        Headline

        :return: The headline of this ItvGetDiscountResponse.
        :rtype: str
        """
        return self._headline

    @headline.setter
    def headline(self, headline):
        """Sets the headline of this ItvGetDiscountResponse.

        Headline

        :param headline: The headline of this ItvGetDiscountResponse.
        :type headline: str
        """

        self._headline = headline

    @property
    def id(self):
        """Gets the id of this ItvGetDiscountResponse.

        The if of a discount for a user.

        :return: The id of this ItvGetDiscountResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ItvGetDiscountResponse.

        The if of a discount for a user.

        :param id: The id of this ItvGetDiscountResponse.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def initial_cost(self):
        """Gets the initial_cost of this ItvGetDiscountResponse.

        The initial cost.

        :return: The initial_cost of this ItvGetDiscountResponse.
        :rtype: float
        """
        return self._initial_cost

    @initial_cost.setter
    def initial_cost(self, initial_cost):
        """Sets the initial_cost of this ItvGetDiscountResponse.

        The initial cost.

        :param initial_cost: The initial_cost of this ItvGetDiscountResponse.
        :type initial_cost: float
        """

        self._initial_cost = initial_cost

    @property
    def long_description(self):
        """Gets the long_description of this ItvGetDiscountResponse.

        Long description

        :return: The long_description of this ItvGetDiscountResponse.
        :rtype: str
        """
        return self._long_description

    @long_description.setter
    def long_description(self, long_description):
        """Sets the long_description of this ItvGetDiscountResponse.

        Long description

        :param long_description: The long_description of this ItvGetDiscountResponse.
        :type long_description: str
        """

        self._long_description = long_description

    @property
    def nickname(self):
        """Gets the nickname of this ItvGetDiscountResponse.

        Discount nickname.

        :return: The nickname of this ItvGetDiscountResponse.
        :rtype: str
        """
        return self._nickname

    @nickname.setter
    def nickname(self, nickname):
        """Sets the nickname of this ItvGetDiscountResponse.

        Discount nickname.

        :param nickname: The nickname of this ItvGetDiscountResponse.
        :type nickname: str
        """

        self._nickname = nickname

    @property
    def offerdurationperiod(self):
        """Gets the offerdurationperiod of this ItvGetDiscountResponse.

        How long the descount will be valid for.

        :return: The offerdurationperiod of this ItvGetDiscountResponse.
        :rtype: str
        """
        return self._offerdurationperiod

    @offerdurationperiod.setter
    def offerdurationperiod(self, offerdurationperiod):
        """Sets the offerdurationperiod of this ItvGetDiscountResponse.

        How long the descount will be valid for.

        :param offerdurationperiod: The offerdurationperiod of this ItvGetDiscountResponse.
        :type offerdurationperiod: str
        """

        self._offerdurationperiod = offerdurationperiod

    @property
    def short_description(self):
        """Gets the short_description of this ItvGetDiscountResponse.

        Short description

        :return: The short_description of this ItvGetDiscountResponse.
        :rtype: str
        """
        return self._short_description

    @short_description.setter
    def short_description(self, short_description):
        """Sets the short_description of this ItvGetDiscountResponse.

        Short description

        :param short_description: The short_description of this ItvGetDiscountResponse.
        :type short_description: str
        """

        self._short_description = short_description
