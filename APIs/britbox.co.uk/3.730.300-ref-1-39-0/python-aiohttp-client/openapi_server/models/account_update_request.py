# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.address import Address
from openapi_server import util


class AccountUpdateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address: Address=None, default_payment_instrument_id: str=None, default_payment_method_id: str=None, first_name: str=None, last_name: str=None, min_rating_playback_guard: str=None, segments: List[str]=None, tracking_enabled: bool=None):
        """AccountUpdateRequest - a model defined in OpenAPI

        :param address: The address of this AccountUpdateRequest.
        :param default_payment_instrument_id: The default_payment_instrument_id of this AccountUpdateRequest.
        :param default_payment_method_id: The default_payment_method_id of this AccountUpdateRequest.
        :param first_name: The first_name of this AccountUpdateRequest.
        :param last_name: The last_name of this AccountUpdateRequest.
        :param min_rating_playback_guard: The min_rating_playback_guard of this AccountUpdateRequest.
        :param segments: The segments of this AccountUpdateRequest.
        :param tracking_enabled: The tracking_enabled of this AccountUpdateRequest.
        """
        self.openapi_types = {
            'address': Address,
            'default_payment_instrument_id': str,
            'default_payment_method_id': str,
            'first_name': str,
            'last_name': str,
            'min_rating_playback_guard': str,
            'segments': List[str],
            'tracking_enabled': bool
        }

        self.attribute_map = {
            'address': 'address',
            'default_payment_instrument_id': 'defaultPaymentInstrumentId',
            'default_payment_method_id': 'defaultPaymentMethodId',
            'first_name': 'firstName',
            'last_name': 'lastName',
            'min_rating_playback_guard': 'minRatingPlaybackGuard',
            'segments': 'segments',
            'tracking_enabled': 'trackingEnabled'
        }

        self._address = address
        self._default_payment_instrument_id = default_payment_instrument_id
        self._default_payment_method_id = default_payment_method_id
        self._first_name = first_name
        self._last_name = last_name
        self._min_rating_playback_guard = min_rating_playback_guard
        self._segments = segments
        self._tracking_enabled = tracking_enabled

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AccountUpdateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AccountUpdateRequest of this AccountUpdateRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address(self):
        """Gets the address of this AccountUpdateRequest.


        :return: The address of this AccountUpdateRequest.
        :rtype: Address
        """
        return self._address

    @address.setter
    def address(self, address):
        """Sets the address of this AccountUpdateRequest.


        :param address: The address of this AccountUpdateRequest.
        :type address: Address
        """

        self._address = address

    @property
    def default_payment_instrument_id(self):
        """Gets the default_payment_instrument_id of this AccountUpdateRequest.

        The id of the payment instrument to use by default for account transactions.  **DEPRECATED** The property `defaultPaymentMethodId` is now preferred. 

        :return: The default_payment_instrument_id of this AccountUpdateRequest.
        :rtype: str
        """
        return self._default_payment_instrument_id

    @default_payment_instrument_id.setter
    def default_payment_instrument_id(self, default_payment_instrument_id):
        """Sets the default_payment_instrument_id of this AccountUpdateRequest.

        The id of the payment instrument to use by default for account transactions.  **DEPRECATED** The property `defaultPaymentMethodId` is now preferred. 

        :param default_payment_instrument_id: The default_payment_instrument_id of this AccountUpdateRequest.
        :type default_payment_instrument_id: str
        """

        self._default_payment_instrument_id = default_payment_instrument_id

    @property
    def default_payment_method_id(self):
        """Gets the default_payment_method_id of this AccountUpdateRequest.

        The id of the payment method to use by default for account transactions.

        :return: The default_payment_method_id of this AccountUpdateRequest.
        :rtype: str
        """
        return self._default_payment_method_id

    @default_payment_method_id.setter
    def default_payment_method_id(self, default_payment_method_id):
        """Sets the default_payment_method_id of this AccountUpdateRequest.

        The id of the payment method to use by default for account transactions.

        :param default_payment_method_id: The default_payment_method_id of this AccountUpdateRequest.
        :type default_payment_method_id: str
        """

        self._default_payment_method_id = default_payment_method_id

    @property
    def first_name(self):
        """Gets the first_name of this AccountUpdateRequest.

        The first name of the account holder.

        :return: The first_name of this AccountUpdateRequest.
        :rtype: str
        """
        return self._first_name

    @first_name.setter
    def first_name(self, first_name):
        """Sets the first_name of this AccountUpdateRequest.

        The first name of the account holder.

        :param first_name: The first_name of this AccountUpdateRequest.
        :type first_name: str
        """

        self._first_name = first_name

    @property
    def last_name(self):
        """Gets the last_name of this AccountUpdateRequest.

        The last name of the account holder.

        :return: The last_name of this AccountUpdateRequest.
        :rtype: str
        """
        return self._last_name

    @last_name.setter
    def last_name(self, last_name):
        """Sets the last_name of this AccountUpdateRequest.

        The last name of the account holder.

        :param last_name: The last_name of this AccountUpdateRequest.
        :type last_name: str
        """

        self._last_name = last_name

    @property
    def min_rating_playback_guard(self):
        """Gets the min_rating_playback_guard of this AccountUpdateRequest.

        The classification rating defining the minimum rating level a user should be forced to enter the account pin code for playback. Anything at this rating level or above will require the pin for playback.  e.g. AUOFLC-MA15+  If you want to disable this guard pass an empty string or `null`. 

        :return: The min_rating_playback_guard of this AccountUpdateRequest.
        :rtype: str
        """
        return self._min_rating_playback_guard

    @min_rating_playback_guard.setter
    def min_rating_playback_guard(self, min_rating_playback_guard):
        """Sets the min_rating_playback_guard of this AccountUpdateRequest.

        The classification rating defining the minimum rating level a user should be forced to enter the account pin code for playback. Anything at this rating level or above will require the pin for playback.  e.g. AUOFLC-MA15+  If you want to disable this guard pass an empty string or `null`. 

        :param min_rating_playback_guard: The min_rating_playback_guard of this AccountUpdateRequest.
        :type min_rating_playback_guard: str
        """

        self._min_rating_playback_guard = min_rating_playback_guard

    @property
    def segments(self):
        """Gets the segments of this AccountUpdateRequest.

        The segments an account should be placed under

        :return: The segments of this AccountUpdateRequest.
        :rtype: List[str]
        """
        return self._segments

    @segments.setter
    def segments(self, segments):
        """Sets the segments of this AccountUpdateRequest.

        The segments an account should be placed under

        :param segments: The segments of this AccountUpdateRequest.
        :type segments: List[str]
        """

        self._segments = segments

    @property
    def tracking_enabled(self):
        """Gets the tracking_enabled of this AccountUpdateRequest.

        Whether usage tracking is associated with an account or anonymous.

        :return: The tracking_enabled of this AccountUpdateRequest.
        :rtype: bool
        """
        return self._tracking_enabled

    @tracking_enabled.setter
    def tracking_enabled(self, tracking_enabled):
        """Sets the tracking_enabled of this AccountUpdateRequest.

        Whether usage tracking is associated with an account or anonymous.

        :param tracking_enabled: The tracking_enabled of this AccountUpdateRequest.
        :type tracking_enabled: bool
        """

        self._tracking_enabled = tracking_enabled
