# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ItvAssignMsisdnRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ee_product_id: str=None, msisdn: str=None, profile_token: str=None, tracking_header: str=None):
        """ItvAssignMsisdnRequest - a model defined in OpenAPI

        :param ee_product_id: The ee_product_id of this ItvAssignMsisdnRequest.
        :param msisdn: The msisdn of this ItvAssignMsisdnRequest.
        :param profile_token: The profile_token of this ItvAssignMsisdnRequest.
        :param tracking_header: The tracking_header of this ItvAssignMsisdnRequest.
        """
        self.openapi_types = {
            'ee_product_id': str,
            'msisdn': str,
            'profile_token': str,
            'tracking_header': str
        }

        self.attribute_map = {
            'ee_product_id': 'eeProductId',
            'msisdn': 'msisdn',
            'profile_token': 'profileToken',
            'tracking_header': 'trackingHeader'
        }

        self._ee_product_id = ee_product_id
        self._msisdn = msisdn
        self._profile_token = profile_token
        self._tracking_header = tracking_header

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ItvAssignMsisdnRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ItvAssignMsisdnRequest of this ItvAssignMsisdnRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ee_product_id(self):
        """Gets the ee_product_id of this ItvAssignMsisdnRequest.

        Product id from /ee/offers

        :return: The ee_product_id of this ItvAssignMsisdnRequest.
        :rtype: str
        """
        return self._ee_product_id

    @ee_product_id.setter
    def ee_product_id(self, ee_product_id):
        """Sets the ee_product_id of this ItvAssignMsisdnRequest.

        Product id from /ee/offers

        :param ee_product_id: The ee_product_id of this ItvAssignMsisdnRequest.
        :type ee_product_id: str
        """
        if ee_product_id is None:
            raise ValueError("Invalid value for `ee_product_id`, must not be `None`")

        self._ee_product_id = ee_product_id

    @property
    def msisdn(self):
        """Gets the msisdn of this ItvAssignMsisdnRequest.

        The validated msisdn.

        :return: The msisdn of this ItvAssignMsisdnRequest.
        :rtype: str
        """
        return self._msisdn

    @msisdn.setter
    def msisdn(self, msisdn):
        """Sets the msisdn of this ItvAssignMsisdnRequest.

        The validated msisdn.

        :param msisdn: The msisdn of this ItvAssignMsisdnRequest.
        :type msisdn: str
        """
        if msisdn is None:
            raise ValueError("Invalid value for `msisdn`, must not be `None`")

        self._msisdn = msisdn

    @property
    def profile_token(self):
        """Gets the profile_token of this ItvAssignMsisdnRequest.

        The ITV profile token

        :return: The profile_token of this ItvAssignMsisdnRequest.
        :rtype: str
        """
        return self._profile_token

    @profile_token.setter
    def profile_token(self, profile_token):
        """Sets the profile_token of this ItvAssignMsisdnRequest.

        The ITV profile token

        :param profile_token: The profile_token of this ItvAssignMsisdnRequest.
        :type profile_token: str
        """
        if profile_token is None:
            raise ValueError("Invalid value for `profile_token`, must not be `None`")

        self._profile_token = profile_token

    @property
    def tracking_header(self):
        """Gets the tracking_header of this ItvAssignMsisdnRequest.

        trackingHeader

        :return: The tracking_header of this ItvAssignMsisdnRequest.
        :rtype: str
        """
        return self._tracking_header

    @tracking_header.setter
    def tracking_header(self, tracking_header):
        """Sets the tracking_header of this ItvAssignMsisdnRequest.

        trackingHeader

        :param tracking_header: The tracking_header of this ItvAssignMsisdnRequest.
        :type tracking_header: str
        """
        if tracking_header is None:
            raise ValueError("Invalid value for `tracking_header`, must not be `None`")

        self._tracking_header = tracking_header
