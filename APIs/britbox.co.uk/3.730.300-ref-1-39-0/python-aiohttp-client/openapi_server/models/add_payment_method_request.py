# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AddPaymentMethodRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, make_default: bool=None, token: str=None, type: str=None):
        """AddPaymentMethodRequest - a model defined in OpenAPI

        :param make_default: The make_default of this AddPaymentMethodRequest.
        :param token: The token of this AddPaymentMethodRequest.
        :param type: The type of this AddPaymentMethodRequest.
        """
        self.openapi_types = {
            'make_default': bool,
            'token': str,
            'type': str
        }

        self.attribute_map = {
            'make_default': 'makeDefault',
            'token': 'token',
            'type': 'type'
        }

        self._make_default = make_default
        self._token = token
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AddPaymentMethodRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AddPaymentMethodRequest of this AddPaymentMethodRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def make_default(self):
        """Gets the make_default of this AddPaymentMethodRequest.

        Whether this payment method should become the account default when  making purchases.  Note that if this is the first payment method of type Card being added to an account then it will become the default whether this property is true or false. 

        :return: The make_default of this AddPaymentMethodRequest.
        :rtype: bool
        """
        return self._make_default

    @make_default.setter
    def make_default(self, make_default):
        """Sets the make_default of this AddPaymentMethodRequest.

        Whether this payment method should become the account default when  making purchases.  Note that if this is the first payment method of type Card being added to an account then it will become the default whether this property is true or false. 

        :param make_default: The make_default of this AddPaymentMethodRequest.
        :type make_default: bool
        """

        self._make_default = make_default

    @property
    def token(self):
        """Gets the token of this AddPaymentMethodRequest.

        The payment provider token representing a payment method, obtained by submitting payment method details to your third party provider. 

        :return: The token of this AddPaymentMethodRequest.
        :rtype: str
        """
        return self._token

    @token.setter
    def token(self, token):
        """Sets the token of this AddPaymentMethodRequest.

        The payment provider token representing a payment method, obtained by submitting payment method details to your third party provider. 

        :param token: The token of this AddPaymentMethodRequest.
        :type token: str
        """
        if token is None:
            raise ValueError("Invalid value for `token`, must not be `None`")

        self._token = token

    @property
    def type(self):
        """Gets the type of this AddPaymentMethodRequest.

        The type of payment method.

        :return: The type of this AddPaymentMethodRequest.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AddPaymentMethodRequest.

        The type of payment method.

        :param type: The type of this AddPaymentMethodRequest.
        :type type: str
        """
        allowed_values = ["Card"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
