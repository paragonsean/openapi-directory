# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ItvUpgradePlanRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, plan_id: str=None):
        """ItvUpgradePlanRequest - a model defined in OpenAPI

        :param plan_id: The plan_id of this ItvUpgradePlanRequest.
        """
        self.openapi_types = {
            'plan_id': str
        }

        self.attribute_map = {
            'plan_id': 'planId'
        }

        self._plan_id = plan_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ItvUpgradePlanRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ItvUpgradePlanRequest of this ItvUpgradePlanRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def plan_id(self):
        """Gets the plan_id of this ItvUpgradePlanRequest.

        The identifier of the plan to purchase.

        :return: The plan_id of this ItvUpgradePlanRequest.
        :rtype: str
        """
        return self._plan_id

    @plan_id.setter
    def plan_id(self, plan_id):
        """Sets the plan_id of this ItvUpgradePlanRequest.

        The identifier of the plan to purchase.

        :param plan_id: The plan_id of this ItvUpgradePlanRequest.
        :type plan_id: str
        """
        if plan_id is None:
            raise ValueError("Invalid value for `plan_id`, must not be `None`")

        self._plan_id = plan_id
