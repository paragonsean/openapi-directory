# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SamsungPreviewSectionTile(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, action_data: str=None, display_from: datetime=None, display_until: datetime=None, image_ratio: str=None, image_url: str=None, is_playable: bool=None, position: int=None, subtitle: str=None, title: str=None):
        """SamsungPreviewSectionTile - a model defined in OpenAPI

        :param action_data: The action_data of this SamsungPreviewSectionTile.
        :param display_from: The display_from of this SamsungPreviewSectionTile.
        :param display_until: The display_until of this SamsungPreviewSectionTile.
        :param image_ratio: The image_ratio of this SamsungPreviewSectionTile.
        :param image_url: The image_url of this SamsungPreviewSectionTile.
        :param is_playable: The is_playable of this SamsungPreviewSectionTile.
        :param position: The position of this SamsungPreviewSectionTile.
        :param subtitle: The subtitle of this SamsungPreviewSectionTile.
        :param title: The title of this SamsungPreviewSectionTile.
        """
        self.openapi_types = {
            'action_data': str,
            'display_from': datetime,
            'display_until': datetime,
            'image_ratio': str,
            'image_url': str,
            'is_playable': bool,
            'position': int,
            'subtitle': str,
            'title': str
        }

        self.attribute_map = {
            'action_data': 'action_data',
            'display_from': 'display_from',
            'display_until': 'display_until',
            'image_ratio': 'image_ratio',
            'image_url': 'image_url',
            'is_playable': 'is_playable',
            'position': 'position',
            'subtitle': 'subtitle',
            'title': 'title'
        }

        self._action_data = action_data
        self._display_from = display_from
        self._display_until = display_until
        self._image_ratio = image_ratio
        self._image_url = image_url
        self._is_playable = is_playable
        self._position = position
        self._subtitle = subtitle
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SamsungPreviewSectionTile':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SamsungPreviewSectionTile of this SamsungPreviewSectionTile.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def action_data(self):
        """Gets the action_data of this SamsungPreviewSectionTile.

        Data to send to the application when the tile is clicked

        :return: The action_data of this SamsungPreviewSectionTile.
        :rtype: str
        """
        return self._action_data

    @action_data.setter
    def action_data(self, action_data):
        """Sets the action_data of this SamsungPreviewSectionTile.

        Data to send to the application when the tile is clicked

        :param action_data: The action_data of this SamsungPreviewSectionTile.
        :type action_data: str
        """
        if action_data is None:
            raise ValueError("Invalid value for `action_data`, must not be `None`")

        self._action_data = action_data

    @property
    def display_from(self):
        """Gets the display_from of this SamsungPreviewSectionTile.

        Time to begin showing the tile

        :return: The display_from of this SamsungPreviewSectionTile.
        :rtype: datetime
        """
        return self._display_from

    @display_from.setter
    def display_from(self, display_from):
        """Sets the display_from of this SamsungPreviewSectionTile.

        Time to begin showing the tile

        :param display_from: The display_from of this SamsungPreviewSectionTile.
        :type display_from: datetime
        """

        self._display_from = display_from

    @property
    def display_until(self):
        """Gets the display_until of this SamsungPreviewSectionTile.

        Time to stop showing the tile

        :return: The display_until of this SamsungPreviewSectionTile.
        :rtype: datetime
        """
        return self._display_until

    @display_until.setter
    def display_until(self, display_until):
        """Sets the display_until of this SamsungPreviewSectionTile.

        Time to stop showing the tile

        :param display_until: The display_until of this SamsungPreviewSectionTile.
        :type display_until: datetime
        """

        self._display_until = display_until

    @property
    def image_ratio(self):
        """Gets the image_ratio of this SamsungPreviewSectionTile.

        Thumbnail image aspect ratio   \"16:9\"   \"4:3\"   \"1:1\" (default)   \"2:3\"   The thumbnail height is fixed at 250 px on presentation. 

        :return: The image_ratio of this SamsungPreviewSectionTile.
        :rtype: str
        """
        return self._image_ratio

    @image_ratio.setter
    def image_ratio(self, image_ratio):
        """Sets the image_ratio of this SamsungPreviewSectionTile.

        Thumbnail image aspect ratio   \"16:9\"   \"4:3\"   \"1:1\" (default)   \"2:3\"   The thumbnail height is fixed at 250 px on presentation. 

        :param image_ratio: The image_ratio of this SamsungPreviewSectionTile.
        :type image_ratio: str
        """
        if image_ratio is None:
            raise ValueError("Invalid value for `image_ratio`, must not be `None`")

        self._image_ratio = image_ratio

    @property
    def image_url(self):
        """Gets the image_url of this SamsungPreviewSectionTile.

        Thumbnail image URL

        :return: The image_url of this SamsungPreviewSectionTile.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this SamsungPreviewSectionTile.

        Thumbnail image URL

        :param image_url: The image_url of this SamsungPreviewSectionTile.
        :type image_url: str
        """
        if image_url is None:
            raise ValueError("Invalid value for `image_url`, must not be `None`")

        self._image_url = image_url

    @property
    def is_playable(self):
        """Gets the is_playable of this SamsungPreviewSectionTile.

        If \"true\", a \"Play\" icon is shown over the thumbnail image

        :return: The is_playable of this SamsungPreviewSectionTile.
        :rtype: bool
        """
        return self._is_playable

    @is_playable.setter
    def is_playable(self, is_playable):
        """Sets the is_playable of this SamsungPreviewSectionTile.

        If \"true\", a \"Play\" icon is shown over the thumbnail image

        :param is_playable: The is_playable of this SamsungPreviewSectionTile.
        :type is_playable: bool
        """
        if is_playable is None:
            raise ValueError("Invalid value for `is_playable`, must not be `None`")

        self._is_playable = is_playable

    @property
    def position(self):
        """Gets the position of this SamsungPreviewSectionTile.

        Section position. If specified, sections are shown in ascending position order

        :return: The position of this SamsungPreviewSectionTile.
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this SamsungPreviewSectionTile.

        Section position. If specified, sections are shown in ascending position order

        :param position: The position of this SamsungPreviewSectionTile.
        :type position: int
        """

        self._position = position

    @property
    def subtitle(self):
        """Gets the subtitle of this SamsungPreviewSectionTile.

        Tile subtitle

        :return: The subtitle of this SamsungPreviewSectionTile.
        :rtype: str
        """
        return self._subtitle

    @subtitle.setter
    def subtitle(self, subtitle):
        """Sets the subtitle of this SamsungPreviewSectionTile.

        Tile subtitle

        :param subtitle: The subtitle of this SamsungPreviewSectionTile.
        :type subtitle: str
        """

        self._subtitle = subtitle

    @property
    def title(self):
        """Gets the title of this SamsungPreviewSectionTile.

        Tile title

        :return: The title of this SamsungPreviewSectionTile.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this SamsungPreviewSectionTile.

        Tile title

        :param title: The title of this SamsungPreviewSectionTile.
        :type title: str
        """

        self._title = title
