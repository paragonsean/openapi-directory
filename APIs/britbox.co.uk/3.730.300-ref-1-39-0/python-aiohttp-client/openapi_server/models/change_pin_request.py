# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ChangePinRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pin: str=None):
        """ChangePinRequest - a model defined in OpenAPI

        :param pin: The pin of this ChangePinRequest.
        """
        self.openapi_types = {
            'pin': str
        }

        self.attribute_map = {
            'pin': 'pin'
        }

        self._pin = pin

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ChangePinRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ChangePinRequest of this ChangePinRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pin(self):
        """Gets the pin of this ChangePinRequest.

        The new pin to set.

        :return: The pin of this ChangePinRequest.
        :rtype: str
        """
        return self._pin

    @pin.setter
    def pin(self, pin):
        """Sets the pin of this ChangePinRequest.

        The new pin to set.

        :param pin: The pin of this ChangePinRequest.
        :type pin: str
        """
        if pin is None:
            raise ValueError("Invalid value for `pin`, must not be `None`")

        self._pin = pin
