# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ItvChangeMarketingRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, email_opt_in: bool=None, profile_token: str=None):
        """ItvChangeMarketingRequest - a model defined in OpenAPI

        :param email_opt_in: The email_opt_in of this ItvChangeMarketingRequest.
        :param profile_token: The profile_token of this ItvChangeMarketingRequest.
        """
        self.openapi_types = {
            'email_opt_in': bool,
            'profile_token': str
        }

        self.attribute_map = {
            'email_opt_in': 'emailOptIn',
            'profile_token': 'profileToken'
        }

        self._email_opt_in = email_opt_in
        self._profile_token = profile_token

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ItvChangeMarketingRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ItvChangeMarketingRequest of this ItvChangeMarketingRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def email_opt_in(self):
        """Gets the email_opt_in of this ItvChangeMarketingRequest.

        Updated marketing preferences for account/profile.

        :return: The email_opt_in of this ItvChangeMarketingRequest.
        :rtype: bool
        """
        return self._email_opt_in

    @email_opt_in.setter
    def email_opt_in(self, email_opt_in):
        """Sets the email_opt_in of this ItvChangeMarketingRequest.

        Updated marketing preferences for account/profile.

        :param email_opt_in: The email_opt_in of this ItvChangeMarketingRequest.
        :type email_opt_in: bool
        """
        if email_opt_in is None:
            raise ValueError("Invalid value for `email_opt_in`, must not be `None`")

        self._email_opt_in = email_opt_in

    @property
    def profile_token(self):
        """Gets the profile_token of this ItvChangeMarketingRequest.

        The ITV profile token.

        :return: The profile_token of this ItvChangeMarketingRequest.
        :rtype: str
        """
        return self._profile_token

    @profile_token.setter
    def profile_token(self, profile_token):
        """Sets the profile_token of this ItvChangeMarketingRequest.

        The ITV profile token.

        :param profile_token: The profile_token of this ItvChangeMarketingRequest.
        :type profile_token: str
        """
        if profile_token is None:
            raise ValueError("Invalid value for `profile_token`, must not be `None`")

        self._profile_token = profile_token
