/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIClassification.h
 *
 * 
 */

#ifndef OAIClassification_H
#define OAIClassification_H

#include <QJsonObject>

#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIClassification : public OAIObject {
public:
    OAIClassification();
    OAIClassification(QString json);
    ~OAIClassification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getAdvisoryText() const;
    void setAdvisoryText(const QString &advisory_text);
    bool is_advisory_text_Set() const;
    bool is_advisory_text_Valid() const;

    QMap<QString, QString> getImages() const;
    void setImages(const QMap<QString, QString> &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    qint32 getLevel() const;
    void setLevel(const qint32 &level);
    bool is_level_Set() const;
    bool is_level_Valid() const;

    QString getSystem() const;
    void setSystem(const QString &system);
    bool is_system_Set() const;
    bool is_system_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_advisory_text;
    bool m_advisory_text_isSet;
    bool m_advisory_text_isValid;

    QMap<QString, QString> m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    qint32 m_level;
    bool m_level_isSet;
    bool m_level_isValid;

    QString m_system;
    bool m_system_isSet;
    bool m_system_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIClassification)

#endif // OAIClassification_H
