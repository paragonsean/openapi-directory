/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIExclusionRule.h
 *
 * Defines playback exclusion rules for an Offer or Entitlement.
 */

#ifndef OAIExclusionRule_H
#define OAIExclusionRule_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIExclusionRule : public OAIObject {
public:
    OAIExclusionRule();
    OAIExclusionRule(QString json);
    ~OAIExclusionRule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getDevice() const;
    void setDevice(const QString &device);
    bool is_device_Set() const;
    bool is_device_Valid() const;

    bool isExcludeAirplay() const;
    void setExcludeAirplay(const bool &exclude_airplay);
    bool is_exclude_airplay_Set() const;
    bool is_exclude_airplay_Valid() const;

    bool isExcludeChromecast() const;
    void setExcludeChromecast(const bool &exclude_chromecast);
    bool is_exclude_chromecast_Set() const;
    bool is_exclude_chromecast_Valid() const;

    QString getExcludeDelivery() const;
    void setExcludeDelivery(const QString &exclude_delivery);
    bool is_exclude_delivery_Set() const;
    bool is_exclude_delivery_Valid() const;

    QString getExcludeMinResolution() const;
    void setExcludeMinResolution(const QString &exclude_min_resolution);
    bool is_exclude_min_resolution_Set() const;
    bool is_exclude_min_resolution_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_device;
    bool m_device_isSet;
    bool m_device_isValid;

    bool m_exclude_airplay;
    bool m_exclude_airplay_isSet;
    bool m_exclude_airplay_isValid;

    bool m_exclude_chromecast;
    bool m_exclude_chromecast_isSet;
    bool m_exclude_chromecast_isValid;

    QString m_exclude_delivery;
    bool m_exclude_delivery_isSet;
    bool m_exclude_delivery_isValid;

    QString m_exclude_min_resolution;
    bool m_exclude_min_resolution_isSet;
    bool m_exclude_min_resolution_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIExclusionRule)

#endif // OAIExclusionRule_H
