/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItemSchedule.h
 *
 * 
 */

#ifndef OAIItemSchedule_H
#define OAIItemSchedule_H

#include <QJsonObject>

#include <QDateTime>
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIItemSchedule : public OAIObject {
public:
    OAIItemSchedule();
    OAIItemSchedule(QString json);
    ~OAIItemSchedule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isBlackout() const;
    void setBlackout(const bool &blackout);
    bool is_blackout_Set() const;
    bool is_blackout_Valid() const;

    QString getChannelId() const;
    void setChannelId(const QString &channel_id);
    bool is_channel_id_Set() const;
    bool is_channel_id_Valid() const;

    QDateTime getEndDate() const;
    void setEndDate(const QDateTime &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    bool isFeatured() const;
    void setFeatured(const bool &featured);
    bool is_featured_Set() const;
    bool is_featured_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isLive() const;
    void setLive(const bool &live);
    bool is_live_Set() const;
    bool is_live_Valid() const;

    bool isRepeat() const;
    void setRepeat(const bool &repeat);
    bool is_repeat_Set() const;
    bool is_repeat_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_blackout;
    bool m_blackout_isSet;
    bool m_blackout_isValid;

    QString m_channel_id;
    bool m_channel_id_isSet;
    bool m_channel_id_isValid;

    QDateTime m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    bool m_featured;
    bool m_featured_isSet;
    bool m_featured_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_live;
    bool m_live_isSet;
    bool m_live_isValid;

    bool m_repeat;
    bool m_repeat_isSet;
    bool m_repeat_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItemSchedule)

#endif // OAIItemSchedule_H
