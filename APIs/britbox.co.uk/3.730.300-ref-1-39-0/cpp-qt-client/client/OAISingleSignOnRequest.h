/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISingleSignOnRequest.h
 *
 * 
 */

#ifndef OAISingleSignOnRequest_H
#define OAISingleSignOnRequest_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISingleSignOnRequest : public OAIObject {
public:
    OAISingleSignOnRequest();
    OAISingleSignOnRequest(QString json);
    ~OAISingleSignOnRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCookieType() const;
    void setCookieType(const QString &cookie_type);
    bool is_cookie_type_Set() const;
    bool is_cookie_type_Valid() const;

    bool isLinkAccounts() const;
    void setLinkAccounts(const bool &link_accounts);
    bool is_link_accounts_Set() const;
    bool is_link_accounts_Valid() const;

    QString getProvider() const;
    void setProvider(const QString &provider);
    bool is_provider_Set() const;
    bool is_provider_Valid() const;

    QList<QString> getScopes() const;
    void setScopes(const QList<QString> &scopes);
    bool is_scopes_Set() const;
    bool is_scopes_Valid() const;

    QString getToken() const;
    void setToken(const QString &token);
    bool is_token_Set() const;
    bool is_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_cookie_type;
    bool m_cookie_type_isSet;
    bool m_cookie_type_isValid;

    bool m_link_accounts;
    bool m_link_accounts_isSet;
    bool m_link_accounts_isValid;

    QString m_provider;
    bool m_provider_isSet;
    bool m_provider_isValid;

    QList<QString> m_scopes;
    bool m_scopes_isSet;
    bool m_scopes_isValid;

    QString m_token;
    bool m_token_isSet;
    bool m_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISingleSignOnRequest)

#endif // OAISingleSignOnRequest_H
