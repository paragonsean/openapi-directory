/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItvChangeCardDetailsRequest.h
 *
 * 
 */

#ifndef OAIItvChangeCardDetailsRequest_H
#define OAIItvChangeCardDetailsRequest_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIItvChangeCardDetailsRequest : public OAIObject {
public:
    OAIItvChangeCardDetailsRequest();
    OAIItvChangeCardDetailsRequest(QString json);
    ~OAIItvChangeCardDetailsRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCardToken() const;
    void setCardToken(const QString &card_token);
    bool is_card_token_Set() const;
    bool is_card_token_Valid() const;

    QString getProfileToken() const;
    void setProfileToken(const QString &profile_token);
    bool is_profile_token_Set() const;
    bool is_profile_token_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_card_token;
    bool m_card_token_isSet;
    bool m_card_token_isValid;

    QString m_profile_token;
    bool m_profile_token_isSet;
    bool m_profile_token_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItvChangeCardDetailsRequest)

#endif // OAIItvChangeCardDetailsRequest_H
