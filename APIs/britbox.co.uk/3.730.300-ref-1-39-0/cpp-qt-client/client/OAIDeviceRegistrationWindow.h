/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeviceRegistrationWindow.h
 *
 * 
 */

#ifndef OAIDeviceRegistrationWindow_H
#define OAIDeviceRegistrationWindow_H

#include <QJsonObject>

#include <QDateTime>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeviceRegistrationWindow : public OAIObject {
public:
    OAIDeviceRegistrationWindow();
    OAIDeviceRegistrationWindow(QString json);
    ~OAIDeviceRegistrationWindow() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getEndDate() const;
    void setEndDate(const QDateTime &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    qint32 getPeriodDays() const;
    void setPeriodDays(const qint32 &period_days);
    bool is_period_days_Set() const;
    bool is_period_days_Valid() const;

    qint32 getRemaining() const;
    void setRemaining(const qint32 &remaining);
    bool is_remaining_Set() const;
    bool is_remaining_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    qint32 m_period_days;
    bool m_period_days_isSet;
    bool m_period_days_isValid;

    qint32 m_remaining;
    bool m_remaining_isSet;
    bool m_remaining_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeviceRegistrationWindow)

#endif // OAIDeviceRegistrationWindow_H
