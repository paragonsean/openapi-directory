/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAccountUpdateRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAccountUpdateRequest::OAIAccountUpdateRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAccountUpdateRequest::OAIAccountUpdateRequest() {
    this->initializeModel();
}

OAIAccountUpdateRequest::~OAIAccountUpdateRequest() {}

void OAIAccountUpdateRequest::initializeModel() {

    m_address_isSet = false;
    m_address_isValid = false;

    m_default_payment_instrument_id_isSet = false;
    m_default_payment_instrument_id_isValid = false;

    m_default_payment_method_id_isSet = false;
    m_default_payment_method_id_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_min_rating_playback_guard_isSet = false;
    m_min_rating_playback_guard_isValid = false;

    m_segments_isSet = false;
    m_segments_isValid = false;

    m_tracking_enabled_isSet = false;
    m_tracking_enabled_isValid = false;
}

void OAIAccountUpdateRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAccountUpdateRequest::fromJsonObject(QJsonObject json) {

    m_address_isValid = ::OpenAPI::fromJsonValue(m_address, json[QString("address")]);
    m_address_isSet = !json[QString("address")].isNull() && m_address_isValid;

    m_default_payment_instrument_id_isValid = ::OpenAPI::fromJsonValue(m_default_payment_instrument_id, json[QString("defaultPaymentInstrumentId")]);
    m_default_payment_instrument_id_isSet = !json[QString("defaultPaymentInstrumentId")].isNull() && m_default_payment_instrument_id_isValid;

    m_default_payment_method_id_isValid = ::OpenAPI::fromJsonValue(m_default_payment_method_id, json[QString("defaultPaymentMethodId")]);
    m_default_payment_method_id_isSet = !json[QString("defaultPaymentMethodId")].isNull() && m_default_payment_method_id_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_min_rating_playback_guard_isValid = ::OpenAPI::fromJsonValue(m_min_rating_playback_guard, json[QString("minRatingPlaybackGuard")]);
    m_min_rating_playback_guard_isSet = !json[QString("minRatingPlaybackGuard")].isNull() && m_min_rating_playback_guard_isValid;

    m_segments_isValid = ::OpenAPI::fromJsonValue(m_segments, json[QString("segments")]);
    m_segments_isSet = !json[QString("segments")].isNull() && m_segments_isValid;

    m_tracking_enabled_isValid = ::OpenAPI::fromJsonValue(m_tracking_enabled, json[QString("trackingEnabled")]);
    m_tracking_enabled_isSet = !json[QString("trackingEnabled")].isNull() && m_tracking_enabled_isValid;
}

QString OAIAccountUpdateRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAccountUpdateRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_address.isSet()) {
        obj.insert(QString("address"), ::OpenAPI::toJsonValue(m_address));
    }
    if (m_default_payment_instrument_id_isSet) {
        obj.insert(QString("defaultPaymentInstrumentId"), ::OpenAPI::toJsonValue(m_default_payment_instrument_id));
    }
    if (m_default_payment_method_id_isSet) {
        obj.insert(QString("defaultPaymentMethodId"), ::OpenAPI::toJsonValue(m_default_payment_method_id));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_min_rating_playback_guard_isSet) {
        obj.insert(QString("minRatingPlaybackGuard"), ::OpenAPI::toJsonValue(m_min_rating_playback_guard));
    }
    if (m_segments.size() > 0) {
        obj.insert(QString("segments"), ::OpenAPI::toJsonValue(m_segments));
    }
    if (m_tracking_enabled_isSet) {
        obj.insert(QString("trackingEnabled"), ::OpenAPI::toJsonValue(m_tracking_enabled));
    }
    return obj;
}

OAIAddress OAIAccountUpdateRequest::getAddress() const {
    return m_address;
}
void OAIAccountUpdateRequest::setAddress(const OAIAddress &address) {
    m_address = address;
    m_address_isSet = true;
}

bool OAIAccountUpdateRequest::is_address_Set() const{
    return m_address_isSet;
}

bool OAIAccountUpdateRequest::is_address_Valid() const{
    return m_address_isValid;
}

QString OAIAccountUpdateRequest::getDefaultPaymentInstrumentId() const {
    return m_default_payment_instrument_id;
}
void OAIAccountUpdateRequest::setDefaultPaymentInstrumentId(const QString &default_payment_instrument_id) {
    m_default_payment_instrument_id = default_payment_instrument_id;
    m_default_payment_instrument_id_isSet = true;
}

bool OAIAccountUpdateRequest::is_default_payment_instrument_id_Set() const{
    return m_default_payment_instrument_id_isSet;
}

bool OAIAccountUpdateRequest::is_default_payment_instrument_id_Valid() const{
    return m_default_payment_instrument_id_isValid;
}

QString OAIAccountUpdateRequest::getDefaultPaymentMethodId() const {
    return m_default_payment_method_id;
}
void OAIAccountUpdateRequest::setDefaultPaymentMethodId(const QString &default_payment_method_id) {
    m_default_payment_method_id = default_payment_method_id;
    m_default_payment_method_id_isSet = true;
}

bool OAIAccountUpdateRequest::is_default_payment_method_id_Set() const{
    return m_default_payment_method_id_isSet;
}

bool OAIAccountUpdateRequest::is_default_payment_method_id_Valid() const{
    return m_default_payment_method_id_isValid;
}

QString OAIAccountUpdateRequest::getFirstName() const {
    return m_first_name;
}
void OAIAccountUpdateRequest::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIAccountUpdateRequest::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIAccountUpdateRequest::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIAccountUpdateRequest::getLastName() const {
    return m_last_name;
}
void OAIAccountUpdateRequest::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIAccountUpdateRequest::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIAccountUpdateRequest::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIAccountUpdateRequest::getMinRatingPlaybackGuard() const {
    return m_min_rating_playback_guard;
}
void OAIAccountUpdateRequest::setMinRatingPlaybackGuard(const QString &min_rating_playback_guard) {
    m_min_rating_playback_guard = min_rating_playback_guard;
    m_min_rating_playback_guard_isSet = true;
}

bool OAIAccountUpdateRequest::is_min_rating_playback_guard_Set() const{
    return m_min_rating_playback_guard_isSet;
}

bool OAIAccountUpdateRequest::is_min_rating_playback_guard_Valid() const{
    return m_min_rating_playback_guard_isValid;
}

QList<QString> OAIAccountUpdateRequest::getSegments() const {
    return m_segments;
}
void OAIAccountUpdateRequest::setSegments(const QList<QString> &segments) {
    m_segments = segments;
    m_segments_isSet = true;
}

bool OAIAccountUpdateRequest::is_segments_Set() const{
    return m_segments_isSet;
}

bool OAIAccountUpdateRequest::is_segments_Valid() const{
    return m_segments_isValid;
}

bool OAIAccountUpdateRequest::isTrackingEnabled() const {
    return m_tracking_enabled;
}
void OAIAccountUpdateRequest::setTrackingEnabled(const bool &tracking_enabled) {
    m_tracking_enabled = tracking_enabled;
    m_tracking_enabled_isSet = true;
}

bool OAIAccountUpdateRequest::is_tracking_enabled_Set() const{
    return m_tracking_enabled_isSet;
}

bool OAIAccountUpdateRequest::is_tracking_enabled_Valid() const{
    return m_tracking_enabled_isValid;
}

bool OAIAccountUpdateRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_payment_instrument_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_payment_method_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_min_rating_playback_guard_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_segments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_tracking_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAccountUpdateRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
