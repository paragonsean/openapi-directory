/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBtPlanListItem.h
 *
 * 
 */

#ifndef OAIBtPlanListItem_H
#define OAIBtPlanListItem_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIBtPlanListItem : public OAIObject {
public:
    OAIBtPlanListItem();
    OAIBtPlanListItem(QString json);
    ~OAIBtPlanListItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getAmount() const;
    void setAmount(const float &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    QString getCtaText() const;
    void setCtaText(const QString &cta_text);
    bool is_cta_text_Set() const;
    bool is_cta_text_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getEes07PlanDescription() const;
    void setEes07PlanDescription(const QString &ees07_plan_description);
    bool is_ees07_plan_description_Set() const;
    bool is_ees07_plan_description_Valid() const;

    QString getEes07PlanTitle() const;
    void setEes07PlanTitle(const QString &ees07_plan_title);
    bool is_ees07_plan_title_Set() const;
    bool is_ees07_plan_title_Valid() const;

    QString getEes07Title() const;
    void setEes07Title(const QString &ees07_title);
    bool is_ees07_title_Set() const;
    bool is_ees07_title_Valid() const;

    QString getHeaderText() const;
    void setHeaderText(const QString &header_text);
    bool is_header_text_Set() const;
    bool is_header_text_Valid() const;

    QString getHeroText() const;
    void setHeroText(const QString &hero_text);
    bool is_hero_text_Set() const;
    bool is_hero_text_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getInterval() const;
    void setInterval(const QString &interval);
    bool is_interval_Set() const;
    bool is_interval_Valid() const;

    qint32 getIntervalCount() const;
    void setIntervalCount(const qint32 &interval_count);
    bool is_interval_count_Set() const;
    bool is_interval_count_Valid() const;

    QString getLongText() const;
    void setLongText(const QString &long_text);
    bool is_long_text_Set() const;
    bool is_long_text_Valid() const;

    QString getNickname() const;
    void setNickname(const QString &nickname);
    bool is_nickname_Set() const;
    bool is_nickname_Valid() const;

    QString getNoThanksText() const;
    void setNoThanksText(const QString &no_thanks_text);
    bool is_no_thanks_text_Set() const;
    bool is_no_thanks_text_Valid() const;

    QString getProduct() const;
    void setProduct(const QString &product);
    bool is_product_Set() const;
    bool is_product_Valid() const;

    QString getSwitchingText() const;
    void setSwitchingText(const QString &switching_text);
    bool is_switching_text_Set() const;
    bool is_switching_text_Valid() const;

    QString getTermsAndConditionsItunes() const;
    void setTermsAndConditionsItunes(const QString &terms_and_conditions_itunes);
    bool is_terms_and_conditions_itunes_Set() const;
    bool is_terms_and_conditions_itunes_Valid() const;

    QString getTermsAndConditionsStripe() const;
    void setTermsAndConditionsStripe(const QString &terms_and_conditions_stripe);
    bool is_terms_and_conditions_stripe_Set() const;
    bool is_terms_and_conditions_stripe_Valid() const;

    qint32 getTrialPeriodDays() const;
    void setTrialPeriodDays(const qint32 &trial_period_days);
    bool is_trial_period_days_Set() const;
    bool is_trial_period_days_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    QString m_cta_text;
    bool m_cta_text_isSet;
    bool m_cta_text_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_ees07_plan_description;
    bool m_ees07_plan_description_isSet;
    bool m_ees07_plan_description_isValid;

    QString m_ees07_plan_title;
    bool m_ees07_plan_title_isSet;
    bool m_ees07_plan_title_isValid;

    QString m_ees07_title;
    bool m_ees07_title_isSet;
    bool m_ees07_title_isValid;

    QString m_header_text;
    bool m_header_text_isSet;
    bool m_header_text_isValid;

    QString m_hero_text;
    bool m_hero_text_isSet;
    bool m_hero_text_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_interval;
    bool m_interval_isSet;
    bool m_interval_isValid;

    qint32 m_interval_count;
    bool m_interval_count_isSet;
    bool m_interval_count_isValid;

    QString m_long_text;
    bool m_long_text_isSet;
    bool m_long_text_isValid;

    QString m_nickname;
    bool m_nickname_isSet;
    bool m_nickname_isValid;

    QString m_no_thanks_text;
    bool m_no_thanks_text_isSet;
    bool m_no_thanks_text_isValid;

    QString m_product;
    bool m_product_isSet;
    bool m_product_isValid;

    QString m_switching_text;
    bool m_switching_text_isSet;
    bool m_switching_text_isValid;

    QString m_terms_and_conditions_itunes;
    bool m_terms_and_conditions_itunes_isSet;
    bool m_terms_and_conditions_itunes_isValid;

    QString m_terms_and_conditions_stripe;
    bool m_terms_and_conditions_stripe_isSet;
    bool m_terms_and_conditions_stripe_isValid;

    qint32 m_trial_period_days;
    bool m_trial_period_days_isSet;
    bool m_trial_period_days_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBtPlanListItem)

#endif // OAIBtPlanListItem_H
