/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAccountDevices.h
 *
 * 
 */

#ifndef OAIAccountDevices_H
#define OAIAccountDevices_H

#include <QJsonObject>

#include "OAIDevice.h"
#include "OAIDeviceRegistrationWindow.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDeviceRegistrationWindow;
class OAIDevice;

class OAIAccountDevices : public OAIObject {
public:
    OAIAccountDevices();
    OAIAccountDevices(QString json);
    ~OAIAccountDevices() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIDeviceRegistrationWindow getDeregistrationWindow() const;
    void setDeregistrationWindow(const OAIDeviceRegistrationWindow &deregistration_window);
    bool is_deregistration_window_Set() const;
    bool is_deregistration_window_Valid() const;

    QList<OAIDevice> getDevices() const;
    void setDevices(const QList<OAIDevice> &devices);
    bool is_devices_Set() const;
    bool is_devices_Valid() const;

    qint32 getMaxRegistered() const;
    void setMaxRegistered(const qint32 &max_registered);
    bool is_max_registered_Set() const;
    bool is_max_registered_Valid() const;

    OAIDeviceRegistrationWindow getRegistrationWindow() const;
    void setRegistrationWindow(const OAIDeviceRegistrationWindow &registration_window);
    bool is_registration_window_Set() const;
    bool is_registration_window_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIDeviceRegistrationWindow m_deregistration_window;
    bool m_deregistration_window_isSet;
    bool m_deregistration_window_isValid;

    QList<OAIDevice> m_devices;
    bool m_devices_isSet;
    bool m_devices_isValid;

    qint32 m_max_registered;
    bool m_max_registered_isSet;
    bool m_max_registered_isValid;

    OAIDeviceRegistrationWindow m_registration_window;
    bool m_registration_window_isSet;
    bool m_registration_window_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAccountDevices)

#endif // OAIAccountDevices_H
