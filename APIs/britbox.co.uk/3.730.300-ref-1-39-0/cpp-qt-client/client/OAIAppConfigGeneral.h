/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAppConfigGeneral.h
 *
 * 
 */

#ifndef OAIAppConfigGeneral_H
#define OAIAppConfigGeneral_H

#include <QJsonObject>

#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAppConfigGeneral : public OAIObject {
public:
    OAIAppConfigGeneral();
    OAIAppConfigGeneral(QString json);
    ~OAIAppConfigGeneral() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    QMap<QString, QJsonValue> getCustomFields() const;
    void setCustomFields(const QMap<QString, QJsonValue> &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QString getDefaultTimeZone() const;
    void setDefaultTimeZone(const QString &default_time_zone);
    bool is_default_time_zone_Set() const;
    bool is_default_time_zone_Valid() const;

    QString getFacebookAppId() const;
    void setFacebookAppId(const QString &facebook_app_id);
    bool is_facebook_app_id_Set() const;
    bool is_facebook_app_id_Valid() const;

    QString getGaToken() const;
    void setGaToken(const QString &ga_token);
    bool is_ga_token_Set() const;
    bool is_ga_token_Valid() const;

    QMap<QString, QString> getItemImageTypes() const;
    void setItemImageTypes(const QMap<QString, QString> &item_image_types);
    bool is_item_image_types_Set() const;
    bool is_item_image_types_Valid() const;

    bool isMandatorySignIn() const;
    void setMandatorySignIn(const bool &mandatory_sign_in);
    bool is_mandatory_sign_in_Set() const;
    bool is_mandatory_sign_in_Valid() const;

    qint32 getMaxUserRating() const;
    void setMaxUserRating(const qint32 &max_user_rating);
    bool is_max_user_rating_Set() const;
    bool is_max_user_rating_Valid() const;

    QString getStripeKey() const;
    void setStripeKey(const QString &stripe_key);
    bool is_stripe_key_Set() const;
    bool is_stripe_key_Valid() const;

    QString getWebsiteUrl() const;
    void setWebsiteUrl(const QString &website_url);
    bool is_website_url_Set() const;
    bool is_website_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    QMap<QString, QJsonValue> m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QString m_default_time_zone;
    bool m_default_time_zone_isSet;
    bool m_default_time_zone_isValid;

    QString m_facebook_app_id;
    bool m_facebook_app_id_isSet;
    bool m_facebook_app_id_isValid;

    QString m_ga_token;
    bool m_ga_token_isSet;
    bool m_ga_token_isValid;

    QMap<QString, QString> m_item_image_types;
    bool m_item_image_types_isSet;
    bool m_item_image_types_isValid;

    bool m_mandatory_sign_in;
    bool m_mandatory_sign_in_isSet;
    bool m_mandatory_sign_in_isValid;

    qint32 m_max_user_rating;
    bool m_max_user_rating_isSet;
    bool m_max_user_rating_isValid;

    QString m_stripe_key;
    bool m_stripe_key_isSet;
    bool m_stripe_key_isValid;

    QString m_website_url;
    bool m_website_url_isSet;
    bool m_website_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAppConfigGeneral)

#endif // OAIAppConfigGeneral_H
