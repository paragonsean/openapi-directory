/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAppConfigLinear.h
 *
 * 
 */

#ifndef OAIAppConfigLinear_H
#define OAIAppConfigLinear_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIAppConfigLinear : public OAIObject {
public:
    OAIAppConfigLinear();
    OAIAppConfigLinear(QString json);
    ~OAIAppConfigLinear() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getScheduleCacheMaxAgeMinutes() const;
    void setScheduleCacheMaxAgeMinutes(const qint32 &schedule_cache_max_age_minutes);
    bool is_schedule_cache_max_age_minutes_Set() const;
    bool is_schedule_cache_max_age_minutes_Valid() const;

    qint32 getViewingWindowDaysAfter() const;
    void setViewingWindowDaysAfter(const qint32 &viewing_window_days_after);
    bool is_viewing_window_days_after_Set() const;
    bool is_viewing_window_days_after_Valid() const;

    qint32 getViewingWindowDaysBefore() const;
    void setViewingWindowDaysBefore(const qint32 &viewing_window_days_before);
    bool is_viewing_window_days_before_Set() const;
    bool is_viewing_window_days_before_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_schedule_cache_max_age_minutes;
    bool m_schedule_cache_max_age_minutes_isSet;
    bool m_schedule_cache_max_age_minutes_isValid;

    qint32 m_viewing_window_days_after;
    bool m_viewing_window_days_after_isSet;
    bool m_viewing_window_days_after_isValid;

    qint32 m_viewing_window_days_before;
    bool m_viewing_window_days_before_isSet;
    bool m_viewing_window_days_before_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAppConfigLinear)

#endif // OAIAppConfigLinear_H
