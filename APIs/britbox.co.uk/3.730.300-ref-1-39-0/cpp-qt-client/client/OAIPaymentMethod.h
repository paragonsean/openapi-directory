/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPaymentMethod.h
 *
 * 
 */

#ifndef OAIPaymentMethod_H
#define OAIPaymentMethod_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPaymentMethod : public OAIObject {
public:
    OAIPaymentMethod();
    OAIPaymentMethod(QString json);
    ~OAIPaymentMethod() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    float getBalance() const;
    void setBalance(const float &balance);
    bool is_balance_Set() const;
    bool is_balance_Valid() const;

    QString getBrand() const;
    void setBrand(const QString &brand);
    bool is_brand_Set() const;
    bool is_brand_Valid() const;

    QString getCurrency() const;
    void setCurrency(const QString &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    double getExpiryMonth() const;
    void setExpiryMonth(const double &expiry_month);
    bool is_expiry_month_Set() const;
    bool is_expiry_month_Valid() const;

    double getExpiryYear() const;
    void setExpiryYear(const double &expiry_year);
    bool is_expiry_year_Set() const;
    bool is_expiry_year_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    double getLastDigits() const;
    void setLastDigits(const double &last_digits);
    bool is_last_digits_Set() const;
    bool is_last_digits_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    float m_balance;
    bool m_balance_isSet;
    bool m_balance_isValid;

    QString m_brand;
    bool m_brand_isSet;
    bool m_brand_isValid;

    QString m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    double m_expiry_month;
    bool m_expiry_month_isSet;
    bool m_expiry_month_isValid;

    double m_expiry_year;
    bool m_expiry_year_isSet;
    bool m_expiry_year_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    double m_last_digits;
    bool m_last_digits_isSet;
    bool m_last_digits_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPaymentMethod)

#endif // OAIPaymentMethod_H
