/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIWatched.h
 *
 * 
 */

#ifndef OAIWatched_H
#define OAIWatched_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIWatched : public OAIObject {
public:
    OAIWatched();
    OAIWatched(QString json);
    ~OAIWatched() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getFirstWatchedDate() const;
    void setFirstWatchedDate(const QDateTime &first_watched_date);
    bool is_first_watched_date_Set() const;
    bool is_first_watched_date_Valid() const;

    bool isIsFullyWatched() const;
    void setIsFullyWatched(const bool &is_fully_watched);
    bool is_is_fully_watched_Set() const;
    bool is_is_fully_watched_Valid() const;

    QString getItemId() const;
    void setItemId(const QString &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    QDateTime getLastWatchedDate() const;
    void setLastWatchedDate(const QDateTime &last_watched_date);
    bool is_last_watched_date_Set() const;
    bool is_last_watched_date_Valid() const;

    qint32 getPosition() const;
    void setPosition(const qint32 &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_first_watched_date;
    bool m_first_watched_date_isSet;
    bool m_first_watched_date_isValid;

    bool m_is_fully_watched;
    bool m_is_fully_watched_isSet;
    bool m_is_fully_watched_isValid;

    QString m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    QDateTime m_last_watched_date;
    bool m_last_watched_date_isSet;
    bool m_last_watched_date_isValid;

    qint32 m_position;
    bool m_position_isSet;
    bool m_position_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIWatched)

#endif // OAIWatched_H
