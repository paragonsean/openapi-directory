/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItvCurrentSubscription.h
 *
 * 
 */

#ifndef OAIItvCurrentSubscription_H
#define OAIItvCurrentSubscription_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIItvCurrentSubscription : public OAIObject {
public:
    OAIItvCurrentSubscription();
    OAIItvCurrentSubscription(QString json);
    ~OAIItvCurrentSubscription() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isCancelAtPeriodEnd() const;
    void setCancelAtPeriodEnd(const bool &cancel_at_period_end);
    bool is_cancel_at_period_end_Set() const;
    bool is_cancel_at_period_end_Valid() const;

    QString getCollectionMethod() const;
    void setCollectionMethod(const QString &collection_method);
    bool is_collection_method_Set() const;
    bool is_collection_method_Valid() const;

    qint32 getCreated() const;
    void setCreated(const qint32 &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    qint32 getCurrentPeriodEnd() const;
    void setCurrentPeriodEnd(const qint32 &current_period_end);
    bool is_current_period_end_Set() const;
    bool is_current_period_end_Valid() const;

    qint32 getCurrentPeriodStart() const;
    void setCurrentPeriodStart(const qint32 &current_period_start);
    bool is_current_period_start_Set() const;
    bool is_current_period_start_Valid() const;

    OAIObject getPlan() const;
    void setPlan(const OAIObject &plan);
    bool is_plan_Set() const;
    bool is_plan_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_cancel_at_period_end;
    bool m_cancel_at_period_end_isSet;
    bool m_cancel_at_period_end_isValid;

    QString m_collection_method;
    bool m_collection_method_isSet;
    bool m_collection_method_isValid;

    qint32 m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    qint32 m_current_period_end;
    bool m_current_period_end_isSet;
    bool m_current_period_end_isValid;

    qint32 m_current_period_start;
    bool m_current_period_start_isSet;
    bool m_current_period_start_isValid;

    OAIObject m_plan;
    bool m_plan_isSet;
    bool m_plan_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItvCurrentSubscription)

#endif // OAIItvCurrentSubscription_H
