/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIItvVoucherDisplay.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIItvVoucherDisplay::OAIItvVoucherDisplay(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIItvVoucherDisplay::OAIItvVoucherDisplay() {
    this->initializeModel();
}

OAIItvVoucherDisplay::~OAIItvVoucherDisplay() {}

void OAIItvVoucherDisplay::initializeModel() {

    m_currency_isSet = false;
    m_currency_isValid = false;

    m_discount_price_isSet = false;
    m_discount_price_isValid = false;

    m_duration_isSet = false;
    m_duration_isValid = false;

    m_duration_in_months_isSet = false;
    m_duration_in_months_isValid = false;

    m_headline_label_isSet = false;
    m_headline_label_isValid = false;

    m_initial_cost_isSet = false;
    m_initial_cost_isValid = false;

    m_long_description_isSet = false;
    m_long_description_isValid = false;

    m_percent_off_isSet = false;
    m_percent_off_isValid = false;

    m_saving_label_isSet = false;
    m_saving_label_isValid = false;

    m_short_description_isSet = false;
    m_short_description_isValid = false;
}

void OAIItvVoucherDisplay::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIItvVoucherDisplay::fromJsonObject(QJsonObject json) {

    m_currency_isValid = ::OpenAPI::fromJsonValue(m_currency, json[QString("currency")]);
    m_currency_isSet = !json[QString("currency")].isNull() && m_currency_isValid;

    m_discount_price_isValid = ::OpenAPI::fromJsonValue(m_discount_price, json[QString("discountPrice")]);
    m_discount_price_isSet = !json[QString("discountPrice")].isNull() && m_discount_price_isValid;

    m_duration_isValid = ::OpenAPI::fromJsonValue(m_duration, json[QString("duration")]);
    m_duration_isSet = !json[QString("duration")].isNull() && m_duration_isValid;

    m_duration_in_months_isValid = ::OpenAPI::fromJsonValue(m_duration_in_months, json[QString("durationInMonths")]);
    m_duration_in_months_isSet = !json[QString("durationInMonths")].isNull() && m_duration_in_months_isValid;

    m_headline_label_isValid = ::OpenAPI::fromJsonValue(m_headline_label, json[QString("headlineLabel")]);
    m_headline_label_isSet = !json[QString("headlineLabel")].isNull() && m_headline_label_isValid;

    m_initial_cost_isValid = ::OpenAPI::fromJsonValue(m_initial_cost, json[QString("initialCost")]);
    m_initial_cost_isSet = !json[QString("initialCost")].isNull() && m_initial_cost_isValid;

    m_long_description_isValid = ::OpenAPI::fromJsonValue(m_long_description, json[QString("longDescription")]);
    m_long_description_isSet = !json[QString("longDescription")].isNull() && m_long_description_isValid;

    m_percent_off_isValid = ::OpenAPI::fromJsonValue(m_percent_off, json[QString("percentOff")]);
    m_percent_off_isSet = !json[QString("percentOff")].isNull() && m_percent_off_isValid;

    m_saving_label_isValid = ::OpenAPI::fromJsonValue(m_saving_label, json[QString("savingLabel")]);
    m_saving_label_isSet = !json[QString("savingLabel")].isNull() && m_saving_label_isValid;

    m_short_description_isValid = ::OpenAPI::fromJsonValue(m_short_description, json[QString("shortDescription")]);
    m_short_description_isSet = !json[QString("shortDescription")].isNull() && m_short_description_isValid;
}

QString OAIItvVoucherDisplay::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIItvVoucherDisplay::asJsonObject() const {
    QJsonObject obj;
    if (m_currency_isSet) {
        obj.insert(QString("currency"), ::OpenAPI::toJsonValue(m_currency));
    }
    if (m_discount_price_isSet) {
        obj.insert(QString("discountPrice"), ::OpenAPI::toJsonValue(m_discount_price));
    }
    if (m_duration_isSet) {
        obj.insert(QString("duration"), ::OpenAPI::toJsonValue(m_duration));
    }
    if (m_duration_in_months_isSet) {
        obj.insert(QString("durationInMonths"), ::OpenAPI::toJsonValue(m_duration_in_months));
    }
    if (m_headline_label_isSet) {
        obj.insert(QString("headlineLabel"), ::OpenAPI::toJsonValue(m_headline_label));
    }
    if (m_initial_cost_isSet) {
        obj.insert(QString("initialCost"), ::OpenAPI::toJsonValue(m_initial_cost));
    }
    if (m_long_description_isSet) {
        obj.insert(QString("longDescription"), ::OpenAPI::toJsonValue(m_long_description));
    }
    if (m_percent_off_isSet) {
        obj.insert(QString("percentOff"), ::OpenAPI::toJsonValue(m_percent_off));
    }
    if (m_saving_label_isSet) {
        obj.insert(QString("savingLabel"), ::OpenAPI::toJsonValue(m_saving_label));
    }
    if (m_short_description_isSet) {
        obj.insert(QString("shortDescription"), ::OpenAPI::toJsonValue(m_short_description));
    }
    return obj;
}

QString OAIItvVoucherDisplay::getCurrency() const {
    return m_currency;
}
void OAIItvVoucherDisplay::setCurrency(const QString &currency) {
    m_currency = currency;
    m_currency_isSet = true;
}

bool OAIItvVoucherDisplay::is_currency_Set() const{
    return m_currency_isSet;
}

bool OAIItvVoucherDisplay::is_currency_Valid() const{
    return m_currency_isValid;
}

QString OAIItvVoucherDisplay::getDiscountPrice() const {
    return m_discount_price;
}
void OAIItvVoucherDisplay::setDiscountPrice(const QString &discount_price) {
    m_discount_price = discount_price;
    m_discount_price_isSet = true;
}

bool OAIItvVoucherDisplay::is_discount_price_Set() const{
    return m_discount_price_isSet;
}

bool OAIItvVoucherDisplay::is_discount_price_Valid() const{
    return m_discount_price_isValid;
}

QString OAIItvVoucherDisplay::getDuration() const {
    return m_duration;
}
void OAIItvVoucherDisplay::setDuration(const QString &duration) {
    m_duration = duration;
    m_duration_isSet = true;
}

bool OAIItvVoucherDisplay::is_duration_Set() const{
    return m_duration_isSet;
}

bool OAIItvVoucherDisplay::is_duration_Valid() const{
    return m_duration_isValid;
}

double OAIItvVoucherDisplay::getDurationInMonths() const {
    return m_duration_in_months;
}
void OAIItvVoucherDisplay::setDurationInMonths(const double &duration_in_months) {
    m_duration_in_months = duration_in_months;
    m_duration_in_months_isSet = true;
}

bool OAIItvVoucherDisplay::is_duration_in_months_Set() const{
    return m_duration_in_months_isSet;
}

bool OAIItvVoucherDisplay::is_duration_in_months_Valid() const{
    return m_duration_in_months_isValid;
}

QString OAIItvVoucherDisplay::getHeadlineLabel() const {
    return m_headline_label;
}
void OAIItvVoucherDisplay::setHeadlineLabel(const QString &headline_label) {
    m_headline_label = headline_label;
    m_headline_label_isSet = true;
}

bool OAIItvVoucherDisplay::is_headline_label_Set() const{
    return m_headline_label_isSet;
}

bool OAIItvVoucherDisplay::is_headline_label_Valid() const{
    return m_headline_label_isValid;
}

float OAIItvVoucherDisplay::getInitialCost() const {
    return m_initial_cost;
}
void OAIItvVoucherDisplay::setInitialCost(const float &initial_cost) {
    m_initial_cost = initial_cost;
    m_initial_cost_isSet = true;
}

bool OAIItvVoucherDisplay::is_initial_cost_Set() const{
    return m_initial_cost_isSet;
}

bool OAIItvVoucherDisplay::is_initial_cost_Valid() const{
    return m_initial_cost_isValid;
}

QString OAIItvVoucherDisplay::getLongDescription() const {
    return m_long_description;
}
void OAIItvVoucherDisplay::setLongDescription(const QString &long_description) {
    m_long_description = long_description;
    m_long_description_isSet = true;
}

bool OAIItvVoucherDisplay::is_long_description_Set() const{
    return m_long_description_isSet;
}

bool OAIItvVoucherDisplay::is_long_description_Valid() const{
    return m_long_description_isValid;
}

float OAIItvVoucherDisplay::getPercentOff() const {
    return m_percent_off;
}
void OAIItvVoucherDisplay::setPercentOff(const float &percent_off) {
    m_percent_off = percent_off;
    m_percent_off_isSet = true;
}

bool OAIItvVoucherDisplay::is_percent_off_Set() const{
    return m_percent_off_isSet;
}

bool OAIItvVoucherDisplay::is_percent_off_Valid() const{
    return m_percent_off_isValid;
}

QString OAIItvVoucherDisplay::getSavingLabel() const {
    return m_saving_label;
}
void OAIItvVoucherDisplay::setSavingLabel(const QString &saving_label) {
    m_saving_label = saving_label;
    m_saving_label_isSet = true;
}

bool OAIItvVoucherDisplay::is_saving_label_Set() const{
    return m_saving_label_isSet;
}

bool OAIItvVoucherDisplay::is_saving_label_Valid() const{
    return m_saving_label_isValid;
}

QString OAIItvVoucherDisplay::getShortDescription() const {
    return m_short_description;
}
void OAIItvVoucherDisplay::setShortDescription(const QString &short_description) {
    m_short_description = short_description;
    m_short_description_isSet = true;
}

bool OAIItvVoucherDisplay::is_short_description_Set() const{
    return m_short_description_isSet;
}

bool OAIItvVoucherDisplay::is_short_description_Valid() const{
    return m_short_description_isValid;
}

bool OAIItvVoucherDisplay::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_currency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_duration_in_months_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_headline_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_initial_cost_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_long_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percent_off_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_saving_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_description_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIItvVoucherDisplay::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
