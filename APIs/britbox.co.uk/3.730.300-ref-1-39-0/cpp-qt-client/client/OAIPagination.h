/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPagination.h
 *
 * 
 */

#ifndef OAIPagination_H
#define OAIPagination_H

#include <QJsonObject>

#include "OAIPaginationAuth.h"
#include "OAIPaginationOptions.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPaginationAuth;
class OAIPaginationOptions;

class OAIPagination : public OAIObject {
public:
    OAIPagination();
    OAIPagination(QString json);
    ~OAIPagination() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIPaginationAuth getAuthorization() const;
    void setAuthorization(const OAIPaginationAuth &authorization);
    bool is_authorization_Set() const;
    bool is_authorization_Valid() const;

    QString getNext() const;
    void setNext(const QString &next);
    bool is_next_Set() const;
    bool is_next_Valid() const;

    OAIPaginationOptions getOptions() const;
    void setOptions(const OAIPaginationOptions &options);
    bool is_options_Set() const;
    bool is_options_Valid() const;

    qint32 getPage() const;
    void setPage(const qint32 &page);
    bool is_page_Set() const;
    bool is_page_Valid() const;

    QString getPrevious() const;
    void setPrevious(const QString &previous);
    bool is_previous_Set() const;
    bool is_previous_Valid() const;

    qint32 getSize() const;
    void setSize(const qint32 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIPaginationAuth m_authorization;
    bool m_authorization_isSet;
    bool m_authorization_isValid;

    QString m_next;
    bool m_next_isSet;
    bool m_next_isValid;

    OAIPaginationOptions m_options;
    bool m_options_isSet;
    bool m_options_isValid;

    qint32 m_page;
    bool m_page_isSet;
    bool m_page_isValid;

    QString m_previous;
    bool m_previous_isSet;
    bool m_previous_isValid;

    qint32 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    qint32 m_total;
    bool m_total_isSet;
    bool m_total_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPagination)

#endif // OAIPagination_H
