/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItemList.h
 *
 * A pageable list of items.
 */

#ifndef OAIItemList_H
#define OAIItemList_H

#include <QJsonObject>

#include "OAIItemSummary.h"
#include "OAIListData.h"
#include "OAIPagination.h"
#include "OAITheme.h"
#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIItemSummary;
class OAIListData;
class OAIPagination;
class OAITheme;

class OAIItemList : public OAIObject {
public:
    OAIItemList();
    OAIItemList(QString json);
    ~OAIItemList() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QMap<QString, QJsonValue> getCustomFields() const;
    void setCustomFields(const QMap<QString, QJsonValue> &custom_fields);
    bool is_custom_fields_Set() const;
    bool is_custom_fields_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QMap<QString, QString> getImages() const;
    void setImages(const QMap<QString, QString> &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    QList<QString> getItemTypes() const;
    void setItemTypes(const QList<QString> &item_types);
    bool is_item_types_Set() const;
    bool is_item_types_Valid() const;

    QList<OAIItemSummary> getItems() const;
    void setItems(const QList<OAIItemSummary> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    OAIListData getListData() const;
    void setListData(const OAIListData &list_data);
    bool is_list_data_Set() const;
    bool is_list_data_Valid() const;

    OAIPagination getPaging() const;
    void setPaging(const OAIPagination &paging);
    bool is_paging_Set() const;
    bool is_paging_Valid() const;

    QString getParameter() const;
    void setParameter(const QString &parameter);
    bool is_parameter_Set() const;
    bool is_parameter_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getShortDescription() const;
    void setShortDescription(const QString &short_description);
    bool is_short_description_Set() const;
    bool is_short_description_Valid() const;

    qint32 getSize() const;
    void setSize(const qint32 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    QString getTagline() const;
    void setTagline(const QString &tagline);
    bool is_tagline_Set() const;
    bool is_tagline_Valid() const;

    QList<OAITheme> getThemes() const;
    void setThemes(const QList<OAITheme> &themes);
    bool is_themes_Set() const;
    bool is_themes_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QMap<QString, QJsonValue> m_custom_fields;
    bool m_custom_fields_isSet;
    bool m_custom_fields_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QMap<QString, QString> m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    QList<QString> m_item_types;
    bool m_item_types_isSet;
    bool m_item_types_isValid;

    QList<OAIItemSummary> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    OAIListData m_list_data;
    bool m_list_data_isSet;
    bool m_list_data_isValid;

    OAIPagination m_paging;
    bool m_paging_isSet;
    bool m_paging_isValid;

    QString m_parameter;
    bool m_parameter_isSet;
    bool m_parameter_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_short_description;
    bool m_short_description_isSet;
    bool m_short_description_isValid;

    qint32 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    QString m_tagline;
    bool m_tagline_isSet;
    bool m_tagline_isValid;

    QList<OAITheme> m_themes;
    bool m_themes_isSet;
    bool m_themes_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItemList)

#endif // OAIItemList_H
