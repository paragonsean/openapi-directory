/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIItvEntitlementPlan.h
 *
 * 
 */

#ifndef OAIItvEntitlementPlan_H
#define OAIItvEntitlementPlan_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIItvEntitlementPlan : public OAIObject {
public:
    OAIItvEntitlementPlan();
    OAIItvEntitlementPlan(QString json);
    ~OAIItvEntitlementPlan() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCost() const;
    void setCost(const qint32 &cost);
    bool is_cost_Set() const;
    bool is_cost_Valid() const;

    QString getInterval() const;
    void setInterval(const QString &interval);
    bool is_interval_Set() const;
    bool is_interval_Valid() const;

    qint32 getTrialLength() const;
    void setTrialLength(const qint32 &trial_length);
    bool is_trial_length_Set() const;
    bool is_trial_length_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_cost;
    bool m_cost_isSet;
    bool m_cost_isValid;

    QString m_interval;
    bool m_interval_isSet;
    bool m_interval_isValid;

    qint32 m_trial_length;
    bool m_trial_length_isSet;
    bool m_trial_length_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIItvEntitlementPlan)

#endif // OAIItvEntitlementPlan_H
