/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINextPlaybackItem.h
 *
 * 
 */

#ifndef OAINextPlaybackItem_H
#define OAINextPlaybackItem_H

#include <QJsonObject>

#include "OAIItemDetail.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIItemDetail;

class OAINextPlaybackItem : public OAIObject {
public:
    OAINextPlaybackItem();
    OAINextPlaybackItem(QString json);
    ~OAINextPlaybackItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getFirstWatchedDate() const;
    void setFirstWatchedDate(const QDateTime &first_watched_date);
    bool is_first_watched_date_Set() const;
    bool is_first_watched_date_Valid() const;

    QDateTime getLastWatchedDate() const;
    void setLastWatchedDate(const QDateTime &last_watched_date);
    bool is_last_watched_date_Set() const;
    bool is_last_watched_date_Valid() const;

    OAIItemDetail getNext() const;
    void setNext(const OAIItemDetail &next);
    bool is_next_Set() const;
    bool is_next_Valid() const;

    QString getSourceItemId() const;
    void setSourceItemId(const QString &source_item_id);
    bool is_source_item_id_Set() const;
    bool is_source_item_id_Valid() const;

    QString getSuggestionType() const;
    void setSuggestionType(const QString &suggestion_type);
    bool is_suggestion_type_Set() const;
    bool is_suggestion_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_first_watched_date;
    bool m_first_watched_date_isSet;
    bool m_first_watched_date_isValid;

    QDateTime m_last_watched_date;
    bool m_last_watched_date_isSet;
    bool m_last_watched_date_isValid;

    OAIItemDetail m_next;
    bool m_next_isSet;
    bool m_next_isValid;

    QString m_source_item_id;
    bool m_source_item_id_isSet;
    bool m_source_item_id_isValid;

    QString m_suggestion_type;
    bool m_suggestion_type_isSet;
    bool m_suggestion_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINextPlaybackItem)

#endif // OAINextPlaybackItem_H
