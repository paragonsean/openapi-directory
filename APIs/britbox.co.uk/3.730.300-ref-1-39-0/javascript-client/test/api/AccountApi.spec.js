/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.RocketServices);
  }
}(this, function(expect, RocketServices) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new RocketServices.AccountApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AccountApi', function() {
    describe('addPaymentMethod', function() {
      it('should call addPaymentMethod successfully', function(done) {
        //uncomment below and update the code to test addPaymentMethod
        //instance.addPaymentMethod(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('authorizeDevice', function() {
      it('should call authorizeDevice successfully', function(done) {
        //uncomment below and update the code to test authorizeDevice
        //instance.authorizeDevice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('cancelSubscription', function() {
      it('should call cancelSubscription successfully', function(done) {
        //uncomment below and update the code to test cancelSubscription
        //instance.cancelSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('changePassword', function() {
      it('should call changePassword successfully', function(done) {
        //uncomment below and update the code to test changePassword
        //instance.changePassword(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('changePin', function() {
      it('should call changePin successfully', function(done) {
        //uncomment below and update the code to test changePin
        //instance.changePin(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createProfile', function() {
      it('should call createProfile successfully', function(done) {
        //uncomment below and update the code to test createProfile
        //instance.createProfile(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteProfileWithId', function() {
      it('should call deleteProfileWithId successfully', function(done) {
        //uncomment below and update the code to test deleteProfileWithId
        //instance.deleteProfileWithId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deregisterDevice', function() {
      it('should call deregisterDevice successfully', function(done) {
        //uncomment below and update the code to test deregisterDevice
        //instance.deregisterDevice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('generateNonce', function() {
      it('should call generateNonce successfully', function(done) {
        //uncomment below and update the code to test generateNonce
        //instance.generateNonce(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAccount', function() {
      it('should call getAccount successfully', function(done) {
        //uncomment below and update the code to test getAccount
        //instance.getAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDevice', function() {
      it('should call getDevice successfully', function(done) {
        //uncomment below and update the code to test getDevice
        //instance.getDevice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDevices', function() {
      it('should call getDevices successfully', function(done) {
        //uncomment below and update the code to test getDevices
        //instance.getDevices(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEntitlements', function() {
      it('should call getEntitlements successfully', function(done) {
        //uncomment below and update the code to test getEntitlements
        //instance.getEntitlements(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getItemMediaFiles', function() {
      it('should call getItemMediaFiles successfully', function(done) {
        //uncomment below and update the code to test getItemMediaFiles
        //instance.getItemMediaFiles(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getItemMediaFilesGuarded', function() {
      it('should call getItemMediaFilesGuarded successfully', function(done) {
        //uncomment below and update the code to test getItemMediaFilesGuarded
        //instance.getItemMediaFilesGuarded(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPaymentMethod', function() {
      it('should call getPaymentMethod successfully', function(done) {
        //uncomment below and update the code to test getPaymentMethod
        //instance.getPaymentMethod(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPaymentMethods', function() {
      it('should call getPaymentMethods successfully', function(done) {
        //uncomment below and update the code to test getPaymentMethods
        //instance.getPaymentMethods(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getProfileWithId', function() {
      it('should call getProfileWithId successfully', function(done) {
        //uncomment below and update the code to test getProfileWithId
        //instance.getProfileWithId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getPurchases', function() {
      it('should call getPurchases successfully', function(done) {
        //uncomment below and update the code to test getPurchases
        //instance.getPurchases(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('makePurchase', function() {
      it('should call makePurchase successfully', function(done) {
        //uncomment below and update the code to test makePurchase
        //instance.makePurchase(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('registerDevice', function() {
      it('should call registerDevice successfully', function(done) {
        //uncomment below and update the code to test registerDevice
        //instance.registerDevice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('removePaymentMethod', function() {
      it('should call removePaymentMethod successfully', function(done) {
        //uncomment below and update the code to test removePaymentMethod
        //instance.removePaymentMethod(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('renameDevice', function() {
      it('should call renameDevice successfully', function(done) {
        //uncomment below and update the code to test renameDevice
        //instance.renameDevice(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('requestEmailVerification', function() {
      it('should call requestEmailVerification successfully', function(done) {
        //uncomment below and update the code to test requestEmailVerification
        //instance.requestEmailVerification(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateAccount', function() {
      it('should call updateAccount successfully', function(done) {
        //uncomment below and update the code to test updateAccount
        //instance.updateAccount(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateProfileWithId', function() {
      it('should call updateProfileWithId successfully', function(done) {
        //uncomment below and update the code to test updateProfileWithId
        //instance.updateProfileWithId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSubscription', function() {
      it('should call updateSubscription successfully', function(done) {
        //uncomment below and update the code to test updateSubscription
        //instance.updateSubscription(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
