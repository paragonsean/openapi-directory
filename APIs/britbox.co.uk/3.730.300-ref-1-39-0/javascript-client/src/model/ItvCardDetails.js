/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ItvCardDetails model module.
 * @module model/ItvCardDetails
 * @version 3.730.300-ref-1-39-0
 */
class ItvCardDetails {
    /**
     * Constructs a new <code>ItvCardDetails</code>.
     * @alias module:model/ItvCardDetails
     * @param cardType {String} The payment card type (Visa/Mastercard/etc).
     * @param expMonth {Number} Expiry date month.
     * @param expYear {Number} Expiry date year.
     * @param last4 {String} The last 4 digit of card number.
     */
    constructor(cardType, expMonth, expYear, last4) { 
        
        ItvCardDetails.initialize(this, cardType, expMonth, expYear, last4);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cardType, expMonth, expYear, last4) { 
        obj['card_type'] = cardType;
        obj['exp_month'] = expMonth;
        obj['exp_year'] = expYear;
        obj['last4'] = last4;
    }

    /**
     * Constructs a <code>ItvCardDetails</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ItvCardDetails} obj Optional instance to populate.
     * @return {module:model/ItvCardDetails} The populated <code>ItvCardDetails</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ItvCardDetails();

            if (data.hasOwnProperty('card_type')) {
                obj['card_type'] = ApiClient.convertToType(data['card_type'], 'String');
            }
            if (data.hasOwnProperty('exp_month')) {
                obj['exp_month'] = ApiClient.convertToType(data['exp_month'], 'Number');
            }
            if (data.hasOwnProperty('exp_year')) {
                obj['exp_year'] = ApiClient.convertToType(data['exp_year'], 'Number');
            }
            if (data.hasOwnProperty('last4')) {
                obj['last4'] = ApiClient.convertToType(data['last4'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ItvCardDetails</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ItvCardDetails</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ItvCardDetails.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['card_type'] && !(typeof data['card_type'] === 'string' || data['card_type'] instanceof String)) {
            throw new Error("Expected the field `card_type` to be a primitive type in the JSON string but got " + data['card_type']);
        }
        // ensure the json data is a string
        if (data['last4'] && !(typeof data['last4'] === 'string' || data['last4'] instanceof String)) {
            throw new Error("Expected the field `last4` to be a primitive type in the JSON string but got " + data['last4']);
        }

        return true;
    }


}

ItvCardDetails.RequiredProperties = ["card_type", "exp_month", "exp_year", "last4"];

/**
 * The payment card type (Visa/Mastercard/etc).
 * @member {String} card_type
 */
ItvCardDetails.prototype['card_type'] = undefined;

/**
 * Expiry date month.
 * @member {Number} exp_month
 */
ItvCardDetails.prototype['exp_month'] = undefined;

/**
 * Expiry date year.
 * @member {Number} exp_year
 */
ItvCardDetails.prototype['exp_year'] = undefined;

/**
 * The last 4 digit of card number.
 * @member {String} last4
 */
ItvCardDetails.prototype['last4'] = undefined;






export default ItvCardDetails;

