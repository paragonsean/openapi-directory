/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PaginationOptions model module.
 * @module model/PaginationOptions
 * @version 3.730.300-ref-1-39-0
 */
class PaginationOptions {
    /**
     * Constructs a new <code>PaginationOptions</code>.
     * @alias module:model/PaginationOptions
     */
    constructor() { 
        
        PaginationOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PaginationOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PaginationOptions} obj Optional instance to populate.
     * @return {module:model/PaginationOptions} The populated <code>PaginationOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PaginationOptions();

            if (data.hasOwnProperty('completed')) {
                obj['completed'] = ApiClient.convertToType(data['completed'], 'Boolean');
            }
            if (data.hasOwnProperty('itemType')) {
                obj['itemType'] = ApiClient.convertToType(data['itemType'], 'String');
            }
            if (data.hasOwnProperty('maxRating')) {
                obj['maxRating'] = ApiClient.convertToType(data['maxRating'], 'String');
            }
            if (data.hasOwnProperty('order')) {
                obj['order'] = ApiClient.convertToType(data['order'], 'String');
            }
            if (data.hasOwnProperty('orderBy')) {
                obj['orderBy'] = ApiClient.convertToType(data['orderBy'], 'String');
            }
            if (data.hasOwnProperty('pageSize')) {
                obj['pageSize'] = ApiClient.convertToType(data['pageSize'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PaginationOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PaginationOptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['itemType'] && !(typeof data['itemType'] === 'string' || data['itemType'] instanceof String)) {
            throw new Error("Expected the field `itemType` to be a primitive type in the JSON string but got " + data['itemType']);
        }
        // ensure the json data is a string
        if (data['maxRating'] && !(typeof data['maxRating'] === 'string' || data['maxRating'] instanceof String)) {
            throw new Error("Expected the field `maxRating` to be a primitive type in the JSON string but got " + data['maxRating']);
        }
        // ensure the json data is a string
        if (data['order'] && !(typeof data['order'] === 'string' || data['order'] instanceof String)) {
            throw new Error("Expected the field `order` to be a primitive type in the JSON string but got " + data['order']);
        }
        // ensure the json data is a string
        if (data['orderBy'] && !(typeof data['orderBy'] === 'string' || data['orderBy'] instanceof String)) {
            throw new Error("Expected the field `orderBy` to be a primitive type in the JSON string but got " + data['orderBy']);
        }

        return true;
    }


}



/**
 * Items filtered by whether they've been fully watched or not.  Only available on the `/account/profile/watched/list` endpoint currently. 
 * @member {Boolean} completed
 */
PaginationOptions.prototype['completed'] = undefined;

/**
 * Specific item type filter.
 * @member {module:model/PaginationOptions.ItemTypeEnum} itemType
 */
PaginationOptions.prototype['itemType'] = undefined;

/**
 * The maximum rating (inclusive) of items returned, e.g. 'AUOFLC-PG'.
 * @member {String} maxRating
 */
PaginationOptions.prototype['maxRating'] = undefined;

/**
 * The applied sort order if any.
 * @member {module:model/PaginationOptions.OrderEnum} order
 */
PaginationOptions.prototype['order'] = undefined;

/**
 * The applied sort ordering property if any.
 * @member {module:model/PaginationOptions.OrderByEnum} orderBy
 */
PaginationOptions.prototype['orderBy'] = undefined;

/**
 * The number of items to return in a list page.
 * @member {Number} pageSize
 */
PaginationOptions.prototype['pageSize'] = undefined;





/**
 * Allowed values for the <code>itemType</code> property.
 * @enum {String}
 * @readonly
 */
PaginationOptions['ItemTypeEnum'] = {

    /**
     * value: "movie"
     * @const
     */
    "movie": "movie",

    /**
     * value: "show"
     * @const
     */
    "show": "show",

    /**
     * value: "season"
     * @const
     */
    "season": "season",

    /**
     * value: "episode"
     * @const
     */
    "episode": "episode",

    /**
     * value: "program"
     * @const
     */
    "program": "program",

    /**
     * value: "link"
     * @const
     */
    "link": "link",

    /**
     * value: "trailer"
     * @const
     */
    "trailer": "trailer",

    /**
     * value: "channel"
     * @const
     */
    "channel": "channel",

    /**
     * value: "customAsset"
     * @const
     */
    "customAsset": "customAsset"
};


/**
 * Allowed values for the <code>order</code> property.
 * @enum {String}
 * @readonly
 */
PaginationOptions['OrderEnum'] = {

    /**
     * value: "asc"
     * @const
     */
    "asc": "asc",

    /**
     * value: "desc"
     * @const
     */
    "desc": "desc"
};


/**
 * Allowed values for the <code>orderBy</code> property.
 * @enum {String}
 * @readonly
 */
PaginationOptions['OrderByEnum'] = {

    /**
     * value: "a-z"
     * @const
     */
    "a-z": "a-z",

    /**
     * value: "release-year"
     * @const
     */
    "release-year": "release-year",

    /**
     * value: "date-added"
     * @const
     */
    "date-added": "date-added"
};



export default PaginationOptions;

