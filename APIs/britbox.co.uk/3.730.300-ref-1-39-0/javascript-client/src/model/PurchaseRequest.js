/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PurchaseRequest model module.
 * @module model/PurchaseRequest
 * @version 3.730.300-ref-1-39-0
 */
class PurchaseRequest {
    /**
     * Constructs a new <code>PurchaseRequest</code>.
     * @alias module:model/PurchaseRequest
     */
    constructor() { 
        
        PurchaseRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PurchaseRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PurchaseRequest} obj Optional instance to populate.
     * @return {module:model/PurchaseRequest} The populated <code>PurchaseRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PurchaseRequest();

            if (data.hasOwnProperty('itemId')) {
                obj['itemId'] = ApiClient.convertToType(data['itemId'], 'String');
            }
            if (data.hasOwnProperty('offerId')) {
                obj['offerId'] = ApiClient.convertToType(data['offerId'], 'String');
            }
            if (data.hasOwnProperty('paymentMethodId')) {
                obj['paymentMethodId'] = ApiClient.convertToType(data['paymentMethodId'], 'String');
            }
            if (data.hasOwnProperty('planId')) {
                obj['planId'] = ApiClient.convertToType(data['planId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PurchaseRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PurchaseRequest</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['itemId'] && !(typeof data['itemId'] === 'string' || data['itemId'] instanceof String)) {
            throw new Error("Expected the field `itemId` to be a primitive type in the JSON string but got " + data['itemId']);
        }
        // ensure the json data is a string
        if (data['offerId'] && !(typeof data['offerId'] === 'string' || data['offerId'] instanceof String)) {
            throw new Error("Expected the field `offerId` to be a primitive type in the JSON string but got " + data['offerId']);
        }
        // ensure the json data is a string
        if (data['paymentMethodId'] && !(typeof data['paymentMethodId'] === 'string' || data['paymentMethodId'] instanceof String)) {
            throw new Error("Expected the field `paymentMethodId` to be a primitive type in the JSON string but got " + data['paymentMethodId']);
        }
        // ensure the json data is a string
        if (data['planId'] && !(typeof data['planId'] === 'string' || data['planId'] instanceof String)) {
            throw new Error("Expected the field `planId` to be a primitive type in the JSON string but got " + data['planId']);
        }

        return true;
    }


}



/**
 * The identifier of the item to purchase. Both `itemId` and `offerId` are required for item purchases. 
 * @member {String} itemId
 */
PurchaseRequest.prototype['itemId'] = undefined;

/**
 * The identifier of the item offer to purchase. Both `itemId` and `offerId` are required for item purchases. 
 * @member {String} offerId
 */
PurchaseRequest.prototype['offerId'] = undefined;

/**
 * The identifier of the payment method to use. If omitted, or if purchasing a plan, the default payment method will be used. 
 * @member {String} paymentMethodId
 */
PurchaseRequest.prototype['paymentMethodId'] = undefined;

/**
 * The identifier of the plan to purchase.
 * @member {String} planId
 */
PurchaseRequest.prototype['planId'] = undefined;






export default PurchaseRequest;

