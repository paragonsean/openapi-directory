/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ItvGetDiscountResponse model module.
 * @module model/ItvGetDiscountResponse
 * @version 3.730.300-ref-1-39-0
 */
class ItvGetDiscountResponse {
    /**
     * Constructs a new <code>ItvGetDiscountResponse</code>.
     * @alias module:model/ItvGetDiscountResponse
     * @param id {String} The if of a discount for a user.
     */
    constructor(id) { 
        
        ItvGetDiscountResponse.initialize(this, id);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, id) { 
        obj['id'] = id;
    }

    /**
     * Constructs a <code>ItvGetDiscountResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ItvGetDiscountResponse} obj Optional instance to populate.
     * @return {module:model/ItvGetDiscountResponse} The populated <code>ItvGetDiscountResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ItvGetDiscountResponse();

            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('headline')) {
                obj['headline'] = ApiClient.convertToType(data['headline'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('initialCost')) {
                obj['initialCost'] = ApiClient.convertToType(data['initialCost'], 'Number');
            }
            if (data.hasOwnProperty('longDescription')) {
                obj['longDescription'] = ApiClient.convertToType(data['longDescription'], 'String');
            }
            if (data.hasOwnProperty('nickname')) {
                obj['nickname'] = ApiClient.convertToType(data['nickname'], 'String');
            }
            if (data.hasOwnProperty('offerdurationperiod')) {
                obj['offerdurationperiod'] = ApiClient.convertToType(data['offerdurationperiod'], 'String');
            }
            if (data.hasOwnProperty('shortDescription')) {
                obj['shortDescription'] = ApiClient.convertToType(data['shortDescription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ItvGetDiscountResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ItvGetDiscountResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ItvGetDiscountResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['headline'] && !(typeof data['headline'] === 'string' || data['headline'] instanceof String)) {
            throw new Error("Expected the field `headline` to be a primitive type in the JSON string but got " + data['headline']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['longDescription'] && !(typeof data['longDescription'] === 'string' || data['longDescription'] instanceof String)) {
            throw new Error("Expected the field `longDescription` to be a primitive type in the JSON string but got " + data['longDescription']);
        }
        // ensure the json data is a string
        if (data['nickname'] && !(typeof data['nickname'] === 'string' || data['nickname'] instanceof String)) {
            throw new Error("Expected the field `nickname` to be a primitive type in the JSON string but got " + data['nickname']);
        }
        // ensure the json data is a string
        if (data['offerdurationperiod'] && !(typeof data['offerdurationperiod'] === 'string' || data['offerdurationperiod'] instanceof String)) {
            throw new Error("Expected the field `offerdurationperiod` to be a primitive type in the JSON string but got " + data['offerdurationperiod']);
        }
        // ensure the json data is a string
        if (data['shortDescription'] && !(typeof data['shortDescription'] === 'string' || data['shortDescription'] instanceof String)) {
            throw new Error("Expected the field `shortDescription` to be a primitive type in the JSON string but got " + data['shortDescription']);
        }

        return true;
    }


}

ItvGetDiscountResponse.RequiredProperties = ["id"];

/**
 * Payment currency.
 * @member {String} currency
 */
ItvGetDiscountResponse.prototype['currency'] = undefined;

/**
 * Description
 * @member {String} description
 */
ItvGetDiscountResponse.prototype['description'] = undefined;

/**
 * Headline
 * @member {String} headline
 */
ItvGetDiscountResponse.prototype['headline'] = undefined;

/**
 * The if of a discount for a user.
 * @member {String} id
 */
ItvGetDiscountResponse.prototype['id'] = undefined;

/**
 * The initial cost.
 * @member {Number} initialCost
 */
ItvGetDiscountResponse.prototype['initialCost'] = undefined;

/**
 * Long description
 * @member {String} longDescription
 */
ItvGetDiscountResponse.prototype['longDescription'] = undefined;

/**
 * Discount nickname.
 * @member {String} nickname
 */
ItvGetDiscountResponse.prototype['nickname'] = undefined;

/**
 * How long the descount will be valid for.
 * @member {String} offerdurationperiod
 */
ItvGetDiscountResponse.prototype['offerdurationperiod'] = undefined;

/**
 * Short description
 * @member {String} shortDescription
 */
ItvGetDiscountResponse.prototype['shortDescription'] = undefined;






export default ItvGetDiscountResponse;

