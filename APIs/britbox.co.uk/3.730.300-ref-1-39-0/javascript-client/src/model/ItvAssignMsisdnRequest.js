/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ItvAssignMsisdnRequest model module.
 * @module model/ItvAssignMsisdnRequest
 * @version 3.730.300-ref-1-39-0
 */
class ItvAssignMsisdnRequest {
    /**
     * Constructs a new <code>ItvAssignMsisdnRequest</code>.
     * @alias module:model/ItvAssignMsisdnRequest
     * @param eeProductId {String} Product id from /ee/offers
     * @param msisdn {String} The validated msisdn.
     * @param profileToken {String} The ITV profile token
     * @param trackingHeader {String} trackingHeader
     */
    constructor(eeProductId, msisdn, profileToken, trackingHeader) { 
        
        ItvAssignMsisdnRequest.initialize(this, eeProductId, msisdn, profileToken, trackingHeader);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, eeProductId, msisdn, profileToken, trackingHeader) { 
        obj['eeProductId'] = eeProductId;
        obj['msisdn'] = msisdn;
        obj['profileToken'] = profileToken;
        obj['trackingHeader'] = trackingHeader;
    }

    /**
     * Constructs a <code>ItvAssignMsisdnRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ItvAssignMsisdnRequest} obj Optional instance to populate.
     * @return {module:model/ItvAssignMsisdnRequest} The populated <code>ItvAssignMsisdnRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ItvAssignMsisdnRequest();

            if (data.hasOwnProperty('eeProductId')) {
                obj['eeProductId'] = ApiClient.convertToType(data['eeProductId'], 'String');
            }
            if (data.hasOwnProperty('msisdn')) {
                obj['msisdn'] = ApiClient.convertToType(data['msisdn'], 'String');
            }
            if (data.hasOwnProperty('profileToken')) {
                obj['profileToken'] = ApiClient.convertToType(data['profileToken'], 'String');
            }
            if (data.hasOwnProperty('trackingHeader')) {
                obj['trackingHeader'] = ApiClient.convertToType(data['trackingHeader'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ItvAssignMsisdnRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ItvAssignMsisdnRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ItvAssignMsisdnRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['eeProductId'] && !(typeof data['eeProductId'] === 'string' || data['eeProductId'] instanceof String)) {
            throw new Error("Expected the field `eeProductId` to be a primitive type in the JSON string but got " + data['eeProductId']);
        }
        // ensure the json data is a string
        if (data['msisdn'] && !(typeof data['msisdn'] === 'string' || data['msisdn'] instanceof String)) {
            throw new Error("Expected the field `msisdn` to be a primitive type in the JSON string but got " + data['msisdn']);
        }
        // ensure the json data is a string
        if (data['profileToken'] && !(typeof data['profileToken'] === 'string' || data['profileToken'] instanceof String)) {
            throw new Error("Expected the field `profileToken` to be a primitive type in the JSON string but got " + data['profileToken']);
        }
        // ensure the json data is a string
        if (data['trackingHeader'] && !(typeof data['trackingHeader'] === 'string' || data['trackingHeader'] instanceof String)) {
            throw new Error("Expected the field `trackingHeader` to be a primitive type in the JSON string but got " + data['trackingHeader']);
        }

        return true;
    }


}

ItvAssignMsisdnRequest.RequiredProperties = ["eeProductId", "msisdn", "profileToken", "trackingHeader"];

/**
 * Product id from /ee/offers
 * @member {String} eeProductId
 */
ItvAssignMsisdnRequest.prototype['eeProductId'] = undefined;

/**
 * The validated msisdn.
 * @member {String} msisdn
 */
ItvAssignMsisdnRequest.prototype['msisdn'] = undefined;

/**
 * The ITV profile token
 * @member {String} profileToken
 */
ItvAssignMsisdnRequest.prototype['profileToken'] = undefined;

/**
 * trackingHeader
 * @member {String} trackingHeader
 */
ItvAssignMsisdnRequest.prototype['trackingHeader'] = undefined;






export default ItvAssignMsisdnRequest;

