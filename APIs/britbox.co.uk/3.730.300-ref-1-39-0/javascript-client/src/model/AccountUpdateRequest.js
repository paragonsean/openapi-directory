/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Address from './Address';

/**
 * The AccountUpdateRequest model module.
 * @module model/AccountUpdateRequest
 * @version 3.730.300-ref-1-39-0
 */
class AccountUpdateRequest {
    /**
     * Constructs a new <code>AccountUpdateRequest</code>.
     * @alias module:model/AccountUpdateRequest
     */
    constructor() { 
        
        AccountUpdateRequest.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AccountUpdateRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AccountUpdateRequest} obj Optional instance to populate.
     * @return {module:model/AccountUpdateRequest} The populated <code>AccountUpdateRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AccountUpdateRequest();

            if (data.hasOwnProperty('address')) {
                obj['address'] = Address.constructFromObject(data['address']);
            }
            if (data.hasOwnProperty('defaultPaymentInstrumentId')) {
                obj['defaultPaymentInstrumentId'] = ApiClient.convertToType(data['defaultPaymentInstrumentId'], 'String');
            }
            if (data.hasOwnProperty('defaultPaymentMethodId')) {
                obj['defaultPaymentMethodId'] = ApiClient.convertToType(data['defaultPaymentMethodId'], 'String');
            }
            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('minRatingPlaybackGuard')) {
                obj['minRatingPlaybackGuard'] = ApiClient.convertToType(data['minRatingPlaybackGuard'], 'String');
            }
            if (data.hasOwnProperty('segments')) {
                obj['segments'] = ApiClient.convertToType(data['segments'], ['String']);
            }
            if (data.hasOwnProperty('trackingEnabled')) {
                obj['trackingEnabled'] = ApiClient.convertToType(data['trackingEnabled'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AccountUpdateRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AccountUpdateRequest</code>.
     */
    static validateJSON(data) {
        // validate the optional field `address`
        if (data['address']) { // data not null
          Address.validateJSON(data['address']);
        }
        // ensure the json data is a string
        if (data['defaultPaymentInstrumentId'] && !(typeof data['defaultPaymentInstrumentId'] === 'string' || data['defaultPaymentInstrumentId'] instanceof String)) {
            throw new Error("Expected the field `defaultPaymentInstrumentId` to be a primitive type in the JSON string but got " + data['defaultPaymentInstrumentId']);
        }
        // ensure the json data is a string
        if (data['defaultPaymentMethodId'] && !(typeof data['defaultPaymentMethodId'] === 'string' || data['defaultPaymentMethodId'] instanceof String)) {
            throw new Error("Expected the field `defaultPaymentMethodId` to be a primitive type in the JSON string but got " + data['defaultPaymentMethodId']);
        }
        // ensure the json data is a string
        if (data['firstName'] && !(typeof data['firstName'] === 'string' || data['firstName'] instanceof String)) {
            throw new Error("Expected the field `firstName` to be a primitive type in the JSON string but got " + data['firstName']);
        }
        // ensure the json data is a string
        if (data['lastName'] && !(typeof data['lastName'] === 'string' || data['lastName'] instanceof String)) {
            throw new Error("Expected the field `lastName` to be a primitive type in the JSON string but got " + data['lastName']);
        }
        // ensure the json data is a string
        if (data['minRatingPlaybackGuard'] && !(typeof data['minRatingPlaybackGuard'] === 'string' || data['minRatingPlaybackGuard'] instanceof String)) {
            throw new Error("Expected the field `minRatingPlaybackGuard` to be a primitive type in the JSON string but got " + data['minRatingPlaybackGuard']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['segments'])) {
            throw new Error("Expected the field `segments` to be an array in the JSON data but got " + data['segments']);
        }

        return true;
    }


}



/**
 * @member {module:model/Address} address
 */
AccountUpdateRequest.prototype['address'] = undefined;

/**
 * The id of the payment instrument to use by default for account transactions.  **DEPRECATED** The property `defaultPaymentMethodId` is now preferred. 
 * @member {String} defaultPaymentInstrumentId
 */
AccountUpdateRequest.prototype['defaultPaymentInstrumentId'] = undefined;

/**
 * The id of the payment method to use by default for account transactions.
 * @member {String} defaultPaymentMethodId
 */
AccountUpdateRequest.prototype['defaultPaymentMethodId'] = undefined;

/**
 * The first name of the account holder.
 * @member {String} firstName
 */
AccountUpdateRequest.prototype['firstName'] = undefined;

/**
 * The last name of the account holder.
 * @member {String} lastName
 */
AccountUpdateRequest.prototype['lastName'] = undefined;

/**
 * The classification rating defining the minimum rating level a user should be forced to enter the account pin code for playback. Anything at this rating level or above will require the pin for playback.  e.g. AUOFLC-MA15+  If you want to disable this guard pass an empty string or `null`. 
 * @member {String} minRatingPlaybackGuard
 */
AccountUpdateRequest.prototype['minRatingPlaybackGuard'] = undefined;

/**
 * The segments an account should be placed under
 * @member {Array.<String>} segments
 */
AccountUpdateRequest.prototype['segments'] = undefined;

/**
 * Whether usage tracking is associated with an account or anonymous.
 * @member {Boolean} trackingEnabled
 */
AccountUpdateRequest.prototype['trackingEnabled'] = undefined;






export default AccountUpdateRequest;

