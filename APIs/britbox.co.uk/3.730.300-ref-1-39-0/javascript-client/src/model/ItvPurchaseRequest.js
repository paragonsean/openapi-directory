/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ItvPurchaseRequest model module.
 * @module model/ItvPurchaseRequest
 * @version 3.730.300-ref-1-39-0
 */
class ItvPurchaseRequest {
    /**
     * Constructs a new <code>ItvPurchaseRequest</code>.
     * @alias module:model/ItvPurchaseRequest
     * @param cardToken {String} The credit card token.
     * @param planId {String} The identifier of the plan to purchase.
     * @param profileToken {String} The ITV profile token.
     */
    constructor(cardToken, planId, profileToken) { 
        
        ItvPurchaseRequest.initialize(this, cardToken, planId, profileToken);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cardToken, planId, profileToken) { 
        obj['cardToken'] = cardToken;
        obj['planId'] = planId;
        obj['profileToken'] = profileToken;
    }

    /**
     * Constructs a <code>ItvPurchaseRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ItvPurchaseRequest} obj Optional instance to populate.
     * @return {module:model/ItvPurchaseRequest} The populated <code>ItvPurchaseRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ItvPurchaseRequest();

            if (data.hasOwnProperty('cardToken')) {
                obj['cardToken'] = ApiClient.convertToType(data['cardToken'], 'String');
            }
            if (data.hasOwnProperty('planId')) {
                obj['planId'] = ApiClient.convertToType(data['planId'], 'String');
            }
            if (data.hasOwnProperty('profileToken')) {
                obj['profileToken'] = ApiClient.convertToType(data['profileToken'], 'String');
            }
            if (data.hasOwnProperty('voucher')) {
                obj['voucher'] = ApiClient.convertToType(data['voucher'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ItvPurchaseRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ItvPurchaseRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ItvPurchaseRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['cardToken'] && !(typeof data['cardToken'] === 'string' || data['cardToken'] instanceof String)) {
            throw new Error("Expected the field `cardToken` to be a primitive type in the JSON string but got " + data['cardToken']);
        }
        // ensure the json data is a string
        if (data['planId'] && !(typeof data['planId'] === 'string' || data['planId'] instanceof String)) {
            throw new Error("Expected the field `planId` to be a primitive type in the JSON string but got " + data['planId']);
        }
        // ensure the json data is a string
        if (data['profileToken'] && !(typeof data['profileToken'] === 'string' || data['profileToken'] instanceof String)) {
            throw new Error("Expected the field `profileToken` to be a primitive type in the JSON string but got " + data['profileToken']);
        }
        // ensure the json data is a string
        if (data['voucher'] && !(typeof data['voucher'] === 'string' || data['voucher'] instanceof String)) {
            throw new Error("Expected the field `voucher` to be a primitive type in the JSON string but got " + data['voucher']);
        }

        return true;
    }


}

ItvPurchaseRequest.RequiredProperties = ["cardToken", "planId", "profileToken"];

/**
 * The credit card token.
 * @member {String} cardToken
 */
ItvPurchaseRequest.prototype['cardToken'] = undefined;

/**
 * The identifier of the plan to purchase.
 * @member {String} planId
 */
ItvPurchaseRequest.prototype['planId'] = undefined;

/**
 * The ITV profile token.
 * @member {String} profileToken
 */
ItvPurchaseRequest.prototype['profileToken'] = undefined;

/**
 * A coupon/voucher for a discount.
 * @member {String} voucher
 */
ItvPurchaseRequest.prototype['voucher'] = undefined;






export default ItvPurchaseRequest;

