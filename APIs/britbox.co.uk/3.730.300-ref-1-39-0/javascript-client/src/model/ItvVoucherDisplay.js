/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ItvVoucherDisplay model module.
 * @module model/ItvVoucherDisplay
 * @version 3.730.300-ref-1-39-0
 */
class ItvVoucherDisplay {
    /**
     * Constructs a new <code>ItvVoucherDisplay</code>.
     * @alias module:model/ItvVoucherDisplay
     * @extends Object
     */
    constructor() { 
        
        ItvVoucherDisplay.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ItvVoucherDisplay</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ItvVoucherDisplay} obj Optional instance to populate.
     * @return {module:model/ItvVoucherDisplay} The populated <code>ItvVoucherDisplay</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ItvVoucherDisplay();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('currency')) {
                obj['currency'] = ApiClient.convertToType(data['currency'], 'String');
            }
            if (data.hasOwnProperty('discountPrice')) {
                obj['discountPrice'] = ApiClient.convertToType(data['discountPrice'], 'String');
            }
            if (data.hasOwnProperty('duration')) {
                obj['duration'] = ApiClient.convertToType(data['duration'], 'String');
            }
            if (data.hasOwnProperty('durationInMonths')) {
                obj['durationInMonths'] = ApiClient.convertToType(data['durationInMonths'], 'Number');
            }
            if (data.hasOwnProperty('headlineLabel')) {
                obj['headlineLabel'] = ApiClient.convertToType(data['headlineLabel'], 'String');
            }
            if (data.hasOwnProperty('initialCost')) {
                obj['initialCost'] = ApiClient.convertToType(data['initialCost'], 'Number');
            }
            if (data.hasOwnProperty('longDescription')) {
                obj['longDescription'] = ApiClient.convertToType(data['longDescription'], 'String');
            }
            if (data.hasOwnProperty('percentOff')) {
                obj['percentOff'] = ApiClient.convertToType(data['percentOff'], 'Number');
            }
            if (data.hasOwnProperty('savingLabel')) {
                obj['savingLabel'] = ApiClient.convertToType(data['savingLabel'], 'String');
            }
            if (data.hasOwnProperty('shortDescription')) {
                obj['shortDescription'] = ApiClient.convertToType(data['shortDescription'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ItvVoucherDisplay</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ItvVoucherDisplay</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currency'] && !(typeof data['currency'] === 'string' || data['currency'] instanceof String)) {
            throw new Error("Expected the field `currency` to be a primitive type in the JSON string but got " + data['currency']);
        }
        // ensure the json data is a string
        if (data['discountPrice'] && !(typeof data['discountPrice'] === 'string' || data['discountPrice'] instanceof String)) {
            throw new Error("Expected the field `discountPrice` to be a primitive type in the JSON string but got " + data['discountPrice']);
        }
        // ensure the json data is a string
        if (data['duration'] && !(typeof data['duration'] === 'string' || data['duration'] instanceof String)) {
            throw new Error("Expected the field `duration` to be a primitive type in the JSON string but got " + data['duration']);
        }
        // ensure the json data is a string
        if (data['headlineLabel'] && !(typeof data['headlineLabel'] === 'string' || data['headlineLabel'] instanceof String)) {
            throw new Error("Expected the field `headlineLabel` to be a primitive type in the JSON string but got " + data['headlineLabel']);
        }
        // ensure the json data is a string
        if (data['longDescription'] && !(typeof data['longDescription'] === 'string' || data['longDescription'] instanceof String)) {
            throw new Error("Expected the field `longDescription` to be a primitive type in the JSON string but got " + data['longDescription']);
        }
        // ensure the json data is a string
        if (data['savingLabel'] && !(typeof data['savingLabel'] === 'string' || data['savingLabel'] instanceof String)) {
            throw new Error("Expected the field `savingLabel` to be a primitive type in the JSON string but got " + data['savingLabel']);
        }
        // ensure the json data is a string
        if (data['shortDescription'] && !(typeof data['shortDescription'] === 'string' || data['shortDescription'] instanceof String)) {
            throw new Error("Expected the field `shortDescription` to be a primitive type in the JSON string but got " + data['shortDescription']);
        }

        return true;
    }


}



/**
 * Currency.
 * @member {String} currency
 */
ItvVoucherDisplay.prototype['currency'] = undefined;

/**
 * Discount price.
 * @member {String} discountPrice
 */
ItvVoucherDisplay.prototype['discountPrice'] = undefined;

/**
 * Duration.
 * @member {String} duration
 */
ItvVoucherDisplay.prototype['duration'] = undefined;

/**
 * Duration in months.
 * @member {Number} durationInMonths
 */
ItvVoucherDisplay.prototype['durationInMonths'] = undefined;

/**
 * Headline label.
 * @member {String} headlineLabel
 */
ItvVoucherDisplay.prototype['headlineLabel'] = undefined;

/**
 * InitialCost.
 * @member {Number} initialCost
 */
ItvVoucherDisplay.prototype['initialCost'] = undefined;

/**
 * Long description.
 * @member {String} longDescription
 */
ItvVoucherDisplay.prototype['longDescription'] = undefined;

/**
 * Percent off.
 * @member {Number} percentOff
 */
ItvVoucherDisplay.prototype['percentOff'] = undefined;

/**
 * SavingLabel.
 * @member {String} savingLabel
 */
ItvVoucherDisplay.prototype['savingLabel'] = undefined;

/**
 * Short description.
 * @member {String} shortDescription
 */
ItvVoucherDisplay.prototype['shortDescription'] = undefined;






export default ItvVoucherDisplay;

