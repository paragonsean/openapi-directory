/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppConfigGeneral model module.
 * @module model/AppConfigGeneral
 * @version 3.730.300-ref-1-39-0
 */
class AppConfigGeneral {
    /**
     * Constructs a new <code>AppConfigGeneral</code>.
     * @alias module:model/AppConfigGeneral
     */
    constructor() { 
        
        AppConfigGeneral.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppConfigGeneral</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppConfigGeneral} obj Optional instance to populate.
     * @return {module:model/AppConfigGeneral} The populated <code>AppConfigGeneral</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppConfigGeneral();

            if (data.hasOwnProperty('currencyCode')) {
                obj['currencyCode'] = ApiClient.convertToType(data['currencyCode'], 'String');
            }
            if (data.hasOwnProperty('customFields')) {
                obj['customFields'] = ApiClient.convertToType(data['customFields'], {'String': Object});
            }
            if (data.hasOwnProperty('defaultTimeZone')) {
                obj['defaultTimeZone'] = ApiClient.convertToType(data['defaultTimeZone'], 'String');
            }
            if (data.hasOwnProperty('facebookAppId')) {
                obj['facebookAppId'] = ApiClient.convertToType(data['facebookAppId'], 'String');
            }
            if (data.hasOwnProperty('gaToken')) {
                obj['gaToken'] = ApiClient.convertToType(data['gaToken'], 'String');
            }
            if (data.hasOwnProperty('itemImageTypes')) {
                obj['itemImageTypes'] = ApiClient.convertToType(data['itemImageTypes'], {'String': 'String'});
            }
            if (data.hasOwnProperty('mandatorySignIn')) {
                obj['mandatorySignIn'] = ApiClient.convertToType(data['mandatorySignIn'], 'Boolean');
            }
            if (data.hasOwnProperty('maxUserRating')) {
                obj['maxUserRating'] = ApiClient.convertToType(data['maxUserRating'], 'Number');
            }
            if (data.hasOwnProperty('stripeKey')) {
                obj['stripeKey'] = ApiClient.convertToType(data['stripeKey'], 'String');
            }
            if (data.hasOwnProperty('websiteUrl')) {
                obj['websiteUrl'] = ApiClient.convertToType(data['websiteUrl'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppConfigGeneral</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppConfigGeneral</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['currencyCode'] && !(typeof data['currencyCode'] === 'string' || data['currencyCode'] instanceof String)) {
            throw new Error("Expected the field `currencyCode` to be a primitive type in the JSON string but got " + data['currencyCode']);
        }
        // ensure the json data is a string
        if (data['defaultTimeZone'] && !(typeof data['defaultTimeZone'] === 'string' || data['defaultTimeZone'] instanceof String)) {
            throw new Error("Expected the field `defaultTimeZone` to be a primitive type in the JSON string but got " + data['defaultTimeZone']);
        }
        // ensure the json data is a string
        if (data['facebookAppId'] && !(typeof data['facebookAppId'] === 'string' || data['facebookAppId'] instanceof String)) {
            throw new Error("Expected the field `facebookAppId` to be a primitive type in the JSON string but got " + data['facebookAppId']);
        }
        // ensure the json data is a string
        if (data['gaToken'] && !(typeof data['gaToken'] === 'string' || data['gaToken'] instanceof String)) {
            throw new Error("Expected the field `gaToken` to be a primitive type in the JSON string but got " + data['gaToken']);
        }
        // ensure the json data is a string
        if (data['stripeKey'] && !(typeof data['stripeKey'] === 'string' || data['stripeKey'] instanceof String)) {
            throw new Error("Expected the field `stripeKey` to be a primitive type in the JSON string but got " + data['stripeKey']);
        }
        // ensure the json data is a string
        if (data['websiteUrl'] && !(typeof data['websiteUrl'] === 'string' || data['websiteUrl'] instanceof String)) {
            throw new Error("Expected the field `websiteUrl` to be a primitive type in the JSON string but got " + data['websiteUrl']);
        }

        return true;
    }


}



/**
 * The currency code to target.
 * @member {String} currencyCode
 */
AppConfigGeneral.prototype['currencyCode'] = undefined;

/**
 * A map of custom configuration fields.
 * @member {Object.<String, Object>} customFields
 */
AppConfigGeneral.prototype['customFields'] = undefined;

/**
 * The default time zone of the site. e.g. \"Etc/GMT\"
 * @member {String} defaultTimeZone
 */
AppConfigGeneral.prototype['defaultTimeZone'] = undefined;

/**
 * The Facebook application id associated with an environment.
 * @member {String} facebookAppId
 */
AppConfigGeneral.prototype['facebookAppId'] = undefined;

/**
 * A Google Analytics token to track applicaton user events.
 * @member {String} gaToken
 */
AppConfigGeneral.prototype['gaToken'] = undefined;

/**
 * A map of default item image types where the key is the item types.
 * @member {Object.<String, String>} itemImageTypes
 */
AppConfigGeneral.prototype['itemImageTypes'] = undefined;

/**
 * Whether to require sign in for customers to access content.
 * @member {Boolean} mandatorySignIn
 */
AppConfigGeneral.prototype['mandatorySignIn'] = undefined;

/**
 * The maximum value allowed for user ratings.
 * @member {Number} maxUserRating
 */
AppConfigGeneral.prototype['maxUserRating'] = undefined;

/**
 * The public Stripe key to use for payment transactions.
 * @member {String} stripeKey
 */
AppConfigGeneral.prototype['stripeKey'] = undefined;

/**
 * The url of the primary website.
 * @member {String} websiteUrl
 */
AppConfigGeneral.prototype['websiteUrl'] = undefined;






export default AppConfigGeneral;

