/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppConfigLinear model module.
 * @module model/AppConfigLinear
 * @version 3.730.300-ref-1-39-0
 */
class AppConfigLinear {
    /**
     * Constructs a new <code>AppConfigLinear</code>.
     * @alias module:model/AppConfigLinear
     */
    constructor() { 
        
        AppConfigLinear.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppConfigLinear</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppConfigLinear} obj Optional instance to populate.
     * @return {module:model/AppConfigLinear} The populated <code>AppConfigLinear</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppConfigLinear();

            if (data.hasOwnProperty('scheduleCacheMaxAgeMinutes')) {
                obj['scheduleCacheMaxAgeMinutes'] = ApiClient.convertToType(data['scheduleCacheMaxAgeMinutes'], 'Number');
            }
            if (data.hasOwnProperty('viewingWindowDaysAfter')) {
                obj['viewingWindowDaysAfter'] = ApiClient.convertToType(data['viewingWindowDaysAfter'], 'Number');
            }
            if (data.hasOwnProperty('viewingWindowDaysBefore')) {
                obj['viewingWindowDaysBefore'] = ApiClient.convertToType(data['viewingWindowDaysBefore'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppConfigLinear</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppConfigLinear</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * The maximum minutes of schedule cache time.
 * @member {Number} scheduleCacheMaxAgeMinutes
 */
AppConfigLinear.prototype['scheduleCacheMaxAgeMinutes'] = undefined;

/**
 * Number of available upcoming day schedules.
 * @member {Number} viewingWindowDaysAfter
 */
AppConfigLinear.prototype['viewingWindowDaysAfter'] = undefined;

/**
 * Number of available day schedules in the past.
 * @member {Number} viewingWindowDaysBefore
 */
AppConfigLinear.prototype['viewingWindowDaysBefore'] = undefined;






export default AppConfigLinear;

