/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ItvCurrentSubscription model module.
 * @module model/ItvCurrentSubscription
 * @version 3.730.300-ref-1-39-0
 */
class ItvCurrentSubscription {
    /**
     * Constructs a new <code>ItvCurrentSubscription</code>.
     * @alias module:model/ItvCurrentSubscription
     * @param cancelAtPeriodEnd {Boolean} The cancellation period end flag.
     * @param collectionMethod {String} The description of payment collection method.
     * @param created {Number} The creation timestamp.
     * @param currentPeriodEnd {Number} The end of period timestamp.
     * @param currentPeriodStart {Number} The start of period timestamp.
     * @param plan {Object} The plan used during subsribing.
     * @param status {String} The status of subscription.
     */
    constructor(cancelAtPeriodEnd, collectionMethod, created, currentPeriodEnd, currentPeriodStart, plan, status) { 
        
        ItvCurrentSubscription.initialize(this, cancelAtPeriodEnd, collectionMethod, created, currentPeriodEnd, currentPeriodStart, plan, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, cancelAtPeriodEnd, collectionMethod, created, currentPeriodEnd, currentPeriodStart, plan, status) { 
        obj['cancelAtPeriodEnd'] = cancelAtPeriodEnd;
        obj['collectionMethod'] = collectionMethod;
        obj['created'] = created;
        obj['currentPeriodEnd'] = currentPeriodEnd;
        obj['currentPeriodStart'] = currentPeriodStart;
        obj['plan'] = plan;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>ItvCurrentSubscription</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ItvCurrentSubscription} obj Optional instance to populate.
     * @return {module:model/ItvCurrentSubscription} The populated <code>ItvCurrentSubscription</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ItvCurrentSubscription();

            if (data.hasOwnProperty('cancelAtPeriodEnd')) {
                obj['cancelAtPeriodEnd'] = ApiClient.convertToType(data['cancelAtPeriodEnd'], 'Boolean');
            }
            if (data.hasOwnProperty('collectionMethod')) {
                obj['collectionMethod'] = ApiClient.convertToType(data['collectionMethod'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'Number');
            }
            if (data.hasOwnProperty('currentPeriodEnd')) {
                obj['currentPeriodEnd'] = ApiClient.convertToType(data['currentPeriodEnd'], 'Number');
            }
            if (data.hasOwnProperty('currentPeriodStart')) {
                obj['currentPeriodStart'] = ApiClient.convertToType(data['currentPeriodStart'], 'Number');
            }
            if (data.hasOwnProperty('plan')) {
                obj['plan'] = ApiClient.convertToType(data['plan'], Object);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ItvCurrentSubscription</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ItvCurrentSubscription</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ItvCurrentSubscription.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['collectionMethod'] && !(typeof data['collectionMethod'] === 'string' || data['collectionMethod'] instanceof String)) {
            throw new Error("Expected the field `collectionMethod` to be a primitive type in the JSON string but got " + data['collectionMethod']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

ItvCurrentSubscription.RequiredProperties = ["cancelAtPeriodEnd", "collectionMethod", "created", "currentPeriodEnd", "currentPeriodStart", "plan", "status"];

/**
 * The cancellation period end flag.
 * @member {Boolean} cancelAtPeriodEnd
 */
ItvCurrentSubscription.prototype['cancelAtPeriodEnd'] = undefined;

/**
 * The description of payment collection method.
 * @member {String} collectionMethod
 */
ItvCurrentSubscription.prototype['collectionMethod'] = undefined;

/**
 * The creation timestamp.
 * @member {Number} created
 */
ItvCurrentSubscription.prototype['created'] = undefined;

/**
 * The end of period timestamp.
 * @member {Number} currentPeriodEnd
 */
ItvCurrentSubscription.prototype['currentPeriodEnd'] = undefined;

/**
 * The start of period timestamp.
 * @member {Number} currentPeriodStart
 */
ItvCurrentSubscription.prototype['currentPeriodStart'] = undefined;

/**
 * The plan used during subsribing.
 * @member {Object} plan
 */
ItvCurrentSubscription.prototype['plan'] = undefined;

/**
 * The status of subscription.
 * @member {String} status
 */
ItvCurrentSubscription.prototype['status'] = undefined;






export default ItvCurrentSubscription;

