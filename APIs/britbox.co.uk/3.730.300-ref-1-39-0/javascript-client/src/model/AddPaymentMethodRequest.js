/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AddPaymentMethodRequest model module.
 * @module model/AddPaymentMethodRequest
 * @version 3.730.300-ref-1-39-0
 */
class AddPaymentMethodRequest {
    /**
     * Constructs a new <code>AddPaymentMethodRequest</code>.
     * @alias module:model/AddPaymentMethodRequest
     * @param token {String} The payment provider token representing a payment method, obtained by submitting payment method details to your third party provider. 
     * @param type {module:model/AddPaymentMethodRequest.TypeEnum} The type of payment method.
     */
    constructor(token, type) { 
        
        AddPaymentMethodRequest.initialize(this, token, type);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, token, type) { 
        obj['token'] = token;
        obj['type'] = type;
    }

    /**
     * Constructs a <code>AddPaymentMethodRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AddPaymentMethodRequest} obj Optional instance to populate.
     * @return {module:model/AddPaymentMethodRequest} The populated <code>AddPaymentMethodRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AddPaymentMethodRequest();

            if (data.hasOwnProperty('makeDefault')) {
                obj['makeDefault'] = ApiClient.convertToType(data['makeDefault'], 'Boolean');
            }
            if (data.hasOwnProperty('token')) {
                obj['token'] = ApiClient.convertToType(data['token'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AddPaymentMethodRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AddPaymentMethodRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AddPaymentMethodRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['token'] && !(typeof data['token'] === 'string' || data['token'] instanceof String)) {
            throw new Error("Expected the field `token` to be a primitive type in the JSON string but got " + data['token']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }

        return true;
    }


}

AddPaymentMethodRequest.RequiredProperties = ["token", "type"];

/**
 * Whether this payment method should become the account default when  making purchases.  Note that if this is the first payment method of type Card being added to an account then it will become the default whether this property is true or false. 
 * @member {Boolean} makeDefault
 */
AddPaymentMethodRequest.prototype['makeDefault'] = undefined;

/**
 * The payment provider token representing a payment method, obtained by submitting payment method details to your third party provider. 
 * @member {String} token
 */
AddPaymentMethodRequest.prototype['token'] = undefined;

/**
 * The type of payment method.
 * @member {module:model/AddPaymentMethodRequest.TypeEnum} type
 */
AddPaymentMethodRequest.prototype['type'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
AddPaymentMethodRequest['TypeEnum'] = {

    /**
     * value: "Card"
     * @const
     */
    "Card": "Card"
};



export default AddPaymentMethodRequest;

