/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ItemClipFilesList from '../model/ItemClipFilesList';
import ItemDetail from '../model/ItemDetail';
import ItemDownloadableList from '../model/ItemDownloadableList';
import ItemDownloadableRequest from '../model/ItemDownloadableRequest';
import ItemList from '../model/ItemList';
import ItemScheduleList from '../model/ItemScheduleList';
import MediaFile from '../model/MediaFile';
import NextPlaybackItem from '../model/NextPlaybackItem';
import Plan from '../model/Plan';
import SearchResults from '../model/SearchResults';
import ServiceError from '../model/ServiceError';

/**
* Content service.
* @module api/ContentApi
* @version 3.730.300-ref-1-39-0
*/
export default class ContentApi {

    /**
    * Constructs a new ContentApi. 
    * @alias module:api/ContentApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getAnonNextPlaybackItem operation.
     * @callback module:api/ContentApi~getAnonNextPlaybackItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NextPlaybackItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Identical to GET /account/profile/items/{itemId}/next route but for users that are not logged in i.e. this endpoint does not require authorisation 
     * @param {String} itemId The identifier of the source item to base the next to watch item off. 
     * @param {Object} opts Optional parameters
     * @param {String} [maxRating] The maximum rating (inclusive) of an item returned, e.g. 'auoflc-pg'.
     * @param {module:model/String} [expand] If no value is specified no dependencies are expanded.  If 'parent' is specified then only the direct parent will be expanded. For example if an `Episode` then the `Season` would be included.  If 'ancestors' is specified then the full parent chain is expanded. For example if an `Episode` then both the `Season` and `Show` would be included. 
     * @param {String} [device = 'web_browser')] The type of device the content is targeting.
     * @param {Array.<String>} [segments] The list of segments to filter the response by.
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ContentApi~getAnonNextPlaybackItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NextPlaybackItem}
     */
    getAnonNextPlaybackItem(itemId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'itemId' is set
      if (itemId === undefined || itemId === null) {
        throw new Error("Missing the required parameter 'itemId' when calling getAnonNextPlaybackItem");
      }

      let pathParams = {
        'itemId': itemId
      };
      let queryParams = {
        'max_rating': opts['maxRating'],
        'expand': opts['expand'],
        'device': opts['device'],
        'segments': this.apiClient.buildCollectionParam(opts['segments'], 'csv'),
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NextPlaybackItem;
      return this.apiClient.callApi(
        '/items/{itemId}/next', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getItem operation.
     * @callback module:api/ContentApi~getItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the details of an item with the specified id.
     * @param {String} id The identifier of the item to load.  The custom identifier of an item can be used here if the `use_custom_id` parameter is true. 
     * @param {Object} opts Optional parameters
     * @param {String} [maxRating] The maximum rating (inclusive) of items returned, e.g. 'auoflc-pg'.
     * @param {module:model/String} [expand] If no value is specified no dependencies are expanded.  If 'children' is specified then the list of any direct children will be expanded. For example seasons of a show or episodes of a season.  If 'all' is specified then the parent chain will be expanded along with any child list at each level. For example if an episode is specified then its season will be expanded and that season's episode list. The season will have its show expanded and the show will have its season list expanded.  The 'all' options is useful when you deep link into a show/season/episode for the first time as it provides full context for navigating around the show page. Subsequent navigation around children of the show should only need to request expand of children.  If 'ancestors' is specified then only the parent chain is included.  If 'parent' is specified then only the direct parent is included.  If an expand is specified which is not relevant to the item type, it will be ignored. 
     * @param {module:model/String} [selectSeason] Given a provided show id, it can be useful to get the details of a child season. This option provides a means to return the `first` or `latest` season of a show given the show id.  The `expand` parameter also works here so for example you could land on a show page and request the latest season along with `expand=all`. This would then return the detail of the latest season with its list of child episode summaries, and also expand the detail of the show with its list of seasons summaries.  Note the `id` parameter must be a show id for this parameter to work correctly. 
     * @param {Boolean} [useCustomId] Set to true when passing a custom Id as the `id` path parameter.
     * @param {String} [device = 'web_browser')] The type of device the content is targeting.
     * @param {String} [sub] The active subscription code.
     * @param {Array.<String>} [segments] The list of segments to filter the response by.
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ContentApi~getItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemDetail}
     */
    getItem(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getItem");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'max_rating': opts['maxRating'],
        'expand': opts['expand'],
        'select_season': opts['selectSeason'],
        'use_custom_id': opts['useCustomId'],
        'device': opts['device'],
        'sub': opts['sub'],
        'segments': this.apiClient.buildCollectionParam(opts['segments'], 'csv'),
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ItemDetail;
      return this.apiClient.callApi(
        '/items/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getItemChildrenList operation.
     * @callback module:api/ContentApi~getItemChildrenListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the List of child summary items under an item.  If the item is a Season then the children will be episodes and ordered by episode number.  If the item is a Show then the children will be Seasons and ordered by season number.  Returns 404 if no children found. 
     * @param {String} id The identifier of the item whose children to load.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The page of items to load. Starts from page 1.
     * @param {Number} [pageSize = 12)] The number of items to return in a page.
     * @param {String} [maxRating] The maximum rating (inclusive) of items returned, e.g. 'auoflc-pg'.
     * @param {module:model/String} [order = 'desc')] The list sort order, either 'asc' or 'desc'.
     * @param {String} [device = 'web_browser')] The type of device the content is targeting.
     * @param {String} [sub] The active subscription code.
     * @param {Array.<String>} [segments] The list of segments to filter the response by.
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ContentApi~getItemChildrenListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemList}
     */
    getItemChildrenList(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getItemChildrenList");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'page': opts['page'],
        'page_size': opts['pageSize'],
        'max_rating': opts['maxRating'],
        'order': opts['order'],
        'device': opts['device'],
        'sub': opts['sub'],
        'segments': this.apiClient.buildCollectionParam(opts['segments'], 'csv'),
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ItemList;
      return this.apiClient.callApi(
        '/items/{id}/children', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getItemDownloadables operation.
     * @callback module:api/ContentApi~getItemDownloadablesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemDownloadableList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the details of an item with the specified id.
     * @param {module:model/ItemDownloadableRequest} itemDownloadableRequest The item Axis ids joined string with comma.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ContentApi~getItemDownloadablesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemDownloadableList}
     */
    getItemDownloadables(itemDownloadableRequest, opts, callback) {
      opts = opts || {};
      let postBody = itemDownloadableRequest;
      // verify the required parameter 'itemDownloadableRequest' is set
      if (itemDownloadableRequest === undefined || itemDownloadableRequest === null) {
        throw new Error("Missing the required parameter 'itemDownloadableRequest' when calling getItemDownloadables");
      }

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ItemDownloadableList;
      return this.apiClient.callApi(
        '/itv/items/downloadable', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getItemRelatedList operation.
     * @callback module:api/ContentApi~getItemRelatedListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of items related to the parent item.  Note for now, due to the size of the list being unknown, only a single page will be returned. 
     * @param {String} id The identifier of the item to based related items off.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The page of items to load. Starts from page 1.
     * @param {Number} [pageSize = 12)] The number of items to return in a page.
     * @param {String} [maxRating] The maximum rating (inclusive) of items returned, e.g. 'auoflc-pg'.
     * @param {String} [device = 'web_browser')] The type of device the content is targeting.
     * @param {String} [sub] The active subscription code.
     * @param {Array.<String>} [segments] The list of segments to filter the response by.
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ContentApi~getItemRelatedListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemList}
     */
    getItemRelatedList(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getItemRelatedList");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'page': opts['page'],
        'page_size': opts['pageSize'],
        'max_rating': opts['maxRating'],
        'device': opts['device'],
        'sub': opts['sub'],
        'segments': this.apiClient.buildCollectionParam(opts['segments'], 'csv'),
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ItemList;
      return this.apiClient.callApi(
        '/items/{id}/related', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getItemsMediaClipFiles operation.
     * @callback module:api/ContentApi~getItemsMediaClipFilesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemClipFilesList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the media clip files associated with items. 
     * @param {module:model/ItemDownloadableRequest} itemDownloadableRequest The item Axis ids joined string with comma.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ContentApi~getItemsMediaClipFilesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemClipFilesList}
     */
    getItemsMediaClipFiles(itemDownloadableRequest, opts, callback) {
      opts = opts || {};
      let postBody = itemDownloadableRequest;
      // verify the required parameter 'itemDownloadableRequest' is set
      if (itemDownloadableRequest === undefined || itemDownloadableRequest === null) {
        throw new Error("Missing the required parameter 'itemDownloadableRequest' when calling getItemsMediaClipFiles");
      }

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ItemClipFilesList;
      return this.apiClient.callApi(
        '/itv/items/clips', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getList operation.
     * @callback module:api/ContentApi~getListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of items under the specified item list
     * @param {String} id The identifier of the list to load.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The page of items to load. Starts from page 1.
     * @param {Number} [pageSize = 12)] The number of items to return in a page.
     * @param {String} [maxRating] The maximum rating (inclusive) of items returned, e.g. 'auoflc-pg'.
     * @param {module:model/String} [order = 'desc')] The list sort order, either 'asc' or 'desc'.
     * @param {module:model/String} [orderBy] What to order by.
     * @param {String} [param] The list parameter in format 'key:value', e.g. 'genre:action'.
     * @param {module:model/String} [itemType] The item type to filter by. Defaults to unspecified.
     * @param {String} [device = 'web_browser')] The type of device the content is targeting.
     * @param {String} [sub] The active subscription code.
     * @param {Array.<String>} [segments] The list of segments to filter the response by.
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ContentApi~getListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemList}
     */
    getList(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getList");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'page': opts['page'],
        'page_size': opts['pageSize'],
        'max_rating': opts['maxRating'],
        'order': opts['order'],
        'order_by': opts['orderBy'],
        'param': opts['param'],
        'item_type': opts['itemType'],
        'device': opts['device'],
        'sub': opts['sub'],
        'segments': this.apiClient.buildCollectionParam(opts['segments'], 'csv'),
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ItemList;
      return this.apiClient.callApi(
        '/lists/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getLists operation.
     * @callback module:api/ContentApi~getListsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ItemList>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns an array of item lists with their first page of content resolved.
     * @param {Array.<String>} ids A comma delimited list of item list identifiers.  These can be list ids e.g. `14354,65473,3234`  Or more complex sort/filter queries using pipes e.g.  `14354|max_rating=AUOFLC-E|order=asc|order_by=year-added,65473|page_size=30,3234`  _Note the id must always come first for each encoded list query_  List parameters may be provide without the `param=` prefix e.g. `14354|genre:action`  Only the following options can be present.   - `order`   - `order_by`   - `max_rating`   - `page_size`   - `item_type`   - `param` 
     * @param {Object} opts Optional parameters
     * @param {Number} [pageSize = 12)] The number of items to return in a page.
     * @param {String} [maxRating] The maximum rating (inclusive) of items returned, e.g. 'auoflc-pg'.
     * @param {module:model/String} [order = 'desc')] The list sort order, either 'asc' or 'desc'.
     * @param {module:model/String} [orderBy] What to order by.
     * @param {module:model/String} [itemType] The item type to filter by. Defaults to unspecified.
     * @param {String} [device = 'web_browser')] The type of device the content is targeting.
     * @param {String} [sub] The active subscription code.
     * @param {Array.<String>} [segments] The list of segments to filter the response by.
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ContentApi~getListsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ItemList>}
     */
    getLists(ids, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'ids' is set
      if (ids === undefined || ids === null) {
        throw new Error("Missing the required parameter 'ids' when calling getLists");
      }

      let pathParams = {
      };
      let queryParams = {
        'ids': this.apiClient.buildCollectionParam(ids, 'csv'),
        'page_size': opts['pageSize'],
        'max_rating': opts['maxRating'],
        'order': opts['order'],
        'order_by': opts['orderBy'],
        'item_type': opts['itemType'],
        'device': opts['device'],
        'sub': opts['sub'],
        'segments': this.apiClient.buildCollectionParam(opts['segments'], 'csv'),
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ItemList];
      return this.apiClient.callApi(
        '/lists', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPublicItemMediaFiles operation.
     * @callback module:api/ContentApi~getPublicItemMediaFilesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/MediaFile>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the free / public video files associated with an item given maximum resolution, device type and one or more delivery types.  Returns an array of video file objects which each include a url to a video.  The first entry in the array contains what is predicted to be the best match. The remainder of the entries, if any, may contain resolutions below what was requests. For example if you request HD-720 the response may also contain SD entries.  If you specify multiple delivery types, then the response array will insert types in the order you specify them in the query. For example `stream,progressive` would return an array with 0 or more stream files followed by 0 or more progressive files.  If no files are found a 404 is returned. 
     * @param {String} id The identifier of the item whose video files to load.
     * @param {Array.<module:model/String>} delivery The video delivery type you require.
     * @param {module:model/String} resolution The maximum resolution the device to playback the media can present.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [formats] The set of media file formats that the device supports, in the order of preference.  When provided, Rocket API returns only media files in formats specified in this parameter. For each resolution, only the first media file of matching supported format is returned. Files of different resolutions may be of different supported media file formats.  `external` value is reserved for project customizations where the real MIME type of the file on the specified URL is unknown at the time of ingestion.  When not provided, Rocket API uses the legacy `User-Agent` header-based logic to find matching media files. 
     * @param {String} [device = 'web_browser')] The type of device the content is targeting.
     * @param {String} [sub] The active subscription code.
     * @param {Array.<String>} [segments] The list of segments to filter the response by.
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ContentApi~getPublicItemMediaFilesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/MediaFile>}
     */
    getPublicItemMediaFiles(id, delivery, resolution, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getPublicItemMediaFiles");
      }
      // verify the required parameter 'delivery' is set
      if (delivery === undefined || delivery === null) {
        throw new Error("Missing the required parameter 'delivery' when calling getPublicItemMediaFiles");
      }
      // verify the required parameter 'resolution' is set
      if (resolution === undefined || resolution === null) {
        throw new Error("Missing the required parameter 'resolution' when calling getPublicItemMediaFiles");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'delivery': this.apiClient.buildCollectionParam(delivery, 'csv'),
        'resolution': resolution,
        'formats': this.apiClient.buildCollectionParam(opts['formats'], 'csv'),
        'device': opts['device'],
        'sub': opts['sub'],
        'segments': this.apiClient.buildCollectionParam(opts['segments'], 'csv'),
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [MediaFile];
      return this.apiClient.callApi(
        '/items/{id}/videos', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getSchedules operation.
     * @callback module:api/ContentApi~getSchedulesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/ItemScheduleList>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns schedules for a defined set of channels over a requested period.  Schedules are requested in hour blocks and returned grouped by the channel they belong to.  For example, to load 12 hours of schedules for channels `4343` and `5234`, on 21/2/2017 starting from 08:00.  ``` channels=4343,5234 date=2017-02-21 hour=8 duration=12 ```  Please remember that `date` and `hour` combined represent a normal datetime,  so they should be converted to UTC on the client - this will help to avoid  issues with EPG schedules near midnight.  If a channel id is passed which doesn't exist then this endpoint will return an empty schedule list for it. If instead we returned 404, this would invalidate all other channel schedules in the same request which would be unfriendly for clients presenting these channel schedules. 
     * @param {Array.<String>} channels The list of channel ids to get schedules for.
     * @param {Date} date The date to target in ISO format, e.g. `2017-05-23` (converted to UTC - see main description).  The base hour requested will belong to this date. 
     * @param {Number} hour The base hour in the day, defined by the `date` parameter, you wish to load schedules for  (converted to UTC - see main description).  From 0 to 23, where 0 is midnight. 
     * @param {Number} duration The number of hours of schedules to load from the base `hour` parameter.  This may be negative or positive depending on whether you want to load past or future schedules.  Minimum value is -24, maximum is 24. A value of zero is invalid. 
     * @param {Object} opts Optional parameters
     * @param {Boolean} [intersect = false)] Flag indicating whether schedules should intersect or be contained in the provided interval.  If set to `true`, the result will contain all schedules where either schedule start time or end time touches the provided interval.  If set to `false`, only schedules fully contained in the given period will be returned. 
     * @param {String} [device = 'web_browser')] The type of device the content is targeting.
     * @param {String} [sub] The active subscription code.
     * @param {Array.<String>} [segments] The list of segments to filter the response by.
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ContentApi~getSchedulesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/ItemScheduleList>}
     */
    getSchedules(channels, date, hour, duration, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'channels' is set
      if (channels === undefined || channels === null) {
        throw new Error("Missing the required parameter 'channels' when calling getSchedules");
      }
      // verify the required parameter 'date' is set
      if (date === undefined || date === null) {
        throw new Error("Missing the required parameter 'date' when calling getSchedules");
      }
      // verify the required parameter 'hour' is set
      if (hour === undefined || hour === null) {
        throw new Error("Missing the required parameter 'hour' when calling getSchedules");
      }
      // verify the required parameter 'duration' is set
      if (duration === undefined || duration === null) {
        throw new Error("Missing the required parameter 'duration' when calling getSchedules");
      }

      let pathParams = {
      };
      let queryParams = {
        'channels': this.apiClient.buildCollectionParam(channels, 'csv'),
        'date': date,
        'hour': hour,
        'duration': duration,
        'intersect': opts['intersect'],
        'device': opts['device'],
        'sub': opts['sub'],
        'segments': this.apiClient.buildCollectionParam(opts['segments'], 'csv'),
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [ItemScheduleList];
      return this.apiClient.callApi(
        '/schedules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the plansIdGet operation.
     * @callback module:api/ContentApi~plansIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Plan} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the details of a Plan with the specified id.
     * @param {String} id The identifier of the Plan to load.
     * @param {Object} opts Optional parameters
     * @param {String} [device = 'web_browser')] The type of device the content is targeting.
     * @param {String} [sub] The active subscription code.
     * @param {Array.<String>} [segments] The list of segments to filter the response by.
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ContentApi~plansIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Plan}
     */
    plansIdGet(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling plansIdGet");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'device': opts['device'],
        'sub': opts['sub'],
        'segments': this.apiClient.buildCollectionParam(opts['segments'], 'csv'),
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Plan;
      return this.apiClient.callApi(
        '/plans/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the search operation.
     * @callback module:api/ContentApi~searchCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SearchResults} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Search the catalog of items and people.
     * @param {String} term The search term to query.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [include] By default people, movies and tv (shows + programs) will be included in the search results.  If the `cas` feature flag is set, \"other\" items (`customAsset`s) will also be included by default  If you don't want all of these types you can specifiy the specific includes you care about. 
     * @param {Boolean} [group] When this option is set, instead of all search result items being returned in a single list, they will instead be returned under two lists. One for movies and another for tv (shows + programs).  if the `cas` feature flag is set, a third `other` list will be included containing `customAsset` results  Default is undefined meaning items will be returned in a single list.  The array of `people` results will always be separate from items. 
     * @param {Number} [maxResults = 20)] The maximum number of results to return.
     * @param {String} [maxRating] The maximum rating (inclusive) of items returned, e.g. 'auoflc-pg'.
     * @param {String} [device = 'web_browser')] The type of device the content is targeting.
     * @param {String} [sub] The active subscription code.
     * @param {Array.<String>} [segments] The list of segments to filter the response by.
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ContentApi~searchCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SearchResults}
     */
    search(term, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'term' is set
      if (term === undefined || term === null) {
        throw new Error("Missing the required parameter 'term' when calling search");
      }

      let pathParams = {
      };
      let queryParams = {
        'term': term,
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'group': opts['group'],
        'max_results': opts['maxResults'],
        'max_rating': opts['maxRating'],
        'device': opts['device'],
        'sub': opts['sub'],
        'segments': this.apiClient.buildCollectionParam(opts['segments'], 'csv'),
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = SearchResults;
      return this.apiClient.callApi(
        '/search', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
