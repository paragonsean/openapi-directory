/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Account from '../model/Account';
import AccountDevices from '../model/AccountDevices';
import AccountNonce from '../model/AccountNonce';
import AccountUpdateRequest from '../model/AccountUpdateRequest';
import AddPaymentMethodRequest from '../model/AddPaymentMethodRequest';
import ChangePasswordRequest from '../model/ChangePasswordRequest';
import ChangePinRequest from '../model/ChangePinRequest';
import Device from '../model/Device';
import DeviceAuthorizationCode from '../model/DeviceAuthorizationCode';
import DeviceRegistrationRequest from '../model/DeviceRegistrationRequest';
import Entitlement from '../model/Entitlement';
import MediaFile from '../model/MediaFile';
import PaymentMethod from '../model/PaymentMethod';
import ProfileCreationRequest from '../model/ProfileCreationRequest';
import ProfileDetail from '../model/ProfileDetail';
import ProfileSummary from '../model/ProfileSummary';
import ProfileUpdateRequest from '../model/ProfileUpdateRequest';
import Purchase from '../model/Purchase';
import PurchaseRequest from '../model/PurchaseRequest';
import ServiceError from '../model/ServiceError';

/**
* Account service.
* @module api/AccountApi
* @version 3.730.300-ref-1-39-0
*/
export default class AccountApi {

    /**
    * Constructs a new AccountApi. 
    * @alias module:api/AccountApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the addPaymentMethod operation.
     * @callback module:api/AccountApi~addPaymentMethodCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaymentMethod} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a new payment method to an account.
     * @param {module:model/AddPaymentMethodRequest} addPaymentMethodRequest Registration details for a new payment method.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~addPaymentMethodCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaymentMethod}
     */
    addPaymentMethod(addPaymentMethodRequest, opts, callback) {
      opts = opts || {};
      let postBody = addPaymentMethodRequest;
      // verify the required parameter 'addPaymentMethodRequest' is set
      if (addPaymentMethodRequest === undefined || addPaymentMethodRequest === null) {
        throw new Error("Missing the required parameter 'addPaymentMethodRequest' when calling addPaymentMethod");
      }

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PaymentMethod;
      return this.apiClient.callApi(
        '/account/billing/methods', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the authorizeDevice operation.
     * @callback module:api/AccountApi~authorizeDeviceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Authorize a device from a generated device authorization code.  This is the second step in the process of authorizing a device by pin code.  Firstly the device must request a generated authorization code via the `/authorization/device/code` endpoint.  This endpoint then authorizes the device associated with the code to sign in to a user account. Typically this endpoint will be called from a page presented in the web app under the account section.  Once authorized, the device will then be able to sign in to that account via the `/authorization/device` endpoint, without needing to provide the  credentials of the user. 
     * @param {module:model/DeviceAuthorizationCode} deviceAuthorizationCode The generated device authorization code.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~authorizeDeviceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    authorizeDevice(deviceAuthorizationCode, opts, callback) {
      opts = opts || {};
      let postBody = deviceAuthorizationCode;
      // verify the required parameter 'deviceAuthorizationCode' is set
      if (deviceAuthorizationCode === undefined || deviceAuthorizationCode === null) {
        throw new Error("Missing the required parameter 'deviceAuthorizationCode' when calling authorizeDevice");
      }

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/account/devices/authorization', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the cancelSubscription operation.
     * @callback module:api/AccountApi~cancelSubscriptionCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Cancel a plan subscription.  A cancelled subscription will continue to be valid until the subscription expiry date or next renewal date. 
     * @param {String} id The identifier of the current active subscription membership of the account. 
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~cancelSubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     */
    cancelSubscription(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling cancelSubscription");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/account/billing/subscriptions/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the changePassword operation.
     * @callback module:api/AccountApi~changePasswordCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Change the password of an account.  The expected token scope is Settings. 
     * @param {module:model/ChangePasswordRequest} changePasswordRequest The new account password & ITV profile token.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~changePasswordCallback} callback The callback function, accepting three arguments: error, data, response
     */
    changePassword(changePasswordRequest, opts, callback) {
      opts = opts || {};
      let postBody = changePasswordRequest;
      // verify the required parameter 'changePasswordRequest' is set
      if (changePasswordRequest === undefined || changePasswordRequest === null) {
        throw new Error("Missing the required parameter 'changePasswordRequest' when calling changePassword");
      }

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/account/password', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the changePin operation.
     * @callback module:api/AccountApi~changePinCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Change the pin of an account.
     * @param {module:model/ChangePinRequest} changePinRequest The new account pin.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~changePinCallback} callback The callback function, accepting three arguments: error, data, response
     */
    changePin(changePinRequest, opts, callback) {
      opts = opts || {};
      let postBody = changePinRequest;
      // verify the required parameter 'changePinRequest' is set
      if (changePinRequest === undefined || changePinRequest === null) {
        throw new Error("Missing the required parameter 'changePinRequest' when calling changePin");
      }

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/account/pin', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createProfile operation.
     * @callback module:api/AccountApi~createProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProfileDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new profile under the active account.
     * @param {module:model/ProfileCreationRequest} profileCreationRequest Profile details.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~createProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProfileDetail}
     */
    createProfile(profileCreationRequest, opts, callback) {
      opts = opts || {};
      let postBody = profileCreationRequest;
      // verify the required parameter 'profileCreationRequest' is set
      if (profileCreationRequest === undefined || profileCreationRequest === null) {
        throw new Error("Missing the required parameter 'profileCreationRequest' when calling createProfile");
      }

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ProfileDetail;
      return this.apiClient.callApi(
        '/account/profiles', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteProfileWithId operation.
     * @callback module:api/AccountApi~deleteProfileWithIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a profile with a specific id under the active account.  Note that you cannot delete the primary profile. 
     * @param {String} id The identifier of the profile to delete.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~deleteProfileWithIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteProfileWithId(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deleteProfileWithId");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/account/profiles/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deregisterDevice operation.
     * @callback module:api/AccountApi~deregisterDeviceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deregister a playback device from an account.
     * @param {String} id The unique identifier for the registered device e.g. serial number.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~deregisterDeviceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deregisterDevice(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling deregisterDevice");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/account/devices/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the generateNonce operation.
     * @callback module:api/AccountApi~generateNonceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccountNonce} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Generate a new account nonce.  A nonce may be required to help sign a response from a third party service which will be passed back to these services.  For example a Facebook single-sign-on request initiated by a client application may first get a nonce from here to include in the request. Facebook will then include the nonce in the auth token it issues. This token can be passed back to our services and the nonce checked for validity. 
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~generateNonceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccountNonce}
     */
    generateNonce(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AccountNonce;
      return this.apiClient.callApi(
        '/account/nonce', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getAccount operation.
     * @callback module:api/AccountApi~getAccountCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Account} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the details of an account along with the profiles and entitlements under it.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~getAccountCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Account}
     */
    getAccount(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Account;
      return this.apiClient.callApi(
        '/account', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDevice operation.
     * @callback module:api/AccountApi~getDeviceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Device} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a registered device.
     * @param {String} id The unique identifier for the registered device e.g. serial number.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~getDeviceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Device}
     */
    getDevice(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getDevice");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Device;
      return this.apiClient.callApi(
        '/account/devices/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getDevices operation.
     * @callback module:api/AccountApi~getDevicesCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AccountDevices} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all devices registered under this account.  Also includes information around device registration and deregistration limits. 
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~getDevicesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AccountDevices}
     */
    getDevices(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AccountDevices;
      return this.apiClient.callApi(
        '/account/devices', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getEntitlements operation.
     * @callback module:api/AccountApi~getEntitlementsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Entitlement>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all entitlements under the account.  This list is returned under the call to get account information so a call here is only required when wishing to refresh a local copy of entitlements. 
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~getEntitlementsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Entitlement>}
     */
    getEntitlements(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Entitlement];
      return this.apiClient.callApi(
        '/account/entitlements', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getItemMediaFiles operation.
     * @callback module:api/AccountApi~getItemMediaFilesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/MediaFile>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the video files associated with an item given maximum resolution, device type and one or more delivery types.  This endpoint accepts an Account Catalog token, however if when requesting playback files you receive an *403 status code with error code 1* then the file you're requesting is classification restricted. This means you should switch to target the `/account/items/{id}/videos-guarded` endpoint, passing it an Account Playback token. If not already obtained, this token can be requested via the `/itv/pinauthorization` endpoint with an account level pin.  For convenience you may also access free / public files through this endpoint instead of the /items/{id}/videos endpoint, when authenticated.  Returns an array of video file objects which each include a url to a video.  The first entry in the array contains what is predicted to be the best match. The remainder of the entries, if any, may contain resolutions below what was requests. For example if you request HD-720 the response may also contain SD entries.  If you specify multiple delivery types, then the response array will insert types in the order you specify them in the query. For example `stream,progressive` would return an array with 0 or more stream files followed by 0 or more progressive files.  If no files are found a 404 is returned. 
     * @param {String} id The identifier of the item whose video files to load.
     * @param {Array.<module:model/String>} delivery The video delivery type you require.
     * @param {module:model/String} resolution The maximum resolution the device to playback the media can present.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [formats] The set of media file formats that the device supports, in the order of preference.  When provided, Rocket API returns only media files in formats specified in this parameter. For each resolution, only the first media file of matching supported format is returned. Files of different resolutions may be of different supported media file formats.  `external` value is reserved for project customizations where the real MIME type of the file on the specified URL is unknown at the time of ingestion.  When not provided, Rocket API uses the legacy `User-Agent` header-based logic to find matching media files. 
     * @param {String} [device = 'web_browser')] The type of device the content is targeting.
     * @param {String} [sub] The active subscription code.
     * @param {Array.<String>} [segments] The list of segments to filter the response by.
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~getItemMediaFilesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/MediaFile>}
     */
    getItemMediaFiles(id, delivery, resolution, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getItemMediaFiles");
      }
      // verify the required parameter 'delivery' is set
      if (delivery === undefined || delivery === null) {
        throw new Error("Missing the required parameter 'delivery' when calling getItemMediaFiles");
      }
      // verify the required parameter 'resolution' is set
      if (resolution === undefined || resolution === null) {
        throw new Error("Missing the required parameter 'resolution' when calling getItemMediaFiles");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'delivery': this.apiClient.buildCollectionParam(delivery, 'csv'),
        'resolution': resolution,
        'formats': this.apiClient.buildCollectionParam(opts['formats'], 'csv'),
        'device': opts['device'],
        'sub': opts['sub'],
        'segments': this.apiClient.buildCollectionParam(opts['segments'], 'csv'),
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [MediaFile];
      return this.apiClient.callApi(
        '/account/items/{id}/videos', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getItemMediaFilesGuarded operation.
     * @callback module:api/AccountApi~getItemMediaFilesGuardedCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/MediaFile>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the video files associated with an item given maximum resolution, device type and one or more delivery types.  This endpoint is identical to the `/account/items/{id}/videos` however it expects an Account Playback token. This token, and in association this endpoint, is specifically for use when playback files are classification restricted and require an account level pin to access them.  Returns an array of video file objects which each include a url to a video.  The first entry in the array contains what is predicted to be the best match. The remainder of the entries, if any, may contain resolutions below what was requests. For example if you request HD-720 the response may also contain SD entries.  If you specify multiple delivery types, then the response array will insert types in the order you specify them in the query. For example `stream,progressive` would return an array with 0 or more stream files followed by 0 or more progressive files.  If no files are found a 404 is returned. 
     * @param {String} id The identifier of the item whose video files to load.
     * @param {Array.<module:model/String>} delivery The video delivery type you require.
     * @param {module:model/String} resolution The maximum resolution the device to playback the media can present.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [formats] The set of media file formats that the device supports, in the order of preference.  When provided, Rocket API returns only media files in formats specified in this parameter. For each resolution, only the first media file of matching supported format is returned. Files of different resolutions may be of different supported media file formats.  `external` value is reserved for project customizations where the real MIME type of the file on the specified URL is unknown at the time of ingestion.  When not provided, Rocket API uses the legacy `User-Agent` header-based logic to find matching media files. 
     * @param {String} [device = 'web_browser')] The type of device the content is targeting.
     * @param {String} [sub] The active subscription code.
     * @param {Array.<String>} [segments] The list of segments to filter the response by.
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~getItemMediaFilesGuardedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/MediaFile>}
     */
    getItemMediaFilesGuarded(id, delivery, resolution, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getItemMediaFilesGuarded");
      }
      // verify the required parameter 'delivery' is set
      if (delivery === undefined || delivery === null) {
        throw new Error("Missing the required parameter 'delivery' when calling getItemMediaFilesGuarded");
      }
      // verify the required parameter 'resolution' is set
      if (resolution === undefined || resolution === null) {
        throw new Error("Missing the required parameter 'resolution' when calling getItemMediaFilesGuarded");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'delivery': this.apiClient.buildCollectionParam(delivery, 'csv'),
        'resolution': resolution,
        'formats': this.apiClient.buildCollectionParam(opts['formats'], 'csv'),
        'device': opts['device'],
        'sub': opts['sub'],
        'segments': this.apiClient.buildCollectionParam(opts['segments'], 'csv'),
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [MediaFile];
      return this.apiClient.callApi(
        '/account/items/{id}/videos-guarded', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPaymentMethod operation.
     * @callback module:api/AccountApi~getPaymentMethodCallback
     * @param {String} error Error message, if any.
     * @param {module:model/PaymentMethod} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a payment method under an account.
     * @param {String} id The id of the payment method to get.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~getPaymentMethodCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/PaymentMethod}
     */
    getPaymentMethod(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getPaymentMethod");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = PaymentMethod;
      return this.apiClient.callApi(
        '/account/billing/methods/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPaymentMethods operation.
     * @callback module:api/AccountApi~getPaymentMethodsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/PaymentMethod>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the available payment methods under an account.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~getPaymentMethodsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/PaymentMethod>}
     */
    getPaymentMethods(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [PaymentMethod];
      return this.apiClient.callApi(
        '/account/billing/methods', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getProfileWithId operation.
     * @callback module:api/AccountApi~getProfileWithIdCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProfileSummary} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the summary of a profile with a specific id under the active account.
     * @param {String} id The identifier of the profile to return.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~getProfileWithIdCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProfileSummary}
     */
    getProfileWithId(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getProfileWithId");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProfileSummary;
      return this.apiClient.callApi(
        '/account/profiles/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPurchases operation.
     * @callback module:api/AccountApi~getPurchasesCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Purchase>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of all purchases made under an account.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~getPurchasesCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Purchase>}
     */
    getPurchases(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Purchase];
      return this.apiClient.callApi(
        '/account/billing/purchases', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the makePurchase operation.
     * @callback module:api/AccountApi~makePurchaseCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Entitlement} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Purchase a plan or item offer. The result of a successful transaction is a new entitlement. 
     * @param {module:model/PurchaseRequest} purchaseRequest Details of a plan or item purchase.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~makePurchaseCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Entitlement}
     */
    makePurchase(purchaseRequest, opts, callback) {
      opts = opts || {};
      let postBody = purchaseRequest;
      // verify the required parameter 'purchaseRequest' is set
      if (purchaseRequest === undefined || purchaseRequest === null) {
        throw new Error("Missing the required parameter 'purchaseRequest' when calling makePurchase");
      }

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Entitlement;
      return this.apiClient.callApi(
        '/account/billing/purchases', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the registerDevice operation.
     * @callback module:api/AccountApi~registerDeviceCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Device} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Register a playback device under an account.  If a device with the same id already exists a `409` conflict will be returned. 
     * @param {module:model/DeviceRegistrationRequest} deviceRegistrationRequest Registration details for a new playback device.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~registerDeviceCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Device}
     */
    registerDevice(deviceRegistrationRequest, opts, callback) {
      opts = opts || {};
      let postBody = deviceRegistrationRequest;
      // verify the required parameter 'deviceRegistrationRequest' is set
      if (deviceRegistrationRequest === undefined || deviceRegistrationRequest === null) {
        throw new Error("Missing the required parameter 'deviceRegistrationRequest' when calling registerDevice");
      }

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Device;
      return this.apiClient.callApi(
        '/account/devices', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the removePaymentMethod operation.
     * @callback module:api/AccountApi~removePaymentMethodCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove a payment method from an account.
     * @param {String} id The id of the payment method to remove.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~removePaymentMethodCallback} callback The callback function, accepting three arguments: error, data, response
     */
    removePaymentMethod(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling removePaymentMethod");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/account/billing/methods/{id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the renameDevice operation.
     * @callback module:api/AccountApi~renameDeviceCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Rename a device
     * @param {String} id The unique identifier for this registered device e.g. serial number.
     * @param {String} name The new name for the device.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~renameDeviceCallback} callback The callback function, accepting three arguments: error, data, response
     */
    renameDevice(id, name, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling renameDevice");
      }
      // verify the required parameter 'name' is set
      if (name === undefined || name === null) {
        throw new Error("Missing the required parameter 'name' when calling renameDevice");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'name': name,
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/account/devices/{id}/name', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the requestEmailVerification operation.
     * @callback module:api/AccountApi~requestEmailVerificationCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Request that the email address tied to an account be verified.  This will send a verification email to the email address of the primary profile containing a link which, once clicked, completes the verification process via the /verify-email endpoint.  Note that when an account is created this email is sent automatically so there's no need to call this directly.  If the user doesn't click the link before it expires then this endpoint can be called to request a new verification email. In the future it may also be used if we add support for changing an account email address. 
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~requestEmailVerificationCallback} callback The callback function, accepting three arguments: error, data, response
     */
    requestEmailVerification(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/account/request-email-verification', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateAccount operation.
     * @callback module:api/AccountApi~updateAccountCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the details of an account.  With the exception of the address, this supports partial updates, so you can send just the properties you wish to update.  When the address is provided any properties which are omitted from the address will be cleared. 
     * @param {module:model/AccountUpdateRequest} accountUpdateRequest Updated account details.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~updateAccountCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateAccount(accountUpdateRequest, opts, callback) {
      opts = opts || {};
      let postBody = accountUpdateRequest;
      // verify the required parameter 'accountUpdateRequest' is set
      if (accountUpdateRequest === undefined || accountUpdateRequest === null) {
        throw new Error("Missing the required parameter 'accountUpdateRequest' when calling updateAccount");
      }

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/account', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateProfileWithId operation.
     * @callback module:api/AccountApi~updateProfileWithIdCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update the summary of a profile with a specific id under the active account.  This supports partial updates so you can send just the properties you wish to update. 
     * @param {String} id The identifier of the profile to update.
     * @param {module:model/ProfileUpdateRequest} profileUpdateRequest Updated profile details.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~updateProfileWithIdCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateProfileWithId(id, profileUpdateRequest, opts, callback) {
      opts = opts || {};
      let postBody = profileUpdateRequest;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling updateProfileWithId");
      }
      // verify the required parameter 'profileUpdateRequest' is set
      if (profileUpdateRequest === undefined || profileUpdateRequest === null) {
        throw new Error("Missing the required parameter 'profileUpdateRequest' when calling updateProfileWithId");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/account/profiles/{id}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the updateSubscription operation.
     * @callback module:api/AccountApi~updateSubscriptionCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Renew a cancelled subscription or switch subscription to a different plan.  When renewing a cancelled subscription membership, hit this endpoint with the id of subscription to renew.  To switch plans provide the id of the current active subscription membership of the account, and in the query specify the id of the plan to switch to. 
     * @param {String} id The identifier of the current subscription membership associated with the account. 
     * @param {Object} opts Optional parameters
     * @param {String} [planId] The id of the plan to switch to if switching plans.
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/AccountApi~updateSubscriptionCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateSubscription(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling updateSubscription");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'planId': opts['planId'],
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/account/billing/subscriptions/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
