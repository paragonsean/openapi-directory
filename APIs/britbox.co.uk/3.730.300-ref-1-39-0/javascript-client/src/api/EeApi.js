/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import EeBtEligibility from '../model/EeBtEligibility';
import EeCreatePinRequest from '../model/EeCreatePinRequest';
import EeCreatePinResponse from '../model/EeCreatePinResponse';
import EeCreateTokenResponse from '../model/EeCreateTokenResponse';
import EeOffersRequest from '../model/EeOffersRequest';
import EeOffersResponse from '../model/EeOffersResponse';
import EePlanListItem from '../model/EePlanListItem';
import EePlans from '../model/EePlans';
import EeValidatePinRequest from '../model/EeValidatePinRequest';
import EeValidatePinResponse from '../model/EeValidatePinResponse';
import ItvAssignMsisdnRequest from '../model/ItvAssignMsisdnRequest';
import ServiceError from '../model/ServiceError';

/**
* Ee service.
* @module api/EeApi
* @version 3.730.300-ref-1-39-0
*/
export default class EeApi {

    /**
    * Constructs a new EeApi. 
    * @alias module:api/EeApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the assignMsisdn operation.
     * @callback module:api/EeApi~assignMsisdnCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Assigns a msisdn to a profile on ITV side.
     * @param {module:model/ItvAssignMsisdnRequest} itvAssignMsisdnRequest Details of an assign request.
     * @param {Object} opts Optional parameters
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/EeApi~assignMsisdnCallback} callback The callback function, accepting three arguments: error, data, response
     */
    assignMsisdn(itvAssignMsisdnRequest, opts, callback) {
      opts = opts || {};
      let postBody = itvAssignMsisdnRequest;
      // verify the required parameter 'itvAssignMsisdnRequest' is set
      if (itvAssignMsisdnRequest === undefined || itvAssignMsisdnRequest === null) {
        throw new Error("Missing the required parameter 'itvAssignMsisdnRequest' when calling assignMsisdn");
      }

      let pathParams = {
      };
      let queryParams = {
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/ee/msisdn', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the checkEeBtEligibility operation.
     * @callback module:api/EeApi~checkEeBtEligibilityCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EeBtEligibility} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Check whether or not a user is eligible for switching to Bt or EE offers.
     * @param {Object} opts Optional parameters
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/EeApi~checkEeBtEligibilityCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EeBtEligibility}
     */
    checkEeBtEligibility(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['accountAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EeBtEligibility;
      return this.apiClient.callApi(
        '/ee-bt/eligibility', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createPinRequest operation.
     * @callback module:api/EeApi~createPinRequestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EeCreatePinResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Creates a PIN request that will send an SMS to the given msisdn. This call is to validate MSISDN entered by a user not comming through EE network. This call should be followed by POST ee/pin. 
     * @param {module:model/EeCreatePinRequest} eeCreatePinRequest Data for creating the PIN request.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/EeApi~createPinRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EeCreatePinResponse}
     */
    createPinRequest(eeCreatePinRequest, opts, callback) {
      opts = opts || {};
      let postBody = eeCreatePinRequest;
      // verify the required parameter 'eeCreatePinRequest' is set
      if (eeCreatePinRequest === undefined || eeCreatePinRequest === null) {
        throw new Error("Missing the required parameter 'eeCreatePinRequest' when calling createPinRequest");
      }

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = EeCreatePinResponse;
      return this.apiClient.callApi(
        '/ee/pin', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the createToken operation.
     * @callback module:api/EeApi~createTokenCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EeCreateTokenResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a token for later calls to EE API. TTL is one hour. Recommended is FE refreshes this token before each call.
     * @param {module:api/EeApi~createTokenCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EeCreateTokenResponse}
     */
    createToken(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EeCreateTokenResponse;
      return this.apiClient.callApi(
        '/ee/token/create', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the eePlansGet operation.
     * @callback module:api/EeApi~eePlansGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EePlans} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns all the plans available for EE flow including additional description data.
     * @param {Object} opts Optional parameters
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/EeApi~eePlansGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EePlans}
     */
    eePlansGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EePlans;
      return this.apiClient.callApi(
        '/ee/plans', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getEligibleOffers operation.
     * @callback module:api/EeApi~getEligibleOffersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EeOffersResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns eligible partner specific offers for the querying partner for an EE MSISDN. This call is supposed to be called after we have MSISDN accired. This call should be followed by POST /ee/msisdn. 
     * @param {module:model/EeOffersRequest} eeOffersRequest Data for getting the eligible offers.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/EeApi~getEligibleOffersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EeOffersResponse}
     */
    getEligibleOffers(eeOffersRequest, opts, callback) {
      opts = opts || {};
      let postBody = eeOffersRequest;
      // verify the required parameter 'eeOffersRequest' is set
      if (eeOffersRequest === undefined || eeOffersRequest === null) {
        throw new Error("Missing the required parameter 'eeOffersRequest' when calling getEligibleOffers");
      }

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = EeOffersResponse;
      return this.apiClient.callApi(
        '/ee/offers', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getPlan operation.
     * @callback module:api/EeApi~getPlanCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EePlanListItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the plan description for EE flow including additional description data.
     * @param {String} id The identifier of the plan received from ee/offers.
     * @param {Object} opts Optional parameters
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/EeApi~getPlanCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EePlanListItem}
     */
    getPlan(id, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getPlan");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = EePlanListItem;
      return this.apiClient.callApi(
        '/ee/plans/{id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the validatePinRequest operation.
     * @callback module:api/EeApi~validatePinRequestCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EeValidatePinResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Validate PIN request created by calling POST /ee/pin This call is to validate MSISDN entered by a user not comming through EE network. This call should be called after PUT /ee/pin. This call should be followed by POST /ee/offers.
     * @param {module:model/EeValidatePinRequest} eeValidatePinRequest Data for validating PIN.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/EeApi~validatePinRequestCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EeValidatePinResponse}
     */
    validatePinRequest(eeValidatePinRequest, opts, callback) {
      opts = opts || {};
      let postBody = eeValidatePinRequest;
      // verify the required parameter 'eeValidatePinRequest' is set
      if (eeValidatePinRequest === undefined || eeValidatePinRequest === null) {
        throw new Error("Missing the required parameter 'eeValidatePinRequest' when calling validatePinRequest");
      }

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = EeValidatePinResponse;
      return this.apiClient.callApi(
        '/ee/pin', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
