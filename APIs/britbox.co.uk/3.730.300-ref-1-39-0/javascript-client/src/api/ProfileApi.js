/**
 * Rocket Services
 * An Orchestration Layer that takes ISL services and packages them in a more targeted way for front-end applications. This in turn makes client integration easier and reduces the complexity and size of front-end applications.  Rocket is also customisable - allowing UI engineers to ‘remix’ the existing back-end services into something that best suits the application they are developing. 
 *
 * The version of the OpenAPI document: 3.730.300-ref-1-39-0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Bookmark from '../model/Bookmark';
import ItemList from '../model/ItemList';
import NextPlaybackItem from '../model/NextPlaybackItem';
import ProfileDetail from '../model/ProfileDetail';
import ServiceError from '../model/ServiceError';
import UserRating from '../model/UserRating';
import Watched from '../model/Watched';

/**
* Profile service.
* @module api/ProfileApi
* @version 3.730.300-ref-1-39-0
*/
export default class ProfileApi {

    /**
    * Constructs a new ProfileApi. 
    * @alias module:api/ProfileApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the bookmarkItem operation.
     * @callback module:api/ProfileApi~bookmarkItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Bookmark} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Bookmark an item under the active profile.  Creates one if it doesn't exist, overwrites one if it does. 
     * @param {String} itemId The id of the item to bookmark.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ProfileApi~bookmarkItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Bookmark}
     */
    bookmarkItem(itemId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'itemId' is set
      if (itemId === undefined || itemId === null) {
        throw new Error("Missing the required parameter 'itemId' when calling bookmarkItem");
      }

      let pathParams = {
        'itemId': itemId
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['profileAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Bookmark;
      return this.apiClient.callApi(
        '/account/profile/bookmarks/{itemId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteItemBookmark operation.
     * @callback module:api/ProfileApi~deleteItemBookmarkCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Unbookmark an item under the active profile.
     * @param {String} itemId The identifier of the bookmark to delete.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ProfileApi~deleteItemBookmarkCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteItemBookmark(itemId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'itemId' is set
      if (itemId === undefined || itemId === null) {
        throw new Error("Missing the required parameter 'itemId' when calling deleteItemBookmark");
      }

      let pathParams = {
        'itemId': itemId
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['profileAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/account/profile/bookmarks/{itemId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the deleteWatched operation.
     * @callback module:api/ProfileApi~deleteWatchedCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove the watched status of items under the active profile. Passing in specific `itemId`s to the `item_ids` query parameter will cause only these items to be removed. **If this list is missing all watched items will be removed** 
     * @param {Object} opts Optional parameters
     * @param {Array.<String>} [itemIds] List of `itemId`s to delete. Omit this parameter to delete all items 
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ProfileApi~deleteWatchedCallback} callback The callback function, accepting three arguments: error, data, response
     */
    deleteWatched(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'item_ids': this.apiClient.buildCollectionParam(opts['itemIds'], 'csv'),
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['profileAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/account/profile/watched', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBookmarkList operation.
     * @callback module:api/ProfileApi~getBookmarkListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of bookmarked items under the active profile.
     * @param {Object} opts Optional parameters
     * @param {Number} [page] The page of items to load. Starts from page 1.
     * @param {Number} [pageSize] The number of items to return in a page.
     * @param {module:model/String} [order = 'desc')] The list sort order, either 'asc' or 'desc'.
     * @param {module:model/String} [itemType] The item type to filter by. Defaults to unspecified.
     * @param {String} [device = 'web_browser')] The type of device the content is targeting.
     * @param {String} [sub] The active subscription code.
     * @param {Array.<String>} [segments] The list of segments to filter the response by.
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ProfileApi~getBookmarkListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemList}
     */
    getBookmarkList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'page_size': opts['pageSize'],
        'order': opts['order'],
        'item_type': opts['itemType'],
        'device': opts['device'],
        'sub': opts['sub'],
        'segments': this.apiClient.buildCollectionParam(opts['segments'], 'csv'),
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['profileAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ItemList;
      return this.apiClient.callApi(
        '/account/profile/bookmarks/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getBookmarks operation.
     * @callback module:api/ProfileApi~getBookmarksCallback
     * @param {String} error Error message, if any.
     * @param {Object.<String, {String: Date}>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the map of bookmarked item ids (itemId => creationDate) under the active profile.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ProfileApi~getBookmarksCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object.<String, {String: Date}>}
     */
    getBookmarks(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['profileAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = {'String': 'Date'};
      return this.apiClient.callApi(
        '/account/profile/bookmarks', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getContinueWatchingList operation.
     * @callback module:api/ProfileApi~getContinueWatchingListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns a list of items which have been watched but not completed under the active profile.  Multiple episodes under the same show may be watched or in progress, however only a single item belonging to a particular show will be included in the returned list.  The next episode to continue watching for a particular show will be the most recent incompletely watched episode, or the next episode following the most recently completely watched episode. Based on the specified `show_item_type` type, either the next episode, the season of the next episode, or the show will be included in the list. 
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [showItemType = 'episode')] The item type to be returned for continue watching items belonging to a show.  Multiple episodes under the same show may be watched or in progress, however only a single item belonging to a particular show will be included in the returned list.  The next episode to continue watching for a particular show will be the most recent incompletely watched episode, or the next episode following the most recently completely watched episode. Based on the specified `show_item_type` type, either the next episode, the season of the next episode, or the show will be included in the list.  If `episode` is specified, then only the next episode to continue watching for a show will be returned.  If `season` is specified, then only the season of the next episode will be returned.  If `show` is specified, then only the show of the next episode will be returned  The recommended value of this parameter should reflect the desitination the user will be sent to when they select this item in the list. So if a user will be sent to the show detail page then this should be `show` and you can use the `include` parameter to get metadata about the episode or season if needed 
     * @param {Array.<module:model/String>} [include] Include one opr more ancestor/children for items belonging to a show. Extra items will be populated in the `listData` property of the list  If no value is specified no dependencies are included.  If `episode` is specified, then the next episode will be added for season/show items. Has no effect if `show_item_type` is set to `episode`.  If `season` is specified, then the season of the next episode will be added for episode/show items. Has no effect if `show_item_type` is set to `season`.  If `show` is specified, then the show of the next episode will be added for episode/season items. Has no effect if `show_item_type` is set to `show`. 
     * @param {Number} [page = 1)] The page of items to load. Starts from page 1.
     * @param {Number} [pageSize = 12)] The number of items to return in a page.
     * @param {String} [maxRating] The maximum rating (inclusive) of an item returned, e.g. 'auoflc-pg'.
     * @param {String} [device = 'web_browser')] The type of device the content is targeting.
     * @param {String} [sub] The active subscription code.
     * @param {Array.<String>} [segments] The list of segments to filter the response by.
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ProfileApi~getContinueWatchingListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemList}
     */
    getContinueWatchingList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'show_item_type': opts['showItemType'],
        'include': this.apiClient.buildCollectionParam(opts['include'], 'csv'),
        'page': opts['page'],
        'page_size': opts['pageSize'],
        'max_rating': opts['maxRating'],
        'device': opts['device'],
        'sub': opts['sub'],
        'segments': this.apiClient.buildCollectionParam(opts['segments'], 'csv'),
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['profileAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ItemList;
      return this.apiClient.callApi(
        '/account/profile/continue-watching/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getItemBookmark operation.
     * @callback module:api/ProfileApi~getItemBookmarkCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Bookmark} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the bookmark for an item under the active profile.
     * @param {String} itemId The id of the item to get the bookmark for.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ProfileApi~getItemBookmarkCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Bookmark}
     */
    getItemBookmark(itemId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'itemId' is set
      if (itemId === undefined || itemId === null) {
        throw new Error("Missing the required parameter 'itemId' when calling getItemBookmark");
      }

      let pathParams = {
        'itemId': itemId
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['profileAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Bookmark;
      return this.apiClient.callApi(
        '/account/profile/bookmarks/{itemId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getItemRating operation.
     * @callback module:api/ProfileApi~getItemRatingCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserRating} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the rating info for an item under the active profile.
     * @param {String} itemId The id of the item to get the rating info for.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ProfileApi~getItemRatingCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserRating}
     */
    getItemRating(itemId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'itemId' is set
      if (itemId === undefined || itemId === null) {
        throw new Error("Missing the required parameter 'itemId' when calling getItemRating");
      }

      let pathParams = {
        'itemId': itemId
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['profileAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserRating;
      return this.apiClient.callApi(
        '/account/profile/ratings/{itemId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getItemWatchedStatus operation.
     * @callback module:api/ProfileApi~getItemWatchedStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Watched} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the watched status info for an item under the active profile.
     * @param {String} itemId The id of the item to get the watched status for.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ProfileApi~getItemWatchedStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Watched}
     */
    getItemWatchedStatus(itemId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'itemId' is set
      if (itemId === undefined || itemId === null) {
        throw new Error("Missing the required parameter 'itemId' when calling getItemWatchedStatus");
      }

      let pathParams = {
        'itemId': itemId
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['profileAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Watched;
      return this.apiClient.callApi(
        '/account/profile/watched/{itemId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getNextPlaybackItem operation.
     * @callback module:api/ProfileApi~getNextPlaybackItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NextPlaybackItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the next item to play given a source item id.  For an unwatched show it returns the first episode available to the account.  For a watched show it returns the last incompletely watched episode by the profile, or the episode that immediately follows the last completely watched episode  or nothing.  For an episode it always returns the immediately following episode, if available to the account, or nothing.  If the response does not contain a `next` property then no item was found. 
     * @param {String} itemId The identifier of the source item to base the next to watch item off. 
     * @param {Object} opts Optional parameters
     * @param {String} [maxRating] The maximum rating (inclusive) of an item returned, e.g. 'auoflc-pg'.
     * @param {module:model/String} [expand] If no value is specified no dependencies are expanded.  If 'parent' is specified then only the direct parent will be expanded. For example if an `Episode` then the `Season` would be included.  If 'ancestors' is specified then the full parent chain is expanded. For example if an `Episode` then both the `Season` and `Show` would be included. 
     * @param {String} [device = 'web_browser')] The type of device the content is targeting.
     * @param {String} [sub] The active subscription code.
     * @param {Array.<String>} [segments] The list of segments to filter the response by.
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ProfileApi~getNextPlaybackItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NextPlaybackItem}
     */
    getNextPlaybackItem(itemId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'itemId' is set
      if (itemId === undefined || itemId === null) {
        throw new Error("Missing the required parameter 'itemId' when calling getNextPlaybackItem");
      }

      let pathParams = {
        'itemId': itemId
      };
      let queryParams = {
        'max_rating': opts['maxRating'],
        'expand': opts['expand'],
        'device': opts['device'],
        'sub': opts['sub'],
        'segments': this.apiClient.buildCollectionParam(opts['segments'], 'csv'),
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['profileAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NextPlaybackItem;
      return this.apiClient.callApi(
        '/account/profile/items/{itemId}/next', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getProfile operation.
     * @callback module:api/ProfileApi~getProfileCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ProfileDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the details of the active profile, including watched, bookmarked and rated items.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ProfileApi~getProfileCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ProfileDetail}
     */
    getProfile(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['profileAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ProfileDetail;
      return this.apiClient.callApi(
        '/account/profile', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRatings operation.
     * @callback module:api/ProfileApi~getRatingsCallback
     * @param {String} error Error message, if any.
     * @param {Object.<String, {String: Number}>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the map of rated item ids (itemId => rating out of 10) under the active profile.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ProfileApi~getRatingsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object.<String, {String: Number}>}
     */
    getRatings(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['profileAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = {'String': 'Number'};
      return this.apiClient.callApi(
        '/account/profile/ratings', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRatingsList operation.
     * @callback module:api/ProfileApi~getRatingsListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of rated items under the active profile.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The page of items to load. Starts from page 1.
     * @param {Number} [pageSize = 12)] The number of items to return in a page.
     * @param {module:model/String} [order = 'desc')] The list sort order, either 'asc' or 'desc'.
     * @param {module:model/String} [orderBy = 'date-added')] What to order by.  Ordering by `date-modified` equates to ordering by the last rated date. 
     * @param {module:model/String} [itemType] The item type to filter by. Defaults to unspecified.
     * @param {String} [device = 'web_browser')] The type of device the content is targeting.
     * @param {String} [sub] The active subscription code.
     * @param {Array.<String>} [segments] The list of segments to filter the response by.
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ProfileApi~getRatingsListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemList}
     */
    getRatingsList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'page_size': opts['pageSize'],
        'order': opts['order'],
        'order_by': opts['orderBy'],
        'item_type': opts['itemType'],
        'device': opts['device'],
        'sub': opts['sub'],
        'segments': this.apiClient.buildCollectionParam(opts['segments'], 'csv'),
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['profileAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ItemList;
      return this.apiClient.callApi(
        '/account/profile/ratings/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWatched operation.
     * @callback module:api/ProfileApi~getWatchedCallback
     * @param {String} error Error message, if any.
     * @param {Object.<String, module:model/{String: Watched}>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get the map of watched item ids (itemId => last playhead position) under the active profile.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ProfileApi~getWatchedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Object.<String, module:model/{String: Watched}>}
     */
    getWatched(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['profileAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = {'String': Watched};
      return this.apiClient.callApi(
        '/account/profile/watched', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getWatchedList operation.
     * @callback module:api/ProfileApi~getWatchedListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ItemList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Returns the list of watched items under the active profile.
     * @param {Object} opts Optional parameters
     * @param {Number} [page = 1)] The page of items to load. Starts from page 1.
     * @param {Number} [pageSize = 12)] The number of items to return in a page.
     * @param {Boolean} [completed] Filter by whether an item has been fully watched (completed) or not.  If `undefined` then both partially and fully watched items are returned. 
     * @param {module:model/String} [order = 'desc')] The list sort order, either 'asc' or 'desc'.
     * @param {module:model/String} [orderBy = 'date-added')] What to order by.  Ordering by `date-modified` equates to ordering by the last watched date. 
     * @param {module:model/String} [itemType] The item type to filter by. Defaults to unspecified.
     * @param {String} [device = 'web_browser')] The type of device the content is targeting.
     * @param {String} [sub] The active subscription code.
     * @param {Array.<String>} [segments] The list of segments to filter the response by.
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ProfileApi~getWatchedListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ItemList}
     */
    getWatchedList(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'page_size': opts['pageSize'],
        'completed': opts['completed'],
        'order': opts['order'],
        'order_by': opts['orderBy'],
        'item_type': opts['itemType'],
        'device': opts['device'],
        'sub': opts['sub'],
        'segments': this.apiClient.buildCollectionParam(opts['segments'], 'csv'),
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['profileAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = ItemList;
      return this.apiClient.callApi(
        '/account/profile/watched/list', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the rateItem operation.
     * @callback module:api/ProfileApi~rateItemCallback
     * @param {String} error Error message, if any.
     * @param {module:model/UserRating} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Rate an item under the active profile.  Creates one if it doesn't exist, overwrites one if it does. 
     * @param {String} itemId The id of the item to rate.
     * @param {Number} rating The item rating between 1 and 10 inclusive.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ProfileApi~rateItemCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/UserRating}
     */
    rateItem(itemId, rating, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'itemId' is set
      if (itemId === undefined || itemId === null) {
        throw new Error("Missing the required parameter 'itemId' when calling rateItem");
      }
      // verify the required parameter 'rating' is set
      if (rating === undefined || rating === null) {
        throw new Error("Missing the required parameter 'rating' when calling rateItem");
      }

      let pathParams = {
        'itemId': itemId
      };
      let queryParams = {
        'rating': rating,
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['profileAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = UserRating;
      return this.apiClient.callApi(
        '/account/profile/ratings/{itemId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setItemWatchedStatus operation.
     * @callback module:api/ProfileApi~setItemWatchedStatusCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Watched} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Record the watched playhead position of a video under the active profile.  Can be used later to resume a video from where it was last watched.  Creates one if it doesn't exist, overwrites one if it does. 
     * @param {String} itemId The id of the item being watched.
     * @param {Number} position The playhead position to record.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [ff] The set of opt in feature flags which cause breaking changes to responses.  While Rocket APIs look to avoid breaking changes under the active major version, the formats of responses may need to evolve over this time.  These feature flags allow clients to select which response formats they expect and avoid breaking clients as these formats evolve under the current major version.  ### Flags  - `all` - Enable all flags. Useful for testing. _Don't use in production_. - `idp` - Dynamic item detail pages with schedulable rows. - `ldp` - Dynamic list detail pages with schedulable rows. - `hb` - Hubble formatted image urls. - `rpt` - Updated resume point threshold logic. - `cas` - \"Custom Asset Search\", inlcude `customAssets` in search results. - `lrl` - Do not pre-populate related list if more than `max_list_prefetch` down the page. - `cd` - Custom Destination support.  See the `feature-flags.md` for available flag details. 
     * @param {String} [lang] Language code for the preferred language to be returned in the response.  Parameter value is case-insensitive and should be   - a valid 2 letter language code without region such as en, de   - or with region such as en_us, en_au  If undefined then defaults to 'en', unless the server has been configured with a custom default.  See https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes 
     * @param {module:api/ProfileApi~setItemWatchedStatusCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Watched}
     */
    setItemWatchedStatus(itemId, position, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'itemId' is set
      if (itemId === undefined || itemId === null) {
        throw new Error("Missing the required parameter 'itemId' when calling setItemWatchedStatus");
      }
      // verify the required parameter 'position' is set
      if (position === undefined || position === null) {
        throw new Error("Missing the required parameter 'position' when calling setItemWatchedStatus");
      }

      let pathParams = {
        'itemId': itemId
      };
      let queryParams = {
        'position': position,
        'ff': this.apiClient.buildCollectionParam(opts['ff'], 'csv'),
        'lang': opts['lang']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['profileAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Watched;
      return this.apiClient.callApi(
        '/account/profile/watched/{itemId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
