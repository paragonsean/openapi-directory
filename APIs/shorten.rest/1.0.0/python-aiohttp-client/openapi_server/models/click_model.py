# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClickModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alias: str=None, alias_id: str=None, browser: str=None, country: str=None, created_at: int=None, destination: str=None, domain: str=None, os: str=None, referrer: str=None, user_agent: str=None):
        """ClickModel - a model defined in OpenAPI

        :param alias: The alias of this ClickModel.
        :param alias_id: The alias_id of this ClickModel.
        :param browser: The browser of this ClickModel.
        :param country: The country of this ClickModel.
        :param created_at: The created_at of this ClickModel.
        :param destination: The destination of this ClickModel.
        :param domain: The domain of this ClickModel.
        :param os: The os of this ClickModel.
        :param referrer: The referrer of this ClickModel.
        :param user_agent: The user_agent of this ClickModel.
        """
        self.openapi_types = {
            'alias': str,
            'alias_id': str,
            'browser': str,
            'country': str,
            'created_at': int,
            'destination': str,
            'domain': str,
            'os': str,
            'referrer': str,
            'user_agent': str
        }

        self.attribute_map = {
            'alias': 'alias',
            'alias_id': 'aliasId',
            'browser': 'browser',
            'country': 'country',
            'created_at': 'createdAt',
            'destination': 'destination',
            'domain': 'domain',
            'os': 'os',
            'referrer': 'referrer',
            'user_agent': 'userAgent'
        }

        self._alias = alias
        self._alias_id = alias_id
        self._browser = browser
        self._country = country
        self._created_at = created_at
        self._destination = destination
        self._domain = domain
        self._os = os
        self._referrer = referrer
        self._user_agent = user_agent

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClickModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClickModel of this ClickModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alias(self):
        """Gets the alias of this ClickModel.


        :return: The alias of this ClickModel.
        :rtype: str
        """
        return self._alias

    @alias.setter
    def alias(self, alias):
        """Sets the alias of this ClickModel.


        :param alias: The alias of this ClickModel.
        :type alias: str
        """

        self._alias = alias

    @property
    def alias_id(self):
        """Gets the alias_id of this ClickModel.


        :return: The alias_id of this ClickModel.
        :rtype: str
        """
        return self._alias_id

    @alias_id.setter
    def alias_id(self, alias_id):
        """Sets the alias_id of this ClickModel.


        :param alias_id: The alias_id of this ClickModel.
        :type alias_id: str
        """

        self._alias_id = alias_id

    @property
    def browser(self):
        """Gets the browser of this ClickModel.


        :return: The browser of this ClickModel.
        :rtype: str
        """
        return self._browser

    @browser.setter
    def browser(self, browser):
        """Sets the browser of this ClickModel.


        :param browser: The browser of this ClickModel.
        :type browser: str
        """

        self._browser = browser

    @property
    def country(self):
        """Gets the country of this ClickModel.


        :return: The country of this ClickModel.
        :rtype: str
        """
        return self._country

    @country.setter
    def country(self, country):
        """Sets the country of this ClickModel.


        :param country: The country of this ClickModel.
        :type country: str
        """

        self._country = country

    @property
    def created_at(self):
        """Gets the created_at of this ClickModel.


        :return: The created_at of this ClickModel.
        :rtype: int
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ClickModel.


        :param created_at: The created_at of this ClickModel.
        :type created_at: int
        """

        self._created_at = created_at

    @property
    def destination(self):
        """Gets the destination of this ClickModel.


        :return: The destination of this ClickModel.
        :rtype: str
        """
        return self._destination

    @destination.setter
    def destination(self, destination):
        """Sets the destination of this ClickModel.


        :param destination: The destination of this ClickModel.
        :type destination: str
        """

        self._destination = destination

    @property
    def domain(self):
        """Gets the domain of this ClickModel.


        :return: The domain of this ClickModel.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this ClickModel.


        :param domain: The domain of this ClickModel.
        :type domain: str
        """

        self._domain = domain

    @property
    def os(self):
        """Gets the os of this ClickModel.


        :return: The os of this ClickModel.
        :rtype: str
        """
        return self._os

    @os.setter
    def os(self, os):
        """Sets the os of this ClickModel.


        :param os: The os of this ClickModel.
        :type os: str
        """

        self._os = os

    @property
    def referrer(self):
        """Gets the referrer of this ClickModel.


        :return: The referrer of this ClickModel.
        :rtype: str
        """
        return self._referrer

    @referrer.setter
    def referrer(self, referrer):
        """Sets the referrer of this ClickModel.


        :param referrer: The referrer of this ClickModel.
        :type referrer: str
        """

        self._referrer = referrer

    @property
    def user_agent(self):
        """Gets the user_agent of this ClickModel.


        :return: The user_agent of this ClickModel.
        :rtype: str
        """
        return self._user_agent

    @user_agent.setter
    def user_agent(self, user_agent):
        """Sets the user_agent of this ClickModel.


        :param user_agent: The user_agent of this ClickModel.
        :type user_agent: str
        """

        self._user_agent = user_agent
