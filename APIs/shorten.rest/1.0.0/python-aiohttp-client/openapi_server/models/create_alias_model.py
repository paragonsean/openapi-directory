# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.destination_model import DestinationModel
from openapi_server.models.meta_tag_model import MetaTagModel
from openapi_server.models.snippet_model import SnippetModel
from openapi_server import util


class CreateAliasModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destinations: List[DestinationModel]=None, metatags: List[MetaTagModel]=None, snippets: List[SnippetModel]=None):
        """CreateAliasModel - a model defined in OpenAPI

        :param destinations: The destinations of this CreateAliasModel.
        :param metatags: The metatags of this CreateAliasModel.
        :param snippets: The snippets of this CreateAliasModel.
        """
        self.openapi_types = {
            'destinations': List[DestinationModel],
            'metatags': List[MetaTagModel],
            'snippets': List[SnippetModel]
        }

        self.attribute_map = {
            'destinations': 'destinations',
            'metatags': 'metatags',
            'snippets': 'snippets'
        }

        self._destinations = destinations
        self._metatags = metatags
        self._snippets = snippets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAliasModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CreateAliasModel of this CreateAliasModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destinations(self):
        """Gets the destinations of this CreateAliasModel.


        :return: The destinations of this CreateAliasModel.
        :rtype: List[DestinationModel]
        """
        return self._destinations

    @destinations.setter
    def destinations(self, destinations):
        """Sets the destinations of this CreateAliasModel.


        :param destinations: The destinations of this CreateAliasModel.
        :type destinations: List[DestinationModel]
        """

        self._destinations = destinations

    @property
    def metatags(self):
        """Gets the metatags of this CreateAliasModel.


        :return: The metatags of this CreateAliasModel.
        :rtype: List[MetaTagModel]
        """
        return self._metatags

    @metatags.setter
    def metatags(self, metatags):
        """Sets the metatags of this CreateAliasModel.


        :param metatags: The metatags of this CreateAliasModel.
        :type metatags: List[MetaTagModel]
        """

        self._metatags = metatags

    @property
    def snippets(self):
        """Gets the snippets of this CreateAliasModel.


        :return: The snippets of this CreateAliasModel.
        :rtype: List[SnippetModel]
        """
        return self._snippets

    @snippets.setter
    def snippets(self, snippets):
        """Sets the snippets of this CreateAliasModel.


        :param snippets: The snippets of this CreateAliasModel.
        :type snippets: List[SnippetModel]
        """

        self._snippets = snippets
