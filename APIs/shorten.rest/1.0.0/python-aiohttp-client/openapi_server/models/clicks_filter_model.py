# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClicksFilterModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, alias_id: str=None, date_from: str=None, date_to: str=None, domain: str=None, last_id: int=None):
        """ClicksFilterModel - a model defined in OpenAPI

        :param alias_id: The alias_id of this ClicksFilterModel.
        :param date_from: The date_from of this ClicksFilterModel.
        :param date_to: The date_to of this ClicksFilterModel.
        :param domain: The domain of this ClicksFilterModel.
        :param last_id: The last_id of this ClicksFilterModel.
        """
        self.openapi_types = {
            'alias_id': str,
            'date_from': str,
            'date_to': str,
            'domain': str,
            'last_id': int
        }

        self.attribute_map = {
            'alias_id': 'aliasId',
            'date_from': 'dateFrom',
            'date_to': 'dateTo',
            'domain': 'domain',
            'last_id': 'lastId'
        }

        self._alias_id = alias_id
        self._date_from = date_from
        self._date_to = date_to
        self._domain = domain
        self._last_id = last_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClicksFilterModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClicksFilterModel of this ClicksFilterModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def alias_id(self):
        """Gets the alias_id of this ClicksFilterModel.

        Alias Id

        :return: The alias_id of this ClicksFilterModel.
        :rtype: str
        """
        return self._alias_id

    @alias_id.setter
    def alias_id(self, alias_id):
        """Sets the alias_id of this ClicksFilterModel.

        Alias Id

        :param alias_id: The alias_id of this ClicksFilterModel.
        :type alias_id: str
        """

        self._alias_id = alias_id

    @property
    def date_from(self):
        """Gets the date_from of this ClicksFilterModel.

        date From

        :return: The date_from of this ClicksFilterModel.
        :rtype: str
        """
        return self._date_from

    @date_from.setter
    def date_from(self, date_from):
        """Sets the date_from of this ClicksFilterModel.

        date From

        :param date_from: The date_from of this ClicksFilterModel.
        :type date_from: str
        """

        self._date_from = date_from

    @property
    def date_to(self):
        """Gets the date_to of this ClicksFilterModel.

        date To

        :return: The date_to of this ClicksFilterModel.
        :rtype: str
        """
        return self._date_to

    @date_to.setter
    def date_to(self, date_to):
        """Sets the date_to of this ClicksFilterModel.

        date To

        :param date_to: The date_to of this ClicksFilterModel.
        :type date_to: str
        """

        self._date_to = date_to

    @property
    def domain(self):
        """Gets the domain of this ClicksFilterModel.

        Domain name

        :return: The domain of this ClicksFilterModel.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this ClicksFilterModel.

        Domain name

        :param domain: The domain of this ClicksFilterModel.
        :type domain: str
        """

        self._domain = domain

    @property
    def last_id(self):
        """Gets the last_id of this ClicksFilterModel.

        last Id

        :return: The last_id of this ClicksFilterModel.
        :rtype: int
        """
        return self._last_id

    @last_id.setter
    def last_id(self, last_id):
        """Sets the last_id of this ClicksFilterModel.

        last Id

        :param last_id: The last_id of this ClicksFilterModel.
        :type last_id: int
        """

        self._last_id = last_id
