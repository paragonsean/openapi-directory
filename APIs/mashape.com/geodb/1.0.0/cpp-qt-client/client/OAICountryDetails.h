/**
 * GeoDB Cities API
 * The GeoDB API focuses on getting global city and region data. Easily obtain country, region, and city data for use in your apps!  <ul>   <li>Filter cities by name prefix, country, location, time-zone, and even minimum population.</li>   <li>Sort cities by name, country code, elevation, and population - or any combination of these.</li>    <li>Get all country regions.</li> <li>Get all cities in a given region.</li>   <li>     Display results in multiple languages.</li> <li>RESTful API adheres to industry best-practices, including     HATEOAS-style links to facilitate paging results.   </li>    <li>Backed by cloud-based load-balanced infrastructure for resiliency and performance!</li>   <li>Data is periodically refreshed from GeoNames and WikiData.</li> </ul> <p>Notes: <ul>   <li>     Since the database is periodically updated, this may <strong>very rarely</strong> result in certain cities     being marked deleted (e.g., duplicates removed). By default, endpoints returning city data will exclude     cities marked deleted. However, in the unlikely event that this occurs while your app is paging through a set     of affected results - and you care about the paged results suddenly changing underneath - specify      <tt>includeDeleted=SINCE_YESTERDAY</tt> (or <tt>SINCE_LAST_WEEK</tt> if you're really paranoid!).   </li> </ul> <hr/> <h3>Useful Resources</h3> <ul>   <li>     SDKs     <ul>       <li>         <a href='https://www.npmjs.com/package/wft-geodb-angular-client'>Angular</a>,          <a href='https://github.com/wirefreethought/geodb-sample-angular-app'>Sample App</a>       </li>       <li><a href='https://github.com/wirefreethought/geodb-java-client'>Java</a></li>       <li><a href='https://www.npmjs.com/package/wft-geodb-js-client'>JavaScript</a></li>     </ul>     <li><a href='swagger.json'>Swagger Docs</a></li>     <li><a href='http://creativecommons.org/licenses/by/3.0/'>Usage License</a></li>   </li>       </ul> 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICountryDetails.h
 *
 * Full country details
 */

#ifndef OAICountryDetails_H
#define OAICountryDetails_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAICountryDetails : public OAIObject {
public:
    OAICountryDetails();
    OAICountryDetails(QString json);
    ~OAICountryDetails() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCallingCode() const;
    void setCallingCode(const QString &calling_code);
    bool is_calling_code_Set() const;
    bool is_calling_code_Valid() const;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QList<QString> getCurrencyCodes() const;
    void setCurrencyCodes(const QList<QString> &currency_codes);
    bool is_currency_codes_Set() const;
    bool is_currency_codes_Valid() const;

    QString getFlagImageUri() const;
    void setFlagImageUri(const QString &flag_image_uri);
    bool is_flag_image_uri_Set() const;
    bool is_flag_image_uri_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getNumRegions() const;
    void setNumRegions(const qint32 &num_regions);
    bool is_num_regions_Set() const;
    bool is_num_regions_Valid() const;

    QString getWikiDataId() const;
    void setWikiDataId(const QString &wiki_data_id);
    bool is_wiki_data_id_Set() const;
    bool is_wiki_data_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_calling_code;
    bool m_calling_code_isSet;
    bool m_calling_code_isValid;

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QList<QString> m_currency_codes;
    bool m_currency_codes_isSet;
    bool m_currency_codes_isValid;

    QString m_flag_image_uri;
    bool m_flag_image_uri_isSet;
    bool m_flag_image_uri_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_num_regions;
    bool m_num_regions_isSet;
    bool m_num_regions_isValid;

    QString m_wiki_data_id;
    bool m_wiki_data_id_isSet;
    bool m_wiki_data_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICountryDetails)

#endif // OAICountryDetails_H
