openapi: 3.0.1
info:
  description: "The GeoDB API focuses on getting global city and region data. Easily\
    \ obtain country, region, and city data for use\nin your apps! \n<ul>\n  <li>Filter\
    \ cities by name prefix, country, location, time-zone, and even minimum population.</li>\n\
    \  <li>Sort cities by name, country code, elevation, and population - or any combination\
    \ of these.</li> \n  <li>Get all country regions.</li> <li>Get all cities in a\
    \ given region.</li>\n  <li>\n    Display results in multiple languages.</li>\
    \ <li>RESTful API adheres to industry best-practices, including\n    HATEOAS-style\
    \ links to facilitate paging results.\n  </li> \n  <li>Backed by cloud-based load-balanced\
    \ infrastructure for resiliency and performance!</li>\n  <li>Data is periodically\
    \ refreshed from GeoNames and WikiData.</li>\n</ul>\n<p>Notes:\n<ul>\n  <li>\n\
    \    Since the database is periodically updated, this may <strong>very rarely</strong>\
    \ result in certain cities\n    being marked deleted (e.g., duplicates removed).\
    \ By default, endpoints returning city data will exclude\n    cities marked deleted.\
    \ However, in the unlikely event that this occurs while your app is paging through\
    \ a set\n    of affected results - and you care about the paged results suddenly\
    \ changing underneath - specify \n    <tt>includeDeleted=SINCE_YESTERDAY</tt>\
    \ (or <tt>SINCE_LAST_WEEK</tt> if you're really paranoid!).\n  </li>\n</ul>\n\
    <hr/>\n<h3>Useful Resources</h3>\n<ul>\n  <li>\n    SDKs\n    <ul>\n      <li>\n\
    \        <a href='https://www.npmjs.com/package/wft-geodb-angular-client'>Angular</a>,\
    \ \n        <a href='https://github.com/wirefreethought/geodb-sample-angular-app'>Sample\
    \ App</a>\n      </li>\n      <li><a href='https://github.com/wirefreethought/geodb-java-client'>Java</a></li>\n\
    \      <li><a href='https://www.npmjs.com/package/wft-geodb-js-client'>JavaScript</a></li>\n\
    \    </ul>\n    <li><a href='swagger.json'>Swagger Docs</a></li>\n    <li><a href='http://creativecommons.org/licenses/by/3.0/'>Usage\
    \ License</a></li>\n  </li>      \n</ul>\n"
  license:
    name: Creative Commons Attribution 3.0
    url: http://creativecommons.org/licenses/by/3.0/
  title: GeoDB Cities API
  version: 1.0.0
  x-apisguru-categories:
  - developer_tools
  - location
  x-logo:
    backgroundColor: '#FFFFFF'
    url: https://wirefreethought.github.io/geodb-cities-api-docs/images/logo.png
  x-origin:
  - format: swagger
    url: https://wirefreethought.github.io/geodb-cities-api-docs/swagger.json
    version: "2.0"
  x-providerName: mashape.com
  x-serviceName: geodb
servers:
- url: https://wft-geo-db.p.rapidapi.com/v1
security:
- UserSecurity: []
tags:
- description: Geo Endpoints
  name: Geo
- description: Locale Endpoints
  name: Locale
paths:
  /geo/adminDivisions:
    get:
      description: |
        Find administrative divisions, filtering by optional criteria. If no criteria are set, you will get back all
        known divisions.
      operationId: findAdminDivisionsUsingGET
      parameters:
      - description: "Only places near this location. Latitude/longitude in ISO-6709\
          \ format: ±DD.DDDD±DDD.DDDD"
        in: query
        name: location
        schema:
          type: string
      - description: The location radius within which to find places
        in: query
        name: radius
        schema:
          format: int32
          type: integer
      - description: "The unit of distance: MI | KM"
        in: query
        name: distanceUnit
        schema:
          default: MI
          type: string
      - description: Only places in these countries (comma-delimited country codes
          or WikiData ids)
        in: query
        name: countryIds
        schema:
          type: string
      - description: Only places NOT in these countries (comma-delimited country codes
          or WikiData ids)
        in: query
        name: excludedCountryIds
        schema:
          type: string
      - description: Only places having at least this population
        in: query
        name: minPopulation
        schema:
          format: int32
          type: integer
      - description: Only places having no more than this population
        in: query
        name: maxPopulation
        schema:
          format: int32
          type: integer
      - description: |
          Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name
          as it appears in that language.
        in: query
        name: namePrefix
        schema:
          type: string
      - description: |
          When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.
        in: query
        name: namePrefixDefaultLangResults
        schema:
          default: true
          type: boolean
      - description: Only places in these time-zones (comma-delimited)
        in: query
        name: timeZoneIds
        schema:
          type: string
      - description: Display results using ASCII characters
        in: query
        name: asciiMode
        schema:
          default: false
          type: boolean
      - description: Include HATEOAS-style links in results
        in: query
        name: hateoasMode
        schema:
          default: true
          type: boolean
      - description: Display results in this language
        in: query
        name: languageCode
        schema:
          type: string
      - description: The maximum number of results to retrieve
        in: query
        name: limit
        schema:
          default: 10
          format: int32
          type: integer
      - description: The zero-ary offset index into the results
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere\
          \ SORT_FIELD = countryCode | elevation | name | population\n"
        in: query
        name: sort
        schema:
          type: string
      - description: "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY\
          \ | SINCE_LAST_WEEK | NONE"
        in: query
        name: includeDeleted
        schema:
          default: NONE
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopulatedPlacesResponse'
          description: A list of populated places
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
      summary: Find administrative divisions
      tags:
      - Geo
      x-accepts:
      - application/json
  /geo/adminDivisions/{divisionId}:
    get:
      description: |
        Get the details for a specific administrative division, including location coordinates, population, and
        elevation above sea-level (if available).
      operationId: getAdminDivisionUsingGET
      parameters:
      - description: An admin-division id (either native 'id' or 'wikiDataId')
        in: path
        name: divisionId
        required: true
        schema:
          type: string
      - description: Display results using ASCII characters
        in: query
        name: asciiMode
        schema:
          default: false
          type: boolean
      - description: Display results in this language
        in: query
        name: languageCode
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopulatedPlaceResponse'
          description: Populated-place details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: 404 - Not Found
      summary: Get administrative division details
      tags:
      - Geo
      x-accepts:
      - application/json
  /geo/adminDivisions/{divisionId}/nearbyCities:
    get:
      description: |
        Find cities near the given administrative division, filtering by optional criteria. If no criteria are set, you
        will get back all known cities.
      operationId: findCitiesNearAdminDivisionUsingGET
      parameters:
      - description: An admin-division id (either native 'id' or 'wikiDataId')
        in: path
        name: divisionId
        required: true
        schema:
          type: string
      - description: The location radius within which to find places
        in: query
        name: radius
        schema:
          format: int32
          type: integer
      - description: "The unit of distance: MI | KM"
        in: query
        name: distanceUnit
        schema:
          default: MI
          type: string
      - description: Only places in these countries (comma-delimited country codes
          or WikiData ids)
        in: query
        name: countryIds
        schema:
          type: string
      - description: Only places NOT in these countries (comma-delimited country codes
          or WikiData ids)
        in: query
        name: excludedCountryIds
        schema:
          type: string
      - description: Only places having at least this population
        in: query
        name: minPopulation
        schema:
          format: int32
          type: integer
      - description: Only places having no more than this population
        in: query
        name: maxPopulation
        schema:
          format: int32
          type: integer
      - description: |
          Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name
          as it appears in that language.
        in: query
        name: namePrefix
        schema:
          type: string
      - description: |
          When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.
        in: query
        name: namePrefixDefaultLangResults
        schema:
          default: true
          type: boolean
      - description: Only places in these time-zones (comma-delimited)
        in: query
        name: timeZoneIds
        schema:
          type: string
      - description: "Only places for these types (comma-delimited): CITY | ADM2"
        in: query
        name: types
        schema:
          type: string
      - description: Display results using ASCII characters
        in: query
        name: asciiMode
        schema:
          default: false
          type: boolean
      - description: Include HATEOAS-style links in results
        in: query
        name: hateoasMode
        schema:
          default: true
          type: boolean
      - description: Display results in this language
        in: query
        name: languageCode
        schema:
          type: string
      - description: The maximum number of results to retrieve
        in: query
        name: limit
        schema:
          default: 10
          format: int32
          type: integer
      - description: The zero-ary offset index into the results
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere\
          \ SORT_FIELD = countryCode | elevation | name | population\n"
        in: query
        name: sort
        schema:
          type: string
      - description: "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY\
          \ | SINCE_LAST_WEEK | NONE"
        in: query
        name: includeDeleted
        schema:
          default: NONE
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopulatedPlacesResponse'
          description: A list of populated places
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: 404 - Not Found
      summary: Find cities near division
      tags:
      - Geo
      x-accepts:
      - application/json
  /geo/adminDivisions/{divisionId}/nearbyDivisions:
    get:
      description: |
        Find administrative divisions near the given origin division, filtering by optional criteria. If no criteria
        are set, you will get back all known divisions.
      operationId: findDivisionsNearAdminDivisionUsingGET
      parameters:
      - description: An admin-division id (either native 'id' or 'wikiDataId')
        in: path
        name: divisionId
        required: true
        schema:
          type: string
      - description: The location radius within which to find places
        in: query
        name: radius
        schema:
          format: int32
          type: integer
      - description: "The unit of distance: MI | KM"
        in: query
        name: distanceUnit
        schema:
          default: MI
          type: string
      - description: Only places in these countries (comma-delimited country codes
          or WikiData ids)
        in: query
        name: countryIds
        schema:
          type: string
      - description: Only places NOT in these countries (comma-delimited country codes
          or WikiData ids)
        in: query
        name: excludedCountryIds
        schema:
          type: string
      - description: Only places having at least this population
        in: query
        name: minPopulation
        schema:
          format: int32
          type: integer
      - description: Only places having no more than this population
        in: query
        name: maxPopulation
        schema:
          format: int32
          type: integer
      - description: |
          Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name
          as it appears in that language.
        in: query
        name: namePrefix
        schema:
          type: string
      - description: |
          When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.
        in: query
        name: namePrefixDefaultLangResults
        schema:
          default: true
          type: boolean
      - description: Only places in these time-zones (comma-delimited)
        in: query
        name: timeZoneIds
        schema:
          type: string
      - description: Display results using ASCII characters
        in: query
        name: asciiMode
        schema:
          default: false
          type: boolean
      - description: Include HATEOAS-style links in results
        in: query
        name: hateoasMode
        schema:
          default: true
          type: boolean
      - description: Display results in this language
        in: query
        name: languageCode
        schema:
          type: string
      - description: The maximum number of results to retrieve
        in: query
        name: limit
        schema:
          default: 10
          format: int32
          type: integer
      - description: The zero-ary offset index into the results
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere\
          \ SORT_FIELD = countryCode | elevation | name | population\n"
        in: query
        name: sort
        schema:
          type: string
      - description: "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY\
          \ | SINCE_LAST_WEEK | NONE"
        in: query
        name: includeDeleted
        schema:
          default: NONE
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopulatedPlacesResponse'
          description: A list of populated places
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: 404 - Not Found
      summary: Find divisions near division
      tags:
      - Geo
      x-accepts:
      - application/json
  /geo/cities:
    get:
      description: |
        Find cities, filtering by optional criteria. If no criteria are set, you will get back all known cities.
      operationId: findCitiesUsingGET
      parameters:
      - description: "Only places near this location. Latitude/longitude in ISO-6709\
          \ format: ±DD.DDDD±DDD.DDDD"
        in: query
        name: location
        schema:
          type: string
      - description: The location radius within which to find places
        in: query
        name: radius
        schema:
          format: int32
          type: integer
      - description: "The unit of distance: MI | KM"
        in: query
        name: distanceUnit
        schema:
          default: MI
          type: string
      - description: Only places in these countries (comma-delimited country codes
          or WikiData ids)
        in: query
        name: countryIds
        schema:
          type: string
      - description: Only places NOT in these countries (comma-delimited country codes
          or WikiData ids)
        in: query
        name: excludedCountryIds
        schema:
          type: string
      - description: Only places having at least this population
        in: query
        name: minPopulation
        schema:
          format: int32
          type: integer
      - description: Only places having no more than this population
        in: query
        name: maxPopulation
        schema:
          format: int32
          type: integer
      - description: |
          Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name
          as it appears in that language.
        in: query
        name: namePrefix
        schema:
          type: string
      - description: |
          When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.
        in: query
        name: namePrefixDefaultLangResults
        schema:
          default: true
          type: boolean
      - description: Only places in these time-zones (comma-delimited)
        in: query
        name: timeZoneIds
        schema:
          type: string
      - description: "Only places for these types (comma-delimited): CITY | ADM2"
        in: query
        name: types
        schema:
          type: string
      - description: Display results using ASCII characters
        in: query
        name: asciiMode
        schema:
          default: false
          type: boolean
      - description: Include HATEOAS-style links in results
        in: query
        name: hateoasMode
        schema:
          default: true
          type: boolean
      - description: Display results in this language
        in: query
        name: languageCode
        schema:
          type: string
      - description: The maximum number of results to retrieve
        in: query
        name: limit
        schema:
          default: 10
          format: int32
          type: integer
      - description: The zero-ary offset index into the results
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere\
          \ SORT_FIELD = countryCode | elevation | name | population\n"
        in: query
        name: sort
        schema:
          type: string
      - description: "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY\
          \ | SINCE_LAST_WEEK | NONE"
        in: query
        name: includeDeleted
        schema:
          default: NONE
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopulatedPlacesResponse'
          description: A list of populated places
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
      summary: Find cities
      tags:
      - Geo
      x-accepts:
      - application/json
  /geo/cities/{cityId}:
    get:
      description: |
        Get the details for a specific city, including location coordinates, population, and elevation above sea-level
        (if available).
      operationId: getCityUsingGET
      parameters:
      - description: A city id (either native 'id' or 'wikiDataId')
        in: path
        name: cityId
        required: true
        schema:
          type: string
      - description: Display results using ASCII characters
        in: query
        name: asciiMode
        schema:
          default: false
          type: boolean
      - description: Display results in this language
        in: query
        name: languageCode
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopulatedPlaceResponse'
          description: Populated-place details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: 404 - Not Found
      summary: Get city details
      tags:
      - Geo
      x-accepts:
      - application/json
  /geo/cities/{cityId}/dateTime:
    get:
      description: Get city date-time
      operationId: getCityDateTimeUsingGET
      parameters:
      - description: A city id (either native 'id' or 'wikiDataId')
        in: path
        name: cityId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateTimeResponse'
          description: An ISO-6801 date-time
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: 404 - Not Found
      summary: Get city date-time
      tags:
      - Geo
      x-accepts:
      - application/json
  /geo/cities/{cityId}/distance:
    get:
      description: Get distance from the given city
      operationId: getCityDistanceUsingGET
      parameters:
      - description: A city id (either native 'id' or 'wikiDataId')
        in: path
        name: cityId
        required: true
        schema:
          type: string
      - description: Distance to this city
        in: query
        name: toCityId
        required: true
        schema:
          type: string
      - description: "The unit of distance: MI | KM"
        in: query
        name: distanceUnit
        schema:
          default: MI
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistanceResponse'
          description: A decimal distance (in miles or kilometers)
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: 404 - Not Found
      summary: Get city distance
      tags:
      - Geo
      x-accepts:
      - application/json
  /geo/cities/{cityId}/locatedIn:
    get:
      description: |
        Get the details for the containing populated place (e.g., its county or other administrative division), including location coordinates, population, and elevation above sea-level
        (if available).
      operationId: getCityLocatedInUsingGET
      parameters:
      - description: A city id (either native 'id' or 'wikiDataId')
        in: path
        name: cityId
        required: true
        schema:
          type: string
      - description: Display results using ASCII characters
        in: query
        name: asciiMode
        schema:
          default: false
          type: boolean
      - description: Display results in this language
        in: query
        name: languageCode
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopulatedPlaceResponse'
          description: Populated-place details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: 404 - Not Found
      summary: Get city admin region
      tags:
      - Geo
      x-accepts:
      - application/json
  /geo/cities/{cityId}/nearbyCities:
    get:
      description: |
        Find cities near the given origin city, filtering by optional criteria. If no criteria are set, you will get
        back all known cities.
      operationId: findCitiesNearCityUsingGET
      parameters:
      - description: A city id (either native 'id' or 'wikiDataId')
        in: path
        name: cityId
        required: true
        schema:
          type: string
      - description: The location radius within which to find places
        in: query
        name: radius
        schema:
          format: int32
          type: integer
      - description: "The unit of distance: MI | KM"
        in: query
        name: distanceUnit
        schema:
          default: MI
          type: string
      - description: Only places in these countries (comma-delimited country codes
          or WikiData ids)
        in: query
        name: countryIds
        schema:
          type: string
      - description: Only places NOT in these countries (comma-delimited country codes
          or WikiData ids)
        in: query
        name: excludedCountryIds
        schema:
          type: string
      - description: Only places having at least this population
        in: query
        name: minPopulation
        schema:
          format: int32
          type: integer
      - description: Only places having no more than this population
        in: query
        name: maxPopulation
        schema:
          format: int32
          type: integer
      - description: |
          Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name
          as it appears in that language.
        in: query
        name: namePrefix
        schema:
          type: string
      - description: |
          When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.
        in: query
        name: namePrefixDefaultLangResults
        schema:
          default: true
          type: boolean
      - description: Only places in these time-zones (comma-delimited)
        in: query
        name: timeZoneIds
        schema:
          type: string
      - description: "Only places for these types (comma-delimited): CITY | ADM2"
        in: query
        name: types
        schema:
          type: string
      - description: Display results using ASCII characters
        in: query
        name: asciiMode
        schema:
          default: false
          type: boolean
      - description: Include HATEOAS-style links in results
        in: query
        name: hateoasMode
        schema:
          default: true
          type: boolean
      - description: Display results in this language
        in: query
        name: languageCode
        schema:
          type: string
      - description: The maximum number of results to retrieve
        in: query
        name: limit
        schema:
          default: 10
          format: int32
          type: integer
      - description: The zero-ary offset index into the results
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere\
          \ SORT_FIELD = countryCode | elevation | name | population\n"
        in: query
        name: sort
        schema:
          type: string
      - description: "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY\
          \ | SINCE_LAST_WEEK | NONE"
        in: query
        name: includeDeleted
        schema:
          default: NONE
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopulatedPlacesResponse'
          description: A list of populated places
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: 404 - Not Found
      summary: Find cities near city
      tags:
      - Geo
      x-accepts:
      - application/json
  /geo/cities/{cityId}/time:
    get:
      description: Get city time
      operationId: getCityTimeUsingGET
      parameters:
      - description: A city id (either native 'id' or 'wikiDataId')
        in: path
        name: cityId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeResponse'
          description: An ISO-8601 time response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: 404 - Not Found
      summary: Get city time
      tags:
      - Geo
      x-accepts:
      - application/json
  /geo/countries:
    get:
      description: |
        Find countries, filtering by optional criteria. If no criteria are set, you will get back all known countries.
      operationId: getCountriesUsingGET
      parameters:
      - description: Only countries supporting this currency
        in: query
        name: currencyCode
        schema:
          type: string
      - description: |
          Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name
          as it appears in that language.
        in: query
        name: namePrefix
        schema:
          type: string
      - description: |
          When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.
        in: query
        name: namePrefixDefaultLangResults
        schema:
          default: true
          type: boolean
      - description: Display results using ASCII characters
        in: query
        name: asciiMode
        schema:
          default: false
          type: boolean
      - description: Include HATEOAS-style links in results
        in: query
        name: hateoasMode
        schema:
          default: true
          type: boolean
      - description: Display results in this language
        in: query
        name: languageCode
        schema:
          type: string
      - description: The maximum number of results to retrieve
        in: query
        name: limit
        schema:
          default: 10
          format: int32
          type: integer
      - description: The zero-ary offset index into the results
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: "How to sort countries. \nFormat: ±SORT_FIELD \nwhere SORT_FIELD\
          \ = code | name"
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountriesResponse'
          description: A list of countries
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
      summary: Find countries
      tags:
      - Geo
      x-accepts:
      - application/json
  /geo/countries/{countryId}:
    get:
      description: "Get the details for a specific country, including number of regions."
      operationId: getCountryUsingGET
      parameters:
      - description: An ISO-3166 country code or WikiData id
        in: path
        name: countryId
        required: true
        schema:
          type: string
      - description: Display results using ASCII characters
        in: query
        name: asciiMode
        schema:
          default: false
          type: boolean
      - description: Display results in this language
        in: query
        name: languageCode
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CountryResponse'
          description: Country detail
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: 404 - Not Found
      summary: Get country details
      tags:
      - Geo
      x-accepts:
      - application/json
  /geo/countries/{countryId}/regions:
    get:
      description: |
        Get all regions in a specific country. These could be states, provinces, districts, or otherwise major
        political divisions.
      operationId: getRegionsUsingGET
      parameters:
      - description: An ISO-3166 country code or WikiData id
        in: path
        name: countryId
        required: true
        schema:
          type: string
      - description: |
          Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name
          as it appears in that language.
        in: query
        name: namePrefix
        schema:
          type: string
      - description: |
          When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.
        in: query
        name: namePrefixDefaultLangResults
        schema:
          default: true
          type: boolean
      - description: Display results using ASCII characters
        in: query
        name: asciiMode
        schema:
          default: false
          type: boolean
      - description: Include HATEOAS-style links in results
        in: query
        name: hateoasMode
        schema:
          default: true
          type: boolean
      - description: Display results in this language
        in: query
        name: languageCode
        schema:
          type: string
      - description: The maximum number of results to retrieve
        in: query
        name: limit
        schema:
          default: 10
          format: int32
          type: integer
      - description: The zero-ary offset index into the results
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: "How to sort regions. \nFormat: ±SORT_FIELD \nwhere SORT_FIELD\
          \ = fipsCode | isoCode | name"
        in: query
        name: sort
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionsResponse'
          description: A list of country regions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: 404 - Not Found
      summary: Find country regions
      tags:
      - Geo
      x-accepts:
      - application/json
  /geo/countries/{countryId}/regions/{regionCode}:
    get:
      description: "Get the details of a specific country region, including number\
        \ of cities."
      operationId: getRegionUsingGET
      parameters:
      - description: An ISO-3166 country code or WikiData id
        in: path
        name: countryId
        required: true
        schema:
          type: string
      - description: An ISO-3166 or FIPS region code
        in: path
        name: regionCode
        required: true
        schema:
          type: string
      - description: Display results using ASCII characters
        in: query
        name: asciiMode
        schema:
          default: false
          type: boolean
      - description: Display results in this language
        in: query
        name: languageCode
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegionResponse'
          description: Country region details
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: 404 - Not Found
      summary: Get region details
      tags:
      - Geo
      x-accepts:
      - application/json
  /geo/countries/{countryId}/regions/{regionCode}/adminDivisions:
    get:
      description: |
        Get the administrative divisions in a specific country region. The country and region info is omitted in the
        response.
      operationId: findRegionDivisionsUsingGET
      parameters:
      - description: An ISO-3166 country code or WikiData id
        in: path
        name: countryId
        required: true
        schema:
          type: string
      - description: An ISO-3166 or FIPS region code
        in: path
        name: regionCode
        required: true
        schema:
          type: string
      - description: Only places having at least this population
        in: query
        name: minPopulation
        schema:
          format: int32
          type: integer
      - description: Only places having no more than this population
        in: query
        name: maxPopulation
        schema:
          format: int32
          type: integer
      - description: |
          Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name
          as it appears in that language.
        in: query
        name: namePrefix
        schema:
          type: string
      - description: |
          When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.
        in: query
        name: namePrefixDefaultLangResults
        schema:
          default: true
          type: boolean
      - description: Only places in these time-zones (comma-delimited)
        in: query
        name: timeZoneIds
        schema:
          type: string
      - description: Display results using ASCII characters
        in: query
        name: asciiMode
        schema:
          default: false
          type: boolean
      - description: Include HATEOAS-style links in results
        in: query
        name: hateoasMode
        schema:
          default: true
          type: boolean
      - description: Display results in this language
        in: query
        name: languageCode
        schema:
          type: string
      - description: The maximum number of results to retrieve
        in: query
        name: limit
        schema:
          default: 10
          format: int32
          type: integer
      - description: The zero-ary offset index into the results
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: "How to sort place results. \n'Format: ±SORT_FIELD,±SORT_FIELD'\
          \ \nwhere SORT_FIELD = elevation | name | population\n"
        in: query
        name: sort
        schema:
          type: string
      - description: "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY\
          \ | SINCE_LAST_WEEK | NONE"
        in: query
        name: includeDeleted
        schema:
          default: NONE
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopulatedPlacesResponse'
          description: A list of populated places
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: 404 - Not Found
      summary: Find country region administrative divisions
      tags:
      - Geo
      x-accepts:
      - application/json
  /geo/countries/{countryId}/regions/{regionCode}/cities:
    get:
      description: |
        Get the cities in a specific country region. The country and region info is omitted in the response.
      operationId: findRegionCitiesUsingGET
      parameters:
      - description: An ISO-3166 country code or WikiData id
        in: path
        name: countryId
        required: true
        schema:
          type: string
      - description: An ISO-3166 or FIPS region code
        in: path
        name: regionCode
        required: true
        schema:
          type: string
      - description: Only places having at least this population
        in: query
        name: minPopulation
        schema:
          format: int32
          type: integer
      - description: Only places having no more than this population
        in: query
        name: maxPopulation
        schema:
          format: int32
          type: integer
      - description: |
          Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name
          as it appears in that language.
        in: query
        name: namePrefix
        schema:
          type: string
      - description: |
          When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.
        in: query
        name: namePrefixDefaultLangResults
        schema:
          default: true
          type: boolean
      - description: Only places in these time-zones (comma-delimited)
        in: query
        name: timeZoneIds
        schema:
          type: string
      - description: "Only places for these types (comma-delimited): CITY | ADM2"
        in: query
        name: types
        schema:
          type: string
      - description: Display results using ASCII characters
        in: query
        name: asciiMode
        schema:
          default: false
          type: boolean
      - description: Include HATEOAS-style links in results
        in: query
        name: hateoasMode
        schema:
          default: true
          type: boolean
      - description: Display results in this language
        in: query
        name: languageCode
        schema:
          type: string
      - description: The maximum number of results to retrieve
        in: query
        name: limit
        schema:
          default: 10
          format: int32
          type: integer
      - description: The zero-ary offset index into the results
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: "How to sort place results. \n'Format: ±SORT_FIELD,±SORT_FIELD'\
          \ \nwhere SORT_FIELD = elevation | name | population\n"
        in: query
        name: sort
        schema:
          type: string
      - description: "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY\
          \ | SINCE_LAST_WEEK | NONE"
        in: query
        name: includeDeleted
        schema:
          default: NONE
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopulatedPlacesResponse'
          description: A list of populated places
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: 404 - Not Found
      summary: Find country region cities
      tags:
      - Geo
      x-accepts:
      - application/json
  /geo/locations/{locationId}/nearbyCities:
    get:
      description: |
        Find cities near the given location, filtering by optional criteria. If no criteria are set, you will get back
        all known cities.
      operationId: findCitiesNearLocationUsingGET
      parameters:
      - description: "A latitude/longitude in ISO-6709 format: ±DD.DDDD±DDD.DDDD"
        in: path
        name: locationId
        required: true
        schema:
          type: string
      - description: The location radius within which to find places
        in: query
        name: radius
        schema:
          format: int32
          type: integer
      - description: "The unit of distance: MI | KM"
        in: query
        name: distanceUnit
        schema:
          default: MI
          type: string
      - description: Only places in these countries (comma-delimited country codes
          or WikiData ids)
        in: query
        name: countryIds
        schema:
          type: string
      - description: Only places NOT in these countries (comma-delimited country codes
          or WikiData ids)
        in: query
        name: excludedCountryIds
        schema:
          type: string
      - description: Only places having at least this population
        in: query
        name: minPopulation
        schema:
          format: int32
          type: integer
      - description: Only places having no more than this population
        in: query
        name: maxPopulation
        schema:
          format: int32
          type: integer
      - description: |
          Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name
          as it appears in that language.
        in: query
        name: namePrefix
        schema:
          type: string
      - description: |
          When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.
        in: query
        name: namePrefixDefaultLangResults
        schema:
          default: true
          type: boolean
      - description: Only places in these time-zones (comma-delimited)
        in: query
        name: timeZoneIds
        schema:
          type: string
      - description: "Only places for these types (comma-delimited): CITY | ADM2"
        in: query
        name: types
        schema:
          type: string
      - description: Display results using ASCII characters
        in: query
        name: asciiMode
        schema:
          default: false
          type: boolean
      - description: Include HATEOAS-style links in results
        in: query
        name: hateoasMode
        schema:
          default: true
          type: boolean
      - description: Display results in this language
        in: query
        name: languageCode
        schema:
          type: string
      - description: The maximum number of results to retrieve
        in: query
        name: limit
        schema:
          default: 10
          format: int32
          type: integer
      - description: The zero-ary offset index into the results
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere\
          \ SORT_FIELD = countryCode | elevation | name | population\n"
        in: query
        name: sort
        schema:
          type: string
      - description: "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY\
          \ | SINCE_LAST_WEEK | NONE"
        in: query
        name: includeDeleted
        schema:
          default: NONE
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopulatedPlacesResponse'
          description: A list of populated places
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
      summary: Find cities near location
      tags:
      - Geo
      x-accepts:
      - application/json
  /geo/locations/{locationId}/nearbyDivisions:
    get:
      description: |
        Find administrative divisions near the given location, filtering by optional criteria. If no criteria are set,
        you will get back all known divisions.
      operationId: findDivisionsNearLocationUsingGET
      parameters:
      - description: "A latitude/longitude in ISO-6709 format: ±DD.DDDD±DDD.DDDD"
        in: path
        name: locationId
        required: true
        schema:
          type: string
      - description: The location radius within which to find places
        in: query
        name: radius
        schema:
          format: int32
          type: integer
      - description: "The unit of distance: MI | KM"
        in: query
        name: distanceUnit
        schema:
          default: MI
          type: string
      - description: Only places in these countries (comma-delimited country codes
          or WikiData ids)
        in: query
        name: countryIds
        schema:
          type: string
      - description: Only places NOT in these countries (comma-delimited country codes
          or WikiData ids)
        in: query
        name: excludedCountryIds
        schema:
          type: string
      - description: Only places having at least this population
        in: query
        name: minPopulation
        schema:
          format: int32
          type: integer
      - description: Only places having no more than this population
        in: query
        name: maxPopulation
        schema:
          format: int32
          type: integer
      - description: |
          Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name
          as it appears in that language.
        in: query
        name: namePrefix
        schema:
          type: string
      - description: |
          When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.
        in: query
        name: namePrefixDefaultLangResults
        schema:
          default: true
          type: boolean
      - description: Only places in these time-zones (comma-delimited)
        in: query
        name: timeZoneIds
        schema:
          type: string
      - description: Display results using ASCII characters
        in: query
        name: asciiMode
        schema:
          default: false
          type: boolean
      - description: Include HATEOAS-style links in results
        in: query
        name: hateoasMode
        schema:
          default: true
          type: boolean
      - description: Display results in this language
        in: query
        name: languageCode
        schema:
          type: string
      - description: The maximum number of results to retrieve
        in: query
        name: limit
        schema:
          default: 10
          format: int32
          type: integer
      - description: The zero-ary offset index into the results
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      - description: "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere\
          \ SORT_FIELD = countryCode | elevation | name | population\n"
        in: query
        name: sort
        schema:
          type: string
      - description: "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY\
          \ | SINCE_LAST_WEEK | NONE"
        in: query
        name: includeDeleted
        schema:
          default: NONE
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PopulatedPlacesResponse'
          description: A list of populated places
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
      summary: Find divisions near location
      tags:
      - Geo
      x-accepts:
      - application/json
  /locale/currencies:
    get:
      description: "Find currencies, filtering by optional criteria. If no criteria\
        \ are set, you will get back all known currencies."
      operationId: getCurrenciesUsingGET
      parameters:
      - description: Currencies for this country id
        in: query
        name: countryId
        required: true
        schema:
          type: string
      - description: Include HATEOAS-style links in results
        in: query
        name: hateoasMode
        schema:
          default: true
          type: boolean
      - description: The maximum number of results to retrieve
        in: query
        name: limit
        schema:
          default: 10
          format: int32
          type: integer
      - description: The zero-ary offset index into the results
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrenciesResponse'
          description: A list of currencies
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
      summary: Find currencies
      tags:
      - Locale
      x-accepts:
      - application/json
  /locale/languages:
    get:
      description: Get all supported languages
      operationId: getLanguagesUsingGET
      parameters:
      - description: Include HATEOAS-style links in results
        in: query
        name: hateoasMode
        schema:
          default: true
          type: boolean
      - description: The maximum number of results to retrieve
        in: query
        name: limit
        schema:
          default: 10
          format: int32
          type: integer
      - description: The zero-ary offset index into the results
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LanguagesResponse'
          description: A list of languages supported by the system
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
      summary: Get languages
      tags:
      - Locale
      x-accepts:
      - application/json
  /locale/locales:
    get:
      description: Get all known locales
      operationId: getLocalesUsingGET
      parameters:
      - description: Include HATEOAS-style links in results
        in: query
        name: hateoasMode
        schema:
          default: true
          type: boolean
      - description: The maximum number of results to retrieve
        in: query
        name: limit
        schema:
          default: 10
          format: int32
          type: integer
      - description: The zero-ary offset index into the results
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalesResponse'
          description: A list of locales
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
      summary: Get locales
      tags:
      - Locale
      x-accepts:
      - application/json
  /locale/timezones:
    get:
      description: Get all known time-zones
      operationId: getTimezonesUsingGET
      parameters:
      - description: Include HATEOAS-style links in results
        in: query
        name: hateoasMode
        schema:
          default: true
          type: boolean
      - description: The maximum number of results to retrieve
        in: query
        name: limit
        schema:
          default: 10
          format: int32
          type: integer
      - description: The zero-ary offset index into the results
        in: query
        name: offset
        schema:
          default: 0
          format: int32
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeZonesResponse'
          description: A list of time-zones
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
      summary: Get time-zones
      tags:
      - Locale
      x-accepts:
      - application/json
  /locale/timezones/{zoneId}:
    get:
      description: Get time-zone
      operationId: getTimeZoneUsingGET
      parameters:
      - description: A time-zone id
        in: path
        name: zoneId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeZoneResponse'
          description: A time-zone
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: 404 - Not Found
      summary: Get time-zone
      tags:
      - Locale
      x-accepts:
      - application/json
  /locale/timezones/{zoneId}/dateTime:
    get:
      description: Get time-zone date-time
      operationId: getTimeZoneDateTimeUsingGET
      parameters:
      - description: A time-zone id
        in: path
        name: zoneId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DateTimeResponse'
          description: An ISO-6801 date-time
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: 404 - Not Found
      summary: Get time-zone date-time
      tags:
      - Locale
      x-accepts:
      - application/json
  /locale/timezones/{zoneId}/time:
    get:
      description: Get time-zone time
      operationId: getTimeZoneTimeUsingGET
      parameters:
      - description: A time-zone id
        in: path
        name: zoneId
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimeResponse'
          description: An ISO-8601 time response
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BadRequestResponse'
          description: 400 - Bad Request
        "401":
          content: {}
          description: 401 - Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ForbiddenResponse'
          description: 403 - Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotFoundResponse'
          description: 404 - Not Found
      summary: Get time-zone time
      tags:
      - Locale
      x-accepts:
      - application/json
components:
  parameters:
    path.cityId:
      description: A city id (either native 'id' or 'wikiDataId')
      in: path
      name: cityId
      required: true
      schema:
        type: string
    path.countryId:
      description: An ISO-3166 country code or WikiData id
      in: path
      name: countryId
      required: true
      schema:
        type: string
    path.divisionId:
      description: An admin-division id (either native 'id' or 'wikiDataId')
      in: path
      name: divisionId
      required: true
      schema:
        type: string
    path.location.id:
      description: "A latitude/longitude in ISO-6709 format: ±DD.DDDD±DDD.DDDD"
      in: path
      name: locationId
      required: true
      schema:
        type: string
    path.regionCode:
      description: An ISO-3166 or FIPS region code
      in: path
      name: regionCode
      required: true
      schema:
        type: string
    path.zoneId:
      description: A time-zone id
      in: path
      name: zoneId
      required: true
      schema:
        type: string
    query.asciiMode:
      description: Display results using ASCII characters
      in: query
      name: asciiMode
      schema:
        default: false
        type: boolean
    query.country.currencyCode:
      description: Only countries supporting this currency
      in: query
      name: currencyCode
      schema:
        type: string
    query.country.sort:
      description: "How to sort countries. \nFormat: ±SORT_FIELD \nwhere SORT_FIELD\
        \ = code | name"
      in: query
      name: sort
      schema:
        type: string
    query.currency.countryId:
      description: Currencies for this country id
      in: query
      name: countryId
      required: true
      schema:
        type: string
    query.distanceUnit:
      description: "The unit of distance: MI | KM"
      in: query
      name: distanceUnit
      schema:
        default: MI
        type: string
    query.entity.namePrefix:
      description: |
        Only entities whose names start with this prefix. If languageCode is set, the prefix will be matched on the name
        as it appears in that language.
      in: query
      name: namePrefix
      schema:
        type: string
    query.entity.namePrefixDefaultLangResults:
      description: |
        When name-prefix matching, whether or not to match on names in the default language if a non-default languageCode is set.
      in: query
      name: namePrefixDefaultLangResults
      schema:
        default: true
        type: boolean
    query.hateoasMode:
      description: Include HATEOAS-style links in results
      in: query
      name: hateoasMode
      schema:
        default: true
        type: boolean
    query.includeDeleted:
      description: "Whether to include any divisions marked deleted: ALL | SINCE_YESTERDAY\
        \ | SINCE_LAST_WEEK | NONE"
      in: query
      name: includeDeleted
      schema:
        default: NONE
        type: string
    query.languageCode:
      description: Display results in this language
      in: query
      name: languageCode
      schema:
        type: string
    query.limit:
      description: The maximum number of results to retrieve
      in: query
      name: limit
      schema:
        default: 10
        format: int32
        type: integer
    query.offset:
      description: The zero-ary offset index into the results
      in: query
      name: offset
      schema:
        default: 0
        format: int32
        type: integer
    query.place.countryIds:
      description: Only places in these countries (comma-delimited country codes or
        WikiData ids)
      in: query
      name: countryIds
      schema:
        type: string
    query.place.excludedCountryIds:
      description: Only places NOT in these countries (comma-delimited country codes
        or WikiData ids)
      in: query
      name: excludedCountryIds
      schema:
        type: string
    query.place.location.id:
      description: "Only places near this location. Latitude/longitude in ISO-6709\
        \ format: ±DD.DDDD±DDD.DDDD"
      in: query
      name: location
      schema:
        type: string
    query.place.location.radiusOf:
      description: The location radius within which to find places
      in: query
      name: radius
      schema:
        format: int32
        type: integer
    query.place.maxPopulation:
      description: Only places having no more than this population
      in: query
      name: maxPopulation
      schema:
        format: int32
        type: integer
    query.place.minPopulation:
      description: Only places having at least this population
      in: query
      name: minPopulation
      schema:
        format: int32
        type: integer
    query.place.sort:
      description: "How to sort places. \nFormat: ±SORT_FIELD,±SORT_FIELD \nwhere\
        \ SORT_FIELD = countryCode | elevation | name | population\n"
      in: query
      name: sort
      schema:
        type: string
    query.place.sort.withinRegion:
      description: "How to sort place results. \n'Format: ±SORT_FIELD,±SORT_FIELD'\
        \ \nwhere SORT_FIELD = elevation | name | population\n"
      in: query
      name: sort
      schema:
        type: string
    query.place.types:
      description: "Only places for these types (comma-delimited): CITY | ADM2"
      in: query
      name: types
      schema:
        type: string
    query.region.sort:
      description: "How to sort regions. \nFormat: ±SORT_FIELD \nwhere SORT_FIELD\
        \ = fipsCode | isoCode | name"
      in: query
      name: sort
      schema:
        type: string
    query.sort:
      description: "How to sort place results. \n'Format: ±SORT_FIELD,±SORT_FIELD'\
        \ \nwhere SORT_FIELD = countryCode | elevation | name | population\n"
      in: query
      name: sort
      schema:
        type: string
    query.timeZoneIds:
      description: Only places in these time-zones (comma-delimited)
      in: query
      name: timeZoneIds
      schema:
        type: string
    query.toCityId:
      description: Distance to this city
      in: query
      name: toCityId
      required: true
      schema:
        type: string
  responses:
    BadRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/BadRequestResponse'
      description: 400 - Bad Request
    Countries:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CountriesResponse'
      description: A list of countries
    Country:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CountryResponse'
      description: Country detail
    Currencies:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CurrenciesResponse'
      description: A list of currencies
    DateTime:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DateTimeResponse'
      description: An ISO-6801 date-time
    Distance:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/DistanceResponse'
      description: A decimal distance (in miles or kilometers)
    Forbidden:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ForbiddenResponse'
      description: 403 - Forbidden
    Languages:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LanguagesResponse'
      description: A list of languages supported by the system
    Locales:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LocalesResponse'
      description: A list of locales
    NotFound:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/NotFoundResponse'
      description: 404 - Not Found
    PopulatedPlace:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PopulatedPlaceResponse'
      description: Populated-place details
    PopulatedPlaces:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/PopulatedPlacesResponse'
      description: A list of populated places
    Region:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegionResponse'
      description: Country region details
    Regions:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RegionsResponse'
      description: A list of country regions
    Time:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimeResponse'
      description: An ISO-8601 time response
    TimeZone:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimeZoneResponse'
      description: A time-zone
    TimeZones:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TimeZonesResponse'
      description: A list of time-zones
    Unauthorized:
      content: {}
      description: 401 - Unauthorized
  schemas:
    BadRequestResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      description: Bad Request Response
      example:
        errors:
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
      title: Bad Request Response
    BaseCollectionResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      - properties:
          links:
            items:
              $ref: '#/components/schemas/Link'
            title: Links
            type: array
          metadata:
            $ref: '#/components/schemas/Metadata'
        type: object
      description: Common properties for all collection  responses
      title: Base Collection Response
    BaseResponse:
      description: Common properties for all responses
      example:
        errors: []
      properties:
        errors:
          items:
            $ref: '#/components/schemas/Error'
          title: Errors
          type: array
      title: Base Response
      type: object
    CountriesResponse:
      allOf:
      - $ref: '#/components/schemas/BaseCollectionResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/CountrySummary'
            title: CountrySummaries
            type: array
        type: object
      description: A list of countries
      example:
        metadata:
          currentOffset: 0
          totalCount: 100
        data:
        - code: US
          currencyCodes:
          - USD
          name: United States
          wikiDataId: Q30
        - code: US
          currencyCodes:
          - USD
          name: United States
          wikiDataId: Q30
        links:
        - href: /data/world/v1/geo/cities?offset=10&limit=10
          rel: next
        - href: /data/world/v1/geo/cities?offset=10&limit=10
          rel: next
        errors:
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
      title: Countries Response
    CountryDetails:
      description: Full country details
      example:
        callingCode: "+1"
        code: US
        currencyCodes:
        - USD
        flagImageUri: http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20the%20United%20States.svg
        name: United States
        numRegions: 56
        wikiDataId: Q30
      properties:
        callingCode:
          description: The country dialing prefix
          type: string
        code:
          description: The ISO-3166 country code
          type: string
        currencyCodes:
          description: A list of supported ISO-4217 currency codes
          items:
            type: string
          type: array
        flagImageUri:
          description: The country flag image
          type: string
        name:
          description: The country name (varies by languageCode)
          type: string
        numRegions:
          description: The number of regions in this country
          format: int32
          type: integer
        wikiDataId:
          description: The country WikiData id
          type: string
      title: Country Details
      type: object
    CountryResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      - properties:
          data:
            $ref: '#/components/schemas/CountryDetails'
        type: object
      description: Country details response
      example:
        data:
          callingCode: "+1"
          code: US
          currencyCodes:
          - USD
          flagImageUri: http://commons.wikimedia.org/wiki/Special:FilePath/Flag%20of%20the%20United%20States.svg
          name: United States
          numRegions: 56
          wikiDataId: Q30
        errors:
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
      title: Country Response
    CountrySummary:
      description: Minimal country info
      example:
        code: US
        currencyCodes:
        - USD
        name: United States
        wikiDataId: Q30
      properties:
        code:
          description: The ISO-3166 country code
          type: string
        currencyCodes:
          description: A list of supported ISO-4217 currency codes
          items:
            type: string
          type: array
        name:
          description: The country name (varies by languageCode)
          type: string
        wikiDataId:
          description: The country WikiData id
          type: string
      title: Country Summary
      type: object
    CurrenciesResponse:
      allOf:
      - $ref: '#/components/schemas/BaseCollectionResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Currency'
            type: array
        type: object
      description: A list of currencies
      example:
        metadata:
          currentOffset: 0
          totalCount: 100
        data:
        - code: USD
          countryCodes:
          - PR
          - MP
          - IO
          - FM
          - PW
          - GU
          - BQ
          - TC
          - VG
          - AS
          - VI
          - TL
          - UM
          - MH
          - EC
          - US
          symbol: $
        - code: USD
          countryCodes:
          - PR
          - MP
          - IO
          - FM
          - PW
          - GU
          - BQ
          - TC
          - VG
          - AS
          - VI
          - TL
          - UM
          - MH
          - EC
          - US
          symbol: $
        links:
        - href: /data/world/v1/geo/cities?offset=10&limit=10
          rel: next
        - href: /data/world/v1/geo/cities?offset=10&limit=10
          rel: next
        errors:
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
      title: Currencies Response
    Currency:
      description: Currency info
      example:
        code: USD
        countryCodes:
        - PR
        - MP
        - IO
        - FM
        - PW
        - GU
        - BQ
        - TC
        - VG
        - AS
        - VI
        - TL
        - UM
        - MH
        - EC
        - US
        symbol: $
      properties:
        code:
          description: The ISO-4217 currency code
          type: string
        countryCodes:
          description: A list of ISO-3166 country codes of countries supporting this
            currency
          items:
            type: string
          type: array
        symbol:
          description: The currency symbol
          type: string
      title: Currency
      type: object
    DateTimeResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      - properties:
          data:
            description: "The date-time in ISO-6801 format: yyyyMMdd'T'HHmmssZ"
            format: date-time
            type: string
        type: object
      description: An ISO-6801 date-time response
      example:
        data: 2000-01-23T04:56:07.000+00:00
        errors:
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
      title: Date-Time Response
    DistanceResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      - properties:
          data:
            description: The distance in units as set by the distanceUnit param (defaults
              to miles)
            format: double
            type: number
        type: object
      description: A decimal distance (in miles or kilometers)
      example:
        data: 0.8008281904610115
        errors:
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
      title: Distance Response
    Error:
      description: An error that occurred processing the request
      example:
        code: ENTITY_NOT_FOUND
        message: "Param [someParam] has invalid value: invalidValue"
      properties:
        code:
          $ref: '#/components/schemas/ErrorCode'
        message:
          type: string
      title: Error
      type: object
    ErrorCode:
      description: |
        One of a set of enumerated error codes representing the types of errors that can occur processing a
        request
      enum:
      - ACCESS_DENIED
      - ENTITY_NOT_FOUND
      - INCOMPATIBLE
      - PARAM_INVALID
      - PARAMS_MUTUALLY_EXCLUSIVE
      - REQUEST_UNPROCESSABLE
      example: ENTITY_NOT_FOUND
      title: ErrorCode
      type: string
    ForbiddenResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      description: Forbidden Response
      example:
        errors:
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
      title: Forbidden Response
    LanguageDescriptor:
      description: A language supported by the service
      example:
        code: en
        name: English
      properties:
        code:
          enum:
          - undefined
          - aa
          - ab
          - ae
          - af
          - ak
          - am
          - an
          - ar
          - as
          - av
          - ay
          - az
          - ba
          - be
          - bg
          - bh
          - bi
          - bm
          - bn
          - bo
          - br
          - bs
          - ca
          - ce
          - ch
          - co
          - cr
          - cs
          - cu
          - cv
          - cy
          - da
          - de
          - dv
          - dz
          - ee
          - el
          - en
          - eo
          - es
          - et
          - eu
          - fa
          - ff
          - fi
          - fj
          - fo
          - fr
          - fy
          - ga
          - gd
          - gl
          - gn
          - gu
          - gv
          - ha
          - he
          - hi
          - ho
          - hr
          - ht
          - hu
          - hy
          - hz
          - ia
          - id
          - ie
          - ig
          - ii
          - ik
          - io
          - is
          - it
          - iu
          - ja
          - jv
          - ka
          - kg
          - ki
          - kj
          - kk
          - kl
          - km
          - kn
          - ko
          - kr
          - ks
          - ku
          - kv
          - kw
          - ky
          - la
          - lb
          - lg
          - li
          - ln
          - lo
          - lt
          - lu
          - lv
          - mg
          - mh
          - mi
          - mk
          - ml
          - mn
          - mr
          - ms
          - mt
          - my
          - na
          - nb
          - nd
          - ne
          - ng
          - nl
          - nn
          - nr
          - nv
          - ny
          - oc
          - oj
          - om
          - or
          - os
          - pa
          - pi
          - pl
          - ps
          - pt
          - qu
          - rm
          - rn
          - ro
          - ru
          - rw
          - sa
          - sc
          - sd
          - se
          - sg
          - si
          - sk
          - sl
          - sm
          - sn
          - so
          - sq
          - sr
          - ss
          - st
          - su
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - ti
          - tk
          - tl
          - tn
          - to
          - tr
          - ts
          - tt
          - tw
          - ty
          - ug
          - uk
          - ur
          - uz
          - ve
          - vi
          - vo
          - wa
          - wo
          - xh
          - yi
          - yo
          - za
          - zh
          - zu
          type: string
        name:
          type: string
      title: Language
      type: object
    LanguagesResponse:
      allOf:
      - $ref: '#/components/schemas/BaseCollectionResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/LanguageDescriptor'
            type: array
        type: object
      description: A list of languages supported by the system
      example:
        metadata:
          currentOffset: 0
          totalCount: 100
        data:
        - code: en
          name: English
        - code: en
          name: English
        links:
        - href: /data/world/v1/geo/cities?offset=10&limit=10
          rel: next
        - href: /data/world/v1/geo/cities?offset=10&limit=10
          rel: next
        errors:
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
      title: Languages Response
    Link:
      description: A HATEAOS link
      example:
        href: /data/world/v1/geo/cities?offset=10&limit=10
        rel: next
      properties:
        href:
          type: string
        rel:
          type: string
      title: Link
      type: object
    Locale:
      description: A locale representing a language/region combination
      example:
        code: en_US
      properties:
        code:
          description: The locale code
          type: string
      title: Locale
      type: object
    LocalesResponse:
      allOf:
      - $ref: '#/components/schemas/BaseCollectionResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/Locale'
            type: array
        type: object
      description: A list of locales
      example:
        metadata:
          currentOffset: 0
          totalCount: 100
        data:
        - code: en_US
        - code: en_US
        links:
        - href: /data/world/v1/geo/cities?offset=10&limit=10
          rel: next
        - href: /data/world/v1/geo/cities?offset=10&limit=10
          rel: next
        errors:
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
      title: Locales Response
    Metadata:
      description: Result metadata (currently only associated with collection results)
      example:
        currentOffset: 0
        totalCount: 100
      properties:
        currentOffset:
          description: The zero-ary offset into the results (0 is the first result)
          format: int64
          type: integer
        totalCount:
          description: The total number of results across pages
          format: int64
          type: integer
      title: Metadata
      type: object
    NotFoundResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      description: Not Found Response
      example:
        errors:
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
      title: Not Found Response
    PopulatedPlaceDetails:
      description: Full populated-place details
      example:
        country: United States of America
        countryCode: US
        deleted: false
        elevationMeters: 10
        id: 123214
        latitude: 40.67
        longitude: -73.94
        name: New York City
        population: 8398748
        region: New York
        regionCode: NY
        timezone: America__New_York
        type: CITY
        wikiDataId: Q60
      properties:
        country:
          description: The country name (varies by languageCode)
          type: string
        countryCode:
          description: The ISO-3166 country code
          type: string
        deleted:
          description: If this place has been soft-deleted
          type: boolean
        elevationMeters:
          description: The place elevation (meters) above sea level
          format: int32
          type: integer
        id:
          description: The place GeoDB native id
          format: int32
          type: integer
        latitude:
          description: The place latittude (-90.0 to 90.0)
          format: double
          type: number
        longitude:
          description: The place longitude (-180.0 to 180.0)
          format: double
          type: number
        name:
          description: The place name (varies by languageCode)
          type: string
        population:
          description: The place population
          format: int32
          type: integer
        region:
          description: The region name (varies by languageCode)
          type: string
        regionCode:
          description: The ISO or FIPS region code
          type: string
        timezone:
          description: The place timezone id
          type: string
        type:
          $ref: '#/components/schemas/PopulatedPlaceType'
        wikiDataId:
          description: The place WikiData id
          type: string
      title: Populated-Place Details
      type: object
    PopulatedPlaceResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      - properties:
          data:
            $ref: '#/components/schemas/PopulatedPlaceDetails'
        type: object
      description: Populated-place details response
      example:
        data:
          country: United States of America
          countryCode: US
          deleted: false
          elevationMeters: 10
          id: 123214
          latitude: 40.67
          longitude: -73.94
          name: New York City
          population: 8398748
          region: New York
          regionCode: NY
          timezone: America__New_York
          type: CITY
          wikiDataId: Q60
        errors:
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
      title: Populated-Place Response
    PopulatedPlaceSummary:
      description: Minimal populated-place info
      example:
        country: United States of America
        countryCode: US
        id: 123214
        latitude: 40.67
        longitude: -73.94
        name: New York City
        region: New York
        regionCode: NY
        type: CITY
        wikiDataId: Q60
      properties:
        country:
          description: The country name (varies by languageCode)
          type: string
        countryCode:
          description: The ISO-3166 country code
          type: string
        distance:
          description: Included if this is the result of a distance query
          format: double
          type: number
        id:
          description: The place GeoDB native id
          format: int32
          type: integer
        latitude:
          description: The place latittude (-90.0 to 90.0)
          format: double
          type: number
        longitude:
          description: The place longitude (-180.0 to 180.0)
          format: double
          type: number
        name:
          description: The place name (varies by languageCode)
          type: string
        population:
          description: The place population
          format: int32
          type: integer
        region:
          description: The region name (varies by languageCode)
          type: string
        regionCode:
          description: The ISO or FIPS region code
          type: string
        type:
          $ref: '#/components/schemas/PopulatedPlaceType'
        wikiDataId:
          description: The place WikiData id
          type: string
      type: object
    PopulatedPlaceType:
      description: |
        One of a set of enumerated populated-place types known by the service (currently only level-2 admin divisions and
        cities)
      enum:
      - ADM2
      - CITY
      example: CITY
      type: string
    PopulatedPlacesResponse:
      allOf:
      - $ref: '#/components/schemas/BaseCollectionResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/PopulatedPlaceSummary'
            type: array
        type: object
      description: A list of populated places
      example:
        metadata:
          currentOffset: 0
          totalCount: 100
        data:
        - country: United States of America
          countryCode: US
          id: 123214
          latitude: 40.67
          longitude: -73.94
          name: New York City
          region: New York
          regionCode: NY
          type: CITY
          wikiDataId: Q60
        - country: United States of America
          countryCode: US
          id: 123214
          latitude: 40.67
          longitude: -73.94
          name: New York City
          region: New York
          regionCode: NY
          type: CITY
          wikiDataId: Q60
        links:
        - href: /data/world/v1/geo/cities?offset=10&limit=10
          rel: next
        - href: /data/world/v1/geo/cities?offset=10&limit=10
          rel: next
        errors:
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
      title: Populated-Places Response
    RegionDetails:
      description: Full country region details
      example:
        capital: Sacramento
        countryCode: US
        fipsCode: 6
        isoCode: CA
        name: California
        numCities: 1532
        wikiDataId: Q99
      properties:
        capital:
          description: The region's capital city (varies by languageCode)
          type: string
        countryCode:
          description: An ISO-3166 country code
          type: string
        fipsCode:
          description: The FIPS 10-4 region code
          type: string
        isoCode:
          description: The ISO region code
          type: string
        name:
          description: The region name (varies by languageCode)
          type: string
        numCities:
          description: The number of cities in this region
          format: int32
          type: integer
        wikiDataId:
          description: The region WikiData id
          type: string
      title: Country Region Details
      type: object
    RegionResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      - properties:
          data:
            $ref: '#/components/schemas/RegionDetails'
        type: object
      description: Country region details response
      example:
        data:
          capital: Sacramento
          countryCode: US
          fipsCode: 6
          isoCode: CA
          name: California
          numCities: 1532
          wikiDataId: Q99
        errors:
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
      title: Country Region Response
    RegionSummary:
      description: Minimal country region info
      example:
        countryCode: US
        fipsCode: 6
        isoCode: CA
        name: California
        wikiDataId: Q99
      properties:
        countryCode:
          description: An ISO-3166 country code
          type: string
        fipsCode:
          description: The FIPS 10-4 region code
          type: string
        isoCode:
          description: The ISO region code
          type: string
        name:
          description: The region name (varies by languageCode)
          type: string
        wikiDataId:
          description: The region WikiData id
          type: string
      title: Country Region Summary
      type: object
    RegionsResponse:
      allOf:
      - $ref: '#/components/schemas/BaseCollectionResponse'
      - properties:
          data:
            description: A list of RegionSummaries
            items:
              $ref: '#/components/schemas/RegionSummary'
            type: array
        type: object
      description: A list of country regions
      example:
        metadata:
          currentOffset: 0
          totalCount: 100
        data:
        - countryCode: US
          fipsCode: 6
          isoCode: CA
          name: California
          wikiDataId: Q99
        - countryCode: US
          fipsCode: 6
          isoCode: CA
          name: California
          wikiDataId: Q99
        links:
        - href: /data/world/v1/geo/cities?offset=10&limit=10
          rel: next
        - href: /data/world/v1/geo/cities?offset=10&limit=10
          rel: next
        errors:
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
      title: Country Regions Response
    TimeResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      - properties:
          data:
            description: "The time in ISO-8601 format: HHmmss.SSSZ"
            type: string
        type: object
      description: An ISO-8601 time response
      example:
        data: data
        errors:
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
      title: Time Response
    TimeZoneDescriptor:
      description: A time-zone
      example:
        id: Africa__Abidjan
        name: Greenwich Mean Time
        rawUtcOffsetHours: 0
      properties:
        id:
          description: The time-zone id
          type: string
        name:
          description: The time-zone name
          type: string
        rawUtcOffsetHours:
          description: The number of hours this time-zone is offset from UTC
          format: int32
          type: integer
      title: Time-Zone
      type: object
    TimeZoneResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      - properties:
          id:
            description: The time-zone id
            type: string
          name:
            description: The time-zone name
            type: string
          rawUtcOffsetHours:
            description: The number of hours this time-zone is offset from UTC
            format: int32
            type: integer
        type: object
      description: A time-zone
      example:
        rawUtcOffsetHours: 0
        name: name
        id: id
        errors:
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
      title: Time-Zone Response
    TimeZonesResponse:
      allOf:
      - $ref: '#/components/schemas/BaseCollectionResponse'
      - properties:
          data:
            items:
              $ref: '#/components/schemas/TimeZoneDescriptor'
            type: array
        type: object
      description: A list of time-zones
      example:
        metadata:
          currentOffset: 0
          totalCount: 100
        data:
        - id: Africa__Abidjan
          name: Greenwich Mean Time
          rawUtcOffsetHours: 0
        - id: Africa__Abidjan
          name: Greenwich Mean Time
          rawUtcOffsetHours: 0
        links:
        - href: /data/world/v1/geo/cities?offset=10&limit=10
          rel: next
        - href: /data/world/v1/geo/cities?offset=10&limit=10
          rel: next
        errors:
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
        - code: ENTITY_NOT_FOUND
          message: "Param [someParam] has invalid value: invalidValue"
      title: Time-Zones Response
  securitySchemes:
    UserSecurity:
      in: header
      name: x-rapidapi-key
      type: apiKey
x-original-swagger-version: "2.0"

