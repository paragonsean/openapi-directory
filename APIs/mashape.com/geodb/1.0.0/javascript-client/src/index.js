/**
 * GeoDB Cities API
 * The GeoDB API focuses on getting global city and region data. Easily obtain country, region, and city data for use in your apps!  <ul>   <li>Filter cities by name prefix, country, location, time-zone, and even minimum population.</li>   <li>Sort cities by name, country code, elevation, and population - or any combination of these.</li>    <li>Get all country regions.</li> <li>Get all cities in a given region.</li>   <li>     Display results in multiple languages.</li> <li>RESTful API adheres to industry best-practices, including     HATEOAS-style links to facilitate paging results.   </li>    <li>Backed by cloud-based load-balanced infrastructure for resiliency and performance!</li>   <li>Data is periodically refreshed from GeoNames and WikiData.</li> </ul> <p>Notes: <ul>   <li>     Since the database is periodically updated, this may <strong>very rarely</strong> result in certain cities     being marked deleted (e.g., duplicates removed). By default, endpoints returning city data will exclude     cities marked deleted. However, in the unlikely event that this occurs while your app is paging through a set     of affected results - and you care about the paged results suddenly changing underneath - specify      <tt>includeDeleted=SINCE_YESTERDAY</tt> (or <tt>SINCE_LAST_WEEK</tt> if you're really paranoid!).   </li> </ul> <hr/> <h3>Useful Resources</h3> <ul>   <li>     SDKs     <ul>       <li>         <a href='https://www.npmjs.com/package/wft-geodb-angular-client'>Angular</a>,          <a href='https://github.com/wirefreethought/geodb-sample-angular-app'>Sample App</a>       </li>       <li><a href='https://github.com/wirefreethought/geodb-java-client'>Java</a></li>       <li><a href='https://www.npmjs.com/package/wft-geodb-js-client'>JavaScript</a></li>     </ul>     <li><a href='swagger.json'>Swagger Docs</a></li>     <li><a href='http://creativecommons.org/licenses/by/3.0/'>Usage License</a></li>   </li>       </ul> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BadRequestResponse from './model/BadRequestResponse';
import BaseCollectionResponse from './model/BaseCollectionResponse';
import BaseResponse from './model/BaseResponse';
import CountriesResponse from './model/CountriesResponse';
import CountryDetails from './model/CountryDetails';
import CountryResponse from './model/CountryResponse';
import CountrySummary from './model/CountrySummary';
import CurrenciesResponse from './model/CurrenciesResponse';
import Currency from './model/Currency';
import DateTimeResponse from './model/DateTimeResponse';
import DistanceResponse from './model/DistanceResponse';
import Error from './model/Error';
import ErrorCode from './model/ErrorCode';
import ForbiddenResponse from './model/ForbiddenResponse';
import LanguageDescriptor from './model/LanguageDescriptor';
import LanguagesResponse from './model/LanguagesResponse';
import Link from './model/Link';
import Locale from './model/Locale';
import LocalesResponse from './model/LocalesResponse';
import Metadata from './model/Metadata';
import NotFoundResponse from './model/NotFoundResponse';
import PopulatedPlaceDetails from './model/PopulatedPlaceDetails';
import PopulatedPlaceResponse from './model/PopulatedPlaceResponse';
import PopulatedPlaceSummary from './model/PopulatedPlaceSummary';
import PopulatedPlaceType from './model/PopulatedPlaceType';
import PopulatedPlacesResponse from './model/PopulatedPlacesResponse';
import RegionDetails from './model/RegionDetails';
import RegionResponse from './model/RegionResponse';
import RegionSummary from './model/RegionSummary';
import RegionsResponse from './model/RegionsResponse';
import TimeResponse from './model/TimeResponse';
import TimeZoneDescriptor from './model/TimeZoneDescriptor';
import TimeZoneResponse from './model/TimeZoneResponse';
import TimeZonesResponse from './model/TimeZonesResponse';
import GeoApi from './api/GeoApi';
import LocaleApi from './api/LocaleApi';


/**
* The GeoDB API focuses on getting global city and region data. Easily obtain country, region, and city data for use in your apps!  &lt;ul&gt;   &lt;li&gt;Filter cities by name prefix, country, location, time-zone, and even minimum population.&lt;/li&gt;   &lt;li&gt;Sort cities by name, country code, elevation, and population - or any combination of these.&lt;/li&gt;    &lt;li&gt;Get all country regions.&lt;/li&gt; &lt;li&gt;Get all cities in a given region.&lt;/li&gt;   &lt;li&gt;     Display results in multiple languages.&lt;/li&gt; &lt;li&gt;RESTful API adheres to industry best-practices, including     HATEOAS-style links to facilitate paging results.   &lt;/li&gt;    &lt;li&gt;Backed by cloud-based load-balanced infrastructure for resiliency and performance!&lt;/li&gt;   &lt;li&gt;Data is periodically refreshed from GeoNames and WikiData.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Notes: &lt;ul&gt;   &lt;li&gt;     Since the database is periodically updated, this may &lt;strong&gt;very rarely&lt;/strong&gt; result in certain cities     being marked deleted (e.g., duplicates removed). By default, endpoints returning city data will exclude     cities marked deleted. However, in the unlikely event that this occurs while your app is paging through a set     of affected results - and you care about the paged results suddenly changing underneath - specify      &lt;tt&gt;includeDeleted&#x3D;SINCE_YESTERDAY&lt;/tt&gt; (or &lt;tt&gt;SINCE_LAST_WEEK&lt;/tt&gt; if you&#39;re really paranoid!).   &lt;/li&gt; &lt;/ul&gt; &lt;hr/&gt; &lt;h3&gt;Useful Resources&lt;/h3&gt; &lt;ul&gt;   &lt;li&gt;     SDKs     &lt;ul&gt;       &lt;li&gt;         &lt;a href&#x3D;&#39;https://www.npmjs.com/package/wft-geodb-angular-client&#39;&gt;Angular&lt;/a&gt;,          &lt;a href&#x3D;&#39;https://github.com/wirefreethought/geodb-sample-angular-app&#39;&gt;Sample App&lt;/a&gt;       &lt;/li&gt;       &lt;li&gt;&lt;a href&#x3D;&#39;https://github.com/wirefreethought/geodb-java-client&#39;&gt;Java&lt;/a&gt;&lt;/li&gt;       &lt;li&gt;&lt;a href&#x3D;&#39;https://www.npmjs.com/package/wft-geodb-js-client&#39;&gt;JavaScript&lt;/a&gt;&lt;/li&gt;     &lt;/ul&gt;     &lt;li&gt;&lt;a href&#x3D;&#39;swagger.json&#39;&gt;Swagger Docs&lt;/a&gt;&lt;/li&gt;     &lt;li&gt;&lt;a href&#x3D;&#39;http://creativecommons.org/licenses/by/3.0/&#39;&gt;Usage License&lt;/a&gt;&lt;/li&gt;   &lt;/li&gt;       &lt;/ul&gt; .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GeoDbCitiesApi = require('index'); // See note below*.
* var xxxSvc = new GeoDbCitiesApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GeoDbCitiesApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GeoDbCitiesApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GeoDbCitiesApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BadRequestResponse model constructor.
     * @property {module:model/BadRequestResponse}
     */
    BadRequestResponse,

    /**
     * The BaseCollectionResponse model constructor.
     * @property {module:model/BaseCollectionResponse}
     */
    BaseCollectionResponse,

    /**
     * The BaseResponse model constructor.
     * @property {module:model/BaseResponse}
     */
    BaseResponse,

    /**
     * The CountriesResponse model constructor.
     * @property {module:model/CountriesResponse}
     */
    CountriesResponse,

    /**
     * The CountryDetails model constructor.
     * @property {module:model/CountryDetails}
     */
    CountryDetails,

    /**
     * The CountryResponse model constructor.
     * @property {module:model/CountryResponse}
     */
    CountryResponse,

    /**
     * The CountrySummary model constructor.
     * @property {module:model/CountrySummary}
     */
    CountrySummary,

    /**
     * The CurrenciesResponse model constructor.
     * @property {module:model/CurrenciesResponse}
     */
    CurrenciesResponse,

    /**
     * The Currency model constructor.
     * @property {module:model/Currency}
     */
    Currency,

    /**
     * The DateTimeResponse model constructor.
     * @property {module:model/DateTimeResponse}
     */
    DateTimeResponse,

    /**
     * The DistanceResponse model constructor.
     * @property {module:model/DistanceResponse}
     */
    DistanceResponse,

    /**
     * The Error model constructor.
     * @property {module:model/Error}
     */
    Error,

    /**
     * The ErrorCode model constructor.
     * @property {module:model/ErrorCode}
     */
    ErrorCode,

    /**
     * The ForbiddenResponse model constructor.
     * @property {module:model/ForbiddenResponse}
     */
    ForbiddenResponse,

    /**
     * The LanguageDescriptor model constructor.
     * @property {module:model/LanguageDescriptor}
     */
    LanguageDescriptor,

    /**
     * The LanguagesResponse model constructor.
     * @property {module:model/LanguagesResponse}
     */
    LanguagesResponse,

    /**
     * The Link model constructor.
     * @property {module:model/Link}
     */
    Link,

    /**
     * The Locale model constructor.
     * @property {module:model/Locale}
     */
    Locale,

    /**
     * The LocalesResponse model constructor.
     * @property {module:model/LocalesResponse}
     */
    LocalesResponse,

    /**
     * The Metadata model constructor.
     * @property {module:model/Metadata}
     */
    Metadata,

    /**
     * The NotFoundResponse model constructor.
     * @property {module:model/NotFoundResponse}
     */
    NotFoundResponse,

    /**
     * The PopulatedPlaceDetails model constructor.
     * @property {module:model/PopulatedPlaceDetails}
     */
    PopulatedPlaceDetails,

    /**
     * The PopulatedPlaceResponse model constructor.
     * @property {module:model/PopulatedPlaceResponse}
     */
    PopulatedPlaceResponse,

    /**
     * The PopulatedPlaceSummary model constructor.
     * @property {module:model/PopulatedPlaceSummary}
     */
    PopulatedPlaceSummary,

    /**
     * The PopulatedPlaceType model constructor.
     * @property {module:model/PopulatedPlaceType}
     */
    PopulatedPlaceType,

    /**
     * The PopulatedPlacesResponse model constructor.
     * @property {module:model/PopulatedPlacesResponse}
     */
    PopulatedPlacesResponse,

    /**
     * The RegionDetails model constructor.
     * @property {module:model/RegionDetails}
     */
    RegionDetails,

    /**
     * The RegionResponse model constructor.
     * @property {module:model/RegionResponse}
     */
    RegionResponse,

    /**
     * The RegionSummary model constructor.
     * @property {module:model/RegionSummary}
     */
    RegionSummary,

    /**
     * The RegionsResponse model constructor.
     * @property {module:model/RegionsResponse}
     */
    RegionsResponse,

    /**
     * The TimeResponse model constructor.
     * @property {module:model/TimeResponse}
     */
    TimeResponse,

    /**
     * The TimeZoneDescriptor model constructor.
     * @property {module:model/TimeZoneDescriptor}
     */
    TimeZoneDescriptor,

    /**
     * The TimeZoneResponse model constructor.
     * @property {module:model/TimeZoneResponse}
     */
    TimeZoneResponse,

    /**
     * The TimeZonesResponse model constructor.
     * @property {module:model/TimeZonesResponse}
     */
    TimeZonesResponse,

    /**
    * The GeoApi service constructor.
    * @property {module:api/GeoApi}
    */
    GeoApi,

    /**
    * The LocaleApi service constructor.
    * @property {module:api/LocaleApi}
    */
    LocaleApi
};
