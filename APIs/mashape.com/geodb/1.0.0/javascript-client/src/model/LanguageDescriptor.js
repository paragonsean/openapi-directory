/**
 * GeoDB Cities API
 * The GeoDB API focuses on getting global city and region data. Easily obtain country, region, and city data for use in your apps!  <ul>   <li>Filter cities by name prefix, country, location, time-zone, and even minimum population.</li>   <li>Sort cities by name, country code, elevation, and population - or any combination of these.</li>    <li>Get all country regions.</li> <li>Get all cities in a given region.</li>   <li>     Display results in multiple languages.</li> <li>RESTful API adheres to industry best-practices, including     HATEOAS-style links to facilitate paging results.   </li>    <li>Backed by cloud-based load-balanced infrastructure for resiliency and performance!</li>   <li>Data is periodically refreshed from GeoNames and WikiData.</li> </ul> <p>Notes: <ul>   <li>     Since the database is periodically updated, this may <strong>very rarely</strong> result in certain cities     being marked deleted (e.g., duplicates removed). By default, endpoints returning city data will exclude     cities marked deleted. However, in the unlikely event that this occurs while your app is paging through a set     of affected results - and you care about the paged results suddenly changing underneath - specify      <tt>includeDeleted=SINCE_YESTERDAY</tt> (or <tt>SINCE_LAST_WEEK</tt> if you're really paranoid!).   </li> </ul> <hr/> <h3>Useful Resources</h3> <ul>   <li>     SDKs     <ul>       <li>         <a href='https://www.npmjs.com/package/wft-geodb-angular-client'>Angular</a>,          <a href='https://github.com/wirefreethought/geodb-sample-angular-app'>Sample App</a>       </li>       <li><a href='https://github.com/wirefreethought/geodb-java-client'>Java</a></li>       <li><a href='https://www.npmjs.com/package/wft-geodb-js-client'>JavaScript</a></li>     </ul>     <li><a href='swagger.json'>Swagger Docs</a></li>     <li><a href='http://creativecommons.org/licenses/by/3.0/'>Usage License</a></li>   </li>       </ul> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The LanguageDescriptor model module.
 * @module model/LanguageDescriptor
 * @version 1.0.0
 */
class LanguageDescriptor {
    /**
     * Constructs a new <code>LanguageDescriptor</code>.
     * A language supported by the service
     * @alias module:model/LanguageDescriptor
     */
    constructor() { 
        
        LanguageDescriptor.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>LanguageDescriptor</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/LanguageDescriptor} obj Optional instance to populate.
     * @return {module:model/LanguageDescriptor} The populated <code>LanguageDescriptor</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new LanguageDescriptor();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>LanguageDescriptor</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>LanguageDescriptor</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }

        return true;
    }


}



/**
 * @member {module:model/LanguageDescriptor.CodeEnum} code
 */
LanguageDescriptor.prototype['code'] = undefined;

/**
 * @member {String} name
 */
LanguageDescriptor.prototype['name'] = undefined;





/**
 * Allowed values for the <code>code</code> property.
 * @enum {String}
 * @readonly
 */
LanguageDescriptor['CodeEnum'] = {

    /**
     * value: "undefined"
     * @const
     */
    "undefined": "undefined",

    /**
     * value: "aa"
     * @const
     */
    "aa": "aa",

    /**
     * value: "ab"
     * @const
     */
    "ab": "ab",

    /**
     * value: "ae"
     * @const
     */
    "ae": "ae",

    /**
     * value: "af"
     * @const
     */
    "af": "af",

    /**
     * value: "ak"
     * @const
     */
    "ak": "ak",

    /**
     * value: "am"
     * @const
     */
    "am": "am",

    /**
     * value: "an"
     * @const
     */
    "an": "an",

    /**
     * value: "ar"
     * @const
     */
    "ar": "ar",

    /**
     * value: "as"
     * @const
     */
    "as": "as",

    /**
     * value: "av"
     * @const
     */
    "av": "av",

    /**
     * value: "ay"
     * @const
     */
    "ay": "ay",

    /**
     * value: "az"
     * @const
     */
    "az": "az",

    /**
     * value: "ba"
     * @const
     */
    "ba": "ba",

    /**
     * value: "be"
     * @const
     */
    "be": "be",

    /**
     * value: "bg"
     * @const
     */
    "bg": "bg",

    /**
     * value: "bh"
     * @const
     */
    "bh": "bh",

    /**
     * value: "bi"
     * @const
     */
    "bi": "bi",

    /**
     * value: "bm"
     * @const
     */
    "bm": "bm",

    /**
     * value: "bn"
     * @const
     */
    "bn": "bn",

    /**
     * value: "bo"
     * @const
     */
    "bo": "bo",

    /**
     * value: "br"
     * @const
     */
    "br": "br",

    /**
     * value: "bs"
     * @const
     */
    "bs": "bs",

    /**
     * value: "ca"
     * @const
     */
    "ca": "ca",

    /**
     * value: "ce"
     * @const
     */
    "ce": "ce",

    /**
     * value: "ch"
     * @const
     */
    "ch": "ch",

    /**
     * value: "co"
     * @const
     */
    "co": "co",

    /**
     * value: "cr"
     * @const
     */
    "cr": "cr",

    /**
     * value: "cs"
     * @const
     */
    "cs": "cs",

    /**
     * value: "cu"
     * @const
     */
    "cu": "cu",

    /**
     * value: "cv"
     * @const
     */
    "cv": "cv",

    /**
     * value: "cy"
     * @const
     */
    "cy": "cy",

    /**
     * value: "da"
     * @const
     */
    "da": "da",

    /**
     * value: "de"
     * @const
     */
    "de": "de",

    /**
     * value: "dv"
     * @const
     */
    "dv": "dv",

    /**
     * value: "dz"
     * @const
     */
    "dz": "dz",

    /**
     * value: "ee"
     * @const
     */
    "ee": "ee",

    /**
     * value: "el"
     * @const
     */
    "el": "el",

    /**
     * value: "en"
     * @const
     */
    "en": "en",

    /**
     * value: "eo"
     * @const
     */
    "eo": "eo",

    /**
     * value: "es"
     * @const
     */
    "es": "es",

    /**
     * value: "et"
     * @const
     */
    "et": "et",

    /**
     * value: "eu"
     * @const
     */
    "eu": "eu",

    /**
     * value: "fa"
     * @const
     */
    "fa": "fa",

    /**
     * value: "ff"
     * @const
     */
    "ff": "ff",

    /**
     * value: "fi"
     * @const
     */
    "fi": "fi",

    /**
     * value: "fj"
     * @const
     */
    "fj": "fj",

    /**
     * value: "fo"
     * @const
     */
    "fo": "fo",

    /**
     * value: "fr"
     * @const
     */
    "fr": "fr",

    /**
     * value: "fy"
     * @const
     */
    "fy": "fy",

    /**
     * value: "ga"
     * @const
     */
    "ga": "ga",

    /**
     * value: "gd"
     * @const
     */
    "gd": "gd",

    /**
     * value: "gl"
     * @const
     */
    "gl": "gl",

    /**
     * value: "gn"
     * @const
     */
    "gn": "gn",

    /**
     * value: "gu"
     * @const
     */
    "gu": "gu",

    /**
     * value: "gv"
     * @const
     */
    "gv": "gv",

    /**
     * value: "ha"
     * @const
     */
    "ha": "ha",

    /**
     * value: "he"
     * @const
     */
    "he": "he",

    /**
     * value: "hi"
     * @const
     */
    "hi": "hi",

    /**
     * value: "ho"
     * @const
     */
    "ho": "ho",

    /**
     * value: "hr"
     * @const
     */
    "hr": "hr",

    /**
     * value: "ht"
     * @const
     */
    "ht": "ht",

    /**
     * value: "hu"
     * @const
     */
    "hu": "hu",

    /**
     * value: "hy"
     * @const
     */
    "hy": "hy",

    /**
     * value: "hz"
     * @const
     */
    "hz": "hz",

    /**
     * value: "ia"
     * @const
     */
    "ia": "ia",

    /**
     * value: "id"
     * @const
     */
    "id": "id",

    /**
     * value: "ie"
     * @const
     */
    "ie": "ie",

    /**
     * value: "ig"
     * @const
     */
    "ig": "ig",

    /**
     * value: "ii"
     * @const
     */
    "ii": "ii",

    /**
     * value: "ik"
     * @const
     */
    "ik": "ik",

    /**
     * value: "io"
     * @const
     */
    "io": "io",

    /**
     * value: "is"
     * @const
     */
    "is": "is",

    /**
     * value: "it"
     * @const
     */
    "it": "it",

    /**
     * value: "iu"
     * @const
     */
    "iu": "iu",

    /**
     * value: "ja"
     * @const
     */
    "ja": "ja",

    /**
     * value: "jv"
     * @const
     */
    "jv": "jv",

    /**
     * value: "ka"
     * @const
     */
    "ka": "ka",

    /**
     * value: "kg"
     * @const
     */
    "kg": "kg",

    /**
     * value: "ki"
     * @const
     */
    "ki": "ki",

    /**
     * value: "kj"
     * @const
     */
    "kj": "kj",

    /**
     * value: "kk"
     * @const
     */
    "kk": "kk",

    /**
     * value: "kl"
     * @const
     */
    "kl": "kl",

    /**
     * value: "km"
     * @const
     */
    "km": "km",

    /**
     * value: "kn"
     * @const
     */
    "kn": "kn",

    /**
     * value: "ko"
     * @const
     */
    "ko": "ko",

    /**
     * value: "kr"
     * @const
     */
    "kr": "kr",

    /**
     * value: "ks"
     * @const
     */
    "ks": "ks",

    /**
     * value: "ku"
     * @const
     */
    "ku": "ku",

    /**
     * value: "kv"
     * @const
     */
    "kv": "kv",

    /**
     * value: "kw"
     * @const
     */
    "kw": "kw",

    /**
     * value: "ky"
     * @const
     */
    "ky": "ky",

    /**
     * value: "la"
     * @const
     */
    "la": "la",

    /**
     * value: "lb"
     * @const
     */
    "lb": "lb",

    /**
     * value: "lg"
     * @const
     */
    "lg": "lg",

    /**
     * value: "li"
     * @const
     */
    "li": "li",

    /**
     * value: "ln"
     * @const
     */
    "ln": "ln",

    /**
     * value: "lo"
     * @const
     */
    "lo": "lo",

    /**
     * value: "lt"
     * @const
     */
    "lt": "lt",

    /**
     * value: "lu"
     * @const
     */
    "lu": "lu",

    /**
     * value: "lv"
     * @const
     */
    "lv": "lv",

    /**
     * value: "mg"
     * @const
     */
    "mg": "mg",

    /**
     * value: "mh"
     * @const
     */
    "mh": "mh",

    /**
     * value: "mi"
     * @const
     */
    "mi": "mi",

    /**
     * value: "mk"
     * @const
     */
    "mk": "mk",

    /**
     * value: "ml"
     * @const
     */
    "ml": "ml",

    /**
     * value: "mn"
     * @const
     */
    "mn": "mn",

    /**
     * value: "mr"
     * @const
     */
    "mr": "mr",

    /**
     * value: "ms"
     * @const
     */
    "ms": "ms",

    /**
     * value: "mt"
     * @const
     */
    "mt": "mt",

    /**
     * value: "my"
     * @const
     */
    "my": "my",

    /**
     * value: "na"
     * @const
     */
    "na": "na",

    /**
     * value: "nb"
     * @const
     */
    "nb": "nb",

    /**
     * value: "nd"
     * @const
     */
    "nd": "nd",

    /**
     * value: "ne"
     * @const
     */
    "ne": "ne",

    /**
     * value: "ng"
     * @const
     */
    "ng": "ng",

    /**
     * value: "nl"
     * @const
     */
    "nl": "nl",

    /**
     * value: "nn"
     * @const
     */
    "nn": "nn",

    /**
     * value: "nr"
     * @const
     */
    "nr": "nr",

    /**
     * value: "nv"
     * @const
     */
    "nv": "nv",

    /**
     * value: "ny"
     * @const
     */
    "ny": "ny",

    /**
     * value: "oc"
     * @const
     */
    "oc": "oc",

    /**
     * value: "oj"
     * @const
     */
    "oj": "oj",

    /**
     * value: "om"
     * @const
     */
    "om": "om",

    /**
     * value: "or"
     * @const
     */
    "or": "or",

    /**
     * value: "os"
     * @const
     */
    "os": "os",

    /**
     * value: "pa"
     * @const
     */
    "pa": "pa",

    /**
     * value: "pi"
     * @const
     */
    "pi": "pi",

    /**
     * value: "pl"
     * @const
     */
    "pl": "pl",

    /**
     * value: "ps"
     * @const
     */
    "ps": "ps",

    /**
     * value: "pt"
     * @const
     */
    "pt": "pt",

    /**
     * value: "qu"
     * @const
     */
    "qu": "qu",

    /**
     * value: "rm"
     * @const
     */
    "rm": "rm",

    /**
     * value: "rn"
     * @const
     */
    "rn": "rn",

    /**
     * value: "ro"
     * @const
     */
    "ro": "ro",

    /**
     * value: "ru"
     * @const
     */
    "ru": "ru",

    /**
     * value: "rw"
     * @const
     */
    "rw": "rw",

    /**
     * value: "sa"
     * @const
     */
    "sa": "sa",

    /**
     * value: "sc"
     * @const
     */
    "sc": "sc",

    /**
     * value: "sd"
     * @const
     */
    "sd": "sd",

    /**
     * value: "se"
     * @const
     */
    "se": "se",

    /**
     * value: "sg"
     * @const
     */
    "sg": "sg",

    /**
     * value: "si"
     * @const
     */
    "si": "si",

    /**
     * value: "sk"
     * @const
     */
    "sk": "sk",

    /**
     * value: "sl"
     * @const
     */
    "sl": "sl",

    /**
     * value: "sm"
     * @const
     */
    "sm": "sm",

    /**
     * value: "sn"
     * @const
     */
    "sn": "sn",

    /**
     * value: "so"
     * @const
     */
    "so": "so",

    /**
     * value: "sq"
     * @const
     */
    "sq": "sq",

    /**
     * value: "sr"
     * @const
     */
    "sr": "sr",

    /**
     * value: "ss"
     * @const
     */
    "ss": "ss",

    /**
     * value: "st"
     * @const
     */
    "st": "st",

    /**
     * value: "su"
     * @const
     */
    "su": "su",

    /**
     * value: "sv"
     * @const
     */
    "sv": "sv",

    /**
     * value: "sw"
     * @const
     */
    "sw": "sw",

    /**
     * value: "ta"
     * @const
     */
    "ta": "ta",

    /**
     * value: "te"
     * @const
     */
    "te": "te",

    /**
     * value: "tg"
     * @const
     */
    "tg": "tg",

    /**
     * value: "th"
     * @const
     */
    "th": "th",

    /**
     * value: "ti"
     * @const
     */
    "ti": "ti",

    /**
     * value: "tk"
     * @const
     */
    "tk": "tk",

    /**
     * value: "tl"
     * @const
     */
    "tl": "tl",

    /**
     * value: "tn"
     * @const
     */
    "tn": "tn",

    /**
     * value: "to"
     * @const
     */
    "to": "to",

    /**
     * value: "tr"
     * @const
     */
    "tr": "tr",

    /**
     * value: "ts"
     * @const
     */
    "ts": "ts",

    /**
     * value: "tt"
     * @const
     */
    "tt": "tt",

    /**
     * value: "tw"
     * @const
     */
    "tw": "tw",

    /**
     * value: "ty"
     * @const
     */
    "ty": "ty",

    /**
     * value: "ug"
     * @const
     */
    "ug": "ug",

    /**
     * value: "uk"
     * @const
     */
    "uk": "uk",

    /**
     * value: "ur"
     * @const
     */
    "ur": "ur",

    /**
     * value: "uz"
     * @const
     */
    "uz": "uz",

    /**
     * value: "ve"
     * @const
     */
    "ve": "ve",

    /**
     * value: "vi"
     * @const
     */
    "vi": "vi",

    /**
     * value: "vo"
     * @const
     */
    "vo": "vo",

    /**
     * value: "wa"
     * @const
     */
    "wa": "wa",

    /**
     * value: "wo"
     * @const
     */
    "wo": "wo",

    /**
     * value: "xh"
     * @const
     */
    "xh": "xh",

    /**
     * value: "yi"
     * @const
     */
    "yi": "yi",

    /**
     * value: "yo"
     * @const
     */
    "yo": "yo",

    /**
     * value: "za"
     * @const
     */
    "za": "za",

    /**
     * value: "zh"
     * @const
     */
    "zh": "zh",

    /**
     * value: "zu"
     * @const
     */
    "zu": "zu"
};



export default LanguageDescriptor;

