/**
 * GeoDB Cities API
 * The GeoDB API focuses on getting global city and region data. Easily obtain country, region, and city data for use in your apps!  <ul>   <li>Filter cities by name prefix, country, location, time-zone, and even minimum population.</li>   <li>Sort cities by name, country code, elevation, and population - or any combination of these.</li>    <li>Get all country regions.</li> <li>Get all cities in a given region.</li>   <li>     Display results in multiple languages.</li> <li>RESTful API adheres to industry best-practices, including     HATEOAS-style links to facilitate paging results.   </li>    <li>Backed by cloud-based load-balanced infrastructure for resiliency and performance!</li>   <li>Data is periodically refreshed from GeoNames and WikiData.</li> </ul> <p>Notes: <ul>   <li>     Since the database is periodically updated, this may <strong>very rarely</strong> result in certain cities     being marked deleted (e.g., duplicates removed). By default, endpoints returning city data will exclude     cities marked deleted. However, in the unlikely event that this occurs while your app is paging through a set     of affected results - and you care about the paged results suddenly changing underneath - specify      <tt>includeDeleted=SINCE_YESTERDAY</tt> (or <tt>SINCE_LAST_WEEK</tt> if you're really paranoid!).   </li> </ul> <hr/> <h3>Useful Resources</h3> <ul>   <li>     SDKs     <ul>       <li>         <a href='https://www.npmjs.com/package/wft-geodb-angular-client'>Angular</a>,          <a href='https://github.com/wirefreethought/geodb-sample-angular-app'>Sample App</a>       </li>       <li><a href='https://github.com/wirefreethought/geodb-java-client'>Java</a></li>       <li><a href='https://www.npmjs.com/package/wft-geodb-js-client'>JavaScript</a></li>     </ul>     <li><a href='swagger.json'>Swagger Docs</a></li>     <li><a href='http://creativecommons.org/licenses/by/3.0/'>Usage License</a></li>   </li>       </ul> 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GeoDbCitiesApi);
  }
}(this, function(expect, GeoDbCitiesApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GeoDbCitiesApi.GeoApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('GeoApi', function() {
    describe('findAdminDivisionsUsingGET', function() {
      it('should call findAdminDivisionsUsingGET successfully', function(done) {
        //uncomment below and update the code to test findAdminDivisionsUsingGET
        //instance.findAdminDivisionsUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findCitiesNearAdminDivisionUsingGET', function() {
      it('should call findCitiesNearAdminDivisionUsingGET successfully', function(done) {
        //uncomment below and update the code to test findCitiesNearAdminDivisionUsingGET
        //instance.findCitiesNearAdminDivisionUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findCitiesNearCityUsingGET', function() {
      it('should call findCitiesNearCityUsingGET successfully', function(done) {
        //uncomment below and update the code to test findCitiesNearCityUsingGET
        //instance.findCitiesNearCityUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findCitiesNearLocationUsingGET', function() {
      it('should call findCitiesNearLocationUsingGET successfully', function(done) {
        //uncomment below and update the code to test findCitiesNearLocationUsingGET
        //instance.findCitiesNearLocationUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findCitiesUsingGET', function() {
      it('should call findCitiesUsingGET successfully', function(done) {
        //uncomment below and update the code to test findCitiesUsingGET
        //instance.findCitiesUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findDivisionsNearAdminDivisionUsingGET', function() {
      it('should call findDivisionsNearAdminDivisionUsingGET successfully', function(done) {
        //uncomment below and update the code to test findDivisionsNearAdminDivisionUsingGET
        //instance.findDivisionsNearAdminDivisionUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findDivisionsNearLocationUsingGET', function() {
      it('should call findDivisionsNearLocationUsingGET successfully', function(done) {
        //uncomment below and update the code to test findDivisionsNearLocationUsingGET
        //instance.findDivisionsNearLocationUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findRegionCitiesUsingGET', function() {
      it('should call findRegionCitiesUsingGET successfully', function(done) {
        //uncomment below and update the code to test findRegionCitiesUsingGET
        //instance.findRegionCitiesUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('findRegionDivisionsUsingGET', function() {
      it('should call findRegionDivisionsUsingGET successfully', function(done) {
        //uncomment below and update the code to test findRegionDivisionsUsingGET
        //instance.findRegionDivisionsUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getAdminDivisionUsingGET', function() {
      it('should call getAdminDivisionUsingGET successfully', function(done) {
        //uncomment below and update the code to test getAdminDivisionUsingGET
        //instance.getAdminDivisionUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCityDateTimeUsingGET', function() {
      it('should call getCityDateTimeUsingGET successfully', function(done) {
        //uncomment below and update the code to test getCityDateTimeUsingGET
        //instance.getCityDateTimeUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCityDistanceUsingGET', function() {
      it('should call getCityDistanceUsingGET successfully', function(done) {
        //uncomment below and update the code to test getCityDistanceUsingGET
        //instance.getCityDistanceUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCityLocatedInUsingGET', function() {
      it('should call getCityLocatedInUsingGET successfully', function(done) {
        //uncomment below and update the code to test getCityLocatedInUsingGET
        //instance.getCityLocatedInUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCityTimeUsingGET', function() {
      it('should call getCityTimeUsingGET successfully', function(done) {
        //uncomment below and update the code to test getCityTimeUsingGET
        //instance.getCityTimeUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCityUsingGET', function() {
      it('should call getCityUsingGET successfully', function(done) {
        //uncomment below and update the code to test getCityUsingGET
        //instance.getCityUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCountriesUsingGET', function() {
      it('should call getCountriesUsingGET successfully', function(done) {
        //uncomment below and update the code to test getCountriesUsingGET
        //instance.getCountriesUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getCountryUsingGET', function() {
      it('should call getCountryUsingGET successfully', function(done) {
        //uncomment below and update the code to test getCountryUsingGET
        //instance.getCountryUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRegionUsingGET', function() {
      it('should call getRegionUsingGET successfully', function(done) {
        //uncomment below and update the code to test getRegionUsingGET
        //instance.getRegionUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getRegionsUsingGET', function() {
      it('should call getRegionsUsingGET successfully', function(done) {
        //uncomment below and update the code to test getRegionsUsingGET
        //instance.getRegionsUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
