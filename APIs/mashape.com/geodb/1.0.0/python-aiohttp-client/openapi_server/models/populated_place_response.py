# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.error import Error
from openapi_server.models.populated_place_details import PopulatedPlaceDetails
from openapi_server import util


class PopulatedPlaceResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, errors: List[Error]=None, data: PopulatedPlaceDetails=None):
        """PopulatedPlaceResponse - a model defined in OpenAPI

        :param errors: The errors of this PopulatedPlaceResponse.
        :param data: The data of this PopulatedPlaceResponse.
        """
        self.openapi_types = {
            'errors': List[Error],
            'data': PopulatedPlaceDetails
        }

        self.attribute_map = {
            'errors': 'errors',
            'data': 'data'
        }

        self._errors = errors
        self._data = data

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PopulatedPlaceResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PopulatedPlaceResponse of this PopulatedPlaceResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors(self):
        """Gets the errors of this PopulatedPlaceResponse.


        :return: The errors of this PopulatedPlaceResponse.
        :rtype: List[Error]
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this PopulatedPlaceResponse.


        :param errors: The errors of this PopulatedPlaceResponse.
        :type errors: List[Error]
        """

        self._errors = errors

    @property
    def data(self):
        """Gets the data of this PopulatedPlaceResponse.


        :return: The data of this PopulatedPlaceResponse.
        :rtype: PopulatedPlaceDetails
        """
        return self._data

    @data.setter
    def data(self, data):
        """Sets the data of this PopulatedPlaceResponse.


        :param data: The data of this PopulatedPlaceResponse.
        :type data: PopulatedPlaceDetails
        """

        self._data = data
