# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TimeZoneDescriptor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, name: str=None, raw_utc_offset_hours: int=None):
        """TimeZoneDescriptor - a model defined in OpenAPI

        :param id: The id of this TimeZoneDescriptor.
        :param name: The name of this TimeZoneDescriptor.
        :param raw_utc_offset_hours: The raw_utc_offset_hours of this TimeZoneDescriptor.
        """
        self.openapi_types = {
            'id': str,
            'name': str,
            'raw_utc_offset_hours': int
        }

        self.attribute_map = {
            'id': 'id',
            'name': 'name',
            'raw_utc_offset_hours': 'rawUtcOffsetHours'
        }

        self._id = id
        self._name = name
        self._raw_utc_offset_hours = raw_utc_offset_hours

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TimeZoneDescriptor':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TimeZoneDescriptor of this TimeZoneDescriptor.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this TimeZoneDescriptor.

        The time-zone id

        :return: The id of this TimeZoneDescriptor.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this TimeZoneDescriptor.

        The time-zone id

        :param id: The id of this TimeZoneDescriptor.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this TimeZoneDescriptor.

        The time-zone name

        :return: The name of this TimeZoneDescriptor.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this TimeZoneDescriptor.

        The time-zone name

        :param name: The name of this TimeZoneDescriptor.
        :type name: str
        """

        self._name = name

    @property
    def raw_utc_offset_hours(self):
        """Gets the raw_utc_offset_hours of this TimeZoneDescriptor.

        The number of hours this time-zone is offset from UTC

        :return: The raw_utc_offset_hours of this TimeZoneDescriptor.
        :rtype: int
        """
        return self._raw_utc_offset_hours

    @raw_utc_offset_hours.setter
    def raw_utc_offset_hours(self, raw_utc_offset_hours):
        """Sets the raw_utc_offset_hours of this TimeZoneDescriptor.

        The number of hours this time-zone is offset from UTC

        :param raw_utc_offset_hours: The raw_utc_offset_hours of this TimeZoneDescriptor.
        :type raw_utc_offset_hours: int
        """

        self._raw_utc_offset_hours = raw_utc_offset_hours
