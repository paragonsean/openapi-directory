# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ErrorCode(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ACCESS_DENIED = 'ACCESS_DENIED'
    ENTITY_NOT_FOUND = 'ENTITY_NOT_FOUND'
    INCOMPATIBLE = 'INCOMPATIBLE'
    PARAM_INVALID = 'PARAM_INVALID'
    PARAMS_MUTUALLY_EXCLUSIVE = 'PARAMS_MUTUALLY_EXCLUSIVE'
    REQUEST_UNPROCESSABLE = 'REQUEST_UNPROCESSABLE'

    def __init__(self):
        """ErrorCode - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorCode':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErrorCode of this ErrorCode.
        """
        return util.deserialize_model(dikt, cls)
