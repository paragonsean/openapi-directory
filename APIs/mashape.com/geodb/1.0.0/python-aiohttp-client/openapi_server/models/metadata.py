# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Metadata(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_offset: int=None, total_count: int=None):
        """Metadata - a model defined in OpenAPI

        :param current_offset: The current_offset of this Metadata.
        :param total_count: The total_count of this Metadata.
        """
        self.openapi_types = {
            'current_offset': int,
            'total_count': int
        }

        self.attribute_map = {
            'current_offset': 'currentOffset',
            'total_count': 'totalCount'
        }

        self._current_offset = current_offset
        self._total_count = total_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Metadata':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Metadata of this Metadata.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_offset(self):
        """Gets the current_offset of this Metadata.

        The zero-ary offset into the results (0 is the first result)

        :return: The current_offset of this Metadata.
        :rtype: int
        """
        return self._current_offset

    @current_offset.setter
    def current_offset(self, current_offset):
        """Sets the current_offset of this Metadata.

        The zero-ary offset into the results (0 is the first result)

        :param current_offset: The current_offset of this Metadata.
        :type current_offset: int
        """

        self._current_offset = current_offset

    @property
    def total_count(self):
        """Gets the total_count of this Metadata.

        The total number of results across pages

        :return: The total_count of this Metadata.
        :rtype: int
        """
        return self._total_count

    @total_count.setter
    def total_count(self, total_count):
        """Sets the total_count of this Metadata.

        The total number of results across pages

        :param total_count: The total_count of this Metadata.
        :type total_count: int
        """

        self._total_count = total_count
