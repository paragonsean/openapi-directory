# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Citation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authors: str=None, _date: str=None, doi: str=None, raw: str=None, title: str=None):
        """Citation - a model defined in OpenAPI

        :param authors: The authors of this Citation.
        :param _date: The _date of this Citation.
        :param doi: The doi of this Citation.
        :param raw: The raw of this Citation.
        :param title: The title of this Citation.
        """
        self.openapi_types = {
            'authors': str,
            '_date': str,
            'doi': str,
            'raw': str,
            'title': str
        }

        self.attribute_map = {
            'authors': 'authors',
            '_date': 'date',
            'doi': 'doi',
            'raw': 'raw',
            'title': 'title'
        }

        self._authors = authors
        self.__date = _date
        self._doi = doi
        self._raw = raw
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Citation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Citation of this Citation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authors(self):
        """Gets the authors of this Citation.

        Authors of the article

        :return: The authors of this Citation.
        :rtype: str
        """
        return self._authors

    @authors.setter
    def authors(self, authors):
        """Sets the authors of this Citation.

        Authors of the article

        :param authors: The authors of this Citation.
        :type authors: str
        """

        self._authors = authors

    @property
    def _date(self):
        """Gets the _date of this Citation.

        Date the cited article was published

        :return: The _date of this Citation.
        :rtype: str
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this Citation.

        Date the cited article was published

        :param _date: The _date of this Citation.
        :type _date: str
        """

        self.__date = _date

    @property
    def doi(self):
        """Gets the doi of this Citation.

        Digital Object Identifier

        :return: The doi of this Citation.
        :rtype: str
        """
        return self._doi

    @doi.setter
    def doi(self, doi):
        """Sets the doi of this Citation.

        Digital Object Identifier

        :param doi: The doi of this Citation.
        :type doi: str
        """

        self._doi = doi

    @property
    def raw(self):
        """Gets the raw of this Citation.

        Citation as raw string

        :return: The raw of this Citation.
        :rtype: str
        """
        return self._raw

    @raw.setter
    def raw(self, raw):
        """Sets the raw of this Citation.

        Citation as raw string

        :param raw: The raw of this Citation.
        :type raw: str
        """

        self._raw = raw

    @property
    def title(self):
        """Gets the title of this Citation.

        Title of the cited article

        :return: The title of this Citation.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Citation.

        Title of the cited article

        :param title: The title of this Citation.
        :type title: str
        """

        self._title = title
