# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.repository_location import RepositoryLocation
from openapi_server.models.repository_stats import RepositoryStats
from openapi_server import util


class Repository(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, data_provider_source_stats: List[object]=None, history: List[object]=None, history_cumulative: List[object]=None, id: int=None, last_seen: datetime=None, name: str=None, open_doar_id: int=None, repository_location: RepositoryLocation=None, repository_stats: RepositoryStats=None, uri: str=None, url_homepage: str=None, url_oaipmh: str=None):
        """Repository - a model defined in OpenAPI

        :param data_provider_source_stats: The data_provider_source_stats of this Repository.
        :param history: The history of this Repository.
        :param history_cumulative: The history_cumulative of this Repository.
        :param id: The id of this Repository.
        :param last_seen: The last_seen of this Repository.
        :param name: The name of this Repository.
        :param open_doar_id: The open_doar_id of this Repository.
        :param repository_location: The repository_location of this Repository.
        :param repository_stats: The repository_stats of this Repository.
        :param uri: The uri of this Repository.
        :param url_homepage: The url_homepage of this Repository.
        :param url_oaipmh: The url_oaipmh of this Repository.
        """
        self.openapi_types = {
            'data_provider_source_stats': List[object],
            'history': List[object],
            'history_cumulative': List[object],
            'id': int,
            'last_seen': datetime,
            'name': str,
            'open_doar_id': int,
            'repository_location': RepositoryLocation,
            'repository_stats': RepositoryStats,
            'uri': str,
            'url_homepage': str,
            'url_oaipmh': str
        }

        self.attribute_map = {
            'data_provider_source_stats': 'dataProviderSourceStats',
            'history': 'history',
            'history_cumulative': 'historyCumulative',
            'id': 'id',
            'last_seen': 'lastSeen',
            'name': 'name',
            'open_doar_id': 'openDoarId',
            'repository_location': 'repositoryLocation',
            'repository_stats': 'repositoryStats',
            'uri': 'uri',
            'url_homepage': 'urlHomepage',
            'url_oaipmh': 'urlOaipmh'
        }

        self._data_provider_source_stats = data_provider_source_stats
        self._history = history
        self._history_cumulative = history_cumulative
        self._id = id
        self._last_seen = last_seen
        self._name = name
        self._open_doar_id = open_doar_id
        self._repository_location = repository_location
        self._repository_stats = repository_stats
        self._uri = uri
        self._url_homepage = url_homepage
        self._url_oaipmh = url_oaipmh

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Repository':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Repository of this Repository.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def data_provider_source_stats(self):
        """Gets the data_provider_source_stats of this Repository.

        Statistics based on the Data Provider/repository rather than data processed and filtered by CORE. This array is in beta and may change in the future

        :return: The data_provider_source_stats of this Repository.
        :rtype: List[object]
        """
        return self._data_provider_source_stats

    @data_provider_source_stats.setter
    def data_provider_source_stats(self, data_provider_source_stats):
        """Sets the data_provider_source_stats of this Repository.

        Statistics based on the Data Provider/repository rather than data processed and filtered by CORE. This array is in beta and may change in the future

        :param data_provider_source_stats: The data_provider_source_stats of this Repository.
        :type data_provider_source_stats: List[object]
        """

        self._data_provider_source_stats = data_provider_source_stats

    @property
    def history(self):
        """Gets the history of this Repository.

        The number of deposits in the repository per date. This field is in beta and may change in the future

        :return: The history of this Repository.
        :rtype: List[object]
        """
        return self._history

    @history.setter
    def history(self, history):
        """Sets the history of this Repository.

        The number of deposits in the repository per date. This field is in beta and may change in the future

        :param history: The history of this Repository.
        :type history: List[object]
        """

        self._history = history

    @property
    def history_cumulative(self):
        """Gets the history_cumulative of this Repository.

        The number of deposits in the repository per date over time (cumulative). This field is in beta and may change in the future

        :return: The history_cumulative of this Repository.
        :rtype: List[object]
        """
        return self._history_cumulative

    @history_cumulative.setter
    def history_cumulative(self, history_cumulative):
        """Sets the history_cumulative of this Repository.

        The number of deposits in the repository per date over time (cumulative). This field is in beta and may change in the future

        :param history_cumulative: The history_cumulative of this Repository.
        :type history_cumulative: List[object]
        """

        self._history_cumulative = history_cumulative

    @property
    def id(self):
        """Gets the id of this Repository.

        CORE repository ID

        :return: The id of this Repository.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Repository.

        CORE repository ID

        :param id: The id of this Repository.
        :type id: int
        """

        self._id = id

    @property
    def last_seen(self):
        """Gets the last_seen of this Repository.

        The time the repository was last harvested by CORE. This field is in beta and may change in the future

        :return: The last_seen of this Repository.
        :rtype: datetime
        """
        return self._last_seen

    @last_seen.setter
    def last_seen(self, last_seen):
        """Sets the last_seen of this Repository.

        The time the repository was last harvested by CORE. This field is in beta and may change in the future

        :param last_seen: The last_seen of this Repository.
        :type last_seen: datetime
        """

        self._last_seen = last_seen

    @property
    def name(self):
        """Gets the name of this Repository.

        Repository name

        :return: The name of this Repository.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Repository.

        Repository name

        :param name: The name of this Repository.
        :type name: str
        """

        self._name = name

    @property
    def open_doar_id(self):
        """Gets the open_doar_id of this Repository.

        ID of the repository in Open DOAR

        :return: The open_doar_id of this Repository.
        :rtype: int
        """
        return self._open_doar_id

    @open_doar_id.setter
    def open_doar_id(self, open_doar_id):
        """Sets the open_doar_id of this Repository.

        ID of the repository in Open DOAR

        :param open_doar_id: The open_doar_id of this Repository.
        :type open_doar_id: int
        """

        self._open_doar_id = open_doar_id

    @property
    def repository_location(self):
        """Gets the repository_location of this Repository.


        :return: The repository_location of this Repository.
        :rtype: RepositoryLocation
        """
        return self._repository_location

    @repository_location.setter
    def repository_location(self, repository_location):
        """Sets the repository_location of this Repository.


        :param repository_location: The repository_location of this Repository.
        :type repository_location: RepositoryLocation
        """

        self._repository_location = repository_location

    @property
    def repository_stats(self):
        """Gets the repository_stats of this Repository.


        :return: The repository_stats of this Repository.
        :rtype: RepositoryStats
        """
        return self._repository_stats

    @repository_stats.setter
    def repository_stats(self, repository_stats):
        """Sets the repository_stats of this Repository.


        :param repository_stats: The repository_stats of this Repository.
        :type repository_stats: RepositoryStats
        """

        self._repository_stats = repository_stats

    @property
    def uri(self):
        """Gets the uri of this Repository.

        Repository URI

        :return: The uri of this Repository.
        :rtype: str
        """
        return self._uri

    @uri.setter
    def uri(self, uri):
        """Sets the uri of this Repository.

        Repository URI

        :param uri: The uri of this Repository.
        :type uri: str
        """

        self._uri = uri

    @property
    def url_homepage(self):
        """Gets the url_homepage of this Repository.

        Repository homepage

        :return: The url_homepage of this Repository.
        :rtype: str
        """
        return self._url_homepage

    @url_homepage.setter
    def url_homepage(self, url_homepage):
        """Sets the url_homepage of this Repository.

        Repository homepage

        :param url_homepage: The url_homepage of this Repository.
        :type url_homepage: str
        """

        self._url_homepage = url_homepage

    @property
    def url_oaipmh(self):
        """Gets the url_oaipmh of this Repository.

        Repository OAI-PMH endpoint

        :return: The url_oaipmh of this Repository.
        :rtype: str
        """
        return self._url_oaipmh

    @url_oaipmh.setter
    def url_oaipmh(self, url_oaipmh):
        """Sets the url_oaipmh of this Repository.

        Repository OAI-PMH endpoint

        :param url_oaipmh: The url_oaipmh of this Repository.
        :type url_oaipmh: str
        """

        self._url_oaipmh = url_oaipmh
