/**
 * Nookipedia
 * The Nookipedia API provides endpoints for retrieving *Animal Crossing* data pulled from the [Nookipedia wiki](https://nookipedia.com/wiki/Main_Page). A couple of the key benefits of using the Nookipedia API is access to data spanning the entire *Animal Crossing* series, as well as information that is constantly updated and expanding as editors work on the wiki.<br><br>Access to the Nookipedia API requires obtaining a key. This is so we can manage our scale and provide better support for our users. To request access to the API, please fill out [this form](https://forms.gle/wLwtXLerKhfDrRLY8).
 *
 * The version of the OpenAPI document: 1.6.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINHArtwork_fake_info.h
 *
 * Information about the fake version of the artwork. If there is no fake, &#x60;fake_info&#x60;&#39;s value will be &#x60;null&#x60;.
 */

#ifndef OAINHArtwork_fake_info_H
#define OAINHArtwork_fake_info_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINHArtwork_fake_info : public OAIObject {
public:
    OAINHArtwork_fake_info();
    OAINHArtwork_fake_info(QString json);
    ~OAINHArtwork_fake_info() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getImageUrl() const;
    void setImageUrl(const QString &image_url);
    bool is_image_url_Set() const;
    bool is_image_url_Valid() const;

    QString getTextureUrl() const;
    void setTextureUrl(const QString &texture_url);
    bool is_texture_url_Set() const;
    bool is_texture_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_image_url;
    bool m_image_url_isSet;
    bool m_image_url_isValid;

    QString m_texture_url;
    bool m_texture_url_isSet;
    bool m_texture_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINHArtwork_fake_info)

#endif // OAINHArtwork_fake_info_H
