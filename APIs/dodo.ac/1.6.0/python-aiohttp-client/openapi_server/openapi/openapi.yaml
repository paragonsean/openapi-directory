openapi: 3.0.0
info:
  description: "The Nookipedia API provides endpoints for retrieving *Animal Crossing*\
    \ data pulled from the [Nookipedia wiki](https://nookipedia.com/wiki/Main_Page).\
    \ A couple of the key benefits of using the Nookipedia API is access to data spanning\
    \ the entire *Animal Crossing* series, as well as information that is constantly\
    \ updated and expanding as editors work on the wiki.<br><br>Access to the Nookipedia\
    \ API requires obtaining a key. This is so we can manage our scale and provide\
    \ better support for our users. To request access to the API, please fill out\
    \ [this form](https://forms.gle/wLwtXLerKhfDrRLY8)."
  title: Nookipedia
  version: 1.6.0
  x-origin:
  - format: openapi
    url: https://api.nookipedia.com/static/doc.yaml
    version: "3.0"
  x-providerName: dodo.ac
servers:
- url: https://api.nookipedia.com/
paths:
  /nh/art:
    get:
      description: "Get a list of all artwork and their details in *Animal Crossing:\
        \ New Horizons*."
      operationId: nh_art_get
      parameters:
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "When set to `true`, only artwork that has a fake will be returned.\
          \ When set to `false`, only artwork without fakes will be returned."
        explode: true
        in: query
        name: hasfake
        required: false
        schema:
          type: string
        style: form
      - description: "When set to `true`, only artwork names are returned. Instead\
          \ of an array of objects with all details, the return will be an array of\
          \ strings."
        explode: true
        in: query
        name: excludedetails
        required: false
        schema:
          type: string
        style: form
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL. Note\
          \ that requesting specific image sizes for long lists may result in a very\
          \ long response time."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NHArtwork'
                type: array
          description: A JSON array of artwork.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: All New Horizons artwork
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/art/{artwork}:
    get:
      description: "Retrieve information about a specific artwork in *Animal Crossing:\
        \ New Horizons*."
      operationId: nh_art_artwork_get
      parameters:
      - description: The name of the artwork you wish to retrieve information about.
        explode: false
        in: path
        name: artwork
        required: true
        schema:
          type: string
        style: simple
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NHArtwork'
          description: A JSON object describing the artwork.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: Single New Horizons artwork
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/bugs:
    get:
      description: "Get a list of all bugs and their details in *Animal Crossing:\
        \ New Horizons*."
      operationId: nh_bugs_get
      parameters:
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Retrive only the bug that are available in a specific month.\
          \ Value may be the month's name (`jan`, `january`), the integer representing\
          \ the month (`01`, `1`), or `current` for the current month. When `current`\
          \ is specified, the return body will be an object with two arrays inside,\
          \ one called `north` and the other `south` containing the bug available\
          \ in each respective hemisphere. Note that the current month is calculated\
          \ based off the API server's time, so it may be slightly off for you at\
          \ the beginning or end of the month."
        explode: true
        in: query
        name: month
        required: false
        schema:
          type: string
        style: form
      - description: "When set to `true`, only bug names are returned. Instead of\
          \ an array of objects with all details, the return will be an array of strings.\
          \ This is particularly useful when used with the `month` filter, for users\
          \ who want just a list of bugs in a given month but not all their respective\
          \ details."
        explode: true
        in: query
        name: excludedetails
        required: false
        schema:
          type: string
        style: form
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL. Note\
          \ that requesting specific image sizes for long lists may result in a very\
          \ long response time."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NHBug'
                type: array
          description: A JSON array of bugs.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: All New Horizons bugs
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/bugs/{bug}:
    get:
      description: "Retrieve information about a specific bug in *Animal Crossing:\
        \ New Horizons*."
      operationId: nh_bugs_bug_get
      parameters:
      - description: The name of the bug you wish to retrieve information about.
        explode: false
        in: path
        name: bug
        required: true
        schema:
          type: string
        style: simple
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NHBug'
          description: A JSON object describing the bug.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Could not find the specified bug.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: Single New Horizons bug
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/clothing:
    get:
      description: "Get a list of all clothing items and their details in *Animal\
        \ Crossing: New Horizons*."
      operationId: nh_clothing_get
      parameters:
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: Specify the category of clothing to return.
        explode: true
        in: query
        name: category
        required: false
        schema:
          enum:
          - Tops
          - Bottoms
          - Dress-up
          - Headwear
          - Accessories
          - Socks
          - Shoes
          - Bags
          - Umbrellas
          type: string
        style: form
      - description: Return clothing that matches the provided colors (may specify
          one or two colors). Colors are used for gifting villagers.
        explode: true
        in: query
        name: color
        required: false
        schema:
          items:
            enum:
            - Aqua
            - Beige
            - Black
            - Blue
            - Brown
            - Colorful
            - Gray
            - Green
            - Orange
            - Pink
            - Purple
            - Red
            - White
            - Yellow
            type: string
          type: array
        style: form
      - description: Return clothing that matches the provided styles (may specify
          one or two styles). Styles are used for gifting villagers.
        explode: true
        in: query
        name: style
        required: false
        schema:
          items:
            enum:
            - Active
            - Cool
            - Cute
            - Elegant
            - Gorgeous
            - Simple
            type: string
          type: array
        style: form
      - description: "Return clothing that have the specified Label theme. This is\
          \ used for completing the requested outfit theme for [Label](https://nookipedia.com/wiki/Label)\
          \ when she visits the player's island."
        explode: true
        in: query
        name: labeltheme
        required: false
        schema:
          enum:
          - Comfy
          - Everyday
          - Fairy tale
          - Formal
          - Goth
          - Outdoorsy
          - Party
          - Sporty
          - Theatrical
          - Vacation
          - Work
          type: string
        style: form
      - description: "When set to `true`, only clothing names are returned. Instead\
          \ of an array of objects with all details, the return will be an array of\
          \ strings."
        explode: true
        in: query
        name: excludedetails
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NHClothing'
                type: array
          description: A JSON array of clothing.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: All New Horizons clothing
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/clothing/{clothing}:
    get:
      description: "Retrieve information about a specific clothing item in *Animal\
        \ Crossing: New Horizons*."
      operationId: nh_clothing_clothing_get
      parameters:
      - description: The name of the clothing you wish to retrieve information about.
        explode: false
        in: path
        name: clothing
        required: true
        schema:
          type: string
        style: simple
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NHClothing'
          description: A JSON object describing the clothing.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: Single New Horizons clothing
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/events:
    get:
      description: "Get a list of events and dates in *Animal Crossing: New Horizons*,\
        \ filterable to specific years, months, or days. Data is available for the\
        \ current and next year."
      operationId: nh_events_get
      parameters:
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Specify a specific date (in the current or next year) to retrieve\
          \ events for. Accepts many date formats, such as `YYYY-MM-DD` or `Month\
          \ Day, Year`, as well as `today` to retrieve the current day's events (UTC\
          \ time)."
        explode: true
        in: query
        name: date
        required: false
        schema:
          type: string
        style: form
      - description: Specify the year to retrieve events for. Must be the current
          or next year.
        explode: true
        in: query
        name: year
        required: false
        schema:
          type: string
        style: form
      - description: "Specify the month to retrieve events for (accepts multiple formats,\
          \ such as `Oct`, `October`, or `10`). Most likely want to use alongside\
          \ `year`, otherwise events in both the current and next year are returned."
        explode: true
        in: query
        name: month
        required: false
        schema:
          type: string
        style: form
      - description: Specify the day of the month to retrieve events for.
        explode: true
        in: query
        name: day
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NHEvent'
                type: array
          description: A JSON array of events.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: All New Horizons events
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/fish:
    get:
      description: Get a list of all fish and their details in *New Horizons*.
      operationId: nh_fish_get
      parameters:
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Retrive only the fish that are available in a specific month.\
          \ Value may be the month's name (`jan`, `january`), the integer representing\
          \ the month (`01`, `1`), or `current` for the current month. When `current`\
          \ is specified, the return body will be an object with two arrays inside,\
          \ one called `north` and the other `south` containing the fish available\
          \ in each respective hemisphere. Note that the current month is calculated\
          \ based off the API server's time, so it may be slightly off for you at\
          \ the beginning or end of the month."
        explode: true
        in: query
        name: month
        required: false
        schema:
          type: string
        style: form
      - description: "When set to `true`, only fish names are returned. Instead of\
          \ an array of objects with all details, the return will be an array of strings.\
          \ This is particularly useful when used with the `month` filter, for users\
          \ who want just a list of fish in a given month but not all their respective\
          \ details."
        explode: true
        in: query
        name: excludedetails
        required: false
        schema:
          type: string
        style: form
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL. Note\
          \ that requesting specific image sizes for long lists may result in a very\
          \ long response time."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NHFish'
                type: array
          description: A JSON array of fish.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: All New Horizons fish
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/fish/{fish}:
    get:
      description: "Retrieve information about a specific fish in *Animal Crossing:\
        \ New Horizons*."
      operationId: nh_fish_fish_get
      parameters:
      - description: The name of the fish you wish to retrieve information about.
        explode: false
        in: path
        name: fish
        required: true
        schema:
          type: string
        style: simple
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NHFish'
          description: A JSON object describing the fish.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Could not find the specified fish.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: Single New Horizons fish
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/fossils/all:
    get:
      description: "Get a list of all the fossil groups with their respective individual\
        \ fossils in *Animal Crossing: New Horizons*."
      operationId: nh_fossils_all_get
      parameters:
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NHFossilGroupWithIndividualFossilsNoMatched'
                type: array
          description: A JSON array of fossil groups.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: All New Horizons fossil groups or individual fossil
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/fossils/all/{fossil}:
    get:
      description: "Retrieve information about a specific fossil group with their\
        \ respective individual fossils in *Animal Crossing: New Horizons*."
      operationId: nh_fossils_all_fossil_get
      parameters:
      - description: "The name of the fossil OR fossil group you wish to retrieve\
          \ information about. If a fossil is provided, a fossil group that the specified\
          \ fossil belongs to will be returned."
        explode: false
        in: path
        name: fossil
        required: true
        schema:
          type: string
        style: simple
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NHFossilGroupWithIndividualFossils'
          description: A JSON object describing the fossil group.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: Single New Horizons fossil group with individual fossils
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/fossils/groups:
    get:
      description: "Get a list of all the fossil groups in *Animal Crossing: New Horizons*."
      operationId: nh_fossils_groups_get
      parameters:
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NHFossilGroup'
                type: array
          description: A JSON array of fossil groups.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: All New Horizons fossil groups
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/fossils/groups/{fossil_group}:
    get:
      description: "Retrieve information about a specific fossil group in *Animal\
        \ Crossing: New Horizons*."
      operationId: nh_fossils_groups_fossil_group_get
      parameters:
      - description: The name of the fossil group you wish to retrieve information
          about.
        explode: false
        in: path
        name: fossil_group
        required: true
        schema:
          type: string
        style: simple
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NHFossilGroup'
          description: A JSON object describing the fossil group.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: Single New Horizons fossil group
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/fossils/individuals:
    get:
      description: "Get a list of all the individual fossils in *Animal Crossing:\
        \ New Horizons*."
      operationId: nh_fossils_individuals_get
      parameters:
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NHIndividualFossil'
                type: array
          description: A JSON array of individual fossils.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: All New Horizons fossils
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/fossils/individuals/{fossil}:
    get:
      description: "Retrieve information about a specific individual fossil in *Animal\
        \ Crossing: New Horizons*."
      operationId: nh_fossils_individuals_fossil_get
      parameters:
      - description: The name of the individual fossil you wish to retrieve fossil
          information about.
        explode: false
        in: path
        name: fossil
        required: true
        schema:
          type: string
        style: simple
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NHIndividualFossil'
          description: A JSON object describing the individual fossil.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: Single New Horizons fossil
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/furniture:
    get:
      description: "Get a list of all furniture and their details in *Animal Crossing:\
        \ New Horizons*."
      operationId: nh_furniture_get
      parameters:
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Specify the category of furniture to return (houswares, miscellaneous,\
          \ or wall-mounted)."
        explode: true
        in: query
        name: category
        required: false
        schema:
          enum:
          - Housewares
          - Miscellaneous
          - Wall-mounted
          type: string
        style: form
      - description: Return furniture that matches the provided colors (may specify
          one or two colors).
        explode: true
        in: query
        name: color
        required: false
        schema:
          items:
            enum:
            - Aqua
            - Beige
            - Black
            - Blue
            - Brown
            - Colorful
            - Gray
            - Green
            - Orange
            - Pink
            - Purple
            - Red
            - White
            - Yellow
            type: string
          type: array
        style: form
      - description: "When set to `true`, only furniture names are returned. Instead\
          \ of an array of objects with all details, the return will be an array of\
          \ strings."
        explode: true
        in: query
        name: excludedetails
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NHFurniture'
                type: array
          description: A JSON array of furniture.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: All New Horizons furniture
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/furniture/{furniture}:
    get:
      description: "Retrieve information about a specific furniture in *Animal Crossing:\
        \ New Horizons*."
      operationId: nh_furniture_furniture_get
      parameters:
      - description: The name of the furniture you wish to retrieve information about.
        explode: false
        in: path
        name: furniture
        required: true
        schema:
          type: string
        style: simple
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NHFurniture'
          description: A JSON object describing the furniture.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: Single New Horizons furniture
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/interior:
    get:
      description: "Get a list of all interior items (flooring, wallpaper, and rugs)\
        \ and their details in *Animal Crossing: New Horizons*."
      operationId: nh_interior_get
      parameters:
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: Return furniture that matches the provided colors (may specify
          one or two colors).
        explode: true
        in: query
        name: color
        required: false
        schema:
          items:
            enum:
            - Aqua
            - Beige
            - Black
            - Blue
            - Brown
            - Colorful
            - Gray
            - Green
            - Orange
            - Pink
            - Purple
            - Red
            - White
            - Yellow
            type: string
          type: array
        style: form
      - description: "When set to `true`, only interior item names are returned. Instead\
          \ of an array of objects with all details, the return will be an array of\
          \ strings."
        explode: true
        in: query
        name: excludedetails
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NHInterior'
                type: array
          description: A JSON array of interior items.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: All New Horizons interior items
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/interior/{item}:
    get:
      description: "Retrieve information about a specific interior item in *Animal\
        \ Crossing: New Horizons*."
      operationId: nh_interior_item_get
      parameters:
      - description: The name of the interior item you wish to retrieve information
          about.
        explode: false
        in: path
        name: item
        required: true
        schema:
          type: string
        style: simple
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: Return furniture that matches the provided colors (may specify
          one or two colors).
        explode: true
        in: query
        name: color
        required: false
        schema:
          items:
            enum:
            - Aqua
            - Beige
            - Black
            - Blue
            - Brown
            - Colorful
            - Gray
            - Green
            - Orange
            - Pink
            - Purple
            - Red
            - White
            - Yellow
            type: string
          type: array
        style: form
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NHInterior'
          description: A JSON object describing the interior item.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: Single New Horizons interior item
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/items:
    get:
      description: "Get a list of all miscellaneous items (such as materials, star\
        \ fragments, fruits, fences, and plants) and their details in *Animal Crossing:\
        \ New Horizons*."
      operationId: nh_items_get
      parameters:
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "When set to `true`, only item names are returned. Instead of\
          \ an array of objects with all details, the return will be an array of strings."
        explode: true
        in: query
        name: excludedetails
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NHItem'
                type: array
          description: A JSON array of items.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: Miscellaneous New Horizons items
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/items/{item}:
    get:
      description: "Retrieve information about a miscellaneous item (such as materials,\
        \ star fragments, fruits, fences, and plants) in *Animal Crossing: New Horizons*."
      operationId: nh_items_item_get
      parameters:
      - description: The name of the interior item you wish to retrieve information
          about.
        explode: false
        in: path
        name: item
        required: true
        schema:
          type: string
        style: simple
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NHItem'
          description: A JSON object describing the item.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: Single New Horizons miscellaneous item
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/photos:
    get:
      description: "Get a list of all character photos+posters and their details in\
        \ *Animal Crossing: New Horizons*."
      operationId: nh_photos_get
      parameters:
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "When set to `true`, only item names are returned. Instead of\
          \ an array of objects with all details, the return will be an array of strings."
        explode: true
        in: query
        name: excludedetails
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NHPhoto'
                type: array
          description: A JSON array of photos and posters.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: All New Horizons photos and posters
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/photos/{item}:
    get:
      description: "Retrieve information about a character photo or poster in *Animal\
        \ Crossing: New Horizons*."
      operationId: nh_photos_item_get
      parameters:
      - description: The name of the photo or poster you wish to retrieve information
          about.
        explode: false
        in: path
        name: item
        required: true
        schema:
          type: string
        style: simple
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NHPhoto'
          description: A JSON object describing the photo or poster.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: Single New Horizons photo or poster
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/recipes:
    get:
      description: "Get a list of all recipes and their details in *Animal Crossing:\
        \ New Horizons*."
      operationId: nh_recipes_get
      parameters:
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: Specify a material to only get recipes that use that material.
          You can specify `material` up to six times (no recipe uses more than six
          materials).
        explode: true
        in: query
        name: material
        required: false
        schema:
          type: string
        style: form
      - description: "When set to `true`, only recipe names are returned. Instead\
          \ of an array of objects with all details, the return will be an array of\
          \ strings."
        explode: true
        in: query
        name: excludedetails
        required: false
        schema:
          type: string
        style: form
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL. Note\
          \ that requesting specific image sizes for long lists may result in a very\
          \ long response time."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NHRecipe'
                type: array
          description: A JSON array of recipes.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: All New Horizons recipes
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/recipes/{item}:
    get:
      description: "Retrieve information about a specific recipe in *Animal Crossing:\
        \ New Horizons*."
      operationId: nh_recipes_item_get
      parameters:
      - description: The name of the item you wish to retrieve recipe information
          about.
        explode: false
        in: path
        name: item
        required: true
        schema:
          type: string
        style: simple
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NHRecipe'
          description: A JSON object describing the recipe.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: Single New Horizons recipe
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/sea:
    get:
      description: "Get a list of all sea creatures and their details in *Animal Crossing:\
        \ New Horizons*."
      operationId: nh_sea_get
      parameters:
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Retrive only the sea creature that are available in a specific\
          \ month. Value may be the month's name (`jan`, `january`), the integer representing\
          \ the month (`01`, `1`), or `current` for the current month. When `current`\
          \ is specified, the return body will be an object with two arrays inside,\
          \ one called `north` and the other `south` containing the sea creature available\
          \ in each respective hemisphere. Note that the current month is calculated\
          \ based off the API server's time, so it may be slightly off for you at\
          \ the beginning or end of the month."
        explode: true
        in: query
        name: month
        required: false
        schema:
          type: string
        style: form
      - description: "When set to `true`, only sea creature names are returned. Instead\
          \ of an array of objects with all details, the return will be an array of\
          \ strings. This is particularly useful when used with the `month` filter,\
          \ for users who want just a list of sea creatures in a given month but not\
          \ all their respective details."
        explode: true
        in: query
        name: excludedetails
        required: false
        schema:
          type: string
        style: form
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL. Note\
          \ that requesting specific image sizes for long lists may result in a very\
          \ long response time."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NHSeaCreature'
                type: array
          description: A JSON array of sea creatures.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: All New Horizons sea creatures
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/sea/{sea_creature}:
    get:
      description: "Retrieve information about a specific sea creature in *Animal\
        \ Crossing: New Horizons*."
      operationId: nh_sea_sea_creature_get
      parameters:
      - description: The name of the sea creature you wish to retrieve information
          about.
        explode: false
        in: path
        name: sea_creature
        required: true
        schema:
          type: string
        style: simple
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NHSeaCreature'
          description: A JSON object describing the sea creature.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error404'
          description: Could not find the specified sea creature.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: Single New Horizons sea creature
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/tools:
    get:
      description: "Get a list of all tools and their details in *Animal Crossing:\
        \ New Horizons*."
      operationId: nh_tools_get
      parameters:
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "When set to `true`, only tool names are returned. Instead of\
          \ an array of objects with all details, the return will be an array of strings."
        explode: true
        in: query
        name: excludedetails
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/NHTool'
                type: array
          description: A JSON array of interior items.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: All New Horizons tools
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /nh/tools/{tool}:
    get:
      description: "Retrieve information about a specific tool in *Animal Crossing:\
        \ New Horizons*."
      operationId: nh_tools_tool_get
      parameters:
      - description: The name of the interior item you wish to retrieve information
          about.
        explode: false
        in: path
        name: tool
        required: true
        schema:
          type: string
        style: simple
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NHTool'
          description: A JSON object describing the tool.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: Single New Horizons tool
      x-openapi-router-controller: openapi_server.controllers.default_controller
  /villagers:
    get:
      description: "This endpoint retrieves villager information from the entire *Animal\
        \ Crossing* series, with the option to filter by species, personality, game,\
        \ and/or birthday. Filters use the AND operator (e.g. asking for villagers\
        \ who have species `frog` and personality `smug` will return all smug frogs).\
        \ Note that villagers only include the animals that act as residents. Special\
        \ characters, such as Tom Nook and Isabelle, are not accessed through this\
        \ endpoint."
      operationId: villagers_get
      parameters:
      - description: "Your UUID secret key, granted to you by the Nookipedia team.\
          \ Required for accessing the API."
        explode: false
        in: header
        name: X-API-KEY
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      - description: "The version of the API you are calling, written as `1.0.0`.\
          \ This is specified as required as good practice, but it is not actually\
          \ enforced by the API. If you do not specify a version, you will be served\
          \ the latest version, which may eventually result in breaking changes."
        explode: false
        in: header
        name: Accept-Version
        required: true
        schema:
          type: string
        style: simple
      - description: "Villager name. For most names you will get back an array with\
          \ one object, but note that names are not a unique identifier across the\
          \ series, as there are 3 names that are shared by multiple villagers (Lulu,\
          \ Petunia, Carmen). For those 3 names you will get back an array with 2\
          \ objects. How you disambiguate between these villagers is up to you."
        explode: true
        in: query
        name: name
        required: false
        schema:
          type: string
        style: form
      - description: Retrieve villagers of a certain species.
        explode: true
        in: query
        name: species
        required: false
        schema:
          enum:
          - alligator
          - anteater
          - bear
          - bear cub
          - bird
          - bull
          - cat
          - cub
          - chicken
          - cow
          - deer
          - dog
          - duck
          - eagle
          - elephant
          - frog
          - goat
          - gorilla
          - hamster
          - hippo
          - horse
          - koala
          - kangaroo
          - lion
          - monkey
          - mouse
          - octopus
          - ostrich
          - penguin
          - pig
          - rabbit
          - rhino
          - rhinoceros
          - sheep
          - squirrel
          - tiger
          - wolf
          type: string
        style: form
      - description: "Retrieve villagers with a certain personality. For 'sisterly',\
          \ note that the community often also calls it 'uchi' or 'big sister'."
        explode: true
        in: query
        name: personality
        required: false
        schema:
          enum:
          - big sister
          - cranky
          - jock
          - lazy
          - normal
          - peppy
          - sisterly
          - smug
          - snooty
          type: string
        style: form
      - description: "Retrieve villagers that appear in all listed games. For example,\
          \ if you want only villagers that appear in both *New Horizons* and *Pocket\
          \ Camp*, you would send in `?game=nh&game=pc`."
        explode: true
        in: query
        name: game
        required: false
        schema:
          items:
            enum:
            - DNM
            - AC
            - E_PLUS
            - WW
            - CF
            - NL
            - WA
            - NH
            - FILM
            - HHD
            - PC
            type: string
          type: array
        style: form
      - description: "Retrieve villagers born in a specific month. Value may be the\
          \ month's name (`jan`, `january`) or the integer representing the month\
          \ (`01`, `1`)."
        explode: true
        in: query
        name: birthmonth
        required: false
        schema:
          type: string
        style: form
      - description: "Use with `birthmonth` to get villager(s) born on a specific\
          \ day. Value should be an int, 1 through 31."
        explode: true
        in: query
        name: birthday
        required: false
        schema:
          type: string
        style: form
      - description: "When set to `true`, an `nh_details` object will be included\
          \ that contains *New Horizons* details about the villager. If the villager\
          \ does not appear in *New Horizons*, the returned `nh_details` field will\
          \ be set to null."
        explode: true
        in: query
        name: nhdetails
        required: false
        schema:
          type: string
        style: form
      - description: "When set to `true`, only villager names are returned. Instead\
          \ of an array of objects with all details, the return will be an array of\
          \ strings."
        explode: true
        in: query
        name: excludedetails
        required: false
        schema:
          type: string
        style: form
      - description: "Specify the desired width of returned image URLs. When unspecified,\
          \ the linked image(s) returned by the API will be full-resolution. Note\
          \ that images can only be reduced in size; specifying a width greater than\
          \ than the maximum size will return the default full-size image URL. Note\
          \ that requesting specific image sizes for long lists may result in a very\
          \ long response time."
        explode: true
        in: query
        name: thumbsize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Villager'
                type: array
          description: A JSON array of villagers.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error400'
          description: One of the inputs (usually query parameters) has an invalid
            value.
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error401'
          description: Failed to authenticate user from `X-API-KEY`.
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error500'
          description: There was an error fetching the requested data.
      summary: Villagers
      x-openapi-router-controller: openapi_server.controllers.default_controller
components:
  schemas:
    Error400:
      description: Bad request (often an invalid input).
      example:
        details: Provided month filter jonuary was not recognized as a valid month.
        title: Failed to identify the provided month filter.
      properties:
        details:
          description: "A more in-depth description of the issue, including parameters\
            \ and/or error text when available."
          example: Provided month filter jonuary was not recognized as a valid month.
          title: details
          type: string
        title:
          description: A brief title describing the error.
          example: Failed to identify the provided month filter.
          title: title
          type: string
      title: Error400
      type: object
    Error401:
      description: Unauthorized.
      example:
        details: "UUID is either missing or invalid; or, unspecified server occured."
        title: Failed to validate UUID.
      properties:
        details:
          description: "A more in-depth description of the issue, including parameters\
            \ and/or error text when available."
          example: "UUID is either missing or invalid; or, unspecified server occured."
          title: details
          type: string
        title:
          description: A brief title describing the error.
          example: Failed to validate UUID.
          title: title
          type: string
      title: Error401
      type: object
    Error404:
      description: Not found.
      example:
        details: "MediaWiki Cargo request succeeded by nothing was returned for the\
          \ parameters: {}"
        title: No data was found for the given query.
      properties:
        details:
          description: "A more in-depth description of the issue, including parameters\
            \ and/or error text when available."
          example: "MediaWiki Cargo request succeeded by nothing was returned for\
            \ the parameters: {}"
          title: details
          type: string
        title:
          description: A brief title describing the error.
          example: No data was found for the given query.
          title: title
          type: string
      title: Error404
      type: object
    Error500:
      description: Internal server error.
      example:
        details: Details unknown.
        title: API experienced a fatal error.
      properties:
        details:
          description: "A more in-depth description of the issue, including parameters\
            \ and/or error text when available."
          example: Details unknown.
          title: details
          type: string
        title:
          description: A brief title describing the error.
          example: API experienced a fatal error.
          title: title
          type: string
      title: Error500
      type: object
    NHArtwork:
      example:
        has_fake: true
        year: circa 1487
        author: Leonardo da Vinci
        buy: 4980
        sell: 1245
        length: 1
        availability: Jolly Redd's Treasure Trawler
        real_info:
          image_url: https://dodo.ac/np/images/e/e8/Academic_Painting_NH_Icon.png
          description: "This drawing is based on the \"ideal\" human-body ratio, as\
            \ stated in \"De architectura.\" \"De architectura\" was a treatise by\
            \ Vitruvius, an architect from the early 1st century BCE."
          texture_url: https://dodo.ac/np/images/f/f6/Academic_Painting_NH_Texture.png
        art_type: Painting
        fake_info:
          image_url: https://dodo.ac/np/images/4/46/Academic_Painting_%28Fake%29_NH_Icon.png
          description: "In the forgery, there is a coffee stain in the top right corner.\
            \ The forgery also has a key taped to the back of the canvas. If there\
            \ is no stain and key, it is genuine."
          texture_url: https://dodo.ac/np/images/0/03/Academic_Painting_%28Fake%29_NH_Texture.png
        url: https://nookipedia.com/wiki/Academic_Painting
        name: Academic Painting
        width: 1
        art_style: Pen and ink on paper
        art_name: Vitruvian Man
      properties:
        art_name:
          description: The name of the real-life analog to the artwork.
          example: Vitruvian Man
          title: art_name
          type: string
        art_style:
          description: The art style of the artwork.
          example: Pen and ink on paper
          title: art_style
          type: string
        art_type:
          description: The type of artwork (either a painting or statue).
          enum:
          - Painting
          - Statue
          example: Painting
          title: art_type
          type: string
        author:
          description: The author of the real-life analog to the artwork.
          example: Leonardo da Vinci
          title: author
          type: string
        availability:
          description: The availability of the artwork.
          example: Jolly Redd's Treasure Trawler
          title: availability
          type: string
        buy:
          description: The number of Bells the artwork may be purchased for.
          example: 4980
          title: buy
          type: integer
        fake_info:
          $ref: '#/components/schemas/NHArtwork_fake_info'
        has_fake:
          description: Whether the artwork has a fake or not.
          example: true
          title: has_fake
          type: boolean
        length:
          description: The length of the artwork.
          example: 1
          format: float
          title: length
          type: number
        name:
          description: Name of the artwork.
          example: Academic Painting
          title: name
          type: string
        real_info:
          $ref: '#/components/schemas/NHArtwork_real_info'
        sell:
          description: "The number of Bells the artwork can be sold to Nook's store\
            \ for, when it is genuine."
          example: 1245
          title: sell
          type: integer
        url:
          description: Link to the respective Nookipedia article.
          example: https://nookipedia.com/wiki/Academic_Painting
          title: url
          type: string
        width:
          description: The width of the artwork.
          example: 1
          format: float
          title: width
          type: number
        year:
          description: "The year that the real-life analog was made. May be an exact\
            \ year, an estimate (\"circa\"), or a range."
          example: circa 1487
          title: year
          type: string
      title: NHArtwork
      type: object
    NHBug:
      example:
        tank_length: 1
        sell_nook: 160
        south:
          months_array:
          - 1
          - 2
          - 3
          times_by_month:
            "1": 8 AM – 5 PM
            "2": 8 AM – 5 PM
            "3": 8 AM – 5 PM
            "4": NA
            "5": NA
            "6": NA
            "7": NA
            "8": NA
            "9": NA
            "10": NA
            "11": NA
            "12": NA
          months: Jan – Mar
          availability_array:
          - months: Jan – Mar
            time: 8 AM – 5 PM
        catchphrases:
        - I caught a grasshopper! They're a grass act!
        image_url: https://dodo.ac/np/images/3/37/Grasshopper_NH_Icon.png
        north:
          months_array:
          - 7
          - 8
          - 9
          times_by_month:
            "1": NA
            "2": NA
            "3": NA
            "4": NA
            "5": NA
            "6": NA
            "7": 8 AM – 5 PM
            "8": 8 AM – 5 PM
            "9": 8 AM – 5 PM
            "10": NA
            "11": NA
            "12": NA
          months: Jul – Sep
          availability_array:
          - months: Jul – Sep
            time: 8 AM – 5 PM
        total_catch: 0
        url: https://nookipedia.com/wiki/Grasshopper
        number: 19
        render_url: https://dodo.ac/np/images/1/1d/Grasshopper_NH.png
        sell_flick: 240
        name: Grasshopper
        location: On the ground
        tank_width: 1
        rarity: Uncommon
      properties:
        catchphrases:
          description: "An array of possible catchphrases the player says after catching\
            \ the bug. Most critters have just one, but some can have multiple."
          example:
          - I caught a grasshopper! They're a grass act!
          items:
            type: string
          title: catchphrases
          type: array
        image_url:
          description: Image of the bug.
          example: https://dodo.ac/np/images/3/37/Grasshopper_NH_Icon.png
          title: image_url
          type: string
        location:
          description: Short descriptor of where the bug can be found.
          example: On the ground
          title: location
          type: string
        name:
          description: Name of the bug.
          example: Grasshopper
          title: name
          type: string
        north:
          $ref: '#/components/schemas/NHBug_north'
        number:
          description: "In-game bug number, marking position in the Critterpedia."
          example: 19
          title: number
          type: integer
        rarity:
          description: How rare the bug is. Note that this field is currently empty
            for most bugs as we do not yet know how exactly bug rarities are calculated
            in the game code.
          example: Uncommon
          title: rarity
          type: string
        render_url:
          description: Render of the bug.
          example: https://dodo.ac/np/images/1/1d/Grasshopper_NH.png
          title: render_url
          type: string
        sell_flick:
          description: The number of Bells the bug can be sold to Flick for. This
            value is always 1.5x that of `sell_nook`.
          example: 240
          title: sell_flick
          type: integer
        sell_nook:
          description: The number of Bells the bug can be sold to Nook's store for.
          example: 160
          title: sell_nook
          type: integer
        south:
          $ref: '#/components/schemas/NHBug_south'
        tank_length:
          description: The length of the tank when the bug is placed as a furniture
            item.
          example: 1
          format: float
          title: tank_length
          type: number
        tank_width:
          description: The width of the tank when the bug is placed as a furniture
            item.
          example: 1
          format: float
          title: tank_width
          type: number
        total_catch:
          description: The total number of bug the player has to have caught before
            this bug will start spawning.
          example: 0
          title: total_catch
          type: integer
        url:
          description: Link to the respective Nookipedia article.
          example: https://nookipedia.com/wiki/Grasshopper
          title: url
          type: string
      title: NHBug
      type: object
    NHClothing:
      example:
        notes: ""
        buy:
        - currency: Bells
          price: 490
        sell: 122
        vill_equip: true
        availability:
        - from: Able Sisters
          note: ""
        version_added: 1.0.0
        unlocked: true
        url: https://nookipedia.com/wiki/Item:3D_Glasses_(New_Horizons)
        label_themes:
        - Party
        variations:
        - colors:
          - White
          - Colorful
          image_url: https://dodo.ac/np/images/1/15/3D_Glasses_%28White%29_NH_Icon.png
          variation: White
        - colors:
          - Colorful
          - Black
          image_url: https://dodo.ac/np/images/2/28/3D_Glasses_%28Black%29_NH_Icon.png
          variation: Black
        name: 3D Glasses
        styles:
        - Active
        category: Accessories
        seasonality: All year
        variation_total: 2
      properties:
        availability:
          description: "Where the clothing may be obtained from (could be multiple\
            \ sources). `from` is a brief description of the source; `note`, when\
            \ provided, provides additional details."
          example:
          - from: Able Sisters
            note: ""
          items:
            $ref: '#/components/schemas/NHClothing_availability_inner'
          title: availability
          type: array
        buy:
          description: "An array of prices, for when the item may be purchased with\
            \ Bells, Nook Miles, etc.."
          example:
          - currency: Bells
            price: 490
          items:
            $ref: '#/components/schemas/NHClothing_buy_inner'
          title: buy
          type: array
        category:
          description: The category of item as shown in the player's inventory.
          enum:
          - Tops
          - Bottoms
          - Dress-up
          - Headwear
          - Accessories
          - Socks
          - Shoes
          - Bags
          - Umbrellas
          example: Accessories
          title: category
          type: string
        label_themes:
          description: "The clothing's Label theme(s). This is used for completing\
            \ the requested outfit theme for [Label](https://nookipedia.com/wiki/Label)\
            \ when she visits the player's island."
          example:
          - Party
          items:
            enum:
            - Comfy
            - Everyday
            - Fairy tale
            - Formal
            - Goth
            - Outdoorsy
            - Party
            - Sporty
            - Theatrical
            - Vacation
            - Work
            type: string
          title: label_themes
          type: array
        name:
          description: The name of the clothing.
          example: 3D Glasses
          title: name
          type: string
        notes:
          description: "Any additional miscellaneous information about the clothing,\
            \ such as a name change from a past update."
          example: ""
          title: notes
          type: string
        seasonality:
          description: The time of the year that the clothing is available.
          example: All year
          title: seasonality
          type: string
        sell:
          description: The number of Bells the clothing can be sold to the store for.
          example: 122
          title: sell
          type: integer
        styles:
          description: The clothing's style(s). Styles are used for gifting villagers.
          example:
          - Active
          items:
            enum:
            - Active
            - Cool
            - Cute
            - Elegant
            - Gorgeous
            - Simple
            type: string
          title: styles
          type: array
        unlocked:
          description: "Whether the item is available through legitimate gameplay.\
            \ Some items are added to the game files in an update, but aren't actually\
            \ made available until a subsequent update unlocks them."
          example: true
          title: unlocked
          type: boolean
        url:
          description: Link to the respective Nookipedia article.
          example: https://nookipedia.com/wiki/Item:3D_Glasses_(New_Horizons)
          title: url
          type: string
        variation_total:
          description: "The total number of variations the clothing has, between 0\
            \ and 8."
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          example: 2
          title: variation_total
          type: integer
        variations:
          description: "An array of objects, each object representing a variation\
            \ of the clothing. Clothing that has no variations (only one version)\
            \ will have a single variation object with the image URL and colors, but\
            \ the `variation` field will be empty. Clothing with multiple variations\
            \ will have the `variation` fields defined with the name of each variation."
          example:
          - colors:
            - White
            - Colorful
            image_url: https://dodo.ac/np/images/1/15/3D_Glasses_%28White%29_NH_Icon.png
            variation: White
          - colors:
            - Colorful
            - Black
            image_url: https://dodo.ac/np/images/2/28/3D_Glasses_%28Black%29_NH_Icon.png
            variation: Black
          items:
            $ref: '#/components/schemas/NHClothing_variations_inner'
          title: variations
          type: array
        version_added:
          description: The version of *New Horizons* that the item was added. Items
            that were included at the game's launch have version "1.0.0".
          example: 1.0.0
          title: version_added
          type: string
        vill_equip:
          description: Whether villagers may equip this item.
          example: true
          title: vill_equip
          type: boolean
      title: NHClothing
      type: object
    NHEvent:
      example:
        date: 2021-05-01
        event: May Day event begins
        type: Event
        url: https://nookipedia.com/wiki/May_Day
      properties:
        date:
          description: The date of the event in YYYY-MM-DD format.
          example: 2021-05-01
          title: date
          type: string
        event:
          description: The description of the event.
          example: May Day event begins
          title: event
          type: string
        type:
          description: "The type of event. \"Event\" is a festivity the player can\
            \ take part in. \"Nook Shopping\" refers to the [seasonal events](https://nookipedia.com/wiki/Nook_Shopping_seasonal_event)\
            \ in which exclusive item(s) are available via []Nook Shopping](https://nookipedia.com/wiki/Nook_Shopping).\
            \ \"Recipes\" refers to the start or end of certain recipes being available.\
            \ \"Birthday\" refers to the birthday of a villager or special character."
          enum:
          - Event
          - Nook Shopping
          - Recipes
          - Birthday
          example: Event
          title: type
          type: string
        url:
          description: Link to the respective Nookipedia article for the event.
          example: https://nookipedia.com/wiki/May_Day
          title: url
          type: string
      title: NHEvent
      type: object
    NHFish:
      example:
        tank_length: 1
        sell_nook: 1000
        south:
          months_array:
          - 3
          - 4
          - 5
          - 9
          - 10
          - 11
          - 12
          times_by_month:
            "1": NA
            "2": NA
            "3": 4 PM – 9 AM
            "4": 4 PM – 9 AM
            "5": 4 PM – 9 AM
            "6": 4 PM – 9 AM
            "7": NA
            "8": NA
            "9": All day
            "10": All day
            "11": All day
            "12": NA
          months: Mar – May; Sep – Dec
          availability_array:
          - months: Sep – Dec
            time: 4 PM – 9 AM
          - months: Mar – May
            time: All day
        catchphrases:
        - I caught a cherry salmon! It's the perfect topper for a marlin sundae!
        image_url: https://dodo.ac/np/images/d/db/Cherry_Salmon_NH_Icon.png
        north:
          months_array:
          - 3
          - 4
          - 5
          - 6
          - 9
          - 10
          - 11
          times_by_month:
            "1": NA
            "2": NA
            "3": 4 PM – 9 AM
            "4": 4 PM – 9 AM
            "5": 4 PM – 9 AM
            "6": 4 PM – 9 AM
            "7": NA
            "8": NA
            "9": All day
            "10": All day
            "11": All day
            "12": NA
          months: Mar – Jun; Sep – Nov
          availability_array:
          - months: Mar – Jun
            time: 4 PM – 9 AM
          - months: Sep – Nov
            time: All day
        shadow_size: Small
        total_catch: 100
        url: https://nookipedia.com/wiki/Cherry Salmon
        number: 27
        render_url: https://dodo.ac/np/images/c/c0/Cherry_Salmon_NH.png
        name: Cherry Salmon
        location: River (clifftop)
        tank_width: 1
        sell_cj: 1500
        rarity: Uncommon
      properties:
        catchphrases:
          description: "An array of possible catchphrases the player says after catching\
            \ the fish. Most critters have just one, but some can have multiple."
          example:
          - I caught a cherry salmon! It's the perfect topper for a marlin sundae!
          items:
            type: string
          title: catchphrases
          type: array
        image_url:
          description: Image of the fish.
          example: https://dodo.ac/np/images/d/db/Cherry_Salmon_NH_Icon.png
          title: image_url
          type: string
        location:
          description: Short descriptor of where the fish can be found.
          example: River (clifftop)
          title: location
          type: string
        name:
          description: Name of the fish.
          example: Cherry Salmon
          title: name
          type: string
        north:
          $ref: '#/components/schemas/NHFish_north'
        number:
          description: "In-game fish number, marking position in the Critterpedia."
          example: 27
          title: number
          type: integer
        rarity:
          description: How rare the fish is. Note that this field is currently empty
            for most fish as we do not yet know how exactly fish rarities are calculated
            in the game code.
          example: Uncommon
          title: rarity
          type: string
        render_url:
          description: Render of the fish.
          example: https://dodo.ac/np/images/c/c0/Cherry_Salmon_NH.png
          title: render_url
          type: string
        sell_cj:
          description: The number of Bells the fish can be sold to C.J. for. This
            value is always 1.5x that of `sell_nook`.
          example: 1500
          title: sell_cj
          type: integer
        sell_nook:
          description: The number of Bells the fish can be sold to Nook's store for.
          example: 1000
          title: sell_nook
          type: integer
        shadow_size:
          description: The size of the fish's shadow.
          enum:
          - X-Small
          - Small
          - Medium
          - Medium w/Fin
          - Large
          - Large w/Fin
          - X-Large
          - XX-Large
          - Long
          example: Small
          title: shadow_size
          type: string
        south:
          $ref: '#/components/schemas/NHFish_south'
        tank_length:
          description: The length of the tank when the fish is placed as a furniture
            item.
          example: 1
          format: float
          title: tank_length
          type: number
        tank_width:
          description: The width of the tank when the fish is placed as a furniture
            item.
          example: 1
          format: float
          title: tank_width
          type: number
        total_catch:
          description: The total number of fish the player has to have caught before
            this fish will start spawning.
          example: 100
          title: total_catch
          type: integer
        url:
          description: Link to the respective Nookipedia article.
          example: https://nookipedia.com/wiki/Cherry Salmon
          title: url
          type: string
      title: NHFish
      type: object
    NHFossilGroup:
      example:
        name: Spinosaurus
        description: "Ahem. Yes. The Spinosaurus was a very large, carnivorous dinosaur,\
          \ roughly the size of a T. Rex. Unlike its more famous cousin, however,\
          \ Spinosaurus seems to have spent a great deal of time in water. Similar\
          \ to modern crocodiles, this creature lived on a diet of fish AND land-dwelling\
          \ animals. Personally, I am simply relieved that it did not seek FLYING\
          \ prey."
        room: 2
        url: https://nookipedia.com/wiki/Spinosaurus
      properties:
        description:
          description: A description of the fossil group.
          example: "Ahem. Yes. The Spinosaurus was a very large, carnivorous dinosaur,\
            \ roughly the size of a T. Rex. Unlike its more famous cousin, however,\
            \ Spinosaurus seems to have spent a great deal of time in water. Similar\
            \ to modern crocodiles, this creature lived on a diet of fish AND land-dwelling\
            \ animals. Personally, I am simply relieved that it did not seek FLYING\
            \ prey."
          title: description
          type: string
        name:
          description: The name of the fossil group.
          example: Spinosaurus
          title: name
          type: string
        room:
          description: The room where the fossil group can be found in the museum's
            fossil section.
          example: 2
          title: room
          type: integer
        url:
          description: Link to the respective Nookipedia article.
          example: https://nookipedia.com/wiki/Spinosaurus
          title: url
          type: string
      title: NHFossilGroup
      type: object
    NHFossilGroupWithIndividualFossils:
      example:
        fossils:
        - colors:
          - Brown
          hha_base: 87
          image_url: https://dodo.ac/np/images/7/7b/Spino_Skull_NH_Icon.png
          interactable: true
          length: 2
          name: Spino Skull
          sell: 4000
          url: https://nookipedia.com/wiki/Spinosaurus
          width: 2
        - colors:
          - Brown
          hha_base: 87
          image_url: https://dodo.ac/np/images/4/40/Spino_Tail_NH_Icon.png
          interactable: true
          length: 2
          name: Spino Tail
          sell: 2500
          url: https://nookipedia.com/wiki/Spinosaurus
          width: 2
        - colors:
          - Brown
          hha_base: 87
          image_url: https://dodo.ac/np/images/9/92/Spino_Torso_NH_Icon.png
          interactable: true
          length: 2
          name: Spino Torso
          sell: 3000
          url: https://nookipedia.com/wiki/Spinosaurus
          width: 2
        name: Spinosaurus
        description: "Ahem. Yes. The Spinosaurus was a very large, carnivorous dinosaur,\
          \ roughly the size of a T. Rex. Unlike its more famous cousin, however,\
          \ Spinosaurus seems to have spent a great deal of time in water. Similar\
          \ to modern crocodiles, this creature lived on a diet of fish AND land-dwelling\
          \ animals. Personally, I am simply relieved that it did not seek FLYING\
          \ prey."
        matched:
          name: Spino Skull
          type: individual
        room: 2
        url: https://nookipedia.com/wiki/Spinosaurus
      properties:
        description:
          description: A description of the fossil group.
          example: "Ahem. Yes. The Spinosaurus was a very large, carnivorous dinosaur,\
            \ roughly the size of a T. Rex. Unlike its more famous cousin, however,\
            \ Spinosaurus seems to have spent a great deal of time in water. Similar\
            \ to modern crocodiles, this creature lived on a diet of fish AND land-dwelling\
            \ animals. Personally, I am simply relieved that it did not seek FLYING\
            \ prey."
          title: description
          type: string
        fossils:
          description: "An array of objects, each object representing a fossil that\
            \ belongs to the given group."
          example:
          - colors:
            - Brown
            hha_base: 87
            image_url: https://dodo.ac/np/images/7/7b/Spino_Skull_NH_Icon.png
            interactable: true
            length: 2
            name: Spino Skull
            sell: 4000
            url: https://nookipedia.com/wiki/Spinosaurus
            width: 2
          - colors:
            - Brown
            hha_base: 87
            image_url: https://dodo.ac/np/images/4/40/Spino_Tail_NH_Icon.png
            interactable: true
            length: 2
            name: Spino Tail
            sell: 2500
            url: https://nookipedia.com/wiki/Spinosaurus
            width: 2
          - colors:
            - Brown
            hha_base: 87
            image_url: https://dodo.ac/np/images/9/92/Spino_Torso_NH_Icon.png
            interactable: true
            length: 2
            name: Spino Torso
            sell: 3000
            url: https://nookipedia.com/wiki/Spinosaurus
            width: 2
          items:
            $ref: '#/components/schemas/NHFossilGroupWithIndividualFossils_fossils_inner'
          title: fossils
          type: array
        matched:
          $ref: '#/components/schemas/NHFossilGroupWithIndividualFossils_matched'
        name:
          description: The name of the fossil group.
          example: Spinosaurus
          title: name
          type: string
        room:
          description: The room where the fossil group can be found in the museum's
            fossil section.
          example: 2
          title: room
          type: integer
        url:
          description: Link to the respective Nookipedia article.
          example: https://nookipedia.com/wiki/Spinosaurus
          title: url
          type: string
      title: NHFossilGroupWithIndividualFossils
      type: object
    NHFossilGroupWithIndividualFossilsNoMatched:
      example:
        fossils:
        - colors:
          - Brown
          hha_base: 87
          image_url: https://dodo.ac/np/images/7/7b/Spino_Skull_NH_Icon.png
          interactable: true
          length: 2
          name: Spino Skull
          sell: 4000
          url: https://nookipedia.com/wiki/Spinosaurus
          width: 2
        - colors:
          - Brown
          hha_base: 87
          image_url: https://dodo.ac/np/images/4/40/Spino_Tail_NH_Icon.png
          interactable: true
          length: 2
          name: Spino Tail
          sell: 2500
          url: https://nookipedia.com/wiki/Spinosaurus
          width: 2
        - colors:
          - Brown
          hha_base: 87
          image_url: https://dodo.ac/np/images/9/92/Spino_Torso_NH_Icon.png
          interactable: true
          length: 2
          name: Spino Torso
          sell: 3000
          url: https://nookipedia.com/wiki/Spinosaurus
          width: 2
        name: Spinosaurus
        description: "Ahem. Yes. The Spinosaurus was a very large, carnivorous dinosaur,\
          \ roughly the size of a T. Rex. Unlike its more famous cousin, however,\
          \ Spinosaurus seems to have spent a great deal of time in water. Similar\
          \ to modern crocodiles, this creature lived on a diet of fish AND land-dwelling\
          \ animals. Personally, I am simply relieved that it did not seek FLYING\
          \ prey."
        room: 2
        url: https://nookipedia.com/wiki/Spinosaurus
      properties:
        description:
          description: A description of the fossil group.
          example: "Ahem. Yes. The Spinosaurus was a very large, carnivorous dinosaur,\
            \ roughly the size of a T. Rex. Unlike its more famous cousin, however,\
            \ Spinosaurus seems to have spent a great deal of time in water. Similar\
            \ to modern crocodiles, this creature lived on a diet of fish AND land-dwelling\
            \ animals. Personally, I am simply relieved that it did not seek FLYING\
            \ prey."
          title: description
          type: string
        fossils:
          description: "An array of objects, each object representing a fossil that\
            \ belongs to the given group."
          example:
          - colors:
            - Brown
            hha_base: 87
            image_url: https://dodo.ac/np/images/7/7b/Spino_Skull_NH_Icon.png
            interactable: true
            length: 2
            name: Spino Skull
            sell: 4000
            url: https://nookipedia.com/wiki/Spinosaurus
            width: 2
          - colors:
            - Brown
            hha_base: 87
            image_url: https://dodo.ac/np/images/4/40/Spino_Tail_NH_Icon.png
            interactable: true
            length: 2
            name: Spino Tail
            sell: 2500
            url: https://nookipedia.com/wiki/Spinosaurus
            width: 2
          - colors:
            - Brown
            hha_base: 87
            image_url: https://dodo.ac/np/images/9/92/Spino_Torso_NH_Icon.png
            interactable: true
            length: 2
            name: Spino Torso
            sell: 3000
            url: https://nookipedia.com/wiki/Spinosaurus
            width: 2
          items:
            $ref: '#/components/schemas/NHFossilGroupWithIndividualFossils_fossils_inner'
          title: fossils
          type: array
        name:
          description: The name of the fossil group.
          example: Spinosaurus
          title: name
          type: string
        room:
          description: The room where the fossil group can be found in the museum's
            fossil section.
          example: 2
          title: room
          type: integer
        url:
          description: Link to the respective Nookipedia article.
          example: https://nookipedia.com/wiki/Spinosaurus
          title: url
          type: string
      title: NHFossilGroupWithIndividualFossilsNoMatched
      type: object
    NHFurniture:
      example:
        lucky: false
        grid_length: 1
        item_set: ""
        custom_pattern_part: ""
        notes: ""
        custom_kit_type: ""
        functions:
        - Dresser
        item_series: Antique
        door_decor: false
        buy:
        - currency: Bells
          price: 31000
        customizable: false
        availability:
        - from: Nook's Cranny (Upgraded)
          note: ""
        lucky_season: ""
        version_added: 1.0.0
        unlocked: true
        themes:
        - Living Room
        - Expensive
        hha_category: Dresser
        variations:
        - colors:
          - Aqua
          - Brown
          image_url: https://dodo.ac/np/images/9/9e/Antique_Vanity_%28Brown%29_NH_Icon.png
          pattern: ""
          variation: Brown
        - colors:
          - Aqua
          - Beige
          image_url: https://dodo.ac/np/images/a/ab/Antique_Vanity_%28Natural%29_NH_Icon.png
          pattern: ""
          variation: Natural
        - colors:
          - Aqua
          - Black
          image_url: https://dodo.ac/np/images/5/55/Antique_Vanity_%28Black%29_NH_Icon.png
          pattern: ""
          variation: Black
        tag: Dresser
        hha_base: 251
        height: 15.98677
        custom_kits: 0
        custom_body_part: ""
        pattern_total: 0
        grid_width: 2
        sell: 7750
        url: https://nookipedia.com/wiki/Item:Antique_Vanity_(New_Horizons)
        name: Antique Vanity
        category: Housewares
        variation_total: 3
      properties:
        availability:
          description: "Where the furniture may be obtained from (could be multiple\
            \ sources). `from` is a brief description of the source; `note`, when\
            \ provided, provides additional details."
          example:
          - from: Nook's Cranny (Upgraded)
            note: ""
          items:
            $ref: '#/components/schemas/NHClothing_availability_inner'
          title: availability
          type: array
        buy:
          description: "An array of prices, for when the item may be purchased with\
            \ Bells, Nook Miles, etc.."
          example:
          - currency: Bells
            price: 31000
          items:
            $ref: '#/components/schemas/NHClothing_buy_inner'
          title: buy
          type: array
        category:
          description: The category of item as shown in the player's inventory.
          enum:
          - Housewares
          - Miscellaneous
          - Wall-mounted
          example: Housewares
          title: category
          type: string
        custom_body_part:
          description: "If the item has variations, this is the name of the furniture\
            \ part that changes. For example, for many bamboo items, the custom body\
            \ part is \"Bamboo\" as the bamboo color is able to be customized."
          example: ""
          title: custom_body_part
          type: string
        custom_kit_type:
          description: "The item that needs to be consumed to customize this item.\
            \ The vast majority are \"Customization Kit\", but a small selection of\
            \ items will require a different item, such as items in the Spooky Series\
            \ requireing pumpkins."
          example: ""
          title: custom_kit_type
          type: string
        custom_kits:
          description: The number of `custom_kit_type`s (e.g. Customization Kits)
            that are needed to customize this item. Value is 0 if the item is not
            customizable.
          example: 0
          title: custom_kits
          type: integer
        custom_pattern_part:
          description: "If the item's pattern can be customized, this is the name\
            \ of the furniture part that can have a pattern applied to it. For example,\
            \ for the Baby Chair, the custom pattern part is \"Cushion\" as the cushion\
            \ on the chair may have a pattern applied."
          example: ""
          title: custom_pattern_part
          type: string
        customizable:
          description: Whether or not the item is customizable via a crafting table.
          example: false
          title: customizable
          type: boolean
        door_decor:
          description: Whether this item may be placed on the exterior door of the
            player's house.
          example: false
          title: door_decor
          type: boolean
        functions:
          description: "A list of functionalities (if any) that the item has. For\
            \ example, furniture that items can be placed on topof will have \"Table\"\
            \ as a function.."
          example:
          - Dresser
          items:
            enum:
            - Trash
            - Toilet
            - Table
            - Storage
            - Stereo
            - Seating
            - Lighting
            - Instrument
            - Dresser
            - Bed
            - Audio
            type: string
          title: functions
          type: array
        grid_length:
          description: The number of lengthwise grid spaces this item takes up.
          example: 1
          format: float
          title: grid_length
          type: number
        grid_width:
          description: The number of widthwise grid spaces this item takes up.
          example: 2
          format: float
          title: grid_width
          type: number
        height:
          description: "The height of the object. One in-game block is 10 units tall,\
            \ while the player is 15.1324 units tall."
          example: 15.98677
          format: float
          title: height
          type: number
        hha_base:
          description: The base value that the item provides to a player's Happy Home
            Academy score when placed in their home.
          example: 251
          title: hha_base
          type: integer
        hha_category:
          description: "The HHA category the item is a part of, if any. If the item\
            \ does not have an HHA category, this will be an empty string."
          example: Dresser
          title: hha_category
          type: string
        item_series:
          description: "The [furniture series](https://nookipedia.com/wiki/Series_(furniture))\
            \ the item is a part of, if any. A series is a collection of furniture\
            \ and interior items, all with the same theme. If the item is not part\
            \ of a series, this will be an empty string."
          example: Antique
          title: item_series
          type: string
        item_set:
          description: "The [furniture set](https://nookipedia.com/wiki/Set) the item\
            \ is a part of, if any. A set is a smaller collection of related furniture\
            \ items. If the item is not part of a set, this will be an empty string."
          example: ""
          title: item_set
          type: string
        lucky:
          description: "Whether or not the item is lucky. Lucky items give a 777-point\
            \ HHA bonus. Some items are only counted as lucky in certain seasons,\
            \ as indicated by the `lucky_season` field."
          example: false
          title: lucky
          type: boolean
        lucky_season:
          description: The season in which the item is lucky (or "All year" if lucky
            throughout the entire year). Items that are not lucky will have this field
            as an empty string.
          enum:
          - ""
          - All year
          - Spring
          - Summer
          - Autumn
          - Winter
          example: ""
          title: lucky_season
          type: string
        name:
          description: The name of the furniture.
          example: Antique Vanity
          title: name
          type: string
        notes:
          description: "Any additional miscellaneous information about the item, such\
            \ as a name change from a past update."
          example: ""
          title: notes
          type: string
        pattern_total:
          description: "The number of default patterns available to customize the\
            \ item with, between 0 and 8. For items with customizable patterns, the\
            \ player may also customize with patterns of their own."
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          example: 0
          title: pattern_total
          type: integer
        sell:
          description: The number of Bells the item can be sold to Nook's store for.
          example: 7750
          title: sell
          type: integer
        tag:
          description: "The tag of an item, if any, which denotes a specific use or\
            \ relation to an event. Tags are determined by Nintendo. Examples include\
            \ \"Chair\", \"Musical Instrument\", and \"Mario\". If the item does not\
            \ have a tag, this will be an empty string."
          example: Dresser
          title: tag
          type: string
        themes:
          description: "A list of [themes](https://nookipedia.com/wiki/Theme_(furniture))\
            \ (if any) that the item belongs to."
          example:
          - Living Room
          - Expensive
          items:
            type: string
          title: themes
          type: array
        unlocked:
          description: "Whether the item is available through legitimate gameplay.\
            \ Some items are added to the game files in an update, but aren't actually\
            \ made available until a subsequent update unlocks them."
          example: true
          title: unlocked
          type: boolean
        url:
          description: Link to the respective Nookipedia article.
          example: https://nookipedia.com/wiki/Item:Antique_Vanity_(New_Horizons)
          title: url
          type: string
        variation_total:
          description: "The number of variations, between 0 and 8."
          enum:
          - 0
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          example: 3
          title: variation_total
          type: integer
        variations:
          description: "An array of objects, each object representing a variation\
            \ of the furniture. Furniture that has no variations (only one version)\
            \ will have a single variation object with the image URL and colors, but\
            \ the `variation` or `pattern` fields will be empty strings. Furniture\
            \ with multiple variations will have the `variation` and/or `pattern`\
            \ fields defined depending on whether the furniture varies by body variety,\
            \ pattern, or both."
          example:
          - colors:
            - Aqua
            - Brown
            image_url: https://dodo.ac/np/images/9/9e/Antique_Vanity_%28Brown%29_NH_Icon.png
            pattern: ""
            variation: Brown
          - colors:
            - Aqua
            - Beige
            image_url: https://dodo.ac/np/images/a/ab/Antique_Vanity_%28Natural%29_NH_Icon.png
            pattern: ""
            variation: Natural
          - colors:
            - Aqua
            - Black
            image_url: https://dodo.ac/np/images/5/55/Antique_Vanity_%28Black%29_NH_Icon.png
            pattern: ""
            variation: Black
          items:
            $ref: '#/components/schemas/NHFurniture_variations_inner'
          title: variations
          type: array
        version_added:
          description: The version of *New Horizons* that the item was added. Items
            that were included at the game's launch have version "1.0.0".
          example: 1.0.0
          title: version_added
          type: string
      title: NHFurniture
      type: object
    NHIndividualFossil:
      example:
        image_url: https://dodo.ac/np/images/7/7b/Spino_Skull_NH_Icon.png
        sell: 4000
        length: 2
        name: Spino Skull
        width: 2
        fossil_group: Spinosaurus
        interactable: false
        colors:
        - Brown
        hha_base: 87
        url: https://nookipedia.com/wiki/Spinosaurus
      properties:
        colors:
          example:
          - Brown
          items:
            enum:
            - Aqua
            - Beige
            - Black
            - Blue
            - Brown
            - Colorful
            - Gray
            - Green
            - Orange
            - Pink
            - Purple
            - Red
            - White
            - Yellow
            type: string
          title: colors
          type: array
        fossil_group:
          description: The name of the group that the fossil belongs to.
          example: Spinosaurus
          title: fossil_group
          type: string
        hha_base:
          description: The base value that the item provides to a player's Happy Home
            Academy score when placed in their home.
          example: 87
          title: hha_base
          type: integer
        image_url:
          description: Image of the fossil's icon.
          example: https://dodo.ac/np/images/7/7b/Spino_Skull_NH_Icon.png
          title: image_url
          type: string
        interactable:
          description: Whether or not the item can be interacted with.
          example: false
          title: interactable
          type: boolean
        length:
          description: The length of the fossil.
          example: 2
          title: length
          type: integer
        name:
          description: The name of the fossil.
          example: Spino Skull
          title: name
          type: string
        sell:
          description: The number of bells the item can be sold to Nook's store for.
          example: 4000
          title: sell
          type: integer
        url:
          description: Link to the respective Nookipedia article.
          example: https://nookipedia.com/wiki/Spinosaurus
          title: url
          type: string
        width:
          description: The width of the fossil.
          example: 2
          title: width
          type: integer
      title: NHIndividualFossil
      type: object
    NHInterior:
      example:
        grid_length: 1
        item_set: ""
        notes: ""
        item_series: ""
        grid_width: 2
        image_url: https://dodo.ac/np/images/2/2d/Abstract_Wall_NH_Icon.png
        buy:
        - currency: Bells
          price: 1560
        sell: 200
        availability:
        - from: Nook's
          note: ""
        version_added: 1.0.0
        colors: "[\"White\",\"Colorful\"]"
        unlocked: true
        url: https://nookipedia.com/wiki/Item:Abstract_Wall_(New_Horizons)
        themes:
        - Shop
        - Facility
        hha_category: Dresser
        name: Abstract Wall
        tag: Dresser
        category: Wallpaper
        hha_base: 0
      properties:
        availability:
          description: "Where the clothing may be obtained from (could be multiple\
            \ sources). `from` is a brief description of the source; `note`, when\
            \ provided, provides additional details."
          example:
          - from: Nook's
            note: ""
          items:
            $ref: '#/components/schemas/NHClothing_availability_inner'
          title: availability
          type: array
        buy:
          description: "An array of prices, for when the interior may be purchased\
            \ with Bells, Nook Miles, etc.."
          example:
          - currency: Bells
            price: 1560
          items:
            $ref: '#/components/schemas/NHClothing_buy_inner'
          title: buy
          type: array
        category:
          description: The category of item as shown in the player's inventory.
          enum:
          - Floors
          - Wallpaper
          - Rugs
          example: Wallpaper
          title: category
          type: string
        colors:
          description: (WIP)
          enum:
          - Aqua
          - Beige
          - Black
          - Blue
          - Brown
          - Colorful
          - Gray
          - Green
          - Orange
          - Pink
          - Purple
          - Red
          - White
          - Yellow
          example: "[\"White\",\"Colorful\"]"
          title: colors
          type: string
        grid_length:
          description: The number of lengthwise grid spaces this item takes up.
          example: 1
          format: float
          title: grid_length
          type: number
        grid_width:
          description: The number of widthwise grid spaces this item takes up.
          example: 2
          format: float
          title: grid_width
          type: number
        hha_base:
          description: The base value that the item provides to a player's Happy Home
            Academy score when placed in their home.
          example: 0
          title: hha_base
          type: integer
        hha_category:
          description: "The HHA category the item is a part of, if any. If the item\
            \ does not have an HHA category, this will be an empty string."
          example: Dresser
          title: hha_category
          type: string
        image_url:
          description: Image of the interior.
          example: https://dodo.ac/np/images/2/2d/Abstract_Wall_NH_Icon.png
          title: image_url
          type: string
        item_series:
          description: "The [furniture series](https://nookipedia.com/wiki/Series_(furniture))\
            \ the item is a part of, if any. A series is a collection of furniture\
            \ and interior items, all with the same theme. If the item is not part\
            \ of a series, this will be an empty string."
          example: ""
          title: item_series
          type: string
        item_set:
          description: "The [furniture set](https://nookipedia.com/wiki/Set) the item\
            \ is a part of, if any. A set is a smaller collection of related furniture\
            \ items. If the item is not part of a set, this will be an empty string."
          example: ""
          title: item_set
          type: string
        name:
          description: The name of the interior.
          example: Abstract Wall
          title: name
          type: string
        notes:
          description: "Any additional miscellaneous information about the item, such\
            \ as a name change from a past update."
          example: ""
          title: notes
          type: string
        sell:
          description: The number of Bells the interior can be sold to Nook's store
            for.
          example: 200
          title: sell
          type: integer
        tag:
          description: "The tag of an item, if any, which denotes a specific use or\
            \ relation to an event. Tags are determined by Nintendo. Examples include\
            \ \"Chair\", \"Musical Instrument\", and \"Mario\". If the item does not\
            \ have a tag, this will be an empty string."
          example: Dresser
          title: tag
          type: string
        themes:
          description: "A list of [themes](https://nookipedia.com/wiki/Theme_(furniture))\
            \ (if any) that the item belongs to."
          example:
          - Shop
          - Facility
          items:
            type: string
          title: themes
          type: array
        unlocked:
          description: "Whether the item is available through legitimate gameplay.\
            \ Some items are added to the game files in an update, but aren't actually\
            \ made available until a subsequent update unlocks them."
          example: true
          title: unlocked
          type: boolean
        url:
          description: Link to the respective Nookipedia article.
          example: https://nookipedia.com/wiki/Item:Abstract_Wall_(New_Horizons)
          title: url
          type: string
        version_added:
          description: The version of *New Horizons* that the item was added. Items
            that were included at the game's launch have version "1.0.0".
          example: 1.0.0
          title: version_added
          type: string
      title: NHInterior
      type: object
    NHItem:
      example:
        stack: 30
        notes: ""
        image_url: https://dodo.ac/np/images/9/9f/Acorn_NH_Icon.png
        material_name_sort: 0
        buy:
        - currency: Bells
          price: 280
        sell: 200
        availability:
        - from: Nook's
          note: ""
        material_seasonality: Autumn
        is_fence: false
        plant_type: ""
        version_added: 1.0.0
        unlocked: true
        url: https://nookipedia.com/wiki/Item:Acorn_(New_Horizons)
        material_seasonality_sort: 3
        material_type: Tree
        material_sort: 3
        name: Acorn
        edible: false
        hha_base: 0
      properties:
        availability:
          description: "Where the clothing may be obtained from (could be multiple\
            \ sources). `from` is a brief description of the source; `note`, when\
            \ provided, provides additional details."
          example:
          - from: Nook's
            note: ""
          items:
            $ref: '#/components/schemas/NHClothing_availability_inner'
          title: availability
          type: array
        buy:
          description: "An array of prices, for when the interior may be purchased\
            \ with Bells, Nook Miles, etc.."
          example:
          - currency: Bells
            price: 280
          items:
            $ref: '#/components/schemas/NHClothing_buy_inner'
          title: buy
          type: array
        edible:
          description: Whether the item is edible or not.
          example: false
          title: edible
          type: boolean
        hha_base:
          description: The base value that the item provides to a player's Happy Home
            Academy score when placed in their home.
          example: 0
          title: hha_base
          type: integer
        image_url:
          description: Image of the interior.
          example: https://dodo.ac/np/images/9/9f/Acorn_NH_Icon.png
          title: image_url
          type: string
        is_fence:
          description: Whether or not the item is a fence or not.
          example: false
          title: is_fence
          type: boolean
        material_name_sort:
          description: (WIP)
          example: 0
          title: material_name_sort
          type: integer
        material_seasonality:
          description: (WIP)
          example: Autumn
          title: material_seasonality
          type: string
        material_seasonality_sort:
          description: (WIP)
          example: 3
          title: material_seasonality_sort
          type: integer
        material_sort:
          description: (WIP)
          example: 3
          title: material_sort
          type: integer
        material_type:
          description: (WIP)
          enum:
          - ""
          - Bamboo
          - Mushroom
          - Trash
          - Wood
          - Ore
          - Snowflake
          - Tree
          - Ornament
          - Fruit
          - Underwater
          - Other
          - Leaf
          - Shell
          - Flower
          - Star Fragment
          - Feather
          - Egg
          - Plant
          example: Tree
          title: material_type
          type: string
        name:
          description: The name of the item.
          example: Acorn
          title: name
          type: string
        notes:
          description: "Any additional miscellaneous information about the item, such\
            \ as a name change from a past update."
          example: ""
          title: notes
          type: string
        plant_type:
          description: (WIP)
          enum:
          - ""
          - Pumpkin
          - Flower
          - Bush
          - Tree
          example: ""
          title: plant_type
          type: string
        sell:
          description: The number of bells the item can be sold to Nook's store for.
          example: 200
          title: sell
          type: integer
        stack:
          description: How much the item can stack up to in a single inventory slot.
          example: 30
          title: stack
          type: integer
        unlocked:
          description: "Whether the item is available through legitimate gameplay.\
            \ Some items are added to the game files in an update, but aren't actually\
            \ made available until a subsequent update unlocks them."
          example: true
          title: unlocked
          type: boolean
        url:
          description: Link to the respective Nookipedia article.
          example: https://nookipedia.com/wiki/Item:Acorn_(New_Horizons)
          title: url
          type: string
        version_added:
          description: The version of *New Horizons* that the item was added. Items
            that were included at the game's launch have version "1.0.0".
          example: 1.0.0
          title: version_added
          type: string
      title: NHItem
      type: object
    NHPhoto:
      example:
        grid_length: 1
        custom_kits: 1
        custom_body_part: Frame
        grid_width: 2
        buy: []
        sell: 10
        customizable: false
        availability:
        - from: Friendship
          note: ""
        version_added: 1.0.0
        unlocked: true
        url: https://nookipedia.com/wiki/Item:Admiral's_Photo_(New_Horizons)
        variations:
        - colors:
          - Blue
          - Green
          image_url: https://dodo.ac/np/images/7/72/Admiral%27s_Photo_%28Natural_Wood%29_NH_Icon.png
          variation: Natural Wood
        - colors:
          - Blue
          - Green
          image_url: https://dodo.ac/np/images/e/e5/Admiral%27s_Photo_%28Dark_Wood%29_NH_Icon.png
          variation: Dark Wood
        - colors:
          - Blue
          - Green
          image_url: https://dodo.ac/np/images/9/9a/Admiral%27s_Photo_%28Pastel%29_NH_Icon.png
          variation: Pastel
        - colors:
          - Blue
          - Green
          image_url: https://dodo.ac/np/images/1/16/Admiral%27s_Photo_%28White%29_NH_Icon.png
          variation: White
        - colors:
          - Blue
          - Green
          image_url: https://dodo.ac/np/images/b/be/Admiral%27s_Photo_%28Pop%29_NH_Icon.png
          variation: Pop
        - colors:
          - Blue
          - Green
          image_url: https://dodo.ac/np/images/5/51/Admiral%27s_Photo_%28Colorful%29_NH_Icon.png
          variation: Colorful
        - colors:
          - Blue
          - Green
          image_url: https://dodo.ac/np/images/e/ed/Admiral%27s_Photo_%28Silver%29_NH_Icon.png
          variation: Silver
        - colors:
          - Blue
          - Green
          image_url: https://dodo.ac/np/images/c/cf/Admiral%27s_Photo_%28Gold%29_NH_Icon.png
          variation: Gold
        name: Admiral's Photo
        interactable: true
        category: Accessories
      properties:
        availability:
          description: "Where the photo may be obtained from (could be multiple sources).\
            \ `from` is a brief description of the source; `note`, when provided,\
            \ provides additional details."
          example:
          - from: Friendship
            note: ""
          items:
            $ref: '#/components/schemas/NHClothing_availability_inner'
          title: availability
          type: array
        buy:
          description: "An array of prices, for when the item may be purchased with\
            \ Bells, Nook Miles, etc.."
          example: []
          items:
            $ref: '#/components/schemas/NHClothing_buy_inner'
          title: buy
          type: array
        category:
          description: The category of item as shown in the player's inventory.
          enum:
          - Photos
          - Posters
          example: Accessories
          title: category
          type: string
        custom_body_part:
          description: "If the item has variations, this is the name of the furniture\
            \ part that changes. For example, for many bamboo items, the custom body\
            \ part is \"Bamboo\" as the bamboo color is able to be customized."
          example: Frame
          title: custom_body_part
          type: string
        custom_kits:
          description: The number of `custom_kit_type`s (e.g. Customization Kits)
            that are needed to customize this item. Value is 0 if the item is not
            customizable.
          example: 1
          title: custom_kits
          type: integer
        customizable:
          description: Whether or not the item is customizable via a crafting table.
          example: false
          title: customizable
          type: boolean
        grid_length:
          description: The number of lengthwise grid spaces this item takes up.
          example: 1
          format: float
          title: grid_length
          type: number
        grid_width:
          description: The number of widthwise grid spaces this item takes up.
          example: 2
          format: float
          title: grid_width
          type: number
        interactable:
          description: Whether or not the item can be interacted with. This field
            is true for all photos and false for all posters.
          example: true
          title: interactable
          type: boolean
        name:
          description: The name of the photo.
          example: Admiral's Photo
          title: name
          type: string
        sell:
          description: The number of Bells the photo can be sold to the store for.
          example: 10
          title: sell
          type: integer
        unlocked:
          description: "Whether the item is available through legitimate gameplay.\
            \ Some items are added to the game files in an update, but aren't actually\
            \ made available until a subsequent update unlocks them."
          example: true
          title: unlocked
          type: boolean
        url:
          description: Link to the respective Nookipedia article.
          example: https://nookipedia.com/wiki/Item:Admiral's_Photo_(New_Horizons)
          title: url
          type: string
        variations:
          description: "An array of objects, each object representing a variation\
            \ of the photo or poster. Items that has no variations (only one version)\
            \ will have a single variation object with the image URL and colors, but\
            \ the `variation` field will be empty. Items with multiple variations\
            \ will have the `variation` fields defined with the name of each variation."
          example:
          - colors:
            - Blue
            - Green
            image_url: https://dodo.ac/np/images/7/72/Admiral%27s_Photo_%28Natural_Wood%29_NH_Icon.png
            variation: Natural Wood
          - colors:
            - Blue
            - Green
            image_url: https://dodo.ac/np/images/e/e5/Admiral%27s_Photo_%28Dark_Wood%29_NH_Icon.png
            variation: Dark Wood
          - colors:
            - Blue
            - Green
            image_url: https://dodo.ac/np/images/9/9a/Admiral%27s_Photo_%28Pastel%29_NH_Icon.png
            variation: Pastel
          - colors:
            - Blue
            - Green
            image_url: https://dodo.ac/np/images/1/16/Admiral%27s_Photo_%28White%29_NH_Icon.png
            variation: White
          - colors:
            - Blue
            - Green
            image_url: https://dodo.ac/np/images/b/be/Admiral%27s_Photo_%28Pop%29_NH_Icon.png
            variation: Pop
          - colors:
            - Blue
            - Green
            image_url: https://dodo.ac/np/images/5/51/Admiral%27s_Photo_%28Colorful%29_NH_Icon.png
            variation: Colorful
          - colors:
            - Blue
            - Green
            image_url: https://dodo.ac/np/images/e/ed/Admiral%27s_Photo_%28Silver%29_NH_Icon.png
            variation: Silver
          - colors:
            - Blue
            - Green
            image_url: https://dodo.ac/np/images/c/cf/Admiral%27s_Photo_%28Gold%29_NH_Icon.png
            variation: Gold
          items:
            $ref: '#/components/schemas/NHClothing_variations_inner'
          title: variations
          type: array
        version_added:
          description: The version of *New Horizons* that the item was added. Items
            that were included at the game's launch have version "1.0.0".
          example: 1.0.0
          title: version_added
          type: string
      title: NHPhoto
      type: object
    NHRecipe:
      example:
        materials:
        - count: 5
          name: Tree Branch
        - count: 1
          name: Stone
        image_url: https://dodo.ac/np/images/a/ac/Flimsy_Axe_NH_DIY_Icon.png
        buy:
        - currency: Bells
          price: 280
        sell: 200
        serial_id: 100
        name: Flimsy Axe
        recipes_to_unlock: 0
        availability:
        - from: Tom Nook
          note: Obtained through Tom Nook's DIY Workshop at the beginning of the game.
        - from: Nook's Cranny
          note: ""
        url: https://nookipedia.com/wiki/Item:Flimsy_Axe_(New_Horizons)
      properties:
        availability:
          description: "Where the recipe may be obtained from. `from` is a brief description\
            \ of the source; `note`, when provided, provides additional details."
          example:
          - from: Tom Nook
            note: Obtained through Tom Nook's DIY Workshop at the beginning of the
              game.
          - from: Nook's Cranny
            note: ""
          items:
            $ref: '#/components/schemas/NHClothing_availability_inner'
          title: availability
          type: array
        buy:
          description: "An array of prices, for when the recipe may be purchased with\
            \ Bells, Nook Miles, etc. The majority of recipes cannot be bought (in\
            \ which case this array will be empty)."
          example:
          - currency: Bells
            price: 280
          items:
            $ref: '#/components/schemas/NHClothing_buy_inner'
          title: buy
          type: array
        image_url:
          description: Image of the item the recipe crafts.
          example: https://dodo.ac/np/images/a/ac/Flimsy_Axe_NH_DIY_Icon.png
          title: image_url
          type: string
        materials:
          description: The list of materials required to craft the item.
          example:
          - count: 5
            name: Tree Branch
          - count: 1
            name: Stone
          items:
            $ref: '#/components/schemas/NHRecipe_materials_inner'
          title: materials
          type: array
        name:
          description: The name of the recipe.
          example: Flimsy Axe
          title: name
          type: string
        recipes_to_unlock:
          description: How many recipes the player has to have learned to unlock this
            one.
          example: 0
          title: recipes_to_unlock
          type: integer
        sell:
          description: The number of Bells the sea creature can be sold to Nook's
            store for.
          example: 200
          title: sell
          type: integer
        serial_id:
          description: The unique in-game ID of the recipe.
          example: 100
          title: serial_id
          type: integer
        url:
          description: Link to the respective Nookipedia article.
          example: https://nookipedia.com/wiki/Item:Flimsy_Axe_(New_Horizons)
          title: url
          type: string
      title: NHRecipe
      type: object
    NHSeaCreature:
      example:
        tank_length: 1
        sell_nook: 160
        south:
          months_array:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          times_by_month:
            "1": All day
            "2": All day
            "3": All day
            "4": All day
            "5": All day
            "6": All day
            "7": All day
            "8": All day
            "9": All day
            "10": All day
            "11": All day
            "12": All day
          months: Jan – Mar
          availability_array:
          - months: All year
            time: All day
        catchphrases:
        - I got an octopus! It can give four hugs at once!
        image_url: https://dodo.ac/np/images/5/58/Octopus_NH_Icon.png
        north:
          months_array:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          times_by_month:
            "1": All day
            "2": All day
            "3": All day
            "4": All day
            "5": All day
            "6": All day
            "7": All day
            "8": All day
            "9": All day
            "10": All day
            "11": All day
            "12": All day
          months: Jul – Sep
          availability_array:
          - months: All year
            time: All day
        shadow_size: Medium
        total_catch: 0
        url: https://nookipedia.com/wiki/Octopus_(fish)
        number: 20
        shadow_movement: Slow
        render_url: https://dodo.ac/np/images/2/27/Octopus_NH.png
        name: Octopus
        tank_width: 1
        rarity: Uncommon
      properties:
        catchphrases:
          description: "An array of possible catchphrases the player says after catching\
            \ the sea creature. Most critters have just one, but some can have multiple."
          example:
          - I got an octopus! It can give four hugs at once!
          items:
            type: string
          title: catchphrases
          type: array
        image_url:
          description: Image of the sea creature.
          example: https://dodo.ac/np/images/5/58/Octopus_NH_Icon.png
          title: image_url
          type: string
        name:
          description: Name of the sea creature.
          example: Octopus
          title: name
          type: string
        north:
          $ref: '#/components/schemas/NHSeaCreature_north'
        number:
          description: "In-game sea creature number, marking position in the Critterpedia."
          example: 20
          title: number
          type: integer
        rarity:
          description: How rare the sea creature is. Note that this field is currently
            empty for most sea creatures as we do not yet know how exactly sea creature
            rarities are calculated in the game code.
          example: Uncommon
          title: rarity
          type: string
        render_url:
          description: Render of the sea creature.
          example: https://dodo.ac/np/images/2/27/Octopus_NH.png
          title: render_url
          type: string
        sell_nook:
          description: The number of Bells the sea creature can be sold to Nook's
            store for.
          example: 160
          title: sell_nook
          type: integer
        shadow_movement:
          description: Short descriptor of where the sea creature can be found.
          enum:
          - Stationary
          - Very slow
          - Slow
          - Medium
          - Fast
          - Very fast
          example: Slow
          title: shadow_movement
          type: string
        shadow_size:
          description: Short descriptor of where the sea creature can be found.
          enum:
          - X-Small
          - Small
          - Medium
          - Large
          - X-Large
          example: Medium
          title: shadow_size
          type: string
        south:
          $ref: '#/components/schemas/NHSeaCreature_south'
        tank_length:
          description: The length of the tank when the sea creature is placed as a
            furniture item.
          example: 1
          format: float
          multipleOf: 0.1
          title: tank_length
          type: number
        tank_width:
          description: The width of the tank when the sea creature is placed as a
            furniture item.
          example: 1
          format: float
          multipleOf: 0.1
          title: tank_width
          type: number
        total_catch:
          description: The total number of sea creatures the player has to have caught
            before this sea creature will start spawning.
          example: 0
          title: total_catch
          type: integer
        url:
          description: Link to the respective Nookipedia article.
          example: https://nookipedia.com/wiki/Octopus_(fish)
          title: url
          type: string
      title: NHSeaCreature
      type: object
    NHTool:
      example:
        custom_kits: 0
        notes: ""
        custom_body_part: ""
        buy:
        - price: 2550
        - currency: Bells
        sell: 625
        customizable: false
        availability:
        - from: Nook's Cranny
          note: ""
        - from: Crafting
          note: ""
        version_added: 1.0.0
        unlocked: true
        url: https://nookipedia.com/wiki/Item:Axe_(New_Horizons)
        variations:
        - image_url: https://dodo.ac/np/images/f/fa/Axe_NH_Icon.png
          variation: ""
        name: Axe
        uses: 100
        hha_base: 0
      properties:
        availability:
          description: "Where the tool may be obtained from (could be multiple sources).\
            \ `from` is a brief description of the source; `note`, when provided,\
            \ provides additional details."
          example:
          - from: Nook's Cranny
            note: ""
          - from: Crafting
            note: ""
          items:
            $ref: '#/components/schemas/NHClothing_availability_inner'
          title: availability
          type: array
        buy:
          description: "An array of prices, for when the item may be purchased with\
            \ Bells, Nook Miles, etc.."
          example:
          - price: 2550
          - currency: Bells
          items:
            $ref: '#/components/schemas/NHClothing_buy_inner'
          title: buy
          type: array
        custom_body_part:
          description: "If the item has variations, this is the name of the furniture\
            \ part that changes. For example, for many bamboo items, the custom body\
            \ part is \"Bamboo\" as the bamboo color is able to be customized."
          example: ""
          title: custom_body_part
          type: string
        custom_kits:
          description: The number of `custom_kit_type`s (e.g. Customization Kits)
            that are needed to customize this item. Value is 0 if the item is not
            customizable.
          example: 0
          title: custom_kits
          type: integer
        customizable:
          description: Whether or not the item is customizable via a crafting table.
          example: false
          title: customizable
          type: boolean
        hha_base:
          description: The base value that the item provides to a player's Happy Home
            Academy score when placed in their home.
          example: 0
          title: hha_base
          type: integer
        name:
          description: The name of the tool.
          example: Axe
          title: name
          type: string
        notes:
          description: "Any additional miscellaneous information about the item, such\
            \ as a name change from a past update."
          example: ""
          title: notes
          type: string
        sell:
          description: The number of bells the tool can be sold to the store for.
          example: 625
          title: sell
          type: integer
        unlocked:
          description: "Whether the item is available through legitimate gameplay.\
            \ Some items are added to the game files in an update, but aren't actually\
            \ made available until a subsequent update unlocks them."
          example: true
          title: unlocked
          type: boolean
        url:
          description: Link the the respective Nookipedia article.
          example: https://nookipedia.com/wiki/Item:Axe_(New_Horizons)
          title: url
          type: string
        uses:
          description: How many times the tool can be used before breaking.
          example: 100
          title: uses
          type: integer
        variations:
          description: "An array of objects, each object representing a variation\
            \ of the tool. Tools that has no variations (only one version) will have\
            \ a single variation object with the image URL and colors, but the `variation`\
            \ field will be empty. Tools with multiple variations will have the `variation`\
            \ fields defined with the name of each variation."
          example:
          - image_url: https://dodo.ac/np/images/f/fa/Axe_NH_Icon.png
            variation: ""
          items:
            $ref: '#/components/schemas/NHTool_variations_inner'
          title: variations
          type: array
        version_added:
          description: The version of *New Horizons* that the item was added. Items
            that were included at the game's launch have version "1.0.0".
          example: 1.0.0
          title: version_added
          type: string
      title: NHTool
      type: object
    Villager:
      example:
        gender: Male
        prev_phrases:
        - toady
        image_url: https://dodo.ac/np/images/9/94/Ribbot_NH.png
        title_color: bfbfbf
        sign: Aquarius
        url: https://nookipedia.com/wiki/Ribbot
        appearances:
        - DNM
        - AC
        - E_PLUS
        - WW
        - CF
        - NL
        - WA
        - NH
        - HHD
        - PC
        birthday_day: "13"
        debut: DNM
        alt_name: ""
        quote: "Never rest, never rust."
        personality: Jock
        phrase: zzrrbbit
        species: Frog
        name: Ribbot
        birthday_month: February
        nh_details:
          icon_url: https://dodo.ac/np/images/8/87/Ribbot_NH_Villager_Icon.png
          fav_styles:
          - Simple
          - Active
          catchphrase: zzrrbbit
          house_exterior_url: https://dodo.ac/np/images/4/42/House_of_Ribbot_NH_Model.png
          image_url: https://dodo.ac/np/images/9/94/Ribbot_NH.png
          sub-personality: B
          house_music: K.K. Technopop
          clothing_variation: Light Blue
          quote: "Never rest, never rust."
          house_music_note: ""
          clothing: Simple Parka
          photo_url: https://dodo.ac/np/images/0/03/RibbotPicACNH.png
          house_flooring: Future-Tech Flooring
          house_wallpaper: Circuit-Board Wall
          fav_colors:
          - Blue
          - Aqua
          hobby: Fitness
          house_interior_url: https://dodo.ac/np/images/8/86/House_of_Ribbot_NH.png
        clothing: Simple Parka
        id: flg01
        text_color: 5e5e5e
        islander: false
      properties:
        alt_name:
          description: "A previous name for the villager. A very small number of villagers\
            \ changed names between earlier games, such as Sally being known as Hazel\
            \ in the original game."
          example: ""
          title: alt_name
          type: string
        appearances:
          description: "List of official media the villager appeared in. `DNM` is\
            \ *Doubutsu no Mori* for the Nintendo 64 (Japan-exclusive); `AC` is *Animal\
            \ Crossing* for GameCube; `E_PLUS` is *Doubutsu no Mori e+* for GameCube\
            \ (expanded port of AC, Japan-exclusive); `WW` is *Wild World* for the\
            \ DS; `CF` is *City Folk* for Wii; `NL` is *New Leaf* for 3DS; `WA` is\
            \ *Welcome amiibo*, the *New Leaf* expansion; `NH` is *New Horizons* for\
            \ Switch; `FILM` is the *Doubutsu no Mori* Japan-exclusive film; `HHD`\
            \ is *Happy Home Designer* for the Wii; and `PC` is *Pocket Camp* for\
            \ mobile."
          example:
          - DNM
          - AC
          - E_PLUS
          - WW
          - CF
          - NL
          - WA
          - NH
          - HHD
          - PC
          items:
            enum:
            - DNM
            - AC
            - E_PLUS
            - WW
            - CF
            - NL
            - WA
            - NH
            - FILM
            - HHD
            - PC
            type: string
          title: appearances
          type: array
        birthday_day:
          description: "Birthday day of the villager. Note that villager birthdays\
            \ were not introduced until *Wild World*. For villagers who didn't appear\
            \ in *Wild World* or any later games, this field will be an empty string."
          example: "13"
          title: birthday_day
          type: string
        birthday_month:
          description: "Birthday month of the villager. Note that villager birthdays\
            \ were not introduced until *Wild World*. For villagers who didn't appear\
            \ in *Wild World* or any later games, this field will be an empty string."
          example: February
          title: birthday_month
          type: string
        clothing:
          description: "The villager's default clothing. This will be the clothing\
            \ from the latest game (i.e. if the villager had varying phrases between\
            \ *Wild World* and *New Horizons*, this will be the *New Horizons* clothing)."
          example: Simple Parka
          title: clothing
          type: string
        debut:
          description: "The first *Animal Crossing* game the villager appeared in.\
            \ `DNM` is *Doubutsu no Mori* for the Nintendo 64 (Japan-exclusive); `AC`\
            \ is *Animal Crossing* for GameCube; `E_PLUS` is *Doubutsu no Mori e+*\
            \ for GameCube (expanded port of AC, Japan-exclusive); `WW` is *Wild World*\
            \ for the DS; `CF` is *City Folk* for Wii; `NL` is *New Leaf* for 3DS;\
            \ `WA` is *Welcome amiibo*, the *New Leaf* expansion; `NH` is *New Horizons*\
            \ for Switch; `FILM` is the *Doubutsu no Mori* Japan-exclusive film; `HHD`\
            \ is *Happy Home Designer* for the Wii; and `PC` is *Pocket Camp* for\
            \ mobile."
          enum:
          - DNM
          - AC
          - E_PLUS
          - WW
          - CF
          - NL
          - WA
          - NH
          - FILM
          - HHD
          - PC
          example: DNM
          title: debut
          type: string
        gender:
          description: "Gender of the villager. In *Animal Crossing*, only male and\
            \ female are used."
          enum:
          - Male
          - Female
          example: Male
          title: gender
          type: string
        id:
          description: The game's internal identifier for the villager. Not all villagers
            have IDs; villagers who appeared in any game including or after *Wild
            World* have a consistent ID between games.
          example: flg01
          title: id
          type: string
        image_url:
          description: Image of the villager from the latest game the villager appeared
            in.
          example: https://dodo.ac/np/images/9/94/Ribbot_NH.png
          title: image_url
          type: string
        islander:
          description: Whether the villager was an island in *Animal Crossing* for
            GameCube. Only a small number of villagers (36) were islanders.
          example: false
          title: islander
          type: boolean
        name:
          description: Name of the villager.
          example: Ribbot
          title: name
          type: string
        nh_details:
          $ref: '#/components/schemas/Villager_nh_details'
        personality:
          description: "The villager's personality. Note that there are no official\
            \ in-game personality names; these are names that are commonly used by\
            \ the community. In the case of 'sisterly', other common names include\
            \ 'big sis' and 'uchi'."
          enum:
          - Big sister
          - Cranky
          - Jock
          - Lazy
          - Normal
          - Peppy
          - Smug
          - Snooty
          example: Jock
          title: personality
          type: string
        phrase:
          description: "The villager's default phrase they use throughout conversation.\
            \ This will be the phrase from the latest game (i.e. if the villager had\
            \ varying phrases between *Wild World* and *New Horizons*, this will be\
            \ the *New Horizons* quote)."
          example: zzrrbbit
          title: phrase
          type: string
        prev_phrases:
          description: Any phrases used in previous *Animal Crossing* installations.
            May be empty.
          example:
          - toady
          items:
            type: string
          title: prev_phrases
          type: array
        quote:
          description: "The villager's quote as it appears on the back of their in-game\
            \ portrait item. This will be the quote from the latest game (i.e. if\
            \ the villager had varying quotes between *Wild World* and *New Horizons*,\
            \ this will be the *New Horizons* quote). For villagers from older games\
            \ that do not have a quote, this field will be an empty string."
          example: "Never rest, never rust."
          title: quote
          type: string
        sign:
          description: The villager's astrological star sign.
          enum:
          - Aries
          - Taurus
          - Gemini
          - Cancer
          - Leo
          - Virgo
          - Libra
          - Scorpio
          - Sagittarius
          - Capricorn
          - Aquarius
          - Pisces
          example: Aquarius
          title: sign
          type: string
        species:
          description: The villager's species.
          enum:
          - Alligator
          - Anteater
          - Bear
          - Bear cub
          - Bird
          - Bull
          - Cat
          - Chicken
          - Cow
          - Deer
          - Dog
          - Duck
          - Eagle
          - Elephant
          - Frog
          - Goat
          - Gorilla
          - Hamster
          - Hippo
          - Horse
          - Koala
          - Kangaroo
          - Lion
          - Monkey
          - Mouse
          - Octopus
          - Ostrich
          - Penguin
          - Pig
          - Rabbit
          - Rhinoceros
          - Sheep
          - Squirrel
          - Tiger
          - Wolf
          example: Frog
          title: species
          type: string
        text_color:
          description: "The HTML color code of the text of the villager's name badge\
            \ that appears above their dialogue box when spoken to in-game. Note that\
            \ to date, only *New Horizons* villagers have this field populated."
          example: 5e5e5e
          title: text_color
          type: string
        title_color:
          description: "The HTML color code of the background of the villager's name\
            \ badge that appears above their dialogue box when spoken to in-game.\
            \ Note that to date, only *New Horizons* villagers have this field populated.\
            \ This field may be useful for styling, such as the accent color for a\
            \ Discord embed."
          example: bfbfbf
          title: title_color
          type: string
        url:
          description: Link to the respective Nookipedia article.
          example: https://nookipedia.com/wiki/Ribbot
          title: url
          type: string
      title: Villager
      type: object
    NHArtwork_fake_info:
      description: "Information about the fake version of the artwork. If there is\
        \ no fake, `fake_info`'s value will be `null`."
      example:
        image_url: https://dodo.ac/np/images/4/46/Academic_Painting_%28Fake%29_NH_Icon.png
        description: "In the forgery, there is a coffee stain in the top right corner.\
          \ The forgery also has a key taped to the back of the canvas. If there is\
          \ no stain and key, it is genuine."
        texture_url: https://dodo.ac/np/images/0/03/Academic_Painting_%28Fake%29_NH_Texture.png
      properties:
        description:
          description: A description of how to identify the fake artwork.
          example: "In the forgery, there is a coffee stain in the top right corner.\
            \ The forgery also has a key taped to the back of the canvas. If there\
            \ is no stain and key, it is genuine."
          title: description
          type: string
        image_url:
          description: Image of the fake artwork.
          example: https://dodo.ac/np/images/4/46/Academic_Painting_%28Fake%29_NH_Icon.png
          title: image_url
          type: string
        texture_url:
          description: The texture of the artwork. Note that statues will not have
            a texture (value will be empty string).
          example: https://dodo.ac/np/images/0/03/Academic_Painting_%28Fake%29_NH_Texture.png
          title: texture_url
          type: string
      title: NHArtwork_fake_info
      type: object
    NHArtwork_real_info:
      description: Information about the genuine version of the artwork.
      example:
        image_url: https://dodo.ac/np/images/e/e8/Academic_Painting_NH_Icon.png
        description: "This drawing is based on the \"ideal\" human-body ratio, as\
          \ stated in \"De architectura.\" \"De architectura\" was a treatise by Vitruvius,\
          \ an architect from the early 1st century BCE."
        texture_url: https://dodo.ac/np/images/f/f6/Academic_Painting_NH_Texture.png
      properties:
        description:
          description: The description of the artwork.
          example: "This drawing is based on the \"ideal\" human-body ratio, as stated\
            \ in \"De architectura.\" \"De architectura\" was a treatise by Vitruvius,\
            \ an architect from the early 1st century BCE."
          title: description
          type: string
        image_url:
          description: Image of the real artwork.
          example: https://dodo.ac/np/images/e/e8/Academic_Painting_NH_Icon.png
          title: image_url
          type: string
        texture_url:
          description: The texture of the artwork. Note that statues will not have
            a texture (value will be empty string).
          example: https://dodo.ac/np/images/f/f6/Academic_Painting_NH_Texture.png
          title: texture_url
          type: string
      title: NHArtwork_real_info
      type: object
    NHBug_north_availability_array_inner:
      properties:
        months:
          title: months
          type: string
        time:
          title: time
          type: string
      title: NHBug_north_availability_array_inner
      type: object
    NHBug_north_times_by_month:
      description: "An object with twelve numerical keys, each representing a month\
        \ (`\"1\"` for January, `\"2\"` for February, etc.). The value is the times\
        \ the critter is available during that month. If the critter is unavailable\
        \ in a month, the value will be `\"NA\"`."
      example:
        "1": NA
        "2": NA
        "3": NA
        "4": NA
        "5": NA
        "6": NA
        "7": 8 AM – 5 PM
        "8": 8 AM – 5 PM
        "9": 8 AM – 5 PM
        "10": NA
        "11": NA
        "12": NA
      properties:
        "1":
          type: string
        "2":
          type: string
        "3":
          type: string
        "4":
          type: string
        "5":
          type: string
        "6":
          type: string
        "7":
          type: string
        "8":
          type: string
        "9":
          type: string
        "10":
          type: string
        "11":
          type: string
        "12":
          type: string
      title: NHBug_north_times_by_month
      type: object
    NHBug_north:
      description: When you can catch the bug in the Northern hemisphere.
      example:
        months_array:
        - 7
        - 8
        - 9
        times_by_month:
          "1": NA
          "2": NA
          "3": NA
          "4": NA
          "5": NA
          "6": NA
          "7": 8 AM – 5 PM
          "8": 8 AM – 5 PM
          "9": 8 AM – 5 PM
          "10": NA
          "11": NA
          "12": NA
        months: Jul – Sep
        availability_array:
        - months: Jul – Sep
          time: 8 AM – 5 PM
      properties:
        availability_array:
          description: "An array of objects, each object holding a months string and\
            \ the time the critter is availabile during the specified month(s) in\
            \ the northern hemisphere. Most critters will have just one object. A\
            \ small number of critters have variable time availability in which case\
            \ this array will have multiple objects."
          example:
          - months: Jul – Sep
            time: 8 AM – 5 PM
          items:
            $ref: '#/components/schemas/NHBug_north_availability_array_inner'
          title: availability_array
          type: array
        months:
          description: "The months the bug is available for in the Northern hemisphere.\
            \ If all year, value will be `\"All year\"`."
          example: Jul – Sep
          title: months
          type: string
        months_array:
          description: An array of integers representing the months the bug is available
            in the Northern hemisphere.
          example:
          - 7
          - 8
          - 9
          items:
            type: integer
          title: months_array
          type: array
        times_by_month:
          $ref: '#/components/schemas/NHBug_north_times_by_month'
      title: NHBug_north
      type: object
    NHBug_south_times_by_month:
      description: "An object with twelve numerical keys, each representing a month\
        \ (`\"1\"` for January, `\"2\"` for February, etc.). The value is the times\
        \ the critter is available during that month. If the critter is unavailable\
        \ in a month, the value will be `\"NA\"`."
      example:
        "1": 8 AM – 5 PM
        "2": 8 AM – 5 PM
        "3": 8 AM – 5 PM
        "4": NA
        "5": NA
        "6": NA
        "7": NA
        "8": NA
        "9": NA
        "10": NA
        "11": NA
        "12": NA
      properties:
        "1":
          type: string
        "2":
          type: string
        "3":
          type: string
        "4":
          type: string
        "5":
          type: string
        "6":
          type: string
        "7":
          type: string
        "8":
          type: string
        "9":
          type: string
        "10":
          type: string
        "11":
          type: string
        "12":
          type: string
      title: NHBug_south_times_by_month
      type: object
    NHBug_south:
      description: When you can catch the bug in the Southern hemisphere.
      example:
        months_array:
        - 1
        - 2
        - 3
        times_by_month:
          "1": 8 AM – 5 PM
          "2": 8 AM – 5 PM
          "3": 8 AM – 5 PM
          "4": NA
          "5": NA
          "6": NA
          "7": NA
          "8": NA
          "9": NA
          "10": NA
          "11": NA
          "12": NA
        months: Jan – Mar
        availability_array:
        - months: Jan – Mar
          time: 8 AM – 5 PM
      properties:
        availability_array:
          description: "An array of objects, each object holding a months string and\
            \ the time the critter is availabile during the specified month(s) in\
            \ the southern hemisphere. Most critters will have just one object. A\
            \ small number of critters have variable time availability in which case\
            \ this array will have multiple objects."
          example:
          - months: Jan – Mar
            time: 8 AM – 5 PM
          items:
            $ref: '#/components/schemas/NHBug_north_availability_array_inner'
          title: availability_array
          type: array
        months:
          description: "The months the bug is available for in the Southern hemisphere.\
            \ If all year, value will be `\"All year\"`."
          example: Jan – Mar
          title: months
          type: string
        months_array:
          description: An array of integers representing the months the bug is available
            in the Southern hemisphere.
          example:
          - 1
          - 2
          - 3
          items:
            type: integer
          title: months_array
          type: array
        times_by_month:
          $ref: '#/components/schemas/NHBug_south_times_by_month'
      title: NHBug_south
      type: object
    NHClothing_availability_inner:
      properties:
        from:
          title: from
          type: string
        note:
          title: note
          type: string
      title: NHClothing_availability_inner
      type: object
    NHClothing_buy_inner:
      properties:
        currency:
          title: currency
          type: string
        price:
          title: price
          type: integer
      title: NHClothing_buy_inner
      type: object
    NHClothing_variations_inner:
      properties:
        colors:
          items:
            enum:
            - Aqua
            - Beige
            - Black
            - Blue
            - Brown
            - Colorful
            - Gray
            - Green
            - Orange
            - Pink
            - Purple
            - Red
            - White
            - Yellow
            type: string
          title: colors
          type: array
        image_url:
          title: image_url
          type: string
        variation:
          title: variation
          type: string
      title: NHClothing_variations_inner
      type: object
    NHFish_north_times_by_month:
      description: "An object with twelve numerical keys, each representing a month\
        \ (`\"1\"` for January, `\"2\"` for February, etc.). The value is the times\
        \ the critter is available during that month. If the critter is unavailable\
        \ in a month, the value will be `\"NA\"`."
      example:
        "1": NA
        "2": NA
        "3": 4 PM – 9 AM
        "4": 4 PM – 9 AM
        "5": 4 PM – 9 AM
        "6": 4 PM – 9 AM
        "7": NA
        "8": NA
        "9": All day
        "10": All day
        "11": All day
        "12": NA
      properties:
        "1":
          type: string
        "2":
          type: string
        "3":
          type: string
        "4":
          type: string
        "5":
          type: string
        "6":
          type: string
        "7":
          type: string
        "8":
          type: string
        "9":
          type: string
        "10":
          type: string
        "11":
          type: string
        "12":
          type: string
      title: NHFish_north_times_by_month
      type: object
    NHFish_north:
      description: When you can catch the fish in the Northern hemisphere.
      example:
        months_array:
        - 3
        - 4
        - 5
        - 6
        - 9
        - 10
        - 11
        times_by_month:
          "1": NA
          "2": NA
          "3": 4 PM – 9 AM
          "4": 4 PM – 9 AM
          "5": 4 PM – 9 AM
          "6": 4 PM – 9 AM
          "7": NA
          "8": NA
          "9": All day
          "10": All day
          "11": All day
          "12": NA
        months: Mar – Jun; Sep – Nov
        availability_array:
        - months: Mar – Jun
          time: 4 PM – 9 AM
        - months: Sep – Nov
          time: All day
      properties:
        availability_array:
          description: "An array of objects, each object holding a months string and\
            \ the time the critter is availabile during the specified month(s) in\
            \ the northern hemisphere. Most critters will have just one object. A\
            \ small number of critters have variable time availability in which case\
            \ this array will have multiple objects."
          example:
          - months: Mar – Jun
            time: 4 PM – 9 AM
          - months: Sep – Nov
            time: All day
          items:
            $ref: '#/components/schemas/NHBug_north_availability_array_inner'
          title: availability_array
          type: array
        months:
          description: "The months the fish is available for in the Northern hemisphere.\
            \ If all year, value will be `\"All year\"`."
          example: Mar – Jun; Sep – Nov
          title: months
          type: string
        months_array:
          description: An array of integers representing the months the fish is available
            in the Northern hemisphere.
          example:
          - 3
          - 4
          - 5
          - 6
          - 9
          - 10
          - 11
          items:
            type: integer
          title: months_array
          type: array
        times_by_month:
          $ref: '#/components/schemas/NHFish_north_times_by_month'
      title: NHFish_north
      type: object
    NHFish_south_times_by_month:
      description: "An object with twelve numerical keys, each representing a month\
        \ (`\"1\"` for January, `\"2\"` for February, etc.). The value is the times\
        \ the critter is available during that month. If the critter is unavailable\
        \ in a month, the value will be `\"NA\"`."
      example:
        "1": NA
        "2": NA
        "3": 4 PM – 9 AM
        "4": 4 PM – 9 AM
        "5": 4 PM – 9 AM
        "6": 4 PM – 9 AM
        "7": NA
        "8": NA
        "9": All day
        "10": All day
        "11": All day
        "12": NA
      properties:
        "1":
          type: string
        "4":
          type: string
        "5":
          type: string
        "6":
          type: string
        "7":
          type: string
        "8":
          type: string
        "9":
          type: string
        "10":
          type: string
        "11":
          type: string
        "12":
          type: string
        "2'":
          type: string
        "3'":
          type: string
      title: NHFish_south_times_by_month
      type: object
    NHFish_south:
      description: When you can catch the fish in the Southern hemisphere.
      example:
        months_array:
        - 3
        - 4
        - 5
        - 9
        - 10
        - 11
        - 12
        times_by_month:
          "1": NA
          "2": NA
          "3": 4 PM – 9 AM
          "4": 4 PM – 9 AM
          "5": 4 PM – 9 AM
          "6": 4 PM – 9 AM
          "7": NA
          "8": NA
          "9": All day
          "10": All day
          "11": All day
          "12": NA
        months: Mar – May; Sep – Dec
        availability_array:
        - months: Sep – Dec
          time: 4 PM – 9 AM
        - months: Mar – May
          time: All day
      properties:
        availability_array:
          description: "An array of objects, each object holding a months string and\
            \ the time the critter is availabile during the specified month(s) in\
            \ the southern hemisphere. Most critters will have just one object. A\
            \ small number of critters have variable time availability in which case\
            \ this array will have multiple objects."
          example:
          - months: Sep – Dec
            time: 4 PM – 9 AM
          - months: Mar – May
            time: All day
          items:
            $ref: '#/components/schemas/NHBug_north_availability_array_inner'
          title: availability_array
          type: array
        months:
          description: "The months the fish is available for in the Southern hemisphere.\
            \ If all year, value will be `\"All year\"`."
          example: Mar – May; Sep – Dec
          title: months
          type: string
        months_array:
          description: An array of integers representing the months the fish is available
            in the Southern hemisphere.
          example:
          - 3
          - 4
          - 5
          - 9
          - 10
          - 11
          - 12
          items:
            type: integer
          title: months_array
          type: array
        times_by_month:
          $ref: '#/components/schemas/NHFish_south_times_by_month'
      title: NHFish_south
      type: object
    NHFossilGroupWithIndividualFossils_fossils_inner:
      properties:
        colors:
          items:
            enum:
            - Aqua
            - Beige
            - Black
            - Blue
            - Brown
            - Colorful
            - Gray
            - Green
            - Orange
            - Pink
            - Purple
            - Red
            - White
            - Yellow
            type: string
          title: colors
          type: array
        fossil_group:
          title: fossil_group
          type: string
        hha_base:
          title: hha_base
          type: integer
        image_url:
          title: image_url
          type: string
        interactable:
          title: interactable
          type: boolean
        length:
          title: length
          type: integer
        name:
          example: Spino Skull
          title: name
          type: string
        sell:
          title: sell
          type: integer
        url:
          title: url
          type: string
        width:
          title: width
          type: integer
      title: NHFossilGroupWithIndividualFossils_fossils_inner
      type: object
    NHFossilGroupWithIndividualFossils_matched:
      example:
        name: Spino Skull
        type: individual
      properties:
        name:
          description: The name of the fossil or fossil group that matched the given
            query.
          example: Spino Skull
          title: name
          type: string
        type:
          description: "If the query given was a fossil group, `group` would be returned.\
            \ Otherwise, `individual` is returned."
          example: individual
          title: type
          type: string
      title: NHFossilGroupWithIndividualFossils_matched
      type: object
    NHFurniture_variations_inner:
      properties:
        colors:
          items:
            enum:
            - Aqua
            - Beige
            - Black
            - Blue
            - Brown
            - Colorful
            - Gray
            - Green
            - Orange
            - Pink
            - Purple
            - Red
            - White
            - Yellow
            type: string
          title: colors
          type: array
        image_url:
          title: image_url
          type: string
        pattern:
          title: pattern
          type: string
        variation:
          title: variation
          type: string
      title: NHFurniture_variations_inner
      type: object
    NHRecipe_materials_inner:
      properties:
        count:
          title: count
          type: integer
        name:
          title: name
          type: string
      title: NHRecipe_materials_inner
      type: object
    NHSeaCreature_north_times_by_month:
      description: "An object with twelve numerical keys, each representing a month\
        \ (`\"1\"` for January, `\"2\"` for February, etc.). The value is the times\
        \ the critter is available during that month. If the critter is unavailable\
        \ in a month, the value will be `\"NA\"`."
      example:
        "1": All day
        "2": All day
        "3": All day
        "4": All day
        "5": All day
        "6": All day
        "7": All day
        "8": All day
        "9": All day
        "10": All day
        "11": All day
        "12": All day
      properties:
        "1":
          type: string
        "2":
          type: string
        "3":
          type: string
        "4":
          type: string
        "5":
          type: string
        "6":
          type: string
        "7":
          type: string
        "8":
          type: string
        "9":
          type: string
        "10":
          type: string
        "11":
          type: string
        "12":
          type: string
      title: NHSeaCreature_north_times_by_month
      type: object
    NHSeaCreature_north:
      description: When you can catch the sea creature in the Northern hemisphere.
      example:
        months_array:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        times_by_month:
          "1": All day
          "2": All day
          "3": All day
          "4": All day
          "5": All day
          "6": All day
          "7": All day
          "8": All day
          "9": All day
          "10": All day
          "11": All day
          "12": All day
        months: Jul – Sep
        availability_array:
        - months: All year
          time: All day
      properties:
        availability_array:
          description: "An array of objects, each object holding a months string and\
            \ the time the critter is availabile during the specified month(s) in\
            \ the northern hemisphere. Most critters will have just one object. A\
            \ small number of critters have variable time availability in which case\
            \ this array will have multiple objects."
          example:
          - months: All year
            time: All day
          items:
            $ref: '#/components/schemas/NHBug_north_availability_array_inner'
          title: availability_array
          type: array
        months:
          description: "The months the sea creature is available for in the Northern\
            \ hemisphere. If all year, value will be `\"All year\"`."
          example: Jul – Sep
          title: months
          type: string
        months_array:
          description: An array of integers representing the months the sea creature
            is available in the Northern hemisphere.
          example:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          items:
            type: integer
          title: months_array
          type: array
        times_by_month:
          $ref: '#/components/schemas/NHSeaCreature_north_times_by_month'
      title: NHSeaCreature_north
      type: object
    NHSeaCreature_south:
      description: When you can catch the sea creature in the Southern hemisphere.
      example:
        months_array:
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        times_by_month:
          "1": All day
          "2": All day
          "3": All day
          "4": All day
          "5": All day
          "6": All day
          "7": All day
          "8": All day
          "9": All day
          "10": All day
          "11": All day
          "12": All day
        months: Jan – Mar
        availability_array:
        - months: All year
          time: All day
      properties:
        availability_array:
          description: "An array of objects, each object holding a months string and\
            \ the time the critter is availabile during the specified month(s) in\
            \ the southern hemisphere. Most critters will have just one object. A\
            \ small number of critters have variable time availability in which case\
            \ this array will have multiple objects."
          example:
          - months: All year
            time: All day
          items:
            $ref: '#/components/schemas/NHBug_north_availability_array_inner'
          title: availability_array
          type: array
        months:
          description: "The months the sea creature is available for in the Southern\
            \ hemisphere. If all year, value will be `\"All year\"`."
          example: Jan – Mar
          title: months
          type: string
        months_array:
          description: An array of integers representing the months the sea creature
            is available in the Southern hemisphere.
          example:
          - 1
          - 2
          - 3
          - 4
          - 5
          - 6
          - 7
          - 8
          - 9
          - 10
          - 11
          - 12
          items:
            type: integer
          title: months_array
          type: array
        times_by_month:
          $ref: '#/components/schemas/NHSeaCreature_north_times_by_month'
      title: NHSeaCreature_south
      type: object
    NHTool_variations_inner:
      properties:
        image_url:
          title: image_url
          type: string
        variation:
          title: variation
          type: string
      title: NHTool_variations_inner
      type: object
    Villager_nh_details:
      description: "An object that holds villager data specific to *New Horizons*.\
        \ If the villager does not appear in *New Horizons*, this field will be set\
        \ to null."
      example:
        icon_url: https://dodo.ac/np/images/8/87/Ribbot_NH_Villager_Icon.png
        fav_styles:
        - Simple
        - Active
        catchphrase: zzrrbbit
        house_exterior_url: https://dodo.ac/np/images/4/42/House_of_Ribbot_NH_Model.png
        image_url: https://dodo.ac/np/images/9/94/Ribbot_NH.png
        sub-personality: B
        house_music: K.K. Technopop
        clothing_variation: Light Blue
        quote: "Never rest, never rust."
        house_music_note: ""
        clothing: Simple Parka
        photo_url: https://dodo.ac/np/images/0/03/RibbotPicACNH.png
        house_flooring: Future-Tech Flooring
        house_wallpaper: Circuit-Board Wall
        fav_colors:
        - Blue
        - Aqua
        hobby: Fitness
        house_interior_url: https://dodo.ac/np/images/8/86/House_of_Ribbot_NH.png
      properties:
        catchphrase:
          description: The default phrase a villager will use when speaking to the
            player.
          example: zzrrbbit
          title: catchphrase
          type: string
        clothing:
          description: The default clothing that the villager wears.
          example: Simple Parka
          title: clothing
          type: string
        clothing_variation:
          description: The variation of the clothing (usually a color).
          example: Light Blue
          title: clothing_variation
          type: string
        fav_colors:
          description: The villager's favorite colors (giving the villager a gift
            with one of their favorite colors increases friendship points).
          example:
          - Blue
          - Aqua
          items:
            type: string
          title: fav_colors
          type: array
        fav_styles:
          description: The villager's favorite clothing styles.
          example:
          - Simple
          - Active
          items:
            type: string
          title: fav_styles
          type: array
        hobby:
          description: "The villager's primary hobby, which determines most of the\
            \ activities they will do around the island (e.g. education villagers\
            \ will frequently read books and visit the museum). Learn more at https://nookipedia.com/wiki/Hobbies"
          enum:
          - Education
          - Fashion
          - Fitness
          - Music
          - Nature
          - Play
          example: Fitness
          title: hobby
          type: string
        house_exterior_url:
          description: "A rendered model of the villager's house exterior. Note that\
            \ this is not an official Nintendo asset, but a render based of the in-game\
            \ model."
          example: https://dodo.ac/np/images/4/42/House_of_Ribbot_NH_Model.png
          title: house_exterior_url
          type: string
        house_flooring:
          description: The flooring in the villager's house.
          example: Future-Tech Flooring
          title: house_flooring
          type: string
        house_interior_url:
          description: A screenshot of the villager's house interior.
          example: https://dodo.ac/np/images/8/86/House_of_Ribbot_NH.png
          title: house_interior_url
          type: string
        house_music:
          description: The music in the villager's house.
          example: K.K. Technopop
          title: house_music
          type: string
        house_music_note:
          description: "Any notes about the villager's music. If populated, this is\
            \ usually \"Does not contain a stereo initially\", meaning that the villager's\
            \ house will not play music unless provided with a stereo."
          example: ""
          title: house_music_note
          type: string
        house_wallpaper:
          description: The wallpaper in the villager's house.
          example: Circuit-Board Wall
          title: house_wallpaper
          type: string
        icon_url:
          description: The villager's icon of their head. See https://nookipedia.com/wiki/Category:New_Horizons_character_icons
            for full list.
          example: https://dodo.ac/np/images/8/87/Ribbot_NH_Villager_Icon.png
          title: icon_url
          type: string
        image_url:
          description: Image of the villager from *New Horizons*.
          example: https://dodo.ac/np/images/9/94/Ribbot_NH.png
          title: image_url
          type: string
        photo_url:
          description: "The villager's photo, received by the player after attaining\
            \ a certain friendship level. See https://nookipedia.com/wiki/Category:New_Horizons_pictures\
            \ for full list."
          example: https://dodo.ac/np/images/0/03/RibbotPicACNH.png
          title: photo_url
          type: string
        quote:
          description: "The villager's quote, as found on the back of their in-game\
            \ photo."
          example: "Never rest, never rust."
          title: quote
          type: string
        sub-personality:
          description: "Each personality in *New Horizons* has two sub-personalities,\
            \ currently referred to as just A and B. The effect of a sub-personality\
            \ is currently unknown."
          enum:
          - A
          - B
          example: B
          title: sub-personality
          type: string
      title: Villager_nh_details
      type: object
