# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NHFossilGroup(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, name: str=None, room: int=None, url: str=None):
        """NHFossilGroup - a model defined in OpenAPI

        :param description: The description of this NHFossilGroup.
        :param name: The name of this NHFossilGroup.
        :param room: The room of this NHFossilGroup.
        :param url: The url of this NHFossilGroup.
        """
        self.openapi_types = {
            'description': str,
            'name': str,
            'room': int,
            'url': str
        }

        self.attribute_map = {
            'description': 'description',
            'name': 'name',
            'room': 'room',
            'url': 'url'
        }

        self._description = description
        self._name = name
        self._room = room
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NHFossilGroup':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NHFossilGroup of this NHFossilGroup.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this NHFossilGroup.

        A description of the fossil group.

        :return: The description of this NHFossilGroup.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this NHFossilGroup.

        A description of the fossil group.

        :param description: The description of this NHFossilGroup.
        :type description: str
        """

        self._description = description

    @property
    def name(self):
        """Gets the name of this NHFossilGroup.

        The name of the fossil group.

        :return: The name of this NHFossilGroup.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this NHFossilGroup.

        The name of the fossil group.

        :param name: The name of this NHFossilGroup.
        :type name: str
        """

        self._name = name

    @property
    def room(self):
        """Gets the room of this NHFossilGroup.

        The room where the fossil group can be found in the museum's fossil section.

        :return: The room of this NHFossilGroup.
        :rtype: int
        """
        return self._room

    @room.setter
    def room(self, room):
        """Sets the room of this NHFossilGroup.

        The room where the fossil group can be found in the museum's fossil section.

        :param room: The room of this NHFossilGroup.
        :type room: int
        """

        self._room = room

    @property
    def url(self):
        """Gets the url of this NHFossilGroup.

        Link to the respective Nookipedia article.

        :return: The url of this NHFossilGroup.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this NHFossilGroup.

        Link to the respective Nookipedia article.

        :param url: The url of this NHFossilGroup.
        :type url: str
        """

        self._url = url
