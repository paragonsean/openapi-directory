# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.nh_bug_north_availability_array_inner import NHBugNorthAvailabilityArrayInner
from openapi_server.models.nh_fish_north_times_by_month import NHFishNorthTimesByMonth
from openapi_server import util


class NHFishNorth(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, availability_array: List[NHBugNorthAvailabilityArrayInner]=None, months: str=None, months_array: List[int]=None, times_by_month: NHFishNorthTimesByMonth=None):
        """NHFishNorth - a model defined in OpenAPI

        :param availability_array: The availability_array of this NHFishNorth.
        :param months: The months of this NHFishNorth.
        :param months_array: The months_array of this NHFishNorth.
        :param times_by_month: The times_by_month of this NHFishNorth.
        """
        self.openapi_types = {
            'availability_array': List[NHBugNorthAvailabilityArrayInner],
            'months': str,
            'months_array': List[int],
            'times_by_month': NHFishNorthTimesByMonth
        }

        self.attribute_map = {
            'availability_array': 'availability_array',
            'months': 'months',
            'months_array': 'months_array',
            'times_by_month': 'times_by_month'
        }

        self._availability_array = availability_array
        self._months = months
        self._months_array = months_array
        self._times_by_month = times_by_month

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NHFishNorth':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NHFish_north of this NHFishNorth.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def availability_array(self):
        """Gets the availability_array of this NHFishNorth.

        An array of objects, each object holding a months string and the time the critter is availabile during the specified month(s) in the northern hemisphere. Most critters will have just one object. A small number of critters have variable time availability in which case this array will have multiple objects.

        :return: The availability_array of this NHFishNorth.
        :rtype: List[NHBugNorthAvailabilityArrayInner]
        """
        return self._availability_array

    @availability_array.setter
    def availability_array(self, availability_array):
        """Sets the availability_array of this NHFishNorth.

        An array of objects, each object holding a months string and the time the critter is availabile during the specified month(s) in the northern hemisphere. Most critters will have just one object. A small number of critters have variable time availability in which case this array will have multiple objects.

        :param availability_array: The availability_array of this NHFishNorth.
        :type availability_array: List[NHBugNorthAvailabilityArrayInner]
        """

        self._availability_array = availability_array

    @property
    def months(self):
        """Gets the months of this NHFishNorth.

        The months the fish is available for in the Northern hemisphere. If all year, value will be `\"All year\"`.

        :return: The months of this NHFishNorth.
        :rtype: str
        """
        return self._months

    @months.setter
    def months(self, months):
        """Sets the months of this NHFishNorth.

        The months the fish is available for in the Northern hemisphere. If all year, value will be `\"All year\"`.

        :param months: The months of this NHFishNorth.
        :type months: str
        """

        self._months = months

    @property
    def months_array(self):
        """Gets the months_array of this NHFishNorth.

        An array of integers representing the months the fish is available in the Northern hemisphere.

        :return: The months_array of this NHFishNorth.
        :rtype: List[int]
        """
        return self._months_array

    @months_array.setter
    def months_array(self, months_array):
        """Sets the months_array of this NHFishNorth.

        An array of integers representing the months the fish is available in the Northern hemisphere.

        :param months_array: The months_array of this NHFishNorth.
        :type months_array: List[int]
        """

        self._months_array = months_array

    @property
    def times_by_month(self):
        """Gets the times_by_month of this NHFishNorth.


        :return: The times_by_month of this NHFishNorth.
        :rtype: NHFishNorthTimesByMonth
        """
        return self._times_by_month

    @times_by_month.setter
    def times_by_month(self, times_by_month):
        """Sets the times_by_month of this NHFishNorth.


        :param times_by_month: The times_by_month of this NHFishNorth.
        :type times_by_month: NHFishNorthTimesByMonth
        """

        self._times_by_month = times_by_month
