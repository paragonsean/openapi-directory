/*
 * Nookipedia
 * The Nookipedia API provides endpoints for retrieving *Animal Crossing* data pulled from the [Nookipedia wiki](https://nookipedia.com/wiki/Main_Page). A couple of the key benefits of using the Nookipedia API is access to data spanning the entire *Animal Crossing* series, as well as information that is constantly updated and expanding as editors work on the wiki.<br><br>Access to the Nookipedia API requires obtaining a key. This is so we can manage our scale and provide better support for our users. To request access to the API, please fill out [this form](https://forms.gle/wLwtXLerKhfDrRLY8).
 *
 * The version of the OpenAPI document: 1.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.NHClothingAvailabilityInner;
import org.openapitools.client.model.NHClothingBuyInner;
import org.openapitools.client.model.NHClothingVariationsInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for NHClothing
 */
public class NHClothingTest {
    private final NHClothing model = new NHClothing();

    /**
     * Model tests for NHClothing
     */
    @Test
    public void testNHClothing() {
        // TODO: test NHClothing
    }

    /**
     * Test the property 'availability'
     */
    @Test
    public void availabilityTest() {
        // TODO: test availability
    }

    /**
     * Test the property 'buy'
     */
    @Test
    public void buyTest() {
        // TODO: test buy
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'labelThemes'
     */
    @Test
    public void labelThemesTest() {
        // TODO: test labelThemes
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'notes'
     */
    @Test
    public void notesTest() {
        // TODO: test notes
    }

    /**
     * Test the property 'seasonality'
     */
    @Test
    public void seasonalityTest() {
        // TODO: test seasonality
    }

    /**
     * Test the property 'sell'
     */
    @Test
    public void sellTest() {
        // TODO: test sell
    }

    /**
     * Test the property 'styles'
     */
    @Test
    public void stylesTest() {
        // TODO: test styles
    }

    /**
     * Test the property 'unlocked'
     */
    @Test
    public void unlockedTest() {
        // TODO: test unlocked
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'variationTotal'
     */
    @Test
    public void variationTotalTest() {
        // TODO: test variationTotal
    }

    /**
     * Test the property 'variations'
     */
    @Test
    public void variationsTest() {
        // TODO: test variations
    }

    /**
     * Test the property 'versionAdded'
     */
    @Test
    public void versionAddedTest() {
        // TODO: test versionAdded
    }

    /**
     * Test the property 'villEquip'
     */
    @Test
    public void villEquipTest() {
        // TODO: test villEquip
    }

}
