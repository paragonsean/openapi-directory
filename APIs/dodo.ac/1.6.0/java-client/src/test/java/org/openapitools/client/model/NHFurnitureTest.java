/*
 * Nookipedia
 * The Nookipedia API provides endpoints for retrieving *Animal Crossing* data pulled from the [Nookipedia wiki](https://nookipedia.com/wiki/Main_Page). A couple of the key benefits of using the Nookipedia API is access to data spanning the entire *Animal Crossing* series, as well as information that is constantly updated and expanding as editors work on the wiki.<br><br>Access to the Nookipedia API requires obtaining a key. This is so we can manage our scale and provide better support for our users. To request access to the API, please fill out [this form](https://forms.gle/wLwtXLerKhfDrRLY8).
 *
 * The version of the OpenAPI document: 1.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.NHClothingAvailabilityInner;
import org.openapitools.client.model.NHClothingBuyInner;
import org.openapitools.client.model.NHFurnitureVariationsInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for NHFurniture
 */
public class NHFurnitureTest {
    private final NHFurniture model = new NHFurniture();

    /**
     * Model tests for NHFurniture
     */
    @Test
    public void testNHFurniture() {
        // TODO: test NHFurniture
    }

    /**
     * Test the property 'availability'
     */
    @Test
    public void availabilityTest() {
        // TODO: test availability
    }

    /**
     * Test the property 'buy'
     */
    @Test
    public void buyTest() {
        // TODO: test buy
    }

    /**
     * Test the property 'category'
     */
    @Test
    public void categoryTest() {
        // TODO: test category
    }

    /**
     * Test the property 'customBodyPart'
     */
    @Test
    public void customBodyPartTest() {
        // TODO: test customBodyPart
    }

    /**
     * Test the property 'customKitType'
     */
    @Test
    public void customKitTypeTest() {
        // TODO: test customKitType
    }

    /**
     * Test the property 'customKits'
     */
    @Test
    public void customKitsTest() {
        // TODO: test customKits
    }

    /**
     * Test the property 'customPatternPart'
     */
    @Test
    public void customPatternPartTest() {
        // TODO: test customPatternPart
    }

    /**
     * Test the property 'customizable'
     */
    @Test
    public void customizableTest() {
        // TODO: test customizable
    }

    /**
     * Test the property 'doorDecor'
     */
    @Test
    public void doorDecorTest() {
        // TODO: test doorDecor
    }

    /**
     * Test the property 'functions'
     */
    @Test
    public void functionsTest() {
        // TODO: test functions
    }

    /**
     * Test the property 'gridLength'
     */
    @Test
    public void gridLengthTest() {
        // TODO: test gridLength
    }

    /**
     * Test the property 'gridWidth'
     */
    @Test
    public void gridWidthTest() {
        // TODO: test gridWidth
    }

    /**
     * Test the property 'height'
     */
    @Test
    public void heightTest() {
        // TODO: test height
    }

    /**
     * Test the property 'hhaBase'
     */
    @Test
    public void hhaBaseTest() {
        // TODO: test hhaBase
    }

    /**
     * Test the property 'hhaCategory'
     */
    @Test
    public void hhaCategoryTest() {
        // TODO: test hhaCategory
    }

    /**
     * Test the property 'itemSeries'
     */
    @Test
    public void itemSeriesTest() {
        // TODO: test itemSeries
    }

    /**
     * Test the property 'itemSet'
     */
    @Test
    public void itemSetTest() {
        // TODO: test itemSet
    }

    /**
     * Test the property 'lucky'
     */
    @Test
    public void luckyTest() {
        // TODO: test lucky
    }

    /**
     * Test the property 'luckySeason'
     */
    @Test
    public void luckySeasonTest() {
        // TODO: test luckySeason
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'notes'
     */
    @Test
    public void notesTest() {
        // TODO: test notes
    }

    /**
     * Test the property 'patternTotal'
     */
    @Test
    public void patternTotalTest() {
        // TODO: test patternTotal
    }

    /**
     * Test the property 'sell'
     */
    @Test
    public void sellTest() {
        // TODO: test sell
    }

    /**
     * Test the property 'tag'
     */
    @Test
    public void tagTest() {
        // TODO: test tag
    }

    /**
     * Test the property 'themes'
     */
    @Test
    public void themesTest() {
        // TODO: test themes
    }

    /**
     * Test the property 'unlocked'
     */
    @Test
    public void unlockedTest() {
        // TODO: test unlocked
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'variationTotal'
     */
    @Test
    public void variationTotalTest() {
        // TODO: test variationTotal
    }

    /**
     * Test the property 'variations'
     */
    @Test
    public void variationsTest() {
        // TODO: test variations
    }

    /**
     * Test the property 'versionAdded'
     */
    @Test
    public void versionAddedTest() {
        // TODO: test versionAdded
    }

}
