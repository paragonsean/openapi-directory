/*
 * Nookipedia
 * The Nookipedia API provides endpoints for retrieving *Animal Crossing* data pulled from the [Nookipedia wiki](https://nookipedia.com/wiki/Main_Page). A couple of the key benefits of using the Nookipedia API is access to data spanning the entire *Animal Crossing* series, as well as information that is constantly updated and expanding as editors work on the wiki.<br><br>Access to the Nookipedia API requires obtaining a key. This is so we can manage our scale and provide better support for our users. To request access to the API, please fill out [this form](https://forms.gle/wLwtXLerKhfDrRLY8).
 *
 * The version of the OpenAPI document: 1.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.NHSeaCreatureNorth;
import org.openapitools.client.model.NHSeaCreatureSouth;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for NHSeaCreature
 */
public class NHSeaCreatureTest {
    private final NHSeaCreature model = new NHSeaCreature();

    /**
     * Model tests for NHSeaCreature
     */
    @Test
    public void testNHSeaCreature() {
        // TODO: test NHSeaCreature
    }

    /**
     * Test the property 'catchphrases'
     */
    @Test
    public void catchphrasesTest() {
        // TODO: test catchphrases
    }

    /**
     * Test the property 'imageUrl'
     */
    @Test
    public void imageUrlTest() {
        // TODO: test imageUrl
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'north'
     */
    @Test
    public void northTest() {
        // TODO: test north
    }

    /**
     * Test the property 'number'
     */
    @Test
    public void numberTest() {
        // TODO: test number
    }

    /**
     * Test the property 'rarity'
     */
    @Test
    public void rarityTest() {
        // TODO: test rarity
    }

    /**
     * Test the property 'renderUrl'
     */
    @Test
    public void renderUrlTest() {
        // TODO: test renderUrl
    }

    /**
     * Test the property 'sellNook'
     */
    @Test
    public void sellNookTest() {
        // TODO: test sellNook
    }

    /**
     * Test the property 'shadowMovement'
     */
    @Test
    public void shadowMovementTest() {
        // TODO: test shadowMovement
    }

    /**
     * Test the property 'shadowSize'
     */
    @Test
    public void shadowSizeTest() {
        // TODO: test shadowSize
    }

    /**
     * Test the property 'south'
     */
    @Test
    public void southTest() {
        // TODO: test south
    }

    /**
     * Test the property 'tankLength'
     */
    @Test
    public void tankLengthTest() {
        // TODO: test tankLength
    }

    /**
     * Test the property 'tankWidth'
     */
    @Test
    public void tankWidthTest() {
        // TODO: test tankWidth
    }

    /**
     * Test the property 'totalCatch'
     */
    @Test
    public void totalCatchTest() {
        // TODO: test totalCatch
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

}
