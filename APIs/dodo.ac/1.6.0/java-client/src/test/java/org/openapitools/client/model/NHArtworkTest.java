/*
 * Nookipedia
 * The Nookipedia API provides endpoints for retrieving *Animal Crossing* data pulled from the [Nookipedia wiki](https://nookipedia.com/wiki/Main_Page). A couple of the key benefits of using the Nookipedia API is access to data spanning the entire *Animal Crossing* series, as well as information that is constantly updated and expanding as editors work on the wiki.<br><br>Access to the Nookipedia API requires obtaining a key. This is so we can manage our scale and provide better support for our users. To request access to the API, please fill out [this form](https://forms.gle/wLwtXLerKhfDrRLY8).
 *
 * The version of the OpenAPI document: 1.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.NHArtworkFakeInfo;
import org.openapitools.client.model.NHArtworkRealInfo;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for NHArtwork
 */
public class NHArtworkTest {
    private final NHArtwork model = new NHArtwork();

    /**
     * Model tests for NHArtwork
     */
    @Test
    public void testNHArtwork() {
        // TODO: test NHArtwork
    }

    /**
     * Test the property 'artName'
     */
    @Test
    public void artNameTest() {
        // TODO: test artName
    }

    /**
     * Test the property 'artStyle'
     */
    @Test
    public void artStyleTest() {
        // TODO: test artStyle
    }

    /**
     * Test the property 'artType'
     */
    @Test
    public void artTypeTest() {
        // TODO: test artType
    }

    /**
     * Test the property 'author'
     */
    @Test
    public void authorTest() {
        // TODO: test author
    }

    /**
     * Test the property 'availability'
     */
    @Test
    public void availabilityTest() {
        // TODO: test availability
    }

    /**
     * Test the property 'buy'
     */
    @Test
    public void buyTest() {
        // TODO: test buy
    }

    /**
     * Test the property 'fakeInfo'
     */
    @Test
    public void fakeInfoTest() {
        // TODO: test fakeInfo
    }

    /**
     * Test the property 'hasFake'
     */
    @Test
    public void hasFakeTest() {
        // TODO: test hasFake
    }

    /**
     * Test the property 'length'
     */
    @Test
    public void lengthTest() {
        // TODO: test length
    }

    /**
     * Test the property 'name'
     */
    @Test
    public void nameTest() {
        // TODO: test name
    }

    /**
     * Test the property 'realInfo'
     */
    @Test
    public void realInfoTest() {
        // TODO: test realInfo
    }

    /**
     * Test the property 'sell'
     */
    @Test
    public void sellTest() {
        // TODO: test sell
    }

    /**
     * Test the property 'url'
     */
    @Test
    public void urlTest() {
        // TODO: test url
    }

    /**
     * Test the property 'width'
     */
    @Test
    public void widthTest() {
        // TODO: test width
    }

    /**
     * Test the property 'year'
     */
    @Test
    public void yearTest() {
        // TODO: test year
    }

}
