/**
 * Nookipedia
 * The Nookipedia API provides endpoints for retrieving *Animal Crossing* data pulled from the [Nookipedia wiki](https://nookipedia.com/wiki/Main_Page). A couple of the key benefits of using the Nookipedia API is access to data spanning the entire *Animal Crossing* series, as well as information that is constantly updated and expanding as editors work on the wiki.<br><br>Access to the Nookipedia API requires obtaining a key. This is so we can manage our scale and provide better support for our users. To request access to the API, please fill out [this form](https://forms.gle/wLwtXLerKhfDrRLY8).
 *
 * The version of the OpenAPI document: 1.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Nookipedia);
  }
}(this, function(expect, Nookipedia) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Nookipedia.NHFurniture();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NHFurniture', function() {
    it('should create an instance of NHFurniture', function() {
      // uncomment below and update the code to test NHFurniture
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be.a(Nookipedia.NHFurniture);
    });

    it('should have the property availability (base name: "availability")', function() {
      // uncomment below and update the code to test the property availability
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property buy (base name: "buy")', function() {
      // uncomment below and update the code to test the property buy
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property category (base name: "category")', function() {
      // uncomment below and update the code to test the property category
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property customBodyPart (base name: "custom_body_part")', function() {
      // uncomment below and update the code to test the property customBodyPart
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property customKitType (base name: "custom_kit_type")', function() {
      // uncomment below and update the code to test the property customKitType
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property customKits (base name: "custom_kits")', function() {
      // uncomment below and update the code to test the property customKits
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property customPatternPart (base name: "custom_pattern_part")', function() {
      // uncomment below and update the code to test the property customPatternPart
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property customizable (base name: "customizable")', function() {
      // uncomment below and update the code to test the property customizable
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property doorDecor (base name: "door_decor")', function() {
      // uncomment below and update the code to test the property doorDecor
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property functions (base name: "functions")', function() {
      // uncomment below and update the code to test the property functions
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property gridLength (base name: "grid_length")', function() {
      // uncomment below and update the code to test the property gridLength
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property gridWidth (base name: "grid_width")', function() {
      // uncomment below and update the code to test the property gridWidth
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property height (base name: "height")', function() {
      // uncomment below and update the code to test the property height
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property hhaBase (base name: "hha_base")', function() {
      // uncomment below and update the code to test the property hhaBase
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property hhaCategory (base name: "hha_category")', function() {
      // uncomment below and update the code to test the property hhaCategory
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property itemSeries (base name: "item_series")', function() {
      // uncomment below and update the code to test the property itemSeries
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property itemSet (base name: "item_set")', function() {
      // uncomment below and update the code to test the property itemSet
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property lucky (base name: "lucky")', function() {
      // uncomment below and update the code to test the property lucky
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property luckySeason (base name: "lucky_season")', function() {
      // uncomment below and update the code to test the property luckySeason
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property patternTotal (base name: "pattern_total")', function() {
      // uncomment below and update the code to test the property patternTotal
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property sell (base name: "sell")', function() {
      // uncomment below and update the code to test the property sell
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property tag (base name: "tag")', function() {
      // uncomment below and update the code to test the property tag
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property themes (base name: "themes")', function() {
      // uncomment below and update the code to test the property themes
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property unlocked (base name: "unlocked")', function() {
      // uncomment below and update the code to test the property unlocked
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property variationTotal (base name: "variation_total")', function() {
      // uncomment below and update the code to test the property variationTotal
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property variations (base name: "variations")', function() {
      // uncomment below and update the code to test the property variations
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

    it('should have the property versionAdded (base name: "version_added")', function() {
      // uncomment below and update the code to test the property versionAdded
      //var instance = new Nookipedia.NHFurniture();
      //expect(instance).to.be();
    });

  });

}));
