/**
 * Nookipedia
 * The Nookipedia API provides endpoints for retrieving *Animal Crossing* data pulled from the [Nookipedia wiki](https://nookipedia.com/wiki/Main_Page). A couple of the key benefits of using the Nookipedia API is access to data spanning the entire *Animal Crossing* series, as well as information that is constantly updated and expanding as editors work on the wiki.<br><br>Access to the Nookipedia API requires obtaining a key. This is so we can manage our scale and provide better support for our users. To request access to the API, please fill out [this form](https://forms.gle/wLwtXLerKhfDrRLY8).
 *
 * The version of the OpenAPI document: 1.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Nookipedia);
  }
}(this, function(expect, Nookipedia) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Nookipedia.NHIndividualFossil();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('NHIndividualFossil', function() {
    it('should create an instance of NHIndividualFossil', function() {
      // uncomment below and update the code to test NHIndividualFossil
      //var instance = new Nookipedia.NHIndividualFossil();
      //expect(instance).to.be.a(Nookipedia.NHIndividualFossil);
    });

    it('should have the property colors (base name: "colors")', function() {
      // uncomment below and update the code to test the property colors
      //var instance = new Nookipedia.NHIndividualFossil();
      //expect(instance).to.be();
    });

    it('should have the property fossilGroup (base name: "fossil_group")', function() {
      // uncomment below and update the code to test the property fossilGroup
      //var instance = new Nookipedia.NHIndividualFossil();
      //expect(instance).to.be();
    });

    it('should have the property hhaBase (base name: "hha_base")', function() {
      // uncomment below and update the code to test the property hhaBase
      //var instance = new Nookipedia.NHIndividualFossil();
      //expect(instance).to.be();
    });

    it('should have the property imageUrl (base name: "image_url")', function() {
      // uncomment below and update the code to test the property imageUrl
      //var instance = new Nookipedia.NHIndividualFossil();
      //expect(instance).to.be();
    });

    it('should have the property interactable (base name: "interactable")', function() {
      // uncomment below and update the code to test the property interactable
      //var instance = new Nookipedia.NHIndividualFossil();
      //expect(instance).to.be();
    });

    it('should have the property length (base name: "length")', function() {
      // uncomment below and update the code to test the property length
      //var instance = new Nookipedia.NHIndividualFossil();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new Nookipedia.NHIndividualFossil();
      //expect(instance).to.be();
    });

    it('should have the property sell (base name: "sell")', function() {
      // uncomment below and update the code to test the property sell
      //var instance = new Nookipedia.NHIndividualFossil();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new Nookipedia.NHIndividualFossil();
      //expect(instance).to.be();
    });

    it('should have the property width (base name: "width")', function() {
      // uncomment below and update the code to test the property width
      //var instance = new Nookipedia.NHIndividualFossil();
      //expect(instance).to.be();
    });

  });

}));
