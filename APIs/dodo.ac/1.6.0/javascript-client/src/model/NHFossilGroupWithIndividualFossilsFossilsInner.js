/**
 * Nookipedia
 * The Nookipedia API provides endpoints for retrieving *Animal Crossing* data pulled from the [Nookipedia wiki](https://nookipedia.com/wiki/Main_Page). A couple of the key benefits of using the Nookipedia API is access to data spanning the entire *Animal Crossing* series, as well as information that is constantly updated and expanding as editors work on the wiki.<br><br>Access to the Nookipedia API requires obtaining a key. This is so we can manage our scale and provide better support for our users. To request access to the API, please fill out [this form](https://forms.gle/wLwtXLerKhfDrRLY8).
 *
 * The version of the OpenAPI document: 1.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NHFossilGroupWithIndividualFossilsFossilsInner model module.
 * @module model/NHFossilGroupWithIndividualFossilsFossilsInner
 * @version 1.6.0
 */
class NHFossilGroupWithIndividualFossilsFossilsInner {
    /**
     * Constructs a new <code>NHFossilGroupWithIndividualFossilsFossilsInner</code>.
     * @alias module:model/NHFossilGroupWithIndividualFossilsFossilsInner
     */
    constructor() { 
        
        NHFossilGroupWithIndividualFossilsFossilsInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>NHFossilGroupWithIndividualFossilsFossilsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NHFossilGroupWithIndividualFossilsFossilsInner} obj Optional instance to populate.
     * @return {module:model/NHFossilGroupWithIndividualFossilsFossilsInner} The populated <code>NHFossilGroupWithIndividualFossilsFossilsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NHFossilGroupWithIndividualFossilsFossilsInner();

            if (data.hasOwnProperty('colors')) {
                obj['colors'] = ApiClient.convertToType(data['colors'], ['String']);
            }
            if (data.hasOwnProperty('fossil_group')) {
                obj['fossil_group'] = ApiClient.convertToType(data['fossil_group'], 'String');
            }
            if (data.hasOwnProperty('hha_base')) {
                obj['hha_base'] = ApiClient.convertToType(data['hha_base'], 'Number');
            }
            if (data.hasOwnProperty('image_url')) {
                obj['image_url'] = ApiClient.convertToType(data['image_url'], 'String');
            }
            if (data.hasOwnProperty('interactable')) {
                obj['interactable'] = ApiClient.convertToType(data['interactable'], 'Boolean');
            }
            if (data.hasOwnProperty('length')) {
                obj['length'] = ApiClient.convertToType(data['length'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('sell')) {
                obj['sell'] = ApiClient.convertToType(data['sell'], 'Number');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('width')) {
                obj['width'] = ApiClient.convertToType(data['width'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NHFossilGroupWithIndividualFossilsFossilsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NHFossilGroupWithIndividualFossilsFossilsInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['colors'])) {
            throw new Error("Expected the field `colors` to be an array in the JSON data but got " + data['colors']);
        }
        // ensure the json data is a string
        if (data['fossil_group'] && !(typeof data['fossil_group'] === 'string' || data['fossil_group'] instanceof String)) {
            throw new Error("Expected the field `fossil_group` to be a primitive type in the JSON string but got " + data['fossil_group']);
        }
        // ensure the json data is a string
        if (data['image_url'] && !(typeof data['image_url'] === 'string' || data['image_url'] instanceof String)) {
            throw new Error("Expected the field `image_url` to be a primitive type in the JSON string but got " + data['image_url']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/NHFossilGroupWithIndividualFossilsFossilsInner.ColorsEnum>} colors
 */
NHFossilGroupWithIndividualFossilsFossilsInner.prototype['colors'] = undefined;

/**
 * @member {String} fossil_group
 */
NHFossilGroupWithIndividualFossilsFossilsInner.prototype['fossil_group'] = undefined;

/**
 * @member {Number} hha_base
 */
NHFossilGroupWithIndividualFossilsFossilsInner.prototype['hha_base'] = undefined;

/**
 * @member {String} image_url
 */
NHFossilGroupWithIndividualFossilsFossilsInner.prototype['image_url'] = undefined;

/**
 * @member {Boolean} interactable
 */
NHFossilGroupWithIndividualFossilsFossilsInner.prototype['interactable'] = undefined;

/**
 * @member {Number} length
 */
NHFossilGroupWithIndividualFossilsFossilsInner.prototype['length'] = undefined;

/**
 * @member {String} name
 */
NHFossilGroupWithIndividualFossilsFossilsInner.prototype['name'] = undefined;

/**
 * @member {Number} sell
 */
NHFossilGroupWithIndividualFossilsFossilsInner.prototype['sell'] = undefined;

/**
 * @member {String} url
 */
NHFossilGroupWithIndividualFossilsFossilsInner.prototype['url'] = undefined;

/**
 * @member {Number} width
 */
NHFossilGroupWithIndividualFossilsFossilsInner.prototype['width'] = undefined;





/**
 * Allowed values for the <code>colors</code> property.
 * @enum {String}
 * @readonly
 */
NHFossilGroupWithIndividualFossilsFossilsInner['ColorsEnum'] = {

    /**
     * value: "Aqua"
     * @const
     */
    "Aqua": "Aqua",

    /**
     * value: "Beige"
     * @const
     */
    "Beige": "Beige",

    /**
     * value: "Black"
     * @const
     */
    "Black": "Black",

    /**
     * value: "Blue"
     * @const
     */
    "Blue": "Blue",

    /**
     * value: "Brown"
     * @const
     */
    "Brown": "Brown",

    /**
     * value: "Colorful"
     * @const
     */
    "Colorful": "Colorful",

    /**
     * value: "Gray"
     * @const
     */
    "Gray": "Gray",

    /**
     * value: "Green"
     * @const
     */
    "Green": "Green",

    /**
     * value: "Orange"
     * @const
     */
    "Orange": "Orange",

    /**
     * value: "Pink"
     * @const
     */
    "Pink": "Pink",

    /**
     * value: "Purple"
     * @const
     */
    "Purple": "Purple",

    /**
     * value: "Red"
     * @const
     */
    "Red": "Red",

    /**
     * value: "White"
     * @const
     */
    "White": "White",

    /**
     * value: "Yellow"
     * @const
     */
    "Yellow": "Yellow"
};



export default NHFossilGroupWithIndividualFossilsFossilsInner;

