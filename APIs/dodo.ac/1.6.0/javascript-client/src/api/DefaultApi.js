/**
 * Nookipedia
 * The Nookipedia API provides endpoints for retrieving *Animal Crossing* data pulled from the [Nookipedia wiki](https://nookipedia.com/wiki/Main_Page). A couple of the key benefits of using the Nookipedia API is access to data spanning the entire *Animal Crossing* series, as well as information that is constantly updated and expanding as editors work on the wiki.<br><br>Access to the Nookipedia API requires obtaining a key. This is so we can manage our scale and provide better support for our users. To request access to the API, please fill out [this form](https://forms.gle/wLwtXLerKhfDrRLY8).
 *
 * The version of the OpenAPI document: 1.6.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Error400 from '../model/Error400';
import Error401 from '../model/Error401';
import Error404 from '../model/Error404';
import Error500 from '../model/Error500';
import NHArtwork from '../model/NHArtwork';
import NHBug from '../model/NHBug';
import NHClothing from '../model/NHClothing';
import NHEvent from '../model/NHEvent';
import NHFish from '../model/NHFish';
import NHFossilGroup from '../model/NHFossilGroup';
import NHFossilGroupWithIndividualFossils from '../model/NHFossilGroupWithIndividualFossils';
import NHFossilGroupWithIndividualFossilsNoMatched from '../model/NHFossilGroupWithIndividualFossilsNoMatched';
import NHFurniture from '../model/NHFurniture';
import NHIndividualFossil from '../model/NHIndividualFossil';
import NHInterior from '../model/NHInterior';
import NHItem from '../model/NHItem';
import NHPhoto from '../model/NHPhoto';
import NHRecipe from '../model/NHRecipe';
import NHSeaCreature from '../model/NHSeaCreature';
import NHTool from '../model/NHTool';
import Villager from '../model/Villager';

/**
* Default service.
* @module api/DefaultApi
* @version 1.6.0
*/
export default class DefaultApi {

    /**
    * Constructs a new DefaultApi. 
    * @alias module:api/DefaultApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the nhArtArtworkGet operation.
     * @callback module:api/DefaultApi~nhArtArtworkGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NHArtwork} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Single New Horizons artwork
     * Retrieve information about a specific artwork in *Animal Crossing: New Horizons*.
     * @param {String} artwork The name of the artwork you wish to retrieve information about.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL.
     * @param {module:api/DefaultApi~nhArtArtworkGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NHArtwork}
     */
    nhArtArtworkGet(artwork, X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'artwork' is set
      if (artwork === undefined || artwork === null) {
        throw new Error("Missing the required parameter 'artwork' when calling nhArtArtworkGet");
      }
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhArtArtworkGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhArtArtworkGet");
      }

      let pathParams = {
        'artwork': artwork
      };
      let queryParams = {
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NHArtwork;
      return this.apiClient.callApi(
        '/nh/art/{artwork}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhArtGet operation.
     * @callback module:api/DefaultApi~nhArtGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NHArtwork>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * All New Horizons artwork
     * Get a list of all artwork and their details in *Animal Crossing: New Horizons*.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {String} [hasfake] When set to `true`, only artwork that has a fake will be returned. When set to `false`, only artwork without fakes will be returned.
     * @param {String} [excludedetails] When set to `true`, only artwork names are returned. Instead of an array of objects with all details, the return will be an array of strings.
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL. Note that requesting specific image sizes for long lists may result in a very long response time.
     * @param {module:api/DefaultApi~nhArtGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NHArtwork>}
     */
    nhArtGet(X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhArtGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhArtGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'hasfake': opts['hasfake'],
        'excludedetails': opts['excludedetails'],
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [NHArtwork];
      return this.apiClient.callApi(
        '/nh/art', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhBugsBugGet operation.
     * @callback module:api/DefaultApi~nhBugsBugGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NHBug} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Single New Horizons bug
     * Retrieve information about a specific bug in *Animal Crossing: New Horizons*.
     * @param {String} bug The name of the bug you wish to retrieve information about.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL.
     * @param {module:api/DefaultApi~nhBugsBugGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NHBug}
     */
    nhBugsBugGet(bug, X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'bug' is set
      if (bug === undefined || bug === null) {
        throw new Error("Missing the required parameter 'bug' when calling nhBugsBugGet");
      }
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhBugsBugGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhBugsBugGet");
      }

      let pathParams = {
        'bug': bug
      };
      let queryParams = {
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NHBug;
      return this.apiClient.callApi(
        '/nh/bugs/{bug}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhBugsGet operation.
     * @callback module:api/DefaultApi~nhBugsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NHBug>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * All New Horizons bugs
     * Get a list of all bugs and their details in *Animal Crossing: New Horizons*.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {String} [month] Retrive only the bug that are available in a specific month. Value may be the month's name (`jan`, `january`), the integer representing the month (`01`, `1`), or `current` for the current month. When `current` is specified, the return body will be an object with two arrays inside, one called `north` and the other `south` containing the bug available in each respective hemisphere. Note that the current month is calculated based off the API server's time, so it may be slightly off for you at the beginning or end of the month.
     * @param {String} [excludedetails] When set to `true`, only bug names are returned. Instead of an array of objects with all details, the return will be an array of strings. This is particularly useful when used with the `month` filter, for users who want just a list of bugs in a given month but not all their respective details.
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL. Note that requesting specific image sizes for long lists may result in a very long response time.
     * @param {module:api/DefaultApi~nhBugsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NHBug>}
     */
    nhBugsGet(X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhBugsGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhBugsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'month': opts['month'],
        'excludedetails': opts['excludedetails'],
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [NHBug];
      return this.apiClient.callApi(
        '/nh/bugs', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhClothingClothingGet operation.
     * @callback module:api/DefaultApi~nhClothingClothingGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NHClothing} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Single New Horizons clothing
     * Retrieve information about a specific clothing item in *Animal Crossing: New Horizons*.
     * @param {String} clothing The name of the clothing you wish to retrieve information about.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL.
     * @param {module:api/DefaultApi~nhClothingClothingGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NHClothing}
     */
    nhClothingClothingGet(clothing, X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'clothing' is set
      if (clothing === undefined || clothing === null) {
        throw new Error("Missing the required parameter 'clothing' when calling nhClothingClothingGet");
      }
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhClothingClothingGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhClothingClothingGet");
      }

      let pathParams = {
        'clothing': clothing
      };
      let queryParams = {
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NHClothing;
      return this.apiClient.callApi(
        '/nh/clothing/{clothing}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhClothingGet operation.
     * @callback module:api/DefaultApi~nhClothingGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NHClothing>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * All New Horizons clothing
     * Get a list of all clothing items and their details in *Animal Crossing: New Horizons*.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [category] Specify the category of clothing to return.
     * @param {Array.<module:model/String>} [color] Return clothing that matches the provided colors (may specify one or two colors). Colors are used for gifting villagers.
     * @param {Array.<module:model/String>} [style] Return clothing that matches the provided styles (may specify one or two styles). Styles are used for gifting villagers.
     * @param {module:model/String} [labeltheme] Return clothing that have the specified Label theme. This is used for completing the requested outfit theme for [Label](https://nookipedia.com/wiki/Label) when she visits the player's island.
     * @param {String} [excludedetails] When set to `true`, only clothing names are returned. Instead of an array of objects with all details, the return will be an array of strings.
     * @param {module:api/DefaultApi~nhClothingGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NHClothing>}
     */
    nhClothingGet(X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhClothingGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhClothingGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'category': opts['category'],
        'color': this.apiClient.buildCollectionParam(opts['color'], 'multi'),
        'style': this.apiClient.buildCollectionParam(opts['style'], 'multi'),
        'labeltheme': opts['labeltheme'],
        'excludedetails': opts['excludedetails']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [NHClothing];
      return this.apiClient.callApi(
        '/nh/clothing', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhEventsGet operation.
     * @callback module:api/DefaultApi~nhEventsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NHEvent>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * All New Horizons events
     * Get a list of events and dates in *Animal Crossing: New Horizons*, filterable to specific years, months, or days. Data is available for the current and next year.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {String} [date] Specify a specific date (in the current or next year) to retrieve events for. Accepts many date formats, such as `YYYY-MM-DD` or `Month Day, Year`, as well as `today` to retrieve the current day's events (UTC time).
     * @param {String} [year] Specify the year to retrieve events for. Must be the current or next year.
     * @param {String} [month] Specify the month to retrieve events for (accepts multiple formats, such as `Oct`, `October`, or `10`). Most likely want to use alongside `year`, otherwise events in both the current and next year are returned.
     * @param {Number} [day] Specify the day of the month to retrieve events for.
     * @param {module:api/DefaultApi~nhEventsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NHEvent>}
     */
    nhEventsGet(X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhEventsGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhEventsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'date': opts['date'],
        'year': opts['year'],
        'month': opts['month'],
        'day': opts['day']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [NHEvent];
      return this.apiClient.callApi(
        '/nh/events', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhFishFishGet operation.
     * @callback module:api/DefaultApi~nhFishFishGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NHFish} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Single New Horizons fish
     * Retrieve information about a specific fish in *Animal Crossing: New Horizons*.
     * @param {String} fish The name of the fish you wish to retrieve information about.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL.
     * @param {module:api/DefaultApi~nhFishFishGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NHFish}
     */
    nhFishFishGet(fish, X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'fish' is set
      if (fish === undefined || fish === null) {
        throw new Error("Missing the required parameter 'fish' when calling nhFishFishGet");
      }
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhFishFishGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhFishFishGet");
      }

      let pathParams = {
        'fish': fish
      };
      let queryParams = {
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NHFish;
      return this.apiClient.callApi(
        '/nh/fish/{fish}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhFishGet operation.
     * @callback module:api/DefaultApi~nhFishGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NHFish>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * All New Horizons fish
     * Get a list of all fish and their details in *New Horizons*.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {String} [month] Retrive only the fish that are available in a specific month. Value may be the month's name (`jan`, `january`), the integer representing the month (`01`, `1`), or `current` for the current month. When `current` is specified, the return body will be an object with two arrays inside, one called `north` and the other `south` containing the fish available in each respective hemisphere. Note that the current month is calculated based off the API server's time, so it may be slightly off for you at the beginning or end of the month.
     * @param {String} [excludedetails] When set to `true`, only fish names are returned. Instead of an array of objects with all details, the return will be an array of strings. This is particularly useful when used with the `month` filter, for users who want just a list of fish in a given month but not all their respective details.
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL. Note that requesting specific image sizes for long lists may result in a very long response time.
     * @param {module:api/DefaultApi~nhFishGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NHFish>}
     */
    nhFishGet(X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhFishGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhFishGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'month': opts['month'],
        'excludedetails': opts['excludedetails'],
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [NHFish];
      return this.apiClient.callApi(
        '/nh/fish', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhFossilsAllFossilGet operation.
     * @callback module:api/DefaultApi~nhFossilsAllFossilGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NHFossilGroupWithIndividualFossils} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Single New Horizons fossil group with individual fossils
     * Retrieve information about a specific fossil group with their respective individual fossils in *Animal Crossing: New Horizons*.
     * @param {String} fossil The name of the fossil OR fossil group you wish to retrieve information about. If a fossil is provided, a fossil group that the specified fossil belongs to will be returned.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL.
     * @param {module:api/DefaultApi~nhFossilsAllFossilGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NHFossilGroupWithIndividualFossils}
     */
    nhFossilsAllFossilGet(fossil, X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'fossil' is set
      if (fossil === undefined || fossil === null) {
        throw new Error("Missing the required parameter 'fossil' when calling nhFossilsAllFossilGet");
      }
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhFossilsAllFossilGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhFossilsAllFossilGet");
      }

      let pathParams = {
        'fossil': fossil
      };
      let queryParams = {
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NHFossilGroupWithIndividualFossils;
      return this.apiClient.callApi(
        '/nh/fossils/all/{fossil}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhFossilsAllGet operation.
     * @callback module:api/DefaultApi~nhFossilsAllGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NHFossilGroupWithIndividualFossilsNoMatched>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * All New Horizons fossil groups or individual fossil
     * Get a list of all the fossil groups with their respective individual fossils in *Animal Crossing: New Horizons*.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL.
     * @param {module:api/DefaultApi~nhFossilsAllGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NHFossilGroupWithIndividualFossilsNoMatched>}
     */
    nhFossilsAllGet(X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhFossilsAllGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhFossilsAllGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [NHFossilGroupWithIndividualFossilsNoMatched];
      return this.apiClient.callApi(
        '/nh/fossils/all', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhFossilsGroupsFossilGroupGet operation.
     * @callback module:api/DefaultApi~nhFossilsGroupsFossilGroupGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NHFossilGroup} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Single New Horizons fossil group
     * Retrieve information about a specific fossil group in *Animal Crossing: New Horizons*.
     * @param {String} fossilGroup The name of the fossil group you wish to retrieve information about.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL.
     * @param {module:api/DefaultApi~nhFossilsGroupsFossilGroupGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NHFossilGroup}
     */
    nhFossilsGroupsFossilGroupGet(fossilGroup, X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'fossilGroup' is set
      if (fossilGroup === undefined || fossilGroup === null) {
        throw new Error("Missing the required parameter 'fossilGroup' when calling nhFossilsGroupsFossilGroupGet");
      }
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhFossilsGroupsFossilGroupGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhFossilsGroupsFossilGroupGet");
      }

      let pathParams = {
        'fossil_group': fossilGroup
      };
      let queryParams = {
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NHFossilGroup;
      return this.apiClient.callApi(
        '/nh/fossils/groups/{fossil_group}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhFossilsGroupsGet operation.
     * @callback module:api/DefaultApi~nhFossilsGroupsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NHFossilGroup>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * All New Horizons fossil groups
     * Get a list of all the fossil groups in *Animal Crossing: New Horizons*.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL.
     * @param {module:api/DefaultApi~nhFossilsGroupsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NHFossilGroup>}
     */
    nhFossilsGroupsGet(X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhFossilsGroupsGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhFossilsGroupsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [NHFossilGroup];
      return this.apiClient.callApi(
        '/nh/fossils/groups', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhFossilsIndividualsFossilGet operation.
     * @callback module:api/DefaultApi~nhFossilsIndividualsFossilGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NHIndividualFossil} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Single New Horizons fossil
     * Retrieve information about a specific individual fossil in *Animal Crossing: New Horizons*.
     * @param {String} fossil The name of the individual fossil you wish to retrieve fossil information about.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL.
     * @param {module:api/DefaultApi~nhFossilsIndividualsFossilGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NHIndividualFossil}
     */
    nhFossilsIndividualsFossilGet(fossil, X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'fossil' is set
      if (fossil === undefined || fossil === null) {
        throw new Error("Missing the required parameter 'fossil' when calling nhFossilsIndividualsFossilGet");
      }
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhFossilsIndividualsFossilGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhFossilsIndividualsFossilGet");
      }

      let pathParams = {
        'fossil': fossil
      };
      let queryParams = {
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NHIndividualFossil;
      return this.apiClient.callApi(
        '/nh/fossils/individuals/{fossil}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhFossilsIndividualsGet operation.
     * @callback module:api/DefaultApi~nhFossilsIndividualsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NHIndividualFossil>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * All New Horizons fossils
     * Get a list of all the individual fossils in *Animal Crossing: New Horizons*.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL.
     * @param {module:api/DefaultApi~nhFossilsIndividualsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NHIndividualFossil>}
     */
    nhFossilsIndividualsGet(X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhFossilsIndividualsGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhFossilsIndividualsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [NHIndividualFossil];
      return this.apiClient.callApi(
        '/nh/fossils/individuals', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhFurnitureFurnitureGet operation.
     * @callback module:api/DefaultApi~nhFurnitureFurnitureGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NHFurniture} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Single New Horizons furniture
     * Retrieve information about a specific furniture in *Animal Crossing: New Horizons*.
     * @param {String} furniture The name of the furniture you wish to retrieve information about.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL.
     * @param {module:api/DefaultApi~nhFurnitureFurnitureGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NHFurniture}
     */
    nhFurnitureFurnitureGet(furniture, X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'furniture' is set
      if (furniture === undefined || furniture === null) {
        throw new Error("Missing the required parameter 'furniture' when calling nhFurnitureFurnitureGet");
      }
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhFurnitureFurnitureGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhFurnitureFurnitureGet");
      }

      let pathParams = {
        'furniture': furniture
      };
      let queryParams = {
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NHFurniture;
      return this.apiClient.callApi(
        '/nh/furniture/{furniture}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhFurnitureGet operation.
     * @callback module:api/DefaultApi~nhFurnitureGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NHFurniture>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * All New Horizons furniture
     * Get a list of all furniture and their details in *Animal Crossing: New Horizons*.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {module:model/String} [category] Specify the category of furniture to return (houswares, miscellaneous, or wall-mounted).
     * @param {Array.<module:model/String>} [color] Return furniture that matches the provided colors (may specify one or two colors).
     * @param {String} [excludedetails] When set to `true`, only furniture names are returned. Instead of an array of objects with all details, the return will be an array of strings.
     * @param {module:api/DefaultApi~nhFurnitureGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NHFurniture>}
     */
    nhFurnitureGet(X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhFurnitureGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhFurnitureGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'category': opts['category'],
        'color': this.apiClient.buildCollectionParam(opts['color'], 'multi'),
        'excludedetails': opts['excludedetails']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [NHFurniture];
      return this.apiClient.callApi(
        '/nh/furniture', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhInteriorGet operation.
     * @callback module:api/DefaultApi~nhInteriorGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NHInterior>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * All New Horizons interior items
     * Get a list of all interior items (flooring, wallpaper, and rugs) and their details in *Animal Crossing: New Horizons*.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [color] Return furniture that matches the provided colors (may specify one or two colors).
     * @param {String} [excludedetails] When set to `true`, only interior item names are returned. Instead of an array of objects with all details, the return will be an array of strings.
     * @param {module:api/DefaultApi~nhInteriorGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NHInterior>}
     */
    nhInteriorGet(X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhInteriorGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhInteriorGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'color': this.apiClient.buildCollectionParam(opts['color'], 'multi'),
        'excludedetails': opts['excludedetails']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [NHInterior];
      return this.apiClient.callApi(
        '/nh/interior', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhInteriorItemGet operation.
     * @callback module:api/DefaultApi~nhInteriorItemGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NHInterior} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Single New Horizons interior item
     * Retrieve information about a specific interior item in *Animal Crossing: New Horizons*.
     * @param {String} item The name of the interior item you wish to retrieve information about.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {Array.<module:model/String>} [color] Return furniture that matches the provided colors (may specify one or two colors).
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL.
     * @param {module:api/DefaultApi~nhInteriorItemGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NHInterior}
     */
    nhInteriorItemGet(item, X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'item' is set
      if (item === undefined || item === null) {
        throw new Error("Missing the required parameter 'item' when calling nhInteriorItemGet");
      }
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhInteriorItemGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhInteriorItemGet");
      }

      let pathParams = {
        'item': item
      };
      let queryParams = {
        'color': this.apiClient.buildCollectionParam(opts['color'], 'multi'),
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NHInterior;
      return this.apiClient.callApi(
        '/nh/interior/{item}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhItemsGet operation.
     * @callback module:api/DefaultApi~nhItemsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NHItem>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Miscellaneous New Horizons items
     * Get a list of all miscellaneous items (such as materials, star fragments, fruits, fences, and plants) and their details in *Animal Crossing: New Horizons*.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {String} [excludedetails] When set to `true`, only item names are returned. Instead of an array of objects with all details, the return will be an array of strings.
     * @param {module:api/DefaultApi~nhItemsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NHItem>}
     */
    nhItemsGet(X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhItemsGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhItemsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'excludedetails': opts['excludedetails']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [NHItem];
      return this.apiClient.callApi(
        '/nh/items', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhItemsItemGet operation.
     * @callback module:api/DefaultApi~nhItemsItemGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NHItem} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Single New Horizons miscellaneous item
     * Retrieve information about a miscellaneous item (such as materials, star fragments, fruits, fences, and plants) in *Animal Crossing: New Horizons*.
     * @param {String} item The name of the interior item you wish to retrieve information about.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL.
     * @param {module:api/DefaultApi~nhItemsItemGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NHItem}
     */
    nhItemsItemGet(item, X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'item' is set
      if (item === undefined || item === null) {
        throw new Error("Missing the required parameter 'item' when calling nhItemsItemGet");
      }
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhItemsItemGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhItemsItemGet");
      }

      let pathParams = {
        'item': item
      };
      let queryParams = {
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NHItem;
      return this.apiClient.callApi(
        '/nh/items/{item}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhPhotosGet operation.
     * @callback module:api/DefaultApi~nhPhotosGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NHPhoto>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * All New Horizons photos and posters
     * Get a list of all character photos+posters and their details in *Animal Crossing: New Horizons*.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {String} [excludedetails] When set to `true`, only item names are returned. Instead of an array of objects with all details, the return will be an array of strings.
     * @param {module:api/DefaultApi~nhPhotosGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NHPhoto>}
     */
    nhPhotosGet(X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhPhotosGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhPhotosGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'excludedetails': opts['excludedetails']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [NHPhoto];
      return this.apiClient.callApi(
        '/nh/photos', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhPhotosItemGet operation.
     * @callback module:api/DefaultApi~nhPhotosItemGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NHPhoto} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Single New Horizons photo or poster
     * Retrieve information about a character photo or poster in *Animal Crossing: New Horizons*.
     * @param {String} item The name of the photo or poster you wish to retrieve information about.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL.
     * @param {module:api/DefaultApi~nhPhotosItemGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NHPhoto}
     */
    nhPhotosItemGet(item, X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'item' is set
      if (item === undefined || item === null) {
        throw new Error("Missing the required parameter 'item' when calling nhPhotosItemGet");
      }
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhPhotosItemGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhPhotosItemGet");
      }

      let pathParams = {
        'item': item
      };
      let queryParams = {
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NHPhoto;
      return this.apiClient.callApi(
        '/nh/photos/{item}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhRecipesGet operation.
     * @callback module:api/DefaultApi~nhRecipesGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NHRecipe>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * All New Horizons recipes
     * Get a list of all recipes and their details in *Animal Crossing: New Horizons*.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {String} [material] Specify a material to only get recipes that use that material. You can specify `material` up to six times (no recipe uses more than six materials).
     * @param {String} [excludedetails] When set to `true`, only recipe names are returned. Instead of an array of objects with all details, the return will be an array of strings.
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL. Note that requesting specific image sizes for long lists may result in a very long response time.
     * @param {module:api/DefaultApi~nhRecipesGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NHRecipe>}
     */
    nhRecipesGet(X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhRecipesGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhRecipesGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'material': opts['material'],
        'excludedetails': opts['excludedetails'],
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [NHRecipe];
      return this.apiClient.callApi(
        '/nh/recipes', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhRecipesItemGet operation.
     * @callback module:api/DefaultApi~nhRecipesItemGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NHRecipe} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Single New Horizons recipe
     * Retrieve information about a specific recipe in *Animal Crossing: New Horizons*.
     * @param {String} item The name of the item you wish to retrieve recipe information about.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL.
     * @param {module:api/DefaultApi~nhRecipesItemGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NHRecipe}
     */
    nhRecipesItemGet(item, X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'item' is set
      if (item === undefined || item === null) {
        throw new Error("Missing the required parameter 'item' when calling nhRecipesItemGet");
      }
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhRecipesItemGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhRecipesItemGet");
      }

      let pathParams = {
        'item': item
      };
      let queryParams = {
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NHRecipe;
      return this.apiClient.callApi(
        '/nh/recipes/{item}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhSeaGet operation.
     * @callback module:api/DefaultApi~nhSeaGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NHSeaCreature>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * All New Horizons sea creatures
     * Get a list of all sea creatures and their details in *Animal Crossing: New Horizons*.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {String} [month] Retrive only the sea creature that are available in a specific month. Value may be the month's name (`jan`, `january`), the integer representing the month (`01`, `1`), or `current` for the current month. When `current` is specified, the return body will be an object with two arrays inside, one called `north` and the other `south` containing the sea creature available in each respective hemisphere. Note that the current month is calculated based off the API server's time, so it may be slightly off for you at the beginning or end of the month.
     * @param {String} [excludedetails] When set to `true`, only sea creature names are returned. Instead of an array of objects with all details, the return will be an array of strings. This is particularly useful when used with the `month` filter, for users who want just a list of sea creatures in a given month but not all their respective details.
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL. Note that requesting specific image sizes for long lists may result in a very long response time.
     * @param {module:api/DefaultApi~nhSeaGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NHSeaCreature>}
     */
    nhSeaGet(X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhSeaGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhSeaGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'month': opts['month'],
        'excludedetails': opts['excludedetails'],
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [NHSeaCreature];
      return this.apiClient.callApi(
        '/nh/sea', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhSeaSeaCreatureGet operation.
     * @callback module:api/DefaultApi~nhSeaSeaCreatureGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NHSeaCreature} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Single New Horizons sea creature
     * Retrieve information about a specific sea creature in *Animal Crossing: New Horizons*.
     * @param {String} seaCreature The name of the sea creature you wish to retrieve information about.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL.
     * @param {module:api/DefaultApi~nhSeaSeaCreatureGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NHSeaCreature}
     */
    nhSeaSeaCreatureGet(seaCreature, X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'seaCreature' is set
      if (seaCreature === undefined || seaCreature === null) {
        throw new Error("Missing the required parameter 'seaCreature' when calling nhSeaSeaCreatureGet");
      }
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhSeaSeaCreatureGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhSeaSeaCreatureGet");
      }

      let pathParams = {
        'sea_creature': seaCreature
      };
      let queryParams = {
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NHSeaCreature;
      return this.apiClient.callApi(
        '/nh/sea/{sea_creature}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhToolsGet operation.
     * @callback module:api/DefaultApi~nhToolsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/NHTool>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * All New Horizons tools
     * Get a list of all tools and their details in *Animal Crossing: New Horizons*.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {String} [excludedetails] When set to `true`, only tool names are returned. Instead of an array of objects with all details, the return will be an array of strings.
     * @param {module:api/DefaultApi~nhToolsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/NHTool>}
     */
    nhToolsGet(X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhToolsGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhToolsGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'excludedetails': opts['excludedetails']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [NHTool];
      return this.apiClient.callApi(
        '/nh/tools', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the nhToolsToolGet operation.
     * @callback module:api/DefaultApi~nhToolsToolGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NHTool} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Single New Horizons tool
     * Retrieve information about a specific tool in *Animal Crossing: New Horizons*.
     * @param {String} tool The name of the interior item you wish to retrieve information about.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL.
     * @param {module:api/DefaultApi~nhToolsToolGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NHTool}
     */
    nhToolsToolGet(tool, X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'tool' is set
      if (tool === undefined || tool === null) {
        throw new Error("Missing the required parameter 'tool' when calling nhToolsToolGet");
      }
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling nhToolsToolGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling nhToolsToolGet");
      }

      let pathParams = {
        'tool': tool
      };
      let queryParams = {
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NHTool;
      return this.apiClient.callApi(
        '/nh/tools/{tool}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the villagersGet operation.
     * @callback module:api/DefaultApi~villagersGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Villager>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Villagers
     * This endpoint retrieves villager information from the entire *Animal Crossing* series, with the option to filter by species, personality, game, and/or birthday. Filters use the AND operator (e.g. asking for villagers who have species `frog` and personality `smug` will return all smug frogs). Note that villagers only include the animals that act as residents. Special characters, such as Tom Nook and Isabelle, are not accessed through this endpoint.
     * @param {String} X_API_KEY Your UUID secret key, granted to you by the Nookipedia team. Required for accessing the API.
     * @param {String} acceptVersion The version of the API you are calling, written as `1.0.0`. This is specified as required as good practice, but it is not actually enforced by the API. If you do not specify a version, you will be served the latest version, which may eventually result in breaking changes.
     * @param {Object} opts Optional parameters
     * @param {String} [name] Villager name. For most names you will get back an array with one object, but note that names are not a unique identifier across the series, as there are 3 names that are shared by multiple villagers (Lulu, Petunia, Carmen). For those 3 names you will get back an array with 2 objects. How you disambiguate between these villagers is up to you.
     * @param {module:model/String} [species] Retrieve villagers of a certain species.
     * @param {module:model/String} [personality] Retrieve villagers with a certain personality. For 'sisterly', note that the community often also calls it 'uchi' or 'big sister'.
     * @param {Array.<module:model/String>} [game] Retrieve villagers that appear in all listed games. For example, if you want only villagers that appear in both *New Horizons* and *Pocket Camp*, you would send in `?game=nh&game=pc`.
     * @param {String} [birthmonth] Retrieve villagers born in a specific month. Value may be the month's name (`jan`, `january`) or the integer representing the month (`01`, `1`).
     * @param {String} [birthday] Use with `birthmonth` to get villager(s) born on a specific day. Value should be an int, 1 through 31.
     * @param {String} [nhdetails] When set to `true`, an `nh_details` object will be included that contains *New Horizons* details about the villager. If the villager does not appear in *New Horizons*, the returned `nh_details` field will be set to null.
     * @param {String} [excludedetails] When set to `true`, only villager names are returned. Instead of an array of objects with all details, the return will be an array of strings.
     * @param {Number} [thumbsize] Specify the desired width of returned image URLs. When unspecified, the linked image(s) returned by the API will be full-resolution. Note that images can only be reduced in size; specifying a width greater than than the maximum size will return the default full-size image URL. Note that requesting specific image sizes for long lists may result in a very long response time.
     * @param {module:api/DefaultApi~villagersGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Villager>}
     */
    villagersGet(X_API_KEY, acceptVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'X_API_KEY' is set
      if (X_API_KEY === undefined || X_API_KEY === null) {
        throw new Error("Missing the required parameter 'X_API_KEY' when calling villagersGet");
      }
      // verify the required parameter 'acceptVersion' is set
      if (acceptVersion === undefined || acceptVersion === null) {
        throw new Error("Missing the required parameter 'acceptVersion' when calling villagersGet");
      }

      let pathParams = {
      };
      let queryParams = {
        'name': opts['name'],
        'species': opts['species'],
        'personality': opts['personality'],
        'game': this.apiClient.buildCollectionParam(opts['game'], 'multi'),
        'birthmonth': opts['birthmonth'],
        'birthday': opts['birthday'],
        'nhdetails': opts['nhdetails'],
        'excludedetails': opts['excludedetails'],
        'thumbsize': opts['thumbsize']
      };
      let headerParams = {
        'X-API-KEY': X_API_KEY,
        'Accept-Version': acceptVersion
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Villager];
      return this.apiClient.callApi(
        '/villagers', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
