# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomProcedureCodesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, price: str=None, quantity: str=None):
        """CustomProcedureCodesInner - a model defined in OpenAPI

        :param code: The code of this CustomProcedureCodesInner.
        :param price: The price of this CustomProcedureCodesInner.
        :param quantity: The quantity of this CustomProcedureCodesInner.
        """
        self.openapi_types = {
            'code': str,
            'price': str,
            'quantity': str
        }

        self.attribute_map = {
            'code': 'code',
            'price': 'price',
            'quantity': 'quantity'
        }

        self._code = code
        self._price = price
        self._quantity = quantity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomProcedureCodesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Custom_procedure_codes_inner of this CustomProcedureCodesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this CustomProcedureCodesInner.

        

        :return: The code of this CustomProcedureCodesInner.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this CustomProcedureCodesInner.

        

        :param code: The code of this CustomProcedureCodesInner.
        :type code: str
        """

        self._code = code

    @property
    def price(self):
        """Gets the price of this CustomProcedureCodesInner.

        This field is represented in string format

        :return: The price of this CustomProcedureCodesInner.
        :rtype: str
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this CustomProcedureCodesInner.

        This field is represented in string format

        :param price: The price of this CustomProcedureCodesInner.
        :type price: str
        """

        self._price = price

    @property
    def quantity(self):
        """Gets the quantity of this CustomProcedureCodesInner.

        This field is represented in string format

        :return: The quantity of this CustomProcedureCodesInner.
        :rtype: str
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this CustomProcedureCodesInner.

        This field is represented in string format

        :param quantity: The quantity of this CustomProcedureCodesInner.
        :type quantity: str
        """

        self._quantity = quantity
