# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Value(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clinical_note_field: int=None, id: int=None, value: str=None):
        """Value - a model defined in OpenAPI

        :param clinical_note_field: The clinical_note_field of this Value.
        :param id: The id of this Value.
        :param value: The value of this Value.
        """
        self.openapi_types = {
            'clinical_note_field': int,
            'id': int,
            'value': str
        }

        self.attribute_map = {
            'clinical_note_field': 'clinical_note_field',
            'id': 'id',
            'value': 'value'
        }

        self._clinical_note_field = clinical_note_field
        self._id = id
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Value':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Value of this Value.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clinical_note_field(self):
        """Gets the clinical_note_field of this Value.

        

        :return: The clinical_note_field of this Value.
        :rtype: int
        """
        return self._clinical_note_field

    @clinical_note_field.setter
    def clinical_note_field(self, clinical_note_field):
        """Sets the clinical_note_field of this Value.

        

        :param clinical_note_field: The clinical_note_field of this Value.
        :type clinical_note_field: int
        """

        self._clinical_note_field = clinical_note_field

    @property
    def id(self):
        """Gets the id of this Value.

        

        :return: The id of this Value.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Value.

        

        :param id: The id of this Value.
        :type id: int
        """

        self._id = id

    @property
    def value(self):
        """Gets the value of this Value.

        

        :return: The value of this Value.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this Value.

        

        :param value: The value of this Value.
        :type value: str
        """

        self._value = value
