# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ClinicalNote1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, locked: bool=None, pdf: str=None, updated_at: str=None):
        """ClinicalNote1 - a model defined in OpenAPI

        :param locked: The locked of this ClinicalNote1.
        :param pdf: The pdf of this ClinicalNote1.
        :param updated_at: The updated_at of this ClinicalNote1.
        """
        self.openapi_types = {
            'locked': bool,
            'pdf': str,
            'updated_at': str
        }

        self.attribute_map = {
            'locked': 'locked',
            'pdf': 'pdf',
            'updated_at': 'updated_at'
        }

        self._locked = locked
        self._pdf = pdf
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClinicalNote1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ClinicalNote_1 of this ClinicalNote1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def locked(self):
        """Gets the locked of this ClinicalNote1.

        

        :return: The locked of this ClinicalNote1.
        :rtype: bool
        """
        return self._locked

    @locked.setter
    def locked(self, locked):
        """Sets the locked of this ClinicalNote1.

        

        :param locked: The locked of this ClinicalNote1.
        :type locked: bool
        """

        self._locked = locked

    @property
    def pdf(self):
        """Gets the pdf of this ClinicalNote1.

        

        :return: The pdf of this ClinicalNote1.
        :rtype: str
        """
        return self._pdf

    @pdf.setter
    def pdf(self, pdf):
        """Sets the pdf of this ClinicalNote1.

        

        :param pdf: The pdf of this ClinicalNote1.
        :type pdf: str
        """

        self._pdf = pdf

    @property
    def updated_at(self):
        """Gets the updated_at of this ClinicalNote1.

        

        :return: The updated_at of this ClinicalNote1.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this ClinicalNote1.

        

        :param updated_at: The updated_at of this ClinicalNote1.
        :type updated_at: str
        """

        self._updated_at = updated_at
