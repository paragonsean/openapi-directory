# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CustomAppointmentFieldType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, archived: bool=None, created_at: str=None, doctor: str=None, field_desc: str=None, field_name: str=None, id: int=None, order: int=None, updated_at: str=None):
        """CustomAppointmentFieldType - a model defined in OpenAPI

        :param archived: The archived of this CustomAppointmentFieldType.
        :param created_at: The created_at of this CustomAppointmentFieldType.
        :param doctor: The doctor of this CustomAppointmentFieldType.
        :param field_desc: The field_desc of this CustomAppointmentFieldType.
        :param field_name: The field_name of this CustomAppointmentFieldType.
        :param id: The id of this CustomAppointmentFieldType.
        :param order: The order of this CustomAppointmentFieldType.
        :param updated_at: The updated_at of this CustomAppointmentFieldType.
        """
        self.openapi_types = {
            'archived': bool,
            'created_at': str,
            'doctor': str,
            'field_desc': str,
            'field_name': str,
            'id': int,
            'order': int,
            'updated_at': str
        }

        self.attribute_map = {
            'archived': 'archived',
            'created_at': 'created_at',
            'doctor': 'doctor',
            'field_desc': 'field_desc',
            'field_name': 'field_name',
            'id': 'id',
            'order': 'order',
            'updated_at': 'updated_at'
        }

        self._archived = archived
        self._created_at = created_at
        self._doctor = doctor
        self._field_desc = field_desc
        self._field_name = field_name
        self._id = id
        self._order = order
        self._updated_at = updated_at

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CustomAppointmentFieldType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CustomAppointmentFieldType of this CustomAppointmentFieldType.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def archived(self):
        """Gets the archived of this CustomAppointmentFieldType.

        Indicates that the object has been soft-deleted and should not be used

        :return: The archived of this CustomAppointmentFieldType.
        :rtype: bool
        """
        return self._archived

    @archived.setter
    def archived(self, archived):
        """Sets the archived of this CustomAppointmentFieldType.

        Indicates that the object has been soft-deleted and should not be used

        :param archived: The archived of this CustomAppointmentFieldType.
        :type archived: bool
        """

        self._archived = archived

    @property
    def created_at(self):
        """Gets the created_at of this CustomAppointmentFieldType.

        

        :return: The created_at of this CustomAppointmentFieldType.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this CustomAppointmentFieldType.

        

        :param created_at: The created_at of this CustomAppointmentFieldType.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def doctor(self):
        """Gets the doctor of this CustomAppointmentFieldType.

        

        :return: The doctor of this CustomAppointmentFieldType.
        :rtype: str
        """
        return self._doctor

    @doctor.setter
    def doctor(self, doctor):
        """Sets the doctor of this CustomAppointmentFieldType.

        

        :param doctor: The doctor of this CustomAppointmentFieldType.
        :type doctor: str
        """

        self._doctor = doctor

    @property
    def field_desc(self):
        """Gets the field_desc of this CustomAppointmentFieldType.

        Description of the custom field

        :return: The field_desc of this CustomAppointmentFieldType.
        :rtype: str
        """
        return self._field_desc

    @field_desc.setter
    def field_desc(self, field_desc):
        """Sets the field_desc of this CustomAppointmentFieldType.

        Description of the custom field

        :param field_desc: The field_desc of this CustomAppointmentFieldType.
        :type field_desc: str
        """

        self._field_desc = field_desc

    @property
    def field_name(self):
        """Gets the field_name of this CustomAppointmentFieldType.

        

        :return: The field_name of this CustomAppointmentFieldType.
        :rtype: str
        """
        return self._field_name

    @field_name.setter
    def field_name(self, field_name):
        """Sets the field_name of this CustomAppointmentFieldType.

        

        :param field_name: The field_name of this CustomAppointmentFieldType.
        :type field_name: str
        """

        self._field_name = field_name

    @property
    def id(self):
        """Gets the id of this CustomAppointmentFieldType.

        

        :return: The id of this CustomAppointmentFieldType.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CustomAppointmentFieldType.

        

        :param id: The id of this CustomAppointmentFieldType.
        :type id: int
        """

        self._id = id

    @property
    def order(self):
        """Gets the order of this CustomAppointmentFieldType.

        displayed order in patient's demographic page

        :return: The order of this CustomAppointmentFieldType.
        :rtype: int
        """
        return self._order

    @order.setter
    def order(self, order):
        """Sets the order of this CustomAppointmentFieldType.

        displayed order in patient's demographic page

        :param order: The order of this CustomAppointmentFieldType.
        :type order: int
        """

        self._order = order

    @property
    def updated_at(self):
        """Gets the updated_at of this CustomAppointmentFieldType.

        

        :return: The updated_at of this CustomAppointmentFieldType.
        :rtype: str
        """
        return self._updated_at

    @updated_at.setter
    def updated_at(self, updated_at):
        """Sets the updated_at of this CustomAppointmentFieldType.

        

        :param updated_at: The updated_at of this CustomAppointmentFieldType.
        :type updated_at: str
        """

        self._updated_at = updated_at
