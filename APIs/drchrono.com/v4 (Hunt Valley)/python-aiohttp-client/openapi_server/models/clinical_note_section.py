# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.value import Value
from openapi_server import util


class ClinicalNoteSection(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clinical_note_template: int=None, name: str=None, values: List[Value]=None):
        """ClinicalNoteSection - a model defined in OpenAPI

        :param clinical_note_template: The clinical_note_template of this ClinicalNoteSection.
        :param name: The name of this ClinicalNoteSection.
        :param values: The values of this ClinicalNoteSection.
        """
        self.openapi_types = {
            'clinical_note_template': int,
            'name': str,
            'values': List[Value]
        }

        self.attribute_map = {
            'clinical_note_template': 'clinical_note_template',
            'name': 'name',
            'values': 'values'
        }

        self._clinical_note_template = clinical_note_template
        self._name = name
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ClinicalNoteSection':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Clinical_Note_Section of this ClinicalNoteSection.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clinical_note_template(self):
        """Gets the clinical_note_template of this ClinicalNoteSection.

        

        :return: The clinical_note_template of this ClinicalNoteSection.
        :rtype: int
        """
        return self._clinical_note_template

    @clinical_note_template.setter
    def clinical_note_template(self, clinical_note_template):
        """Sets the clinical_note_template of this ClinicalNoteSection.

        

        :param clinical_note_template: The clinical_note_template of this ClinicalNoteSection.
        :type clinical_note_template: int
        """

        self._clinical_note_template = clinical_note_template

    @property
    def name(self):
        """Gets the name of this ClinicalNoteSection.

        

        :return: The name of this ClinicalNoteSection.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ClinicalNoteSection.

        

        :param name: The name of this ClinicalNoteSection.
        :type name: str
        """

        self._name = name

    @property
    def values(self):
        """Gets the values of this ClinicalNoteSection.

        

        :return: The values of this ClinicalNoteSection.
        :rtype: List[Value]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this ClinicalNoteSection.

        

        :param values: The values of this ClinicalNoteSection.
        :type values: List[Value]
        """

        self._values = values
