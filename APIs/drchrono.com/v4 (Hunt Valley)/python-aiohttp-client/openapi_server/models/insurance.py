# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Insurance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, payer_id: str=None, payer_name: str=None, state: str=None):
        """Insurance - a model defined in OpenAPI

        :param payer_id: The payer_id of this Insurance.
        :param payer_name: The payer_name of this Insurance.
        :param state: The state of this Insurance.
        """
        self.openapi_types = {
            'payer_id': str,
            'payer_name': str,
            'state': str
        }

        self.attribute_map = {
            'payer_id': 'payer_id',
            'payer_name': 'payer_name',
            'state': 'state'
        }

        self._payer_id = payer_id
        self._payer_name = payer_name
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Insurance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Insurance of this Insurance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def payer_id(self):
        """Gets the payer_id of this Insurance.

        

        :return: The payer_id of this Insurance.
        :rtype: str
        """
        return self._payer_id

    @payer_id.setter
    def payer_id(self, payer_id):
        """Sets the payer_id of this Insurance.

        

        :param payer_id: The payer_id of this Insurance.
        :type payer_id: str
        """

        self._payer_id = payer_id

    @property
    def payer_name(self):
        """Gets the payer_name of this Insurance.

        

        :return: The payer_name of this Insurance.
        :rtype: str
        """
        return self._payer_name

    @payer_name.setter
    def payer_name(self, payer_name):
        """Sets the payer_name of this Insurance.

        

        :param payer_name: The payer_name of this Insurance.
        :type payer_name: str
        """

        self._payer_name = payer_name

    @property
    def state(self):
        """Gets the state of this Insurance.

        

        :return: The state of this Insurance.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Insurance.

        

        :param state: The state of this Insurance.
        :type state: str
        """

        self._state = state
