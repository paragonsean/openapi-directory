# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppointmentStatusTransition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, appointment: str=None, datetime: str=None, from_status: str=None, to_status: str=None):
        """AppointmentStatusTransition - a model defined in OpenAPI

        :param appointment: The appointment of this AppointmentStatusTransition.
        :param datetime: The datetime of this AppointmentStatusTransition.
        :param from_status: The from_status of this AppointmentStatusTransition.
        :param to_status: The to_status of this AppointmentStatusTransition.
        """
        self.openapi_types = {
            'appointment': str,
            'datetime': str,
            'from_status': str,
            'to_status': str
        }

        self.attribute_map = {
            'appointment': 'appointment',
            'datetime': 'datetime',
            'from_status': 'from_status',
            'to_status': 'to_status'
        }

        self._appointment = appointment
        self._datetime = datetime
        self._from_status = from_status
        self._to_status = to_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppointmentStatusTransition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppointmentStatusTransition of this AppointmentStatusTransition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def appointment(self):
        """Gets the appointment of this AppointmentStatusTransition.

        

        :return: The appointment of this AppointmentStatusTransition.
        :rtype: str
        """
        return self._appointment

    @appointment.setter
    def appointment(self, appointment):
        """Sets the appointment of this AppointmentStatusTransition.

        

        :param appointment: The appointment of this AppointmentStatusTransition.
        :type appointment: str
        """

        self._appointment = appointment

    @property
    def datetime(self):
        """Gets the datetime of this AppointmentStatusTransition.

        

        :return: The datetime of this AppointmentStatusTransition.
        :rtype: str
        """
        return self._datetime

    @datetime.setter
    def datetime(self, datetime):
        """Sets the datetime of this AppointmentStatusTransition.

        

        :param datetime: The datetime of this AppointmentStatusTransition.
        :type datetime: str
        """

        self._datetime = datetime

    @property
    def from_status(self):
        """Gets the from_status of this AppointmentStatusTransition.

        

        :return: The from_status of this AppointmentStatusTransition.
        :rtype: str
        """
        return self._from_status

    @from_status.setter
    def from_status(self, from_status):
        """Sets the from_status of this AppointmentStatusTransition.

        

        :param from_status: The from_status of this AppointmentStatusTransition.
        :type from_status: str
        """

        self._from_status = from_status

    @property
    def to_status(self):
        """Gets the to_status of this AppointmentStatusTransition.

        

        :return: The to_status of this AppointmentStatusTransition.
        :rtype: str
        """
        return self._to_status

    @to_status.setter
    def to_status(self, to_status):
        """Sets the to_status of this AppointmentStatusTransition.

        

        :param to_status: The to_status of this AppointmentStatusTransition.
        :type to_status: str
        """

        self._to_status = to_status
