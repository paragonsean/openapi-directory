# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Coverage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, appointment: str=None, cob_level: str=None, coverage_details: str=None, coverage_subscriber: str=None, eligibility: str=None, patient: str=None, payer_name: str=None, query_date: str=None, request_service_type: str=None, service_type_description: str=None):
        """Coverage - a model defined in OpenAPI

        :param appointment: The appointment of this Coverage.
        :param cob_level: The cob_level of this Coverage.
        :param coverage_details: The coverage_details of this Coverage.
        :param coverage_subscriber: The coverage_subscriber of this Coverage.
        :param eligibility: The eligibility of this Coverage.
        :param patient: The patient of this Coverage.
        :param payer_name: The payer_name of this Coverage.
        :param query_date: The query_date of this Coverage.
        :param request_service_type: The request_service_type of this Coverage.
        :param service_type_description: The service_type_description of this Coverage.
        """
        self.openapi_types = {
            'appointment': str,
            'cob_level': str,
            'coverage_details': str,
            'coverage_subscriber': str,
            'eligibility': str,
            'patient': str,
            'payer_name': str,
            'query_date': str,
            'request_service_type': str,
            'service_type_description': str
        }

        self.attribute_map = {
            'appointment': 'appointment',
            'cob_level': 'cob_level',
            'coverage_details': 'coverage_details',
            'coverage_subscriber': 'coverage_subscriber',
            'eligibility': 'eligibility',
            'patient': 'patient',
            'payer_name': 'payer_name',
            'query_date': 'query_date',
            'request_service_type': 'request_service_type',
            'service_type_description': 'service_type_description'
        }

        self._appointment = appointment
        self._cob_level = cob_level
        self._coverage_details = coverage_details
        self._coverage_subscriber = coverage_subscriber
        self._eligibility = eligibility
        self._patient = patient
        self._payer_name = payer_name
        self._query_date = query_date
        self._request_service_type = request_service_type
        self._service_type_description = service_type_description

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Coverage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Coverage of this Coverage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def appointment(self):
        """Gets the appointment of this Coverage.

        

        :return: The appointment of this Coverage.
        :rtype: str
        """
        return self._appointment

    @appointment.setter
    def appointment(self, appointment):
        """Sets the appointment of this Coverage.

        

        :param appointment: The appointment of this Coverage.
        :type appointment: str
        """

        self._appointment = appointment

    @property
    def cob_level(self):
        """Gets the cob_level of this Coverage.

        The level of insurance the eligibility check was run on. Can be one of the following: `Primary Insurance` or `Secondary Insurance`

        :return: The cob_level of this Coverage.
        :rtype: str
        """
        return self._cob_level

    @cob_level.setter
    def cob_level(self, cob_level):
        """Sets the cob_level of this Coverage.

        The level of insurance the eligibility check was run on. Can be one of the following: `Primary Insurance` or `Secondary Insurance`

        :param cob_level: The cob_level of this Coverage.
        :type cob_level: str
        """

        self._cob_level = cob_level

    @property
    def coverage_details(self):
        """Gets the coverage_details of this Coverage.

        A variable size object containing the details of the eligibility check, if returned by the clearinghouse that ran the eligibility check

        :return: The coverage_details of this Coverage.
        :rtype: str
        """
        return self._coverage_details

    @coverage_details.setter
    def coverage_details(self, coverage_details):
        """Sets the coverage_details of this Coverage.

        A variable size object containing the details of the eligibility check, if returned by the clearinghouse that ran the eligibility check

        :param coverage_details: The coverage_details of this Coverage.
        :type coverage_details: str
        """

        self._coverage_details = coverage_details

    @property
    def coverage_subscriber(self):
        """Gets the coverage_subscriber of this Coverage.

        A variable size object containing subscriber information, if returned by the clearinghouse that ran the eligibility check

        :return: The coverage_subscriber of this Coverage.
        :rtype: str
        """
        return self._coverage_subscriber

    @coverage_subscriber.setter
    def coverage_subscriber(self, coverage_subscriber):
        """Sets the coverage_subscriber of this Coverage.

        A variable size object containing subscriber information, if returned by the clearinghouse that ran the eligibility check

        :param coverage_subscriber: The coverage_subscriber of this Coverage.
        :type coverage_subscriber: str
        """

        self._coverage_subscriber = coverage_subscriber

    @property
    def eligibility(self):
        """Gets the eligibility of this Coverage.

         Value | Description --- | ---- `'1'` | Active Coverage `'2'` | Active - Full Risk Capitation `'3'` | Active - Services Capitated `'4'` | Active - Services Capitated to Primary Care Physician `'5'` | Active - Pending Investigation `'6'` | Inactive `'7'` | Inactive - Pending Eligibility Update `'8'` | Inactive - Pending Investigation `'A'` | Co-Insurance `'B'` | Co-Payment `'C'` | Deductible `'CB'` | Coverage Basis `'D'` | Benefit Description `'E'` | Exclusions `'F'` | Limitations `'G'` | Out of Pocket (Stop Loss) `'H'` | Unlimited `'I'` | Non-Covered `'J'` | Cost Containment `'K'` | Reserve `'L'` | Primary Care Provider `'M'` | Pre-existing Condition `'MC'` | Managed Care Coordinator `'N'` | Services Restricted to Following Provider `'O'` | Not Deemed a Medical Necessity `'P'` | Benefit Disclaimer `'Q'` | Second Surgical Opinion Required `'R'` | Other or Additional Payor `'S'` | Prior Year(s) History `'T'` | Card(s) Reported Lost/Stolen `'U'` | Contact Following Entity for Eligibility or Benefit Information `'V'` | Cannot Process `'W'` | Other Source of Data `'X'` | Health Care Facility `'Y'` | Spend Down 

        :return: The eligibility of this Coverage.
        :rtype: str
        """
        return self._eligibility

    @eligibility.setter
    def eligibility(self, eligibility):
        """Sets the eligibility of this Coverage.

         Value | Description --- | ---- `'1'` | Active Coverage `'2'` | Active - Full Risk Capitation `'3'` | Active - Services Capitated `'4'` | Active - Services Capitated to Primary Care Physician `'5'` | Active - Pending Investigation `'6'` | Inactive `'7'` | Inactive - Pending Eligibility Update `'8'` | Inactive - Pending Investigation `'A'` | Co-Insurance `'B'` | Co-Payment `'C'` | Deductible `'CB'` | Coverage Basis `'D'` | Benefit Description `'E'` | Exclusions `'F'` | Limitations `'G'` | Out of Pocket (Stop Loss) `'H'` | Unlimited `'I'` | Non-Covered `'J'` | Cost Containment `'K'` | Reserve `'L'` | Primary Care Provider `'M'` | Pre-existing Condition `'MC'` | Managed Care Coordinator `'N'` | Services Restricted to Following Provider `'O'` | Not Deemed a Medical Necessity `'P'` | Benefit Disclaimer `'Q'` | Second Surgical Opinion Required `'R'` | Other or Additional Payor `'S'` | Prior Year(s) History `'T'` | Card(s) Reported Lost/Stolen `'U'` | Contact Following Entity for Eligibility or Benefit Information `'V'` | Cannot Process `'W'` | Other Source of Data `'X'` | Health Care Facility `'Y'` | Spend Down 

        :param eligibility: The eligibility of this Coverage.
        :type eligibility: str
        """

        self._eligibility = eligibility

    @property
    def patient(self):
        """Gets the patient of this Coverage.

        

        :return: The patient of this Coverage.
        :rtype: str
        """
        return self._patient

    @patient.setter
    def patient(self, patient):
        """Sets the patient of this Coverage.

        

        :param patient: The patient of this Coverage.
        :type patient: str
        """

        self._patient = patient

    @property
    def payer_name(self):
        """Gets the payer_name of this Coverage.

        The name of the payer as returned by the clearinghouse that ran the eligibility check

        :return: The payer_name of this Coverage.
        :rtype: str
        """
        return self._payer_name

    @payer_name.setter
    def payer_name(self, payer_name):
        """Sets the payer_name of this Coverage.

        The name of the payer as returned by the clearinghouse that ran the eligibility check

        :param payer_name: The payer_name of this Coverage.
        :type payer_name: str
        """

        self._payer_name = payer_name

    @property
    def query_date(self):
        """Gets the query_date of this Coverage.

        The time at which the request was made

        :return: The query_date of this Coverage.
        :rtype: str
        """
        return self._query_date

    @query_date.setter
    def query_date(self, query_date):
        """Sets the query_date of this Coverage.

        The time at which the request was made

        :param query_date: The query_date of this Coverage.
        :type query_date: str
        """

        self._query_date = query_date

    @property
    def request_service_type(self):
        """Gets the request_service_type of this Coverage.

         Value | Description --- | ---- `'1'` | Medical Care `'2'` | Surgical `'3'` | Consultation `'4'` | Diagnostic X-Ray `'5'` | Diagnostic Lab `'6'` | Radiation Therapy `'7'` | Anesthesia `'8'` | Surgical Assistance `'9'` | Other Medical `'10'` | Blood Charges `'11'` | Used Durable Medical Equipment `'12'` | Durable Medical Equipment Purchase `'13'` | Ambulatory Service Center Facility `'14'` | Renal Supplies in the Home `'15'` | Alternate Method Dialysis `'16'` | Chronic Renal Disease (CRD) Equipment `'17'` | Pre-Admission Testing `'18'` | Durable Medical Equipment Rental `'19'` | Pneumonia Vaccine `'20'` | Second Surgical Opinion `'21'` | Third Surgical Opinion `'22'` | Social Work `'23'` | Diagnostic Dental `'24'` | Periodontics `'25'` | Restorative `'26'` | Endodontics `'27'` | Maxillofacial Prosthetics `'28'` | Adjunctive Dental Services `'30'` | Health Benefit Plan Coverage `'32'` | Plan Waiting Period `'33'` | Chiropractic `'34'` | Chiropractic Office Visits `'35'` | Dental Care `'36'` | Dental Crowns `'37'` | Dental Accident `'38'` | Orthodontics `'39'` | Prosthodontics `'40'` | Oral Surgery `'41'` | Routine (Preventive) Dental `'42'` | Home Health Care `'43'` | Home Health Prescriptions `'44'` | Home Health Visits `'45'` | Hospice `'46'` | Respite Care `'47'` | Hospital `'48'` | Hospital - Inpatient `'49'` | Hospital - Room and Board `'50'` | Hospital - Outpatient `'51'` | Hospital - Emergency Accident `'52'` | Hospital - Emergency Medical `'53'` | Hospital - Ambulatory Surgical `'54'` | Long Term Care `'55'` | Major Medical `'56'` | Medically Related Transportation `'57'` | Air Transportation `'58'` | Cabulance `'59'` | Licensed Ambulance `'60'` | General Benefits `'61'` | In-vitro Fertilization `'62'` | MRI/CAT Scan `'63'` | Donor Procedures `'64'` | Acupuncture `'65'` | Newborn Care `'66'` | Pathology `'67'` | Smoking Cessation `'68'` | Well Baby Care `'69'` | Maternity `'70'` | Transplants `'71'` | Audiology Exam `'72'` | Inhalation Therapy `'73'` | Diagnostic Medical `'74'` | Private Duty Nursing `'75'` | Prosthetic Device `'76'` | Dialysis `'77'` | Otological Exam `'78'` | Chemotherapy `'79'` | Allergy Testing `'80'` | Immunizations `'81'` | Routine Physical `'82'` | Family Planning `'83'` | Infertility `'84'` | Abortion `'85'` | AIDS `'86'` | Emergency Services `'87'` | Cancer `'88'` | Pharmacy `'89'` | Free Standing Prescription Drug `'90'` | Mail Order Prescription Drug `'91'` | Brand Name Prescription Drug `'92'` | Generic Prescription Drug `'93'` | Podiatry `'94'` | Podiatry - Office Visits `'95'` | Podiatry - Nursing Home Visits `'96'` | Professional (Physician) `'97'` | Anesthesiologist `'98'` | Professional (Physician) Visit - Office `'99'` | Professional (Physician) Visit - Inpatient `'A0'` | Professional (Physician) Visit - Outpatient `'A1'` | Professional (Physician) Visit - Nursing Home `'A2'` | Professional (Physician) Visit - Skilled Nursing Facility `'A3'` | Professional (Physician) Visit - Home `'A4'` | Psychiatric `'A5'` | Psychiatric - Room and Board `'A6'` | Psychotherapy `'A7'` | Psychiatric - Inpatient `'A8'` | Psychiatric - Outpatient `'A9'` | Rehabilitation `'AA'` | Rehabilitation - Room and Board `'AB'` | Rehabilitation - Inpatient `'AC'` | Rehabilitation - Outpatient `'AD'` | Occupational Therapy `'AE'` | Physical Medicine `'AF'` | Speech Therapy `'AG'` | Skilled Nursing Care `'AH'` | Skilled Nursing Care - Room and Board `'AI'` | Substance Abuse `'AJ'` | Alcoholism `'AK'` | Drug Addiction `'AL'` | Vision (Optometry) `'AM'` | Frames `'AN'` | Routine Exam `'AO'` | Lenses `'AQ'` | Nonmedically Necessary Physical `'AR'` | Experimental Drug Therapy `'B1'` | Burn Care `'B2'` | Brand Name Prescription Drug - Formulary `'B3'` | Brand Name Prescription Drug - Non-Formulary `'BA'` | Independent Medical Evaluation `'BB'` | Partial Hospitalization (Psychiatric) `'BC'` | Day Care (Psychiatric) `'BD'` | Cognitive Therapy `'BE'` | Massage Therapy `'BF'` | Pulmonary Rehabilitation `'BG'` | Cardiac Rehabilitation `'BH'` | Pediatric `'BI'` | Nursery `'BJ'` | Skin `'BK'` | Orthopedic `'BL'` | Cardiac `'BM'` | Lymphatic `'BN'` | Gastrointestinal `'BP'` | Endocrine `'BQ'` | Neurology `'BR'` | Eye `'BS'` | Invasive Procedures `'BT'` | Gynecological `'BU'` | Obstetrical `'BV'` | Obstetrical/Gynecological `'BW'` | Mail Order Prescription Drug: Brand Name `'BX'` | Mail Order Prescription Drug: Generic `'BY'` | Physician Visit - Office: Sick `'BZ'` | Physician Visit - Office: Well `'C1'` | Coronary Care `'CA'` | Private Duty Nursing - Inpatient `'CB'` | Private Duty Nursing - Home `'CC'` | Surgical Benefits - Professional (Physician) `'CD'` | Surgical Benefits - Facility `'CE'` | Mental Health Provider - Inpatient `'CF'` | Mental Health Provider - Outpatient `'CG'` | Mental Health Facility - Inpatient `'CH'` | Mental Health Facility - Outpatient `'CI'` | Substance Abuse Facility - Inpatient `'CJ'` | Substance Abuse Facility - Outpatient `'CK'` | Screening X-ray `'CL'` | Screening laboratory `'CM'` | Mammogram, High Risk Patient `'CN'` | Mammogram, Low Risk Patient `'CO'` | Flu Vaccination `'CP'` | Eyewear and Eyewear Accessories `'CQ'` | Case Management `'DG'` | Dermatology `'DM'` | Durable Medical Equipment `'DS'` | Diabetic Supplies `'GF'` | Generic Prescription Drug - Formulary `'GN'` | Generic Prescription Drug - Non-Formulary `'GY'` | Allergy `'IC'` | Intensive Care `'MH'` | Mental Health `'NI'` | Neonatal Intensive Care `'ON'` | Oncology `'PT'` | Physical Therapy `'PU'` | Pulmonary `'RN'` | Renal `'RT'` | Residential Psychiatric Treatment `'TC'` | Transitional Care `'TN'` | Transitional Nursery Care `'UC'` | Urgent Care 

        :return: The request_service_type of this Coverage.
        :rtype: str
        """
        return self._request_service_type

    @request_service_type.setter
    def request_service_type(self, request_service_type):
        """Sets the request_service_type of this Coverage.

         Value | Description --- | ---- `'1'` | Medical Care `'2'` | Surgical `'3'` | Consultation `'4'` | Diagnostic X-Ray `'5'` | Diagnostic Lab `'6'` | Radiation Therapy `'7'` | Anesthesia `'8'` | Surgical Assistance `'9'` | Other Medical `'10'` | Blood Charges `'11'` | Used Durable Medical Equipment `'12'` | Durable Medical Equipment Purchase `'13'` | Ambulatory Service Center Facility `'14'` | Renal Supplies in the Home `'15'` | Alternate Method Dialysis `'16'` | Chronic Renal Disease (CRD) Equipment `'17'` | Pre-Admission Testing `'18'` | Durable Medical Equipment Rental `'19'` | Pneumonia Vaccine `'20'` | Second Surgical Opinion `'21'` | Third Surgical Opinion `'22'` | Social Work `'23'` | Diagnostic Dental `'24'` | Periodontics `'25'` | Restorative `'26'` | Endodontics `'27'` | Maxillofacial Prosthetics `'28'` | Adjunctive Dental Services `'30'` | Health Benefit Plan Coverage `'32'` | Plan Waiting Period `'33'` | Chiropractic `'34'` | Chiropractic Office Visits `'35'` | Dental Care `'36'` | Dental Crowns `'37'` | Dental Accident `'38'` | Orthodontics `'39'` | Prosthodontics `'40'` | Oral Surgery `'41'` | Routine (Preventive) Dental `'42'` | Home Health Care `'43'` | Home Health Prescriptions `'44'` | Home Health Visits `'45'` | Hospice `'46'` | Respite Care `'47'` | Hospital `'48'` | Hospital - Inpatient `'49'` | Hospital - Room and Board `'50'` | Hospital - Outpatient `'51'` | Hospital - Emergency Accident `'52'` | Hospital - Emergency Medical `'53'` | Hospital - Ambulatory Surgical `'54'` | Long Term Care `'55'` | Major Medical `'56'` | Medically Related Transportation `'57'` | Air Transportation `'58'` | Cabulance `'59'` | Licensed Ambulance `'60'` | General Benefits `'61'` | In-vitro Fertilization `'62'` | MRI/CAT Scan `'63'` | Donor Procedures `'64'` | Acupuncture `'65'` | Newborn Care `'66'` | Pathology `'67'` | Smoking Cessation `'68'` | Well Baby Care `'69'` | Maternity `'70'` | Transplants `'71'` | Audiology Exam `'72'` | Inhalation Therapy `'73'` | Diagnostic Medical `'74'` | Private Duty Nursing `'75'` | Prosthetic Device `'76'` | Dialysis `'77'` | Otological Exam `'78'` | Chemotherapy `'79'` | Allergy Testing `'80'` | Immunizations `'81'` | Routine Physical `'82'` | Family Planning `'83'` | Infertility `'84'` | Abortion `'85'` | AIDS `'86'` | Emergency Services `'87'` | Cancer `'88'` | Pharmacy `'89'` | Free Standing Prescription Drug `'90'` | Mail Order Prescription Drug `'91'` | Brand Name Prescription Drug `'92'` | Generic Prescription Drug `'93'` | Podiatry `'94'` | Podiatry - Office Visits `'95'` | Podiatry - Nursing Home Visits `'96'` | Professional (Physician) `'97'` | Anesthesiologist `'98'` | Professional (Physician) Visit - Office `'99'` | Professional (Physician) Visit - Inpatient `'A0'` | Professional (Physician) Visit - Outpatient `'A1'` | Professional (Physician) Visit - Nursing Home `'A2'` | Professional (Physician) Visit - Skilled Nursing Facility `'A3'` | Professional (Physician) Visit - Home `'A4'` | Psychiatric `'A5'` | Psychiatric - Room and Board `'A6'` | Psychotherapy `'A7'` | Psychiatric - Inpatient `'A8'` | Psychiatric - Outpatient `'A9'` | Rehabilitation `'AA'` | Rehabilitation - Room and Board `'AB'` | Rehabilitation - Inpatient `'AC'` | Rehabilitation - Outpatient `'AD'` | Occupational Therapy `'AE'` | Physical Medicine `'AF'` | Speech Therapy `'AG'` | Skilled Nursing Care `'AH'` | Skilled Nursing Care - Room and Board `'AI'` | Substance Abuse `'AJ'` | Alcoholism `'AK'` | Drug Addiction `'AL'` | Vision (Optometry) `'AM'` | Frames `'AN'` | Routine Exam `'AO'` | Lenses `'AQ'` | Nonmedically Necessary Physical `'AR'` | Experimental Drug Therapy `'B1'` | Burn Care `'B2'` | Brand Name Prescription Drug - Formulary `'B3'` | Brand Name Prescription Drug - Non-Formulary `'BA'` | Independent Medical Evaluation `'BB'` | Partial Hospitalization (Psychiatric) `'BC'` | Day Care (Psychiatric) `'BD'` | Cognitive Therapy `'BE'` | Massage Therapy `'BF'` | Pulmonary Rehabilitation `'BG'` | Cardiac Rehabilitation `'BH'` | Pediatric `'BI'` | Nursery `'BJ'` | Skin `'BK'` | Orthopedic `'BL'` | Cardiac `'BM'` | Lymphatic `'BN'` | Gastrointestinal `'BP'` | Endocrine `'BQ'` | Neurology `'BR'` | Eye `'BS'` | Invasive Procedures `'BT'` | Gynecological `'BU'` | Obstetrical `'BV'` | Obstetrical/Gynecological `'BW'` | Mail Order Prescription Drug: Brand Name `'BX'` | Mail Order Prescription Drug: Generic `'BY'` | Physician Visit - Office: Sick `'BZ'` | Physician Visit - Office: Well `'C1'` | Coronary Care `'CA'` | Private Duty Nursing - Inpatient `'CB'` | Private Duty Nursing - Home `'CC'` | Surgical Benefits - Professional (Physician) `'CD'` | Surgical Benefits - Facility `'CE'` | Mental Health Provider - Inpatient `'CF'` | Mental Health Provider - Outpatient `'CG'` | Mental Health Facility - Inpatient `'CH'` | Mental Health Facility - Outpatient `'CI'` | Substance Abuse Facility - Inpatient `'CJ'` | Substance Abuse Facility - Outpatient `'CK'` | Screening X-ray `'CL'` | Screening laboratory `'CM'` | Mammogram, High Risk Patient `'CN'` | Mammogram, Low Risk Patient `'CO'` | Flu Vaccination `'CP'` | Eyewear and Eyewear Accessories `'CQ'` | Case Management `'DG'` | Dermatology `'DM'` | Durable Medical Equipment `'DS'` | Diabetic Supplies `'GF'` | Generic Prescription Drug - Formulary `'GN'` | Generic Prescription Drug - Non-Formulary `'GY'` | Allergy `'IC'` | Intensive Care `'MH'` | Mental Health `'NI'` | Neonatal Intensive Care `'ON'` | Oncology `'PT'` | Physical Therapy `'PU'` | Pulmonary `'RN'` | Renal `'RT'` | Residential Psychiatric Treatment `'TC'` | Transitional Care `'TN'` | Transitional Nursery Care `'UC'` | Urgent Care 

        :param request_service_type: The request_service_type of this Coverage.
        :type request_service_type: str
        """
        allowed_valuestrue", "PT", "PU", "RN", "RT", "TC", "TN", "UC"]  # noqa: E501
        if request_service_type not in allowed_values:
            raise ValueError(
                "Invalid value for `request_service_type` ({0}), must be one of {1}"
                .format(request_service_type, allowed_values)
            )

        self._request_service_type = request_service_type

    @property
    def service_type_description(self):
        """Gets the service_type_description of this Coverage.

        

        :return: The service_type_description of this Coverage.
        :rtype: str
        """
        return self._service_type_description

    @service_type_description.setter
    def service_type_description(self, service_type_description):
        """Sets the service_type_description of this Coverage.

        

        :param service_type_description: The service_type_description of this Coverage.
        :type service_type_description: str
        """

        self._service_type_description = service_type_description
