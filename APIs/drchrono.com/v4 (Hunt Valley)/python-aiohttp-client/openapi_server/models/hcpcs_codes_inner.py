# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ndc_code_inner import NdcCodeInner
from openapi_server import util


class HcpcsCodesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, diagnosis_pointers_icd10: List[str]=None, diagnosis_pointers_icd9: List[str]=None, modifiers: List[str]=None, ndc_code: List[NdcCodeInner]=None, price: str=None, quantity: str=None):
        """HcpcsCodesInner - a model defined in OpenAPI

        :param code: The code of this HcpcsCodesInner.
        :param diagnosis_pointers_icd10: The diagnosis_pointers_icd10 of this HcpcsCodesInner.
        :param diagnosis_pointers_icd9: The diagnosis_pointers_icd9 of this HcpcsCodesInner.
        :param modifiers: The modifiers of this HcpcsCodesInner.
        :param ndc_code: The ndc_code of this HcpcsCodesInner.
        :param price: The price of this HcpcsCodesInner.
        :param quantity: The quantity of this HcpcsCodesInner.
        """
        self.openapi_types = {
            'code': str,
            'diagnosis_pointers_icd10': List[str],
            'diagnosis_pointers_icd9': List[str],
            'modifiers': List[str],
            'ndc_code': List[NdcCodeInner],
            'price': str,
            'quantity': str
        }

        self.attribute_map = {
            'code': 'code',
            'diagnosis_pointers_icd10': 'diagnosis_pointers_icd10',
            'diagnosis_pointers_icd9': 'diagnosis_pointers_icd9',
            'modifiers': 'modifiers',
            'ndc_code': 'ndc_code',
            'price': 'price',
            'quantity': 'quantity'
        }

        self._code = code
        self._diagnosis_pointers_icd10 = diagnosis_pointers_icd10
        self._diagnosis_pointers_icd9 = diagnosis_pointers_icd9
        self._modifiers = modifiers
        self._ndc_code = ndc_code
        self._price = price
        self._quantity = quantity

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HcpcsCodesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Hcpcs_codes_inner of this HcpcsCodesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this HcpcsCodesInner.

        

        :return: The code of this HcpcsCodesInner.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this HcpcsCodesInner.

        

        :param code: The code of this HcpcsCodesInner.
        :type code: str
        """

        self._code = code

    @property
    def diagnosis_pointers_icd10(self):
        """Gets the diagnosis_pointers_icd10 of this HcpcsCodesInner.

        ICD10 codes represented in array of strings

        :return: The diagnosis_pointers_icd10 of this HcpcsCodesInner.
        :rtype: List[str]
        """
        return self._diagnosis_pointers_icd10

    @diagnosis_pointers_icd10.setter
    def diagnosis_pointers_icd10(self, diagnosis_pointers_icd10):
        """Sets the diagnosis_pointers_icd10 of this HcpcsCodesInner.

        ICD10 codes represented in array of strings

        :param diagnosis_pointers_icd10: The diagnosis_pointers_icd10 of this HcpcsCodesInner.
        :type diagnosis_pointers_icd10: List[str]
        """

        self._diagnosis_pointers_icd10 = diagnosis_pointers_icd10

    @property
    def diagnosis_pointers_icd9(self):
        """Gets the diagnosis_pointers_icd9 of this HcpcsCodesInner.

        ICD9 codes represented in array of strings

        :return: The diagnosis_pointers_icd9 of this HcpcsCodesInner.
        :rtype: List[str]
        """
        return self._diagnosis_pointers_icd9

    @diagnosis_pointers_icd9.setter
    def diagnosis_pointers_icd9(self, diagnosis_pointers_icd9):
        """Sets the diagnosis_pointers_icd9 of this HcpcsCodesInner.

        ICD9 codes represented in array of strings

        :param diagnosis_pointers_icd9: The diagnosis_pointers_icd9 of this HcpcsCodesInner.
        :type diagnosis_pointers_icd9: List[str]
        """

        self._diagnosis_pointers_icd9 = diagnosis_pointers_icd9

    @property
    def modifiers(self):
        """Gets the modifiers of this HcpcsCodesInner.

        Modifiers represented in array of strings

        :return: The modifiers of this HcpcsCodesInner.
        :rtype: List[str]
        """
        return self._modifiers

    @modifiers.setter
    def modifiers(self, modifiers):
        """Sets the modifiers of this HcpcsCodesInner.

        Modifiers represented in array of strings

        :param modifiers: The modifiers of this HcpcsCodesInner.
        :type modifiers: List[str]
        """

        self._modifiers = modifiers

    @property
    def ndc_code(self):
        """Gets the ndc_code of this HcpcsCodesInner.

        Array of NDC Code objects

        :return: The ndc_code of this HcpcsCodesInner.
        :rtype: List[NdcCodeInner]
        """
        return self._ndc_code

    @ndc_code.setter
    def ndc_code(self, ndc_code):
        """Sets the ndc_code of this HcpcsCodesInner.

        Array of NDC Code objects

        :param ndc_code: The ndc_code of this HcpcsCodesInner.
        :type ndc_code: List[NdcCodeInner]
        """

        self._ndc_code = ndc_code

    @property
    def price(self):
        """Gets the price of this HcpcsCodesInner.

        This field is represented in string format

        :return: The price of this HcpcsCodesInner.
        :rtype: str
        """
        return self._price

    @price.setter
    def price(self, price):
        """Sets the price of this HcpcsCodesInner.

        This field is represented in string format

        :param price: The price of this HcpcsCodesInner.
        :type price: str
        """

        self._price = price

    @property
    def quantity(self):
        """Gets the quantity of this HcpcsCodesInner.

        This field is represented in string format

        :return: The quantity of this HcpcsCodesInner.
        :rtype: str
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this HcpcsCodesInner.

        This field is represented in string format

        :param quantity: The quantity of this HcpcsCodesInner.
        :type quantity: str
        """

        self._quantity = quantity
