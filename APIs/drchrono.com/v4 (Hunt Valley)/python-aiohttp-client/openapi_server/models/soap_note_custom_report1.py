# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SoapNoteCustomReport1(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, on_complete_note: int=None, on_ipad: int=None):
        """SoapNoteCustomReport1 - a model defined in OpenAPI

        :param on_complete_note: The on_complete_note of this SoapNoteCustomReport1.
        :param on_ipad: The on_ipad of this SoapNoteCustomReport1.
        """
        self.openapi_types = {
            'on_complete_note': int,
            'on_ipad': int
        }

        self.attribute_map = {
            'on_complete_note': 'on_complete_note',
            'on_ipad': 'on_ipad'
        }

        self._on_complete_note = on_complete_note
        self._on_ipad = on_ipad

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SoapNoteCustomReport1':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SoapNoteCustomReport_1 of this SoapNoteCustomReport1.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def on_complete_note(self):
        """Gets the on_complete_note of this SoapNoteCustomReport1.

        Order of the template on complete notes

        :return: The on_complete_note of this SoapNoteCustomReport1.
        :rtype: int
        """
        return self._on_complete_note

    @on_complete_note.setter
    def on_complete_note(self, on_complete_note):
        """Sets the on_complete_note of this SoapNoteCustomReport1.

        Order of the template on complete notes

        :param on_complete_note: The on_complete_note of this SoapNoteCustomReport1.
        :type on_complete_note: int
        """

        self._on_complete_note = on_complete_note

    @property
    def on_ipad(self):
        """Gets the on_ipad of this SoapNoteCustomReport1.

        Order of the template on iPad

        :return: The on_ipad of this SoapNoteCustomReport1.
        :rtype: int
        """
        return self._on_ipad

    @on_ipad.setter
    def on_ipad(self, on_ipad):
        """Sets the on_ipad of this SoapNoteCustomReport1.

        Order of the template on iPad

        :param on_ipad: The on_ipad of this SoapNoteCustomReport1.
        :type on_ipad: int
        """

        self._on_ipad = on_ipad
