# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MatchScoreBreakdown2022Alliance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adjust_points: int=None, auto_cargo_lower_blue: int=None, auto_cargo_lower_far: int=None, auto_cargo_lower_near: int=None, auto_cargo_lower_red: int=None, auto_cargo_points: int=None, auto_cargo_total: int=None, auto_cargo_upper_blue: int=None, auto_cargo_upper_far: int=None, auto_cargo_upper_near: int=None, auto_cargo_upper_red: int=None, auto_points: int=None, auto_taxi_points: int=None, cargo_bonus_ranking_point: bool=None, endgame_points: int=None, endgame_robot1: str=None, endgame_robot2: str=None, endgame_robot3: str=None, foul_count: int=None, foul_points: int=None, hangar_bonus_ranking_point: bool=None, match_cargo_total: int=None, quintet_achieved: bool=None, rp: int=None, taxi_robot1: str=None, taxi_robot2: str=None, taxi_robot3: str=None, tech_foul_count: int=None, teleop_cargo_lower_blue: int=None, teleop_cargo_lower_far: int=None, teleop_cargo_lower_near: int=None, teleop_cargo_lower_red: int=None, teleop_cargo_points: int=None, teleop_cargo_total: int=None, teleop_cargo_upper_blue: int=None, teleop_cargo_upper_far: int=None, teleop_cargo_upper_near: int=None, teleop_cargo_upper_red: int=None, teleop_points: int=None, total_points: int=None):
        """MatchScoreBreakdown2022Alliance - a model defined in OpenAPI

        :param adjust_points: The adjust_points of this MatchScoreBreakdown2022Alliance.
        :param auto_cargo_lower_blue: The auto_cargo_lower_blue of this MatchScoreBreakdown2022Alliance.
        :param auto_cargo_lower_far: The auto_cargo_lower_far of this MatchScoreBreakdown2022Alliance.
        :param auto_cargo_lower_near: The auto_cargo_lower_near of this MatchScoreBreakdown2022Alliance.
        :param auto_cargo_lower_red: The auto_cargo_lower_red of this MatchScoreBreakdown2022Alliance.
        :param auto_cargo_points: The auto_cargo_points of this MatchScoreBreakdown2022Alliance.
        :param auto_cargo_total: The auto_cargo_total of this MatchScoreBreakdown2022Alliance.
        :param auto_cargo_upper_blue: The auto_cargo_upper_blue of this MatchScoreBreakdown2022Alliance.
        :param auto_cargo_upper_far: The auto_cargo_upper_far of this MatchScoreBreakdown2022Alliance.
        :param auto_cargo_upper_near: The auto_cargo_upper_near of this MatchScoreBreakdown2022Alliance.
        :param auto_cargo_upper_red: The auto_cargo_upper_red of this MatchScoreBreakdown2022Alliance.
        :param auto_points: The auto_points of this MatchScoreBreakdown2022Alliance.
        :param auto_taxi_points: The auto_taxi_points of this MatchScoreBreakdown2022Alliance.
        :param cargo_bonus_ranking_point: The cargo_bonus_ranking_point of this MatchScoreBreakdown2022Alliance.
        :param endgame_points: The endgame_points of this MatchScoreBreakdown2022Alliance.
        :param endgame_robot1: The endgame_robot1 of this MatchScoreBreakdown2022Alliance.
        :param endgame_robot2: The endgame_robot2 of this MatchScoreBreakdown2022Alliance.
        :param endgame_robot3: The endgame_robot3 of this MatchScoreBreakdown2022Alliance.
        :param foul_count: The foul_count of this MatchScoreBreakdown2022Alliance.
        :param foul_points: The foul_points of this MatchScoreBreakdown2022Alliance.
        :param hangar_bonus_ranking_point: The hangar_bonus_ranking_point of this MatchScoreBreakdown2022Alliance.
        :param match_cargo_total: The match_cargo_total of this MatchScoreBreakdown2022Alliance.
        :param quintet_achieved: The quintet_achieved of this MatchScoreBreakdown2022Alliance.
        :param rp: The rp of this MatchScoreBreakdown2022Alliance.
        :param taxi_robot1: The taxi_robot1 of this MatchScoreBreakdown2022Alliance.
        :param taxi_robot2: The taxi_robot2 of this MatchScoreBreakdown2022Alliance.
        :param taxi_robot3: The taxi_robot3 of this MatchScoreBreakdown2022Alliance.
        :param tech_foul_count: The tech_foul_count of this MatchScoreBreakdown2022Alliance.
        :param teleop_cargo_lower_blue: The teleop_cargo_lower_blue of this MatchScoreBreakdown2022Alliance.
        :param teleop_cargo_lower_far: The teleop_cargo_lower_far of this MatchScoreBreakdown2022Alliance.
        :param teleop_cargo_lower_near: The teleop_cargo_lower_near of this MatchScoreBreakdown2022Alliance.
        :param teleop_cargo_lower_red: The teleop_cargo_lower_red of this MatchScoreBreakdown2022Alliance.
        :param teleop_cargo_points: The teleop_cargo_points of this MatchScoreBreakdown2022Alliance.
        :param teleop_cargo_total: The teleop_cargo_total of this MatchScoreBreakdown2022Alliance.
        :param teleop_cargo_upper_blue: The teleop_cargo_upper_blue of this MatchScoreBreakdown2022Alliance.
        :param teleop_cargo_upper_far: The teleop_cargo_upper_far of this MatchScoreBreakdown2022Alliance.
        :param teleop_cargo_upper_near: The teleop_cargo_upper_near of this MatchScoreBreakdown2022Alliance.
        :param teleop_cargo_upper_red: The teleop_cargo_upper_red of this MatchScoreBreakdown2022Alliance.
        :param teleop_points: The teleop_points of this MatchScoreBreakdown2022Alliance.
        :param total_points: The total_points of this MatchScoreBreakdown2022Alliance.
        """
        self.openapi_types = {
            'adjust_points': int,
            'auto_cargo_lower_blue': int,
            'auto_cargo_lower_far': int,
            'auto_cargo_lower_near': int,
            'auto_cargo_lower_red': int,
            'auto_cargo_points': int,
            'auto_cargo_total': int,
            'auto_cargo_upper_blue': int,
            'auto_cargo_upper_far': int,
            'auto_cargo_upper_near': int,
            'auto_cargo_upper_red': int,
            'auto_points': int,
            'auto_taxi_points': int,
            'cargo_bonus_ranking_point': bool,
            'endgame_points': int,
            'endgame_robot1': str,
            'endgame_robot2': str,
            'endgame_robot3': str,
            'foul_count': int,
            'foul_points': int,
            'hangar_bonus_ranking_point': bool,
            'match_cargo_total': int,
            'quintet_achieved': bool,
            'rp': int,
            'taxi_robot1': str,
            'taxi_robot2': str,
            'taxi_robot3': str,
            'tech_foul_count': int,
            'teleop_cargo_lower_blue': int,
            'teleop_cargo_lower_far': int,
            'teleop_cargo_lower_near': int,
            'teleop_cargo_lower_red': int,
            'teleop_cargo_points': int,
            'teleop_cargo_total': int,
            'teleop_cargo_upper_blue': int,
            'teleop_cargo_upper_far': int,
            'teleop_cargo_upper_near': int,
            'teleop_cargo_upper_red': int,
            'teleop_points': int,
            'total_points': int
        }

        self.attribute_map = {
            'adjust_points': 'adjustPoints',
            'auto_cargo_lower_blue': 'autoCargoLowerBlue',
            'auto_cargo_lower_far': 'autoCargoLowerFar',
            'auto_cargo_lower_near': 'autoCargoLowerNear',
            'auto_cargo_lower_red': 'autoCargoLowerRed',
            'auto_cargo_points': 'autoCargoPoints',
            'auto_cargo_total': 'autoCargoTotal',
            'auto_cargo_upper_blue': 'autoCargoUpperBlue',
            'auto_cargo_upper_far': 'autoCargoUpperFar',
            'auto_cargo_upper_near': 'autoCargoUpperNear',
            'auto_cargo_upper_red': 'autoCargoUpperRed',
            'auto_points': 'autoPoints',
            'auto_taxi_points': 'autoTaxiPoints',
            'cargo_bonus_ranking_point': 'cargoBonusRankingPoint',
            'endgame_points': 'endgamePoints',
            'endgame_robot1': 'endgameRobot1',
            'endgame_robot2': 'endgameRobot2',
            'endgame_robot3': 'endgameRobot3',
            'foul_count': 'foulCount',
            'foul_points': 'foulPoints',
            'hangar_bonus_ranking_point': 'hangarBonusRankingPoint',
            'match_cargo_total': 'matchCargoTotal',
            'quintet_achieved': 'quintetAchieved',
            'rp': 'rp',
            'taxi_robot1': 'taxiRobot1',
            'taxi_robot2': 'taxiRobot2',
            'taxi_robot3': 'taxiRobot3',
            'tech_foul_count': 'techFoulCount',
            'teleop_cargo_lower_blue': 'teleopCargoLowerBlue',
            'teleop_cargo_lower_far': 'teleopCargoLowerFar',
            'teleop_cargo_lower_near': 'teleopCargoLowerNear',
            'teleop_cargo_lower_red': 'teleopCargoLowerRed',
            'teleop_cargo_points': 'teleopCargoPoints',
            'teleop_cargo_total': 'teleopCargoTotal',
            'teleop_cargo_upper_blue': 'teleopCargoUpperBlue',
            'teleop_cargo_upper_far': 'teleopCargoUpperFar',
            'teleop_cargo_upper_near': 'teleopCargoUpperNear',
            'teleop_cargo_upper_red': 'teleopCargoUpperRed',
            'teleop_points': 'teleopPoints',
            'total_points': 'totalPoints'
        }

        self._adjust_points = adjust_points
        self._auto_cargo_lower_blue = auto_cargo_lower_blue
        self._auto_cargo_lower_far = auto_cargo_lower_far
        self._auto_cargo_lower_near = auto_cargo_lower_near
        self._auto_cargo_lower_red = auto_cargo_lower_red
        self._auto_cargo_points = auto_cargo_points
        self._auto_cargo_total = auto_cargo_total
        self._auto_cargo_upper_blue = auto_cargo_upper_blue
        self._auto_cargo_upper_far = auto_cargo_upper_far
        self._auto_cargo_upper_near = auto_cargo_upper_near
        self._auto_cargo_upper_red = auto_cargo_upper_red
        self._auto_points = auto_points
        self._auto_taxi_points = auto_taxi_points
        self._cargo_bonus_ranking_point = cargo_bonus_ranking_point
        self._endgame_points = endgame_points
        self._endgame_robot1 = endgame_robot1
        self._endgame_robot2 = endgame_robot2
        self._endgame_robot3 = endgame_robot3
        self._foul_count = foul_count
        self._foul_points = foul_points
        self._hangar_bonus_ranking_point = hangar_bonus_ranking_point
        self._match_cargo_total = match_cargo_total
        self._quintet_achieved = quintet_achieved
        self._rp = rp
        self._taxi_robot1 = taxi_robot1
        self._taxi_robot2 = taxi_robot2
        self._taxi_robot3 = taxi_robot3
        self._tech_foul_count = tech_foul_count
        self._teleop_cargo_lower_blue = teleop_cargo_lower_blue
        self._teleop_cargo_lower_far = teleop_cargo_lower_far
        self._teleop_cargo_lower_near = teleop_cargo_lower_near
        self._teleop_cargo_lower_red = teleop_cargo_lower_red
        self._teleop_cargo_points = teleop_cargo_points
        self._teleop_cargo_total = teleop_cargo_total
        self._teleop_cargo_upper_blue = teleop_cargo_upper_blue
        self._teleop_cargo_upper_far = teleop_cargo_upper_far
        self._teleop_cargo_upper_near = teleop_cargo_upper_near
        self._teleop_cargo_upper_red = teleop_cargo_upper_red
        self._teleop_points = teleop_points
        self._total_points = total_points

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MatchScoreBreakdown2022Alliance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Match_Score_Breakdown_2022_Alliance of this MatchScoreBreakdown2022Alliance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adjust_points(self):
        """Gets the adjust_points of this MatchScoreBreakdown2022Alliance.


        :return: The adjust_points of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._adjust_points

    @adjust_points.setter
    def adjust_points(self, adjust_points):
        """Sets the adjust_points of this MatchScoreBreakdown2022Alliance.


        :param adjust_points: The adjust_points of this MatchScoreBreakdown2022Alliance.
        :type adjust_points: int
        """

        self._adjust_points = adjust_points

    @property
    def auto_cargo_lower_blue(self):
        """Gets the auto_cargo_lower_blue of this MatchScoreBreakdown2022Alliance.


        :return: The auto_cargo_lower_blue of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._auto_cargo_lower_blue

    @auto_cargo_lower_blue.setter
    def auto_cargo_lower_blue(self, auto_cargo_lower_blue):
        """Sets the auto_cargo_lower_blue of this MatchScoreBreakdown2022Alliance.


        :param auto_cargo_lower_blue: The auto_cargo_lower_blue of this MatchScoreBreakdown2022Alliance.
        :type auto_cargo_lower_blue: int
        """

        self._auto_cargo_lower_blue = auto_cargo_lower_blue

    @property
    def auto_cargo_lower_far(self):
        """Gets the auto_cargo_lower_far of this MatchScoreBreakdown2022Alliance.


        :return: The auto_cargo_lower_far of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._auto_cargo_lower_far

    @auto_cargo_lower_far.setter
    def auto_cargo_lower_far(self, auto_cargo_lower_far):
        """Sets the auto_cargo_lower_far of this MatchScoreBreakdown2022Alliance.


        :param auto_cargo_lower_far: The auto_cargo_lower_far of this MatchScoreBreakdown2022Alliance.
        :type auto_cargo_lower_far: int
        """

        self._auto_cargo_lower_far = auto_cargo_lower_far

    @property
    def auto_cargo_lower_near(self):
        """Gets the auto_cargo_lower_near of this MatchScoreBreakdown2022Alliance.


        :return: The auto_cargo_lower_near of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._auto_cargo_lower_near

    @auto_cargo_lower_near.setter
    def auto_cargo_lower_near(self, auto_cargo_lower_near):
        """Sets the auto_cargo_lower_near of this MatchScoreBreakdown2022Alliance.


        :param auto_cargo_lower_near: The auto_cargo_lower_near of this MatchScoreBreakdown2022Alliance.
        :type auto_cargo_lower_near: int
        """

        self._auto_cargo_lower_near = auto_cargo_lower_near

    @property
    def auto_cargo_lower_red(self):
        """Gets the auto_cargo_lower_red of this MatchScoreBreakdown2022Alliance.


        :return: The auto_cargo_lower_red of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._auto_cargo_lower_red

    @auto_cargo_lower_red.setter
    def auto_cargo_lower_red(self, auto_cargo_lower_red):
        """Sets the auto_cargo_lower_red of this MatchScoreBreakdown2022Alliance.


        :param auto_cargo_lower_red: The auto_cargo_lower_red of this MatchScoreBreakdown2022Alliance.
        :type auto_cargo_lower_red: int
        """

        self._auto_cargo_lower_red = auto_cargo_lower_red

    @property
    def auto_cargo_points(self):
        """Gets the auto_cargo_points of this MatchScoreBreakdown2022Alliance.


        :return: The auto_cargo_points of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._auto_cargo_points

    @auto_cargo_points.setter
    def auto_cargo_points(self, auto_cargo_points):
        """Sets the auto_cargo_points of this MatchScoreBreakdown2022Alliance.


        :param auto_cargo_points: The auto_cargo_points of this MatchScoreBreakdown2022Alliance.
        :type auto_cargo_points: int
        """

        self._auto_cargo_points = auto_cargo_points

    @property
    def auto_cargo_total(self):
        """Gets the auto_cargo_total of this MatchScoreBreakdown2022Alliance.


        :return: The auto_cargo_total of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._auto_cargo_total

    @auto_cargo_total.setter
    def auto_cargo_total(self, auto_cargo_total):
        """Sets the auto_cargo_total of this MatchScoreBreakdown2022Alliance.


        :param auto_cargo_total: The auto_cargo_total of this MatchScoreBreakdown2022Alliance.
        :type auto_cargo_total: int
        """

        self._auto_cargo_total = auto_cargo_total

    @property
    def auto_cargo_upper_blue(self):
        """Gets the auto_cargo_upper_blue of this MatchScoreBreakdown2022Alliance.


        :return: The auto_cargo_upper_blue of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._auto_cargo_upper_blue

    @auto_cargo_upper_blue.setter
    def auto_cargo_upper_blue(self, auto_cargo_upper_blue):
        """Sets the auto_cargo_upper_blue of this MatchScoreBreakdown2022Alliance.


        :param auto_cargo_upper_blue: The auto_cargo_upper_blue of this MatchScoreBreakdown2022Alliance.
        :type auto_cargo_upper_blue: int
        """

        self._auto_cargo_upper_blue = auto_cargo_upper_blue

    @property
    def auto_cargo_upper_far(self):
        """Gets the auto_cargo_upper_far of this MatchScoreBreakdown2022Alliance.


        :return: The auto_cargo_upper_far of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._auto_cargo_upper_far

    @auto_cargo_upper_far.setter
    def auto_cargo_upper_far(self, auto_cargo_upper_far):
        """Sets the auto_cargo_upper_far of this MatchScoreBreakdown2022Alliance.


        :param auto_cargo_upper_far: The auto_cargo_upper_far of this MatchScoreBreakdown2022Alliance.
        :type auto_cargo_upper_far: int
        """

        self._auto_cargo_upper_far = auto_cargo_upper_far

    @property
    def auto_cargo_upper_near(self):
        """Gets the auto_cargo_upper_near of this MatchScoreBreakdown2022Alliance.


        :return: The auto_cargo_upper_near of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._auto_cargo_upper_near

    @auto_cargo_upper_near.setter
    def auto_cargo_upper_near(self, auto_cargo_upper_near):
        """Sets the auto_cargo_upper_near of this MatchScoreBreakdown2022Alliance.


        :param auto_cargo_upper_near: The auto_cargo_upper_near of this MatchScoreBreakdown2022Alliance.
        :type auto_cargo_upper_near: int
        """

        self._auto_cargo_upper_near = auto_cargo_upper_near

    @property
    def auto_cargo_upper_red(self):
        """Gets the auto_cargo_upper_red of this MatchScoreBreakdown2022Alliance.


        :return: The auto_cargo_upper_red of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._auto_cargo_upper_red

    @auto_cargo_upper_red.setter
    def auto_cargo_upper_red(self, auto_cargo_upper_red):
        """Sets the auto_cargo_upper_red of this MatchScoreBreakdown2022Alliance.


        :param auto_cargo_upper_red: The auto_cargo_upper_red of this MatchScoreBreakdown2022Alliance.
        :type auto_cargo_upper_red: int
        """

        self._auto_cargo_upper_red = auto_cargo_upper_red

    @property
    def auto_points(self):
        """Gets the auto_points of this MatchScoreBreakdown2022Alliance.


        :return: The auto_points of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._auto_points

    @auto_points.setter
    def auto_points(self, auto_points):
        """Sets the auto_points of this MatchScoreBreakdown2022Alliance.


        :param auto_points: The auto_points of this MatchScoreBreakdown2022Alliance.
        :type auto_points: int
        """

        self._auto_points = auto_points

    @property
    def auto_taxi_points(self):
        """Gets the auto_taxi_points of this MatchScoreBreakdown2022Alliance.


        :return: The auto_taxi_points of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._auto_taxi_points

    @auto_taxi_points.setter
    def auto_taxi_points(self, auto_taxi_points):
        """Sets the auto_taxi_points of this MatchScoreBreakdown2022Alliance.


        :param auto_taxi_points: The auto_taxi_points of this MatchScoreBreakdown2022Alliance.
        :type auto_taxi_points: int
        """

        self._auto_taxi_points = auto_taxi_points

    @property
    def cargo_bonus_ranking_point(self):
        """Gets the cargo_bonus_ranking_point of this MatchScoreBreakdown2022Alliance.


        :return: The cargo_bonus_ranking_point of this MatchScoreBreakdown2022Alliance.
        :rtype: bool
        """
        return self._cargo_bonus_ranking_point

    @cargo_bonus_ranking_point.setter
    def cargo_bonus_ranking_point(self, cargo_bonus_ranking_point):
        """Sets the cargo_bonus_ranking_point of this MatchScoreBreakdown2022Alliance.


        :param cargo_bonus_ranking_point: The cargo_bonus_ranking_point of this MatchScoreBreakdown2022Alliance.
        :type cargo_bonus_ranking_point: bool
        """

        self._cargo_bonus_ranking_point = cargo_bonus_ranking_point

    @property
    def endgame_points(self):
        """Gets the endgame_points of this MatchScoreBreakdown2022Alliance.


        :return: The endgame_points of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._endgame_points

    @endgame_points.setter
    def endgame_points(self, endgame_points):
        """Sets the endgame_points of this MatchScoreBreakdown2022Alliance.


        :param endgame_points: The endgame_points of this MatchScoreBreakdown2022Alliance.
        :type endgame_points: int
        """

        self._endgame_points = endgame_points

    @property
    def endgame_robot1(self):
        """Gets the endgame_robot1 of this MatchScoreBreakdown2022Alliance.


        :return: The endgame_robot1 of this MatchScoreBreakdown2022Alliance.
        :rtype: str
        """
        return self._endgame_robot1

    @endgame_robot1.setter
    def endgame_robot1(self, endgame_robot1):
        """Sets the endgame_robot1 of this MatchScoreBreakdown2022Alliance.


        :param endgame_robot1: The endgame_robot1 of this MatchScoreBreakdown2022Alliance.
        :type endgame_robot1: str
        """
        allowed_values = ["Traversal", "High", "Mid", "Low", "None"]  # noqa: E501
        if endgame_robot1 not in allowed_values:
            raise ValueError(
                "Invalid value for `endgame_robot1` ({0}), must be one of {1}"
                .format(endgame_robot1, allowed_values)
            )

        self._endgame_robot1 = endgame_robot1

    @property
    def endgame_robot2(self):
        """Gets the endgame_robot2 of this MatchScoreBreakdown2022Alliance.


        :return: The endgame_robot2 of this MatchScoreBreakdown2022Alliance.
        :rtype: str
        """
        return self._endgame_robot2

    @endgame_robot2.setter
    def endgame_robot2(self, endgame_robot2):
        """Sets the endgame_robot2 of this MatchScoreBreakdown2022Alliance.


        :param endgame_robot2: The endgame_robot2 of this MatchScoreBreakdown2022Alliance.
        :type endgame_robot2: str
        """
        allowed_values = ["Traversal", "High", "Mid", "Low", "None"]  # noqa: E501
        if endgame_robot2 not in allowed_values:
            raise ValueError(
                "Invalid value for `endgame_robot2` ({0}), must be one of {1}"
                .format(endgame_robot2, allowed_values)
            )

        self._endgame_robot2 = endgame_robot2

    @property
    def endgame_robot3(self):
        """Gets the endgame_robot3 of this MatchScoreBreakdown2022Alliance.


        :return: The endgame_robot3 of this MatchScoreBreakdown2022Alliance.
        :rtype: str
        """
        return self._endgame_robot3

    @endgame_robot3.setter
    def endgame_robot3(self, endgame_robot3):
        """Sets the endgame_robot3 of this MatchScoreBreakdown2022Alliance.


        :param endgame_robot3: The endgame_robot3 of this MatchScoreBreakdown2022Alliance.
        :type endgame_robot3: str
        """
        allowed_values = ["Traversal", "High", "Mid", "Low", "None"]  # noqa: E501
        if endgame_robot3 not in allowed_values:
            raise ValueError(
                "Invalid value for `endgame_robot3` ({0}), must be one of {1}"
                .format(endgame_robot3, allowed_values)
            )

        self._endgame_robot3 = endgame_robot3

    @property
    def foul_count(self):
        """Gets the foul_count of this MatchScoreBreakdown2022Alliance.


        :return: The foul_count of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._foul_count

    @foul_count.setter
    def foul_count(self, foul_count):
        """Sets the foul_count of this MatchScoreBreakdown2022Alliance.


        :param foul_count: The foul_count of this MatchScoreBreakdown2022Alliance.
        :type foul_count: int
        """

        self._foul_count = foul_count

    @property
    def foul_points(self):
        """Gets the foul_points of this MatchScoreBreakdown2022Alliance.


        :return: The foul_points of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._foul_points

    @foul_points.setter
    def foul_points(self, foul_points):
        """Sets the foul_points of this MatchScoreBreakdown2022Alliance.


        :param foul_points: The foul_points of this MatchScoreBreakdown2022Alliance.
        :type foul_points: int
        """

        self._foul_points = foul_points

    @property
    def hangar_bonus_ranking_point(self):
        """Gets the hangar_bonus_ranking_point of this MatchScoreBreakdown2022Alliance.


        :return: The hangar_bonus_ranking_point of this MatchScoreBreakdown2022Alliance.
        :rtype: bool
        """
        return self._hangar_bonus_ranking_point

    @hangar_bonus_ranking_point.setter
    def hangar_bonus_ranking_point(self, hangar_bonus_ranking_point):
        """Sets the hangar_bonus_ranking_point of this MatchScoreBreakdown2022Alliance.


        :param hangar_bonus_ranking_point: The hangar_bonus_ranking_point of this MatchScoreBreakdown2022Alliance.
        :type hangar_bonus_ranking_point: bool
        """

        self._hangar_bonus_ranking_point = hangar_bonus_ranking_point

    @property
    def match_cargo_total(self):
        """Gets the match_cargo_total of this MatchScoreBreakdown2022Alliance.


        :return: The match_cargo_total of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._match_cargo_total

    @match_cargo_total.setter
    def match_cargo_total(self, match_cargo_total):
        """Sets the match_cargo_total of this MatchScoreBreakdown2022Alliance.


        :param match_cargo_total: The match_cargo_total of this MatchScoreBreakdown2022Alliance.
        :type match_cargo_total: int
        """

        self._match_cargo_total = match_cargo_total

    @property
    def quintet_achieved(self):
        """Gets the quintet_achieved of this MatchScoreBreakdown2022Alliance.


        :return: The quintet_achieved of this MatchScoreBreakdown2022Alliance.
        :rtype: bool
        """
        return self._quintet_achieved

    @quintet_achieved.setter
    def quintet_achieved(self, quintet_achieved):
        """Sets the quintet_achieved of this MatchScoreBreakdown2022Alliance.


        :param quintet_achieved: The quintet_achieved of this MatchScoreBreakdown2022Alliance.
        :type quintet_achieved: bool
        """

        self._quintet_achieved = quintet_achieved

    @property
    def rp(self):
        """Gets the rp of this MatchScoreBreakdown2022Alliance.


        :return: The rp of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._rp

    @rp.setter
    def rp(self, rp):
        """Sets the rp of this MatchScoreBreakdown2022Alliance.


        :param rp: The rp of this MatchScoreBreakdown2022Alliance.
        :type rp: int
        """

        self._rp = rp

    @property
    def taxi_robot1(self):
        """Gets the taxi_robot1 of this MatchScoreBreakdown2022Alliance.


        :return: The taxi_robot1 of this MatchScoreBreakdown2022Alliance.
        :rtype: str
        """
        return self._taxi_robot1

    @taxi_robot1.setter
    def taxi_robot1(self, taxi_robot1):
        """Sets the taxi_robot1 of this MatchScoreBreakdown2022Alliance.


        :param taxi_robot1: The taxi_robot1 of this MatchScoreBreakdown2022Alliance.
        :type taxi_robot1: str
        """
        allowed_values = ["true", "false"]  # noqa: E501
        if taxi_robot1 not in allowed_values:
            raise ValueError(
                "Invalid value for `taxi_robot1` ({0}), must be one of {1}"
                .format(taxi_robot1, allowed_values)
            )

        self._taxi_robot1 = taxi_robot1

    @property
    def taxi_robot2(self):
        """Gets the taxi_robot2 of this MatchScoreBreakdown2022Alliance.


        :return: The taxi_robot2 of this MatchScoreBreakdown2022Alliance.
        :rtype: str
        """
        return self._taxi_robot2

    @taxi_robot2.setter
    def taxi_robot2(self, taxi_robot2):
        """Sets the taxi_robot2 of this MatchScoreBreakdown2022Alliance.


        :param taxi_robot2: The taxi_robot2 of this MatchScoreBreakdown2022Alliance.
        :type taxi_robot2: str
        """
        allowed_values = ["true", "false"]  # noqa: E501
        if taxi_robot2 not in allowed_values:
            raise ValueError(
                "Invalid value for `taxi_robot2` ({0}), must be one of {1}"
                .format(taxi_robot2, allowed_values)
            )

        self._taxi_robot2 = taxi_robot2

    @property
    def taxi_robot3(self):
        """Gets the taxi_robot3 of this MatchScoreBreakdown2022Alliance.


        :return: The taxi_robot3 of this MatchScoreBreakdown2022Alliance.
        :rtype: str
        """
        return self._taxi_robot3

    @taxi_robot3.setter
    def taxi_robot3(self, taxi_robot3):
        """Sets the taxi_robot3 of this MatchScoreBreakdown2022Alliance.


        :param taxi_robot3: The taxi_robot3 of this MatchScoreBreakdown2022Alliance.
        :type taxi_robot3: str
        """
        allowed_values = ["true", "false"]  # noqa: E501
        if taxi_robot3 not in allowed_values:
            raise ValueError(
                "Invalid value for `taxi_robot3` ({0}), must be one of {1}"
                .format(taxi_robot3, allowed_values)
            )

        self._taxi_robot3 = taxi_robot3

    @property
    def tech_foul_count(self):
        """Gets the tech_foul_count of this MatchScoreBreakdown2022Alliance.


        :return: The tech_foul_count of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._tech_foul_count

    @tech_foul_count.setter
    def tech_foul_count(self, tech_foul_count):
        """Sets the tech_foul_count of this MatchScoreBreakdown2022Alliance.


        :param tech_foul_count: The tech_foul_count of this MatchScoreBreakdown2022Alliance.
        :type tech_foul_count: int
        """

        self._tech_foul_count = tech_foul_count

    @property
    def teleop_cargo_lower_blue(self):
        """Gets the teleop_cargo_lower_blue of this MatchScoreBreakdown2022Alliance.


        :return: The teleop_cargo_lower_blue of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._teleop_cargo_lower_blue

    @teleop_cargo_lower_blue.setter
    def teleop_cargo_lower_blue(self, teleop_cargo_lower_blue):
        """Sets the teleop_cargo_lower_blue of this MatchScoreBreakdown2022Alliance.


        :param teleop_cargo_lower_blue: The teleop_cargo_lower_blue of this MatchScoreBreakdown2022Alliance.
        :type teleop_cargo_lower_blue: int
        """

        self._teleop_cargo_lower_blue = teleop_cargo_lower_blue

    @property
    def teleop_cargo_lower_far(self):
        """Gets the teleop_cargo_lower_far of this MatchScoreBreakdown2022Alliance.


        :return: The teleop_cargo_lower_far of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._teleop_cargo_lower_far

    @teleop_cargo_lower_far.setter
    def teleop_cargo_lower_far(self, teleop_cargo_lower_far):
        """Sets the teleop_cargo_lower_far of this MatchScoreBreakdown2022Alliance.


        :param teleop_cargo_lower_far: The teleop_cargo_lower_far of this MatchScoreBreakdown2022Alliance.
        :type teleop_cargo_lower_far: int
        """

        self._teleop_cargo_lower_far = teleop_cargo_lower_far

    @property
    def teleop_cargo_lower_near(self):
        """Gets the teleop_cargo_lower_near of this MatchScoreBreakdown2022Alliance.


        :return: The teleop_cargo_lower_near of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._teleop_cargo_lower_near

    @teleop_cargo_lower_near.setter
    def teleop_cargo_lower_near(self, teleop_cargo_lower_near):
        """Sets the teleop_cargo_lower_near of this MatchScoreBreakdown2022Alliance.


        :param teleop_cargo_lower_near: The teleop_cargo_lower_near of this MatchScoreBreakdown2022Alliance.
        :type teleop_cargo_lower_near: int
        """

        self._teleop_cargo_lower_near = teleop_cargo_lower_near

    @property
    def teleop_cargo_lower_red(self):
        """Gets the teleop_cargo_lower_red of this MatchScoreBreakdown2022Alliance.


        :return: The teleop_cargo_lower_red of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._teleop_cargo_lower_red

    @teleop_cargo_lower_red.setter
    def teleop_cargo_lower_red(self, teleop_cargo_lower_red):
        """Sets the teleop_cargo_lower_red of this MatchScoreBreakdown2022Alliance.


        :param teleop_cargo_lower_red: The teleop_cargo_lower_red of this MatchScoreBreakdown2022Alliance.
        :type teleop_cargo_lower_red: int
        """

        self._teleop_cargo_lower_red = teleop_cargo_lower_red

    @property
    def teleop_cargo_points(self):
        """Gets the teleop_cargo_points of this MatchScoreBreakdown2022Alliance.


        :return: The teleop_cargo_points of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._teleop_cargo_points

    @teleop_cargo_points.setter
    def teleop_cargo_points(self, teleop_cargo_points):
        """Sets the teleop_cargo_points of this MatchScoreBreakdown2022Alliance.


        :param teleop_cargo_points: The teleop_cargo_points of this MatchScoreBreakdown2022Alliance.
        :type teleop_cargo_points: int
        """

        self._teleop_cargo_points = teleop_cargo_points

    @property
    def teleop_cargo_total(self):
        """Gets the teleop_cargo_total of this MatchScoreBreakdown2022Alliance.


        :return: The teleop_cargo_total of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._teleop_cargo_total

    @teleop_cargo_total.setter
    def teleop_cargo_total(self, teleop_cargo_total):
        """Sets the teleop_cargo_total of this MatchScoreBreakdown2022Alliance.


        :param teleop_cargo_total: The teleop_cargo_total of this MatchScoreBreakdown2022Alliance.
        :type teleop_cargo_total: int
        """

        self._teleop_cargo_total = teleop_cargo_total

    @property
    def teleop_cargo_upper_blue(self):
        """Gets the teleop_cargo_upper_blue of this MatchScoreBreakdown2022Alliance.


        :return: The teleop_cargo_upper_blue of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._teleop_cargo_upper_blue

    @teleop_cargo_upper_blue.setter
    def teleop_cargo_upper_blue(self, teleop_cargo_upper_blue):
        """Sets the teleop_cargo_upper_blue of this MatchScoreBreakdown2022Alliance.


        :param teleop_cargo_upper_blue: The teleop_cargo_upper_blue of this MatchScoreBreakdown2022Alliance.
        :type teleop_cargo_upper_blue: int
        """

        self._teleop_cargo_upper_blue = teleop_cargo_upper_blue

    @property
    def teleop_cargo_upper_far(self):
        """Gets the teleop_cargo_upper_far of this MatchScoreBreakdown2022Alliance.


        :return: The teleop_cargo_upper_far of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._teleop_cargo_upper_far

    @teleop_cargo_upper_far.setter
    def teleop_cargo_upper_far(self, teleop_cargo_upper_far):
        """Sets the teleop_cargo_upper_far of this MatchScoreBreakdown2022Alliance.


        :param teleop_cargo_upper_far: The teleop_cargo_upper_far of this MatchScoreBreakdown2022Alliance.
        :type teleop_cargo_upper_far: int
        """

        self._teleop_cargo_upper_far = teleop_cargo_upper_far

    @property
    def teleop_cargo_upper_near(self):
        """Gets the teleop_cargo_upper_near of this MatchScoreBreakdown2022Alliance.


        :return: The teleop_cargo_upper_near of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._teleop_cargo_upper_near

    @teleop_cargo_upper_near.setter
    def teleop_cargo_upper_near(self, teleop_cargo_upper_near):
        """Sets the teleop_cargo_upper_near of this MatchScoreBreakdown2022Alliance.


        :param teleop_cargo_upper_near: The teleop_cargo_upper_near of this MatchScoreBreakdown2022Alliance.
        :type teleop_cargo_upper_near: int
        """

        self._teleop_cargo_upper_near = teleop_cargo_upper_near

    @property
    def teleop_cargo_upper_red(self):
        """Gets the teleop_cargo_upper_red of this MatchScoreBreakdown2022Alliance.


        :return: The teleop_cargo_upper_red of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._teleop_cargo_upper_red

    @teleop_cargo_upper_red.setter
    def teleop_cargo_upper_red(self, teleop_cargo_upper_red):
        """Sets the teleop_cargo_upper_red of this MatchScoreBreakdown2022Alliance.


        :param teleop_cargo_upper_red: The teleop_cargo_upper_red of this MatchScoreBreakdown2022Alliance.
        :type teleop_cargo_upper_red: int
        """

        self._teleop_cargo_upper_red = teleop_cargo_upper_red

    @property
    def teleop_points(self):
        """Gets the teleop_points of this MatchScoreBreakdown2022Alliance.


        :return: The teleop_points of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._teleop_points

    @teleop_points.setter
    def teleop_points(self, teleop_points):
        """Sets the teleop_points of this MatchScoreBreakdown2022Alliance.


        :param teleop_points: The teleop_points of this MatchScoreBreakdown2022Alliance.
        :type teleop_points: int
        """

        self._teleop_points = teleop_points

    @property
    def total_points(self):
        """Gets the total_points of this MatchScoreBreakdown2022Alliance.


        :return: The total_points of this MatchScoreBreakdown2022Alliance.
        :rtype: int
        """
        return self._total_points

    @total_points.setter
    def total_points(self, total_points):
        """Sets the total_points of this MatchScoreBreakdown2022Alliance.


        :param total_points: The total_points of this MatchScoreBreakdown2022Alliance.
        :type total_points: int
        """

        self._total_points = total_points
