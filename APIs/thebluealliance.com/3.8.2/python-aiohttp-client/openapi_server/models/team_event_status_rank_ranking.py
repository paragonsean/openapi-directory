# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.wlt_record import WLTRecord
from openapi_server import util


class TeamEventStatusRankRanking(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dq: int=None, matches_played: int=None, qual_average: float=None, rank: int=None, record: WLTRecord=None, sort_orders: List[float]=None, team_key: str=None):
        """TeamEventStatusRankRanking - a model defined in OpenAPI

        :param dq: The dq of this TeamEventStatusRankRanking.
        :param matches_played: The matches_played of this TeamEventStatusRankRanking.
        :param qual_average: The qual_average of this TeamEventStatusRankRanking.
        :param rank: The rank of this TeamEventStatusRankRanking.
        :param record: The record of this TeamEventStatusRankRanking.
        :param sort_orders: The sort_orders of this TeamEventStatusRankRanking.
        :param team_key: The team_key of this TeamEventStatusRankRanking.
        """
        self.openapi_types = {
            'dq': int,
            'matches_played': int,
            'qual_average': float,
            'rank': int,
            'record': WLTRecord,
            'sort_orders': List[float],
            'team_key': str
        }

        self.attribute_map = {
            'dq': 'dq',
            'matches_played': 'matches_played',
            'qual_average': 'qual_average',
            'rank': 'rank',
            'record': 'record',
            'sort_orders': 'sort_orders',
            'team_key': 'team_key'
        }

        self._dq = dq
        self._matches_played = matches_played
        self._qual_average = qual_average
        self._rank = rank
        self._record = record
        self._sort_orders = sort_orders
        self._team_key = team_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TeamEventStatusRankRanking':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Team_Event_Status_rank_ranking of this TeamEventStatusRankRanking.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dq(self):
        """Gets the dq of this TeamEventStatusRankRanking.

        Number of matches the team was disqualified for.

        :return: The dq of this TeamEventStatusRankRanking.
        :rtype: int
        """
        return self._dq

    @dq.setter
    def dq(self, dq):
        """Sets the dq of this TeamEventStatusRankRanking.

        Number of matches the team was disqualified for.

        :param dq: The dq of this TeamEventStatusRankRanking.
        :type dq: int
        """

        self._dq = dq

    @property
    def matches_played(self):
        """Gets the matches_played of this TeamEventStatusRankRanking.

        Number of matches played.

        :return: The matches_played of this TeamEventStatusRankRanking.
        :rtype: int
        """
        return self._matches_played

    @matches_played.setter
    def matches_played(self, matches_played):
        """Sets the matches_played of this TeamEventStatusRankRanking.

        Number of matches played.

        :param matches_played: The matches_played of this TeamEventStatusRankRanking.
        :type matches_played: int
        """

        self._matches_played = matches_played

    @property
    def qual_average(self):
        """Gets the qual_average of this TeamEventStatusRankRanking.

        For some years, average qualification score. Can be null.

        :return: The qual_average of this TeamEventStatusRankRanking.
        :rtype: float
        """
        return self._qual_average

    @qual_average.setter
    def qual_average(self, qual_average):
        """Sets the qual_average of this TeamEventStatusRankRanking.

        For some years, average qualification score. Can be null.

        :param qual_average: The qual_average of this TeamEventStatusRankRanking.
        :type qual_average: float
        """

        self._qual_average = qual_average

    @property
    def rank(self):
        """Gets the rank of this TeamEventStatusRankRanking.

        Relative rank of this team.

        :return: The rank of this TeamEventStatusRankRanking.
        :rtype: int
        """
        return self._rank

    @rank.setter
    def rank(self, rank):
        """Sets the rank of this TeamEventStatusRankRanking.

        Relative rank of this team.

        :param rank: The rank of this TeamEventStatusRankRanking.
        :type rank: int
        """

        self._rank = rank

    @property
    def record(self):
        """Gets the record of this TeamEventStatusRankRanking.


        :return: The record of this TeamEventStatusRankRanking.
        :rtype: WLTRecord
        """
        return self._record

    @record.setter
    def record(self, record):
        """Sets the record of this TeamEventStatusRankRanking.


        :param record: The record of this TeamEventStatusRankRanking.
        :type record: WLTRecord
        """

        self._record = record

    @property
    def sort_orders(self):
        """Gets the sort_orders of this TeamEventStatusRankRanking.

        Ordered list of values used to determine the rank. See the `sort_order_info` property for the name of each value.

        :return: The sort_orders of this TeamEventStatusRankRanking.
        :rtype: List[float]
        """
        return self._sort_orders

    @sort_orders.setter
    def sort_orders(self, sort_orders):
        """Sets the sort_orders of this TeamEventStatusRankRanking.

        Ordered list of values used to determine the rank. See the `sort_order_info` property for the name of each value.

        :param sort_orders: The sort_orders of this TeamEventStatusRankRanking.
        :type sort_orders: List[float]
        """

        self._sort_orders = sort_orders

    @property
    def team_key(self):
        """Gets the team_key of this TeamEventStatusRankRanking.

        TBA team key for this rank.

        :return: The team_key of this TeamEventStatusRankRanking.
        :rtype: str
        """
        return self._team_key

    @team_key.setter
    def team_key(self, team_key):
        """Sets the team_key of this TeamEventStatusRankRanking.

        TBA team key for this rank.

        :param team_key: The team_key of this TeamEventStatusRankRanking.
        :type team_key: str
        """

        self._team_key = team_key
