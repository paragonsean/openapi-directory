# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EventOPRs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ccwms: Dict[str, float]=None, dprs: Dict[str, float]=None, oprs: Dict[str, float]=None):
        """EventOPRs - a model defined in OpenAPI

        :param ccwms: The ccwms of this EventOPRs.
        :param dprs: The dprs of this EventOPRs.
        :param oprs: The oprs of this EventOPRs.
        """
        self.openapi_types = {
            'ccwms': Dict[str, float],
            'dprs': Dict[str, float],
            'oprs': Dict[str, float]
        }

        self.attribute_map = {
            'ccwms': 'ccwms',
            'dprs': 'dprs',
            'oprs': 'oprs'
        }

        self._ccwms = ccwms
        self._dprs = dprs
        self._oprs = oprs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventOPRs':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Event_OPRs of this EventOPRs.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ccwms(self):
        """Gets the ccwms of this EventOPRs.

        A key-value pair with team key (eg `frc254`) as key and CCWM as value.

        :return: The ccwms of this EventOPRs.
        :rtype: Dict[str, float]
        """
        return self._ccwms

    @ccwms.setter
    def ccwms(self, ccwms):
        """Sets the ccwms of this EventOPRs.

        A key-value pair with team key (eg `frc254`) as key and CCWM as value.

        :param ccwms: The ccwms of this EventOPRs.
        :type ccwms: Dict[str, float]
        """

        self._ccwms = ccwms

    @property
    def dprs(self):
        """Gets the dprs of this EventOPRs.

        A key-value pair with team key (eg `frc254`) as key and DPR as value.

        :return: The dprs of this EventOPRs.
        :rtype: Dict[str, float]
        """
        return self._dprs

    @dprs.setter
    def dprs(self, dprs):
        """Sets the dprs of this EventOPRs.

        A key-value pair with team key (eg `frc254`) as key and DPR as value.

        :param dprs: The dprs of this EventOPRs.
        :type dprs: Dict[str, float]
        """

        self._dprs = dprs

    @property
    def oprs(self):
        """Gets the oprs of this EventOPRs.

        A key-value pair with team key (eg `frc254`) as key and OPR as value.

        :return: The oprs of this EventOPRs.
        :rtype: Dict[str, float]
        """
        return self._oprs

    @oprs.setter
    def oprs(self, oprs):
        """Sets the oprs of this EventOPRs.

        A key-value pair with team key (eg `frc254`) as key and OPR as value.

        :param oprs: The oprs of this EventOPRs.
        :type oprs: Dict[str, float]
        """

        self._oprs = oprs
