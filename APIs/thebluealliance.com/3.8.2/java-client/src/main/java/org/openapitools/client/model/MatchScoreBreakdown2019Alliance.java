/*
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MatchScoreBreakdown2019Alliance
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:56:47.661723-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MatchScoreBreakdown2019Alliance {
  public static final String SERIALIZED_NAME_ADJUST_POINTS = "adjustPoints";
  @SerializedName(SERIALIZED_NAME_ADJUST_POINTS)
  private Integer adjustPoints;

  public static final String SERIALIZED_NAME_AUTO_POINTS = "autoPoints";
  @SerializedName(SERIALIZED_NAME_AUTO_POINTS)
  private Integer autoPoints;

  public static final String SERIALIZED_NAME_BAY1 = "bay1";
  @SerializedName(SERIALIZED_NAME_BAY1)
  private String bay1;

  public static final String SERIALIZED_NAME_BAY2 = "bay2";
  @SerializedName(SERIALIZED_NAME_BAY2)
  private String bay2;

  public static final String SERIALIZED_NAME_BAY3 = "bay3";
  @SerializedName(SERIALIZED_NAME_BAY3)
  private String bay3;

  public static final String SERIALIZED_NAME_BAY4 = "bay4";
  @SerializedName(SERIALIZED_NAME_BAY4)
  private String bay4;

  public static final String SERIALIZED_NAME_BAY5 = "bay5";
  @SerializedName(SERIALIZED_NAME_BAY5)
  private String bay5;

  public static final String SERIALIZED_NAME_BAY6 = "bay6";
  @SerializedName(SERIALIZED_NAME_BAY6)
  private String bay6;

  public static final String SERIALIZED_NAME_BAY7 = "bay7";
  @SerializedName(SERIALIZED_NAME_BAY7)
  private String bay7;

  public static final String SERIALIZED_NAME_BAY8 = "bay8";
  @SerializedName(SERIALIZED_NAME_BAY8)
  private String bay8;

  public static final String SERIALIZED_NAME_CARGO_POINTS = "cargoPoints";
  @SerializedName(SERIALIZED_NAME_CARGO_POINTS)
  private Integer cargoPoints;

  public static final String SERIALIZED_NAME_COMPLETE_ROCKET_RANKING_POINT = "completeRocketRankingPoint";
  @SerializedName(SERIALIZED_NAME_COMPLETE_ROCKET_RANKING_POINT)
  private Boolean completeRocketRankingPoint;

  public static final String SERIALIZED_NAME_COMPLETED_ROCKET_FAR = "completedRocketFar";
  @SerializedName(SERIALIZED_NAME_COMPLETED_ROCKET_FAR)
  private Boolean completedRocketFar;

  public static final String SERIALIZED_NAME_COMPLETED_ROCKET_NEAR = "completedRocketNear";
  @SerializedName(SERIALIZED_NAME_COMPLETED_ROCKET_NEAR)
  private Boolean completedRocketNear;

  public static final String SERIALIZED_NAME_ENDGAME_ROBOT1 = "endgameRobot1";
  @SerializedName(SERIALIZED_NAME_ENDGAME_ROBOT1)
  private String endgameRobot1;

  public static final String SERIALIZED_NAME_ENDGAME_ROBOT2 = "endgameRobot2";
  @SerializedName(SERIALIZED_NAME_ENDGAME_ROBOT2)
  private String endgameRobot2;

  public static final String SERIALIZED_NAME_ENDGAME_ROBOT3 = "endgameRobot3";
  @SerializedName(SERIALIZED_NAME_ENDGAME_ROBOT3)
  private String endgameRobot3;

  public static final String SERIALIZED_NAME_FOUL_COUNT = "foulCount";
  @SerializedName(SERIALIZED_NAME_FOUL_COUNT)
  private Integer foulCount;

  public static final String SERIALIZED_NAME_FOUL_POINTS = "foulPoints";
  @SerializedName(SERIALIZED_NAME_FOUL_POINTS)
  private Integer foulPoints;

  public static final String SERIALIZED_NAME_HAB_CLIMB_POINTS = "habClimbPoints";
  @SerializedName(SERIALIZED_NAME_HAB_CLIMB_POINTS)
  private Integer habClimbPoints;

  public static final String SERIALIZED_NAME_HAB_DOCKING_RANKING_POINT = "habDockingRankingPoint";
  @SerializedName(SERIALIZED_NAME_HAB_DOCKING_RANKING_POINT)
  private Boolean habDockingRankingPoint;

  public static final String SERIALIZED_NAME_HAB_LINE_ROBOT1 = "habLineRobot1";
  @SerializedName(SERIALIZED_NAME_HAB_LINE_ROBOT1)
  private String habLineRobot1;

  public static final String SERIALIZED_NAME_HAB_LINE_ROBOT2 = "habLineRobot2";
  @SerializedName(SERIALIZED_NAME_HAB_LINE_ROBOT2)
  private String habLineRobot2;

  public static final String SERIALIZED_NAME_HAB_LINE_ROBOT3 = "habLineRobot3";
  @SerializedName(SERIALIZED_NAME_HAB_LINE_ROBOT3)
  private String habLineRobot3;

  public static final String SERIALIZED_NAME_HATCH_PANEL_POINTS = "hatchPanelPoints";
  @SerializedName(SERIALIZED_NAME_HATCH_PANEL_POINTS)
  private Integer hatchPanelPoints;

  public static final String SERIALIZED_NAME_LOW_LEFT_ROCKET_FAR = "lowLeftRocketFar";
  @SerializedName(SERIALIZED_NAME_LOW_LEFT_ROCKET_FAR)
  private String lowLeftRocketFar;

  public static final String SERIALIZED_NAME_LOW_LEFT_ROCKET_NEAR = "lowLeftRocketNear";
  @SerializedName(SERIALIZED_NAME_LOW_LEFT_ROCKET_NEAR)
  private String lowLeftRocketNear;

  public static final String SERIALIZED_NAME_LOW_RIGHT_ROCKET_FAR = "lowRightRocketFar";
  @SerializedName(SERIALIZED_NAME_LOW_RIGHT_ROCKET_FAR)
  private String lowRightRocketFar;

  public static final String SERIALIZED_NAME_LOW_RIGHT_ROCKET_NEAR = "lowRightRocketNear";
  @SerializedName(SERIALIZED_NAME_LOW_RIGHT_ROCKET_NEAR)
  private String lowRightRocketNear;

  public static final String SERIALIZED_NAME_MID_LEFT_ROCKET_FAR = "midLeftRocketFar";
  @SerializedName(SERIALIZED_NAME_MID_LEFT_ROCKET_FAR)
  private String midLeftRocketFar;

  public static final String SERIALIZED_NAME_MID_LEFT_ROCKET_NEAR = "midLeftRocketNear";
  @SerializedName(SERIALIZED_NAME_MID_LEFT_ROCKET_NEAR)
  private String midLeftRocketNear;

  public static final String SERIALIZED_NAME_MID_RIGHT_ROCKET_FAR = "midRightRocketFar";
  @SerializedName(SERIALIZED_NAME_MID_RIGHT_ROCKET_FAR)
  private String midRightRocketFar;

  public static final String SERIALIZED_NAME_MID_RIGHT_ROCKET_NEAR = "midRightRocketNear";
  @SerializedName(SERIALIZED_NAME_MID_RIGHT_ROCKET_NEAR)
  private String midRightRocketNear;

  public static final String SERIALIZED_NAME_PRE_MATCH_BAY1 = "preMatchBay1";
  @SerializedName(SERIALIZED_NAME_PRE_MATCH_BAY1)
  private String preMatchBay1;

  public static final String SERIALIZED_NAME_PRE_MATCH_BAY2 = "preMatchBay2";
  @SerializedName(SERIALIZED_NAME_PRE_MATCH_BAY2)
  private String preMatchBay2;

  public static final String SERIALIZED_NAME_PRE_MATCH_BAY3 = "preMatchBay3";
  @SerializedName(SERIALIZED_NAME_PRE_MATCH_BAY3)
  private String preMatchBay3;

  public static final String SERIALIZED_NAME_PRE_MATCH_BAY6 = "preMatchBay6";
  @SerializedName(SERIALIZED_NAME_PRE_MATCH_BAY6)
  private String preMatchBay6;

  public static final String SERIALIZED_NAME_PRE_MATCH_BAY7 = "preMatchBay7";
  @SerializedName(SERIALIZED_NAME_PRE_MATCH_BAY7)
  private String preMatchBay7;

  public static final String SERIALIZED_NAME_PRE_MATCH_BAY8 = "preMatchBay8";
  @SerializedName(SERIALIZED_NAME_PRE_MATCH_BAY8)
  private String preMatchBay8;

  public static final String SERIALIZED_NAME_PRE_MATCH_LEVEL_ROBOT1 = "preMatchLevelRobot1";
  @SerializedName(SERIALIZED_NAME_PRE_MATCH_LEVEL_ROBOT1)
  private String preMatchLevelRobot1;

  public static final String SERIALIZED_NAME_PRE_MATCH_LEVEL_ROBOT2 = "preMatchLevelRobot2";
  @SerializedName(SERIALIZED_NAME_PRE_MATCH_LEVEL_ROBOT2)
  private String preMatchLevelRobot2;

  public static final String SERIALIZED_NAME_PRE_MATCH_LEVEL_ROBOT3 = "preMatchLevelRobot3";
  @SerializedName(SERIALIZED_NAME_PRE_MATCH_LEVEL_ROBOT3)
  private String preMatchLevelRobot3;

  public static final String SERIALIZED_NAME_RP = "rp";
  @SerializedName(SERIALIZED_NAME_RP)
  private Integer rp;

  public static final String SERIALIZED_NAME_SAND_STORM_BONUS_POINTS = "sandStormBonusPoints";
  @SerializedName(SERIALIZED_NAME_SAND_STORM_BONUS_POINTS)
  private Integer sandStormBonusPoints;

  public static final String SERIALIZED_NAME_TECH_FOUL_COUNT = "techFoulCount";
  @SerializedName(SERIALIZED_NAME_TECH_FOUL_COUNT)
  private Integer techFoulCount;

  public static final String SERIALIZED_NAME_TELEOP_POINTS = "teleopPoints";
  @SerializedName(SERIALIZED_NAME_TELEOP_POINTS)
  private Integer teleopPoints;

  public static final String SERIALIZED_NAME_TOP_LEFT_ROCKET_FAR = "topLeftRocketFar";
  @SerializedName(SERIALIZED_NAME_TOP_LEFT_ROCKET_FAR)
  private String topLeftRocketFar;

  public static final String SERIALIZED_NAME_TOP_LEFT_ROCKET_NEAR = "topLeftRocketNear";
  @SerializedName(SERIALIZED_NAME_TOP_LEFT_ROCKET_NEAR)
  private String topLeftRocketNear;

  public static final String SERIALIZED_NAME_TOP_RIGHT_ROCKET_FAR = "topRightRocketFar";
  @SerializedName(SERIALIZED_NAME_TOP_RIGHT_ROCKET_FAR)
  private String topRightRocketFar;

  public static final String SERIALIZED_NAME_TOP_RIGHT_ROCKET_NEAR = "topRightRocketNear";
  @SerializedName(SERIALIZED_NAME_TOP_RIGHT_ROCKET_NEAR)
  private String topRightRocketNear;

  public static final String SERIALIZED_NAME_TOTAL_POINTS = "totalPoints";
  @SerializedName(SERIALIZED_NAME_TOTAL_POINTS)
  private Integer totalPoints;

  public MatchScoreBreakdown2019Alliance() {
  }

  public MatchScoreBreakdown2019Alliance adjustPoints(Integer adjustPoints) {
    this.adjustPoints = adjustPoints;
    return this;
  }

  /**
   * Get adjustPoints
   * @return adjustPoints
   */
  @javax.annotation.Nullable
  public Integer getAdjustPoints() {
    return adjustPoints;
  }

  public void setAdjustPoints(Integer adjustPoints) {
    this.adjustPoints = adjustPoints;
  }


  public MatchScoreBreakdown2019Alliance autoPoints(Integer autoPoints) {
    this.autoPoints = autoPoints;
    return this;
  }

  /**
   * Get autoPoints
   * @return autoPoints
   */
  @javax.annotation.Nullable
  public Integer getAutoPoints() {
    return autoPoints;
  }

  public void setAutoPoints(Integer autoPoints) {
    this.autoPoints = autoPoints;
  }


  public MatchScoreBreakdown2019Alliance bay1(String bay1) {
    this.bay1 = bay1;
    return this;
  }

  /**
   * Get bay1
   * @return bay1
   */
  @javax.annotation.Nullable
  public String getBay1() {
    return bay1;
  }

  public void setBay1(String bay1) {
    this.bay1 = bay1;
  }


  public MatchScoreBreakdown2019Alliance bay2(String bay2) {
    this.bay2 = bay2;
    return this;
  }

  /**
   * Get bay2
   * @return bay2
   */
  @javax.annotation.Nullable
  public String getBay2() {
    return bay2;
  }

  public void setBay2(String bay2) {
    this.bay2 = bay2;
  }


  public MatchScoreBreakdown2019Alliance bay3(String bay3) {
    this.bay3 = bay3;
    return this;
  }

  /**
   * Get bay3
   * @return bay3
   */
  @javax.annotation.Nullable
  public String getBay3() {
    return bay3;
  }

  public void setBay3(String bay3) {
    this.bay3 = bay3;
  }


  public MatchScoreBreakdown2019Alliance bay4(String bay4) {
    this.bay4 = bay4;
    return this;
  }

  /**
   * Get bay4
   * @return bay4
   */
  @javax.annotation.Nullable
  public String getBay4() {
    return bay4;
  }

  public void setBay4(String bay4) {
    this.bay4 = bay4;
  }


  public MatchScoreBreakdown2019Alliance bay5(String bay5) {
    this.bay5 = bay5;
    return this;
  }

  /**
   * Get bay5
   * @return bay5
   */
  @javax.annotation.Nullable
  public String getBay5() {
    return bay5;
  }

  public void setBay5(String bay5) {
    this.bay5 = bay5;
  }


  public MatchScoreBreakdown2019Alliance bay6(String bay6) {
    this.bay6 = bay6;
    return this;
  }

  /**
   * Get bay6
   * @return bay6
   */
  @javax.annotation.Nullable
  public String getBay6() {
    return bay6;
  }

  public void setBay6(String bay6) {
    this.bay6 = bay6;
  }


  public MatchScoreBreakdown2019Alliance bay7(String bay7) {
    this.bay7 = bay7;
    return this;
  }

  /**
   * Get bay7
   * @return bay7
   */
  @javax.annotation.Nullable
  public String getBay7() {
    return bay7;
  }

  public void setBay7(String bay7) {
    this.bay7 = bay7;
  }


  public MatchScoreBreakdown2019Alliance bay8(String bay8) {
    this.bay8 = bay8;
    return this;
  }

  /**
   * Get bay8
   * @return bay8
   */
  @javax.annotation.Nullable
  public String getBay8() {
    return bay8;
  }

  public void setBay8(String bay8) {
    this.bay8 = bay8;
  }


  public MatchScoreBreakdown2019Alliance cargoPoints(Integer cargoPoints) {
    this.cargoPoints = cargoPoints;
    return this;
  }

  /**
   * Get cargoPoints
   * @return cargoPoints
   */
  @javax.annotation.Nullable
  public Integer getCargoPoints() {
    return cargoPoints;
  }

  public void setCargoPoints(Integer cargoPoints) {
    this.cargoPoints = cargoPoints;
  }


  public MatchScoreBreakdown2019Alliance completeRocketRankingPoint(Boolean completeRocketRankingPoint) {
    this.completeRocketRankingPoint = completeRocketRankingPoint;
    return this;
  }

  /**
   * Get completeRocketRankingPoint
   * @return completeRocketRankingPoint
   */
  @javax.annotation.Nullable
  public Boolean getCompleteRocketRankingPoint() {
    return completeRocketRankingPoint;
  }

  public void setCompleteRocketRankingPoint(Boolean completeRocketRankingPoint) {
    this.completeRocketRankingPoint = completeRocketRankingPoint;
  }


  public MatchScoreBreakdown2019Alliance completedRocketFar(Boolean completedRocketFar) {
    this.completedRocketFar = completedRocketFar;
    return this;
  }

  /**
   * Get completedRocketFar
   * @return completedRocketFar
   */
  @javax.annotation.Nullable
  public Boolean getCompletedRocketFar() {
    return completedRocketFar;
  }

  public void setCompletedRocketFar(Boolean completedRocketFar) {
    this.completedRocketFar = completedRocketFar;
  }


  public MatchScoreBreakdown2019Alliance completedRocketNear(Boolean completedRocketNear) {
    this.completedRocketNear = completedRocketNear;
    return this;
  }

  /**
   * Get completedRocketNear
   * @return completedRocketNear
   */
  @javax.annotation.Nullable
  public Boolean getCompletedRocketNear() {
    return completedRocketNear;
  }

  public void setCompletedRocketNear(Boolean completedRocketNear) {
    this.completedRocketNear = completedRocketNear;
  }


  public MatchScoreBreakdown2019Alliance endgameRobot1(String endgameRobot1) {
    this.endgameRobot1 = endgameRobot1;
    return this;
  }

  /**
   * Get endgameRobot1
   * @return endgameRobot1
   */
  @javax.annotation.Nullable
  public String getEndgameRobot1() {
    return endgameRobot1;
  }

  public void setEndgameRobot1(String endgameRobot1) {
    this.endgameRobot1 = endgameRobot1;
  }


  public MatchScoreBreakdown2019Alliance endgameRobot2(String endgameRobot2) {
    this.endgameRobot2 = endgameRobot2;
    return this;
  }

  /**
   * Get endgameRobot2
   * @return endgameRobot2
   */
  @javax.annotation.Nullable
  public String getEndgameRobot2() {
    return endgameRobot2;
  }

  public void setEndgameRobot2(String endgameRobot2) {
    this.endgameRobot2 = endgameRobot2;
  }


  public MatchScoreBreakdown2019Alliance endgameRobot3(String endgameRobot3) {
    this.endgameRobot3 = endgameRobot3;
    return this;
  }

  /**
   * Get endgameRobot3
   * @return endgameRobot3
   */
  @javax.annotation.Nullable
  public String getEndgameRobot3() {
    return endgameRobot3;
  }

  public void setEndgameRobot3(String endgameRobot3) {
    this.endgameRobot3 = endgameRobot3;
  }


  public MatchScoreBreakdown2019Alliance foulCount(Integer foulCount) {
    this.foulCount = foulCount;
    return this;
  }

  /**
   * Get foulCount
   * @return foulCount
   */
  @javax.annotation.Nullable
  public Integer getFoulCount() {
    return foulCount;
  }

  public void setFoulCount(Integer foulCount) {
    this.foulCount = foulCount;
  }


  public MatchScoreBreakdown2019Alliance foulPoints(Integer foulPoints) {
    this.foulPoints = foulPoints;
    return this;
  }

  /**
   * Get foulPoints
   * @return foulPoints
   */
  @javax.annotation.Nullable
  public Integer getFoulPoints() {
    return foulPoints;
  }

  public void setFoulPoints(Integer foulPoints) {
    this.foulPoints = foulPoints;
  }


  public MatchScoreBreakdown2019Alliance habClimbPoints(Integer habClimbPoints) {
    this.habClimbPoints = habClimbPoints;
    return this;
  }

  /**
   * Get habClimbPoints
   * @return habClimbPoints
   */
  @javax.annotation.Nullable
  public Integer getHabClimbPoints() {
    return habClimbPoints;
  }

  public void setHabClimbPoints(Integer habClimbPoints) {
    this.habClimbPoints = habClimbPoints;
  }


  public MatchScoreBreakdown2019Alliance habDockingRankingPoint(Boolean habDockingRankingPoint) {
    this.habDockingRankingPoint = habDockingRankingPoint;
    return this;
  }

  /**
   * Get habDockingRankingPoint
   * @return habDockingRankingPoint
   */
  @javax.annotation.Nullable
  public Boolean getHabDockingRankingPoint() {
    return habDockingRankingPoint;
  }

  public void setHabDockingRankingPoint(Boolean habDockingRankingPoint) {
    this.habDockingRankingPoint = habDockingRankingPoint;
  }


  public MatchScoreBreakdown2019Alliance habLineRobot1(String habLineRobot1) {
    this.habLineRobot1 = habLineRobot1;
    return this;
  }

  /**
   * Get habLineRobot1
   * @return habLineRobot1
   */
  @javax.annotation.Nullable
  public String getHabLineRobot1() {
    return habLineRobot1;
  }

  public void setHabLineRobot1(String habLineRobot1) {
    this.habLineRobot1 = habLineRobot1;
  }


  public MatchScoreBreakdown2019Alliance habLineRobot2(String habLineRobot2) {
    this.habLineRobot2 = habLineRobot2;
    return this;
  }

  /**
   * Get habLineRobot2
   * @return habLineRobot2
   */
  @javax.annotation.Nullable
  public String getHabLineRobot2() {
    return habLineRobot2;
  }

  public void setHabLineRobot2(String habLineRobot2) {
    this.habLineRobot2 = habLineRobot2;
  }


  public MatchScoreBreakdown2019Alliance habLineRobot3(String habLineRobot3) {
    this.habLineRobot3 = habLineRobot3;
    return this;
  }

  /**
   * Get habLineRobot3
   * @return habLineRobot3
   */
  @javax.annotation.Nullable
  public String getHabLineRobot3() {
    return habLineRobot3;
  }

  public void setHabLineRobot3(String habLineRobot3) {
    this.habLineRobot3 = habLineRobot3;
  }


  public MatchScoreBreakdown2019Alliance hatchPanelPoints(Integer hatchPanelPoints) {
    this.hatchPanelPoints = hatchPanelPoints;
    return this;
  }

  /**
   * Get hatchPanelPoints
   * @return hatchPanelPoints
   */
  @javax.annotation.Nullable
  public Integer getHatchPanelPoints() {
    return hatchPanelPoints;
  }

  public void setHatchPanelPoints(Integer hatchPanelPoints) {
    this.hatchPanelPoints = hatchPanelPoints;
  }


  public MatchScoreBreakdown2019Alliance lowLeftRocketFar(String lowLeftRocketFar) {
    this.lowLeftRocketFar = lowLeftRocketFar;
    return this;
  }

  /**
   * Get lowLeftRocketFar
   * @return lowLeftRocketFar
   */
  @javax.annotation.Nullable
  public String getLowLeftRocketFar() {
    return lowLeftRocketFar;
  }

  public void setLowLeftRocketFar(String lowLeftRocketFar) {
    this.lowLeftRocketFar = lowLeftRocketFar;
  }


  public MatchScoreBreakdown2019Alliance lowLeftRocketNear(String lowLeftRocketNear) {
    this.lowLeftRocketNear = lowLeftRocketNear;
    return this;
  }

  /**
   * Get lowLeftRocketNear
   * @return lowLeftRocketNear
   */
  @javax.annotation.Nullable
  public String getLowLeftRocketNear() {
    return lowLeftRocketNear;
  }

  public void setLowLeftRocketNear(String lowLeftRocketNear) {
    this.lowLeftRocketNear = lowLeftRocketNear;
  }


  public MatchScoreBreakdown2019Alliance lowRightRocketFar(String lowRightRocketFar) {
    this.lowRightRocketFar = lowRightRocketFar;
    return this;
  }

  /**
   * Get lowRightRocketFar
   * @return lowRightRocketFar
   */
  @javax.annotation.Nullable
  public String getLowRightRocketFar() {
    return lowRightRocketFar;
  }

  public void setLowRightRocketFar(String lowRightRocketFar) {
    this.lowRightRocketFar = lowRightRocketFar;
  }


  public MatchScoreBreakdown2019Alliance lowRightRocketNear(String lowRightRocketNear) {
    this.lowRightRocketNear = lowRightRocketNear;
    return this;
  }

  /**
   * Get lowRightRocketNear
   * @return lowRightRocketNear
   */
  @javax.annotation.Nullable
  public String getLowRightRocketNear() {
    return lowRightRocketNear;
  }

  public void setLowRightRocketNear(String lowRightRocketNear) {
    this.lowRightRocketNear = lowRightRocketNear;
  }


  public MatchScoreBreakdown2019Alliance midLeftRocketFar(String midLeftRocketFar) {
    this.midLeftRocketFar = midLeftRocketFar;
    return this;
  }

  /**
   * Get midLeftRocketFar
   * @return midLeftRocketFar
   */
  @javax.annotation.Nullable
  public String getMidLeftRocketFar() {
    return midLeftRocketFar;
  }

  public void setMidLeftRocketFar(String midLeftRocketFar) {
    this.midLeftRocketFar = midLeftRocketFar;
  }


  public MatchScoreBreakdown2019Alliance midLeftRocketNear(String midLeftRocketNear) {
    this.midLeftRocketNear = midLeftRocketNear;
    return this;
  }

  /**
   * Get midLeftRocketNear
   * @return midLeftRocketNear
   */
  @javax.annotation.Nullable
  public String getMidLeftRocketNear() {
    return midLeftRocketNear;
  }

  public void setMidLeftRocketNear(String midLeftRocketNear) {
    this.midLeftRocketNear = midLeftRocketNear;
  }


  public MatchScoreBreakdown2019Alliance midRightRocketFar(String midRightRocketFar) {
    this.midRightRocketFar = midRightRocketFar;
    return this;
  }

  /**
   * Get midRightRocketFar
   * @return midRightRocketFar
   */
  @javax.annotation.Nullable
  public String getMidRightRocketFar() {
    return midRightRocketFar;
  }

  public void setMidRightRocketFar(String midRightRocketFar) {
    this.midRightRocketFar = midRightRocketFar;
  }


  public MatchScoreBreakdown2019Alliance midRightRocketNear(String midRightRocketNear) {
    this.midRightRocketNear = midRightRocketNear;
    return this;
  }

  /**
   * Get midRightRocketNear
   * @return midRightRocketNear
   */
  @javax.annotation.Nullable
  public String getMidRightRocketNear() {
    return midRightRocketNear;
  }

  public void setMidRightRocketNear(String midRightRocketNear) {
    this.midRightRocketNear = midRightRocketNear;
  }


  public MatchScoreBreakdown2019Alliance preMatchBay1(String preMatchBay1) {
    this.preMatchBay1 = preMatchBay1;
    return this;
  }

  /**
   * Get preMatchBay1
   * @return preMatchBay1
   */
  @javax.annotation.Nullable
  public String getPreMatchBay1() {
    return preMatchBay1;
  }

  public void setPreMatchBay1(String preMatchBay1) {
    this.preMatchBay1 = preMatchBay1;
  }


  public MatchScoreBreakdown2019Alliance preMatchBay2(String preMatchBay2) {
    this.preMatchBay2 = preMatchBay2;
    return this;
  }

  /**
   * Get preMatchBay2
   * @return preMatchBay2
   */
  @javax.annotation.Nullable
  public String getPreMatchBay2() {
    return preMatchBay2;
  }

  public void setPreMatchBay2(String preMatchBay2) {
    this.preMatchBay2 = preMatchBay2;
  }


  public MatchScoreBreakdown2019Alliance preMatchBay3(String preMatchBay3) {
    this.preMatchBay3 = preMatchBay3;
    return this;
  }

  /**
   * Get preMatchBay3
   * @return preMatchBay3
   */
  @javax.annotation.Nullable
  public String getPreMatchBay3() {
    return preMatchBay3;
  }

  public void setPreMatchBay3(String preMatchBay3) {
    this.preMatchBay3 = preMatchBay3;
  }


  public MatchScoreBreakdown2019Alliance preMatchBay6(String preMatchBay6) {
    this.preMatchBay6 = preMatchBay6;
    return this;
  }

  /**
   * Get preMatchBay6
   * @return preMatchBay6
   */
  @javax.annotation.Nullable
  public String getPreMatchBay6() {
    return preMatchBay6;
  }

  public void setPreMatchBay6(String preMatchBay6) {
    this.preMatchBay6 = preMatchBay6;
  }


  public MatchScoreBreakdown2019Alliance preMatchBay7(String preMatchBay7) {
    this.preMatchBay7 = preMatchBay7;
    return this;
  }

  /**
   * Get preMatchBay7
   * @return preMatchBay7
   */
  @javax.annotation.Nullable
  public String getPreMatchBay7() {
    return preMatchBay7;
  }

  public void setPreMatchBay7(String preMatchBay7) {
    this.preMatchBay7 = preMatchBay7;
  }


  public MatchScoreBreakdown2019Alliance preMatchBay8(String preMatchBay8) {
    this.preMatchBay8 = preMatchBay8;
    return this;
  }

  /**
   * Get preMatchBay8
   * @return preMatchBay8
   */
  @javax.annotation.Nullable
  public String getPreMatchBay8() {
    return preMatchBay8;
  }

  public void setPreMatchBay8(String preMatchBay8) {
    this.preMatchBay8 = preMatchBay8;
  }


  public MatchScoreBreakdown2019Alliance preMatchLevelRobot1(String preMatchLevelRobot1) {
    this.preMatchLevelRobot1 = preMatchLevelRobot1;
    return this;
  }

  /**
   * Get preMatchLevelRobot1
   * @return preMatchLevelRobot1
   */
  @javax.annotation.Nullable
  public String getPreMatchLevelRobot1() {
    return preMatchLevelRobot1;
  }

  public void setPreMatchLevelRobot1(String preMatchLevelRobot1) {
    this.preMatchLevelRobot1 = preMatchLevelRobot1;
  }


  public MatchScoreBreakdown2019Alliance preMatchLevelRobot2(String preMatchLevelRobot2) {
    this.preMatchLevelRobot2 = preMatchLevelRobot2;
    return this;
  }

  /**
   * Get preMatchLevelRobot2
   * @return preMatchLevelRobot2
   */
  @javax.annotation.Nullable
  public String getPreMatchLevelRobot2() {
    return preMatchLevelRobot2;
  }

  public void setPreMatchLevelRobot2(String preMatchLevelRobot2) {
    this.preMatchLevelRobot2 = preMatchLevelRobot2;
  }


  public MatchScoreBreakdown2019Alliance preMatchLevelRobot3(String preMatchLevelRobot3) {
    this.preMatchLevelRobot3 = preMatchLevelRobot3;
    return this;
  }

  /**
   * Get preMatchLevelRobot3
   * @return preMatchLevelRobot3
   */
  @javax.annotation.Nullable
  public String getPreMatchLevelRobot3() {
    return preMatchLevelRobot3;
  }

  public void setPreMatchLevelRobot3(String preMatchLevelRobot3) {
    this.preMatchLevelRobot3 = preMatchLevelRobot3;
  }


  public MatchScoreBreakdown2019Alliance rp(Integer rp) {
    this.rp = rp;
    return this;
  }

  /**
   * Get rp
   * @return rp
   */
  @javax.annotation.Nullable
  public Integer getRp() {
    return rp;
  }

  public void setRp(Integer rp) {
    this.rp = rp;
  }


  public MatchScoreBreakdown2019Alliance sandStormBonusPoints(Integer sandStormBonusPoints) {
    this.sandStormBonusPoints = sandStormBonusPoints;
    return this;
  }

  /**
   * Get sandStormBonusPoints
   * @return sandStormBonusPoints
   */
  @javax.annotation.Nullable
  public Integer getSandStormBonusPoints() {
    return sandStormBonusPoints;
  }

  public void setSandStormBonusPoints(Integer sandStormBonusPoints) {
    this.sandStormBonusPoints = sandStormBonusPoints;
  }


  public MatchScoreBreakdown2019Alliance techFoulCount(Integer techFoulCount) {
    this.techFoulCount = techFoulCount;
    return this;
  }

  /**
   * Get techFoulCount
   * @return techFoulCount
   */
  @javax.annotation.Nullable
  public Integer getTechFoulCount() {
    return techFoulCount;
  }

  public void setTechFoulCount(Integer techFoulCount) {
    this.techFoulCount = techFoulCount;
  }


  public MatchScoreBreakdown2019Alliance teleopPoints(Integer teleopPoints) {
    this.teleopPoints = teleopPoints;
    return this;
  }

  /**
   * Get teleopPoints
   * @return teleopPoints
   */
  @javax.annotation.Nullable
  public Integer getTeleopPoints() {
    return teleopPoints;
  }

  public void setTeleopPoints(Integer teleopPoints) {
    this.teleopPoints = teleopPoints;
  }


  public MatchScoreBreakdown2019Alliance topLeftRocketFar(String topLeftRocketFar) {
    this.topLeftRocketFar = topLeftRocketFar;
    return this;
  }

  /**
   * Get topLeftRocketFar
   * @return topLeftRocketFar
   */
  @javax.annotation.Nullable
  public String getTopLeftRocketFar() {
    return topLeftRocketFar;
  }

  public void setTopLeftRocketFar(String topLeftRocketFar) {
    this.topLeftRocketFar = topLeftRocketFar;
  }


  public MatchScoreBreakdown2019Alliance topLeftRocketNear(String topLeftRocketNear) {
    this.topLeftRocketNear = topLeftRocketNear;
    return this;
  }

  /**
   * Get topLeftRocketNear
   * @return topLeftRocketNear
   */
  @javax.annotation.Nullable
  public String getTopLeftRocketNear() {
    return topLeftRocketNear;
  }

  public void setTopLeftRocketNear(String topLeftRocketNear) {
    this.topLeftRocketNear = topLeftRocketNear;
  }


  public MatchScoreBreakdown2019Alliance topRightRocketFar(String topRightRocketFar) {
    this.topRightRocketFar = topRightRocketFar;
    return this;
  }

  /**
   * Get topRightRocketFar
   * @return topRightRocketFar
   */
  @javax.annotation.Nullable
  public String getTopRightRocketFar() {
    return topRightRocketFar;
  }

  public void setTopRightRocketFar(String topRightRocketFar) {
    this.topRightRocketFar = topRightRocketFar;
  }


  public MatchScoreBreakdown2019Alliance topRightRocketNear(String topRightRocketNear) {
    this.topRightRocketNear = topRightRocketNear;
    return this;
  }

  /**
   * Get topRightRocketNear
   * @return topRightRocketNear
   */
  @javax.annotation.Nullable
  public String getTopRightRocketNear() {
    return topRightRocketNear;
  }

  public void setTopRightRocketNear(String topRightRocketNear) {
    this.topRightRocketNear = topRightRocketNear;
  }


  public MatchScoreBreakdown2019Alliance totalPoints(Integer totalPoints) {
    this.totalPoints = totalPoints;
    return this;
  }

  /**
   * Get totalPoints
   * @return totalPoints
   */
  @javax.annotation.Nullable
  public Integer getTotalPoints() {
    return totalPoints;
  }

  public void setTotalPoints(Integer totalPoints) {
    this.totalPoints = totalPoints;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MatchScoreBreakdown2019Alliance matchScoreBreakdown2019Alliance = (MatchScoreBreakdown2019Alliance) o;
    return Objects.equals(this.adjustPoints, matchScoreBreakdown2019Alliance.adjustPoints) &&
        Objects.equals(this.autoPoints, matchScoreBreakdown2019Alliance.autoPoints) &&
        Objects.equals(this.bay1, matchScoreBreakdown2019Alliance.bay1) &&
        Objects.equals(this.bay2, matchScoreBreakdown2019Alliance.bay2) &&
        Objects.equals(this.bay3, matchScoreBreakdown2019Alliance.bay3) &&
        Objects.equals(this.bay4, matchScoreBreakdown2019Alliance.bay4) &&
        Objects.equals(this.bay5, matchScoreBreakdown2019Alliance.bay5) &&
        Objects.equals(this.bay6, matchScoreBreakdown2019Alliance.bay6) &&
        Objects.equals(this.bay7, matchScoreBreakdown2019Alliance.bay7) &&
        Objects.equals(this.bay8, matchScoreBreakdown2019Alliance.bay8) &&
        Objects.equals(this.cargoPoints, matchScoreBreakdown2019Alliance.cargoPoints) &&
        Objects.equals(this.completeRocketRankingPoint, matchScoreBreakdown2019Alliance.completeRocketRankingPoint) &&
        Objects.equals(this.completedRocketFar, matchScoreBreakdown2019Alliance.completedRocketFar) &&
        Objects.equals(this.completedRocketNear, matchScoreBreakdown2019Alliance.completedRocketNear) &&
        Objects.equals(this.endgameRobot1, matchScoreBreakdown2019Alliance.endgameRobot1) &&
        Objects.equals(this.endgameRobot2, matchScoreBreakdown2019Alliance.endgameRobot2) &&
        Objects.equals(this.endgameRobot3, matchScoreBreakdown2019Alliance.endgameRobot3) &&
        Objects.equals(this.foulCount, matchScoreBreakdown2019Alliance.foulCount) &&
        Objects.equals(this.foulPoints, matchScoreBreakdown2019Alliance.foulPoints) &&
        Objects.equals(this.habClimbPoints, matchScoreBreakdown2019Alliance.habClimbPoints) &&
        Objects.equals(this.habDockingRankingPoint, matchScoreBreakdown2019Alliance.habDockingRankingPoint) &&
        Objects.equals(this.habLineRobot1, matchScoreBreakdown2019Alliance.habLineRobot1) &&
        Objects.equals(this.habLineRobot2, matchScoreBreakdown2019Alliance.habLineRobot2) &&
        Objects.equals(this.habLineRobot3, matchScoreBreakdown2019Alliance.habLineRobot3) &&
        Objects.equals(this.hatchPanelPoints, matchScoreBreakdown2019Alliance.hatchPanelPoints) &&
        Objects.equals(this.lowLeftRocketFar, matchScoreBreakdown2019Alliance.lowLeftRocketFar) &&
        Objects.equals(this.lowLeftRocketNear, matchScoreBreakdown2019Alliance.lowLeftRocketNear) &&
        Objects.equals(this.lowRightRocketFar, matchScoreBreakdown2019Alliance.lowRightRocketFar) &&
        Objects.equals(this.lowRightRocketNear, matchScoreBreakdown2019Alliance.lowRightRocketNear) &&
        Objects.equals(this.midLeftRocketFar, matchScoreBreakdown2019Alliance.midLeftRocketFar) &&
        Objects.equals(this.midLeftRocketNear, matchScoreBreakdown2019Alliance.midLeftRocketNear) &&
        Objects.equals(this.midRightRocketFar, matchScoreBreakdown2019Alliance.midRightRocketFar) &&
        Objects.equals(this.midRightRocketNear, matchScoreBreakdown2019Alliance.midRightRocketNear) &&
        Objects.equals(this.preMatchBay1, matchScoreBreakdown2019Alliance.preMatchBay1) &&
        Objects.equals(this.preMatchBay2, matchScoreBreakdown2019Alliance.preMatchBay2) &&
        Objects.equals(this.preMatchBay3, matchScoreBreakdown2019Alliance.preMatchBay3) &&
        Objects.equals(this.preMatchBay6, matchScoreBreakdown2019Alliance.preMatchBay6) &&
        Objects.equals(this.preMatchBay7, matchScoreBreakdown2019Alliance.preMatchBay7) &&
        Objects.equals(this.preMatchBay8, matchScoreBreakdown2019Alliance.preMatchBay8) &&
        Objects.equals(this.preMatchLevelRobot1, matchScoreBreakdown2019Alliance.preMatchLevelRobot1) &&
        Objects.equals(this.preMatchLevelRobot2, matchScoreBreakdown2019Alliance.preMatchLevelRobot2) &&
        Objects.equals(this.preMatchLevelRobot3, matchScoreBreakdown2019Alliance.preMatchLevelRobot3) &&
        Objects.equals(this.rp, matchScoreBreakdown2019Alliance.rp) &&
        Objects.equals(this.sandStormBonusPoints, matchScoreBreakdown2019Alliance.sandStormBonusPoints) &&
        Objects.equals(this.techFoulCount, matchScoreBreakdown2019Alliance.techFoulCount) &&
        Objects.equals(this.teleopPoints, matchScoreBreakdown2019Alliance.teleopPoints) &&
        Objects.equals(this.topLeftRocketFar, matchScoreBreakdown2019Alliance.topLeftRocketFar) &&
        Objects.equals(this.topLeftRocketNear, matchScoreBreakdown2019Alliance.topLeftRocketNear) &&
        Objects.equals(this.topRightRocketFar, matchScoreBreakdown2019Alliance.topRightRocketFar) &&
        Objects.equals(this.topRightRocketNear, matchScoreBreakdown2019Alliance.topRightRocketNear) &&
        Objects.equals(this.totalPoints, matchScoreBreakdown2019Alliance.totalPoints);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adjustPoints, autoPoints, bay1, bay2, bay3, bay4, bay5, bay6, bay7, bay8, cargoPoints, completeRocketRankingPoint, completedRocketFar, completedRocketNear, endgameRobot1, endgameRobot2, endgameRobot3, foulCount, foulPoints, habClimbPoints, habDockingRankingPoint, habLineRobot1, habLineRobot2, habLineRobot3, hatchPanelPoints, lowLeftRocketFar, lowLeftRocketNear, lowRightRocketFar, lowRightRocketNear, midLeftRocketFar, midLeftRocketNear, midRightRocketFar, midRightRocketNear, preMatchBay1, preMatchBay2, preMatchBay3, preMatchBay6, preMatchBay7, preMatchBay8, preMatchLevelRobot1, preMatchLevelRobot2, preMatchLevelRobot3, rp, sandStormBonusPoints, techFoulCount, teleopPoints, topLeftRocketFar, topLeftRocketNear, topRightRocketFar, topRightRocketNear, totalPoints);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatchScoreBreakdown2019Alliance {\n");
    sb.append("    adjustPoints: ").append(toIndentedString(adjustPoints)).append("\n");
    sb.append("    autoPoints: ").append(toIndentedString(autoPoints)).append("\n");
    sb.append("    bay1: ").append(toIndentedString(bay1)).append("\n");
    sb.append("    bay2: ").append(toIndentedString(bay2)).append("\n");
    sb.append("    bay3: ").append(toIndentedString(bay3)).append("\n");
    sb.append("    bay4: ").append(toIndentedString(bay4)).append("\n");
    sb.append("    bay5: ").append(toIndentedString(bay5)).append("\n");
    sb.append("    bay6: ").append(toIndentedString(bay6)).append("\n");
    sb.append("    bay7: ").append(toIndentedString(bay7)).append("\n");
    sb.append("    bay8: ").append(toIndentedString(bay8)).append("\n");
    sb.append("    cargoPoints: ").append(toIndentedString(cargoPoints)).append("\n");
    sb.append("    completeRocketRankingPoint: ").append(toIndentedString(completeRocketRankingPoint)).append("\n");
    sb.append("    completedRocketFar: ").append(toIndentedString(completedRocketFar)).append("\n");
    sb.append("    completedRocketNear: ").append(toIndentedString(completedRocketNear)).append("\n");
    sb.append("    endgameRobot1: ").append(toIndentedString(endgameRobot1)).append("\n");
    sb.append("    endgameRobot2: ").append(toIndentedString(endgameRobot2)).append("\n");
    sb.append("    endgameRobot3: ").append(toIndentedString(endgameRobot3)).append("\n");
    sb.append("    foulCount: ").append(toIndentedString(foulCount)).append("\n");
    sb.append("    foulPoints: ").append(toIndentedString(foulPoints)).append("\n");
    sb.append("    habClimbPoints: ").append(toIndentedString(habClimbPoints)).append("\n");
    sb.append("    habDockingRankingPoint: ").append(toIndentedString(habDockingRankingPoint)).append("\n");
    sb.append("    habLineRobot1: ").append(toIndentedString(habLineRobot1)).append("\n");
    sb.append("    habLineRobot2: ").append(toIndentedString(habLineRobot2)).append("\n");
    sb.append("    habLineRobot3: ").append(toIndentedString(habLineRobot3)).append("\n");
    sb.append("    hatchPanelPoints: ").append(toIndentedString(hatchPanelPoints)).append("\n");
    sb.append("    lowLeftRocketFar: ").append(toIndentedString(lowLeftRocketFar)).append("\n");
    sb.append("    lowLeftRocketNear: ").append(toIndentedString(lowLeftRocketNear)).append("\n");
    sb.append("    lowRightRocketFar: ").append(toIndentedString(lowRightRocketFar)).append("\n");
    sb.append("    lowRightRocketNear: ").append(toIndentedString(lowRightRocketNear)).append("\n");
    sb.append("    midLeftRocketFar: ").append(toIndentedString(midLeftRocketFar)).append("\n");
    sb.append("    midLeftRocketNear: ").append(toIndentedString(midLeftRocketNear)).append("\n");
    sb.append("    midRightRocketFar: ").append(toIndentedString(midRightRocketFar)).append("\n");
    sb.append("    midRightRocketNear: ").append(toIndentedString(midRightRocketNear)).append("\n");
    sb.append("    preMatchBay1: ").append(toIndentedString(preMatchBay1)).append("\n");
    sb.append("    preMatchBay2: ").append(toIndentedString(preMatchBay2)).append("\n");
    sb.append("    preMatchBay3: ").append(toIndentedString(preMatchBay3)).append("\n");
    sb.append("    preMatchBay6: ").append(toIndentedString(preMatchBay6)).append("\n");
    sb.append("    preMatchBay7: ").append(toIndentedString(preMatchBay7)).append("\n");
    sb.append("    preMatchBay8: ").append(toIndentedString(preMatchBay8)).append("\n");
    sb.append("    preMatchLevelRobot1: ").append(toIndentedString(preMatchLevelRobot1)).append("\n");
    sb.append("    preMatchLevelRobot2: ").append(toIndentedString(preMatchLevelRobot2)).append("\n");
    sb.append("    preMatchLevelRobot3: ").append(toIndentedString(preMatchLevelRobot3)).append("\n");
    sb.append("    rp: ").append(toIndentedString(rp)).append("\n");
    sb.append("    sandStormBonusPoints: ").append(toIndentedString(sandStormBonusPoints)).append("\n");
    sb.append("    techFoulCount: ").append(toIndentedString(techFoulCount)).append("\n");
    sb.append("    teleopPoints: ").append(toIndentedString(teleopPoints)).append("\n");
    sb.append("    topLeftRocketFar: ").append(toIndentedString(topLeftRocketFar)).append("\n");
    sb.append("    topLeftRocketNear: ").append(toIndentedString(topLeftRocketNear)).append("\n");
    sb.append("    topRightRocketFar: ").append(toIndentedString(topRightRocketFar)).append("\n");
    sb.append("    topRightRocketNear: ").append(toIndentedString(topRightRocketNear)).append("\n");
    sb.append("    totalPoints: ").append(toIndentedString(totalPoints)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adjustPoints");
    openapiFields.add("autoPoints");
    openapiFields.add("bay1");
    openapiFields.add("bay2");
    openapiFields.add("bay3");
    openapiFields.add("bay4");
    openapiFields.add("bay5");
    openapiFields.add("bay6");
    openapiFields.add("bay7");
    openapiFields.add("bay8");
    openapiFields.add("cargoPoints");
    openapiFields.add("completeRocketRankingPoint");
    openapiFields.add("completedRocketFar");
    openapiFields.add("completedRocketNear");
    openapiFields.add("endgameRobot1");
    openapiFields.add("endgameRobot2");
    openapiFields.add("endgameRobot3");
    openapiFields.add("foulCount");
    openapiFields.add("foulPoints");
    openapiFields.add("habClimbPoints");
    openapiFields.add("habDockingRankingPoint");
    openapiFields.add("habLineRobot1");
    openapiFields.add("habLineRobot2");
    openapiFields.add("habLineRobot3");
    openapiFields.add("hatchPanelPoints");
    openapiFields.add("lowLeftRocketFar");
    openapiFields.add("lowLeftRocketNear");
    openapiFields.add("lowRightRocketFar");
    openapiFields.add("lowRightRocketNear");
    openapiFields.add("midLeftRocketFar");
    openapiFields.add("midLeftRocketNear");
    openapiFields.add("midRightRocketFar");
    openapiFields.add("midRightRocketNear");
    openapiFields.add("preMatchBay1");
    openapiFields.add("preMatchBay2");
    openapiFields.add("preMatchBay3");
    openapiFields.add("preMatchBay6");
    openapiFields.add("preMatchBay7");
    openapiFields.add("preMatchBay8");
    openapiFields.add("preMatchLevelRobot1");
    openapiFields.add("preMatchLevelRobot2");
    openapiFields.add("preMatchLevelRobot3");
    openapiFields.add("rp");
    openapiFields.add("sandStormBonusPoints");
    openapiFields.add("techFoulCount");
    openapiFields.add("teleopPoints");
    openapiFields.add("topLeftRocketFar");
    openapiFields.add("topLeftRocketNear");
    openapiFields.add("topRightRocketFar");
    openapiFields.add("topRightRocketNear");
    openapiFields.add("totalPoints");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MatchScoreBreakdown2019Alliance
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MatchScoreBreakdown2019Alliance.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MatchScoreBreakdown2019Alliance is not found in the empty JSON string", MatchScoreBreakdown2019Alliance.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MatchScoreBreakdown2019Alliance.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MatchScoreBreakdown2019Alliance` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("bay1") != null && !jsonObj.get("bay1").isJsonNull()) && !jsonObj.get("bay1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bay1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bay1").toString()));
      }
      if ((jsonObj.get("bay2") != null && !jsonObj.get("bay2").isJsonNull()) && !jsonObj.get("bay2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bay2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bay2").toString()));
      }
      if ((jsonObj.get("bay3") != null && !jsonObj.get("bay3").isJsonNull()) && !jsonObj.get("bay3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bay3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bay3").toString()));
      }
      if ((jsonObj.get("bay4") != null && !jsonObj.get("bay4").isJsonNull()) && !jsonObj.get("bay4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bay4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bay4").toString()));
      }
      if ((jsonObj.get("bay5") != null && !jsonObj.get("bay5").isJsonNull()) && !jsonObj.get("bay5").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bay5` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bay5").toString()));
      }
      if ((jsonObj.get("bay6") != null && !jsonObj.get("bay6").isJsonNull()) && !jsonObj.get("bay6").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bay6` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bay6").toString()));
      }
      if ((jsonObj.get("bay7") != null && !jsonObj.get("bay7").isJsonNull()) && !jsonObj.get("bay7").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bay7` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bay7").toString()));
      }
      if ((jsonObj.get("bay8") != null && !jsonObj.get("bay8").isJsonNull()) && !jsonObj.get("bay8").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bay8` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bay8").toString()));
      }
      if ((jsonObj.get("endgameRobot1") != null && !jsonObj.get("endgameRobot1").isJsonNull()) && !jsonObj.get("endgameRobot1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endgameRobot1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endgameRobot1").toString()));
      }
      if ((jsonObj.get("endgameRobot2") != null && !jsonObj.get("endgameRobot2").isJsonNull()) && !jsonObj.get("endgameRobot2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endgameRobot2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endgameRobot2").toString()));
      }
      if ((jsonObj.get("endgameRobot3") != null && !jsonObj.get("endgameRobot3").isJsonNull()) && !jsonObj.get("endgameRobot3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endgameRobot3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endgameRobot3").toString()));
      }
      if ((jsonObj.get("habLineRobot1") != null && !jsonObj.get("habLineRobot1").isJsonNull()) && !jsonObj.get("habLineRobot1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `habLineRobot1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("habLineRobot1").toString()));
      }
      if ((jsonObj.get("habLineRobot2") != null && !jsonObj.get("habLineRobot2").isJsonNull()) && !jsonObj.get("habLineRobot2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `habLineRobot2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("habLineRobot2").toString()));
      }
      if ((jsonObj.get("habLineRobot3") != null && !jsonObj.get("habLineRobot3").isJsonNull()) && !jsonObj.get("habLineRobot3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `habLineRobot3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("habLineRobot3").toString()));
      }
      if ((jsonObj.get("lowLeftRocketFar") != null && !jsonObj.get("lowLeftRocketFar").isJsonNull()) && !jsonObj.get("lowLeftRocketFar").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lowLeftRocketFar` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lowLeftRocketFar").toString()));
      }
      if ((jsonObj.get("lowLeftRocketNear") != null && !jsonObj.get("lowLeftRocketNear").isJsonNull()) && !jsonObj.get("lowLeftRocketNear").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lowLeftRocketNear` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lowLeftRocketNear").toString()));
      }
      if ((jsonObj.get("lowRightRocketFar") != null && !jsonObj.get("lowRightRocketFar").isJsonNull()) && !jsonObj.get("lowRightRocketFar").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lowRightRocketFar` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lowRightRocketFar").toString()));
      }
      if ((jsonObj.get("lowRightRocketNear") != null && !jsonObj.get("lowRightRocketNear").isJsonNull()) && !jsonObj.get("lowRightRocketNear").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lowRightRocketNear` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lowRightRocketNear").toString()));
      }
      if ((jsonObj.get("midLeftRocketFar") != null && !jsonObj.get("midLeftRocketFar").isJsonNull()) && !jsonObj.get("midLeftRocketFar").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `midLeftRocketFar` to be a primitive type in the JSON string but got `%s`", jsonObj.get("midLeftRocketFar").toString()));
      }
      if ((jsonObj.get("midLeftRocketNear") != null && !jsonObj.get("midLeftRocketNear").isJsonNull()) && !jsonObj.get("midLeftRocketNear").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `midLeftRocketNear` to be a primitive type in the JSON string but got `%s`", jsonObj.get("midLeftRocketNear").toString()));
      }
      if ((jsonObj.get("midRightRocketFar") != null && !jsonObj.get("midRightRocketFar").isJsonNull()) && !jsonObj.get("midRightRocketFar").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `midRightRocketFar` to be a primitive type in the JSON string but got `%s`", jsonObj.get("midRightRocketFar").toString()));
      }
      if ((jsonObj.get("midRightRocketNear") != null && !jsonObj.get("midRightRocketNear").isJsonNull()) && !jsonObj.get("midRightRocketNear").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `midRightRocketNear` to be a primitive type in the JSON string but got `%s`", jsonObj.get("midRightRocketNear").toString()));
      }
      if ((jsonObj.get("preMatchBay1") != null && !jsonObj.get("preMatchBay1").isJsonNull()) && !jsonObj.get("preMatchBay1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preMatchBay1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preMatchBay1").toString()));
      }
      if ((jsonObj.get("preMatchBay2") != null && !jsonObj.get("preMatchBay2").isJsonNull()) && !jsonObj.get("preMatchBay2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preMatchBay2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preMatchBay2").toString()));
      }
      if ((jsonObj.get("preMatchBay3") != null && !jsonObj.get("preMatchBay3").isJsonNull()) && !jsonObj.get("preMatchBay3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preMatchBay3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preMatchBay3").toString()));
      }
      if ((jsonObj.get("preMatchBay6") != null && !jsonObj.get("preMatchBay6").isJsonNull()) && !jsonObj.get("preMatchBay6").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preMatchBay6` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preMatchBay6").toString()));
      }
      if ((jsonObj.get("preMatchBay7") != null && !jsonObj.get("preMatchBay7").isJsonNull()) && !jsonObj.get("preMatchBay7").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preMatchBay7` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preMatchBay7").toString()));
      }
      if ((jsonObj.get("preMatchBay8") != null && !jsonObj.get("preMatchBay8").isJsonNull()) && !jsonObj.get("preMatchBay8").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preMatchBay8` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preMatchBay8").toString()));
      }
      if ((jsonObj.get("preMatchLevelRobot1") != null && !jsonObj.get("preMatchLevelRobot1").isJsonNull()) && !jsonObj.get("preMatchLevelRobot1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preMatchLevelRobot1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preMatchLevelRobot1").toString()));
      }
      if ((jsonObj.get("preMatchLevelRobot2") != null && !jsonObj.get("preMatchLevelRobot2").isJsonNull()) && !jsonObj.get("preMatchLevelRobot2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preMatchLevelRobot2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preMatchLevelRobot2").toString()));
      }
      if ((jsonObj.get("preMatchLevelRobot3") != null && !jsonObj.get("preMatchLevelRobot3").isJsonNull()) && !jsonObj.get("preMatchLevelRobot3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `preMatchLevelRobot3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("preMatchLevelRobot3").toString()));
      }
      if ((jsonObj.get("topLeftRocketFar") != null && !jsonObj.get("topLeftRocketFar").isJsonNull()) && !jsonObj.get("topLeftRocketFar").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `topLeftRocketFar` to be a primitive type in the JSON string but got `%s`", jsonObj.get("topLeftRocketFar").toString()));
      }
      if ((jsonObj.get("topLeftRocketNear") != null && !jsonObj.get("topLeftRocketNear").isJsonNull()) && !jsonObj.get("topLeftRocketNear").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `topLeftRocketNear` to be a primitive type in the JSON string but got `%s`", jsonObj.get("topLeftRocketNear").toString()));
      }
      if ((jsonObj.get("topRightRocketFar") != null && !jsonObj.get("topRightRocketFar").isJsonNull()) && !jsonObj.get("topRightRocketFar").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `topRightRocketFar` to be a primitive type in the JSON string but got `%s`", jsonObj.get("topRightRocketFar").toString()));
      }
      if ((jsonObj.get("topRightRocketNear") != null && !jsonObj.get("topRightRocketNear").isJsonNull()) && !jsonObj.get("topRightRocketNear").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `topRightRocketNear` to be a primitive type in the JSON string but got `%s`", jsonObj.get("topRightRocketNear").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MatchScoreBreakdown2019Alliance.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MatchScoreBreakdown2019Alliance' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MatchScoreBreakdown2019Alliance> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MatchScoreBreakdown2019Alliance.class));

       return (TypeAdapter<T>) new TypeAdapter<MatchScoreBreakdown2019Alliance>() {
           @Override
           public void write(JsonWriter out, MatchScoreBreakdown2019Alliance value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MatchScoreBreakdown2019Alliance read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MatchScoreBreakdown2019Alliance given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MatchScoreBreakdown2019Alliance
   * @throws IOException if the JSON string is invalid with respect to MatchScoreBreakdown2019Alliance
   */
  public static MatchScoreBreakdown2019Alliance fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MatchScoreBreakdown2019Alliance.class);
  }

  /**
   * Convert an instance of MatchScoreBreakdown2019Alliance to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

