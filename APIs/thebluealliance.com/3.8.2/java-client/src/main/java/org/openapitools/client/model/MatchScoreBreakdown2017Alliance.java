/*
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MatchScoreBreakdown2017Alliance
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:56:47.661723-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MatchScoreBreakdown2017Alliance {
  public static final String SERIALIZED_NAME_ADJUST_POINTS = "adjustPoints";
  @SerializedName(SERIALIZED_NAME_ADJUST_POINTS)
  private Integer adjustPoints;

  public static final String SERIALIZED_NAME_AUTO_FUEL_HIGH = "autoFuelHigh";
  @SerializedName(SERIALIZED_NAME_AUTO_FUEL_HIGH)
  private Integer autoFuelHigh;

  public static final String SERIALIZED_NAME_AUTO_FUEL_LOW = "autoFuelLow";
  @SerializedName(SERIALIZED_NAME_AUTO_FUEL_LOW)
  private Integer autoFuelLow;

  public static final String SERIALIZED_NAME_AUTO_FUEL_POINTS = "autoFuelPoints";
  @SerializedName(SERIALIZED_NAME_AUTO_FUEL_POINTS)
  private Integer autoFuelPoints;

  public static final String SERIALIZED_NAME_AUTO_MOBILITY_POINTS = "autoMobilityPoints";
  @SerializedName(SERIALIZED_NAME_AUTO_MOBILITY_POINTS)
  private Integer autoMobilityPoints;

  public static final String SERIALIZED_NAME_AUTO_POINTS = "autoPoints";
  @SerializedName(SERIALIZED_NAME_AUTO_POINTS)
  private Integer autoPoints;

  public static final String SERIALIZED_NAME_AUTO_ROTOR_POINTS = "autoRotorPoints";
  @SerializedName(SERIALIZED_NAME_AUTO_ROTOR_POINTS)
  private Integer autoRotorPoints;

  public static final String SERIALIZED_NAME_FOUL_COUNT = "foulCount";
  @SerializedName(SERIALIZED_NAME_FOUL_COUNT)
  private Integer foulCount;

  public static final String SERIALIZED_NAME_FOUL_POINTS = "foulPoints";
  @SerializedName(SERIALIZED_NAME_FOUL_POINTS)
  private Integer foulPoints;

  public static final String SERIALIZED_NAME_K_PA_BONUS_POINTS = "kPaBonusPoints";
  @SerializedName(SERIALIZED_NAME_K_PA_BONUS_POINTS)
  private Integer kPaBonusPoints;

  public static final String SERIALIZED_NAME_K_PA_RANKING_POINT_ACHIEVED = "kPaRankingPointAchieved";
  @SerializedName(SERIALIZED_NAME_K_PA_RANKING_POINT_ACHIEVED)
  private Boolean kPaRankingPointAchieved;

  /**
   * Gets or Sets robot1Auto
   */
  @JsonAdapter(Robot1AutoEnum.Adapter.class)
  public enum Robot1AutoEnum {
    UNKNOWN("Unknown"),
    
    MOBILITY("Mobility"),
    
    NONE("None");

    private String value;

    Robot1AutoEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static Robot1AutoEnum fromValue(String value) {
      for (Robot1AutoEnum b : Robot1AutoEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<Robot1AutoEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final Robot1AutoEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public Robot1AutoEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return Robot1AutoEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      Robot1AutoEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ROBOT1_AUTO = "robot1Auto";
  @SerializedName(SERIALIZED_NAME_ROBOT1_AUTO)
  private Robot1AutoEnum robot1Auto;

  /**
   * Gets or Sets robot2Auto
   */
  @JsonAdapter(Robot2AutoEnum.Adapter.class)
  public enum Robot2AutoEnum {
    UNKNOWN("Unknown"),
    
    MOBILITY("Mobility"),
    
    NONE("None");

    private String value;

    Robot2AutoEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static Robot2AutoEnum fromValue(String value) {
      for (Robot2AutoEnum b : Robot2AutoEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<Robot2AutoEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final Robot2AutoEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public Robot2AutoEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return Robot2AutoEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      Robot2AutoEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ROBOT2_AUTO = "robot2Auto";
  @SerializedName(SERIALIZED_NAME_ROBOT2_AUTO)
  private Robot2AutoEnum robot2Auto;

  /**
   * Gets or Sets robot3Auto
   */
  @JsonAdapter(Robot3AutoEnum.Adapter.class)
  public enum Robot3AutoEnum {
    UNKNOWN("Unknown"),
    
    MOBILITY("Mobility"),
    
    NONE("None");

    private String value;

    Robot3AutoEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static Robot3AutoEnum fromValue(String value) {
      for (Robot3AutoEnum b : Robot3AutoEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<Robot3AutoEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final Robot3AutoEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public Robot3AutoEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return Robot3AutoEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      Robot3AutoEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ROBOT3_AUTO = "robot3Auto";
  @SerializedName(SERIALIZED_NAME_ROBOT3_AUTO)
  private Robot3AutoEnum robot3Auto;

  public static final String SERIALIZED_NAME_ROTOR1_AUTO = "rotor1Auto";
  @SerializedName(SERIALIZED_NAME_ROTOR1_AUTO)
  private Boolean rotor1Auto;

  public static final String SERIALIZED_NAME_ROTOR1_ENGAGED = "rotor1Engaged";
  @SerializedName(SERIALIZED_NAME_ROTOR1_ENGAGED)
  private Boolean rotor1Engaged;

  public static final String SERIALIZED_NAME_ROTOR2_AUTO = "rotor2Auto";
  @SerializedName(SERIALIZED_NAME_ROTOR2_AUTO)
  private Boolean rotor2Auto;

  public static final String SERIALIZED_NAME_ROTOR2_ENGAGED = "rotor2Engaged";
  @SerializedName(SERIALIZED_NAME_ROTOR2_ENGAGED)
  private Boolean rotor2Engaged;

  public static final String SERIALIZED_NAME_ROTOR3_ENGAGED = "rotor3Engaged";
  @SerializedName(SERIALIZED_NAME_ROTOR3_ENGAGED)
  private Boolean rotor3Engaged;

  public static final String SERIALIZED_NAME_ROTOR4_ENGAGED = "rotor4Engaged";
  @SerializedName(SERIALIZED_NAME_ROTOR4_ENGAGED)
  private Boolean rotor4Engaged;

  public static final String SERIALIZED_NAME_ROTOR_BONUS_POINTS = "rotorBonusPoints";
  @SerializedName(SERIALIZED_NAME_ROTOR_BONUS_POINTS)
  private Integer rotorBonusPoints;

  public static final String SERIALIZED_NAME_ROTOR_RANKING_POINT_ACHIEVED = "rotorRankingPointAchieved";
  @SerializedName(SERIALIZED_NAME_ROTOR_RANKING_POINT_ACHIEVED)
  private Boolean rotorRankingPointAchieved;

  public static final String SERIALIZED_NAME_TECH_FOUL_COUNT = "techFoulCount";
  @SerializedName(SERIALIZED_NAME_TECH_FOUL_COUNT)
  private Integer techFoulCount;

  public static final String SERIALIZED_NAME_TELEOP_FUEL_HIGH = "teleopFuelHigh";
  @SerializedName(SERIALIZED_NAME_TELEOP_FUEL_HIGH)
  private Integer teleopFuelHigh;

  public static final String SERIALIZED_NAME_TELEOP_FUEL_LOW = "teleopFuelLow";
  @SerializedName(SERIALIZED_NAME_TELEOP_FUEL_LOW)
  private Integer teleopFuelLow;

  public static final String SERIALIZED_NAME_TELEOP_FUEL_POINTS = "teleopFuelPoints";
  @SerializedName(SERIALIZED_NAME_TELEOP_FUEL_POINTS)
  private Integer teleopFuelPoints;

  public static final String SERIALIZED_NAME_TELEOP_POINTS = "teleopPoints";
  @SerializedName(SERIALIZED_NAME_TELEOP_POINTS)
  private Integer teleopPoints;

  public static final String SERIALIZED_NAME_TELEOP_ROTOR_POINTS = "teleopRotorPoints";
  @SerializedName(SERIALIZED_NAME_TELEOP_ROTOR_POINTS)
  private Integer teleopRotorPoints;

  public static final String SERIALIZED_NAME_TELEOP_TAKEOFF_POINTS = "teleopTakeoffPoints";
  @SerializedName(SERIALIZED_NAME_TELEOP_TAKEOFF_POINTS)
  private Integer teleopTakeoffPoints;

  public static final String SERIALIZED_NAME_TOTAL_POINTS = "totalPoints";
  @SerializedName(SERIALIZED_NAME_TOTAL_POINTS)
  private Integer totalPoints;

  public static final String SERIALIZED_NAME_TOUCHPAD_FAR = "touchpadFar";
  @SerializedName(SERIALIZED_NAME_TOUCHPAD_FAR)
  private String touchpadFar;

  public static final String SERIALIZED_NAME_TOUCHPAD_MIDDLE = "touchpadMiddle";
  @SerializedName(SERIALIZED_NAME_TOUCHPAD_MIDDLE)
  private String touchpadMiddle;

  public static final String SERIALIZED_NAME_TOUCHPAD_NEAR = "touchpadNear";
  @SerializedName(SERIALIZED_NAME_TOUCHPAD_NEAR)
  private String touchpadNear;

  public MatchScoreBreakdown2017Alliance() {
  }

  public MatchScoreBreakdown2017Alliance adjustPoints(Integer adjustPoints) {
    this.adjustPoints = adjustPoints;
    return this;
  }

  /**
   * Get adjustPoints
   * @return adjustPoints
   */
  @javax.annotation.Nullable
  public Integer getAdjustPoints() {
    return adjustPoints;
  }

  public void setAdjustPoints(Integer adjustPoints) {
    this.adjustPoints = adjustPoints;
  }


  public MatchScoreBreakdown2017Alliance autoFuelHigh(Integer autoFuelHigh) {
    this.autoFuelHigh = autoFuelHigh;
    return this;
  }

  /**
   * Get autoFuelHigh
   * @return autoFuelHigh
   */
  @javax.annotation.Nullable
  public Integer getAutoFuelHigh() {
    return autoFuelHigh;
  }

  public void setAutoFuelHigh(Integer autoFuelHigh) {
    this.autoFuelHigh = autoFuelHigh;
  }


  public MatchScoreBreakdown2017Alliance autoFuelLow(Integer autoFuelLow) {
    this.autoFuelLow = autoFuelLow;
    return this;
  }

  /**
   * Get autoFuelLow
   * @return autoFuelLow
   */
  @javax.annotation.Nullable
  public Integer getAutoFuelLow() {
    return autoFuelLow;
  }

  public void setAutoFuelLow(Integer autoFuelLow) {
    this.autoFuelLow = autoFuelLow;
  }


  public MatchScoreBreakdown2017Alliance autoFuelPoints(Integer autoFuelPoints) {
    this.autoFuelPoints = autoFuelPoints;
    return this;
  }

  /**
   * Get autoFuelPoints
   * @return autoFuelPoints
   */
  @javax.annotation.Nullable
  public Integer getAutoFuelPoints() {
    return autoFuelPoints;
  }

  public void setAutoFuelPoints(Integer autoFuelPoints) {
    this.autoFuelPoints = autoFuelPoints;
  }


  public MatchScoreBreakdown2017Alliance autoMobilityPoints(Integer autoMobilityPoints) {
    this.autoMobilityPoints = autoMobilityPoints;
    return this;
  }

  /**
   * Get autoMobilityPoints
   * @return autoMobilityPoints
   */
  @javax.annotation.Nullable
  public Integer getAutoMobilityPoints() {
    return autoMobilityPoints;
  }

  public void setAutoMobilityPoints(Integer autoMobilityPoints) {
    this.autoMobilityPoints = autoMobilityPoints;
  }


  public MatchScoreBreakdown2017Alliance autoPoints(Integer autoPoints) {
    this.autoPoints = autoPoints;
    return this;
  }

  /**
   * Get autoPoints
   * @return autoPoints
   */
  @javax.annotation.Nullable
  public Integer getAutoPoints() {
    return autoPoints;
  }

  public void setAutoPoints(Integer autoPoints) {
    this.autoPoints = autoPoints;
  }


  public MatchScoreBreakdown2017Alliance autoRotorPoints(Integer autoRotorPoints) {
    this.autoRotorPoints = autoRotorPoints;
    return this;
  }

  /**
   * Get autoRotorPoints
   * @return autoRotorPoints
   */
  @javax.annotation.Nullable
  public Integer getAutoRotorPoints() {
    return autoRotorPoints;
  }

  public void setAutoRotorPoints(Integer autoRotorPoints) {
    this.autoRotorPoints = autoRotorPoints;
  }


  public MatchScoreBreakdown2017Alliance foulCount(Integer foulCount) {
    this.foulCount = foulCount;
    return this;
  }

  /**
   * Get foulCount
   * @return foulCount
   */
  @javax.annotation.Nullable
  public Integer getFoulCount() {
    return foulCount;
  }

  public void setFoulCount(Integer foulCount) {
    this.foulCount = foulCount;
  }


  public MatchScoreBreakdown2017Alliance foulPoints(Integer foulPoints) {
    this.foulPoints = foulPoints;
    return this;
  }

  /**
   * Get foulPoints
   * @return foulPoints
   */
  @javax.annotation.Nullable
  public Integer getFoulPoints() {
    return foulPoints;
  }

  public void setFoulPoints(Integer foulPoints) {
    this.foulPoints = foulPoints;
  }


  public MatchScoreBreakdown2017Alliance kPaBonusPoints(Integer kPaBonusPoints) {
    this.kPaBonusPoints = kPaBonusPoints;
    return this;
  }

  /**
   * Get kPaBonusPoints
   * @return kPaBonusPoints
   */
  @javax.annotation.Nullable
  public Integer getkPaBonusPoints() {
    return kPaBonusPoints;
  }

  public void setkPaBonusPoints(Integer kPaBonusPoints) {
    this.kPaBonusPoints = kPaBonusPoints;
  }


  public MatchScoreBreakdown2017Alliance kPaRankingPointAchieved(Boolean kPaRankingPointAchieved) {
    this.kPaRankingPointAchieved = kPaRankingPointAchieved;
    return this;
  }

  /**
   * Get kPaRankingPointAchieved
   * @return kPaRankingPointAchieved
   */
  @javax.annotation.Nullable
  public Boolean getkPaRankingPointAchieved() {
    return kPaRankingPointAchieved;
  }

  public void setkPaRankingPointAchieved(Boolean kPaRankingPointAchieved) {
    this.kPaRankingPointAchieved = kPaRankingPointAchieved;
  }


  public MatchScoreBreakdown2017Alliance robot1Auto(Robot1AutoEnum robot1Auto) {
    this.robot1Auto = robot1Auto;
    return this;
  }

  /**
   * Get robot1Auto
   * @return robot1Auto
   */
  @javax.annotation.Nullable
  public Robot1AutoEnum getRobot1Auto() {
    return robot1Auto;
  }

  public void setRobot1Auto(Robot1AutoEnum robot1Auto) {
    this.robot1Auto = robot1Auto;
  }


  public MatchScoreBreakdown2017Alliance robot2Auto(Robot2AutoEnum robot2Auto) {
    this.robot2Auto = robot2Auto;
    return this;
  }

  /**
   * Get robot2Auto
   * @return robot2Auto
   */
  @javax.annotation.Nullable
  public Robot2AutoEnum getRobot2Auto() {
    return robot2Auto;
  }

  public void setRobot2Auto(Robot2AutoEnum robot2Auto) {
    this.robot2Auto = robot2Auto;
  }


  public MatchScoreBreakdown2017Alliance robot3Auto(Robot3AutoEnum robot3Auto) {
    this.robot3Auto = robot3Auto;
    return this;
  }

  /**
   * Get robot3Auto
   * @return robot3Auto
   */
  @javax.annotation.Nullable
  public Robot3AutoEnum getRobot3Auto() {
    return robot3Auto;
  }

  public void setRobot3Auto(Robot3AutoEnum robot3Auto) {
    this.robot3Auto = robot3Auto;
  }


  public MatchScoreBreakdown2017Alliance rotor1Auto(Boolean rotor1Auto) {
    this.rotor1Auto = rotor1Auto;
    return this;
  }

  /**
   * Get rotor1Auto
   * @return rotor1Auto
   */
  @javax.annotation.Nullable
  public Boolean getRotor1Auto() {
    return rotor1Auto;
  }

  public void setRotor1Auto(Boolean rotor1Auto) {
    this.rotor1Auto = rotor1Auto;
  }


  public MatchScoreBreakdown2017Alliance rotor1Engaged(Boolean rotor1Engaged) {
    this.rotor1Engaged = rotor1Engaged;
    return this;
  }

  /**
   * Get rotor1Engaged
   * @return rotor1Engaged
   */
  @javax.annotation.Nullable
  public Boolean getRotor1Engaged() {
    return rotor1Engaged;
  }

  public void setRotor1Engaged(Boolean rotor1Engaged) {
    this.rotor1Engaged = rotor1Engaged;
  }


  public MatchScoreBreakdown2017Alliance rotor2Auto(Boolean rotor2Auto) {
    this.rotor2Auto = rotor2Auto;
    return this;
  }

  /**
   * Get rotor2Auto
   * @return rotor2Auto
   */
  @javax.annotation.Nullable
  public Boolean getRotor2Auto() {
    return rotor2Auto;
  }

  public void setRotor2Auto(Boolean rotor2Auto) {
    this.rotor2Auto = rotor2Auto;
  }


  public MatchScoreBreakdown2017Alliance rotor2Engaged(Boolean rotor2Engaged) {
    this.rotor2Engaged = rotor2Engaged;
    return this;
  }

  /**
   * Get rotor2Engaged
   * @return rotor2Engaged
   */
  @javax.annotation.Nullable
  public Boolean getRotor2Engaged() {
    return rotor2Engaged;
  }

  public void setRotor2Engaged(Boolean rotor2Engaged) {
    this.rotor2Engaged = rotor2Engaged;
  }


  public MatchScoreBreakdown2017Alliance rotor3Engaged(Boolean rotor3Engaged) {
    this.rotor3Engaged = rotor3Engaged;
    return this;
  }

  /**
   * Get rotor3Engaged
   * @return rotor3Engaged
   */
  @javax.annotation.Nullable
  public Boolean getRotor3Engaged() {
    return rotor3Engaged;
  }

  public void setRotor3Engaged(Boolean rotor3Engaged) {
    this.rotor3Engaged = rotor3Engaged;
  }


  public MatchScoreBreakdown2017Alliance rotor4Engaged(Boolean rotor4Engaged) {
    this.rotor4Engaged = rotor4Engaged;
    return this;
  }

  /**
   * Get rotor4Engaged
   * @return rotor4Engaged
   */
  @javax.annotation.Nullable
  public Boolean getRotor4Engaged() {
    return rotor4Engaged;
  }

  public void setRotor4Engaged(Boolean rotor4Engaged) {
    this.rotor4Engaged = rotor4Engaged;
  }


  public MatchScoreBreakdown2017Alliance rotorBonusPoints(Integer rotorBonusPoints) {
    this.rotorBonusPoints = rotorBonusPoints;
    return this;
  }

  /**
   * Get rotorBonusPoints
   * @return rotorBonusPoints
   */
  @javax.annotation.Nullable
  public Integer getRotorBonusPoints() {
    return rotorBonusPoints;
  }

  public void setRotorBonusPoints(Integer rotorBonusPoints) {
    this.rotorBonusPoints = rotorBonusPoints;
  }


  public MatchScoreBreakdown2017Alliance rotorRankingPointAchieved(Boolean rotorRankingPointAchieved) {
    this.rotorRankingPointAchieved = rotorRankingPointAchieved;
    return this;
  }

  /**
   * Get rotorRankingPointAchieved
   * @return rotorRankingPointAchieved
   */
  @javax.annotation.Nullable
  public Boolean getRotorRankingPointAchieved() {
    return rotorRankingPointAchieved;
  }

  public void setRotorRankingPointAchieved(Boolean rotorRankingPointAchieved) {
    this.rotorRankingPointAchieved = rotorRankingPointAchieved;
  }


  public MatchScoreBreakdown2017Alliance techFoulCount(Integer techFoulCount) {
    this.techFoulCount = techFoulCount;
    return this;
  }

  /**
   * Get techFoulCount
   * @return techFoulCount
   */
  @javax.annotation.Nullable
  public Integer getTechFoulCount() {
    return techFoulCount;
  }

  public void setTechFoulCount(Integer techFoulCount) {
    this.techFoulCount = techFoulCount;
  }


  public MatchScoreBreakdown2017Alliance teleopFuelHigh(Integer teleopFuelHigh) {
    this.teleopFuelHigh = teleopFuelHigh;
    return this;
  }

  /**
   * Get teleopFuelHigh
   * @return teleopFuelHigh
   */
  @javax.annotation.Nullable
  public Integer getTeleopFuelHigh() {
    return teleopFuelHigh;
  }

  public void setTeleopFuelHigh(Integer teleopFuelHigh) {
    this.teleopFuelHigh = teleopFuelHigh;
  }


  public MatchScoreBreakdown2017Alliance teleopFuelLow(Integer teleopFuelLow) {
    this.teleopFuelLow = teleopFuelLow;
    return this;
  }

  /**
   * Get teleopFuelLow
   * @return teleopFuelLow
   */
  @javax.annotation.Nullable
  public Integer getTeleopFuelLow() {
    return teleopFuelLow;
  }

  public void setTeleopFuelLow(Integer teleopFuelLow) {
    this.teleopFuelLow = teleopFuelLow;
  }


  public MatchScoreBreakdown2017Alliance teleopFuelPoints(Integer teleopFuelPoints) {
    this.teleopFuelPoints = teleopFuelPoints;
    return this;
  }

  /**
   * Get teleopFuelPoints
   * @return teleopFuelPoints
   */
  @javax.annotation.Nullable
  public Integer getTeleopFuelPoints() {
    return teleopFuelPoints;
  }

  public void setTeleopFuelPoints(Integer teleopFuelPoints) {
    this.teleopFuelPoints = teleopFuelPoints;
  }


  public MatchScoreBreakdown2017Alliance teleopPoints(Integer teleopPoints) {
    this.teleopPoints = teleopPoints;
    return this;
  }

  /**
   * Get teleopPoints
   * @return teleopPoints
   */
  @javax.annotation.Nullable
  public Integer getTeleopPoints() {
    return teleopPoints;
  }

  public void setTeleopPoints(Integer teleopPoints) {
    this.teleopPoints = teleopPoints;
  }


  public MatchScoreBreakdown2017Alliance teleopRotorPoints(Integer teleopRotorPoints) {
    this.teleopRotorPoints = teleopRotorPoints;
    return this;
  }

  /**
   * Get teleopRotorPoints
   * @return teleopRotorPoints
   */
  @javax.annotation.Nullable
  public Integer getTeleopRotorPoints() {
    return teleopRotorPoints;
  }

  public void setTeleopRotorPoints(Integer teleopRotorPoints) {
    this.teleopRotorPoints = teleopRotorPoints;
  }


  public MatchScoreBreakdown2017Alliance teleopTakeoffPoints(Integer teleopTakeoffPoints) {
    this.teleopTakeoffPoints = teleopTakeoffPoints;
    return this;
  }

  /**
   * Get teleopTakeoffPoints
   * @return teleopTakeoffPoints
   */
  @javax.annotation.Nullable
  public Integer getTeleopTakeoffPoints() {
    return teleopTakeoffPoints;
  }

  public void setTeleopTakeoffPoints(Integer teleopTakeoffPoints) {
    this.teleopTakeoffPoints = teleopTakeoffPoints;
  }


  public MatchScoreBreakdown2017Alliance totalPoints(Integer totalPoints) {
    this.totalPoints = totalPoints;
    return this;
  }

  /**
   * Get totalPoints
   * @return totalPoints
   */
  @javax.annotation.Nullable
  public Integer getTotalPoints() {
    return totalPoints;
  }

  public void setTotalPoints(Integer totalPoints) {
    this.totalPoints = totalPoints;
  }


  public MatchScoreBreakdown2017Alliance touchpadFar(String touchpadFar) {
    this.touchpadFar = touchpadFar;
    return this;
  }

  /**
   * Get touchpadFar
   * @return touchpadFar
   */
  @javax.annotation.Nullable
  public String getTouchpadFar() {
    return touchpadFar;
  }

  public void setTouchpadFar(String touchpadFar) {
    this.touchpadFar = touchpadFar;
  }


  public MatchScoreBreakdown2017Alliance touchpadMiddle(String touchpadMiddle) {
    this.touchpadMiddle = touchpadMiddle;
    return this;
  }

  /**
   * Get touchpadMiddle
   * @return touchpadMiddle
   */
  @javax.annotation.Nullable
  public String getTouchpadMiddle() {
    return touchpadMiddle;
  }

  public void setTouchpadMiddle(String touchpadMiddle) {
    this.touchpadMiddle = touchpadMiddle;
  }


  public MatchScoreBreakdown2017Alliance touchpadNear(String touchpadNear) {
    this.touchpadNear = touchpadNear;
    return this;
  }

  /**
   * Get touchpadNear
   * @return touchpadNear
   */
  @javax.annotation.Nullable
  public String getTouchpadNear() {
    return touchpadNear;
  }

  public void setTouchpadNear(String touchpadNear) {
    this.touchpadNear = touchpadNear;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MatchScoreBreakdown2017Alliance matchScoreBreakdown2017Alliance = (MatchScoreBreakdown2017Alliance) o;
    return Objects.equals(this.adjustPoints, matchScoreBreakdown2017Alliance.adjustPoints) &&
        Objects.equals(this.autoFuelHigh, matchScoreBreakdown2017Alliance.autoFuelHigh) &&
        Objects.equals(this.autoFuelLow, matchScoreBreakdown2017Alliance.autoFuelLow) &&
        Objects.equals(this.autoFuelPoints, matchScoreBreakdown2017Alliance.autoFuelPoints) &&
        Objects.equals(this.autoMobilityPoints, matchScoreBreakdown2017Alliance.autoMobilityPoints) &&
        Objects.equals(this.autoPoints, matchScoreBreakdown2017Alliance.autoPoints) &&
        Objects.equals(this.autoRotorPoints, matchScoreBreakdown2017Alliance.autoRotorPoints) &&
        Objects.equals(this.foulCount, matchScoreBreakdown2017Alliance.foulCount) &&
        Objects.equals(this.foulPoints, matchScoreBreakdown2017Alliance.foulPoints) &&
        Objects.equals(this.kPaBonusPoints, matchScoreBreakdown2017Alliance.kPaBonusPoints) &&
        Objects.equals(this.kPaRankingPointAchieved, matchScoreBreakdown2017Alliance.kPaRankingPointAchieved) &&
        Objects.equals(this.robot1Auto, matchScoreBreakdown2017Alliance.robot1Auto) &&
        Objects.equals(this.robot2Auto, matchScoreBreakdown2017Alliance.robot2Auto) &&
        Objects.equals(this.robot3Auto, matchScoreBreakdown2017Alliance.robot3Auto) &&
        Objects.equals(this.rotor1Auto, matchScoreBreakdown2017Alliance.rotor1Auto) &&
        Objects.equals(this.rotor1Engaged, matchScoreBreakdown2017Alliance.rotor1Engaged) &&
        Objects.equals(this.rotor2Auto, matchScoreBreakdown2017Alliance.rotor2Auto) &&
        Objects.equals(this.rotor2Engaged, matchScoreBreakdown2017Alliance.rotor2Engaged) &&
        Objects.equals(this.rotor3Engaged, matchScoreBreakdown2017Alliance.rotor3Engaged) &&
        Objects.equals(this.rotor4Engaged, matchScoreBreakdown2017Alliance.rotor4Engaged) &&
        Objects.equals(this.rotorBonusPoints, matchScoreBreakdown2017Alliance.rotorBonusPoints) &&
        Objects.equals(this.rotorRankingPointAchieved, matchScoreBreakdown2017Alliance.rotorRankingPointAchieved) &&
        Objects.equals(this.techFoulCount, matchScoreBreakdown2017Alliance.techFoulCount) &&
        Objects.equals(this.teleopFuelHigh, matchScoreBreakdown2017Alliance.teleopFuelHigh) &&
        Objects.equals(this.teleopFuelLow, matchScoreBreakdown2017Alliance.teleopFuelLow) &&
        Objects.equals(this.teleopFuelPoints, matchScoreBreakdown2017Alliance.teleopFuelPoints) &&
        Objects.equals(this.teleopPoints, matchScoreBreakdown2017Alliance.teleopPoints) &&
        Objects.equals(this.teleopRotorPoints, matchScoreBreakdown2017Alliance.teleopRotorPoints) &&
        Objects.equals(this.teleopTakeoffPoints, matchScoreBreakdown2017Alliance.teleopTakeoffPoints) &&
        Objects.equals(this.totalPoints, matchScoreBreakdown2017Alliance.totalPoints) &&
        Objects.equals(this.touchpadFar, matchScoreBreakdown2017Alliance.touchpadFar) &&
        Objects.equals(this.touchpadMiddle, matchScoreBreakdown2017Alliance.touchpadMiddle) &&
        Objects.equals(this.touchpadNear, matchScoreBreakdown2017Alliance.touchpadNear);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adjustPoints, autoFuelHigh, autoFuelLow, autoFuelPoints, autoMobilityPoints, autoPoints, autoRotorPoints, foulCount, foulPoints, kPaBonusPoints, kPaRankingPointAchieved, robot1Auto, robot2Auto, robot3Auto, rotor1Auto, rotor1Engaged, rotor2Auto, rotor2Engaged, rotor3Engaged, rotor4Engaged, rotorBonusPoints, rotorRankingPointAchieved, techFoulCount, teleopFuelHigh, teleopFuelLow, teleopFuelPoints, teleopPoints, teleopRotorPoints, teleopTakeoffPoints, totalPoints, touchpadFar, touchpadMiddle, touchpadNear);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatchScoreBreakdown2017Alliance {\n");
    sb.append("    adjustPoints: ").append(toIndentedString(adjustPoints)).append("\n");
    sb.append("    autoFuelHigh: ").append(toIndentedString(autoFuelHigh)).append("\n");
    sb.append("    autoFuelLow: ").append(toIndentedString(autoFuelLow)).append("\n");
    sb.append("    autoFuelPoints: ").append(toIndentedString(autoFuelPoints)).append("\n");
    sb.append("    autoMobilityPoints: ").append(toIndentedString(autoMobilityPoints)).append("\n");
    sb.append("    autoPoints: ").append(toIndentedString(autoPoints)).append("\n");
    sb.append("    autoRotorPoints: ").append(toIndentedString(autoRotorPoints)).append("\n");
    sb.append("    foulCount: ").append(toIndentedString(foulCount)).append("\n");
    sb.append("    foulPoints: ").append(toIndentedString(foulPoints)).append("\n");
    sb.append("    kPaBonusPoints: ").append(toIndentedString(kPaBonusPoints)).append("\n");
    sb.append("    kPaRankingPointAchieved: ").append(toIndentedString(kPaRankingPointAchieved)).append("\n");
    sb.append("    robot1Auto: ").append(toIndentedString(robot1Auto)).append("\n");
    sb.append("    robot2Auto: ").append(toIndentedString(robot2Auto)).append("\n");
    sb.append("    robot3Auto: ").append(toIndentedString(robot3Auto)).append("\n");
    sb.append("    rotor1Auto: ").append(toIndentedString(rotor1Auto)).append("\n");
    sb.append("    rotor1Engaged: ").append(toIndentedString(rotor1Engaged)).append("\n");
    sb.append("    rotor2Auto: ").append(toIndentedString(rotor2Auto)).append("\n");
    sb.append("    rotor2Engaged: ").append(toIndentedString(rotor2Engaged)).append("\n");
    sb.append("    rotor3Engaged: ").append(toIndentedString(rotor3Engaged)).append("\n");
    sb.append("    rotor4Engaged: ").append(toIndentedString(rotor4Engaged)).append("\n");
    sb.append("    rotorBonusPoints: ").append(toIndentedString(rotorBonusPoints)).append("\n");
    sb.append("    rotorRankingPointAchieved: ").append(toIndentedString(rotorRankingPointAchieved)).append("\n");
    sb.append("    techFoulCount: ").append(toIndentedString(techFoulCount)).append("\n");
    sb.append("    teleopFuelHigh: ").append(toIndentedString(teleopFuelHigh)).append("\n");
    sb.append("    teleopFuelLow: ").append(toIndentedString(teleopFuelLow)).append("\n");
    sb.append("    teleopFuelPoints: ").append(toIndentedString(teleopFuelPoints)).append("\n");
    sb.append("    teleopPoints: ").append(toIndentedString(teleopPoints)).append("\n");
    sb.append("    teleopRotorPoints: ").append(toIndentedString(teleopRotorPoints)).append("\n");
    sb.append("    teleopTakeoffPoints: ").append(toIndentedString(teleopTakeoffPoints)).append("\n");
    sb.append("    totalPoints: ").append(toIndentedString(totalPoints)).append("\n");
    sb.append("    touchpadFar: ").append(toIndentedString(touchpadFar)).append("\n");
    sb.append("    touchpadMiddle: ").append(toIndentedString(touchpadMiddle)).append("\n");
    sb.append("    touchpadNear: ").append(toIndentedString(touchpadNear)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adjustPoints");
    openapiFields.add("autoFuelHigh");
    openapiFields.add("autoFuelLow");
    openapiFields.add("autoFuelPoints");
    openapiFields.add("autoMobilityPoints");
    openapiFields.add("autoPoints");
    openapiFields.add("autoRotorPoints");
    openapiFields.add("foulCount");
    openapiFields.add("foulPoints");
    openapiFields.add("kPaBonusPoints");
    openapiFields.add("kPaRankingPointAchieved");
    openapiFields.add("robot1Auto");
    openapiFields.add("robot2Auto");
    openapiFields.add("robot3Auto");
    openapiFields.add("rotor1Auto");
    openapiFields.add("rotor1Engaged");
    openapiFields.add("rotor2Auto");
    openapiFields.add("rotor2Engaged");
    openapiFields.add("rotor3Engaged");
    openapiFields.add("rotor4Engaged");
    openapiFields.add("rotorBonusPoints");
    openapiFields.add("rotorRankingPointAchieved");
    openapiFields.add("techFoulCount");
    openapiFields.add("teleopFuelHigh");
    openapiFields.add("teleopFuelLow");
    openapiFields.add("teleopFuelPoints");
    openapiFields.add("teleopPoints");
    openapiFields.add("teleopRotorPoints");
    openapiFields.add("teleopTakeoffPoints");
    openapiFields.add("totalPoints");
    openapiFields.add("touchpadFar");
    openapiFields.add("touchpadMiddle");
    openapiFields.add("touchpadNear");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MatchScoreBreakdown2017Alliance
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MatchScoreBreakdown2017Alliance.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MatchScoreBreakdown2017Alliance is not found in the empty JSON string", MatchScoreBreakdown2017Alliance.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MatchScoreBreakdown2017Alliance.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MatchScoreBreakdown2017Alliance` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("robot1Auto") != null && !jsonObj.get("robot1Auto").isJsonNull()) && !jsonObj.get("robot1Auto").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `robot1Auto` to be a primitive type in the JSON string but got `%s`", jsonObj.get("robot1Auto").toString()));
      }
      // validate the optional field `robot1Auto`
      if (jsonObj.get("robot1Auto") != null && !jsonObj.get("robot1Auto").isJsonNull()) {
        Robot1AutoEnum.validateJsonElement(jsonObj.get("robot1Auto"));
      }
      if ((jsonObj.get("robot2Auto") != null && !jsonObj.get("robot2Auto").isJsonNull()) && !jsonObj.get("robot2Auto").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `robot2Auto` to be a primitive type in the JSON string but got `%s`", jsonObj.get("robot2Auto").toString()));
      }
      // validate the optional field `robot2Auto`
      if (jsonObj.get("robot2Auto") != null && !jsonObj.get("robot2Auto").isJsonNull()) {
        Robot2AutoEnum.validateJsonElement(jsonObj.get("robot2Auto"));
      }
      if ((jsonObj.get("robot3Auto") != null && !jsonObj.get("robot3Auto").isJsonNull()) && !jsonObj.get("robot3Auto").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `robot3Auto` to be a primitive type in the JSON string but got `%s`", jsonObj.get("robot3Auto").toString()));
      }
      // validate the optional field `robot3Auto`
      if (jsonObj.get("robot3Auto") != null && !jsonObj.get("robot3Auto").isJsonNull()) {
        Robot3AutoEnum.validateJsonElement(jsonObj.get("robot3Auto"));
      }
      if ((jsonObj.get("touchpadFar") != null && !jsonObj.get("touchpadFar").isJsonNull()) && !jsonObj.get("touchpadFar").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `touchpadFar` to be a primitive type in the JSON string but got `%s`", jsonObj.get("touchpadFar").toString()));
      }
      if ((jsonObj.get("touchpadMiddle") != null && !jsonObj.get("touchpadMiddle").isJsonNull()) && !jsonObj.get("touchpadMiddle").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `touchpadMiddle` to be a primitive type in the JSON string but got `%s`", jsonObj.get("touchpadMiddle").toString()));
      }
      if ((jsonObj.get("touchpadNear") != null && !jsonObj.get("touchpadNear").isJsonNull()) && !jsonObj.get("touchpadNear").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `touchpadNear` to be a primitive type in the JSON string but got `%s`", jsonObj.get("touchpadNear").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MatchScoreBreakdown2017Alliance.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MatchScoreBreakdown2017Alliance' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MatchScoreBreakdown2017Alliance> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MatchScoreBreakdown2017Alliance.class));

       return (TypeAdapter<T>) new TypeAdapter<MatchScoreBreakdown2017Alliance>() {
           @Override
           public void write(JsonWriter out, MatchScoreBreakdown2017Alliance value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MatchScoreBreakdown2017Alliance read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MatchScoreBreakdown2017Alliance given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MatchScoreBreakdown2017Alliance
   * @throws IOException if the JSON string is invalid with respect to MatchScoreBreakdown2017Alliance
   */
  public static MatchScoreBreakdown2017Alliance fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MatchScoreBreakdown2017Alliance.class);
  }

  /**
   * Convert an instance of MatchScoreBreakdown2017Alliance to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

