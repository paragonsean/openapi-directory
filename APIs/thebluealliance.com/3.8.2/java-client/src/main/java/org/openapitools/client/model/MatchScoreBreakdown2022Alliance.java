/*
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MatchScoreBreakdown2022Alliance
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:56:47.661723-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MatchScoreBreakdown2022Alliance {
  public static final String SERIALIZED_NAME_ADJUST_POINTS = "adjustPoints";
  @SerializedName(SERIALIZED_NAME_ADJUST_POINTS)
  private Integer adjustPoints;

  public static final String SERIALIZED_NAME_AUTO_CARGO_LOWER_BLUE = "autoCargoLowerBlue";
  @SerializedName(SERIALIZED_NAME_AUTO_CARGO_LOWER_BLUE)
  private Integer autoCargoLowerBlue;

  public static final String SERIALIZED_NAME_AUTO_CARGO_LOWER_FAR = "autoCargoLowerFar";
  @SerializedName(SERIALIZED_NAME_AUTO_CARGO_LOWER_FAR)
  private Integer autoCargoLowerFar;

  public static final String SERIALIZED_NAME_AUTO_CARGO_LOWER_NEAR = "autoCargoLowerNear";
  @SerializedName(SERIALIZED_NAME_AUTO_CARGO_LOWER_NEAR)
  private Integer autoCargoLowerNear;

  public static final String SERIALIZED_NAME_AUTO_CARGO_LOWER_RED = "autoCargoLowerRed";
  @SerializedName(SERIALIZED_NAME_AUTO_CARGO_LOWER_RED)
  private Integer autoCargoLowerRed;

  public static final String SERIALIZED_NAME_AUTO_CARGO_POINTS = "autoCargoPoints";
  @SerializedName(SERIALIZED_NAME_AUTO_CARGO_POINTS)
  private Integer autoCargoPoints;

  public static final String SERIALIZED_NAME_AUTO_CARGO_TOTAL = "autoCargoTotal";
  @SerializedName(SERIALIZED_NAME_AUTO_CARGO_TOTAL)
  private Integer autoCargoTotal;

  public static final String SERIALIZED_NAME_AUTO_CARGO_UPPER_BLUE = "autoCargoUpperBlue";
  @SerializedName(SERIALIZED_NAME_AUTO_CARGO_UPPER_BLUE)
  private Integer autoCargoUpperBlue;

  public static final String SERIALIZED_NAME_AUTO_CARGO_UPPER_FAR = "autoCargoUpperFar";
  @SerializedName(SERIALIZED_NAME_AUTO_CARGO_UPPER_FAR)
  private Integer autoCargoUpperFar;

  public static final String SERIALIZED_NAME_AUTO_CARGO_UPPER_NEAR = "autoCargoUpperNear";
  @SerializedName(SERIALIZED_NAME_AUTO_CARGO_UPPER_NEAR)
  private Integer autoCargoUpperNear;

  public static final String SERIALIZED_NAME_AUTO_CARGO_UPPER_RED = "autoCargoUpperRed";
  @SerializedName(SERIALIZED_NAME_AUTO_CARGO_UPPER_RED)
  private Integer autoCargoUpperRed;

  public static final String SERIALIZED_NAME_AUTO_POINTS = "autoPoints";
  @SerializedName(SERIALIZED_NAME_AUTO_POINTS)
  private Integer autoPoints;

  public static final String SERIALIZED_NAME_AUTO_TAXI_POINTS = "autoTaxiPoints";
  @SerializedName(SERIALIZED_NAME_AUTO_TAXI_POINTS)
  private Integer autoTaxiPoints;

  public static final String SERIALIZED_NAME_CARGO_BONUS_RANKING_POINT = "cargoBonusRankingPoint";
  @SerializedName(SERIALIZED_NAME_CARGO_BONUS_RANKING_POINT)
  private Boolean cargoBonusRankingPoint;

  public static final String SERIALIZED_NAME_ENDGAME_POINTS = "endgamePoints";
  @SerializedName(SERIALIZED_NAME_ENDGAME_POINTS)
  private Integer endgamePoints;

  /**
   * Gets or Sets endgameRobot1
   */
  @JsonAdapter(EndgameRobot1Enum.Adapter.class)
  public enum EndgameRobot1Enum {
    TRAVERSAL("Traversal"),
    
    HIGH("High"),
    
    MID("Mid"),
    
    LOW("Low"),
    
    NONE("None");

    private String value;

    EndgameRobot1Enum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EndgameRobot1Enum fromValue(String value) {
      for (EndgameRobot1Enum b : EndgameRobot1Enum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EndgameRobot1Enum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EndgameRobot1Enum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EndgameRobot1Enum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EndgameRobot1Enum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      EndgameRobot1Enum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ENDGAME_ROBOT1 = "endgameRobot1";
  @SerializedName(SERIALIZED_NAME_ENDGAME_ROBOT1)
  private EndgameRobot1Enum endgameRobot1;

  /**
   * Gets or Sets endgameRobot2
   */
  @JsonAdapter(EndgameRobot2Enum.Adapter.class)
  public enum EndgameRobot2Enum {
    TRAVERSAL("Traversal"),
    
    HIGH("High"),
    
    MID("Mid"),
    
    LOW("Low"),
    
    NONE("None");

    private String value;

    EndgameRobot2Enum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EndgameRobot2Enum fromValue(String value) {
      for (EndgameRobot2Enum b : EndgameRobot2Enum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EndgameRobot2Enum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EndgameRobot2Enum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EndgameRobot2Enum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EndgameRobot2Enum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      EndgameRobot2Enum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ENDGAME_ROBOT2 = "endgameRobot2";
  @SerializedName(SERIALIZED_NAME_ENDGAME_ROBOT2)
  private EndgameRobot2Enum endgameRobot2;

  /**
   * Gets or Sets endgameRobot3
   */
  @JsonAdapter(EndgameRobot3Enum.Adapter.class)
  public enum EndgameRobot3Enum {
    TRAVERSAL("Traversal"),
    
    HIGH("High"),
    
    MID("Mid"),
    
    LOW("Low"),
    
    NONE("None");

    private String value;

    EndgameRobot3Enum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EndgameRobot3Enum fromValue(String value) {
      for (EndgameRobot3Enum b : EndgameRobot3Enum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<EndgameRobot3Enum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EndgameRobot3Enum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EndgameRobot3Enum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EndgameRobot3Enum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      EndgameRobot3Enum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ENDGAME_ROBOT3 = "endgameRobot3";
  @SerializedName(SERIALIZED_NAME_ENDGAME_ROBOT3)
  private EndgameRobot3Enum endgameRobot3;

  public static final String SERIALIZED_NAME_FOUL_COUNT = "foulCount";
  @SerializedName(SERIALIZED_NAME_FOUL_COUNT)
  private Integer foulCount;

  public static final String SERIALIZED_NAME_FOUL_POINTS = "foulPoints";
  @SerializedName(SERIALIZED_NAME_FOUL_POINTS)
  private Integer foulPoints;

  public static final String SERIALIZED_NAME_HANGAR_BONUS_RANKING_POINT = "hangarBonusRankingPoint";
  @SerializedName(SERIALIZED_NAME_HANGAR_BONUS_RANKING_POINT)
  private Boolean hangarBonusRankingPoint;

  public static final String SERIALIZED_NAME_MATCH_CARGO_TOTAL = "matchCargoTotal";
  @SerializedName(SERIALIZED_NAME_MATCH_CARGO_TOTAL)
  private Integer matchCargoTotal;

  public static final String SERIALIZED_NAME_QUINTET_ACHIEVED = "quintetAchieved";
  @SerializedName(SERIALIZED_NAME_QUINTET_ACHIEVED)
  private Boolean quintetAchieved;

  public static final String SERIALIZED_NAME_RP = "rp";
  @SerializedName(SERIALIZED_NAME_RP)
  private Integer rp;

  /**
   * Gets or Sets taxiRobot1
   */
  @JsonAdapter(TaxiRobot1Enum.Adapter.class)
  public enum TaxiRobot1Enum {
    TRUE("true"),
    
    FALSE("false");

    private String value;

    TaxiRobot1Enum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TaxiRobot1Enum fromValue(String value) {
      for (TaxiRobot1Enum b : TaxiRobot1Enum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TaxiRobot1Enum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TaxiRobot1Enum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TaxiRobot1Enum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TaxiRobot1Enum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TaxiRobot1Enum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TAXI_ROBOT1 = "taxiRobot1";
  @SerializedName(SERIALIZED_NAME_TAXI_ROBOT1)
  private TaxiRobot1Enum taxiRobot1;

  /**
   * Gets or Sets taxiRobot2
   */
  @JsonAdapter(TaxiRobot2Enum.Adapter.class)
  public enum TaxiRobot2Enum {
    TRUE("true"),
    
    FALSE("false");

    private String value;

    TaxiRobot2Enum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TaxiRobot2Enum fromValue(String value) {
      for (TaxiRobot2Enum b : TaxiRobot2Enum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TaxiRobot2Enum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TaxiRobot2Enum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TaxiRobot2Enum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TaxiRobot2Enum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TaxiRobot2Enum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TAXI_ROBOT2 = "taxiRobot2";
  @SerializedName(SERIALIZED_NAME_TAXI_ROBOT2)
  private TaxiRobot2Enum taxiRobot2;

  /**
   * Gets or Sets taxiRobot3
   */
  @JsonAdapter(TaxiRobot3Enum.Adapter.class)
  public enum TaxiRobot3Enum {
    TRUE("true"),
    
    FALSE("false");

    private String value;

    TaxiRobot3Enum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TaxiRobot3Enum fromValue(String value) {
      for (TaxiRobot3Enum b : TaxiRobot3Enum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<TaxiRobot3Enum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TaxiRobot3Enum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TaxiRobot3Enum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TaxiRobot3Enum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      TaxiRobot3Enum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_TAXI_ROBOT3 = "taxiRobot3";
  @SerializedName(SERIALIZED_NAME_TAXI_ROBOT3)
  private TaxiRobot3Enum taxiRobot3;

  public static final String SERIALIZED_NAME_TECH_FOUL_COUNT = "techFoulCount";
  @SerializedName(SERIALIZED_NAME_TECH_FOUL_COUNT)
  private Integer techFoulCount;

  public static final String SERIALIZED_NAME_TELEOP_CARGO_LOWER_BLUE = "teleopCargoLowerBlue";
  @SerializedName(SERIALIZED_NAME_TELEOP_CARGO_LOWER_BLUE)
  private Integer teleopCargoLowerBlue;

  public static final String SERIALIZED_NAME_TELEOP_CARGO_LOWER_FAR = "teleopCargoLowerFar";
  @SerializedName(SERIALIZED_NAME_TELEOP_CARGO_LOWER_FAR)
  private Integer teleopCargoLowerFar;

  public static final String SERIALIZED_NAME_TELEOP_CARGO_LOWER_NEAR = "teleopCargoLowerNear";
  @SerializedName(SERIALIZED_NAME_TELEOP_CARGO_LOWER_NEAR)
  private Integer teleopCargoLowerNear;

  public static final String SERIALIZED_NAME_TELEOP_CARGO_LOWER_RED = "teleopCargoLowerRed";
  @SerializedName(SERIALIZED_NAME_TELEOP_CARGO_LOWER_RED)
  private Integer teleopCargoLowerRed;

  public static final String SERIALIZED_NAME_TELEOP_CARGO_POINTS = "teleopCargoPoints";
  @SerializedName(SERIALIZED_NAME_TELEOP_CARGO_POINTS)
  private Integer teleopCargoPoints;

  public static final String SERIALIZED_NAME_TELEOP_CARGO_TOTAL = "teleopCargoTotal";
  @SerializedName(SERIALIZED_NAME_TELEOP_CARGO_TOTAL)
  private Integer teleopCargoTotal;

  public static final String SERIALIZED_NAME_TELEOP_CARGO_UPPER_BLUE = "teleopCargoUpperBlue";
  @SerializedName(SERIALIZED_NAME_TELEOP_CARGO_UPPER_BLUE)
  private Integer teleopCargoUpperBlue;

  public static final String SERIALIZED_NAME_TELEOP_CARGO_UPPER_FAR = "teleopCargoUpperFar";
  @SerializedName(SERIALIZED_NAME_TELEOP_CARGO_UPPER_FAR)
  private Integer teleopCargoUpperFar;

  public static final String SERIALIZED_NAME_TELEOP_CARGO_UPPER_NEAR = "teleopCargoUpperNear";
  @SerializedName(SERIALIZED_NAME_TELEOP_CARGO_UPPER_NEAR)
  private Integer teleopCargoUpperNear;

  public static final String SERIALIZED_NAME_TELEOP_CARGO_UPPER_RED = "teleopCargoUpperRed";
  @SerializedName(SERIALIZED_NAME_TELEOP_CARGO_UPPER_RED)
  private Integer teleopCargoUpperRed;

  public static final String SERIALIZED_NAME_TELEOP_POINTS = "teleopPoints";
  @SerializedName(SERIALIZED_NAME_TELEOP_POINTS)
  private Integer teleopPoints;

  public static final String SERIALIZED_NAME_TOTAL_POINTS = "totalPoints";
  @SerializedName(SERIALIZED_NAME_TOTAL_POINTS)
  private Integer totalPoints;

  public MatchScoreBreakdown2022Alliance() {
  }

  public MatchScoreBreakdown2022Alliance adjustPoints(Integer adjustPoints) {
    this.adjustPoints = adjustPoints;
    return this;
  }

  /**
   * Get adjustPoints
   * @return adjustPoints
   */
  @javax.annotation.Nullable
  public Integer getAdjustPoints() {
    return adjustPoints;
  }

  public void setAdjustPoints(Integer adjustPoints) {
    this.adjustPoints = adjustPoints;
  }


  public MatchScoreBreakdown2022Alliance autoCargoLowerBlue(Integer autoCargoLowerBlue) {
    this.autoCargoLowerBlue = autoCargoLowerBlue;
    return this;
  }

  /**
   * Get autoCargoLowerBlue
   * @return autoCargoLowerBlue
   */
  @javax.annotation.Nullable
  public Integer getAutoCargoLowerBlue() {
    return autoCargoLowerBlue;
  }

  public void setAutoCargoLowerBlue(Integer autoCargoLowerBlue) {
    this.autoCargoLowerBlue = autoCargoLowerBlue;
  }


  public MatchScoreBreakdown2022Alliance autoCargoLowerFar(Integer autoCargoLowerFar) {
    this.autoCargoLowerFar = autoCargoLowerFar;
    return this;
  }

  /**
   * Get autoCargoLowerFar
   * @return autoCargoLowerFar
   */
  @javax.annotation.Nullable
  public Integer getAutoCargoLowerFar() {
    return autoCargoLowerFar;
  }

  public void setAutoCargoLowerFar(Integer autoCargoLowerFar) {
    this.autoCargoLowerFar = autoCargoLowerFar;
  }


  public MatchScoreBreakdown2022Alliance autoCargoLowerNear(Integer autoCargoLowerNear) {
    this.autoCargoLowerNear = autoCargoLowerNear;
    return this;
  }

  /**
   * Get autoCargoLowerNear
   * @return autoCargoLowerNear
   */
  @javax.annotation.Nullable
  public Integer getAutoCargoLowerNear() {
    return autoCargoLowerNear;
  }

  public void setAutoCargoLowerNear(Integer autoCargoLowerNear) {
    this.autoCargoLowerNear = autoCargoLowerNear;
  }


  public MatchScoreBreakdown2022Alliance autoCargoLowerRed(Integer autoCargoLowerRed) {
    this.autoCargoLowerRed = autoCargoLowerRed;
    return this;
  }

  /**
   * Get autoCargoLowerRed
   * @return autoCargoLowerRed
   */
  @javax.annotation.Nullable
  public Integer getAutoCargoLowerRed() {
    return autoCargoLowerRed;
  }

  public void setAutoCargoLowerRed(Integer autoCargoLowerRed) {
    this.autoCargoLowerRed = autoCargoLowerRed;
  }


  public MatchScoreBreakdown2022Alliance autoCargoPoints(Integer autoCargoPoints) {
    this.autoCargoPoints = autoCargoPoints;
    return this;
  }

  /**
   * Get autoCargoPoints
   * @return autoCargoPoints
   */
  @javax.annotation.Nullable
  public Integer getAutoCargoPoints() {
    return autoCargoPoints;
  }

  public void setAutoCargoPoints(Integer autoCargoPoints) {
    this.autoCargoPoints = autoCargoPoints;
  }


  public MatchScoreBreakdown2022Alliance autoCargoTotal(Integer autoCargoTotal) {
    this.autoCargoTotal = autoCargoTotal;
    return this;
  }

  /**
   * Get autoCargoTotal
   * @return autoCargoTotal
   */
  @javax.annotation.Nullable
  public Integer getAutoCargoTotal() {
    return autoCargoTotal;
  }

  public void setAutoCargoTotal(Integer autoCargoTotal) {
    this.autoCargoTotal = autoCargoTotal;
  }


  public MatchScoreBreakdown2022Alliance autoCargoUpperBlue(Integer autoCargoUpperBlue) {
    this.autoCargoUpperBlue = autoCargoUpperBlue;
    return this;
  }

  /**
   * Get autoCargoUpperBlue
   * @return autoCargoUpperBlue
   */
  @javax.annotation.Nullable
  public Integer getAutoCargoUpperBlue() {
    return autoCargoUpperBlue;
  }

  public void setAutoCargoUpperBlue(Integer autoCargoUpperBlue) {
    this.autoCargoUpperBlue = autoCargoUpperBlue;
  }


  public MatchScoreBreakdown2022Alliance autoCargoUpperFar(Integer autoCargoUpperFar) {
    this.autoCargoUpperFar = autoCargoUpperFar;
    return this;
  }

  /**
   * Get autoCargoUpperFar
   * @return autoCargoUpperFar
   */
  @javax.annotation.Nullable
  public Integer getAutoCargoUpperFar() {
    return autoCargoUpperFar;
  }

  public void setAutoCargoUpperFar(Integer autoCargoUpperFar) {
    this.autoCargoUpperFar = autoCargoUpperFar;
  }


  public MatchScoreBreakdown2022Alliance autoCargoUpperNear(Integer autoCargoUpperNear) {
    this.autoCargoUpperNear = autoCargoUpperNear;
    return this;
  }

  /**
   * Get autoCargoUpperNear
   * @return autoCargoUpperNear
   */
  @javax.annotation.Nullable
  public Integer getAutoCargoUpperNear() {
    return autoCargoUpperNear;
  }

  public void setAutoCargoUpperNear(Integer autoCargoUpperNear) {
    this.autoCargoUpperNear = autoCargoUpperNear;
  }


  public MatchScoreBreakdown2022Alliance autoCargoUpperRed(Integer autoCargoUpperRed) {
    this.autoCargoUpperRed = autoCargoUpperRed;
    return this;
  }

  /**
   * Get autoCargoUpperRed
   * @return autoCargoUpperRed
   */
  @javax.annotation.Nullable
  public Integer getAutoCargoUpperRed() {
    return autoCargoUpperRed;
  }

  public void setAutoCargoUpperRed(Integer autoCargoUpperRed) {
    this.autoCargoUpperRed = autoCargoUpperRed;
  }


  public MatchScoreBreakdown2022Alliance autoPoints(Integer autoPoints) {
    this.autoPoints = autoPoints;
    return this;
  }

  /**
   * Get autoPoints
   * @return autoPoints
   */
  @javax.annotation.Nullable
  public Integer getAutoPoints() {
    return autoPoints;
  }

  public void setAutoPoints(Integer autoPoints) {
    this.autoPoints = autoPoints;
  }


  public MatchScoreBreakdown2022Alliance autoTaxiPoints(Integer autoTaxiPoints) {
    this.autoTaxiPoints = autoTaxiPoints;
    return this;
  }

  /**
   * Get autoTaxiPoints
   * @return autoTaxiPoints
   */
  @javax.annotation.Nullable
  public Integer getAutoTaxiPoints() {
    return autoTaxiPoints;
  }

  public void setAutoTaxiPoints(Integer autoTaxiPoints) {
    this.autoTaxiPoints = autoTaxiPoints;
  }


  public MatchScoreBreakdown2022Alliance cargoBonusRankingPoint(Boolean cargoBonusRankingPoint) {
    this.cargoBonusRankingPoint = cargoBonusRankingPoint;
    return this;
  }

  /**
   * Get cargoBonusRankingPoint
   * @return cargoBonusRankingPoint
   */
  @javax.annotation.Nullable
  public Boolean getCargoBonusRankingPoint() {
    return cargoBonusRankingPoint;
  }

  public void setCargoBonusRankingPoint(Boolean cargoBonusRankingPoint) {
    this.cargoBonusRankingPoint = cargoBonusRankingPoint;
  }


  public MatchScoreBreakdown2022Alliance endgamePoints(Integer endgamePoints) {
    this.endgamePoints = endgamePoints;
    return this;
  }

  /**
   * Get endgamePoints
   * @return endgamePoints
   */
  @javax.annotation.Nullable
  public Integer getEndgamePoints() {
    return endgamePoints;
  }

  public void setEndgamePoints(Integer endgamePoints) {
    this.endgamePoints = endgamePoints;
  }


  public MatchScoreBreakdown2022Alliance endgameRobot1(EndgameRobot1Enum endgameRobot1) {
    this.endgameRobot1 = endgameRobot1;
    return this;
  }

  /**
   * Get endgameRobot1
   * @return endgameRobot1
   */
  @javax.annotation.Nullable
  public EndgameRobot1Enum getEndgameRobot1() {
    return endgameRobot1;
  }

  public void setEndgameRobot1(EndgameRobot1Enum endgameRobot1) {
    this.endgameRobot1 = endgameRobot1;
  }


  public MatchScoreBreakdown2022Alliance endgameRobot2(EndgameRobot2Enum endgameRobot2) {
    this.endgameRobot2 = endgameRobot2;
    return this;
  }

  /**
   * Get endgameRobot2
   * @return endgameRobot2
   */
  @javax.annotation.Nullable
  public EndgameRobot2Enum getEndgameRobot2() {
    return endgameRobot2;
  }

  public void setEndgameRobot2(EndgameRobot2Enum endgameRobot2) {
    this.endgameRobot2 = endgameRobot2;
  }


  public MatchScoreBreakdown2022Alliance endgameRobot3(EndgameRobot3Enum endgameRobot3) {
    this.endgameRobot3 = endgameRobot3;
    return this;
  }

  /**
   * Get endgameRobot3
   * @return endgameRobot3
   */
  @javax.annotation.Nullable
  public EndgameRobot3Enum getEndgameRobot3() {
    return endgameRobot3;
  }

  public void setEndgameRobot3(EndgameRobot3Enum endgameRobot3) {
    this.endgameRobot3 = endgameRobot3;
  }


  public MatchScoreBreakdown2022Alliance foulCount(Integer foulCount) {
    this.foulCount = foulCount;
    return this;
  }

  /**
   * Get foulCount
   * @return foulCount
   */
  @javax.annotation.Nullable
  public Integer getFoulCount() {
    return foulCount;
  }

  public void setFoulCount(Integer foulCount) {
    this.foulCount = foulCount;
  }


  public MatchScoreBreakdown2022Alliance foulPoints(Integer foulPoints) {
    this.foulPoints = foulPoints;
    return this;
  }

  /**
   * Get foulPoints
   * @return foulPoints
   */
  @javax.annotation.Nullable
  public Integer getFoulPoints() {
    return foulPoints;
  }

  public void setFoulPoints(Integer foulPoints) {
    this.foulPoints = foulPoints;
  }


  public MatchScoreBreakdown2022Alliance hangarBonusRankingPoint(Boolean hangarBonusRankingPoint) {
    this.hangarBonusRankingPoint = hangarBonusRankingPoint;
    return this;
  }

  /**
   * Get hangarBonusRankingPoint
   * @return hangarBonusRankingPoint
   */
  @javax.annotation.Nullable
  public Boolean getHangarBonusRankingPoint() {
    return hangarBonusRankingPoint;
  }

  public void setHangarBonusRankingPoint(Boolean hangarBonusRankingPoint) {
    this.hangarBonusRankingPoint = hangarBonusRankingPoint;
  }


  public MatchScoreBreakdown2022Alliance matchCargoTotal(Integer matchCargoTotal) {
    this.matchCargoTotal = matchCargoTotal;
    return this;
  }

  /**
   * Get matchCargoTotal
   * @return matchCargoTotal
   */
  @javax.annotation.Nullable
  public Integer getMatchCargoTotal() {
    return matchCargoTotal;
  }

  public void setMatchCargoTotal(Integer matchCargoTotal) {
    this.matchCargoTotal = matchCargoTotal;
  }


  public MatchScoreBreakdown2022Alliance quintetAchieved(Boolean quintetAchieved) {
    this.quintetAchieved = quintetAchieved;
    return this;
  }

  /**
   * Get quintetAchieved
   * @return quintetAchieved
   */
  @javax.annotation.Nullable
  public Boolean getQuintetAchieved() {
    return quintetAchieved;
  }

  public void setQuintetAchieved(Boolean quintetAchieved) {
    this.quintetAchieved = quintetAchieved;
  }


  public MatchScoreBreakdown2022Alliance rp(Integer rp) {
    this.rp = rp;
    return this;
  }

  /**
   * Get rp
   * @return rp
   */
  @javax.annotation.Nullable
  public Integer getRp() {
    return rp;
  }

  public void setRp(Integer rp) {
    this.rp = rp;
  }


  public MatchScoreBreakdown2022Alliance taxiRobot1(TaxiRobot1Enum taxiRobot1) {
    this.taxiRobot1 = taxiRobot1;
    return this;
  }

  /**
   * Get taxiRobot1
   * @return taxiRobot1
   */
  @javax.annotation.Nullable
  public TaxiRobot1Enum getTaxiRobot1() {
    return taxiRobot1;
  }

  public void setTaxiRobot1(TaxiRobot1Enum taxiRobot1) {
    this.taxiRobot1 = taxiRobot1;
  }


  public MatchScoreBreakdown2022Alliance taxiRobot2(TaxiRobot2Enum taxiRobot2) {
    this.taxiRobot2 = taxiRobot2;
    return this;
  }

  /**
   * Get taxiRobot2
   * @return taxiRobot2
   */
  @javax.annotation.Nullable
  public TaxiRobot2Enum getTaxiRobot2() {
    return taxiRobot2;
  }

  public void setTaxiRobot2(TaxiRobot2Enum taxiRobot2) {
    this.taxiRobot2 = taxiRobot2;
  }


  public MatchScoreBreakdown2022Alliance taxiRobot3(TaxiRobot3Enum taxiRobot3) {
    this.taxiRobot3 = taxiRobot3;
    return this;
  }

  /**
   * Get taxiRobot3
   * @return taxiRobot3
   */
  @javax.annotation.Nullable
  public TaxiRobot3Enum getTaxiRobot3() {
    return taxiRobot3;
  }

  public void setTaxiRobot3(TaxiRobot3Enum taxiRobot3) {
    this.taxiRobot3 = taxiRobot3;
  }


  public MatchScoreBreakdown2022Alliance techFoulCount(Integer techFoulCount) {
    this.techFoulCount = techFoulCount;
    return this;
  }

  /**
   * Get techFoulCount
   * @return techFoulCount
   */
  @javax.annotation.Nullable
  public Integer getTechFoulCount() {
    return techFoulCount;
  }

  public void setTechFoulCount(Integer techFoulCount) {
    this.techFoulCount = techFoulCount;
  }


  public MatchScoreBreakdown2022Alliance teleopCargoLowerBlue(Integer teleopCargoLowerBlue) {
    this.teleopCargoLowerBlue = teleopCargoLowerBlue;
    return this;
  }

  /**
   * Get teleopCargoLowerBlue
   * @return teleopCargoLowerBlue
   */
  @javax.annotation.Nullable
  public Integer getTeleopCargoLowerBlue() {
    return teleopCargoLowerBlue;
  }

  public void setTeleopCargoLowerBlue(Integer teleopCargoLowerBlue) {
    this.teleopCargoLowerBlue = teleopCargoLowerBlue;
  }


  public MatchScoreBreakdown2022Alliance teleopCargoLowerFar(Integer teleopCargoLowerFar) {
    this.teleopCargoLowerFar = teleopCargoLowerFar;
    return this;
  }

  /**
   * Get teleopCargoLowerFar
   * @return teleopCargoLowerFar
   */
  @javax.annotation.Nullable
  public Integer getTeleopCargoLowerFar() {
    return teleopCargoLowerFar;
  }

  public void setTeleopCargoLowerFar(Integer teleopCargoLowerFar) {
    this.teleopCargoLowerFar = teleopCargoLowerFar;
  }


  public MatchScoreBreakdown2022Alliance teleopCargoLowerNear(Integer teleopCargoLowerNear) {
    this.teleopCargoLowerNear = teleopCargoLowerNear;
    return this;
  }

  /**
   * Get teleopCargoLowerNear
   * @return teleopCargoLowerNear
   */
  @javax.annotation.Nullable
  public Integer getTeleopCargoLowerNear() {
    return teleopCargoLowerNear;
  }

  public void setTeleopCargoLowerNear(Integer teleopCargoLowerNear) {
    this.teleopCargoLowerNear = teleopCargoLowerNear;
  }


  public MatchScoreBreakdown2022Alliance teleopCargoLowerRed(Integer teleopCargoLowerRed) {
    this.teleopCargoLowerRed = teleopCargoLowerRed;
    return this;
  }

  /**
   * Get teleopCargoLowerRed
   * @return teleopCargoLowerRed
   */
  @javax.annotation.Nullable
  public Integer getTeleopCargoLowerRed() {
    return teleopCargoLowerRed;
  }

  public void setTeleopCargoLowerRed(Integer teleopCargoLowerRed) {
    this.teleopCargoLowerRed = teleopCargoLowerRed;
  }


  public MatchScoreBreakdown2022Alliance teleopCargoPoints(Integer teleopCargoPoints) {
    this.teleopCargoPoints = teleopCargoPoints;
    return this;
  }

  /**
   * Get teleopCargoPoints
   * @return teleopCargoPoints
   */
  @javax.annotation.Nullable
  public Integer getTeleopCargoPoints() {
    return teleopCargoPoints;
  }

  public void setTeleopCargoPoints(Integer teleopCargoPoints) {
    this.teleopCargoPoints = teleopCargoPoints;
  }


  public MatchScoreBreakdown2022Alliance teleopCargoTotal(Integer teleopCargoTotal) {
    this.teleopCargoTotal = teleopCargoTotal;
    return this;
  }

  /**
   * Get teleopCargoTotal
   * @return teleopCargoTotal
   */
  @javax.annotation.Nullable
  public Integer getTeleopCargoTotal() {
    return teleopCargoTotal;
  }

  public void setTeleopCargoTotal(Integer teleopCargoTotal) {
    this.teleopCargoTotal = teleopCargoTotal;
  }


  public MatchScoreBreakdown2022Alliance teleopCargoUpperBlue(Integer teleopCargoUpperBlue) {
    this.teleopCargoUpperBlue = teleopCargoUpperBlue;
    return this;
  }

  /**
   * Get teleopCargoUpperBlue
   * @return teleopCargoUpperBlue
   */
  @javax.annotation.Nullable
  public Integer getTeleopCargoUpperBlue() {
    return teleopCargoUpperBlue;
  }

  public void setTeleopCargoUpperBlue(Integer teleopCargoUpperBlue) {
    this.teleopCargoUpperBlue = teleopCargoUpperBlue;
  }


  public MatchScoreBreakdown2022Alliance teleopCargoUpperFar(Integer teleopCargoUpperFar) {
    this.teleopCargoUpperFar = teleopCargoUpperFar;
    return this;
  }

  /**
   * Get teleopCargoUpperFar
   * @return teleopCargoUpperFar
   */
  @javax.annotation.Nullable
  public Integer getTeleopCargoUpperFar() {
    return teleopCargoUpperFar;
  }

  public void setTeleopCargoUpperFar(Integer teleopCargoUpperFar) {
    this.teleopCargoUpperFar = teleopCargoUpperFar;
  }


  public MatchScoreBreakdown2022Alliance teleopCargoUpperNear(Integer teleopCargoUpperNear) {
    this.teleopCargoUpperNear = teleopCargoUpperNear;
    return this;
  }

  /**
   * Get teleopCargoUpperNear
   * @return teleopCargoUpperNear
   */
  @javax.annotation.Nullable
  public Integer getTeleopCargoUpperNear() {
    return teleopCargoUpperNear;
  }

  public void setTeleopCargoUpperNear(Integer teleopCargoUpperNear) {
    this.teleopCargoUpperNear = teleopCargoUpperNear;
  }


  public MatchScoreBreakdown2022Alliance teleopCargoUpperRed(Integer teleopCargoUpperRed) {
    this.teleopCargoUpperRed = teleopCargoUpperRed;
    return this;
  }

  /**
   * Get teleopCargoUpperRed
   * @return teleopCargoUpperRed
   */
  @javax.annotation.Nullable
  public Integer getTeleopCargoUpperRed() {
    return teleopCargoUpperRed;
  }

  public void setTeleopCargoUpperRed(Integer teleopCargoUpperRed) {
    this.teleopCargoUpperRed = teleopCargoUpperRed;
  }


  public MatchScoreBreakdown2022Alliance teleopPoints(Integer teleopPoints) {
    this.teleopPoints = teleopPoints;
    return this;
  }

  /**
   * Get teleopPoints
   * @return teleopPoints
   */
  @javax.annotation.Nullable
  public Integer getTeleopPoints() {
    return teleopPoints;
  }

  public void setTeleopPoints(Integer teleopPoints) {
    this.teleopPoints = teleopPoints;
  }


  public MatchScoreBreakdown2022Alliance totalPoints(Integer totalPoints) {
    this.totalPoints = totalPoints;
    return this;
  }

  /**
   * Get totalPoints
   * @return totalPoints
   */
  @javax.annotation.Nullable
  public Integer getTotalPoints() {
    return totalPoints;
  }

  public void setTotalPoints(Integer totalPoints) {
    this.totalPoints = totalPoints;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MatchScoreBreakdown2022Alliance matchScoreBreakdown2022Alliance = (MatchScoreBreakdown2022Alliance) o;
    return Objects.equals(this.adjustPoints, matchScoreBreakdown2022Alliance.adjustPoints) &&
        Objects.equals(this.autoCargoLowerBlue, matchScoreBreakdown2022Alliance.autoCargoLowerBlue) &&
        Objects.equals(this.autoCargoLowerFar, matchScoreBreakdown2022Alliance.autoCargoLowerFar) &&
        Objects.equals(this.autoCargoLowerNear, matchScoreBreakdown2022Alliance.autoCargoLowerNear) &&
        Objects.equals(this.autoCargoLowerRed, matchScoreBreakdown2022Alliance.autoCargoLowerRed) &&
        Objects.equals(this.autoCargoPoints, matchScoreBreakdown2022Alliance.autoCargoPoints) &&
        Objects.equals(this.autoCargoTotal, matchScoreBreakdown2022Alliance.autoCargoTotal) &&
        Objects.equals(this.autoCargoUpperBlue, matchScoreBreakdown2022Alliance.autoCargoUpperBlue) &&
        Objects.equals(this.autoCargoUpperFar, matchScoreBreakdown2022Alliance.autoCargoUpperFar) &&
        Objects.equals(this.autoCargoUpperNear, matchScoreBreakdown2022Alliance.autoCargoUpperNear) &&
        Objects.equals(this.autoCargoUpperRed, matchScoreBreakdown2022Alliance.autoCargoUpperRed) &&
        Objects.equals(this.autoPoints, matchScoreBreakdown2022Alliance.autoPoints) &&
        Objects.equals(this.autoTaxiPoints, matchScoreBreakdown2022Alliance.autoTaxiPoints) &&
        Objects.equals(this.cargoBonusRankingPoint, matchScoreBreakdown2022Alliance.cargoBonusRankingPoint) &&
        Objects.equals(this.endgamePoints, matchScoreBreakdown2022Alliance.endgamePoints) &&
        Objects.equals(this.endgameRobot1, matchScoreBreakdown2022Alliance.endgameRobot1) &&
        Objects.equals(this.endgameRobot2, matchScoreBreakdown2022Alliance.endgameRobot2) &&
        Objects.equals(this.endgameRobot3, matchScoreBreakdown2022Alliance.endgameRobot3) &&
        Objects.equals(this.foulCount, matchScoreBreakdown2022Alliance.foulCount) &&
        Objects.equals(this.foulPoints, matchScoreBreakdown2022Alliance.foulPoints) &&
        Objects.equals(this.hangarBonusRankingPoint, matchScoreBreakdown2022Alliance.hangarBonusRankingPoint) &&
        Objects.equals(this.matchCargoTotal, matchScoreBreakdown2022Alliance.matchCargoTotal) &&
        Objects.equals(this.quintetAchieved, matchScoreBreakdown2022Alliance.quintetAchieved) &&
        Objects.equals(this.rp, matchScoreBreakdown2022Alliance.rp) &&
        Objects.equals(this.taxiRobot1, matchScoreBreakdown2022Alliance.taxiRobot1) &&
        Objects.equals(this.taxiRobot2, matchScoreBreakdown2022Alliance.taxiRobot2) &&
        Objects.equals(this.taxiRobot3, matchScoreBreakdown2022Alliance.taxiRobot3) &&
        Objects.equals(this.techFoulCount, matchScoreBreakdown2022Alliance.techFoulCount) &&
        Objects.equals(this.teleopCargoLowerBlue, matchScoreBreakdown2022Alliance.teleopCargoLowerBlue) &&
        Objects.equals(this.teleopCargoLowerFar, matchScoreBreakdown2022Alliance.teleopCargoLowerFar) &&
        Objects.equals(this.teleopCargoLowerNear, matchScoreBreakdown2022Alliance.teleopCargoLowerNear) &&
        Objects.equals(this.teleopCargoLowerRed, matchScoreBreakdown2022Alliance.teleopCargoLowerRed) &&
        Objects.equals(this.teleopCargoPoints, matchScoreBreakdown2022Alliance.teleopCargoPoints) &&
        Objects.equals(this.teleopCargoTotal, matchScoreBreakdown2022Alliance.teleopCargoTotal) &&
        Objects.equals(this.teleopCargoUpperBlue, matchScoreBreakdown2022Alliance.teleopCargoUpperBlue) &&
        Objects.equals(this.teleopCargoUpperFar, matchScoreBreakdown2022Alliance.teleopCargoUpperFar) &&
        Objects.equals(this.teleopCargoUpperNear, matchScoreBreakdown2022Alliance.teleopCargoUpperNear) &&
        Objects.equals(this.teleopCargoUpperRed, matchScoreBreakdown2022Alliance.teleopCargoUpperRed) &&
        Objects.equals(this.teleopPoints, matchScoreBreakdown2022Alliance.teleopPoints) &&
        Objects.equals(this.totalPoints, matchScoreBreakdown2022Alliance.totalPoints);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adjustPoints, autoCargoLowerBlue, autoCargoLowerFar, autoCargoLowerNear, autoCargoLowerRed, autoCargoPoints, autoCargoTotal, autoCargoUpperBlue, autoCargoUpperFar, autoCargoUpperNear, autoCargoUpperRed, autoPoints, autoTaxiPoints, cargoBonusRankingPoint, endgamePoints, endgameRobot1, endgameRobot2, endgameRobot3, foulCount, foulPoints, hangarBonusRankingPoint, matchCargoTotal, quintetAchieved, rp, taxiRobot1, taxiRobot2, taxiRobot3, techFoulCount, teleopCargoLowerBlue, teleopCargoLowerFar, teleopCargoLowerNear, teleopCargoLowerRed, teleopCargoPoints, teleopCargoTotal, teleopCargoUpperBlue, teleopCargoUpperFar, teleopCargoUpperNear, teleopCargoUpperRed, teleopPoints, totalPoints);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatchScoreBreakdown2022Alliance {\n");
    sb.append("    adjustPoints: ").append(toIndentedString(adjustPoints)).append("\n");
    sb.append("    autoCargoLowerBlue: ").append(toIndentedString(autoCargoLowerBlue)).append("\n");
    sb.append("    autoCargoLowerFar: ").append(toIndentedString(autoCargoLowerFar)).append("\n");
    sb.append("    autoCargoLowerNear: ").append(toIndentedString(autoCargoLowerNear)).append("\n");
    sb.append("    autoCargoLowerRed: ").append(toIndentedString(autoCargoLowerRed)).append("\n");
    sb.append("    autoCargoPoints: ").append(toIndentedString(autoCargoPoints)).append("\n");
    sb.append("    autoCargoTotal: ").append(toIndentedString(autoCargoTotal)).append("\n");
    sb.append("    autoCargoUpperBlue: ").append(toIndentedString(autoCargoUpperBlue)).append("\n");
    sb.append("    autoCargoUpperFar: ").append(toIndentedString(autoCargoUpperFar)).append("\n");
    sb.append("    autoCargoUpperNear: ").append(toIndentedString(autoCargoUpperNear)).append("\n");
    sb.append("    autoCargoUpperRed: ").append(toIndentedString(autoCargoUpperRed)).append("\n");
    sb.append("    autoPoints: ").append(toIndentedString(autoPoints)).append("\n");
    sb.append("    autoTaxiPoints: ").append(toIndentedString(autoTaxiPoints)).append("\n");
    sb.append("    cargoBonusRankingPoint: ").append(toIndentedString(cargoBonusRankingPoint)).append("\n");
    sb.append("    endgamePoints: ").append(toIndentedString(endgamePoints)).append("\n");
    sb.append("    endgameRobot1: ").append(toIndentedString(endgameRobot1)).append("\n");
    sb.append("    endgameRobot2: ").append(toIndentedString(endgameRobot2)).append("\n");
    sb.append("    endgameRobot3: ").append(toIndentedString(endgameRobot3)).append("\n");
    sb.append("    foulCount: ").append(toIndentedString(foulCount)).append("\n");
    sb.append("    foulPoints: ").append(toIndentedString(foulPoints)).append("\n");
    sb.append("    hangarBonusRankingPoint: ").append(toIndentedString(hangarBonusRankingPoint)).append("\n");
    sb.append("    matchCargoTotal: ").append(toIndentedString(matchCargoTotal)).append("\n");
    sb.append("    quintetAchieved: ").append(toIndentedString(quintetAchieved)).append("\n");
    sb.append("    rp: ").append(toIndentedString(rp)).append("\n");
    sb.append("    taxiRobot1: ").append(toIndentedString(taxiRobot1)).append("\n");
    sb.append("    taxiRobot2: ").append(toIndentedString(taxiRobot2)).append("\n");
    sb.append("    taxiRobot3: ").append(toIndentedString(taxiRobot3)).append("\n");
    sb.append("    techFoulCount: ").append(toIndentedString(techFoulCount)).append("\n");
    sb.append("    teleopCargoLowerBlue: ").append(toIndentedString(teleopCargoLowerBlue)).append("\n");
    sb.append("    teleopCargoLowerFar: ").append(toIndentedString(teleopCargoLowerFar)).append("\n");
    sb.append("    teleopCargoLowerNear: ").append(toIndentedString(teleopCargoLowerNear)).append("\n");
    sb.append("    teleopCargoLowerRed: ").append(toIndentedString(teleopCargoLowerRed)).append("\n");
    sb.append("    teleopCargoPoints: ").append(toIndentedString(teleopCargoPoints)).append("\n");
    sb.append("    teleopCargoTotal: ").append(toIndentedString(teleopCargoTotal)).append("\n");
    sb.append("    teleopCargoUpperBlue: ").append(toIndentedString(teleopCargoUpperBlue)).append("\n");
    sb.append("    teleopCargoUpperFar: ").append(toIndentedString(teleopCargoUpperFar)).append("\n");
    sb.append("    teleopCargoUpperNear: ").append(toIndentedString(teleopCargoUpperNear)).append("\n");
    sb.append("    teleopCargoUpperRed: ").append(toIndentedString(teleopCargoUpperRed)).append("\n");
    sb.append("    teleopPoints: ").append(toIndentedString(teleopPoints)).append("\n");
    sb.append("    totalPoints: ").append(toIndentedString(totalPoints)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adjustPoints");
    openapiFields.add("autoCargoLowerBlue");
    openapiFields.add("autoCargoLowerFar");
    openapiFields.add("autoCargoLowerNear");
    openapiFields.add("autoCargoLowerRed");
    openapiFields.add("autoCargoPoints");
    openapiFields.add("autoCargoTotal");
    openapiFields.add("autoCargoUpperBlue");
    openapiFields.add("autoCargoUpperFar");
    openapiFields.add("autoCargoUpperNear");
    openapiFields.add("autoCargoUpperRed");
    openapiFields.add("autoPoints");
    openapiFields.add("autoTaxiPoints");
    openapiFields.add("cargoBonusRankingPoint");
    openapiFields.add("endgamePoints");
    openapiFields.add("endgameRobot1");
    openapiFields.add("endgameRobot2");
    openapiFields.add("endgameRobot3");
    openapiFields.add("foulCount");
    openapiFields.add("foulPoints");
    openapiFields.add("hangarBonusRankingPoint");
    openapiFields.add("matchCargoTotal");
    openapiFields.add("quintetAchieved");
    openapiFields.add("rp");
    openapiFields.add("taxiRobot1");
    openapiFields.add("taxiRobot2");
    openapiFields.add("taxiRobot3");
    openapiFields.add("techFoulCount");
    openapiFields.add("teleopCargoLowerBlue");
    openapiFields.add("teleopCargoLowerFar");
    openapiFields.add("teleopCargoLowerNear");
    openapiFields.add("teleopCargoLowerRed");
    openapiFields.add("teleopCargoPoints");
    openapiFields.add("teleopCargoTotal");
    openapiFields.add("teleopCargoUpperBlue");
    openapiFields.add("teleopCargoUpperFar");
    openapiFields.add("teleopCargoUpperNear");
    openapiFields.add("teleopCargoUpperRed");
    openapiFields.add("teleopPoints");
    openapiFields.add("totalPoints");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MatchScoreBreakdown2022Alliance
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MatchScoreBreakdown2022Alliance.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MatchScoreBreakdown2022Alliance is not found in the empty JSON string", MatchScoreBreakdown2022Alliance.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MatchScoreBreakdown2022Alliance.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MatchScoreBreakdown2022Alliance` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("endgameRobot1") != null && !jsonObj.get("endgameRobot1").isJsonNull()) && !jsonObj.get("endgameRobot1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endgameRobot1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endgameRobot1").toString()));
      }
      // validate the optional field `endgameRobot1`
      if (jsonObj.get("endgameRobot1") != null && !jsonObj.get("endgameRobot1").isJsonNull()) {
        EndgameRobot1Enum.validateJsonElement(jsonObj.get("endgameRobot1"));
      }
      if ((jsonObj.get("endgameRobot2") != null && !jsonObj.get("endgameRobot2").isJsonNull()) && !jsonObj.get("endgameRobot2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endgameRobot2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endgameRobot2").toString()));
      }
      // validate the optional field `endgameRobot2`
      if (jsonObj.get("endgameRobot2") != null && !jsonObj.get("endgameRobot2").isJsonNull()) {
        EndgameRobot2Enum.validateJsonElement(jsonObj.get("endgameRobot2"));
      }
      if ((jsonObj.get("endgameRobot3") != null && !jsonObj.get("endgameRobot3").isJsonNull()) && !jsonObj.get("endgameRobot3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `endgameRobot3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("endgameRobot3").toString()));
      }
      // validate the optional field `endgameRobot3`
      if (jsonObj.get("endgameRobot3") != null && !jsonObj.get("endgameRobot3").isJsonNull()) {
        EndgameRobot3Enum.validateJsonElement(jsonObj.get("endgameRobot3"));
      }
      if ((jsonObj.get("taxiRobot1") != null && !jsonObj.get("taxiRobot1").isJsonNull()) && !jsonObj.get("taxiRobot1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxiRobot1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxiRobot1").toString()));
      }
      // validate the optional field `taxiRobot1`
      if (jsonObj.get("taxiRobot1") != null && !jsonObj.get("taxiRobot1").isJsonNull()) {
        TaxiRobot1Enum.validateJsonElement(jsonObj.get("taxiRobot1"));
      }
      if ((jsonObj.get("taxiRobot2") != null && !jsonObj.get("taxiRobot2").isJsonNull()) && !jsonObj.get("taxiRobot2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxiRobot2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxiRobot2").toString()));
      }
      // validate the optional field `taxiRobot2`
      if (jsonObj.get("taxiRobot2") != null && !jsonObj.get("taxiRobot2").isJsonNull()) {
        TaxiRobot2Enum.validateJsonElement(jsonObj.get("taxiRobot2"));
      }
      if ((jsonObj.get("taxiRobot3") != null && !jsonObj.get("taxiRobot3").isJsonNull()) && !jsonObj.get("taxiRobot3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `taxiRobot3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("taxiRobot3").toString()));
      }
      // validate the optional field `taxiRobot3`
      if (jsonObj.get("taxiRobot3") != null && !jsonObj.get("taxiRobot3").isJsonNull()) {
        TaxiRobot3Enum.validateJsonElement(jsonObj.get("taxiRobot3"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MatchScoreBreakdown2022Alliance.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MatchScoreBreakdown2022Alliance' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MatchScoreBreakdown2022Alliance> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MatchScoreBreakdown2022Alliance.class));

       return (TypeAdapter<T>) new TypeAdapter<MatchScoreBreakdown2022Alliance>() {
           @Override
           public void write(JsonWriter out, MatchScoreBreakdown2022Alliance value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MatchScoreBreakdown2022Alliance read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MatchScoreBreakdown2022Alliance given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MatchScoreBreakdown2022Alliance
   * @throws IOException if the JSON string is invalid with respect to MatchScoreBreakdown2022Alliance
   */
  public static MatchScoreBreakdown2022Alliance fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MatchScoreBreakdown2022Alliance.class);
  }

  /**
   * Convert an instance of MatchScoreBreakdown2022Alliance to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

