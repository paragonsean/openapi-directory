/*
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MatchScoreBreakdown2016Alliance
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T09:56:47.661723-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MatchScoreBreakdown2016Alliance {
  public static final String SERIALIZED_NAME_ADJUST_POINTS = "adjustPoints";
  @SerializedName(SERIALIZED_NAME_ADJUST_POINTS)
  private Integer adjustPoints;

  public static final String SERIALIZED_NAME_AUTO_BOULDER_POINTS = "autoBoulderPoints";
  @SerializedName(SERIALIZED_NAME_AUTO_BOULDER_POINTS)
  private Integer autoBoulderPoints;

  public static final String SERIALIZED_NAME_AUTO_BOULDERS_HIGH = "autoBouldersHigh";
  @SerializedName(SERIALIZED_NAME_AUTO_BOULDERS_HIGH)
  private Integer autoBouldersHigh;

  public static final String SERIALIZED_NAME_AUTO_BOULDERS_LOW = "autoBouldersLow";
  @SerializedName(SERIALIZED_NAME_AUTO_BOULDERS_LOW)
  private Integer autoBouldersLow;

  public static final String SERIALIZED_NAME_AUTO_CROSSING_POINTS = "autoCrossingPoints";
  @SerializedName(SERIALIZED_NAME_AUTO_CROSSING_POINTS)
  private Integer autoCrossingPoints;

  public static final String SERIALIZED_NAME_AUTO_POINTS = "autoPoints";
  @SerializedName(SERIALIZED_NAME_AUTO_POINTS)
  private Integer autoPoints;

  public static final String SERIALIZED_NAME_AUTO_REACH_POINTS = "autoReachPoints";
  @SerializedName(SERIALIZED_NAME_AUTO_REACH_POINTS)
  private Integer autoReachPoints;

  public static final String SERIALIZED_NAME_BREACH_POINTS = "breachPoints";
  @SerializedName(SERIALIZED_NAME_BREACH_POINTS)
  private Integer breachPoints;

  public static final String SERIALIZED_NAME_CAPTURE_POINTS = "capturePoints";
  @SerializedName(SERIALIZED_NAME_CAPTURE_POINTS)
  private Integer capturePoints;

  public static final String SERIALIZED_NAME_FOUL_COUNT = "foulCount";
  @SerializedName(SERIALIZED_NAME_FOUL_COUNT)
  private Integer foulCount;

  public static final String SERIALIZED_NAME_FOUL_POINTS = "foulPoints";
  @SerializedName(SERIALIZED_NAME_FOUL_POINTS)
  private Integer foulPoints;

  public static final String SERIALIZED_NAME_POSITION1CROSSINGS = "position1crossings";
  @SerializedName(SERIALIZED_NAME_POSITION1CROSSINGS)
  private Integer position1crossings;

  public static final String SERIALIZED_NAME_POSITION2 = "position2";
  @SerializedName(SERIALIZED_NAME_POSITION2)
  private String position2;

  public static final String SERIALIZED_NAME_POSITION2CROSSINGS = "position2crossings";
  @SerializedName(SERIALIZED_NAME_POSITION2CROSSINGS)
  private Integer position2crossings;

  public static final String SERIALIZED_NAME_POSITION3 = "position3";
  @SerializedName(SERIALIZED_NAME_POSITION3)
  private String position3;

  public static final String SERIALIZED_NAME_POSITION3CROSSINGS = "position3crossings";
  @SerializedName(SERIALIZED_NAME_POSITION3CROSSINGS)
  private Integer position3crossings;

  public static final String SERIALIZED_NAME_POSITION4 = "position4";
  @SerializedName(SERIALIZED_NAME_POSITION4)
  private String position4;

  public static final String SERIALIZED_NAME_POSITION4CROSSINGS = "position4crossings";
  @SerializedName(SERIALIZED_NAME_POSITION4CROSSINGS)
  private Integer position4crossings;

  public static final String SERIALIZED_NAME_POSITION5 = "position5";
  @SerializedName(SERIALIZED_NAME_POSITION5)
  private String position5;

  public static final String SERIALIZED_NAME_POSITION5CROSSINGS = "position5crossings";
  @SerializedName(SERIALIZED_NAME_POSITION5CROSSINGS)
  private Integer position5crossings;

  /**
   * Gets or Sets robot1Auto
   */
  @JsonAdapter(Robot1AutoEnum.Adapter.class)
  public enum Robot1AutoEnum {
    CROSSED("Crossed"),
    
    REACHED("Reached"),
    
    NONE("None");

    private String value;

    Robot1AutoEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static Robot1AutoEnum fromValue(String value) {
      for (Robot1AutoEnum b : Robot1AutoEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<Robot1AutoEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final Robot1AutoEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public Robot1AutoEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return Robot1AutoEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      Robot1AutoEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ROBOT1_AUTO = "robot1Auto";
  @SerializedName(SERIALIZED_NAME_ROBOT1_AUTO)
  private Robot1AutoEnum robot1Auto;

  /**
   * Gets or Sets robot2Auto
   */
  @JsonAdapter(Robot2AutoEnum.Adapter.class)
  public enum Robot2AutoEnum {
    CROSSED("Crossed"),
    
    REACHED("Reached"),
    
    NONE("None");

    private String value;

    Robot2AutoEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static Robot2AutoEnum fromValue(String value) {
      for (Robot2AutoEnum b : Robot2AutoEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<Robot2AutoEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final Robot2AutoEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public Robot2AutoEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return Robot2AutoEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      Robot2AutoEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ROBOT2_AUTO = "robot2Auto";
  @SerializedName(SERIALIZED_NAME_ROBOT2_AUTO)
  private Robot2AutoEnum robot2Auto;

  /**
   * Gets or Sets robot3Auto
   */
  @JsonAdapter(Robot3AutoEnum.Adapter.class)
  public enum Robot3AutoEnum {
    CROSSED("Crossed"),
    
    REACHED("Reached"),
    
    NONE("None");

    private String value;

    Robot3AutoEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static Robot3AutoEnum fromValue(String value) {
      for (Robot3AutoEnum b : Robot3AutoEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }

    public static class Adapter extends TypeAdapter<Robot3AutoEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final Robot3AutoEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public Robot3AutoEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return Robot3AutoEnum.fromValue(value);
      }
    }

    public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      String value = jsonElement.getAsString();
      Robot3AutoEnum.fromValue(value);
    }
  }

  public static final String SERIALIZED_NAME_ROBOT3_AUTO = "robot3Auto";
  @SerializedName(SERIALIZED_NAME_ROBOT3_AUTO)
  private Robot3AutoEnum robot3Auto;

  public static final String SERIALIZED_NAME_TECH_FOUL_COUNT = "techFoulCount";
  @SerializedName(SERIALIZED_NAME_TECH_FOUL_COUNT)
  private Integer techFoulCount;

  public static final String SERIALIZED_NAME_TELEOP_BOULDER_POINTS = "teleopBoulderPoints";
  @SerializedName(SERIALIZED_NAME_TELEOP_BOULDER_POINTS)
  private Integer teleopBoulderPoints;

  public static final String SERIALIZED_NAME_TELEOP_BOULDERS_HIGH = "teleopBouldersHigh";
  @SerializedName(SERIALIZED_NAME_TELEOP_BOULDERS_HIGH)
  private Integer teleopBouldersHigh;

  public static final String SERIALIZED_NAME_TELEOP_BOULDERS_LOW = "teleopBouldersLow";
  @SerializedName(SERIALIZED_NAME_TELEOP_BOULDERS_LOW)
  private Integer teleopBouldersLow;

  public static final String SERIALIZED_NAME_TELEOP_CHALLENGE_POINTS = "teleopChallengePoints";
  @SerializedName(SERIALIZED_NAME_TELEOP_CHALLENGE_POINTS)
  private Integer teleopChallengePoints;

  public static final String SERIALIZED_NAME_TELEOP_CROSSING_POINTS = "teleopCrossingPoints";
  @SerializedName(SERIALIZED_NAME_TELEOP_CROSSING_POINTS)
  private Integer teleopCrossingPoints;

  public static final String SERIALIZED_NAME_TELEOP_DEFENSES_BREACHED = "teleopDefensesBreached";
  @SerializedName(SERIALIZED_NAME_TELEOP_DEFENSES_BREACHED)
  private Boolean teleopDefensesBreached;

  public static final String SERIALIZED_NAME_TELEOP_POINTS = "teleopPoints";
  @SerializedName(SERIALIZED_NAME_TELEOP_POINTS)
  private Integer teleopPoints;

  public static final String SERIALIZED_NAME_TELEOP_SCALE_POINTS = "teleopScalePoints";
  @SerializedName(SERIALIZED_NAME_TELEOP_SCALE_POINTS)
  private Integer teleopScalePoints;

  public static final String SERIALIZED_NAME_TELEOP_TOWER_CAPTURED = "teleopTowerCaptured";
  @SerializedName(SERIALIZED_NAME_TELEOP_TOWER_CAPTURED)
  private Integer teleopTowerCaptured;

  public static final String SERIALIZED_NAME_TOTAL_POINTS = "totalPoints";
  @SerializedName(SERIALIZED_NAME_TOTAL_POINTS)
  private Integer totalPoints;

  public static final String SERIALIZED_NAME_TOWER_END_STRENGTH = "towerEndStrength";
  @SerializedName(SERIALIZED_NAME_TOWER_END_STRENGTH)
  private Integer towerEndStrength;

  public static final String SERIALIZED_NAME_TOWER_FACE_A = "towerFaceA";
  @SerializedName(SERIALIZED_NAME_TOWER_FACE_A)
  private String towerFaceA;

  public static final String SERIALIZED_NAME_TOWER_FACE_B = "towerFaceB";
  @SerializedName(SERIALIZED_NAME_TOWER_FACE_B)
  private String towerFaceB;

  public static final String SERIALIZED_NAME_TOWER_FACE_C = "towerFaceC";
  @SerializedName(SERIALIZED_NAME_TOWER_FACE_C)
  private String towerFaceC;

  public MatchScoreBreakdown2016Alliance() {
  }

  public MatchScoreBreakdown2016Alliance adjustPoints(Integer adjustPoints) {
    this.adjustPoints = adjustPoints;
    return this;
  }

  /**
   * Get adjustPoints
   * @return adjustPoints
   */
  @javax.annotation.Nullable
  public Integer getAdjustPoints() {
    return adjustPoints;
  }

  public void setAdjustPoints(Integer adjustPoints) {
    this.adjustPoints = adjustPoints;
  }


  public MatchScoreBreakdown2016Alliance autoBoulderPoints(Integer autoBoulderPoints) {
    this.autoBoulderPoints = autoBoulderPoints;
    return this;
  }

  /**
   * Get autoBoulderPoints
   * @return autoBoulderPoints
   */
  @javax.annotation.Nullable
  public Integer getAutoBoulderPoints() {
    return autoBoulderPoints;
  }

  public void setAutoBoulderPoints(Integer autoBoulderPoints) {
    this.autoBoulderPoints = autoBoulderPoints;
  }


  public MatchScoreBreakdown2016Alliance autoBouldersHigh(Integer autoBouldersHigh) {
    this.autoBouldersHigh = autoBouldersHigh;
    return this;
  }

  /**
   * Get autoBouldersHigh
   * @return autoBouldersHigh
   */
  @javax.annotation.Nullable
  public Integer getAutoBouldersHigh() {
    return autoBouldersHigh;
  }

  public void setAutoBouldersHigh(Integer autoBouldersHigh) {
    this.autoBouldersHigh = autoBouldersHigh;
  }


  public MatchScoreBreakdown2016Alliance autoBouldersLow(Integer autoBouldersLow) {
    this.autoBouldersLow = autoBouldersLow;
    return this;
  }

  /**
   * Get autoBouldersLow
   * @return autoBouldersLow
   */
  @javax.annotation.Nullable
  public Integer getAutoBouldersLow() {
    return autoBouldersLow;
  }

  public void setAutoBouldersLow(Integer autoBouldersLow) {
    this.autoBouldersLow = autoBouldersLow;
  }


  public MatchScoreBreakdown2016Alliance autoCrossingPoints(Integer autoCrossingPoints) {
    this.autoCrossingPoints = autoCrossingPoints;
    return this;
  }

  /**
   * Get autoCrossingPoints
   * @return autoCrossingPoints
   */
  @javax.annotation.Nullable
  public Integer getAutoCrossingPoints() {
    return autoCrossingPoints;
  }

  public void setAutoCrossingPoints(Integer autoCrossingPoints) {
    this.autoCrossingPoints = autoCrossingPoints;
  }


  public MatchScoreBreakdown2016Alliance autoPoints(Integer autoPoints) {
    this.autoPoints = autoPoints;
    return this;
  }

  /**
   * Get autoPoints
   * @return autoPoints
   */
  @javax.annotation.Nullable
  public Integer getAutoPoints() {
    return autoPoints;
  }

  public void setAutoPoints(Integer autoPoints) {
    this.autoPoints = autoPoints;
  }


  public MatchScoreBreakdown2016Alliance autoReachPoints(Integer autoReachPoints) {
    this.autoReachPoints = autoReachPoints;
    return this;
  }

  /**
   * Get autoReachPoints
   * @return autoReachPoints
   */
  @javax.annotation.Nullable
  public Integer getAutoReachPoints() {
    return autoReachPoints;
  }

  public void setAutoReachPoints(Integer autoReachPoints) {
    this.autoReachPoints = autoReachPoints;
  }


  public MatchScoreBreakdown2016Alliance breachPoints(Integer breachPoints) {
    this.breachPoints = breachPoints;
    return this;
  }

  /**
   * Get breachPoints
   * @return breachPoints
   */
  @javax.annotation.Nullable
  public Integer getBreachPoints() {
    return breachPoints;
  }

  public void setBreachPoints(Integer breachPoints) {
    this.breachPoints = breachPoints;
  }


  public MatchScoreBreakdown2016Alliance capturePoints(Integer capturePoints) {
    this.capturePoints = capturePoints;
    return this;
  }

  /**
   * Get capturePoints
   * @return capturePoints
   */
  @javax.annotation.Nullable
  public Integer getCapturePoints() {
    return capturePoints;
  }

  public void setCapturePoints(Integer capturePoints) {
    this.capturePoints = capturePoints;
  }


  public MatchScoreBreakdown2016Alliance foulCount(Integer foulCount) {
    this.foulCount = foulCount;
    return this;
  }

  /**
   * Get foulCount
   * @return foulCount
   */
  @javax.annotation.Nullable
  public Integer getFoulCount() {
    return foulCount;
  }

  public void setFoulCount(Integer foulCount) {
    this.foulCount = foulCount;
  }


  public MatchScoreBreakdown2016Alliance foulPoints(Integer foulPoints) {
    this.foulPoints = foulPoints;
    return this;
  }

  /**
   * Get foulPoints
   * @return foulPoints
   */
  @javax.annotation.Nullable
  public Integer getFoulPoints() {
    return foulPoints;
  }

  public void setFoulPoints(Integer foulPoints) {
    this.foulPoints = foulPoints;
  }


  public MatchScoreBreakdown2016Alliance position1crossings(Integer position1crossings) {
    this.position1crossings = position1crossings;
    return this;
  }

  /**
   * Get position1crossings
   * @return position1crossings
   */
  @javax.annotation.Nullable
  public Integer getPosition1crossings() {
    return position1crossings;
  }

  public void setPosition1crossings(Integer position1crossings) {
    this.position1crossings = position1crossings;
  }


  public MatchScoreBreakdown2016Alliance position2(String position2) {
    this.position2 = position2;
    return this;
  }

  /**
   * Get position2
   * @return position2
   */
  @javax.annotation.Nullable
  public String getPosition2() {
    return position2;
  }

  public void setPosition2(String position2) {
    this.position2 = position2;
  }


  public MatchScoreBreakdown2016Alliance position2crossings(Integer position2crossings) {
    this.position2crossings = position2crossings;
    return this;
  }

  /**
   * Get position2crossings
   * @return position2crossings
   */
  @javax.annotation.Nullable
  public Integer getPosition2crossings() {
    return position2crossings;
  }

  public void setPosition2crossings(Integer position2crossings) {
    this.position2crossings = position2crossings;
  }


  public MatchScoreBreakdown2016Alliance position3(String position3) {
    this.position3 = position3;
    return this;
  }

  /**
   * Get position3
   * @return position3
   */
  @javax.annotation.Nullable
  public String getPosition3() {
    return position3;
  }

  public void setPosition3(String position3) {
    this.position3 = position3;
  }


  public MatchScoreBreakdown2016Alliance position3crossings(Integer position3crossings) {
    this.position3crossings = position3crossings;
    return this;
  }

  /**
   * Get position3crossings
   * @return position3crossings
   */
  @javax.annotation.Nullable
  public Integer getPosition3crossings() {
    return position3crossings;
  }

  public void setPosition3crossings(Integer position3crossings) {
    this.position3crossings = position3crossings;
  }


  public MatchScoreBreakdown2016Alliance position4(String position4) {
    this.position4 = position4;
    return this;
  }

  /**
   * Get position4
   * @return position4
   */
  @javax.annotation.Nullable
  public String getPosition4() {
    return position4;
  }

  public void setPosition4(String position4) {
    this.position4 = position4;
  }


  public MatchScoreBreakdown2016Alliance position4crossings(Integer position4crossings) {
    this.position4crossings = position4crossings;
    return this;
  }

  /**
   * Get position4crossings
   * @return position4crossings
   */
  @javax.annotation.Nullable
  public Integer getPosition4crossings() {
    return position4crossings;
  }

  public void setPosition4crossings(Integer position4crossings) {
    this.position4crossings = position4crossings;
  }


  public MatchScoreBreakdown2016Alliance position5(String position5) {
    this.position5 = position5;
    return this;
  }

  /**
   * Get position5
   * @return position5
   */
  @javax.annotation.Nullable
  public String getPosition5() {
    return position5;
  }

  public void setPosition5(String position5) {
    this.position5 = position5;
  }


  public MatchScoreBreakdown2016Alliance position5crossings(Integer position5crossings) {
    this.position5crossings = position5crossings;
    return this;
  }

  /**
   * Get position5crossings
   * @return position5crossings
   */
  @javax.annotation.Nullable
  public Integer getPosition5crossings() {
    return position5crossings;
  }

  public void setPosition5crossings(Integer position5crossings) {
    this.position5crossings = position5crossings;
  }


  public MatchScoreBreakdown2016Alliance robot1Auto(Robot1AutoEnum robot1Auto) {
    this.robot1Auto = robot1Auto;
    return this;
  }

  /**
   * Get robot1Auto
   * @return robot1Auto
   */
  @javax.annotation.Nullable
  public Robot1AutoEnum getRobot1Auto() {
    return robot1Auto;
  }

  public void setRobot1Auto(Robot1AutoEnum robot1Auto) {
    this.robot1Auto = robot1Auto;
  }


  public MatchScoreBreakdown2016Alliance robot2Auto(Robot2AutoEnum robot2Auto) {
    this.robot2Auto = robot2Auto;
    return this;
  }

  /**
   * Get robot2Auto
   * @return robot2Auto
   */
  @javax.annotation.Nullable
  public Robot2AutoEnum getRobot2Auto() {
    return robot2Auto;
  }

  public void setRobot2Auto(Robot2AutoEnum robot2Auto) {
    this.robot2Auto = robot2Auto;
  }


  public MatchScoreBreakdown2016Alliance robot3Auto(Robot3AutoEnum robot3Auto) {
    this.robot3Auto = robot3Auto;
    return this;
  }

  /**
   * Get robot3Auto
   * @return robot3Auto
   */
  @javax.annotation.Nullable
  public Robot3AutoEnum getRobot3Auto() {
    return robot3Auto;
  }

  public void setRobot3Auto(Robot3AutoEnum robot3Auto) {
    this.robot3Auto = robot3Auto;
  }


  public MatchScoreBreakdown2016Alliance techFoulCount(Integer techFoulCount) {
    this.techFoulCount = techFoulCount;
    return this;
  }

  /**
   * Get techFoulCount
   * @return techFoulCount
   */
  @javax.annotation.Nullable
  public Integer getTechFoulCount() {
    return techFoulCount;
  }

  public void setTechFoulCount(Integer techFoulCount) {
    this.techFoulCount = techFoulCount;
  }


  public MatchScoreBreakdown2016Alliance teleopBoulderPoints(Integer teleopBoulderPoints) {
    this.teleopBoulderPoints = teleopBoulderPoints;
    return this;
  }

  /**
   * Get teleopBoulderPoints
   * @return teleopBoulderPoints
   */
  @javax.annotation.Nullable
  public Integer getTeleopBoulderPoints() {
    return teleopBoulderPoints;
  }

  public void setTeleopBoulderPoints(Integer teleopBoulderPoints) {
    this.teleopBoulderPoints = teleopBoulderPoints;
  }


  public MatchScoreBreakdown2016Alliance teleopBouldersHigh(Integer teleopBouldersHigh) {
    this.teleopBouldersHigh = teleopBouldersHigh;
    return this;
  }

  /**
   * Get teleopBouldersHigh
   * @return teleopBouldersHigh
   */
  @javax.annotation.Nullable
  public Integer getTeleopBouldersHigh() {
    return teleopBouldersHigh;
  }

  public void setTeleopBouldersHigh(Integer teleopBouldersHigh) {
    this.teleopBouldersHigh = teleopBouldersHigh;
  }


  public MatchScoreBreakdown2016Alliance teleopBouldersLow(Integer teleopBouldersLow) {
    this.teleopBouldersLow = teleopBouldersLow;
    return this;
  }

  /**
   * Get teleopBouldersLow
   * @return teleopBouldersLow
   */
  @javax.annotation.Nullable
  public Integer getTeleopBouldersLow() {
    return teleopBouldersLow;
  }

  public void setTeleopBouldersLow(Integer teleopBouldersLow) {
    this.teleopBouldersLow = teleopBouldersLow;
  }


  public MatchScoreBreakdown2016Alliance teleopChallengePoints(Integer teleopChallengePoints) {
    this.teleopChallengePoints = teleopChallengePoints;
    return this;
  }

  /**
   * Get teleopChallengePoints
   * @return teleopChallengePoints
   */
  @javax.annotation.Nullable
  public Integer getTeleopChallengePoints() {
    return teleopChallengePoints;
  }

  public void setTeleopChallengePoints(Integer teleopChallengePoints) {
    this.teleopChallengePoints = teleopChallengePoints;
  }


  public MatchScoreBreakdown2016Alliance teleopCrossingPoints(Integer teleopCrossingPoints) {
    this.teleopCrossingPoints = teleopCrossingPoints;
    return this;
  }

  /**
   * Get teleopCrossingPoints
   * @return teleopCrossingPoints
   */
  @javax.annotation.Nullable
  public Integer getTeleopCrossingPoints() {
    return teleopCrossingPoints;
  }

  public void setTeleopCrossingPoints(Integer teleopCrossingPoints) {
    this.teleopCrossingPoints = teleopCrossingPoints;
  }


  public MatchScoreBreakdown2016Alliance teleopDefensesBreached(Boolean teleopDefensesBreached) {
    this.teleopDefensesBreached = teleopDefensesBreached;
    return this;
  }

  /**
   * Get teleopDefensesBreached
   * @return teleopDefensesBreached
   */
  @javax.annotation.Nullable
  public Boolean getTeleopDefensesBreached() {
    return teleopDefensesBreached;
  }

  public void setTeleopDefensesBreached(Boolean teleopDefensesBreached) {
    this.teleopDefensesBreached = teleopDefensesBreached;
  }


  public MatchScoreBreakdown2016Alliance teleopPoints(Integer teleopPoints) {
    this.teleopPoints = teleopPoints;
    return this;
  }

  /**
   * Get teleopPoints
   * @return teleopPoints
   */
  @javax.annotation.Nullable
  public Integer getTeleopPoints() {
    return teleopPoints;
  }

  public void setTeleopPoints(Integer teleopPoints) {
    this.teleopPoints = teleopPoints;
  }


  public MatchScoreBreakdown2016Alliance teleopScalePoints(Integer teleopScalePoints) {
    this.teleopScalePoints = teleopScalePoints;
    return this;
  }

  /**
   * Get teleopScalePoints
   * @return teleopScalePoints
   */
  @javax.annotation.Nullable
  public Integer getTeleopScalePoints() {
    return teleopScalePoints;
  }

  public void setTeleopScalePoints(Integer teleopScalePoints) {
    this.teleopScalePoints = teleopScalePoints;
  }


  public MatchScoreBreakdown2016Alliance teleopTowerCaptured(Integer teleopTowerCaptured) {
    this.teleopTowerCaptured = teleopTowerCaptured;
    return this;
  }

  /**
   * Get teleopTowerCaptured
   * @return teleopTowerCaptured
   */
  @javax.annotation.Nullable
  public Integer getTeleopTowerCaptured() {
    return teleopTowerCaptured;
  }

  public void setTeleopTowerCaptured(Integer teleopTowerCaptured) {
    this.teleopTowerCaptured = teleopTowerCaptured;
  }


  public MatchScoreBreakdown2016Alliance totalPoints(Integer totalPoints) {
    this.totalPoints = totalPoints;
    return this;
  }

  /**
   * Get totalPoints
   * @return totalPoints
   */
  @javax.annotation.Nullable
  public Integer getTotalPoints() {
    return totalPoints;
  }

  public void setTotalPoints(Integer totalPoints) {
    this.totalPoints = totalPoints;
  }


  public MatchScoreBreakdown2016Alliance towerEndStrength(Integer towerEndStrength) {
    this.towerEndStrength = towerEndStrength;
    return this;
  }

  /**
   * Get towerEndStrength
   * @return towerEndStrength
   */
  @javax.annotation.Nullable
  public Integer getTowerEndStrength() {
    return towerEndStrength;
  }

  public void setTowerEndStrength(Integer towerEndStrength) {
    this.towerEndStrength = towerEndStrength;
  }


  public MatchScoreBreakdown2016Alliance towerFaceA(String towerFaceA) {
    this.towerFaceA = towerFaceA;
    return this;
  }

  /**
   * Get towerFaceA
   * @return towerFaceA
   */
  @javax.annotation.Nullable
  public String getTowerFaceA() {
    return towerFaceA;
  }

  public void setTowerFaceA(String towerFaceA) {
    this.towerFaceA = towerFaceA;
  }


  public MatchScoreBreakdown2016Alliance towerFaceB(String towerFaceB) {
    this.towerFaceB = towerFaceB;
    return this;
  }

  /**
   * Get towerFaceB
   * @return towerFaceB
   */
  @javax.annotation.Nullable
  public String getTowerFaceB() {
    return towerFaceB;
  }

  public void setTowerFaceB(String towerFaceB) {
    this.towerFaceB = towerFaceB;
  }


  public MatchScoreBreakdown2016Alliance towerFaceC(String towerFaceC) {
    this.towerFaceC = towerFaceC;
    return this;
  }

  /**
   * Get towerFaceC
   * @return towerFaceC
   */
  @javax.annotation.Nullable
  public String getTowerFaceC() {
    return towerFaceC;
  }

  public void setTowerFaceC(String towerFaceC) {
    this.towerFaceC = towerFaceC;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MatchScoreBreakdown2016Alliance matchScoreBreakdown2016Alliance = (MatchScoreBreakdown2016Alliance) o;
    return Objects.equals(this.adjustPoints, matchScoreBreakdown2016Alliance.adjustPoints) &&
        Objects.equals(this.autoBoulderPoints, matchScoreBreakdown2016Alliance.autoBoulderPoints) &&
        Objects.equals(this.autoBouldersHigh, matchScoreBreakdown2016Alliance.autoBouldersHigh) &&
        Objects.equals(this.autoBouldersLow, matchScoreBreakdown2016Alliance.autoBouldersLow) &&
        Objects.equals(this.autoCrossingPoints, matchScoreBreakdown2016Alliance.autoCrossingPoints) &&
        Objects.equals(this.autoPoints, matchScoreBreakdown2016Alliance.autoPoints) &&
        Objects.equals(this.autoReachPoints, matchScoreBreakdown2016Alliance.autoReachPoints) &&
        Objects.equals(this.breachPoints, matchScoreBreakdown2016Alliance.breachPoints) &&
        Objects.equals(this.capturePoints, matchScoreBreakdown2016Alliance.capturePoints) &&
        Objects.equals(this.foulCount, matchScoreBreakdown2016Alliance.foulCount) &&
        Objects.equals(this.foulPoints, matchScoreBreakdown2016Alliance.foulPoints) &&
        Objects.equals(this.position1crossings, matchScoreBreakdown2016Alliance.position1crossings) &&
        Objects.equals(this.position2, matchScoreBreakdown2016Alliance.position2) &&
        Objects.equals(this.position2crossings, matchScoreBreakdown2016Alliance.position2crossings) &&
        Objects.equals(this.position3, matchScoreBreakdown2016Alliance.position3) &&
        Objects.equals(this.position3crossings, matchScoreBreakdown2016Alliance.position3crossings) &&
        Objects.equals(this.position4, matchScoreBreakdown2016Alliance.position4) &&
        Objects.equals(this.position4crossings, matchScoreBreakdown2016Alliance.position4crossings) &&
        Objects.equals(this.position5, matchScoreBreakdown2016Alliance.position5) &&
        Objects.equals(this.position5crossings, matchScoreBreakdown2016Alliance.position5crossings) &&
        Objects.equals(this.robot1Auto, matchScoreBreakdown2016Alliance.robot1Auto) &&
        Objects.equals(this.robot2Auto, matchScoreBreakdown2016Alliance.robot2Auto) &&
        Objects.equals(this.robot3Auto, matchScoreBreakdown2016Alliance.robot3Auto) &&
        Objects.equals(this.techFoulCount, matchScoreBreakdown2016Alliance.techFoulCount) &&
        Objects.equals(this.teleopBoulderPoints, matchScoreBreakdown2016Alliance.teleopBoulderPoints) &&
        Objects.equals(this.teleopBouldersHigh, matchScoreBreakdown2016Alliance.teleopBouldersHigh) &&
        Objects.equals(this.teleopBouldersLow, matchScoreBreakdown2016Alliance.teleopBouldersLow) &&
        Objects.equals(this.teleopChallengePoints, matchScoreBreakdown2016Alliance.teleopChallengePoints) &&
        Objects.equals(this.teleopCrossingPoints, matchScoreBreakdown2016Alliance.teleopCrossingPoints) &&
        Objects.equals(this.teleopDefensesBreached, matchScoreBreakdown2016Alliance.teleopDefensesBreached) &&
        Objects.equals(this.teleopPoints, matchScoreBreakdown2016Alliance.teleopPoints) &&
        Objects.equals(this.teleopScalePoints, matchScoreBreakdown2016Alliance.teleopScalePoints) &&
        Objects.equals(this.teleopTowerCaptured, matchScoreBreakdown2016Alliance.teleopTowerCaptured) &&
        Objects.equals(this.totalPoints, matchScoreBreakdown2016Alliance.totalPoints) &&
        Objects.equals(this.towerEndStrength, matchScoreBreakdown2016Alliance.towerEndStrength) &&
        Objects.equals(this.towerFaceA, matchScoreBreakdown2016Alliance.towerFaceA) &&
        Objects.equals(this.towerFaceB, matchScoreBreakdown2016Alliance.towerFaceB) &&
        Objects.equals(this.towerFaceC, matchScoreBreakdown2016Alliance.towerFaceC);
  }

  @Override
  public int hashCode() {
    return Objects.hash(adjustPoints, autoBoulderPoints, autoBouldersHigh, autoBouldersLow, autoCrossingPoints, autoPoints, autoReachPoints, breachPoints, capturePoints, foulCount, foulPoints, position1crossings, position2, position2crossings, position3, position3crossings, position4, position4crossings, position5, position5crossings, robot1Auto, robot2Auto, robot3Auto, techFoulCount, teleopBoulderPoints, teleopBouldersHigh, teleopBouldersLow, teleopChallengePoints, teleopCrossingPoints, teleopDefensesBreached, teleopPoints, teleopScalePoints, teleopTowerCaptured, totalPoints, towerEndStrength, towerFaceA, towerFaceB, towerFaceC);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatchScoreBreakdown2016Alliance {\n");
    sb.append("    adjustPoints: ").append(toIndentedString(adjustPoints)).append("\n");
    sb.append("    autoBoulderPoints: ").append(toIndentedString(autoBoulderPoints)).append("\n");
    sb.append("    autoBouldersHigh: ").append(toIndentedString(autoBouldersHigh)).append("\n");
    sb.append("    autoBouldersLow: ").append(toIndentedString(autoBouldersLow)).append("\n");
    sb.append("    autoCrossingPoints: ").append(toIndentedString(autoCrossingPoints)).append("\n");
    sb.append("    autoPoints: ").append(toIndentedString(autoPoints)).append("\n");
    sb.append("    autoReachPoints: ").append(toIndentedString(autoReachPoints)).append("\n");
    sb.append("    breachPoints: ").append(toIndentedString(breachPoints)).append("\n");
    sb.append("    capturePoints: ").append(toIndentedString(capturePoints)).append("\n");
    sb.append("    foulCount: ").append(toIndentedString(foulCount)).append("\n");
    sb.append("    foulPoints: ").append(toIndentedString(foulPoints)).append("\n");
    sb.append("    position1crossings: ").append(toIndentedString(position1crossings)).append("\n");
    sb.append("    position2: ").append(toIndentedString(position2)).append("\n");
    sb.append("    position2crossings: ").append(toIndentedString(position2crossings)).append("\n");
    sb.append("    position3: ").append(toIndentedString(position3)).append("\n");
    sb.append("    position3crossings: ").append(toIndentedString(position3crossings)).append("\n");
    sb.append("    position4: ").append(toIndentedString(position4)).append("\n");
    sb.append("    position4crossings: ").append(toIndentedString(position4crossings)).append("\n");
    sb.append("    position5: ").append(toIndentedString(position5)).append("\n");
    sb.append("    position5crossings: ").append(toIndentedString(position5crossings)).append("\n");
    sb.append("    robot1Auto: ").append(toIndentedString(robot1Auto)).append("\n");
    sb.append("    robot2Auto: ").append(toIndentedString(robot2Auto)).append("\n");
    sb.append("    robot3Auto: ").append(toIndentedString(robot3Auto)).append("\n");
    sb.append("    techFoulCount: ").append(toIndentedString(techFoulCount)).append("\n");
    sb.append("    teleopBoulderPoints: ").append(toIndentedString(teleopBoulderPoints)).append("\n");
    sb.append("    teleopBouldersHigh: ").append(toIndentedString(teleopBouldersHigh)).append("\n");
    sb.append("    teleopBouldersLow: ").append(toIndentedString(teleopBouldersLow)).append("\n");
    sb.append("    teleopChallengePoints: ").append(toIndentedString(teleopChallengePoints)).append("\n");
    sb.append("    teleopCrossingPoints: ").append(toIndentedString(teleopCrossingPoints)).append("\n");
    sb.append("    teleopDefensesBreached: ").append(toIndentedString(teleopDefensesBreached)).append("\n");
    sb.append("    teleopPoints: ").append(toIndentedString(teleopPoints)).append("\n");
    sb.append("    teleopScalePoints: ").append(toIndentedString(teleopScalePoints)).append("\n");
    sb.append("    teleopTowerCaptured: ").append(toIndentedString(teleopTowerCaptured)).append("\n");
    sb.append("    totalPoints: ").append(toIndentedString(totalPoints)).append("\n");
    sb.append("    towerEndStrength: ").append(toIndentedString(towerEndStrength)).append("\n");
    sb.append("    towerFaceA: ").append(toIndentedString(towerFaceA)).append("\n");
    sb.append("    towerFaceB: ").append(toIndentedString(towerFaceB)).append("\n");
    sb.append("    towerFaceC: ").append(toIndentedString(towerFaceC)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("adjustPoints");
    openapiFields.add("autoBoulderPoints");
    openapiFields.add("autoBouldersHigh");
    openapiFields.add("autoBouldersLow");
    openapiFields.add("autoCrossingPoints");
    openapiFields.add("autoPoints");
    openapiFields.add("autoReachPoints");
    openapiFields.add("breachPoints");
    openapiFields.add("capturePoints");
    openapiFields.add("foulCount");
    openapiFields.add("foulPoints");
    openapiFields.add("position1crossings");
    openapiFields.add("position2");
    openapiFields.add("position2crossings");
    openapiFields.add("position3");
    openapiFields.add("position3crossings");
    openapiFields.add("position4");
    openapiFields.add("position4crossings");
    openapiFields.add("position5");
    openapiFields.add("position5crossings");
    openapiFields.add("robot1Auto");
    openapiFields.add("robot2Auto");
    openapiFields.add("robot3Auto");
    openapiFields.add("techFoulCount");
    openapiFields.add("teleopBoulderPoints");
    openapiFields.add("teleopBouldersHigh");
    openapiFields.add("teleopBouldersLow");
    openapiFields.add("teleopChallengePoints");
    openapiFields.add("teleopCrossingPoints");
    openapiFields.add("teleopDefensesBreached");
    openapiFields.add("teleopPoints");
    openapiFields.add("teleopScalePoints");
    openapiFields.add("teleopTowerCaptured");
    openapiFields.add("totalPoints");
    openapiFields.add("towerEndStrength");
    openapiFields.add("towerFaceA");
    openapiFields.add("towerFaceB");
    openapiFields.add("towerFaceC");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MatchScoreBreakdown2016Alliance
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MatchScoreBreakdown2016Alliance.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MatchScoreBreakdown2016Alliance is not found in the empty JSON string", MatchScoreBreakdown2016Alliance.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MatchScoreBreakdown2016Alliance.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MatchScoreBreakdown2016Alliance` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("position2") != null && !jsonObj.get("position2").isJsonNull()) && !jsonObj.get("position2").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `position2` to be a primitive type in the JSON string but got `%s`", jsonObj.get("position2").toString()));
      }
      if ((jsonObj.get("position3") != null && !jsonObj.get("position3").isJsonNull()) && !jsonObj.get("position3").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `position3` to be a primitive type in the JSON string but got `%s`", jsonObj.get("position3").toString()));
      }
      if ((jsonObj.get("position4") != null && !jsonObj.get("position4").isJsonNull()) && !jsonObj.get("position4").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `position4` to be a primitive type in the JSON string but got `%s`", jsonObj.get("position4").toString()));
      }
      if ((jsonObj.get("position5") != null && !jsonObj.get("position5").isJsonNull()) && !jsonObj.get("position5").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `position5` to be a primitive type in the JSON string but got `%s`", jsonObj.get("position5").toString()));
      }
      if ((jsonObj.get("robot1Auto") != null && !jsonObj.get("robot1Auto").isJsonNull()) && !jsonObj.get("robot1Auto").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `robot1Auto` to be a primitive type in the JSON string but got `%s`", jsonObj.get("robot1Auto").toString()));
      }
      // validate the optional field `robot1Auto`
      if (jsonObj.get("robot1Auto") != null && !jsonObj.get("robot1Auto").isJsonNull()) {
        Robot1AutoEnum.validateJsonElement(jsonObj.get("robot1Auto"));
      }
      if ((jsonObj.get("robot2Auto") != null && !jsonObj.get("robot2Auto").isJsonNull()) && !jsonObj.get("robot2Auto").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `robot2Auto` to be a primitive type in the JSON string but got `%s`", jsonObj.get("robot2Auto").toString()));
      }
      // validate the optional field `robot2Auto`
      if (jsonObj.get("robot2Auto") != null && !jsonObj.get("robot2Auto").isJsonNull()) {
        Robot2AutoEnum.validateJsonElement(jsonObj.get("robot2Auto"));
      }
      if ((jsonObj.get("robot3Auto") != null && !jsonObj.get("robot3Auto").isJsonNull()) && !jsonObj.get("robot3Auto").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `robot3Auto` to be a primitive type in the JSON string but got `%s`", jsonObj.get("robot3Auto").toString()));
      }
      // validate the optional field `robot3Auto`
      if (jsonObj.get("robot3Auto") != null && !jsonObj.get("robot3Auto").isJsonNull()) {
        Robot3AutoEnum.validateJsonElement(jsonObj.get("robot3Auto"));
      }
      if ((jsonObj.get("towerFaceA") != null && !jsonObj.get("towerFaceA").isJsonNull()) && !jsonObj.get("towerFaceA").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `towerFaceA` to be a primitive type in the JSON string but got `%s`", jsonObj.get("towerFaceA").toString()));
      }
      if ((jsonObj.get("towerFaceB") != null && !jsonObj.get("towerFaceB").isJsonNull()) && !jsonObj.get("towerFaceB").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `towerFaceB` to be a primitive type in the JSON string but got `%s`", jsonObj.get("towerFaceB").toString()));
      }
      if ((jsonObj.get("towerFaceC") != null && !jsonObj.get("towerFaceC").isJsonNull()) && !jsonObj.get("towerFaceC").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `towerFaceC` to be a primitive type in the JSON string but got `%s`", jsonObj.get("towerFaceC").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MatchScoreBreakdown2016Alliance.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MatchScoreBreakdown2016Alliance' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MatchScoreBreakdown2016Alliance> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MatchScoreBreakdown2016Alliance.class));

       return (TypeAdapter<T>) new TypeAdapter<MatchScoreBreakdown2016Alliance>() {
           @Override
           public void write(JsonWriter out, MatchScoreBreakdown2016Alliance value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MatchScoreBreakdown2016Alliance read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MatchScoreBreakdown2016Alliance given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MatchScoreBreakdown2016Alliance
   * @throws IOException if the JSON string is invalid with respect to MatchScoreBreakdown2016Alliance
   */
  public static MatchScoreBreakdown2016Alliance fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MatchScoreBreakdown2016Alliance.class);
  }

  /**
   * Convert an instance of MatchScoreBreakdown2016Alliance to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

