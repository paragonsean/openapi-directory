/*
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MatchScoreBreakdown2023AllianceAutoCommunity;
import org.openapitools.client.model.MatchScoreBreakdown2023AllianceLinksInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for MatchScoreBreakdown2023Alliance
 */
public class MatchScoreBreakdown2023AllianceTest {
    private final MatchScoreBreakdown2023Alliance model = new MatchScoreBreakdown2023Alliance();

    /**
     * Model tests for MatchScoreBreakdown2023Alliance
     */
    @Test
    public void testMatchScoreBreakdown2023Alliance() {
        // TODO: test MatchScoreBreakdown2023Alliance
    }

    /**
     * Test the property 'activationBonusAchieved'
     */
    @Test
    public void activationBonusAchievedTest() {
        // TODO: test activationBonusAchieved
    }

    /**
     * Test the property 'adjustPoints'
     */
    @Test
    public void adjustPointsTest() {
        // TODO: test adjustPoints
    }

    /**
     * Test the property 'autoBridgeState'
     */
    @Test
    public void autoBridgeStateTest() {
        // TODO: test autoBridgeState
    }

    /**
     * Test the property 'autoChargeStationPoints'
     */
    @Test
    public void autoChargeStationPointsTest() {
        // TODO: test autoChargeStationPoints
    }

    /**
     * Test the property 'autoChargeStationRobot1'
     */
    @Test
    public void autoChargeStationRobot1Test() {
        // TODO: test autoChargeStationRobot1
    }

    /**
     * Test the property 'autoChargeStationRobot2'
     */
    @Test
    public void autoChargeStationRobot2Test() {
        // TODO: test autoChargeStationRobot2
    }

    /**
     * Test the property 'autoChargeStationRobot3'
     */
    @Test
    public void autoChargeStationRobot3Test() {
        // TODO: test autoChargeStationRobot3
    }

    /**
     * Test the property 'autoCommunity'
     */
    @Test
    public void autoCommunityTest() {
        // TODO: test autoCommunity
    }

    /**
     * Test the property 'autoDocked'
     */
    @Test
    public void autoDockedTest() {
        // TODO: test autoDocked
    }

    /**
     * Test the property 'autoGamePieceCount'
     */
    @Test
    public void autoGamePieceCountTest() {
        // TODO: test autoGamePieceCount
    }

    /**
     * Test the property 'autoGamePiecePoints'
     */
    @Test
    public void autoGamePiecePointsTest() {
        // TODO: test autoGamePiecePoints
    }

    /**
     * Test the property 'autoMobilityPoints'
     */
    @Test
    public void autoMobilityPointsTest() {
        // TODO: test autoMobilityPoints
    }

    /**
     * Test the property 'autoPoints'
     */
    @Test
    public void autoPointsTest() {
        // TODO: test autoPoints
    }

    /**
     * Test the property 'coopGamePieceCount'
     */
    @Test
    public void coopGamePieceCountTest() {
        // TODO: test coopGamePieceCount
    }

    /**
     * Test the property 'coopertitionCriteriaMet'
     */
    @Test
    public void coopertitionCriteriaMetTest() {
        // TODO: test coopertitionCriteriaMet
    }

    /**
     * Test the property 'endGameBridgeState'
     */
    @Test
    public void endGameBridgeStateTest() {
        // TODO: test endGameBridgeState
    }

    /**
     * Test the property 'endGameChargeStationPoints'
     */
    @Test
    public void endGameChargeStationPointsTest() {
        // TODO: test endGameChargeStationPoints
    }

    /**
     * Test the property 'endGameChargeStationRobot1'
     */
    @Test
    public void endGameChargeStationRobot1Test() {
        // TODO: test endGameChargeStationRobot1
    }

    /**
     * Test the property 'endGameChargeStationRobot2'
     */
    @Test
    public void endGameChargeStationRobot2Test() {
        // TODO: test endGameChargeStationRobot2
    }

    /**
     * Test the property 'endGameChargeStationRobot3'
     */
    @Test
    public void endGameChargeStationRobot3Test() {
        // TODO: test endGameChargeStationRobot3
    }

    /**
     * Test the property 'endGameParkPoints'
     */
    @Test
    public void endGameParkPointsTest() {
        // TODO: test endGameParkPoints
    }

    /**
     * Test the property 'extraGamePieceCount'
     */
    @Test
    public void extraGamePieceCountTest() {
        // TODO: test extraGamePieceCount
    }

    /**
     * Test the property 'foulCount'
     */
    @Test
    public void foulCountTest() {
        // TODO: test foulCount
    }

    /**
     * Test the property 'foulPoints'
     */
    @Test
    public void foulPointsTest() {
        // TODO: test foulPoints
    }

    /**
     * Test the property 'linkPoints'
     */
    @Test
    public void linkPointsTest() {
        // TODO: test linkPoints
    }

    /**
     * Test the property 'links'
     */
    @Test
    public void linksTest() {
        // TODO: test links
    }

    /**
     * Test the property 'mobilityRobot1'
     */
    @Test
    public void mobilityRobot1Test() {
        // TODO: test mobilityRobot1
    }

    /**
     * Test the property 'mobilityRobot2'
     */
    @Test
    public void mobilityRobot2Test() {
        // TODO: test mobilityRobot2
    }

    /**
     * Test the property 'mobilityRobot3'
     */
    @Test
    public void mobilityRobot3Test() {
        // TODO: test mobilityRobot3
    }

    /**
     * Test the property 'rp'
     */
    @Test
    public void rpTest() {
        // TODO: test rp
    }

    /**
     * Test the property 'sustainabilityBonusAchieved'
     */
    @Test
    public void sustainabilityBonusAchievedTest() {
        // TODO: test sustainabilityBonusAchieved
    }

    /**
     * Test the property 'techFoulCount'
     */
    @Test
    public void techFoulCountTest() {
        // TODO: test techFoulCount
    }

    /**
     * Test the property 'teleopCommunity'
     */
    @Test
    public void teleopCommunityTest() {
        // TODO: test teleopCommunity
    }

    /**
     * Test the property 'teleopGamePieceCount'
     */
    @Test
    public void teleopGamePieceCountTest() {
        // TODO: test teleopGamePieceCount
    }

    /**
     * Test the property 'teleopGamePiecePoints'
     */
    @Test
    public void teleopGamePiecePointsTest() {
        // TODO: test teleopGamePiecePoints
    }

    /**
     * Test the property 'teleopPoints'
     */
    @Test
    public void teleopPointsTest() {
        // TODO: test teleopPoints
    }

    /**
     * Test the property 'totalChargeStationPoints'
     */
    @Test
    public void totalChargeStationPointsTest() {
        // TODO: test totalChargeStationPoints
    }

    /**
     * Test the property 'totalPoints'
     */
    @Test
    public void totalPointsTest() {
        // TODO: test totalPoints
    }

}
