/*
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for MatchScoreBreakdown2018Alliance
 */
public class MatchScoreBreakdown2018AllianceTest {
    private final MatchScoreBreakdown2018Alliance model = new MatchScoreBreakdown2018Alliance();

    /**
     * Model tests for MatchScoreBreakdown2018Alliance
     */
    @Test
    public void testMatchScoreBreakdown2018Alliance() {
        // TODO: test MatchScoreBreakdown2018Alliance
    }

    /**
     * Test the property 'adjustPoints'
     */
    @Test
    public void adjustPointsTest() {
        // TODO: test adjustPoints
    }

    /**
     * Test the property 'autoOwnershipPoints'
     */
    @Test
    public void autoOwnershipPointsTest() {
        // TODO: test autoOwnershipPoints
    }

    /**
     * Test the property 'autoPoints'
     */
    @Test
    public void autoPointsTest() {
        // TODO: test autoPoints
    }

    /**
     * Test the property 'autoQuestRankingPoint'
     */
    @Test
    public void autoQuestRankingPointTest() {
        // TODO: test autoQuestRankingPoint
    }

    /**
     * Test the property 'autoRobot1'
     */
    @Test
    public void autoRobot1Test() {
        // TODO: test autoRobot1
    }

    /**
     * Test the property 'autoRobot2'
     */
    @Test
    public void autoRobot2Test() {
        // TODO: test autoRobot2
    }

    /**
     * Test the property 'autoRobot3'
     */
    @Test
    public void autoRobot3Test() {
        // TODO: test autoRobot3
    }

    /**
     * Test the property 'autoRunPoints'
     */
    @Test
    public void autoRunPointsTest() {
        // TODO: test autoRunPoints
    }

    /**
     * Test the property 'autoScaleOwnershipSec'
     */
    @Test
    public void autoScaleOwnershipSecTest() {
        // TODO: test autoScaleOwnershipSec
    }

    /**
     * Test the property 'autoSwitchAtZero'
     */
    @Test
    public void autoSwitchAtZeroTest() {
        // TODO: test autoSwitchAtZero
    }

    /**
     * Test the property 'autoSwitchOwnershipSec'
     */
    @Test
    public void autoSwitchOwnershipSecTest() {
        // TODO: test autoSwitchOwnershipSec
    }

    /**
     * Test the property 'endgamePoints'
     */
    @Test
    public void endgamePointsTest() {
        // TODO: test endgamePoints
    }

    /**
     * Test the property 'endgameRobot1'
     */
    @Test
    public void endgameRobot1Test() {
        // TODO: test endgameRobot1
    }

    /**
     * Test the property 'endgameRobot2'
     */
    @Test
    public void endgameRobot2Test() {
        // TODO: test endgameRobot2
    }

    /**
     * Test the property 'endgameRobot3'
     */
    @Test
    public void endgameRobot3Test() {
        // TODO: test endgameRobot3
    }

    /**
     * Test the property 'faceTheBossRankingPoint'
     */
    @Test
    public void faceTheBossRankingPointTest() {
        // TODO: test faceTheBossRankingPoint
    }

    /**
     * Test the property 'foulCount'
     */
    @Test
    public void foulCountTest() {
        // TODO: test foulCount
    }

    /**
     * Test the property 'foulPoints'
     */
    @Test
    public void foulPointsTest() {
        // TODO: test foulPoints
    }

    /**
     * Test the property 'rp'
     */
    @Test
    public void rpTest() {
        // TODO: test rp
    }

    /**
     * Test the property 'tbaGameData'
     */
    @Test
    public void tbaGameDataTest() {
        // TODO: test tbaGameData
    }

    /**
     * Test the property 'techFoulCount'
     */
    @Test
    public void techFoulCountTest() {
        // TODO: test techFoulCount
    }

    /**
     * Test the property 'teleopOwnershipPoints'
     */
    @Test
    public void teleopOwnershipPointsTest() {
        // TODO: test teleopOwnershipPoints
    }

    /**
     * Test the property 'teleopPoints'
     */
    @Test
    public void teleopPointsTest() {
        // TODO: test teleopPoints
    }

    /**
     * Test the property 'teleopScaleBoostSec'
     */
    @Test
    public void teleopScaleBoostSecTest() {
        // TODO: test teleopScaleBoostSec
    }

    /**
     * Test the property 'teleopScaleForceSec'
     */
    @Test
    public void teleopScaleForceSecTest() {
        // TODO: test teleopScaleForceSec
    }

    /**
     * Test the property 'teleopScaleOwnershipSec'
     */
    @Test
    public void teleopScaleOwnershipSecTest() {
        // TODO: test teleopScaleOwnershipSec
    }

    /**
     * Test the property 'teleopSwitchBoostSec'
     */
    @Test
    public void teleopSwitchBoostSecTest() {
        // TODO: test teleopSwitchBoostSec
    }

    /**
     * Test the property 'teleopSwitchForceSec'
     */
    @Test
    public void teleopSwitchForceSecTest() {
        // TODO: test teleopSwitchForceSec
    }

    /**
     * Test the property 'teleopSwitchOwnershipSec'
     */
    @Test
    public void teleopSwitchOwnershipSecTest() {
        // TODO: test teleopSwitchOwnershipSec
    }

    /**
     * Test the property 'totalPoints'
     */
    @Test
    public void totalPointsTest() {
        // TODO: test totalPoints
    }

    /**
     * Test the property 'vaultBoostPlayed'
     */
    @Test
    public void vaultBoostPlayedTest() {
        // TODO: test vaultBoostPlayed
    }

    /**
     * Test the property 'vaultBoostTotal'
     */
    @Test
    public void vaultBoostTotalTest() {
        // TODO: test vaultBoostTotal
    }

    /**
     * Test the property 'vaultForcePlayed'
     */
    @Test
    public void vaultForcePlayedTest() {
        // TODO: test vaultForcePlayed
    }

    /**
     * Test the property 'vaultForceTotal'
     */
    @Test
    public void vaultForceTotalTest() {
        // TODO: test vaultForceTotal
    }

    /**
     * Test the property 'vaultLevitatePlayed'
     */
    @Test
    public void vaultLevitatePlayedTest() {
        // TODO: test vaultLevitatePlayed
    }

    /**
     * Test the property 'vaultLevitateTotal'
     */
    @Test
    public void vaultLevitateTotalTest() {
        // TODO: test vaultLevitateTotal
    }

    /**
     * Test the property 'vaultPoints'
     */
    @Test
    public void vaultPointsTest() {
        // TODO: test vaultPoints
    }

}
