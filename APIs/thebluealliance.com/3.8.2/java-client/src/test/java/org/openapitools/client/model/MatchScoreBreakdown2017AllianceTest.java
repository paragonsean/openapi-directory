/*
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for MatchScoreBreakdown2017Alliance
 */
public class MatchScoreBreakdown2017AllianceTest {
    private final MatchScoreBreakdown2017Alliance model = new MatchScoreBreakdown2017Alliance();

    /**
     * Model tests for MatchScoreBreakdown2017Alliance
     */
    @Test
    public void testMatchScoreBreakdown2017Alliance() {
        // TODO: test MatchScoreBreakdown2017Alliance
    }

    /**
     * Test the property 'adjustPoints'
     */
    @Test
    public void adjustPointsTest() {
        // TODO: test adjustPoints
    }

    /**
     * Test the property 'autoFuelHigh'
     */
    @Test
    public void autoFuelHighTest() {
        // TODO: test autoFuelHigh
    }

    /**
     * Test the property 'autoFuelLow'
     */
    @Test
    public void autoFuelLowTest() {
        // TODO: test autoFuelLow
    }

    /**
     * Test the property 'autoFuelPoints'
     */
    @Test
    public void autoFuelPointsTest() {
        // TODO: test autoFuelPoints
    }

    /**
     * Test the property 'autoMobilityPoints'
     */
    @Test
    public void autoMobilityPointsTest() {
        // TODO: test autoMobilityPoints
    }

    /**
     * Test the property 'autoPoints'
     */
    @Test
    public void autoPointsTest() {
        // TODO: test autoPoints
    }

    /**
     * Test the property 'autoRotorPoints'
     */
    @Test
    public void autoRotorPointsTest() {
        // TODO: test autoRotorPoints
    }

    /**
     * Test the property 'foulCount'
     */
    @Test
    public void foulCountTest() {
        // TODO: test foulCount
    }

    /**
     * Test the property 'foulPoints'
     */
    @Test
    public void foulPointsTest() {
        // TODO: test foulPoints
    }

    /**
     * Test the property 'kPaBonusPoints'
     */
    @Test
    public void kPaBonusPointsTest() {
        // TODO: test kPaBonusPoints
    }

    /**
     * Test the property 'kPaRankingPointAchieved'
     */
    @Test
    public void kPaRankingPointAchievedTest() {
        // TODO: test kPaRankingPointAchieved
    }

    /**
     * Test the property 'robot1Auto'
     */
    @Test
    public void robot1AutoTest() {
        // TODO: test robot1Auto
    }

    /**
     * Test the property 'robot2Auto'
     */
    @Test
    public void robot2AutoTest() {
        // TODO: test robot2Auto
    }

    /**
     * Test the property 'robot3Auto'
     */
    @Test
    public void robot3AutoTest() {
        // TODO: test robot3Auto
    }

    /**
     * Test the property 'rotor1Auto'
     */
    @Test
    public void rotor1AutoTest() {
        // TODO: test rotor1Auto
    }

    /**
     * Test the property 'rotor1Engaged'
     */
    @Test
    public void rotor1EngagedTest() {
        // TODO: test rotor1Engaged
    }

    /**
     * Test the property 'rotor2Auto'
     */
    @Test
    public void rotor2AutoTest() {
        // TODO: test rotor2Auto
    }

    /**
     * Test the property 'rotor2Engaged'
     */
    @Test
    public void rotor2EngagedTest() {
        // TODO: test rotor2Engaged
    }

    /**
     * Test the property 'rotor3Engaged'
     */
    @Test
    public void rotor3EngagedTest() {
        // TODO: test rotor3Engaged
    }

    /**
     * Test the property 'rotor4Engaged'
     */
    @Test
    public void rotor4EngagedTest() {
        // TODO: test rotor4Engaged
    }

    /**
     * Test the property 'rotorBonusPoints'
     */
    @Test
    public void rotorBonusPointsTest() {
        // TODO: test rotorBonusPoints
    }

    /**
     * Test the property 'rotorRankingPointAchieved'
     */
    @Test
    public void rotorRankingPointAchievedTest() {
        // TODO: test rotorRankingPointAchieved
    }

    /**
     * Test the property 'techFoulCount'
     */
    @Test
    public void techFoulCountTest() {
        // TODO: test techFoulCount
    }

    /**
     * Test the property 'teleopFuelHigh'
     */
    @Test
    public void teleopFuelHighTest() {
        // TODO: test teleopFuelHigh
    }

    /**
     * Test the property 'teleopFuelLow'
     */
    @Test
    public void teleopFuelLowTest() {
        // TODO: test teleopFuelLow
    }

    /**
     * Test the property 'teleopFuelPoints'
     */
    @Test
    public void teleopFuelPointsTest() {
        // TODO: test teleopFuelPoints
    }

    /**
     * Test the property 'teleopPoints'
     */
    @Test
    public void teleopPointsTest() {
        // TODO: test teleopPoints
    }

    /**
     * Test the property 'teleopRotorPoints'
     */
    @Test
    public void teleopRotorPointsTest() {
        // TODO: test teleopRotorPoints
    }

    /**
     * Test the property 'teleopTakeoffPoints'
     */
    @Test
    public void teleopTakeoffPointsTest() {
        // TODO: test teleopTakeoffPoints
    }

    /**
     * Test the property 'totalPoints'
     */
    @Test
    public void totalPointsTest() {
        // TODO: test totalPoints
    }

    /**
     * Test the property 'touchpadFar'
     */
    @Test
    public void touchpadFarTest() {
        // TODO: test touchpadFar
    }

    /**
     * Test the property 'touchpadMiddle'
     */
    @Test
    public void touchpadMiddleTest() {
        // TODO: test touchpadMiddle
    }

    /**
     * Test the property 'touchpadNear'
     */
    @Test
    public void touchpadNearTest() {
        // TODO: test touchpadNear
    }

}
