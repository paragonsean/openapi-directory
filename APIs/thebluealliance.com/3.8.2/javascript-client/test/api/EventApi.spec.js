/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TheBlueAllianceApiV3);
  }
}(this, function(expect, TheBlueAllianceApiV3) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TheBlueAllianceApiV3.EventApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EventApi', function() {
    describe('getDistrictEventsKeys_0', function() {
      it('should call getDistrictEventsKeys_0 successfully', function(done) {
        //uncomment below and update the code to test getDistrictEventsKeys_0
        //instance.getDistrictEventsKeys_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDistrictEventsSimple_0', function() {
      it('should call getDistrictEventsSimple_0 successfully', function(done) {
        //uncomment below and update the code to test getDistrictEventsSimple_0
        //instance.getDistrictEventsSimple_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getDistrictEvents_0', function() {
      it('should call getDistrictEvents_0 successfully', function(done) {
        //uncomment below and update the code to test getDistrictEvents_0
        //instance.getDistrictEvents_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEvent', function() {
      it('should call getEvent successfully', function(done) {
        //uncomment below and update the code to test getEvent
        //instance.getEvent(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventAlliances', function() {
      it('should call getEventAlliances successfully', function(done) {
        //uncomment below and update the code to test getEventAlliances
        //instance.getEventAlliances(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventAwards', function() {
      it('should call getEventAwards successfully', function(done) {
        //uncomment below and update the code to test getEventAwards
        //instance.getEventAwards(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventDistrictPoints', function() {
      it('should call getEventDistrictPoints successfully', function(done) {
        //uncomment below and update the code to test getEventDistrictPoints
        //instance.getEventDistrictPoints(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventInsights', function() {
      it('should call getEventInsights successfully', function(done) {
        //uncomment below and update the code to test getEventInsights
        //instance.getEventInsights(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventMatchTimeseries', function() {
      it('should call getEventMatchTimeseries successfully', function(done) {
        //uncomment below and update the code to test getEventMatchTimeseries
        //instance.getEventMatchTimeseries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventMatches', function() {
      it('should call getEventMatches successfully', function(done) {
        //uncomment below and update the code to test getEventMatches
        //instance.getEventMatches(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventMatchesKeys', function() {
      it('should call getEventMatchesKeys successfully', function(done) {
        //uncomment below and update the code to test getEventMatchesKeys
        //instance.getEventMatchesKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventMatchesSimple', function() {
      it('should call getEventMatchesSimple successfully', function(done) {
        //uncomment below and update the code to test getEventMatchesSimple
        //instance.getEventMatchesSimple(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventOPRs', function() {
      it('should call getEventOPRs successfully', function(done) {
        //uncomment below and update the code to test getEventOPRs
        //instance.getEventOPRs(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventPredictions', function() {
      it('should call getEventPredictions successfully', function(done) {
        //uncomment below and update the code to test getEventPredictions
        //instance.getEventPredictions(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventRankings', function() {
      it('should call getEventRankings successfully', function(done) {
        //uncomment below and update the code to test getEventRankings
        //instance.getEventRankings(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventSimple', function() {
      it('should call getEventSimple successfully', function(done) {
        //uncomment below and update the code to test getEventSimple
        //instance.getEventSimple(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventTeams', function() {
      it('should call getEventTeams successfully', function(done) {
        //uncomment below and update the code to test getEventTeams
        //instance.getEventTeams(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventTeamsKeys', function() {
      it('should call getEventTeamsKeys successfully', function(done) {
        //uncomment below and update the code to test getEventTeamsKeys
        //instance.getEventTeamsKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventTeamsSimple', function() {
      it('should call getEventTeamsSimple successfully', function(done) {
        //uncomment below and update the code to test getEventTeamsSimple
        //instance.getEventTeamsSimple(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventTeamsStatuses', function() {
      it('should call getEventTeamsStatuses successfully', function(done) {
        //uncomment below and update the code to test getEventTeamsStatuses
        //instance.getEventTeamsStatuses(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventsByYear', function() {
      it('should call getEventsByYear successfully', function(done) {
        //uncomment below and update the code to test getEventsByYear
        //instance.getEventsByYear(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventsByYearKeys', function() {
      it('should call getEventsByYearKeys successfully', function(done) {
        //uncomment below and update the code to test getEventsByYearKeys
        //instance.getEventsByYearKeys(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getEventsByYearSimple', function() {
      it('should call getEventsByYearSimple successfully', function(done) {
        //uncomment below and update the code to test getEventsByYearSimple
        //instance.getEventsByYearSimple(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTeamEventAwards_0', function() {
      it('should call getTeamEventAwards_0 successfully', function(done) {
        //uncomment below and update the code to test getTeamEventAwards_0
        //instance.getTeamEventAwards_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTeamEventMatchesKeys_0', function() {
      it('should call getTeamEventMatchesKeys_0 successfully', function(done) {
        //uncomment below and update the code to test getTeamEventMatchesKeys_0
        //instance.getTeamEventMatchesKeys_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTeamEventMatchesSimple_0', function() {
      it('should call getTeamEventMatchesSimple_0 successfully', function(done) {
        //uncomment below and update the code to test getTeamEventMatchesSimple_0
        //instance.getTeamEventMatchesSimple_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTeamEventMatches_0', function() {
      it('should call getTeamEventMatches_0 successfully', function(done) {
        //uncomment below and update the code to test getTeamEventMatches_0
        //instance.getTeamEventMatches_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTeamEventStatus_0', function() {
      it('should call getTeamEventStatus_0 successfully', function(done) {
        //uncomment below and update the code to test getTeamEventStatus_0
        //instance.getTeamEventStatus_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTeamEventsByYearKeys_0', function() {
      it('should call getTeamEventsByYearKeys_0 successfully', function(done) {
        //uncomment below and update the code to test getTeamEventsByYearKeys_0
        //instance.getTeamEventsByYearKeys_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTeamEventsByYearSimple_0', function() {
      it('should call getTeamEventsByYearSimple_0 successfully', function(done) {
        //uncomment below and update the code to test getTeamEventsByYearSimple_0
        //instance.getTeamEventsByYearSimple_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTeamEventsByYear_0', function() {
      it('should call getTeamEventsByYear_0 successfully', function(done) {
        //uncomment below and update the code to test getTeamEventsByYear_0
        //instance.getTeamEventsByYear_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTeamEventsKeys_0', function() {
      it('should call getTeamEventsKeys_0 successfully', function(done) {
        //uncomment below and update the code to test getTeamEventsKeys_0
        //instance.getTeamEventsKeys_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTeamEventsSimple_0', function() {
      it('should call getTeamEventsSimple_0 successfully', function(done) {
        //uncomment below and update the code to test getTeamEventsSimple_0
        //instance.getTeamEventsSimple_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTeamEventsStatusesByYear_1', function() {
      it('should call getTeamEventsStatusesByYear_1 successfully', function(done) {
        //uncomment below and update the code to test getTeamEventsStatusesByYear_1
        //instance.getTeamEventsStatusesByYear_1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getTeamEvents_0', function() {
      it('should call getTeamEvents_0 successfully', function(done) {
        //uncomment below and update the code to test getTeamEvents_0
        //instance.getTeamEvents_0(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
