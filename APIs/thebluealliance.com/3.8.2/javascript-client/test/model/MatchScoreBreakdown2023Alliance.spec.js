/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TheBlueAllianceApiV3);
  }
}(this, function(expect, TheBlueAllianceApiV3) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MatchScoreBreakdown2023Alliance', function() {
    it('should create an instance of MatchScoreBreakdown2023Alliance', function() {
      // uncomment below and update the code to test MatchScoreBreakdown2023Alliance
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be.a(TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance);
    });

    it('should have the property activationBonusAchieved (base name: "activationBonusAchieved")', function() {
      // uncomment below and update the code to test the property activationBonusAchieved
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property adjustPoints (base name: "adjustPoints")', function() {
      // uncomment below and update the code to test the property adjustPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoBridgeState (base name: "autoBridgeState")', function() {
      // uncomment below and update the code to test the property autoBridgeState
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoChargeStationPoints (base name: "autoChargeStationPoints")', function() {
      // uncomment below and update the code to test the property autoChargeStationPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoChargeStationRobot1 (base name: "autoChargeStationRobot1")', function() {
      // uncomment below and update the code to test the property autoChargeStationRobot1
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoChargeStationRobot2 (base name: "autoChargeStationRobot2")', function() {
      // uncomment below and update the code to test the property autoChargeStationRobot2
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoChargeStationRobot3 (base name: "autoChargeStationRobot3")', function() {
      // uncomment below and update the code to test the property autoChargeStationRobot3
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoCommunity (base name: "autoCommunity")', function() {
      // uncomment below and update the code to test the property autoCommunity
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoDocked (base name: "autoDocked")', function() {
      // uncomment below and update the code to test the property autoDocked
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoGamePieceCount (base name: "autoGamePieceCount")', function() {
      // uncomment below and update the code to test the property autoGamePieceCount
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoGamePiecePoints (base name: "autoGamePiecePoints")', function() {
      // uncomment below and update the code to test the property autoGamePiecePoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoMobilityPoints (base name: "autoMobilityPoints")', function() {
      // uncomment below and update the code to test the property autoMobilityPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoPoints (base name: "autoPoints")', function() {
      // uncomment below and update the code to test the property autoPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property coopGamePieceCount (base name: "coopGamePieceCount")', function() {
      // uncomment below and update the code to test the property coopGamePieceCount
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property coopertitionCriteriaMet (base name: "coopertitionCriteriaMet")', function() {
      // uncomment below and update the code to test the property coopertitionCriteriaMet
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property endGameBridgeState (base name: "endGameBridgeState")', function() {
      // uncomment below and update the code to test the property endGameBridgeState
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property endGameChargeStationPoints (base name: "endGameChargeStationPoints")', function() {
      // uncomment below and update the code to test the property endGameChargeStationPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property endGameChargeStationRobot1 (base name: "endGameChargeStationRobot1")', function() {
      // uncomment below and update the code to test the property endGameChargeStationRobot1
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property endGameChargeStationRobot2 (base name: "endGameChargeStationRobot2")', function() {
      // uncomment below and update the code to test the property endGameChargeStationRobot2
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property endGameChargeStationRobot3 (base name: "endGameChargeStationRobot3")', function() {
      // uncomment below and update the code to test the property endGameChargeStationRobot3
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property endGameParkPoints (base name: "endGameParkPoints")', function() {
      // uncomment below and update the code to test the property endGameParkPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property extraGamePieceCount (base name: "extraGamePieceCount")', function() {
      // uncomment below and update the code to test the property extraGamePieceCount
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property foulCount (base name: "foulCount")', function() {
      // uncomment below and update the code to test the property foulCount
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property foulPoints (base name: "foulPoints")', function() {
      // uncomment below and update the code to test the property foulPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property linkPoints (base name: "linkPoints")', function() {
      // uncomment below and update the code to test the property linkPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property links (base name: "links")', function() {
      // uncomment below and update the code to test the property links
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property mobilityRobot1 (base name: "mobilityRobot1")', function() {
      // uncomment below and update the code to test the property mobilityRobot1
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property mobilityRobot2 (base name: "mobilityRobot2")', function() {
      // uncomment below and update the code to test the property mobilityRobot2
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property mobilityRobot3 (base name: "mobilityRobot3")', function() {
      // uncomment below and update the code to test the property mobilityRobot3
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property rp (base name: "rp")', function() {
      // uncomment below and update the code to test the property rp
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property sustainabilityBonusAchieved (base name: "sustainabilityBonusAchieved")', function() {
      // uncomment below and update the code to test the property sustainabilityBonusAchieved
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property techFoulCount (base name: "techFoulCount")', function() {
      // uncomment below and update the code to test the property techFoulCount
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopCommunity (base name: "teleopCommunity")', function() {
      // uncomment below and update the code to test the property teleopCommunity
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopGamePieceCount (base name: "teleopGamePieceCount")', function() {
      // uncomment below and update the code to test the property teleopGamePieceCount
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopGamePiecePoints (base name: "teleopGamePiecePoints")', function() {
      // uncomment below and update the code to test the property teleopGamePiecePoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopPoints (base name: "teleopPoints")', function() {
      // uncomment below and update the code to test the property teleopPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property totalChargeStationPoints (base name: "totalChargeStationPoints")', function() {
      // uncomment below and update the code to test the property totalChargeStationPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

    it('should have the property totalPoints (base name: "totalPoints")', function() {
      // uncomment below and update the code to test the property totalPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2023Alliance();
      //expect(instance).to.be();
    });

  });

}));
