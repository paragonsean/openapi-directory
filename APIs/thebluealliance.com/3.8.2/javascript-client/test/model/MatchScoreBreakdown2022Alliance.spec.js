/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TheBlueAllianceApiV3);
  }
}(this, function(expect, TheBlueAllianceApiV3) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MatchScoreBreakdown2022Alliance', function() {
    it('should create an instance of MatchScoreBreakdown2022Alliance', function() {
      // uncomment below and update the code to test MatchScoreBreakdown2022Alliance
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be.a(TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance);
    });

    it('should have the property adjustPoints (base name: "adjustPoints")', function() {
      // uncomment below and update the code to test the property adjustPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoCargoLowerBlue (base name: "autoCargoLowerBlue")', function() {
      // uncomment below and update the code to test the property autoCargoLowerBlue
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoCargoLowerFar (base name: "autoCargoLowerFar")', function() {
      // uncomment below and update the code to test the property autoCargoLowerFar
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoCargoLowerNear (base name: "autoCargoLowerNear")', function() {
      // uncomment below and update the code to test the property autoCargoLowerNear
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoCargoLowerRed (base name: "autoCargoLowerRed")', function() {
      // uncomment below and update the code to test the property autoCargoLowerRed
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoCargoPoints (base name: "autoCargoPoints")', function() {
      // uncomment below and update the code to test the property autoCargoPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoCargoTotal (base name: "autoCargoTotal")', function() {
      // uncomment below and update the code to test the property autoCargoTotal
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoCargoUpperBlue (base name: "autoCargoUpperBlue")', function() {
      // uncomment below and update the code to test the property autoCargoUpperBlue
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoCargoUpperFar (base name: "autoCargoUpperFar")', function() {
      // uncomment below and update the code to test the property autoCargoUpperFar
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoCargoUpperNear (base name: "autoCargoUpperNear")', function() {
      // uncomment below and update the code to test the property autoCargoUpperNear
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoCargoUpperRed (base name: "autoCargoUpperRed")', function() {
      // uncomment below and update the code to test the property autoCargoUpperRed
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoPoints (base name: "autoPoints")', function() {
      // uncomment below and update the code to test the property autoPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoTaxiPoints (base name: "autoTaxiPoints")', function() {
      // uncomment below and update the code to test the property autoTaxiPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property cargoBonusRankingPoint (base name: "cargoBonusRankingPoint")', function() {
      // uncomment below and update the code to test the property cargoBonusRankingPoint
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property endgamePoints (base name: "endgamePoints")', function() {
      // uncomment below and update the code to test the property endgamePoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property endgameRobot1 (base name: "endgameRobot1")', function() {
      // uncomment below and update the code to test the property endgameRobot1
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property endgameRobot2 (base name: "endgameRobot2")', function() {
      // uncomment below and update the code to test the property endgameRobot2
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property endgameRobot3 (base name: "endgameRobot3")', function() {
      // uncomment below and update the code to test the property endgameRobot3
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property foulCount (base name: "foulCount")', function() {
      // uncomment below and update the code to test the property foulCount
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property foulPoints (base name: "foulPoints")', function() {
      // uncomment below and update the code to test the property foulPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property hangarBonusRankingPoint (base name: "hangarBonusRankingPoint")', function() {
      // uncomment below and update the code to test the property hangarBonusRankingPoint
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property matchCargoTotal (base name: "matchCargoTotal")', function() {
      // uncomment below and update the code to test the property matchCargoTotal
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property quintetAchieved (base name: "quintetAchieved")', function() {
      // uncomment below and update the code to test the property quintetAchieved
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property rp (base name: "rp")', function() {
      // uncomment below and update the code to test the property rp
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property taxiRobot1 (base name: "taxiRobot1")', function() {
      // uncomment below and update the code to test the property taxiRobot1
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property taxiRobot2 (base name: "taxiRobot2")', function() {
      // uncomment below and update the code to test the property taxiRobot2
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property taxiRobot3 (base name: "taxiRobot3")', function() {
      // uncomment below and update the code to test the property taxiRobot3
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property techFoulCount (base name: "techFoulCount")', function() {
      // uncomment below and update the code to test the property techFoulCount
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopCargoLowerBlue (base name: "teleopCargoLowerBlue")', function() {
      // uncomment below and update the code to test the property teleopCargoLowerBlue
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopCargoLowerFar (base name: "teleopCargoLowerFar")', function() {
      // uncomment below and update the code to test the property teleopCargoLowerFar
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopCargoLowerNear (base name: "teleopCargoLowerNear")', function() {
      // uncomment below and update the code to test the property teleopCargoLowerNear
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopCargoLowerRed (base name: "teleopCargoLowerRed")', function() {
      // uncomment below and update the code to test the property teleopCargoLowerRed
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopCargoPoints (base name: "teleopCargoPoints")', function() {
      // uncomment below and update the code to test the property teleopCargoPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopCargoTotal (base name: "teleopCargoTotal")', function() {
      // uncomment below and update the code to test the property teleopCargoTotal
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopCargoUpperBlue (base name: "teleopCargoUpperBlue")', function() {
      // uncomment below and update the code to test the property teleopCargoUpperBlue
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopCargoUpperFar (base name: "teleopCargoUpperFar")', function() {
      // uncomment below and update the code to test the property teleopCargoUpperFar
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopCargoUpperNear (base name: "teleopCargoUpperNear")', function() {
      // uncomment below and update the code to test the property teleopCargoUpperNear
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopCargoUpperRed (base name: "teleopCargoUpperRed")', function() {
      // uncomment below and update the code to test the property teleopCargoUpperRed
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopPoints (base name: "teleopPoints")', function() {
      // uncomment below and update the code to test the property teleopPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

    it('should have the property totalPoints (base name: "totalPoints")', function() {
      // uncomment below and update the code to test the property totalPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2022Alliance();
      //expect(instance).to.be();
    });

  });

}));
