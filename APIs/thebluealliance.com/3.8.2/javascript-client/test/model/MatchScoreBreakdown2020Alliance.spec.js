/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.TheBlueAllianceApiV3);
  }
}(this, function(expect, TheBlueAllianceApiV3) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('MatchScoreBreakdown2020Alliance', function() {
    it('should create an instance of MatchScoreBreakdown2020Alliance', function() {
      // uncomment below and update the code to test MatchScoreBreakdown2020Alliance
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be.a(TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance);
    });

    it('should have the property adjustPoints (base name: "adjustPoints")', function() {
      // uncomment below and update the code to test the property adjustPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoCellPoints (base name: "autoCellPoints")', function() {
      // uncomment below and update the code to test the property autoCellPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoCellsBottom (base name: "autoCellsBottom")', function() {
      // uncomment below and update the code to test the property autoCellsBottom
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoCellsInner (base name: "autoCellsInner")', function() {
      // uncomment below and update the code to test the property autoCellsInner
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoCellsOuter (base name: "autoCellsOuter")', function() {
      // uncomment below and update the code to test the property autoCellsOuter
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoInitLinePoints (base name: "autoInitLinePoints")', function() {
      // uncomment below and update the code to test the property autoInitLinePoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property autoPoints (base name: "autoPoints")', function() {
      // uncomment below and update the code to test the property autoPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property controlPanelPoints (base name: "controlPanelPoints")', function() {
      // uncomment below and update the code to test the property controlPanelPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property endgamePoints (base name: "endgamePoints")', function() {
      // uncomment below and update the code to test the property endgamePoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property endgameRobot1 (base name: "endgameRobot1")', function() {
      // uncomment below and update the code to test the property endgameRobot1
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property endgameRobot2 (base name: "endgameRobot2")', function() {
      // uncomment below and update the code to test the property endgameRobot2
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property endgameRobot3 (base name: "endgameRobot3")', function() {
      // uncomment below and update the code to test the property endgameRobot3
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property endgameRungIsLevel (base name: "endgameRungIsLevel")', function() {
      // uncomment below and update the code to test the property endgameRungIsLevel
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property foulCount (base name: "foulCount")', function() {
      // uncomment below and update the code to test the property foulCount
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property foulPoints (base name: "foulPoints")', function() {
      // uncomment below and update the code to test the property foulPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property initLineRobot1 (base name: "initLineRobot1")', function() {
      // uncomment below and update the code to test the property initLineRobot1
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property initLineRobot2 (base name: "initLineRobot2")', function() {
      // uncomment below and update the code to test the property initLineRobot2
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property initLineRobot3 (base name: "initLineRobot3")', function() {
      // uncomment below and update the code to test the property initLineRobot3
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property rp (base name: "rp")', function() {
      // uncomment below and update the code to test the property rp
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property shieldEnergizedRankingPoint (base name: "shieldEnergizedRankingPoint")', function() {
      // uncomment below and update the code to test the property shieldEnergizedRankingPoint
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property shieldOperationalRankingPoint (base name: "shieldOperationalRankingPoint")', function() {
      // uncomment below and update the code to test the property shieldOperationalRankingPoint
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property stage1Activated (base name: "stage1Activated")', function() {
      // uncomment below and update the code to test the property stage1Activated
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property stage2Activated (base name: "stage2Activated")', function() {
      // uncomment below and update the code to test the property stage2Activated
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property stage3Activated (base name: "stage3Activated")', function() {
      // uncomment below and update the code to test the property stage3Activated
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property stage3TargetColor (base name: "stage3TargetColor")', function() {
      // uncomment below and update the code to test the property stage3TargetColor
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property tbaNumRobotsHanging (base name: "tba_numRobotsHanging")', function() {
      // uncomment below and update the code to test the property tbaNumRobotsHanging
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property tbaShieldEnergizedRankingPointFromFoul (base name: "tba_shieldEnergizedRankingPointFromFoul")', function() {
      // uncomment below and update the code to test the property tbaShieldEnergizedRankingPointFromFoul
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property techFoulCount (base name: "techFoulCount")', function() {
      // uncomment below and update the code to test the property techFoulCount
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopCellPoints (base name: "teleopCellPoints")', function() {
      // uncomment below and update the code to test the property teleopCellPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopCellsBottom (base name: "teleopCellsBottom")', function() {
      // uncomment below and update the code to test the property teleopCellsBottom
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopCellsInner (base name: "teleopCellsInner")', function() {
      // uncomment below and update the code to test the property teleopCellsInner
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopCellsOuter (base name: "teleopCellsOuter")', function() {
      // uncomment below and update the code to test the property teleopCellsOuter
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property teleopPoints (base name: "teleopPoints")', function() {
      // uncomment below and update the code to test the property teleopPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

    it('should have the property totalPoints (base name: "totalPoints")', function() {
      // uncomment below and update the code to test the property totalPoints
      //var instance = new TheBlueAllianceApiV3.MatchScoreBreakdown2020Alliance();
      //expect(instance).to.be();
    });

  });

}));
