/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DistrictRankingEventPointsInner from './DistrictRankingEventPointsInner';

/**
 * The DistrictRanking model module.
 * @module model/DistrictRanking
 * @version 3.8.2
 */
class DistrictRanking {
    /**
     * Constructs a new <code>DistrictRanking</code>.
     * Rank of a team in a district.
     * @alias module:model/DistrictRanking
     * @param pointTotal {Number} Total district points for the team.
     * @param rank {Number} Numerical rank of the team, 1 being top rank.
     * @param teamKey {String} TBA team key for the team.
     */
    constructor(pointTotal, rank, teamKey) { 
        
        DistrictRanking.initialize(this, pointTotal, rank, teamKey);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, pointTotal, rank, teamKey) { 
        obj['point_total'] = pointTotal;
        obj['rank'] = rank;
        obj['team_key'] = teamKey;
    }

    /**
     * Constructs a <code>DistrictRanking</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DistrictRanking} obj Optional instance to populate.
     * @return {module:model/DistrictRanking} The populated <code>DistrictRanking</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DistrictRanking();

            if (data.hasOwnProperty('event_points')) {
                obj['event_points'] = ApiClient.convertToType(data['event_points'], [DistrictRankingEventPointsInner]);
            }
            if (data.hasOwnProperty('point_total')) {
                obj['point_total'] = ApiClient.convertToType(data['point_total'], 'Number');
            }
            if (data.hasOwnProperty('rank')) {
                obj['rank'] = ApiClient.convertToType(data['rank'], 'Number');
            }
            if (data.hasOwnProperty('rookie_bonus')) {
                obj['rookie_bonus'] = ApiClient.convertToType(data['rookie_bonus'], 'Number');
            }
            if (data.hasOwnProperty('team_key')) {
                obj['team_key'] = ApiClient.convertToType(data['team_key'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DistrictRanking</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DistrictRanking</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DistrictRanking.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        if (data['event_points']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['event_points'])) {
                throw new Error("Expected the field `event_points` to be an array in the JSON data but got " + data['event_points']);
            }
            // validate the optional field `event_points` (array)
            for (const item of data['event_points']) {
                DistrictRankingEventPointsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['team_key'] && !(typeof data['team_key'] === 'string' || data['team_key'] instanceof String)) {
            throw new Error("Expected the field `team_key` to be a primitive type in the JSON string but got " + data['team_key']);
        }

        return true;
    }


}

DistrictRanking.RequiredProperties = ["point_total", "rank", "team_key"];

/**
 * List of events that contributed to the point total for the team.
 * @member {Array.<module:model/DistrictRankingEventPointsInner>} event_points
 */
DistrictRanking.prototype['event_points'] = undefined;

/**
 * Total district points for the team.
 * @member {Number} point_total
 */
DistrictRanking.prototype['point_total'] = undefined;

/**
 * Numerical rank of the team, 1 being top rank.
 * @member {Number} rank
 */
DistrictRanking.prototype['rank'] = undefined;

/**
 * Any points added to a team as a result of the rookie bonus.
 * @member {Number} rookie_bonus
 */
DistrictRanking.prototype['rookie_bonus'] = undefined;

/**
 * TBA team key for the team.
 * @member {String} team_key
 */
DistrictRanking.prototype['team_key'] = undefined;






export default DistrictRanking;

