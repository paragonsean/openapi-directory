/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import WLTRecord from './WLTRecord';

/**
 * The TeamEventStatusRankRanking model module.
 * @module model/TeamEventStatusRankRanking
 * @version 3.8.2
 */
class TeamEventStatusRankRanking {
    /**
     * Constructs a new <code>TeamEventStatusRankRanking</code>.
     * @alias module:model/TeamEventStatusRankRanking
     */
    constructor() { 
        
        TeamEventStatusRankRanking.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TeamEventStatusRankRanking</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TeamEventStatusRankRanking} obj Optional instance to populate.
     * @return {module:model/TeamEventStatusRankRanking} The populated <code>TeamEventStatusRankRanking</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TeamEventStatusRankRanking();

            if (data.hasOwnProperty('dq')) {
                obj['dq'] = ApiClient.convertToType(data['dq'], 'Number');
            }
            if (data.hasOwnProperty('matches_played')) {
                obj['matches_played'] = ApiClient.convertToType(data['matches_played'], 'Number');
            }
            if (data.hasOwnProperty('qual_average')) {
                obj['qual_average'] = ApiClient.convertToType(data['qual_average'], 'Number');
            }
            if (data.hasOwnProperty('rank')) {
                obj['rank'] = ApiClient.convertToType(data['rank'], 'Number');
            }
            if (data.hasOwnProperty('record')) {
                obj['record'] = WLTRecord.constructFromObject(data['record']);
            }
            if (data.hasOwnProperty('sort_orders')) {
                obj['sort_orders'] = ApiClient.convertToType(data['sort_orders'], ['Number']);
            }
            if (data.hasOwnProperty('team_key')) {
                obj['team_key'] = ApiClient.convertToType(data['team_key'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TeamEventStatusRankRanking</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TeamEventStatusRankRanking</code>.
     */
    static validateJSON(data) {
        // validate the optional field `record`
        if (data['record']) { // data not null
          WLTRecord.validateJSON(data['record']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['sort_orders'])) {
            throw new Error("Expected the field `sort_orders` to be an array in the JSON data but got " + data['sort_orders']);
        }
        // ensure the json data is a string
        if (data['team_key'] && !(typeof data['team_key'] === 'string' || data['team_key'] instanceof String)) {
            throw new Error("Expected the field `team_key` to be a primitive type in the JSON string but got " + data['team_key']);
        }

        return true;
    }


}



/**
 * Number of matches the team was disqualified for.
 * @member {Number} dq
 */
TeamEventStatusRankRanking.prototype['dq'] = undefined;

/**
 * Number of matches played.
 * @member {Number} matches_played
 */
TeamEventStatusRankRanking.prototype['matches_played'] = undefined;

/**
 * For some years, average qualification score. Can be null.
 * @member {Number} qual_average
 */
TeamEventStatusRankRanking.prototype['qual_average'] = undefined;

/**
 * Relative rank of this team.
 * @member {Number} rank
 */
TeamEventStatusRankRanking.prototype['rank'] = undefined;

/**
 * @member {module:model/WLTRecord} record
 */
TeamEventStatusRankRanking.prototype['record'] = undefined;

/**
 * Ordered list of values used to determine the rank. See the `sort_order_info` property for the name of each value.
 * @member {Array.<Number>} sort_orders
 */
TeamEventStatusRankRanking.prototype['sort_orders'] = undefined;

/**
 * TBA team key for this rank.
 * @member {String} team_key
 */
TeamEventStatusRankRanking.prototype['team_key'] = undefined;






export default TeamEventStatusRankRanking;

