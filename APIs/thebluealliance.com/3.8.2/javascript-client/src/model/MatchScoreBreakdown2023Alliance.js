/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MatchScoreBreakdown2023AllianceAutoCommunity from './MatchScoreBreakdown2023AllianceAutoCommunity';
import MatchScoreBreakdown2023AllianceLinksInner from './MatchScoreBreakdown2023AllianceLinksInner';

/**
 * The MatchScoreBreakdown2023Alliance model module.
 * @module model/MatchScoreBreakdown2023Alliance
 * @version 3.8.2
 */
class MatchScoreBreakdown2023Alliance {
    /**
     * Constructs a new <code>MatchScoreBreakdown2023Alliance</code>.
     * @alias module:model/MatchScoreBreakdown2023Alliance
     */
    constructor() { 
        
        MatchScoreBreakdown2023Alliance.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MatchScoreBreakdown2023Alliance</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MatchScoreBreakdown2023Alliance} obj Optional instance to populate.
     * @return {module:model/MatchScoreBreakdown2023Alliance} The populated <code>MatchScoreBreakdown2023Alliance</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MatchScoreBreakdown2023Alliance();

            if (data.hasOwnProperty('activationBonusAchieved')) {
                obj['activationBonusAchieved'] = ApiClient.convertToType(data['activationBonusAchieved'], 'Boolean');
            }
            if (data.hasOwnProperty('adjustPoints')) {
                obj['adjustPoints'] = ApiClient.convertToType(data['adjustPoints'], 'Number');
            }
            if (data.hasOwnProperty('autoBridgeState')) {
                obj['autoBridgeState'] = ApiClient.convertToType(data['autoBridgeState'], 'String');
            }
            if (data.hasOwnProperty('autoChargeStationPoints')) {
                obj['autoChargeStationPoints'] = ApiClient.convertToType(data['autoChargeStationPoints'], 'Number');
            }
            if (data.hasOwnProperty('autoChargeStationRobot1')) {
                obj['autoChargeStationRobot1'] = ApiClient.convertToType(data['autoChargeStationRobot1'], 'String');
            }
            if (data.hasOwnProperty('autoChargeStationRobot2')) {
                obj['autoChargeStationRobot2'] = ApiClient.convertToType(data['autoChargeStationRobot2'], 'String');
            }
            if (data.hasOwnProperty('autoChargeStationRobot3')) {
                obj['autoChargeStationRobot3'] = ApiClient.convertToType(data['autoChargeStationRobot3'], 'String');
            }
            if (data.hasOwnProperty('autoCommunity')) {
                obj['autoCommunity'] = MatchScoreBreakdown2023AllianceAutoCommunity.constructFromObject(data['autoCommunity']);
            }
            if (data.hasOwnProperty('autoDocked')) {
                obj['autoDocked'] = ApiClient.convertToType(data['autoDocked'], 'Boolean');
            }
            if (data.hasOwnProperty('autoGamePieceCount')) {
                obj['autoGamePieceCount'] = ApiClient.convertToType(data['autoGamePieceCount'], 'Number');
            }
            if (data.hasOwnProperty('autoGamePiecePoints')) {
                obj['autoGamePiecePoints'] = ApiClient.convertToType(data['autoGamePiecePoints'], 'Number');
            }
            if (data.hasOwnProperty('autoMobilityPoints')) {
                obj['autoMobilityPoints'] = ApiClient.convertToType(data['autoMobilityPoints'], 'Number');
            }
            if (data.hasOwnProperty('autoPoints')) {
                obj['autoPoints'] = ApiClient.convertToType(data['autoPoints'], 'Number');
            }
            if (data.hasOwnProperty('coopGamePieceCount')) {
                obj['coopGamePieceCount'] = ApiClient.convertToType(data['coopGamePieceCount'], 'Number');
            }
            if (data.hasOwnProperty('coopertitionCriteriaMet')) {
                obj['coopertitionCriteriaMet'] = ApiClient.convertToType(data['coopertitionCriteriaMet'], 'Boolean');
            }
            if (data.hasOwnProperty('endGameBridgeState')) {
                obj['endGameBridgeState'] = ApiClient.convertToType(data['endGameBridgeState'], 'String');
            }
            if (data.hasOwnProperty('endGameChargeStationPoints')) {
                obj['endGameChargeStationPoints'] = ApiClient.convertToType(data['endGameChargeStationPoints'], 'Number');
            }
            if (data.hasOwnProperty('endGameChargeStationRobot1')) {
                obj['endGameChargeStationRobot1'] = ApiClient.convertToType(data['endGameChargeStationRobot1'], 'String');
            }
            if (data.hasOwnProperty('endGameChargeStationRobot2')) {
                obj['endGameChargeStationRobot2'] = ApiClient.convertToType(data['endGameChargeStationRobot2'], 'String');
            }
            if (data.hasOwnProperty('endGameChargeStationRobot3')) {
                obj['endGameChargeStationRobot3'] = ApiClient.convertToType(data['endGameChargeStationRobot3'], 'String');
            }
            if (data.hasOwnProperty('endGameParkPoints')) {
                obj['endGameParkPoints'] = ApiClient.convertToType(data['endGameParkPoints'], 'Number');
            }
            if (data.hasOwnProperty('extraGamePieceCount')) {
                obj['extraGamePieceCount'] = ApiClient.convertToType(data['extraGamePieceCount'], 'Number');
            }
            if (data.hasOwnProperty('foulCount')) {
                obj['foulCount'] = ApiClient.convertToType(data['foulCount'], 'Number');
            }
            if (data.hasOwnProperty('foulPoints')) {
                obj['foulPoints'] = ApiClient.convertToType(data['foulPoints'], 'Number');
            }
            if (data.hasOwnProperty('linkPoints')) {
                obj['linkPoints'] = ApiClient.convertToType(data['linkPoints'], 'Number');
            }
            if (data.hasOwnProperty('links')) {
                obj['links'] = ApiClient.convertToType(data['links'], [MatchScoreBreakdown2023AllianceLinksInner]);
            }
            if (data.hasOwnProperty('mobilityRobot1')) {
                obj['mobilityRobot1'] = ApiClient.convertToType(data['mobilityRobot1'], 'String');
            }
            if (data.hasOwnProperty('mobilityRobot2')) {
                obj['mobilityRobot2'] = ApiClient.convertToType(data['mobilityRobot2'], 'String');
            }
            if (data.hasOwnProperty('mobilityRobot3')) {
                obj['mobilityRobot3'] = ApiClient.convertToType(data['mobilityRobot3'], 'String');
            }
            if (data.hasOwnProperty('rp')) {
                obj['rp'] = ApiClient.convertToType(data['rp'], 'Number');
            }
            if (data.hasOwnProperty('sustainabilityBonusAchieved')) {
                obj['sustainabilityBonusAchieved'] = ApiClient.convertToType(data['sustainabilityBonusAchieved'], 'Boolean');
            }
            if (data.hasOwnProperty('techFoulCount')) {
                obj['techFoulCount'] = ApiClient.convertToType(data['techFoulCount'], 'Number');
            }
            if (data.hasOwnProperty('teleopCommunity')) {
                obj['teleopCommunity'] = MatchScoreBreakdown2023AllianceAutoCommunity.constructFromObject(data['teleopCommunity']);
            }
            if (data.hasOwnProperty('teleopGamePieceCount')) {
                obj['teleopGamePieceCount'] = ApiClient.convertToType(data['teleopGamePieceCount'], 'Number');
            }
            if (data.hasOwnProperty('teleopGamePiecePoints')) {
                obj['teleopGamePiecePoints'] = ApiClient.convertToType(data['teleopGamePiecePoints'], 'Number');
            }
            if (data.hasOwnProperty('teleopPoints')) {
                obj['teleopPoints'] = ApiClient.convertToType(data['teleopPoints'], 'Number');
            }
            if (data.hasOwnProperty('totalChargeStationPoints')) {
                obj['totalChargeStationPoints'] = ApiClient.convertToType(data['totalChargeStationPoints'], 'Number');
            }
            if (data.hasOwnProperty('totalPoints')) {
                obj['totalPoints'] = ApiClient.convertToType(data['totalPoints'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MatchScoreBreakdown2023Alliance</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MatchScoreBreakdown2023Alliance</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['autoBridgeState'] && !(typeof data['autoBridgeState'] === 'string' || data['autoBridgeState'] instanceof String)) {
            throw new Error("Expected the field `autoBridgeState` to be a primitive type in the JSON string but got " + data['autoBridgeState']);
        }
        // ensure the json data is a string
        if (data['autoChargeStationRobot1'] && !(typeof data['autoChargeStationRobot1'] === 'string' || data['autoChargeStationRobot1'] instanceof String)) {
            throw new Error("Expected the field `autoChargeStationRobot1` to be a primitive type in the JSON string but got " + data['autoChargeStationRobot1']);
        }
        // ensure the json data is a string
        if (data['autoChargeStationRobot2'] && !(typeof data['autoChargeStationRobot2'] === 'string' || data['autoChargeStationRobot2'] instanceof String)) {
            throw new Error("Expected the field `autoChargeStationRobot2` to be a primitive type in the JSON string but got " + data['autoChargeStationRobot2']);
        }
        // ensure the json data is a string
        if (data['autoChargeStationRobot3'] && !(typeof data['autoChargeStationRobot3'] === 'string' || data['autoChargeStationRobot3'] instanceof String)) {
            throw new Error("Expected the field `autoChargeStationRobot3` to be a primitive type in the JSON string but got " + data['autoChargeStationRobot3']);
        }
        // validate the optional field `autoCommunity`
        if (data['autoCommunity']) { // data not null
          MatchScoreBreakdown2023AllianceAutoCommunity.validateJSON(data['autoCommunity']);
        }
        // ensure the json data is a string
        if (data['endGameBridgeState'] && !(typeof data['endGameBridgeState'] === 'string' || data['endGameBridgeState'] instanceof String)) {
            throw new Error("Expected the field `endGameBridgeState` to be a primitive type in the JSON string but got " + data['endGameBridgeState']);
        }
        // ensure the json data is a string
        if (data['endGameChargeStationRobot1'] && !(typeof data['endGameChargeStationRobot1'] === 'string' || data['endGameChargeStationRobot1'] instanceof String)) {
            throw new Error("Expected the field `endGameChargeStationRobot1` to be a primitive type in the JSON string but got " + data['endGameChargeStationRobot1']);
        }
        // ensure the json data is a string
        if (data['endGameChargeStationRobot2'] && !(typeof data['endGameChargeStationRobot2'] === 'string' || data['endGameChargeStationRobot2'] instanceof String)) {
            throw new Error("Expected the field `endGameChargeStationRobot2` to be a primitive type in the JSON string but got " + data['endGameChargeStationRobot2']);
        }
        // ensure the json data is a string
        if (data['endGameChargeStationRobot3'] && !(typeof data['endGameChargeStationRobot3'] === 'string' || data['endGameChargeStationRobot3'] instanceof String)) {
            throw new Error("Expected the field `endGameChargeStationRobot3` to be a primitive type in the JSON string but got " + data['endGameChargeStationRobot3']);
        }
        if (data['links']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['links'])) {
                throw new Error("Expected the field `links` to be an array in the JSON data but got " + data['links']);
            }
            // validate the optional field `links` (array)
            for (const item of data['links']) {
                MatchScoreBreakdown2023AllianceLinksInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['mobilityRobot1'] && !(typeof data['mobilityRobot1'] === 'string' || data['mobilityRobot1'] instanceof String)) {
            throw new Error("Expected the field `mobilityRobot1` to be a primitive type in the JSON string but got " + data['mobilityRobot1']);
        }
        // ensure the json data is a string
        if (data['mobilityRobot2'] && !(typeof data['mobilityRobot2'] === 'string' || data['mobilityRobot2'] instanceof String)) {
            throw new Error("Expected the field `mobilityRobot2` to be a primitive type in the JSON string but got " + data['mobilityRobot2']);
        }
        // ensure the json data is a string
        if (data['mobilityRobot3'] && !(typeof data['mobilityRobot3'] === 'string' || data['mobilityRobot3'] instanceof String)) {
            throw new Error("Expected the field `mobilityRobot3` to be a primitive type in the JSON string but got " + data['mobilityRobot3']);
        }
        // validate the optional field `teleopCommunity`
        if (data['teleopCommunity']) { // data not null
          MatchScoreBreakdown2023AllianceAutoCommunity.validateJSON(data['teleopCommunity']);
        }

        return true;
    }


}



/**
 * @member {Boolean} activationBonusAchieved
 */
MatchScoreBreakdown2023Alliance.prototype['activationBonusAchieved'] = undefined;

/**
 * @member {Number} adjustPoints
 */
MatchScoreBreakdown2023Alliance.prototype['adjustPoints'] = undefined;

/**
 * @member {module:model/MatchScoreBreakdown2023Alliance.AutoBridgeStateEnum} autoBridgeState
 */
MatchScoreBreakdown2023Alliance.prototype['autoBridgeState'] = undefined;

/**
 * @member {Number} autoChargeStationPoints
 */
MatchScoreBreakdown2023Alliance.prototype['autoChargeStationPoints'] = undefined;

/**
 * @member {module:model/MatchScoreBreakdown2023Alliance.AutoChargeStationRobot1Enum} autoChargeStationRobot1
 */
MatchScoreBreakdown2023Alliance.prototype['autoChargeStationRobot1'] = undefined;

/**
 * @member {module:model/MatchScoreBreakdown2023Alliance.AutoChargeStationRobot2Enum} autoChargeStationRobot2
 */
MatchScoreBreakdown2023Alliance.prototype['autoChargeStationRobot2'] = undefined;

/**
 * @member {module:model/MatchScoreBreakdown2023Alliance.AutoChargeStationRobot3Enum} autoChargeStationRobot3
 */
MatchScoreBreakdown2023Alliance.prototype['autoChargeStationRobot3'] = undefined;

/**
 * @member {module:model/MatchScoreBreakdown2023AllianceAutoCommunity} autoCommunity
 */
MatchScoreBreakdown2023Alliance.prototype['autoCommunity'] = undefined;

/**
 * @member {Boolean} autoDocked
 */
MatchScoreBreakdown2023Alliance.prototype['autoDocked'] = undefined;

/**
 * @member {Number} autoGamePieceCount
 */
MatchScoreBreakdown2023Alliance.prototype['autoGamePieceCount'] = undefined;

/**
 * @member {Number} autoGamePiecePoints
 */
MatchScoreBreakdown2023Alliance.prototype['autoGamePiecePoints'] = undefined;

/**
 * @member {Number} autoMobilityPoints
 */
MatchScoreBreakdown2023Alliance.prototype['autoMobilityPoints'] = undefined;

/**
 * @member {Number} autoPoints
 */
MatchScoreBreakdown2023Alliance.prototype['autoPoints'] = undefined;

/**
 * @member {Number} coopGamePieceCount
 */
MatchScoreBreakdown2023Alliance.prototype['coopGamePieceCount'] = undefined;

/**
 * @member {Boolean} coopertitionCriteriaMet
 */
MatchScoreBreakdown2023Alliance.prototype['coopertitionCriteriaMet'] = undefined;

/**
 * @member {module:model/MatchScoreBreakdown2023Alliance.EndGameBridgeStateEnum} endGameBridgeState
 */
MatchScoreBreakdown2023Alliance.prototype['endGameBridgeState'] = undefined;

/**
 * @member {Number} endGameChargeStationPoints
 */
MatchScoreBreakdown2023Alliance.prototype['endGameChargeStationPoints'] = undefined;

/**
 * @member {module:model/MatchScoreBreakdown2023Alliance.EndGameChargeStationRobot1Enum} endGameChargeStationRobot1
 */
MatchScoreBreakdown2023Alliance.prototype['endGameChargeStationRobot1'] = undefined;

/**
 * @member {module:model/MatchScoreBreakdown2023Alliance.EndGameChargeStationRobot2Enum} endGameChargeStationRobot2
 */
MatchScoreBreakdown2023Alliance.prototype['endGameChargeStationRobot2'] = undefined;

/**
 * @member {module:model/MatchScoreBreakdown2023Alliance.EndGameChargeStationRobot3Enum} endGameChargeStationRobot3
 */
MatchScoreBreakdown2023Alliance.prototype['endGameChargeStationRobot3'] = undefined;

/**
 * @member {Number} endGameParkPoints
 */
MatchScoreBreakdown2023Alliance.prototype['endGameParkPoints'] = undefined;

/**
 * @member {Number} extraGamePieceCount
 */
MatchScoreBreakdown2023Alliance.prototype['extraGamePieceCount'] = undefined;

/**
 * @member {Number} foulCount
 */
MatchScoreBreakdown2023Alliance.prototype['foulCount'] = undefined;

/**
 * @member {Number} foulPoints
 */
MatchScoreBreakdown2023Alliance.prototype['foulPoints'] = undefined;

/**
 * @member {Number} linkPoints
 */
MatchScoreBreakdown2023Alliance.prototype['linkPoints'] = undefined;

/**
 * @member {Array.<module:model/MatchScoreBreakdown2023AllianceLinksInner>} links
 */
MatchScoreBreakdown2023Alliance.prototype['links'] = undefined;

/**
 * @member {module:model/MatchScoreBreakdown2023Alliance.MobilityRobot1Enum} mobilityRobot1
 */
MatchScoreBreakdown2023Alliance.prototype['mobilityRobot1'] = undefined;

/**
 * @member {module:model/MatchScoreBreakdown2023Alliance.MobilityRobot2Enum} mobilityRobot2
 */
MatchScoreBreakdown2023Alliance.prototype['mobilityRobot2'] = undefined;

/**
 * @member {module:model/MatchScoreBreakdown2023Alliance.MobilityRobot3Enum} mobilityRobot3
 */
MatchScoreBreakdown2023Alliance.prototype['mobilityRobot3'] = undefined;

/**
 * @member {Number} rp
 */
MatchScoreBreakdown2023Alliance.prototype['rp'] = undefined;

/**
 * @member {Boolean} sustainabilityBonusAchieved
 */
MatchScoreBreakdown2023Alliance.prototype['sustainabilityBonusAchieved'] = undefined;

/**
 * @member {Number} techFoulCount
 */
MatchScoreBreakdown2023Alliance.prototype['techFoulCount'] = undefined;

/**
 * @member {module:model/MatchScoreBreakdown2023AllianceAutoCommunity} teleopCommunity
 */
MatchScoreBreakdown2023Alliance.prototype['teleopCommunity'] = undefined;

/**
 * @member {Number} teleopGamePieceCount
 */
MatchScoreBreakdown2023Alliance.prototype['teleopGamePieceCount'] = undefined;

/**
 * @member {Number} teleopGamePiecePoints
 */
MatchScoreBreakdown2023Alliance.prototype['teleopGamePiecePoints'] = undefined;

/**
 * @member {Number} teleopPoints
 */
MatchScoreBreakdown2023Alliance.prototype['teleopPoints'] = undefined;

/**
 * @member {Number} totalChargeStationPoints
 */
MatchScoreBreakdown2023Alliance.prototype['totalChargeStationPoints'] = undefined;

/**
 * @member {Number} totalPoints
 */
MatchScoreBreakdown2023Alliance.prototype['totalPoints'] = undefined;





/**
 * Allowed values for the <code>autoBridgeState</code> property.
 * @enum {String}
 * @readonly
 */
MatchScoreBreakdown2023Alliance['AutoBridgeStateEnum'] = {

    /**
     * value: "NotLevel"
     * @const
     */
    "NotLevel": "NotLevel",

    /**
     * value: "Level"
     * @const
     */
    "Level": "Level"
};


/**
 * Allowed values for the <code>autoChargeStationRobot1</code> property.
 * @enum {String}
 * @readonly
 */
MatchScoreBreakdown2023Alliance['AutoChargeStationRobot1Enum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "Docked"
     * @const
     */
    "Docked": "Docked"
};


/**
 * Allowed values for the <code>autoChargeStationRobot2</code> property.
 * @enum {String}
 * @readonly
 */
MatchScoreBreakdown2023Alliance['AutoChargeStationRobot2Enum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "Docked"
     * @const
     */
    "Docked": "Docked"
};


/**
 * Allowed values for the <code>autoChargeStationRobot3</code> property.
 * @enum {String}
 * @readonly
 */
MatchScoreBreakdown2023Alliance['AutoChargeStationRobot3Enum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "Docked"
     * @const
     */
    "Docked": "Docked"
};


/**
 * Allowed values for the <code>endGameBridgeState</code> property.
 * @enum {String}
 * @readonly
 */
MatchScoreBreakdown2023Alliance['EndGameBridgeStateEnum'] = {

    /**
     * value: "NotLevel"
     * @const
     */
    "NotLevel": "NotLevel",

    /**
     * value: "Level"
     * @const
     */
    "Level": "Level"
};


/**
 * Allowed values for the <code>endGameChargeStationRobot1</code> property.
 * @enum {String}
 * @readonly
 */
MatchScoreBreakdown2023Alliance['EndGameChargeStationRobot1Enum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "Docked"
     * @const
     */
    "Docked": "Docked"
};


/**
 * Allowed values for the <code>endGameChargeStationRobot2</code> property.
 * @enum {String}
 * @readonly
 */
MatchScoreBreakdown2023Alliance['EndGameChargeStationRobot2Enum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "Docked"
     * @const
     */
    "Docked": "Docked"
};


/**
 * Allowed values for the <code>endGameChargeStationRobot3</code> property.
 * @enum {String}
 * @readonly
 */
MatchScoreBreakdown2023Alliance['EndGameChargeStationRobot3Enum'] = {

    /**
     * value: "None"
     * @const
     */
    "None": "None",

    /**
     * value: "Docked"
     * @const
     */
    "Docked": "Docked"
};


/**
 * Allowed values for the <code>mobilityRobot1</code> property.
 * @enum {String}
 * @readonly
 */
MatchScoreBreakdown2023Alliance['MobilityRobot1Enum'] = {

    /**
     * value: "true"
     * @const
     */
    "true": "true",

    /**
     * value: "false"
     * @const
     */
    "false": "false"
};


/**
 * Allowed values for the <code>mobilityRobot2</code> property.
 * @enum {String}
 * @readonly
 */
MatchScoreBreakdown2023Alliance['MobilityRobot2Enum'] = {

    /**
     * value: "true"
     * @const
     */
    "true": "true",

    /**
     * value: "false"
     * @const
     */
    "false": "false"
};


/**
 * Allowed values for the <code>mobilityRobot3</code> property.
 * @enum {String}
 * @readonly
 */
MatchScoreBreakdown2023Alliance['MobilityRobot3Enum'] = {

    /**
     * value: "true"
     * @const
     */
    "true": "true",

    /**
     * value: "false"
     * @const
     */
    "false": "false"
};



export default MatchScoreBreakdown2023Alliance;

