/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ZebraTeam model module.
 * @module model/ZebraTeam
 * @version 3.8.2
 */
class ZebraTeam {
    /**
     * Constructs a new <code>ZebraTeam</code>.
     * @alias module:model/ZebraTeam
     * @param teamKey {String} The TBA team key for the Zebra MotionWorks data.
     * @param xs {Array.<Number>} A list containing doubles and nulls representing a teams X position in feet at the corresponding timestamp. A null value represents no tracking data for a given timestamp.
     * @param ys {Array.<Number>} A list containing doubles and nulls representing a teams Y position in feet at the corresponding timestamp. A null value represents no tracking data for a given timestamp.
     */
    constructor(teamKey, xs, ys) { 
        
        ZebraTeam.initialize(this, teamKey, xs, ys);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, teamKey, xs, ys) { 
        obj['team_key'] = teamKey;
        obj['xs'] = xs;
        obj['ys'] = ys;
    }

    /**
     * Constructs a <code>ZebraTeam</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ZebraTeam} obj Optional instance to populate.
     * @return {module:model/ZebraTeam} The populated <code>ZebraTeam</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ZebraTeam();

            if (data.hasOwnProperty('team_key')) {
                obj['team_key'] = ApiClient.convertToType(data['team_key'], 'String');
            }
            if (data.hasOwnProperty('xs')) {
                obj['xs'] = ApiClient.convertToType(data['xs'], ['Number']);
            }
            if (data.hasOwnProperty('ys')) {
                obj['ys'] = ApiClient.convertToType(data['ys'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ZebraTeam</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ZebraTeam</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ZebraTeam.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['team_key'] && !(typeof data['team_key'] === 'string' || data['team_key'] instanceof String)) {
            throw new Error("Expected the field `team_key` to be a primitive type in the JSON string but got " + data['team_key']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['xs'])) {
            throw new Error("Expected the field `xs` to be an array in the JSON data but got " + data['xs']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ys'])) {
            throw new Error("Expected the field `ys` to be an array in the JSON data but got " + data['ys']);
        }

        return true;
    }


}

ZebraTeam.RequiredProperties = ["team_key", "xs", "ys"];

/**
 * The TBA team key for the Zebra MotionWorks data.
 * @member {String} team_key
 */
ZebraTeam.prototype['team_key'] = undefined;

/**
 * A list containing doubles and nulls representing a teams X position in feet at the corresponding timestamp. A null value represents no tracking data for a given timestamp.
 * @member {Array.<Number>} xs
 */
ZebraTeam.prototype['xs'] = undefined;

/**
 * A list containing doubles and nulls representing a teams Y position in feet at the corresponding timestamp. A null value represents no tracking data for a given timestamp.
 * @member {Array.<Number>} ys
 */
ZebraTeam.prototype['ys'] = undefined;






export default ZebraTeam;

