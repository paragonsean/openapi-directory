/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDistrict_Ranking_event_points_inner.h
 *
 * 
 */

#ifndef OAIDistrict_Ranking_event_points_inner_H
#define OAIDistrict_Ranking_event_points_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDistrict_Ranking_event_points_inner : public OAIObject {
public:
    OAIDistrict_Ranking_event_points_inner();
    OAIDistrict_Ranking_event_points_inner(QString json);
    ~OAIDistrict_Ranking_event_points_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAlliancePoints() const;
    void setAlliancePoints(const qint32 &alliance_points);
    bool is_alliance_points_Set() const;
    bool is_alliance_points_Valid() const;

    qint32 getAwardPoints() const;
    void setAwardPoints(const qint32 &award_points);
    bool is_award_points_Set() const;
    bool is_award_points_Valid() const;

    bool isDistrictCmp() const;
    void setDistrictCmp(const bool &district_cmp);
    bool is_district_cmp_Set() const;
    bool is_district_cmp_Valid() const;

    qint32 getElimPoints() const;
    void setElimPoints(const qint32 &elim_points);
    bool is_elim_points_Set() const;
    bool is_elim_points_Valid() const;

    QString getEventKey() const;
    void setEventKey(const QString &event_key);
    bool is_event_key_Set() const;
    bool is_event_key_Valid() const;

    qint32 getQualPoints() const;
    void setQualPoints(const qint32 &qual_points);
    bool is_qual_points_Set() const;
    bool is_qual_points_Valid() const;

    qint32 getTotal() const;
    void setTotal(const qint32 &total);
    bool is_total_Set() const;
    bool is_total_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_alliance_points;
    bool m_alliance_points_isSet;
    bool m_alliance_points_isValid;

    qint32 m_award_points;
    bool m_award_points_isSet;
    bool m_award_points_isValid;

    bool m_district_cmp;
    bool m_district_cmp_isSet;
    bool m_district_cmp_isValid;

    qint32 m_elim_points;
    bool m_elim_points_isSet;
    bool m_elim_points_isValid;

    QString m_event_key;
    bool m_event_key_isSet;
    bool m_event_key_isValid;

    qint32 m_qual_points;
    bool m_qual_points_isSet;
    bool m_qual_points_isValid;

    qint32 m_total;
    bool m_total_isSet;
    bool m_total_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDistrict_Ranking_event_points_inner)

#endif // OAIDistrict_Ranking_event_points_inner_H
