/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITeam_Event_Status_rank_ranking.h
 *
 * 
 */

#ifndef OAITeam_Event_Status_rank_ranking_H
#define OAITeam_Event_Status_rank_ranking_H

#include <QJsonObject>

#include "OAIWLT_Record.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIWLT_Record;

class OAITeam_Event_Status_rank_ranking : public OAIObject {
public:
    OAITeam_Event_Status_rank_ranking();
    OAITeam_Event_Status_rank_ranking(QString json);
    ~OAITeam_Event_Status_rank_ranking() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDq() const;
    void setDq(const qint32 &dq);
    bool is_dq_Set() const;
    bool is_dq_Valid() const;

    qint32 getMatchesPlayed() const;
    void setMatchesPlayed(const qint32 &matches_played);
    bool is_matches_played_Set() const;
    bool is_matches_played_Valid() const;

    double getQualAverage() const;
    void setQualAverage(const double &qual_average);
    bool is_qual_average_Set() const;
    bool is_qual_average_Valid() const;

    qint32 getRank() const;
    void setRank(const qint32 &rank);
    bool is_rank_Set() const;
    bool is_rank_Valid() const;

    OAIWLT_Record getRecord() const;
    void setRecord(const OAIWLT_Record &record);
    bool is_record_Set() const;
    bool is_record_Valid() const;

    QList<double> getSortOrders() const;
    void setSortOrders(const QList<double> &sort_orders);
    bool is_sort_orders_Set() const;
    bool is_sort_orders_Valid() const;

    QString getTeamKey() const;
    void setTeamKey(const QString &team_key);
    bool is_team_key_Set() const;
    bool is_team_key_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_dq;
    bool m_dq_isSet;
    bool m_dq_isValid;

    qint32 m_matches_played;
    bool m_matches_played_isSet;
    bool m_matches_played_isValid;

    double m_qual_average;
    bool m_qual_average_isSet;
    bool m_qual_average_isValid;

    qint32 m_rank;
    bool m_rank_isSet;
    bool m_rank_isValid;

    OAIWLT_Record m_record;
    bool m_record_isSet;
    bool m_record_isValid;

    QList<double> m_sort_orders;
    bool m_sort_orders_isSet;
    bool m_sort_orders_isValid;

    QString m_team_key;
    bool m_team_key_isSet;
    bool m_team_key_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITeam_Event_Status_rank_ranking)

#endif // OAITeam_Event_Status_rank_ranking_H
