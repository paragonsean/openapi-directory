/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEvent_Simple.h
 *
 * 
 */

#ifndef OAIEvent_Simple_H
#define OAIEvent_Simple_H

#include <QJsonObject>

#include "OAIDistrict_List.h"
#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDistrict_List;

class OAIEvent_Simple : public OAIObject {
public:
    OAIEvent_Simple();
    OAIEvent_Simple(QString json);
    ~OAIEvent_Simple() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    OAIDistrict_List getDistrict() const;
    void setDistrict(const OAIDistrict_List &district);
    bool is_district_Set() const;
    bool is_district_Valid() const;

    QDate getEndDate() const;
    void setEndDate(const QDate &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QString getEventCode() const;
    void setEventCode(const QString &event_code);
    bool is_event_code_Set() const;
    bool is_event_code_Valid() const;

    qint32 getEventType() const;
    void setEventType(const qint32 &event_type);
    bool is_event_type_Set() const;
    bool is_event_type_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QDate getStartDate() const;
    void setStartDate(const QDate &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getStateProv() const;
    void setStateProv(const QString &state_prov);
    bool is_state_prov_Set() const;
    bool is_state_prov_Valid() const;

    qint32 getYear() const;
    void setYear(const qint32 &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    OAIDistrict_List m_district;
    bool m_district_isSet;
    bool m_district_isValid;

    QDate m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QString m_event_code;
    bool m_event_code_isSet;
    bool m_event_code_isValid;

    qint32 m_event_type;
    bool m_event_type_isSet;
    bool m_event_type_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QDate m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_state_prov;
    bool m_state_prov_isSet;
    bool m_state_prov_isValid;

    qint32 m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEvent_Simple)

#endif // OAIEvent_Simple_H
