/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEvent.h
 *
 * 
 */

#ifndef OAIEvent_H
#define OAIEvent_H

#include <QJsonObject>

#include "OAIDistrict_List.h"
#include "OAIWebcast.h"
#include <QDate>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDistrict_List;
class OAIWebcast;

class OAIEvent : public OAIObject {
public:
    OAIEvent();
    OAIEvent(QString json);
    ~OAIEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    QString getCity() const;
    void setCity(const QString &city);
    bool is_city_Set() const;
    bool is_city_Valid() const;

    QString getCountry() const;
    void setCountry(const QString &country);
    bool is_country_Set() const;
    bool is_country_Valid() const;

    OAIDistrict_List getDistrict() const;
    void setDistrict(const OAIDistrict_List &district);
    bool is_district_Set() const;
    bool is_district_Valid() const;

    QList<QString> getDivisionKeys() const;
    void setDivisionKeys(const QList<QString> &division_keys);
    bool is_division_keys_Set() const;
    bool is_division_keys_Valid() const;

    QDate getEndDate() const;
    void setEndDate(const QDate &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    QString getEventCode() const;
    void setEventCode(const QString &event_code);
    bool is_event_code_Set() const;
    bool is_event_code_Valid() const;

    qint32 getEventType() const;
    void setEventType(const qint32 &event_type);
    bool is_event_type_Set() const;
    bool is_event_type_Valid() const;

    QString getEventTypeString() const;
    void setEventTypeString(const QString &event_type_string);
    bool is_event_type_string_Set() const;
    bool is_event_type_string_Valid() const;

    QString getFirstEventCode() const;
    void setFirstEventCode(const QString &first_event_code);
    bool is_first_event_code_Set() const;
    bool is_first_event_code_Valid() const;

    QString getFirstEventId() const;
    void setFirstEventId(const QString &first_event_id);
    bool is_first_event_id_Set() const;
    bool is_first_event_id_Valid() const;

    QString getGmapsPlaceId() const;
    void setGmapsPlaceId(const QString &gmaps_place_id);
    bool is_gmaps_place_id_Set() const;
    bool is_gmaps_place_id_Valid() const;

    QString getGmapsUrl() const;
    void setGmapsUrl(const QString &gmaps_url);
    bool is_gmaps_url_Set() const;
    bool is_gmaps_url_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    double getLat() const;
    void setLat(const double &lat);
    bool is_lat_Set() const;
    bool is_lat_Valid() const;

    double getLng() const;
    void setLng(const double &lng);
    bool is_lng_Set() const;
    bool is_lng_Valid() const;

    QString getLocationName() const;
    void setLocationName(const QString &location_name);
    bool is_location_name_Set() const;
    bool is_location_name_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getParentEventKey() const;
    void setParentEventKey(const QString &parent_event_key);
    bool is_parent_event_key_Set() const;
    bool is_parent_event_key_Valid() const;

    qint32 getPlayoffType() const;
    void setPlayoffType(const qint32 &playoff_type);
    bool is_playoff_type_Set() const;
    bool is_playoff_type_Valid() const;

    QString getPlayoffTypeString() const;
    void setPlayoffTypeString(const QString &playoff_type_string);
    bool is_playoff_type_string_Set() const;
    bool is_playoff_type_string_Valid() const;

    QString getPostalCode() const;
    void setPostalCode(const QString &postal_code);
    bool is_postal_code_Set() const;
    bool is_postal_code_Valid() const;

    QString getShortName() const;
    void setShortName(const QString &short_name);
    bool is_short_name_Set() const;
    bool is_short_name_Valid() const;

    QDate getStartDate() const;
    void setStartDate(const QDate &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getStateProv() const;
    void setStateProv(const QString &state_prov);
    bool is_state_prov_Set() const;
    bool is_state_prov_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    QList<OAIWebcast> getWebcasts() const;
    void setWebcasts(const QList<OAIWebcast> &webcasts);
    bool is_webcasts_Set() const;
    bool is_webcasts_Valid() const;

    QString getWebsite() const;
    void setWebsite(const QString &website);
    bool is_website_Set() const;
    bool is_website_Valid() const;

    qint32 getWeek() const;
    void setWeek(const qint32 &week);
    bool is_week_Set() const;
    bool is_week_Valid() const;

    qint32 getYear() const;
    void setYear(const qint32 &year);
    bool is_year_Set() const;
    bool is_year_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    QString m_city;
    bool m_city_isSet;
    bool m_city_isValid;

    QString m_country;
    bool m_country_isSet;
    bool m_country_isValid;

    OAIDistrict_List m_district;
    bool m_district_isSet;
    bool m_district_isValid;

    QList<QString> m_division_keys;
    bool m_division_keys_isSet;
    bool m_division_keys_isValid;

    QDate m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    QString m_event_code;
    bool m_event_code_isSet;
    bool m_event_code_isValid;

    qint32 m_event_type;
    bool m_event_type_isSet;
    bool m_event_type_isValid;

    QString m_event_type_string;
    bool m_event_type_string_isSet;
    bool m_event_type_string_isValid;

    QString m_first_event_code;
    bool m_first_event_code_isSet;
    bool m_first_event_code_isValid;

    QString m_first_event_id;
    bool m_first_event_id_isSet;
    bool m_first_event_id_isValid;

    QString m_gmaps_place_id;
    bool m_gmaps_place_id_isSet;
    bool m_gmaps_place_id_isValid;

    QString m_gmaps_url;
    bool m_gmaps_url_isSet;
    bool m_gmaps_url_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    double m_lat;
    bool m_lat_isSet;
    bool m_lat_isValid;

    double m_lng;
    bool m_lng_isSet;
    bool m_lng_isValid;

    QString m_location_name;
    bool m_location_name_isSet;
    bool m_location_name_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_parent_event_key;
    bool m_parent_event_key_isSet;
    bool m_parent_event_key_isValid;

    qint32 m_playoff_type;
    bool m_playoff_type_isSet;
    bool m_playoff_type_isValid;

    QString m_playoff_type_string;
    bool m_playoff_type_string_isSet;
    bool m_playoff_type_string_isValid;

    QString m_postal_code;
    bool m_postal_code_isSet;
    bool m_postal_code_isValid;

    QString m_short_name;
    bool m_short_name_isSet;
    bool m_short_name_isValid;

    QDate m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_state_prov;
    bool m_state_prov_isSet;
    bool m_state_prov_isValid;

    QString m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;

    QList<OAIWebcast> m_webcasts;
    bool m_webcasts_isSet;
    bool m_webcasts_isValid;

    QString m_website;
    bool m_website_isSet;
    bool m_website_isValid;

    qint32 m_week;
    bool m_week_isSet;
    bool m_week_isValid;

    qint32 m_year;
    bool m_year_isSet;
    bool m_year_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEvent)

#endif // OAIEvent_H
