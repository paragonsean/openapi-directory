/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITeam_Event_Status.h
 *
 * 
 */

#ifndef OAITeam_Event_Status_H
#define OAITeam_Event_Status_H

#include <QJsonObject>

#include "OAITeam_Event_Status_alliance.h"
#include "OAITeam_Event_Status_playoff.h"
#include "OAITeam_Event_Status_rank.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITeam_Event_Status_alliance;
class OAITeam_Event_Status_playoff;
class OAITeam_Event_Status_rank;

class OAITeam_Event_Status : public OAIObject {
public:
    OAITeam_Event_Status();
    OAITeam_Event_Status(QString json);
    ~OAITeam_Event_Status() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITeam_Event_Status_alliance getAlliance() const;
    void setAlliance(const OAITeam_Event_Status_alliance &alliance);
    bool is_alliance_Set() const;
    bool is_alliance_Valid() const;

    QString getAllianceStatusStr() const;
    void setAllianceStatusStr(const QString &alliance_status_str);
    bool is_alliance_status_str_Set() const;
    bool is_alliance_status_str_Valid() const;

    QString getLastMatchKey() const;
    void setLastMatchKey(const QString &last_match_key);
    bool is_last_match_key_Set() const;
    bool is_last_match_key_Valid() const;

    QString getNextMatchKey() const;
    void setNextMatchKey(const QString &next_match_key);
    bool is_next_match_key_Set() const;
    bool is_next_match_key_Valid() const;

    QString getOverallStatusStr() const;
    void setOverallStatusStr(const QString &overall_status_str);
    bool is_overall_status_str_Set() const;
    bool is_overall_status_str_Valid() const;

    OAITeam_Event_Status_playoff getPlayoff() const;
    void setPlayoff(const OAITeam_Event_Status_playoff &playoff);
    bool is_playoff_Set() const;
    bool is_playoff_Valid() const;

    QString getPlayoffStatusStr() const;
    void setPlayoffStatusStr(const QString &playoff_status_str);
    bool is_playoff_status_str_Set() const;
    bool is_playoff_status_str_Valid() const;

    OAITeam_Event_Status_rank getQual() const;
    void setQual(const OAITeam_Event_Status_rank &qual);
    bool is_qual_Set() const;
    bool is_qual_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITeam_Event_Status_alliance m_alliance;
    bool m_alliance_isSet;
    bool m_alliance_isValid;

    QString m_alliance_status_str;
    bool m_alliance_status_str_isSet;
    bool m_alliance_status_str_isValid;

    QString m_last_match_key;
    bool m_last_match_key_isSet;
    bool m_last_match_key_isValid;

    QString m_next_match_key;
    bool m_next_match_key_isSet;
    bool m_next_match_key_isValid;

    QString m_overall_status_str;
    bool m_overall_status_str_isSet;
    bool m_overall_status_str_isValid;

    OAITeam_Event_Status_playoff m_playoff;
    bool m_playoff_isSet;
    bool m_playoff_isValid;

    QString m_playoff_status_str;
    bool m_playoff_status_str_isSet;
    bool m_playoff_status_str_isValid;

    OAITeam_Event_Status_rank m_qual;
    bool m_qual_isSet;
    bool m_qual_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITeam_Event_Status)

#endif // OAITeam_Event_Status_H
