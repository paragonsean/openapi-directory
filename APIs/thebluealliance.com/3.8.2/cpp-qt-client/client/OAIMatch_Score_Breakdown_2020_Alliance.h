/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMatch_Score_Breakdown_2020_Alliance.h
 *
 * 
 */

#ifndef OAIMatch_Score_Breakdown_2020_Alliance_H
#define OAIMatch_Score_Breakdown_2020_Alliance_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMatch_Score_Breakdown_2020_Alliance : public OAIObject {
public:
    OAIMatch_Score_Breakdown_2020_Alliance();
    OAIMatch_Score_Breakdown_2020_Alliance(QString json);
    ~OAIMatch_Score_Breakdown_2020_Alliance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAdjustPoints() const;
    void setAdjustPoints(const qint32 &adjust_points);
    bool is_adjust_points_Set() const;
    bool is_adjust_points_Valid() const;

    qint32 getAutoCellPoints() const;
    void setAutoCellPoints(const qint32 &auto_cell_points);
    bool is_auto_cell_points_Set() const;
    bool is_auto_cell_points_Valid() const;

    qint32 getAutoCellsBottom() const;
    void setAutoCellsBottom(const qint32 &auto_cells_bottom);
    bool is_auto_cells_bottom_Set() const;
    bool is_auto_cells_bottom_Valid() const;

    qint32 getAutoCellsInner() const;
    void setAutoCellsInner(const qint32 &auto_cells_inner);
    bool is_auto_cells_inner_Set() const;
    bool is_auto_cells_inner_Valid() const;

    qint32 getAutoCellsOuter() const;
    void setAutoCellsOuter(const qint32 &auto_cells_outer);
    bool is_auto_cells_outer_Set() const;
    bool is_auto_cells_outer_Valid() const;

    qint32 getAutoInitLinePoints() const;
    void setAutoInitLinePoints(const qint32 &auto_init_line_points);
    bool is_auto_init_line_points_Set() const;
    bool is_auto_init_line_points_Valid() const;

    qint32 getAutoPoints() const;
    void setAutoPoints(const qint32 &auto_points);
    bool is_auto_points_Set() const;
    bool is_auto_points_Valid() const;

    qint32 getControlPanelPoints() const;
    void setControlPanelPoints(const qint32 &control_panel_points);
    bool is_control_panel_points_Set() const;
    bool is_control_panel_points_Valid() const;

    qint32 getEndgamePoints() const;
    void setEndgamePoints(const qint32 &endgame_points);
    bool is_endgame_points_Set() const;
    bool is_endgame_points_Valid() const;

    QString getEndgameRobot1() const;
    void setEndgameRobot1(const QString &endgame_robot1);
    bool is_endgame_robot1_Set() const;
    bool is_endgame_robot1_Valid() const;

    QString getEndgameRobot2() const;
    void setEndgameRobot2(const QString &endgame_robot2);
    bool is_endgame_robot2_Set() const;
    bool is_endgame_robot2_Valid() const;

    QString getEndgameRobot3() const;
    void setEndgameRobot3(const QString &endgame_robot3);
    bool is_endgame_robot3_Set() const;
    bool is_endgame_robot3_Valid() const;

    QString getEndgameRungIsLevel() const;
    void setEndgameRungIsLevel(const QString &endgame_rung_is_level);
    bool is_endgame_rung_is_level_Set() const;
    bool is_endgame_rung_is_level_Valid() const;

    qint32 getFoulCount() const;
    void setFoulCount(const qint32 &foul_count);
    bool is_foul_count_Set() const;
    bool is_foul_count_Valid() const;

    qint32 getFoulPoints() const;
    void setFoulPoints(const qint32 &foul_points);
    bool is_foul_points_Set() const;
    bool is_foul_points_Valid() const;

    QString getInitLineRobot1() const;
    void setInitLineRobot1(const QString &init_line_robot1);
    bool is_init_line_robot1_Set() const;
    bool is_init_line_robot1_Valid() const;

    QString getInitLineRobot2() const;
    void setInitLineRobot2(const QString &init_line_robot2);
    bool is_init_line_robot2_Set() const;
    bool is_init_line_robot2_Valid() const;

    QString getInitLineRobot3() const;
    void setInitLineRobot3(const QString &init_line_robot3);
    bool is_init_line_robot3_Set() const;
    bool is_init_line_robot3_Valid() const;

    qint32 getRp() const;
    void setRp(const qint32 &rp);
    bool is_rp_Set() const;
    bool is_rp_Valid() const;

    bool isShieldEnergizedRankingPoint() const;
    void setShieldEnergizedRankingPoint(const bool &shield_energized_ranking_point);
    bool is_shield_energized_ranking_point_Set() const;
    bool is_shield_energized_ranking_point_Valid() const;

    bool isShieldOperationalRankingPoint() const;
    void setShieldOperationalRankingPoint(const bool &shield_operational_ranking_point);
    bool is_shield_operational_ranking_point_Set() const;
    bool is_shield_operational_ranking_point_Valid() const;

    bool isStage1Activated() const;
    void setStage1Activated(const bool &stage1_activated);
    bool is_stage1_activated_Set() const;
    bool is_stage1_activated_Valid() const;

    bool isStage2Activated() const;
    void setStage2Activated(const bool &stage2_activated);
    bool is_stage2_activated_Set() const;
    bool is_stage2_activated_Valid() const;

    bool isStage3Activated() const;
    void setStage3Activated(const bool &stage3_activated);
    bool is_stage3_activated_Set() const;
    bool is_stage3_activated_Valid() const;

    QString getStage3TargetColor() const;
    void setStage3TargetColor(const QString &stage3_target_color);
    bool is_stage3_target_color_Set() const;
    bool is_stage3_target_color_Valid() const;

    qint32 getTbaNumRobotsHanging() const;
    void setTbaNumRobotsHanging(const qint32 &tba_num_robots_hanging);
    bool is_tba_num_robots_hanging_Set() const;
    bool is_tba_num_robots_hanging_Valid() const;

    bool isTbaShieldEnergizedRankingPointFromFoul() const;
    void setTbaShieldEnergizedRankingPointFromFoul(const bool &tba_shield_energized_ranking_point_from_foul);
    bool is_tba_shield_energized_ranking_point_from_foul_Set() const;
    bool is_tba_shield_energized_ranking_point_from_foul_Valid() const;

    qint32 getTechFoulCount() const;
    void setTechFoulCount(const qint32 &tech_foul_count);
    bool is_tech_foul_count_Set() const;
    bool is_tech_foul_count_Valid() const;

    qint32 getTeleopCellPoints() const;
    void setTeleopCellPoints(const qint32 &teleop_cell_points);
    bool is_teleop_cell_points_Set() const;
    bool is_teleop_cell_points_Valid() const;

    qint32 getTeleopCellsBottom() const;
    void setTeleopCellsBottom(const qint32 &teleop_cells_bottom);
    bool is_teleop_cells_bottom_Set() const;
    bool is_teleop_cells_bottom_Valid() const;

    qint32 getTeleopCellsInner() const;
    void setTeleopCellsInner(const qint32 &teleop_cells_inner);
    bool is_teleop_cells_inner_Set() const;
    bool is_teleop_cells_inner_Valid() const;

    qint32 getTeleopCellsOuter() const;
    void setTeleopCellsOuter(const qint32 &teleop_cells_outer);
    bool is_teleop_cells_outer_Set() const;
    bool is_teleop_cells_outer_Valid() const;

    qint32 getTeleopPoints() const;
    void setTeleopPoints(const qint32 &teleop_points);
    bool is_teleop_points_Set() const;
    bool is_teleop_points_Valid() const;

    qint32 getTotalPoints() const;
    void setTotalPoints(const qint32 &total_points);
    bool is_total_points_Set() const;
    bool is_total_points_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_adjust_points;
    bool m_adjust_points_isSet;
    bool m_adjust_points_isValid;

    qint32 m_auto_cell_points;
    bool m_auto_cell_points_isSet;
    bool m_auto_cell_points_isValid;

    qint32 m_auto_cells_bottom;
    bool m_auto_cells_bottom_isSet;
    bool m_auto_cells_bottom_isValid;

    qint32 m_auto_cells_inner;
    bool m_auto_cells_inner_isSet;
    bool m_auto_cells_inner_isValid;

    qint32 m_auto_cells_outer;
    bool m_auto_cells_outer_isSet;
    bool m_auto_cells_outer_isValid;

    qint32 m_auto_init_line_points;
    bool m_auto_init_line_points_isSet;
    bool m_auto_init_line_points_isValid;

    qint32 m_auto_points;
    bool m_auto_points_isSet;
    bool m_auto_points_isValid;

    qint32 m_control_panel_points;
    bool m_control_panel_points_isSet;
    bool m_control_panel_points_isValid;

    qint32 m_endgame_points;
    bool m_endgame_points_isSet;
    bool m_endgame_points_isValid;

    QString m_endgame_robot1;
    bool m_endgame_robot1_isSet;
    bool m_endgame_robot1_isValid;

    QString m_endgame_robot2;
    bool m_endgame_robot2_isSet;
    bool m_endgame_robot2_isValid;

    QString m_endgame_robot3;
    bool m_endgame_robot3_isSet;
    bool m_endgame_robot3_isValid;

    QString m_endgame_rung_is_level;
    bool m_endgame_rung_is_level_isSet;
    bool m_endgame_rung_is_level_isValid;

    qint32 m_foul_count;
    bool m_foul_count_isSet;
    bool m_foul_count_isValid;

    qint32 m_foul_points;
    bool m_foul_points_isSet;
    bool m_foul_points_isValid;

    QString m_init_line_robot1;
    bool m_init_line_robot1_isSet;
    bool m_init_line_robot1_isValid;

    QString m_init_line_robot2;
    bool m_init_line_robot2_isSet;
    bool m_init_line_robot2_isValid;

    QString m_init_line_robot3;
    bool m_init_line_robot3_isSet;
    bool m_init_line_robot3_isValid;

    qint32 m_rp;
    bool m_rp_isSet;
    bool m_rp_isValid;

    bool m_shield_energized_ranking_point;
    bool m_shield_energized_ranking_point_isSet;
    bool m_shield_energized_ranking_point_isValid;

    bool m_shield_operational_ranking_point;
    bool m_shield_operational_ranking_point_isSet;
    bool m_shield_operational_ranking_point_isValid;

    bool m_stage1_activated;
    bool m_stage1_activated_isSet;
    bool m_stage1_activated_isValid;

    bool m_stage2_activated;
    bool m_stage2_activated_isSet;
    bool m_stage2_activated_isValid;

    bool m_stage3_activated;
    bool m_stage3_activated_isSet;
    bool m_stage3_activated_isValid;

    QString m_stage3_target_color;
    bool m_stage3_target_color_isSet;
    bool m_stage3_target_color_isValid;

    qint32 m_tba_num_robots_hanging;
    bool m_tba_num_robots_hanging_isSet;
    bool m_tba_num_robots_hanging_isValid;

    bool m_tba_shield_energized_ranking_point_from_foul;
    bool m_tba_shield_energized_ranking_point_from_foul_isSet;
    bool m_tba_shield_energized_ranking_point_from_foul_isValid;

    qint32 m_tech_foul_count;
    bool m_tech_foul_count_isSet;
    bool m_tech_foul_count_isValid;

    qint32 m_teleop_cell_points;
    bool m_teleop_cell_points_isSet;
    bool m_teleop_cell_points_isValid;

    qint32 m_teleop_cells_bottom;
    bool m_teleop_cells_bottom_isSet;
    bool m_teleop_cells_bottom_isValid;

    qint32 m_teleop_cells_inner;
    bool m_teleop_cells_inner_isSet;
    bool m_teleop_cells_inner_isValid;

    qint32 m_teleop_cells_outer;
    bool m_teleop_cells_outer_isSet;
    bool m_teleop_cells_outer_isValid;

    qint32 m_teleop_points;
    bool m_teleop_points_isSet;
    bool m_teleop_points_isValid;

    qint32 m_total_points;
    bool m_total_points_isSet;
    bool m_total_points_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMatch_Score_Breakdown_2020_Alliance)

#endif // OAIMatch_Score_Breakdown_2020_Alliance_H
