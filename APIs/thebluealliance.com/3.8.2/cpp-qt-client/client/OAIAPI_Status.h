/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAPI_Status.h
 *
 * 
 */

#ifndef OAIAPI_Status_H
#define OAIAPI_Status_H

#include <QJsonObject>

#include "OAIAPI_Status_App_Version.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAPI_Status_App_Version;

class OAIAPI_Status : public OAIObject {
public:
    OAIAPI_Status();
    OAIAPI_Status(QString json);
    ~OAIAPI_Status() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAPI_Status_App_Version getAndroid() const;
    void setAndroid(const OAIAPI_Status_App_Version &android);
    bool is_android_Set() const;
    bool is_android_Valid() const;

    qint32 getCurrentSeason() const;
    void setCurrentSeason(const qint32 &current_season);
    bool is_current_season_Set() const;
    bool is_current_season_Valid() const;

    QList<QString> getDownEvents() const;
    void setDownEvents(const QList<QString> &down_events);
    bool is_down_events_Set() const;
    bool is_down_events_Valid() const;

    OAIAPI_Status_App_Version getIos() const;
    void setIos(const OAIAPI_Status_App_Version &ios);
    bool is_ios_Set() const;
    bool is_ios_Valid() const;

    bool isIsDatafeedDown() const;
    void setIsDatafeedDown(const bool &is_datafeed_down);
    bool is_is_datafeed_down_Set() const;
    bool is_is_datafeed_down_Valid() const;

    qint32 getMaxSeason() const;
    void setMaxSeason(const qint32 &max_season);
    bool is_max_season_Set() const;
    bool is_max_season_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAPI_Status_App_Version m_android;
    bool m_android_isSet;
    bool m_android_isValid;

    qint32 m_current_season;
    bool m_current_season_isSet;
    bool m_current_season_isValid;

    QList<QString> m_down_events;
    bool m_down_events_isSet;
    bool m_down_events_isValid;

    OAIAPI_Status_App_Version m_ios;
    bool m_ios_isSet;
    bool m_ios_isValid;

    bool m_is_datafeed_down;
    bool m_is_datafeed_down_isSet;
    bool m_is_datafeed_down_isValid;

    qint32 m_max_season;
    bool m_max_season_isSet;
    bool m_max_season_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAPI_Status)

#endif // OAIAPI_Status_H
