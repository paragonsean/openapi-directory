/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITeam_Event_Status_rank_sort_order_info_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITeam_Event_Status_rank_sort_order_info_inner::OAITeam_Event_Status_rank_sort_order_info_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITeam_Event_Status_rank_sort_order_info_inner::OAITeam_Event_Status_rank_sort_order_info_inner() {
    this->initializeModel();
}

OAITeam_Event_Status_rank_sort_order_info_inner::~OAITeam_Event_Status_rank_sort_order_info_inner() {}

void OAITeam_Event_Status_rank_sort_order_info_inner::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_precision_isSet = false;
    m_precision_isValid = false;
}

void OAITeam_Event_Status_rank_sort_order_info_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITeam_Event_Status_rank_sort_order_info_inner::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_precision_isValid = ::OpenAPI::fromJsonValue(m_precision, json[QString("precision")]);
    m_precision_isSet = !json[QString("precision")].isNull() && m_precision_isValid;
}

QString OAITeam_Event_Status_rank_sort_order_info_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITeam_Event_Status_rank_sort_order_info_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_precision_isSet) {
        obj.insert(QString("precision"), ::OpenAPI::toJsonValue(m_precision));
    }
    return obj;
}

QString OAITeam_Event_Status_rank_sort_order_info_inner::getName() const {
    return m_name;
}
void OAITeam_Event_Status_rank_sort_order_info_inner::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITeam_Event_Status_rank_sort_order_info_inner::is_name_Set() const{
    return m_name_isSet;
}

bool OAITeam_Event_Status_rank_sort_order_info_inner::is_name_Valid() const{
    return m_name_isValid;
}

qint32 OAITeam_Event_Status_rank_sort_order_info_inner::getPrecision() const {
    return m_precision;
}
void OAITeam_Event_Status_rank_sort_order_info_inner::setPrecision(const qint32 &precision) {
    m_precision = precision;
    m_precision_isSet = true;
}

bool OAITeam_Event_Status_rank_sort_order_info_inner::is_precision_Set() const{
    return m_precision_isSet;
}

bool OAITeam_Event_Status_rank_sort_order_info_inner::is_precision_Valid() const{
    return m_precision_isValid;
}

bool OAITeam_Event_Status_rank_sort_order_info_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_precision_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITeam_Event_Status_rank_sort_order_info_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
