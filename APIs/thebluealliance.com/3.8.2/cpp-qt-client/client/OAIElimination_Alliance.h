/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIElimination_Alliance.h
 *
 * 
 */

#ifndef OAIElimination_Alliance_H
#define OAIElimination_Alliance_H

#include <QJsonObject>

#include "OAIElimination_Alliance_backup.h"
#include "OAIElimination_Alliance_status.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIElimination_Alliance_backup;
class OAIElimination_Alliance_status;

class OAIElimination_Alliance : public OAIObject {
public:
    OAIElimination_Alliance();
    OAIElimination_Alliance(QString json);
    ~OAIElimination_Alliance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIElimination_Alliance_backup getBackup() const;
    void setBackup(const OAIElimination_Alliance_backup &backup);
    bool is_backup_Set() const;
    bool is_backup_Valid() const;

    QList<QString> getDeclines() const;
    void setDeclines(const QList<QString> &declines);
    bool is_declines_Set() const;
    bool is_declines_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QList<QString> getPicks() const;
    void setPicks(const QList<QString> &picks);
    bool is_picks_Set() const;
    bool is_picks_Valid() const;

    OAIElimination_Alliance_status getStatus() const;
    void setStatus(const OAIElimination_Alliance_status &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIElimination_Alliance_backup m_backup;
    bool m_backup_isSet;
    bool m_backup_isValid;

    QList<QString> m_declines;
    bool m_declines_isSet;
    bool m_declines_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QList<QString> m_picks;
    bool m_picks_isSet;
    bool m_picks_isValid;

    OAIElimination_Alliance_status m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIElimination_Alliance)

#endif // OAIElimination_Alliance_H
