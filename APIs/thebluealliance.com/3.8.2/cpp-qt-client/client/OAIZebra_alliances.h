/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIZebra_alliances.h
 *
 * 
 */

#ifndef OAIZebra_alliances_H
#define OAIZebra_alliances_H

#include <QJsonObject>

#include "OAIZebra_team.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIZebra_team;

class OAIZebra_alliances : public OAIObject {
public:
    OAIZebra_alliances();
    OAIZebra_alliances(QString json);
    ~OAIZebra_alliances() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIZebra_team> getBlue() const;
    void setBlue(const QList<OAIZebra_team> &blue);
    bool is_blue_Set() const;
    bool is_blue_Valid() const;

    QList<OAIZebra_team> getRed() const;
    void setRed(const QList<OAIZebra_team> &red);
    bool is_red_Set() const;
    bool is_red_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIZebra_team> m_blue;
    bool m_blue_isSet;
    bool m_blue_isValid;

    QList<OAIZebra_team> m_red;
    bool m_red_isSet;
    bool m_red_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIZebra_alliances)

#endif // OAIZebra_alliances_H
