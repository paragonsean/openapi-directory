/**
 * The Blue Alliance API v3
 * # Overview    Information and statistics about FIRST Robotics Competition teams and events.   # Authentication   All endpoints require an Auth Key to be passed in the header `X-TBA-Auth-Key`. If you do not have an auth key yet, you can obtain one from your [Account Page](/account).
 *
 * The version of the OpenAPI document: 3.8.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMatch_Score_Breakdown_2023_Alliance.h
 *
 * 
 */

#ifndef OAIMatch_Score_Breakdown_2023_Alliance_H
#define OAIMatch_Score_Breakdown_2023_Alliance_H

#include <QJsonObject>

#include "OAIMatch_Score_Breakdown_2023_Alliance_autoCommunity.h"
#include "OAIMatch_Score_Breakdown_2023_Alliance_links_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMatch_Score_Breakdown_2023_Alliance_autoCommunity;
class OAIMatch_Score_Breakdown_2023_Alliance_links_inner;

class OAIMatch_Score_Breakdown_2023_Alliance : public OAIObject {
public:
    OAIMatch_Score_Breakdown_2023_Alliance();
    OAIMatch_Score_Breakdown_2023_Alliance(QString json);
    ~OAIMatch_Score_Breakdown_2023_Alliance() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isActivationBonusAchieved() const;
    void setActivationBonusAchieved(const bool &activation_bonus_achieved);
    bool is_activation_bonus_achieved_Set() const;
    bool is_activation_bonus_achieved_Valid() const;

    qint32 getAdjustPoints() const;
    void setAdjustPoints(const qint32 &adjust_points);
    bool is_adjust_points_Set() const;
    bool is_adjust_points_Valid() const;

    QString getAutoBridgeState() const;
    void setAutoBridgeState(const QString &auto_bridge_state);
    bool is_auto_bridge_state_Set() const;
    bool is_auto_bridge_state_Valid() const;

    qint32 getAutoChargeStationPoints() const;
    void setAutoChargeStationPoints(const qint32 &auto_charge_station_points);
    bool is_auto_charge_station_points_Set() const;
    bool is_auto_charge_station_points_Valid() const;

    QString getAutoChargeStationRobot1() const;
    void setAutoChargeStationRobot1(const QString &auto_charge_station_robot1);
    bool is_auto_charge_station_robot1_Set() const;
    bool is_auto_charge_station_robot1_Valid() const;

    QString getAutoChargeStationRobot2() const;
    void setAutoChargeStationRobot2(const QString &auto_charge_station_robot2);
    bool is_auto_charge_station_robot2_Set() const;
    bool is_auto_charge_station_robot2_Valid() const;

    QString getAutoChargeStationRobot3() const;
    void setAutoChargeStationRobot3(const QString &auto_charge_station_robot3);
    bool is_auto_charge_station_robot3_Set() const;
    bool is_auto_charge_station_robot3_Valid() const;

    OAIMatch_Score_Breakdown_2023_Alliance_autoCommunity getAutoCommunity() const;
    void setAutoCommunity(const OAIMatch_Score_Breakdown_2023_Alliance_autoCommunity &auto_community);
    bool is_auto_community_Set() const;
    bool is_auto_community_Valid() const;

    bool isAutoDocked() const;
    void setAutoDocked(const bool &auto_docked);
    bool is_auto_docked_Set() const;
    bool is_auto_docked_Valid() const;

    qint32 getAutoGamePieceCount() const;
    void setAutoGamePieceCount(const qint32 &auto_game_piece_count);
    bool is_auto_game_piece_count_Set() const;
    bool is_auto_game_piece_count_Valid() const;

    qint32 getAutoGamePiecePoints() const;
    void setAutoGamePiecePoints(const qint32 &auto_game_piece_points);
    bool is_auto_game_piece_points_Set() const;
    bool is_auto_game_piece_points_Valid() const;

    qint32 getAutoMobilityPoints() const;
    void setAutoMobilityPoints(const qint32 &auto_mobility_points);
    bool is_auto_mobility_points_Set() const;
    bool is_auto_mobility_points_Valid() const;

    qint32 getAutoPoints() const;
    void setAutoPoints(const qint32 &auto_points);
    bool is_auto_points_Set() const;
    bool is_auto_points_Valid() const;

    qint32 getCoopGamePieceCount() const;
    void setCoopGamePieceCount(const qint32 &coop_game_piece_count);
    bool is_coop_game_piece_count_Set() const;
    bool is_coop_game_piece_count_Valid() const;

    bool isCoopertitionCriteriaMet() const;
    void setCoopertitionCriteriaMet(const bool &coopertition_criteria_met);
    bool is_coopertition_criteria_met_Set() const;
    bool is_coopertition_criteria_met_Valid() const;

    QString getEndGameBridgeState() const;
    void setEndGameBridgeState(const QString &end_game_bridge_state);
    bool is_end_game_bridge_state_Set() const;
    bool is_end_game_bridge_state_Valid() const;

    qint32 getEndGameChargeStationPoints() const;
    void setEndGameChargeStationPoints(const qint32 &end_game_charge_station_points);
    bool is_end_game_charge_station_points_Set() const;
    bool is_end_game_charge_station_points_Valid() const;

    QString getEndGameChargeStationRobot1() const;
    void setEndGameChargeStationRobot1(const QString &end_game_charge_station_robot1);
    bool is_end_game_charge_station_robot1_Set() const;
    bool is_end_game_charge_station_robot1_Valid() const;

    QString getEndGameChargeStationRobot2() const;
    void setEndGameChargeStationRobot2(const QString &end_game_charge_station_robot2);
    bool is_end_game_charge_station_robot2_Set() const;
    bool is_end_game_charge_station_robot2_Valid() const;

    QString getEndGameChargeStationRobot3() const;
    void setEndGameChargeStationRobot3(const QString &end_game_charge_station_robot3);
    bool is_end_game_charge_station_robot3_Set() const;
    bool is_end_game_charge_station_robot3_Valid() const;

    qint32 getEndGameParkPoints() const;
    void setEndGameParkPoints(const qint32 &end_game_park_points);
    bool is_end_game_park_points_Set() const;
    bool is_end_game_park_points_Valid() const;

    qint32 getExtraGamePieceCount() const;
    void setExtraGamePieceCount(const qint32 &extra_game_piece_count);
    bool is_extra_game_piece_count_Set() const;
    bool is_extra_game_piece_count_Valid() const;

    qint32 getFoulCount() const;
    void setFoulCount(const qint32 &foul_count);
    bool is_foul_count_Set() const;
    bool is_foul_count_Valid() const;

    qint32 getFoulPoints() const;
    void setFoulPoints(const qint32 &foul_points);
    bool is_foul_points_Set() const;
    bool is_foul_points_Valid() const;

    qint32 getLinkPoints() const;
    void setLinkPoints(const qint32 &link_points);
    bool is_link_points_Set() const;
    bool is_link_points_Valid() const;

    QList<OAIMatch_Score_Breakdown_2023_Alliance_links_inner> getLinks() const;
    void setLinks(const QList<OAIMatch_Score_Breakdown_2023_Alliance_links_inner> &links);
    bool is_links_Set() const;
    bool is_links_Valid() const;

    QString getMobilityRobot1() const;
    void setMobilityRobot1(const QString &mobility_robot1);
    bool is_mobility_robot1_Set() const;
    bool is_mobility_robot1_Valid() const;

    QString getMobilityRobot2() const;
    void setMobilityRobot2(const QString &mobility_robot2);
    bool is_mobility_robot2_Set() const;
    bool is_mobility_robot2_Valid() const;

    QString getMobilityRobot3() const;
    void setMobilityRobot3(const QString &mobility_robot3);
    bool is_mobility_robot3_Set() const;
    bool is_mobility_robot3_Valid() const;

    qint32 getRp() const;
    void setRp(const qint32 &rp);
    bool is_rp_Set() const;
    bool is_rp_Valid() const;

    bool isSustainabilityBonusAchieved() const;
    void setSustainabilityBonusAchieved(const bool &sustainability_bonus_achieved);
    bool is_sustainability_bonus_achieved_Set() const;
    bool is_sustainability_bonus_achieved_Valid() const;

    qint32 getTechFoulCount() const;
    void setTechFoulCount(const qint32 &tech_foul_count);
    bool is_tech_foul_count_Set() const;
    bool is_tech_foul_count_Valid() const;

    OAIMatch_Score_Breakdown_2023_Alliance_autoCommunity getTeleopCommunity() const;
    void setTeleopCommunity(const OAIMatch_Score_Breakdown_2023_Alliance_autoCommunity &teleop_community);
    bool is_teleop_community_Set() const;
    bool is_teleop_community_Valid() const;

    qint32 getTeleopGamePieceCount() const;
    void setTeleopGamePieceCount(const qint32 &teleop_game_piece_count);
    bool is_teleop_game_piece_count_Set() const;
    bool is_teleop_game_piece_count_Valid() const;

    qint32 getTeleopGamePiecePoints() const;
    void setTeleopGamePiecePoints(const qint32 &teleop_game_piece_points);
    bool is_teleop_game_piece_points_Set() const;
    bool is_teleop_game_piece_points_Valid() const;

    qint32 getTeleopPoints() const;
    void setTeleopPoints(const qint32 &teleop_points);
    bool is_teleop_points_Set() const;
    bool is_teleop_points_Valid() const;

    qint32 getTotalChargeStationPoints() const;
    void setTotalChargeStationPoints(const qint32 &total_charge_station_points);
    bool is_total_charge_station_points_Set() const;
    bool is_total_charge_station_points_Valid() const;

    qint32 getTotalPoints() const;
    void setTotalPoints(const qint32 &total_points);
    bool is_total_points_Set() const;
    bool is_total_points_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_activation_bonus_achieved;
    bool m_activation_bonus_achieved_isSet;
    bool m_activation_bonus_achieved_isValid;

    qint32 m_adjust_points;
    bool m_adjust_points_isSet;
    bool m_adjust_points_isValid;

    QString m_auto_bridge_state;
    bool m_auto_bridge_state_isSet;
    bool m_auto_bridge_state_isValid;

    qint32 m_auto_charge_station_points;
    bool m_auto_charge_station_points_isSet;
    bool m_auto_charge_station_points_isValid;

    QString m_auto_charge_station_robot1;
    bool m_auto_charge_station_robot1_isSet;
    bool m_auto_charge_station_robot1_isValid;

    QString m_auto_charge_station_robot2;
    bool m_auto_charge_station_robot2_isSet;
    bool m_auto_charge_station_robot2_isValid;

    QString m_auto_charge_station_robot3;
    bool m_auto_charge_station_robot3_isSet;
    bool m_auto_charge_station_robot3_isValid;

    OAIMatch_Score_Breakdown_2023_Alliance_autoCommunity m_auto_community;
    bool m_auto_community_isSet;
    bool m_auto_community_isValid;

    bool m_auto_docked;
    bool m_auto_docked_isSet;
    bool m_auto_docked_isValid;

    qint32 m_auto_game_piece_count;
    bool m_auto_game_piece_count_isSet;
    bool m_auto_game_piece_count_isValid;

    qint32 m_auto_game_piece_points;
    bool m_auto_game_piece_points_isSet;
    bool m_auto_game_piece_points_isValid;

    qint32 m_auto_mobility_points;
    bool m_auto_mobility_points_isSet;
    bool m_auto_mobility_points_isValid;

    qint32 m_auto_points;
    bool m_auto_points_isSet;
    bool m_auto_points_isValid;

    qint32 m_coop_game_piece_count;
    bool m_coop_game_piece_count_isSet;
    bool m_coop_game_piece_count_isValid;

    bool m_coopertition_criteria_met;
    bool m_coopertition_criteria_met_isSet;
    bool m_coopertition_criteria_met_isValid;

    QString m_end_game_bridge_state;
    bool m_end_game_bridge_state_isSet;
    bool m_end_game_bridge_state_isValid;

    qint32 m_end_game_charge_station_points;
    bool m_end_game_charge_station_points_isSet;
    bool m_end_game_charge_station_points_isValid;

    QString m_end_game_charge_station_robot1;
    bool m_end_game_charge_station_robot1_isSet;
    bool m_end_game_charge_station_robot1_isValid;

    QString m_end_game_charge_station_robot2;
    bool m_end_game_charge_station_robot2_isSet;
    bool m_end_game_charge_station_robot2_isValid;

    QString m_end_game_charge_station_robot3;
    bool m_end_game_charge_station_robot3_isSet;
    bool m_end_game_charge_station_robot3_isValid;

    qint32 m_end_game_park_points;
    bool m_end_game_park_points_isSet;
    bool m_end_game_park_points_isValid;

    qint32 m_extra_game_piece_count;
    bool m_extra_game_piece_count_isSet;
    bool m_extra_game_piece_count_isValid;

    qint32 m_foul_count;
    bool m_foul_count_isSet;
    bool m_foul_count_isValid;

    qint32 m_foul_points;
    bool m_foul_points_isSet;
    bool m_foul_points_isValid;

    qint32 m_link_points;
    bool m_link_points_isSet;
    bool m_link_points_isValid;

    QList<OAIMatch_Score_Breakdown_2023_Alliance_links_inner> m_links;
    bool m_links_isSet;
    bool m_links_isValid;

    QString m_mobility_robot1;
    bool m_mobility_robot1_isSet;
    bool m_mobility_robot1_isValid;

    QString m_mobility_robot2;
    bool m_mobility_robot2_isSet;
    bool m_mobility_robot2_isValid;

    QString m_mobility_robot3;
    bool m_mobility_robot3_isSet;
    bool m_mobility_robot3_isValid;

    qint32 m_rp;
    bool m_rp_isSet;
    bool m_rp_isValid;

    bool m_sustainability_bonus_achieved;
    bool m_sustainability_bonus_achieved_isSet;
    bool m_sustainability_bonus_achieved_isValid;

    qint32 m_tech_foul_count;
    bool m_tech_foul_count_isSet;
    bool m_tech_foul_count_isValid;

    OAIMatch_Score_Breakdown_2023_Alliance_autoCommunity m_teleop_community;
    bool m_teleop_community_isSet;
    bool m_teleop_community_isValid;

    qint32 m_teleop_game_piece_count;
    bool m_teleop_game_piece_count_isSet;
    bool m_teleop_game_piece_count_isValid;

    qint32 m_teleop_game_piece_points;
    bool m_teleop_game_piece_points_isSet;
    bool m_teleop_game_piece_points_isValid;

    qint32 m_teleop_points;
    bool m_teleop_points_isSet;
    bool m_teleop_points_isValid;

    qint32 m_total_charge_station_points;
    bool m_total_charge_station_points_isSet;
    bool m_total_charge_station_points_isValid;

    qint32 m_total_points;
    bool m_total_points_isSet;
    bool m_total_points_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMatch_Score_Breakdown_2023_Alliance)

#endif // OAIMatch_Score_Breakdown_2023_Alliance_H
