# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ReferenceGenomeOverview(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reference_accession: str=None):
        """ReferenceGenomeOverview - a model defined in OpenAPI

        :param reference_accession: The reference_accession of this ReferenceGenomeOverview.
        """
        self.openapi_types = {
            'reference_accession': str
        }

        self.attribute_map = {
            'reference_accession': 'reference_accession'
        }

        self._reference_accession = reference_accession

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReferenceGenomeOverview':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ReferenceGenomeOverview of this ReferenceGenomeOverview.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reference_accession(self):
        """Gets the reference_accession of this ReferenceGenomeOverview.

        The versioned reference build release accession

        :return: The reference_accession of this ReferenceGenomeOverview.
        :rtype: str
        """
        return self._reference_accession

    @reference_accession.setter
    def reference_accession(self, reference_accession):
        """Sets the reference_accession of this ReferenceGenomeOverview.

        The versioned reference build release accession

        :param reference_accession: The reference_accession of this ReferenceGenomeOverview.
        :type reference_accession: str
        """
        if reference_accession is None:
            raise ValueError("Invalid value for `reference_accession`, must not be `None`")
        if reference_accession is not None and len(reference_accession) < 1:
            raise ValueError("Invalid value for `reference_accession`, length must be greater than or equal to `1`")

        self._reference_accession = reference_accession
