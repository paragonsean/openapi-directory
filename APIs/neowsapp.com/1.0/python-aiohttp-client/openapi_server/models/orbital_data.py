# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.orbit_class import OrbitClass
from openapi_server import util


class OrbitalData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, aphelion_distance: str=None, ascending_node_longitude: str=None, data_arc_in_days: int=None, eccentricity: str=None, epoch_osculation: str=None, equinox: str=None, first_observation_date: str=None, inclination: str=None, jupiter_tisserand_invariant: str=None, last_observation_date: str=None, mean_anomaly: str=None, mean_motion: str=None, minimum_orbit_intersection: str=None, observations_used: int=None, orbit_class: OrbitClass=None, orbit_determination_date: str=None, orbit_id: str=None, orbit_uncertainty: str=None, orbital_period: str=None, perihelion_argument: str=None, perihelion_distance: str=None, perihelion_time: str=None, semi_major_axis: str=None):
        """OrbitalData - a model defined in OpenAPI

        :param aphelion_distance: The aphelion_distance of this OrbitalData.
        :param ascending_node_longitude: The ascending_node_longitude of this OrbitalData.
        :param data_arc_in_days: The data_arc_in_days of this OrbitalData.
        :param eccentricity: The eccentricity of this OrbitalData.
        :param epoch_osculation: The epoch_osculation of this OrbitalData.
        :param equinox: The equinox of this OrbitalData.
        :param first_observation_date: The first_observation_date of this OrbitalData.
        :param inclination: The inclination of this OrbitalData.
        :param jupiter_tisserand_invariant: The jupiter_tisserand_invariant of this OrbitalData.
        :param last_observation_date: The last_observation_date of this OrbitalData.
        :param mean_anomaly: The mean_anomaly of this OrbitalData.
        :param mean_motion: The mean_motion of this OrbitalData.
        :param minimum_orbit_intersection: The minimum_orbit_intersection of this OrbitalData.
        :param observations_used: The observations_used of this OrbitalData.
        :param orbit_class: The orbit_class of this OrbitalData.
        :param orbit_determination_date: The orbit_determination_date of this OrbitalData.
        :param orbit_id: The orbit_id of this OrbitalData.
        :param orbit_uncertainty: The orbit_uncertainty of this OrbitalData.
        :param orbital_period: The orbital_period of this OrbitalData.
        :param perihelion_argument: The perihelion_argument of this OrbitalData.
        :param perihelion_distance: The perihelion_distance of this OrbitalData.
        :param perihelion_time: The perihelion_time of this OrbitalData.
        :param semi_major_axis: The semi_major_axis of this OrbitalData.
        """
        self.openapi_types = {
            'aphelion_distance': str,
            'ascending_node_longitude': str,
            'data_arc_in_days': int,
            'eccentricity': str,
            'epoch_osculation': str,
            'equinox': str,
            'first_observation_date': str,
            'inclination': str,
            'jupiter_tisserand_invariant': str,
            'last_observation_date': str,
            'mean_anomaly': str,
            'mean_motion': str,
            'minimum_orbit_intersection': str,
            'observations_used': int,
            'orbit_class': OrbitClass,
            'orbit_determination_date': str,
            'orbit_id': str,
            'orbit_uncertainty': str,
            'orbital_period': str,
            'perihelion_argument': str,
            'perihelion_distance': str,
            'perihelion_time': str,
            'semi_major_axis': str
        }

        self.attribute_map = {
            'aphelion_distance': 'aphelion_distance',
            'ascending_node_longitude': 'ascending_node_longitude',
            'data_arc_in_days': 'data_arc_in_days',
            'eccentricity': 'eccentricity',
            'epoch_osculation': 'epoch_osculation',
            'equinox': 'equinox',
            'first_observation_date': 'first_observation_date',
            'inclination': 'inclination',
            'jupiter_tisserand_invariant': 'jupiter_tisserand_invariant',
            'last_observation_date': 'last_observation_date',
            'mean_anomaly': 'mean_anomaly',
            'mean_motion': 'mean_motion',
            'minimum_orbit_intersection': 'minimum_orbit_intersection',
            'observations_used': 'observations_used',
            'orbit_class': 'orbit_class',
            'orbit_determination_date': 'orbit_determination_date',
            'orbit_id': 'orbit_id',
            'orbit_uncertainty': 'orbit_uncertainty',
            'orbital_period': 'orbital_period',
            'perihelion_argument': 'perihelion_argument',
            'perihelion_distance': 'perihelion_distance',
            'perihelion_time': 'perihelion_time',
            'semi_major_axis': 'semi_major_axis'
        }

        self._aphelion_distance = aphelion_distance
        self._ascending_node_longitude = ascending_node_longitude
        self._data_arc_in_days = data_arc_in_days
        self._eccentricity = eccentricity
        self._epoch_osculation = epoch_osculation
        self._equinox = equinox
        self._first_observation_date = first_observation_date
        self._inclination = inclination
        self._jupiter_tisserand_invariant = jupiter_tisserand_invariant
        self._last_observation_date = last_observation_date
        self._mean_anomaly = mean_anomaly
        self._mean_motion = mean_motion
        self._minimum_orbit_intersection = minimum_orbit_intersection
        self._observations_used = observations_used
        self._orbit_class = orbit_class
        self._orbit_determination_date = orbit_determination_date
        self._orbit_id = orbit_id
        self._orbit_uncertainty = orbit_uncertainty
        self._orbital_period = orbital_period
        self._perihelion_argument = perihelion_argument
        self._perihelion_distance = perihelion_distance
        self._perihelion_time = perihelion_time
        self._semi_major_axis = semi_major_axis

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrbitalData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrbitalData of this OrbitalData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def aphelion_distance(self):
        """Gets the aphelion_distance of this OrbitalData.


        :return: The aphelion_distance of this OrbitalData.
        :rtype: str
        """
        return self._aphelion_distance

    @aphelion_distance.setter
    def aphelion_distance(self, aphelion_distance):
        """Sets the aphelion_distance of this OrbitalData.


        :param aphelion_distance: The aphelion_distance of this OrbitalData.
        :type aphelion_distance: str
        """

        self._aphelion_distance = aphelion_distance

    @property
    def ascending_node_longitude(self):
        """Gets the ascending_node_longitude of this OrbitalData.


        :return: The ascending_node_longitude of this OrbitalData.
        :rtype: str
        """
        return self._ascending_node_longitude

    @ascending_node_longitude.setter
    def ascending_node_longitude(self, ascending_node_longitude):
        """Sets the ascending_node_longitude of this OrbitalData.


        :param ascending_node_longitude: The ascending_node_longitude of this OrbitalData.
        :type ascending_node_longitude: str
        """

        self._ascending_node_longitude = ascending_node_longitude

    @property
    def data_arc_in_days(self):
        """Gets the data_arc_in_days of this OrbitalData.


        :return: The data_arc_in_days of this OrbitalData.
        :rtype: int
        """
        return self._data_arc_in_days

    @data_arc_in_days.setter
    def data_arc_in_days(self, data_arc_in_days):
        """Sets the data_arc_in_days of this OrbitalData.


        :param data_arc_in_days: The data_arc_in_days of this OrbitalData.
        :type data_arc_in_days: int
        """

        self._data_arc_in_days = data_arc_in_days

    @property
    def eccentricity(self):
        """Gets the eccentricity of this OrbitalData.


        :return: The eccentricity of this OrbitalData.
        :rtype: str
        """
        return self._eccentricity

    @eccentricity.setter
    def eccentricity(self, eccentricity):
        """Sets the eccentricity of this OrbitalData.


        :param eccentricity: The eccentricity of this OrbitalData.
        :type eccentricity: str
        """

        self._eccentricity = eccentricity

    @property
    def epoch_osculation(self):
        """Gets the epoch_osculation of this OrbitalData.


        :return: The epoch_osculation of this OrbitalData.
        :rtype: str
        """
        return self._epoch_osculation

    @epoch_osculation.setter
    def epoch_osculation(self, epoch_osculation):
        """Sets the epoch_osculation of this OrbitalData.


        :param epoch_osculation: The epoch_osculation of this OrbitalData.
        :type epoch_osculation: str
        """

        self._epoch_osculation = epoch_osculation

    @property
    def equinox(self):
        """Gets the equinox of this OrbitalData.


        :return: The equinox of this OrbitalData.
        :rtype: str
        """
        return self._equinox

    @equinox.setter
    def equinox(self, equinox):
        """Sets the equinox of this OrbitalData.


        :param equinox: The equinox of this OrbitalData.
        :type equinox: str
        """

        self._equinox = equinox

    @property
    def first_observation_date(self):
        """Gets the first_observation_date of this OrbitalData.


        :return: The first_observation_date of this OrbitalData.
        :rtype: str
        """
        return self._first_observation_date

    @first_observation_date.setter
    def first_observation_date(self, first_observation_date):
        """Sets the first_observation_date of this OrbitalData.


        :param first_observation_date: The first_observation_date of this OrbitalData.
        :type first_observation_date: str
        """

        self._first_observation_date = first_observation_date

    @property
    def inclination(self):
        """Gets the inclination of this OrbitalData.


        :return: The inclination of this OrbitalData.
        :rtype: str
        """
        return self._inclination

    @inclination.setter
    def inclination(self, inclination):
        """Sets the inclination of this OrbitalData.


        :param inclination: The inclination of this OrbitalData.
        :type inclination: str
        """

        self._inclination = inclination

    @property
    def jupiter_tisserand_invariant(self):
        """Gets the jupiter_tisserand_invariant of this OrbitalData.


        :return: The jupiter_tisserand_invariant of this OrbitalData.
        :rtype: str
        """
        return self._jupiter_tisserand_invariant

    @jupiter_tisserand_invariant.setter
    def jupiter_tisserand_invariant(self, jupiter_tisserand_invariant):
        """Sets the jupiter_tisserand_invariant of this OrbitalData.


        :param jupiter_tisserand_invariant: The jupiter_tisserand_invariant of this OrbitalData.
        :type jupiter_tisserand_invariant: str
        """

        self._jupiter_tisserand_invariant = jupiter_tisserand_invariant

    @property
    def last_observation_date(self):
        """Gets the last_observation_date of this OrbitalData.


        :return: The last_observation_date of this OrbitalData.
        :rtype: str
        """
        return self._last_observation_date

    @last_observation_date.setter
    def last_observation_date(self, last_observation_date):
        """Sets the last_observation_date of this OrbitalData.


        :param last_observation_date: The last_observation_date of this OrbitalData.
        :type last_observation_date: str
        """

        self._last_observation_date = last_observation_date

    @property
    def mean_anomaly(self):
        """Gets the mean_anomaly of this OrbitalData.


        :return: The mean_anomaly of this OrbitalData.
        :rtype: str
        """
        return self._mean_anomaly

    @mean_anomaly.setter
    def mean_anomaly(self, mean_anomaly):
        """Sets the mean_anomaly of this OrbitalData.


        :param mean_anomaly: The mean_anomaly of this OrbitalData.
        :type mean_anomaly: str
        """

        self._mean_anomaly = mean_anomaly

    @property
    def mean_motion(self):
        """Gets the mean_motion of this OrbitalData.


        :return: The mean_motion of this OrbitalData.
        :rtype: str
        """
        return self._mean_motion

    @mean_motion.setter
    def mean_motion(self, mean_motion):
        """Sets the mean_motion of this OrbitalData.


        :param mean_motion: The mean_motion of this OrbitalData.
        :type mean_motion: str
        """

        self._mean_motion = mean_motion

    @property
    def minimum_orbit_intersection(self):
        """Gets the minimum_orbit_intersection of this OrbitalData.


        :return: The minimum_orbit_intersection of this OrbitalData.
        :rtype: str
        """
        return self._minimum_orbit_intersection

    @minimum_orbit_intersection.setter
    def minimum_orbit_intersection(self, minimum_orbit_intersection):
        """Sets the minimum_orbit_intersection of this OrbitalData.


        :param minimum_orbit_intersection: The minimum_orbit_intersection of this OrbitalData.
        :type minimum_orbit_intersection: str
        """

        self._minimum_orbit_intersection = minimum_orbit_intersection

    @property
    def observations_used(self):
        """Gets the observations_used of this OrbitalData.


        :return: The observations_used of this OrbitalData.
        :rtype: int
        """
        return self._observations_used

    @observations_used.setter
    def observations_used(self, observations_used):
        """Sets the observations_used of this OrbitalData.


        :param observations_used: The observations_used of this OrbitalData.
        :type observations_used: int
        """

        self._observations_used = observations_used

    @property
    def orbit_class(self):
        """Gets the orbit_class of this OrbitalData.


        :return: The orbit_class of this OrbitalData.
        :rtype: OrbitClass
        """
        return self._orbit_class

    @orbit_class.setter
    def orbit_class(self, orbit_class):
        """Sets the orbit_class of this OrbitalData.


        :param orbit_class: The orbit_class of this OrbitalData.
        :type orbit_class: OrbitClass
        """

        self._orbit_class = orbit_class

    @property
    def orbit_determination_date(self):
        """Gets the orbit_determination_date of this OrbitalData.


        :return: The orbit_determination_date of this OrbitalData.
        :rtype: str
        """
        return self._orbit_determination_date

    @orbit_determination_date.setter
    def orbit_determination_date(self, orbit_determination_date):
        """Sets the orbit_determination_date of this OrbitalData.


        :param orbit_determination_date: The orbit_determination_date of this OrbitalData.
        :type orbit_determination_date: str
        """

        self._orbit_determination_date = orbit_determination_date

    @property
    def orbit_id(self):
        """Gets the orbit_id of this OrbitalData.


        :return: The orbit_id of this OrbitalData.
        :rtype: str
        """
        return self._orbit_id

    @orbit_id.setter
    def orbit_id(self, orbit_id):
        """Sets the orbit_id of this OrbitalData.


        :param orbit_id: The orbit_id of this OrbitalData.
        :type orbit_id: str
        """

        self._orbit_id = orbit_id

    @property
    def orbit_uncertainty(self):
        """Gets the orbit_uncertainty of this OrbitalData.


        :return: The orbit_uncertainty of this OrbitalData.
        :rtype: str
        """
        return self._orbit_uncertainty

    @orbit_uncertainty.setter
    def orbit_uncertainty(self, orbit_uncertainty):
        """Sets the orbit_uncertainty of this OrbitalData.


        :param orbit_uncertainty: The orbit_uncertainty of this OrbitalData.
        :type orbit_uncertainty: str
        """

        self._orbit_uncertainty = orbit_uncertainty

    @property
    def orbital_period(self):
        """Gets the orbital_period of this OrbitalData.


        :return: The orbital_period of this OrbitalData.
        :rtype: str
        """
        return self._orbital_period

    @orbital_period.setter
    def orbital_period(self, orbital_period):
        """Sets the orbital_period of this OrbitalData.


        :param orbital_period: The orbital_period of this OrbitalData.
        :type orbital_period: str
        """

        self._orbital_period = orbital_period

    @property
    def perihelion_argument(self):
        """Gets the perihelion_argument of this OrbitalData.


        :return: The perihelion_argument of this OrbitalData.
        :rtype: str
        """
        return self._perihelion_argument

    @perihelion_argument.setter
    def perihelion_argument(self, perihelion_argument):
        """Sets the perihelion_argument of this OrbitalData.


        :param perihelion_argument: The perihelion_argument of this OrbitalData.
        :type perihelion_argument: str
        """

        self._perihelion_argument = perihelion_argument

    @property
    def perihelion_distance(self):
        """Gets the perihelion_distance of this OrbitalData.


        :return: The perihelion_distance of this OrbitalData.
        :rtype: str
        """
        return self._perihelion_distance

    @perihelion_distance.setter
    def perihelion_distance(self, perihelion_distance):
        """Sets the perihelion_distance of this OrbitalData.


        :param perihelion_distance: The perihelion_distance of this OrbitalData.
        :type perihelion_distance: str
        """

        self._perihelion_distance = perihelion_distance

    @property
    def perihelion_time(self):
        """Gets the perihelion_time of this OrbitalData.


        :return: The perihelion_time of this OrbitalData.
        :rtype: str
        """
        return self._perihelion_time

    @perihelion_time.setter
    def perihelion_time(self, perihelion_time):
        """Sets the perihelion_time of this OrbitalData.


        :param perihelion_time: The perihelion_time of this OrbitalData.
        :type perihelion_time: str
        """

        self._perihelion_time = perihelion_time

    @property
    def semi_major_axis(self):
        """Gets the semi_major_axis of this OrbitalData.


        :return: The semi_major_axis of this OrbitalData.
        :rtype: str
        """
        return self._semi_major_axis

    @semi_major_axis.setter
    def semi_major_axis(self, semi_major_axis):
        """Sets the semi_major_axis of this OrbitalData.


        :param semi_major_axis: The semi_major_axis of this OrbitalData.
        :type semi_major_axis: str
        """

        self._semi_major_axis = semi_major_axis
