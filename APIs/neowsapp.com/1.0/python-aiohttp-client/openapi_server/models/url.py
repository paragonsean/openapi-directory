# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class URL(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, authority: str=None, content: object=None, default_port: int=None, file: str=None, host: str=None, path: str=None, port: int=None, protocol: str=None, query: str=None, ref: str=None, user_info: str=None):
        """URL - a model defined in OpenAPI

        :param authority: The authority of this URL.
        :param content: The content of this URL.
        :param default_port: The default_port of this URL.
        :param file: The file of this URL.
        :param host: The host of this URL.
        :param path: The path of this URL.
        :param port: The port of this URL.
        :param protocol: The protocol of this URL.
        :param query: The query of this URL.
        :param ref: The ref of this URL.
        :param user_info: The user_info of this URL.
        """
        self.openapi_types = {
            'authority': str,
            'content': object,
            'default_port': int,
            'file': str,
            'host': str,
            'path': str,
            'port': int,
            'protocol': str,
            'query': str,
            'ref': str,
            'user_info': str
        }

        self.attribute_map = {
            'authority': 'authority',
            'content': 'content',
            'default_port': 'defaultPort',
            'file': 'file',
            'host': 'host',
            'path': 'path',
            'port': 'port',
            'protocol': 'protocol',
            'query': 'query',
            'ref': 'ref',
            'user_info': 'userInfo'
        }

        self._authority = authority
        self._content = content
        self._default_port = default_port
        self._file = file
        self._host = host
        self._path = path
        self._port = port
        self._protocol = protocol
        self._query = query
        self._ref = ref
        self._user_info = user_info

    @classmethod
    def from_dict(cls, dikt: dict) -> 'URL':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The URL of this URL.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def authority(self):
        """Gets the authority of this URL.


        :return: The authority of this URL.
        :rtype: str
        """
        return self._authority

    @authority.setter
    def authority(self, authority):
        """Sets the authority of this URL.


        :param authority: The authority of this URL.
        :type authority: str
        """

        self._authority = authority

    @property
    def content(self):
        """Gets the content of this URL.


        :return: The content of this URL.
        :rtype: object
        """
        return self._content

    @content.setter
    def content(self, content):
        """Sets the content of this URL.


        :param content: The content of this URL.
        :type content: object
        """

        self._content = content

    @property
    def default_port(self):
        """Gets the default_port of this URL.


        :return: The default_port of this URL.
        :rtype: int
        """
        return self._default_port

    @default_port.setter
    def default_port(self, default_port):
        """Sets the default_port of this URL.


        :param default_port: The default_port of this URL.
        :type default_port: int
        """

        self._default_port = default_port

    @property
    def file(self):
        """Gets the file of this URL.


        :return: The file of this URL.
        :rtype: str
        """
        return self._file

    @file.setter
    def file(self, file):
        """Sets the file of this URL.


        :param file: The file of this URL.
        :type file: str
        """

        self._file = file

    @property
    def host(self):
        """Gets the host of this URL.


        :return: The host of this URL.
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this URL.


        :param host: The host of this URL.
        :type host: str
        """

        self._host = host

    @property
    def path(self):
        """Gets the path of this URL.


        :return: The path of this URL.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this URL.


        :param path: The path of this URL.
        :type path: str
        """

        self._path = path

    @property
    def port(self):
        """Gets the port of this URL.


        :return: The port of this URL.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this URL.


        :param port: The port of this URL.
        :type port: int
        """

        self._port = port

    @property
    def protocol(self):
        """Gets the protocol of this URL.


        :return: The protocol of this URL.
        :rtype: str
        """
        return self._protocol

    @protocol.setter
    def protocol(self, protocol):
        """Sets the protocol of this URL.


        :param protocol: The protocol of this URL.
        :type protocol: str
        """

        self._protocol = protocol

    @property
    def query(self):
        """Gets the query of this URL.


        :return: The query of this URL.
        :rtype: str
        """
        return self._query

    @query.setter
    def query(self, query):
        """Sets the query of this URL.


        :param query: The query of this URL.
        :type query: str
        """

        self._query = query

    @property
    def ref(self):
        """Gets the ref of this URL.


        :return: The ref of this URL.
        :rtype: str
        """
        return self._ref

    @ref.setter
    def ref(self, ref):
        """Sets the ref of this URL.


        :param ref: The ref of this URL.
        :type ref: str
        """

        self._ref = ref

    @property
    def user_info(self):
        """Gets the user_info of this URL.


        :return: The user_info of this URL.
        :rtype: str
        """
        return self._user_info

    @user_info.setter
    def user_info(self, user_info):
        """Sets the user_info of this URL.


        :param user_info: The user_info of this URL.
        :type user_info: str
        """

        self._user_info = user_info
