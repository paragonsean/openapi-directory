# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.estimated_diameter import EstimatedDiameter
from openapi_server import util


class EstimatedDiameterContainer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, feet: EstimatedDiameter=None, kilometers: EstimatedDiameter=None, meters: EstimatedDiameter=None, miles: EstimatedDiameter=None):
        """EstimatedDiameterContainer - a model defined in OpenAPI

        :param feet: The feet of this EstimatedDiameterContainer.
        :param kilometers: The kilometers of this EstimatedDiameterContainer.
        :param meters: The meters of this EstimatedDiameterContainer.
        :param miles: The miles of this EstimatedDiameterContainer.
        """
        self.openapi_types = {
            'feet': EstimatedDiameter,
            'kilometers': EstimatedDiameter,
            'meters': EstimatedDiameter,
            'miles': EstimatedDiameter
        }

        self.attribute_map = {
            'feet': 'feet',
            'kilometers': 'kilometers',
            'meters': 'meters',
            'miles': 'miles'
        }

        self._feet = feet
        self._kilometers = kilometers
        self._meters = meters
        self._miles = miles

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EstimatedDiameterContainer':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EstimatedDiameterContainer of this EstimatedDiameterContainer.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def feet(self):
        """Gets the feet of this EstimatedDiameterContainer.


        :return: The feet of this EstimatedDiameterContainer.
        :rtype: EstimatedDiameter
        """
        return self._feet

    @feet.setter
    def feet(self, feet):
        """Sets the feet of this EstimatedDiameterContainer.


        :param feet: The feet of this EstimatedDiameterContainer.
        :type feet: EstimatedDiameter
        """

        self._feet = feet

    @property
    def kilometers(self):
        """Gets the kilometers of this EstimatedDiameterContainer.


        :return: The kilometers of this EstimatedDiameterContainer.
        :rtype: EstimatedDiameter
        """
        return self._kilometers

    @kilometers.setter
    def kilometers(self, kilometers):
        """Sets the kilometers of this EstimatedDiameterContainer.


        :param kilometers: The kilometers of this EstimatedDiameterContainer.
        :type kilometers: EstimatedDiameter
        """

        self._kilometers = kilometers

    @property
    def meters(self):
        """Gets the meters of this EstimatedDiameterContainer.


        :return: The meters of this EstimatedDiameterContainer.
        :rtype: EstimatedDiameter
        """
        return self._meters

    @meters.setter
    def meters(self, meters):
        """Sets the meters of this EstimatedDiameterContainer.


        :param meters: The meters of this EstimatedDiameterContainer.
        :type meters: EstimatedDiameter
        """

        self._meters = meters

    @property
    def miles(self):
        """Gets the miles of this EstimatedDiameterContainer.


        :return: The miles of this EstimatedDiameterContainer.
        :rtype: EstimatedDiameter
        """
        return self._miles

    @miles.setter
    def miles(self, miles):
        """Sets the miles of this EstimatedDiameterContainer.


        :param miles: The miles of this EstimatedDiameterContainer.
        :type miles: EstimatedDiameter
        """

        self._miles = miles
