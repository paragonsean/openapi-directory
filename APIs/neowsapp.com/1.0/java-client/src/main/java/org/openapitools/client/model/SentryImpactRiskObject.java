/*
 * NeoWs - (Near Earth Object Web Service)
 * A web service for near earth objects. All the data is from the <a href=\"http://neo.jpl.nasa.gov/\" target=\"_blank\">NASA JPL Asteroid team</a>.      NeoWs is proud to power AsteroidTracker on <a href=\"https://itunes.apple.com/us/app/asteroid-tracker/id689684901?mt=8\" target=\"_blank\">iOS</a> and <a href=\"https://play.google.com/store/apps/details?id=com.vitruviussoftware.bunifish.asteroidtracker&feature\" target=\"_blank\">Android</a> as well as related apps.    Follow us on <a href=\"https://twitter.com/AsteroidTracker\" target=\"_blank\">Twitter</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SentryImpactRiskObject
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:29:15.882853-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SentryImpactRiskObject {
  public static final String SERIALIZED_NAME_PALERMO_SCALE_MAX = "Palermo_scale_max";
  @SerializedName(SERIALIZED_NAME_PALERMO_SCALE_MAX)
  private String palermoScaleMax;

  public static final String SERIALIZED_NAME_ABSOLUTE_MAGNITUDE = "absolute_magnitude";
  @SerializedName(SERIALIZED_NAME_ABSOLUTE_MAGNITUDE)
  private String absoluteMagnitude;

  public static final String SERIALIZED_NAME_AVERAGE_LUNAR_DISTANCE = "average_lunar_distance";
  @SerializedName(SERIALIZED_NAME_AVERAGE_LUNAR_DISTANCE)
  private Double averageLunarDistance;

  public static final String SERIALIZED_NAME_DESIGNATION = "designation";
  @SerializedName(SERIALIZED_NAME_DESIGNATION)
  private String designation;

  public static final String SERIALIZED_NAME_ESTIMATED_DIAMETER = "estimated_diameter";
  @SerializedName(SERIALIZED_NAME_ESTIMATED_DIAMETER)
  private String estimatedDiameter;

  public static final String SERIALIZED_NAME_FULLNAME = "fullname";
  @SerializedName(SERIALIZED_NAME_FULLNAME)
  private String fullname;

  public static final String SERIALIZED_NAME_IMPACT_PROBABILITY = "impact_probability";
  @SerializedName(SERIALIZED_NAME_IMPACT_PROBABILITY)
  private String impactProbability;

  public static final String SERIALIZED_NAME_IS_ACTIVE_SENTRY_OBJECT = "is_active_sentry_object";
  @SerializedName(SERIALIZED_NAME_IS_ACTIVE_SENTRY_OBJECT)
  private Boolean isActiveSentryObject;

  public static final String SERIALIZED_NAME_LAST_OBS = "last_obs";
  @SerializedName(SERIALIZED_NAME_LAST_OBS)
  private String lastObs;

  public static final String SERIALIZED_NAME_LAST_OBS_JD = "last_obs_jd";
  @SerializedName(SERIALIZED_NAME_LAST_OBS_JD)
  private String lastObsJd;

  public static final String SERIALIZED_NAME_PALERMO_SCALE_AVE = "palermo_scale_ave";
  @SerializedName(SERIALIZED_NAME_PALERMO_SCALE_AVE)
  private String palermoScaleAve;

  public static final String SERIALIZED_NAME_POTENTIAL_IMPACTS = "potential_impacts";
  @SerializedName(SERIALIZED_NAME_POTENTIAL_IMPACTS)
  private String potentialImpacts;

  public static final String SERIALIZED_NAME_REMOVAL_DATE = "removal_date";
  @SerializedName(SERIALIZED_NAME_REMOVAL_DATE)
  private String removalDate;

  public static final String SERIALIZED_NAME_SENTRY_ID = "sentryId";
  @SerializedName(SERIALIZED_NAME_SENTRY_ID)
  private String sentryId;

  public static final String SERIALIZED_NAME_TORINO_SCALE = "torino_scale";
  @SerializedName(SERIALIZED_NAME_TORINO_SCALE)
  private String torinoScale;

  public static final String SERIALIZED_NAME_V_INFINITY = "v_infinity";
  @SerializedName(SERIALIZED_NAME_V_INFINITY)
  private String vInfinity;

  public static final String SERIALIZED_NAME_YEAR_RANGE_MAX = "year_range_max";
  @SerializedName(SERIALIZED_NAME_YEAR_RANGE_MAX)
  private String yearRangeMax;

  public static final String SERIALIZED_NAME_YEAR_RANGE_MIN = "year_range_min";
  @SerializedName(SERIALIZED_NAME_YEAR_RANGE_MIN)
  private String yearRangeMin;

  public SentryImpactRiskObject() {
  }

  public SentryImpactRiskObject palermoScaleMax(String palermoScaleMax) {
    this.palermoScaleMax = palermoScaleMax;
    return this;
  }

  /**
   * Get palermoScaleMax
   * @return palermoScaleMax
   */
  @javax.annotation.Nullable
  public String getPalermoScaleMax() {
    return palermoScaleMax;
  }

  public void setPalermoScaleMax(String palermoScaleMax) {
    this.palermoScaleMax = palermoScaleMax;
  }


  public SentryImpactRiskObject absoluteMagnitude(String absoluteMagnitude) {
    this.absoluteMagnitude = absoluteMagnitude;
    return this;
  }

  /**
   * Get absoluteMagnitude
   * @return absoluteMagnitude
   */
  @javax.annotation.Nullable
  public String getAbsoluteMagnitude() {
    return absoluteMagnitude;
  }

  public void setAbsoluteMagnitude(String absoluteMagnitude) {
    this.absoluteMagnitude = absoluteMagnitude;
  }


  public SentryImpactRiskObject averageLunarDistance(Double averageLunarDistance) {
    this.averageLunarDistance = averageLunarDistance;
    return this;
  }

  /**
   * Get averageLunarDistance
   * @return averageLunarDistance
   */
  @javax.annotation.Nullable
  public Double getAverageLunarDistance() {
    return averageLunarDistance;
  }

  public void setAverageLunarDistance(Double averageLunarDistance) {
    this.averageLunarDistance = averageLunarDistance;
  }


  public SentryImpactRiskObject designation(String designation) {
    this.designation = designation;
    return this;
  }

  /**
   * Get designation
   * @return designation
   */
  @javax.annotation.Nullable
  public String getDesignation() {
    return designation;
  }

  public void setDesignation(String designation) {
    this.designation = designation;
  }


  public SentryImpactRiskObject estimatedDiameter(String estimatedDiameter) {
    this.estimatedDiameter = estimatedDiameter;
    return this;
  }

  /**
   * Get estimatedDiameter
   * @return estimatedDiameter
   */
  @javax.annotation.Nullable
  public String getEstimatedDiameter() {
    return estimatedDiameter;
  }

  public void setEstimatedDiameter(String estimatedDiameter) {
    this.estimatedDiameter = estimatedDiameter;
  }


  public SentryImpactRiskObject fullname(String fullname) {
    this.fullname = fullname;
    return this;
  }

  /**
   * Get fullname
   * @return fullname
   */
  @javax.annotation.Nullable
  public String getFullname() {
    return fullname;
  }

  public void setFullname(String fullname) {
    this.fullname = fullname;
  }


  public SentryImpactRiskObject impactProbability(String impactProbability) {
    this.impactProbability = impactProbability;
    return this;
  }

  /**
   * Get impactProbability
   * @return impactProbability
   */
  @javax.annotation.Nullable
  public String getImpactProbability() {
    return impactProbability;
  }

  public void setImpactProbability(String impactProbability) {
    this.impactProbability = impactProbability;
  }


  public SentryImpactRiskObject isActiveSentryObject(Boolean isActiveSentryObject) {
    this.isActiveSentryObject = isActiveSentryObject;
    return this;
  }

  /**
   * Get isActiveSentryObject
   * @return isActiveSentryObject
   */
  @javax.annotation.Nullable
  public Boolean getIsActiveSentryObject() {
    return isActiveSentryObject;
  }

  public void setIsActiveSentryObject(Boolean isActiveSentryObject) {
    this.isActiveSentryObject = isActiveSentryObject;
  }


  public SentryImpactRiskObject lastObs(String lastObs) {
    this.lastObs = lastObs;
    return this;
  }

  /**
   * Get lastObs
   * @return lastObs
   */
  @javax.annotation.Nullable
  public String getLastObs() {
    return lastObs;
  }

  public void setLastObs(String lastObs) {
    this.lastObs = lastObs;
  }


  public SentryImpactRiskObject lastObsJd(String lastObsJd) {
    this.lastObsJd = lastObsJd;
    return this;
  }

  /**
   * Get lastObsJd
   * @return lastObsJd
   */
  @javax.annotation.Nullable
  public String getLastObsJd() {
    return lastObsJd;
  }

  public void setLastObsJd(String lastObsJd) {
    this.lastObsJd = lastObsJd;
  }


  public SentryImpactRiskObject palermoScaleAve(String palermoScaleAve) {
    this.palermoScaleAve = palermoScaleAve;
    return this;
  }

  /**
   * Get palermoScaleAve
   * @return palermoScaleAve
   */
  @javax.annotation.Nullable
  public String getPalermoScaleAve() {
    return palermoScaleAve;
  }

  public void setPalermoScaleAve(String palermoScaleAve) {
    this.palermoScaleAve = palermoScaleAve;
  }


  public SentryImpactRiskObject potentialImpacts(String potentialImpacts) {
    this.potentialImpacts = potentialImpacts;
    return this;
  }

  /**
   * Get potentialImpacts
   * @return potentialImpacts
   */
  @javax.annotation.Nullable
  public String getPotentialImpacts() {
    return potentialImpacts;
  }

  public void setPotentialImpacts(String potentialImpacts) {
    this.potentialImpacts = potentialImpacts;
  }


  public SentryImpactRiskObject removalDate(String removalDate) {
    this.removalDate = removalDate;
    return this;
  }

  /**
   * Get removalDate
   * @return removalDate
   */
  @javax.annotation.Nullable
  public String getRemovalDate() {
    return removalDate;
  }

  public void setRemovalDate(String removalDate) {
    this.removalDate = removalDate;
  }


  public SentryImpactRiskObject sentryId(String sentryId) {
    this.sentryId = sentryId;
    return this;
  }

  /**
   * Get sentryId
   * @return sentryId
   */
  @javax.annotation.Nullable
  public String getSentryId() {
    return sentryId;
  }

  public void setSentryId(String sentryId) {
    this.sentryId = sentryId;
  }


  public SentryImpactRiskObject torinoScale(String torinoScale) {
    this.torinoScale = torinoScale;
    return this;
  }

  /**
   * Get torinoScale
   * @return torinoScale
   */
  @javax.annotation.Nullable
  public String getTorinoScale() {
    return torinoScale;
  }

  public void setTorinoScale(String torinoScale) {
    this.torinoScale = torinoScale;
  }


  public SentryImpactRiskObject vInfinity(String vInfinity) {
    this.vInfinity = vInfinity;
    return this;
  }

  /**
   * Get vInfinity
   * @return vInfinity
   */
  @javax.annotation.Nullable
  public String getvInfinity() {
    return vInfinity;
  }

  public void setvInfinity(String vInfinity) {
    this.vInfinity = vInfinity;
  }


  public SentryImpactRiskObject yearRangeMax(String yearRangeMax) {
    this.yearRangeMax = yearRangeMax;
    return this;
  }

  /**
   * Get yearRangeMax
   * @return yearRangeMax
   */
  @javax.annotation.Nullable
  public String getYearRangeMax() {
    return yearRangeMax;
  }

  public void setYearRangeMax(String yearRangeMax) {
    this.yearRangeMax = yearRangeMax;
  }


  public SentryImpactRiskObject yearRangeMin(String yearRangeMin) {
    this.yearRangeMin = yearRangeMin;
    return this;
  }

  /**
   * Get yearRangeMin
   * @return yearRangeMin
   */
  @javax.annotation.Nullable
  public String getYearRangeMin() {
    return yearRangeMin;
  }

  public void setYearRangeMin(String yearRangeMin) {
    this.yearRangeMin = yearRangeMin;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SentryImpactRiskObject sentryImpactRiskObject = (SentryImpactRiskObject) o;
    return Objects.equals(this.palermoScaleMax, sentryImpactRiskObject.palermoScaleMax) &&
        Objects.equals(this.absoluteMagnitude, sentryImpactRiskObject.absoluteMagnitude) &&
        Objects.equals(this.averageLunarDistance, sentryImpactRiskObject.averageLunarDistance) &&
        Objects.equals(this.designation, sentryImpactRiskObject.designation) &&
        Objects.equals(this.estimatedDiameter, sentryImpactRiskObject.estimatedDiameter) &&
        Objects.equals(this.fullname, sentryImpactRiskObject.fullname) &&
        Objects.equals(this.impactProbability, sentryImpactRiskObject.impactProbability) &&
        Objects.equals(this.isActiveSentryObject, sentryImpactRiskObject.isActiveSentryObject) &&
        Objects.equals(this.lastObs, sentryImpactRiskObject.lastObs) &&
        Objects.equals(this.lastObsJd, sentryImpactRiskObject.lastObsJd) &&
        Objects.equals(this.palermoScaleAve, sentryImpactRiskObject.palermoScaleAve) &&
        Objects.equals(this.potentialImpacts, sentryImpactRiskObject.potentialImpacts) &&
        Objects.equals(this.removalDate, sentryImpactRiskObject.removalDate) &&
        Objects.equals(this.sentryId, sentryImpactRiskObject.sentryId) &&
        Objects.equals(this.torinoScale, sentryImpactRiskObject.torinoScale) &&
        Objects.equals(this.vInfinity, sentryImpactRiskObject.vInfinity) &&
        Objects.equals(this.yearRangeMax, sentryImpactRiskObject.yearRangeMax) &&
        Objects.equals(this.yearRangeMin, sentryImpactRiskObject.yearRangeMin);
  }

  @Override
  public int hashCode() {
    return Objects.hash(palermoScaleMax, absoluteMagnitude, averageLunarDistance, designation, estimatedDiameter, fullname, impactProbability, isActiveSentryObject, lastObs, lastObsJd, palermoScaleAve, potentialImpacts, removalDate, sentryId, torinoScale, vInfinity, yearRangeMax, yearRangeMin);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SentryImpactRiskObject {\n");
    sb.append("    palermoScaleMax: ").append(toIndentedString(palermoScaleMax)).append("\n");
    sb.append("    absoluteMagnitude: ").append(toIndentedString(absoluteMagnitude)).append("\n");
    sb.append("    averageLunarDistance: ").append(toIndentedString(averageLunarDistance)).append("\n");
    sb.append("    designation: ").append(toIndentedString(designation)).append("\n");
    sb.append("    estimatedDiameter: ").append(toIndentedString(estimatedDiameter)).append("\n");
    sb.append("    fullname: ").append(toIndentedString(fullname)).append("\n");
    sb.append("    impactProbability: ").append(toIndentedString(impactProbability)).append("\n");
    sb.append("    isActiveSentryObject: ").append(toIndentedString(isActiveSentryObject)).append("\n");
    sb.append("    lastObs: ").append(toIndentedString(lastObs)).append("\n");
    sb.append("    lastObsJd: ").append(toIndentedString(lastObsJd)).append("\n");
    sb.append("    palermoScaleAve: ").append(toIndentedString(palermoScaleAve)).append("\n");
    sb.append("    potentialImpacts: ").append(toIndentedString(potentialImpacts)).append("\n");
    sb.append("    removalDate: ").append(toIndentedString(removalDate)).append("\n");
    sb.append("    sentryId: ").append(toIndentedString(sentryId)).append("\n");
    sb.append("    torinoScale: ").append(toIndentedString(torinoScale)).append("\n");
    sb.append("    vInfinity: ").append(toIndentedString(vInfinity)).append("\n");
    sb.append("    yearRangeMax: ").append(toIndentedString(yearRangeMax)).append("\n");
    sb.append("    yearRangeMin: ").append(toIndentedString(yearRangeMin)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Palermo_scale_max");
    openapiFields.add("absolute_magnitude");
    openapiFields.add("average_lunar_distance");
    openapiFields.add("designation");
    openapiFields.add("estimated_diameter");
    openapiFields.add("fullname");
    openapiFields.add("impact_probability");
    openapiFields.add("is_active_sentry_object");
    openapiFields.add("last_obs");
    openapiFields.add("last_obs_jd");
    openapiFields.add("palermo_scale_ave");
    openapiFields.add("potential_impacts");
    openapiFields.add("removal_date");
    openapiFields.add("sentryId");
    openapiFields.add("torino_scale");
    openapiFields.add("v_infinity");
    openapiFields.add("year_range_max");
    openapiFields.add("year_range_min");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SentryImpactRiskObject
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SentryImpactRiskObject.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SentryImpactRiskObject is not found in the empty JSON string", SentryImpactRiskObject.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SentryImpactRiskObject.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SentryImpactRiskObject` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("Palermo_scale_max") != null && !jsonObj.get("Palermo_scale_max").isJsonNull()) && !jsonObj.get("Palermo_scale_max").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `Palermo_scale_max` to be a primitive type in the JSON string but got `%s`", jsonObj.get("Palermo_scale_max").toString()));
      }
      if ((jsonObj.get("absolute_magnitude") != null && !jsonObj.get("absolute_magnitude").isJsonNull()) && !jsonObj.get("absolute_magnitude").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `absolute_magnitude` to be a primitive type in the JSON string but got `%s`", jsonObj.get("absolute_magnitude").toString()));
      }
      if ((jsonObj.get("designation") != null && !jsonObj.get("designation").isJsonNull()) && !jsonObj.get("designation").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `designation` to be a primitive type in the JSON string but got `%s`", jsonObj.get("designation").toString()));
      }
      if ((jsonObj.get("estimated_diameter") != null && !jsonObj.get("estimated_diameter").isJsonNull()) && !jsonObj.get("estimated_diameter").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `estimated_diameter` to be a primitive type in the JSON string but got `%s`", jsonObj.get("estimated_diameter").toString()));
      }
      if ((jsonObj.get("fullname") != null && !jsonObj.get("fullname").isJsonNull()) && !jsonObj.get("fullname").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `fullname` to be a primitive type in the JSON string but got `%s`", jsonObj.get("fullname").toString()));
      }
      if ((jsonObj.get("impact_probability") != null && !jsonObj.get("impact_probability").isJsonNull()) && !jsonObj.get("impact_probability").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `impact_probability` to be a primitive type in the JSON string but got `%s`", jsonObj.get("impact_probability").toString()));
      }
      if ((jsonObj.get("last_obs") != null && !jsonObj.get("last_obs").isJsonNull()) && !jsonObj.get("last_obs").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_obs` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_obs").toString()));
      }
      if ((jsonObj.get("last_obs_jd") != null && !jsonObj.get("last_obs_jd").isJsonNull()) && !jsonObj.get("last_obs_jd").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `last_obs_jd` to be a primitive type in the JSON string but got `%s`", jsonObj.get("last_obs_jd").toString()));
      }
      if ((jsonObj.get("palermo_scale_ave") != null && !jsonObj.get("palermo_scale_ave").isJsonNull()) && !jsonObj.get("palermo_scale_ave").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `palermo_scale_ave` to be a primitive type in the JSON string but got `%s`", jsonObj.get("palermo_scale_ave").toString()));
      }
      if ((jsonObj.get("potential_impacts") != null && !jsonObj.get("potential_impacts").isJsonNull()) && !jsonObj.get("potential_impacts").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `potential_impacts` to be a primitive type in the JSON string but got `%s`", jsonObj.get("potential_impacts").toString()));
      }
      if ((jsonObj.get("removal_date") != null && !jsonObj.get("removal_date").isJsonNull()) && !jsonObj.get("removal_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `removal_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("removal_date").toString()));
      }
      if ((jsonObj.get("sentryId") != null && !jsonObj.get("sentryId").isJsonNull()) && !jsonObj.get("sentryId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sentryId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sentryId").toString()));
      }
      if ((jsonObj.get("torino_scale") != null && !jsonObj.get("torino_scale").isJsonNull()) && !jsonObj.get("torino_scale").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `torino_scale` to be a primitive type in the JSON string but got `%s`", jsonObj.get("torino_scale").toString()));
      }
      if ((jsonObj.get("v_infinity") != null && !jsonObj.get("v_infinity").isJsonNull()) && !jsonObj.get("v_infinity").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `v_infinity` to be a primitive type in the JSON string but got `%s`", jsonObj.get("v_infinity").toString()));
      }
      if ((jsonObj.get("year_range_max") != null && !jsonObj.get("year_range_max").isJsonNull()) && !jsonObj.get("year_range_max").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `year_range_max` to be a primitive type in the JSON string but got `%s`", jsonObj.get("year_range_max").toString()));
      }
      if ((jsonObj.get("year_range_min") != null && !jsonObj.get("year_range_min").isJsonNull()) && !jsonObj.get("year_range_min").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `year_range_min` to be a primitive type in the JSON string but got `%s`", jsonObj.get("year_range_min").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SentryImpactRiskObject.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SentryImpactRiskObject' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SentryImpactRiskObject> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SentryImpactRiskObject.class));

       return (TypeAdapter<T>) new TypeAdapter<SentryImpactRiskObject>() {
           @Override
           public void write(JsonWriter out, SentryImpactRiskObject value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SentryImpactRiskObject read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SentryImpactRiskObject given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SentryImpactRiskObject
   * @throws IOException if the JSON string is invalid with respect to SentryImpactRiskObject
   */
  public static SentryImpactRiskObject fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SentryImpactRiskObject.class);
  }

  /**
   * Convert an instance of SentryImpactRiskObject to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

