/**
 * NeoWs - (Near Earth Object Web Service)
 * A web service for near earth objects. All the data is from the <a href=\"http://neo.jpl.nasa.gov/\" target=\"_blank\">NASA JPL Asteroid team</a>.      NeoWs is proud to power AsteroidTracker on <a href=\"https://itunes.apple.com/us/app/asteroid-tracker/id689684901?mt=8\" target=\"_blank\">iOS</a> and <a href=\"https://play.google.com/store/apps/details?id=com.vitruviussoftware.bunifish.asteroidtracker&feature\" target=\"_blank\">Android</a> as well as related apps.    Follow us on <a href=\"https://twitter.com/AsteroidTracker\" target=\"_blank\">Twitter</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.NeoWsNearEarthObjectWebService);
  }
}(this, function(expect, NeoWsNearEarthObjectWebService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new NeoWsNearEarthObjectWebService.Statistics();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Statistics', function() {
    it('should create an instance of Statistics', function() {
      // uncomment below and update the code to test Statistics
      //var instance = new NeoWsNearEarthObjectWebService.Statistics();
      //expect(instance).to.be.a(NeoWsNearEarthObjectWebService.Statistics);
    });

    it('should have the property closeApproachCount (base name: "close_approach_count")', function() {
      // uncomment below and update the code to test the property closeApproachCount
      //var instance = new NeoWsNearEarthObjectWebService.Statistics();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdated (base name: "last_updated")', function() {
      // uncomment below and update the code to test the property lastUpdated
      //var instance = new NeoWsNearEarthObjectWebService.Statistics();
      //expect(instance).to.be();
    });

    it('should have the property nasaJplUrl (base name: "nasa_jpl_url")', function() {
      // uncomment below and update the code to test the property nasaJplUrl
      //var instance = new NeoWsNearEarthObjectWebService.Statistics();
      //expect(instance).to.be();
    });

    it('should have the property nearEarthObjectCount (base name: "near_earth_object_count")', function() {
      // uncomment below and update the code to test the property nearEarthObjectCount
      //var instance = new NeoWsNearEarthObjectWebService.Statistics();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new NeoWsNearEarthObjectWebService.Statistics();
      //expect(instance).to.be();
    });

  });

}));
