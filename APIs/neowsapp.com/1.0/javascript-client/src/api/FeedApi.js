/**
 * NeoWs - (Near Earth Object Web Service)
 * A web service for near earth objects. All the data is from the <a href=\"http://neo.jpl.nasa.gov/\" target=\"_blank\">NASA JPL Asteroid team</a>.      NeoWs is proud to power AsteroidTracker on <a href=\"https://itunes.apple.com/us/app/asteroid-tracker/id689684901?mt=8\" target=\"_blank\">iOS</a> and <a href=\"https://play.google.com/store/apps/details?id=com.vitruviussoftware.bunifish.asteroidtracker&feature\" target=\"_blank\">Android</a> as well as related apps.    Follow us on <a href=\"https://twitter.com/AsteroidTracker\" target=\"_blank\">Twitter</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import NearEarthObjectList from '../model/NearEarthObjectList';

/**
* Feed service.
* @module api/FeedApi
* @version 1.0
*/
export default class FeedApi {

    /**
    * Constructs a new FeedApi. 
    * @alias module:api/FeedApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the retrieveNEOFeedToday operation.
     * @callback module:api/FeedApi~retrieveNEOFeedTodayCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NearEarthObjectList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find Near Earth Objects for today
     * Get a list of Near Earth Objects for today
     * @param {Object} opts Optional parameters
     * @param {Boolean} [detailed] detailed
     * @param {module:api/FeedApi~retrieveNEOFeedTodayCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NearEarthObjectList}
     */
    retrieveNEOFeedToday(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'detailed': opts['detailed']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NearEarthObjectList;
      return this.apiClient.callApi(
        '/rest/v1/feed/today', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the retrieveNearEarthObjectFeed operation.
     * @callback module:api/FeedApi~retrieveNearEarthObjectFeedCallback
     * @param {String} error Error message, if any.
     * @param {module:model/NearEarthObjectList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Find Near Earth Objects by date
     * Get a list of Near Earth Objects within a date range, The max range in one query is 7 days
     * @param {Object} opts Optional parameters
     * @param {String} [startDate] Start of date range search, format: yyyy-MM-dd - (ex: 2015-04-28)
     * @param {String} [endDate] End of date range search, format: yyyy-MM-dd - (ex: 2015-04-28). If left off search will extends 7 days from start_date
     * @param {Boolean} [detailed] detailed
     * @param {module:api/FeedApi~retrieveNearEarthObjectFeedCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/NearEarthObjectList}
     */
    retrieveNearEarthObjectFeed(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'start_date': opts['startDate'],
        'end_date': opts['endDate'],
        'detailed': opts['detailed']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = NearEarthObjectList;
      return this.apiClient.callApi(
        '/rest/v1/feed', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
