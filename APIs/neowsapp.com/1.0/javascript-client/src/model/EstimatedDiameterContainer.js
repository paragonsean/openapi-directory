/**
 * NeoWs - (Near Earth Object Web Service)
 * A web service for near earth objects. All the data is from the <a href=\"http://neo.jpl.nasa.gov/\" target=\"_blank\">NASA JPL Asteroid team</a>.      NeoWs is proud to power AsteroidTracker on <a href=\"https://itunes.apple.com/us/app/asteroid-tracker/id689684901?mt=8\" target=\"_blank\">iOS</a> and <a href=\"https://play.google.com/store/apps/details?id=com.vitruviussoftware.bunifish.asteroidtracker&feature\" target=\"_blank\">Android</a> as well as related apps.    Follow us on <a href=\"https://twitter.com/AsteroidTracker\" target=\"_blank\">Twitter</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EstimatedDiameter from './EstimatedDiameter';

/**
 * The EstimatedDiameterContainer model module.
 * @module model/EstimatedDiameterContainer
 * @version 1.0
 */
class EstimatedDiameterContainer {
    /**
     * Constructs a new <code>EstimatedDiameterContainer</code>.
     * @alias module:model/EstimatedDiameterContainer
     */
    constructor() { 
        
        EstimatedDiameterContainer.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EstimatedDiameterContainer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EstimatedDiameterContainer} obj Optional instance to populate.
     * @return {module:model/EstimatedDiameterContainer} The populated <code>EstimatedDiameterContainer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EstimatedDiameterContainer();

            if (data.hasOwnProperty('feet')) {
                obj['feet'] = EstimatedDiameter.constructFromObject(data['feet']);
            }
            if (data.hasOwnProperty('kilometers')) {
                obj['kilometers'] = EstimatedDiameter.constructFromObject(data['kilometers']);
            }
            if (data.hasOwnProperty('meters')) {
                obj['meters'] = EstimatedDiameter.constructFromObject(data['meters']);
            }
            if (data.hasOwnProperty('miles')) {
                obj['miles'] = EstimatedDiameter.constructFromObject(data['miles']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EstimatedDiameterContainer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EstimatedDiameterContainer</code>.
     */
    static validateJSON(data) {
        // validate the optional field `feet`
        if (data['feet']) { // data not null
          EstimatedDiameter.validateJSON(data['feet']);
        }
        // validate the optional field `kilometers`
        if (data['kilometers']) { // data not null
          EstimatedDiameter.validateJSON(data['kilometers']);
        }
        // validate the optional field `meters`
        if (data['meters']) { // data not null
          EstimatedDiameter.validateJSON(data['meters']);
        }
        // validate the optional field `miles`
        if (data['miles']) { // data not null
          EstimatedDiameter.validateJSON(data['miles']);
        }

        return true;
    }


}



/**
 * @member {module:model/EstimatedDiameter} feet
 */
EstimatedDiameterContainer.prototype['feet'] = undefined;

/**
 * @member {module:model/EstimatedDiameter} kilometers
 */
EstimatedDiameterContainer.prototype['kilometers'] = undefined;

/**
 * @member {module:model/EstimatedDiameter} meters
 */
EstimatedDiameterContainer.prototype['meters'] = undefined;

/**
 * @member {module:model/EstimatedDiameter} miles
 */
EstimatedDiameterContainer.prototype['miles'] = undefined;






export default EstimatedDiameterContainer;

