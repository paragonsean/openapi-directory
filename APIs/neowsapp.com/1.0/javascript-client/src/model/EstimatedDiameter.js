/**
 * NeoWs - (Near Earth Object Web Service)
 * A web service for near earth objects. All the data is from the <a href=\"http://neo.jpl.nasa.gov/\" target=\"_blank\">NASA JPL Asteroid team</a>.      NeoWs is proud to power AsteroidTracker on <a href=\"https://itunes.apple.com/us/app/asteroid-tracker/id689684901?mt=8\" target=\"_blank\">iOS</a> and <a href=\"https://play.google.com/store/apps/details?id=com.vitruviussoftware.bunifish.asteroidtracker&feature\" target=\"_blank\">Android</a> as well as related apps.    Follow us on <a href=\"https://twitter.com/AsteroidTracker\" target=\"_blank\">Twitter</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The EstimatedDiameter model module.
 * @module model/EstimatedDiameter
 * @version 1.0
 */
class EstimatedDiameter {
    /**
     * Constructs a new <code>EstimatedDiameter</code>.
     * @alias module:model/EstimatedDiameter
     */
    constructor() { 
        
        EstimatedDiameter.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>EstimatedDiameter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EstimatedDiameter} obj Optional instance to populate.
     * @return {module:model/EstimatedDiameter} The populated <code>EstimatedDiameter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EstimatedDiameter();

            if (data.hasOwnProperty('estimated_diameter_max')) {
                obj['estimated_diameter_max'] = ApiClient.convertToType(data['estimated_diameter_max'], 'Number');
            }
            if (data.hasOwnProperty('estimated_diameter_min')) {
                obj['estimated_diameter_min'] = ApiClient.convertToType(data['estimated_diameter_min'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EstimatedDiameter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EstimatedDiameter</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * An estimate of the maximum size of the Asteroid - bases on the abosolute magnitude
 * @member {Number} estimated_diameter_max
 */
EstimatedDiameter.prototype['estimated_diameter_max'] = undefined;

/**
 * An estimate of the minimum size of the Asteroid - bases on the abosolute magnitude
 * @member {Number} estimated_diameter_min
 */
EstimatedDiameter.prototype['estimated_diameter_min'] = undefined;






export default EstimatedDiameter;

