/**
 * NeoWs - (Near Earth Object Web Service)
 * A web service for near earth objects. All the data is from the <a href=\"http://neo.jpl.nasa.gov/\" target=\"_blank\">NASA JPL Asteroid team</a>.      NeoWs is proud to power AsteroidTracker on <a href=\"https://itunes.apple.com/us/app/asteroid-tracker/id689684901?mt=8\" target=\"_blank\">iOS</a> and <a href=\"https://play.google.com/store/apps/details?id=com.vitruviussoftware.bunifish.asteroidtracker&feature\" target=\"_blank\">Android</a> as well as related apps.    Follow us on <a href=\"https://twitter.com/AsteroidTracker\" target=\"_blank\">Twitter</a>
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The OrbitClass model module.
 * @module model/OrbitClass
 * @version 1.0
 */
class OrbitClass {
    /**
     * Constructs a new <code>OrbitClass</code>.
     * @alias module:model/OrbitClass
     */
    constructor() { 
        
        OrbitClass.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrbitClass</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrbitClass} obj Optional instance to populate.
     * @return {module:model/OrbitClass} The populated <code>OrbitClass</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrbitClass();

            if (data.hasOwnProperty('orbit_class_description')) {
                obj['orbit_class_description'] = ApiClient.convertToType(data['orbit_class_description'], 'String');
            }
            if (data.hasOwnProperty('orbit_class_range')) {
                obj['orbit_class_range'] = ApiClient.convertToType(data['orbit_class_range'], 'String');
            }
            if (data.hasOwnProperty('orbit_class_type')) {
                obj['orbit_class_type'] = ApiClient.convertToType(data['orbit_class_type'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrbitClass</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrbitClass</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['orbit_class_description'] && !(typeof data['orbit_class_description'] === 'string' || data['orbit_class_description'] instanceof String)) {
            throw new Error("Expected the field `orbit_class_description` to be a primitive type in the JSON string but got " + data['orbit_class_description']);
        }
        // ensure the json data is a string
        if (data['orbit_class_range'] && !(typeof data['orbit_class_range'] === 'string' || data['orbit_class_range'] instanceof String)) {
            throw new Error("Expected the field `orbit_class_range` to be a primitive type in the JSON string but got " + data['orbit_class_range']);
        }
        // ensure the json data is a string
        if (data['orbit_class_type'] && !(typeof data['orbit_class_type'] === 'string' || data['orbit_class_type'] instanceof String)) {
            throw new Error("Expected the field `orbit_class_type` to be a primitive type in the JSON string but got " + data['orbit_class_type']);
        }

        return true;
    }


}



/**
 * @member {String} orbit_class_description
 */
OrbitClass.prototype['orbit_class_description'] = undefined;

/**
 * @member {String} orbit_class_range
 */
OrbitClass.prototype['orbit_class_range'] = undefined;

/**
 * @member {module:model/OrbitClass.OrbitClassTypeEnum} orbit_class_type
 */
OrbitClass.prototype['orbit_class_type'] = undefined;





/**
 * Allowed values for the <code>orbit_class_type</code> property.
 * @enum {String}
 * @readonly
 */
OrbitClass['OrbitClassTypeEnum'] = {

    /**
     * value: "IEO"
     * @const
     */
    "IEO": "IEO",

    /**
     * value: "ATE"
     * @const
     */
    "ATE": "ATE",

    /**
     * value: "APO"
     * @const
     */
    "APO": "APO",

    /**
     * value: "AMO"
     * @const
     */
    "AMO": "AMO",

    /**
     * value: "MCA"
     * @const
     */
    "MCA": "MCA",

    /**
     * value: "IMB"
     * @const
     */
    "IMB": "IMB",

    /**
     * value: "MBA"
     * @const
     */
    "MBA": "MBA",

    /**
     * value: "OMB"
     * @const
     */
    "OMB": "OMB",

    /**
     * value: "TJN"
     * @const
     */
    "TJN": "TJN",

    /**
     * value: "CEN"
     * @const
     */
    "CEN": "CEN",

    /**
     * value: "TNO"
     * @const
     */
    "TNO": "TNO",

    /**
     * value: "PAA"
     * @const
     */
    "PAA": "PAA",

    /**
     * value: "HYA"
     * @const
     */
    "HYA": "HYA",

    /**
     * value: "HYP"
     * @const
     */
    "HYP": "HYP",

    /**
     * value: "PAR"
     * @const
     */
    "PAR": "PAR",

    /**
     * value: "COM"
     * @const
     */
    "COM": "COM",

    /**
     * value: "JFC"
     * @const
     */
    "JFC": "JFC",

    /**
     * value: "HTC"
     * @const
     */
    "HTC": "HTC",

    /**
     * value: "ETC"
     * @const
     */
    "ETC": "ETC",

    /**
     * value: "CTC"
     * @const
     */
    "CTC": "CTC",

    /**
     * value: "JFc"
     * @const
     */
    "JFc": "JFc"
};



export default OrbitClass;

