/**
 * NeoWs - (Near Earth Object Web Service)
 * A web service for near earth objects. All the data is from the <a href=\"http://neo.jpl.nasa.gov/\" target=\"_blank\">NASA JPL Asteroid team</a>.      NeoWs is proud to power AsteroidTracker on <a href=\"https://itunes.apple.com/us/app/asteroid-tracker/id689684901?mt=8\" target=\"_blank\">iOS</a> and <a href=\"https://play.google.com/store/apps/details?id=com.vitruviussoftware.bunifish.asteroidtracker&feature\" target=\"_blank\">Android</a> as well as related apps.    Follow us on <a href=\"https://twitter.com/AsteroidTracker\" target=\"_blank\">Twitter</a>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPageMetaData.h
 *
 * 
 */

#ifndef OAIPageMetaData_H
#define OAIPageMetaData_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIPageMetaData : public OAIObject {
public:
    OAIPageMetaData();
    OAIPageMetaData(QString json);
    ~OAIPageMetaData() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getNumber() const;
    void setNumber(const qint64 &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    qint64 getSize() const;
    void setSize(const qint64 &size);
    bool is_size_Set() const;
    bool is_size_Valid() const;

    qint64 getTotalElements() const;
    void setTotalElements(const qint64 &total_elements);
    bool is_total_elements_Set() const;
    bool is_total_elements_Valid() const;

    qint64 getTotalPages() const;
    void setTotalPages(const qint64 &total_pages);
    bool is_total_pages_Set() const;
    bool is_total_pages_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    qint64 m_size;
    bool m_size_isSet;
    bool m_size_isValid;

    qint64 m_total_elements;
    bool m_total_elements_isSet;
    bool m_total_elements_isValid;

    qint64 m_total_pages;
    bool m_total_pages_isSet;
    bool m_total_pages_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPageMetaData)

#endif // OAIPageMetaData_H
