/**
 * NeoWs - (Near Earth Object Web Service)
 * A web service for near earth objects. All the data is from the <a href=\"http://neo.jpl.nasa.gov/\" target=\"_blank\">NASA JPL Asteroid team</a>.      NeoWs is proud to power AsteroidTracker on <a href=\"https://itunes.apple.com/us/app/asteroid-tracker/id689684901?mt=8\" target=\"_blank\">iOS</a> and <a href=\"https://play.google.com/store/apps/details?id=com.vitruviussoftware.bunifish.asteroidtracker&feature\" target=\"_blank\">Android</a> as well as related apps.    Follow us on <a href=\"https://twitter.com/AsteroidTracker\" target=\"_blank\">Twitter</a>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEstimatedDiameterContainer.h
 *
 * 
 */

#ifndef OAIEstimatedDiameterContainer_H
#define OAIEstimatedDiameterContainer_H

#include <QJsonObject>

#include "OAIEstimatedDiameter.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIEstimatedDiameter;

class OAIEstimatedDiameterContainer : public OAIObject {
public:
    OAIEstimatedDiameterContainer();
    OAIEstimatedDiameterContainer(QString json);
    ~OAIEstimatedDiameterContainer() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIEstimatedDiameter getFeet() const;
    void setFeet(const OAIEstimatedDiameter &feet);
    bool is_feet_Set() const;
    bool is_feet_Valid() const;

    OAIEstimatedDiameter getKilometers() const;
    void setKilometers(const OAIEstimatedDiameter &kilometers);
    bool is_kilometers_Set() const;
    bool is_kilometers_Valid() const;

    OAIEstimatedDiameter getMeters() const;
    void setMeters(const OAIEstimatedDiameter &meters);
    bool is_meters_Set() const;
    bool is_meters_Valid() const;

    OAIEstimatedDiameter getMiles() const;
    void setMiles(const OAIEstimatedDiameter &miles);
    bool is_miles_Set() const;
    bool is_miles_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIEstimatedDiameter m_feet;
    bool m_feet_isSet;
    bool m_feet_isValid;

    OAIEstimatedDiameter m_kilometers;
    bool m_kilometers_isSet;
    bool m_kilometers_isValid;

    OAIEstimatedDiameter m_meters;
    bool m_meters_isSet;
    bool m_meters_isValid;

    OAIEstimatedDiameter m_miles;
    bool m_miles_isSet;
    bool m_miles_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEstimatedDiameterContainer)

#endif // OAIEstimatedDiameterContainer_H
