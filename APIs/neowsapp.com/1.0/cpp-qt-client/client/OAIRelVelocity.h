/**
 * NeoWs - (Near Earth Object Web Service)
 * A web service for near earth objects. All the data is from the <a href=\"http://neo.jpl.nasa.gov/\" target=\"_blank\">NASA JPL Asteroid team</a>.      NeoWs is proud to power AsteroidTracker on <a href=\"https://itunes.apple.com/us/app/asteroid-tracker/id689684901?mt=8\" target=\"_blank\">iOS</a> and <a href=\"https://play.google.com/store/apps/details?id=com.vitruviussoftware.bunifish.asteroidtracker&feature\" target=\"_blank\">Android</a> as well as related apps.    Follow us on <a href=\"https://twitter.com/AsteroidTracker\" target=\"_blank\">Twitter</a>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRelVelocity.h
 *
 * 
 */

#ifndef OAIRelVelocity_H
#define OAIRelVelocity_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRelVelocity : public OAIObject {
public:
    OAIRelVelocity();
    OAIRelVelocity(QString json);
    ~OAIRelVelocity() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getKilometersPerHour() const;
    void setKilometersPerHour(const QString &kilometers_per_hour);
    bool is_kilometers_per_hour_Set() const;
    bool is_kilometers_per_hour_Valid() const;

    QString getMilesPerHour() const;
    void setMilesPerHour(const QString &miles_per_hour);
    bool is_miles_per_hour_Set() const;
    bool is_miles_per_hour_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_kilometers_per_hour;
    bool m_kilometers_per_hour_isSet;
    bool m_kilometers_per_hour_isValid;

    QString m_miles_per_hour;
    bool m_miles_per_hour_isSet;
    bool m_miles_per_hour_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRelVelocity)

#endif // OAIRelVelocity_H
