/**
 * NeoWs - (Near Earth Object Web Service)
 * A web service for near earth objects. All the data is from the <a href=\"http://neo.jpl.nasa.gov/\" target=\"_blank\">NASA JPL Asteroid team</a>.      NeoWs is proud to power AsteroidTracker on <a href=\"https://itunes.apple.com/us/app/asteroid-tracker/id689684901?mt=8\" target=\"_blank\">iOS</a> and <a href=\"https://play.google.com/store/apps/details?id=com.vitruviussoftware.bunifish.asteroidtracker&feature\" target=\"_blank\">Android</a> as well as related apps.    Follow us on <a href=\"https://twitter.com/AsteroidTracker\" target=\"_blank\">Twitter</a>
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrbitClass.h
 *
 * 
 */

#ifndef OAIOrbitClass_H
#define OAIOrbitClass_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOrbitClass : public OAIObject {
public:
    OAIOrbitClass();
    OAIOrbitClass(QString json);
    ~OAIOrbitClass() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getOrbitClassDescription() const;
    void setOrbitClassDescription(const QString &orbit_class_description);
    bool is_orbit_class_description_Set() const;
    bool is_orbit_class_description_Valid() const;

    QString getOrbitClassRange() const;
    void setOrbitClassRange(const QString &orbit_class_range);
    bool is_orbit_class_range_Set() const;
    bool is_orbit_class_range_Valid() const;

    QString getOrbitClassType() const;
    void setOrbitClassType(const QString &orbit_class_type);
    bool is_orbit_class_type_Set() const;
    bool is_orbit_class_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_orbit_class_description;
    bool m_orbit_class_description_isSet;
    bool m_orbit_class_description_isValid;

    QString m_orbit_class_range;
    bool m_orbit_class_range_isSet;
    bool m_orbit_class_range_isValid;

    QString m_orbit_class_type;
    bool m_orbit_class_type_isSet;
    bool m_orbit_class_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrbitClass)

#endif // OAIOrbitClass_H
