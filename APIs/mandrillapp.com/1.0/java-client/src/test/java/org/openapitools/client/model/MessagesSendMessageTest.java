/*
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MessagesContentResponseAttachmentsInner;
import org.openapitools.client.model.MessagesContentResponseHeaders;
import org.openapitools.client.model.MessagesSendMessageGlobalMergeVarsInner;
import org.openapitools.client.model.MessagesSendMessageMergeVarsInner;
import org.openapitools.client.model.MessagesSendMessageMetadata;
import org.openapitools.client.model.MessagesSendMessageRecipientMetadataInner;
import org.openapitools.client.model.MessagesSendMessageToInner;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for MessagesSendMessage
 */
public class MessagesSendMessageTest {
    private final MessagesSendMessage model = new MessagesSendMessage();

    /**
     * Model tests for MessagesSendMessage
     */
    @Test
    public void testMessagesSendMessage() {
        // TODO: test MessagesSendMessage
    }

    /**
     * Test the property 'attachments'
     */
    @Test
    public void attachmentsTest() {
        // TODO: test attachments
    }

    /**
     * Test the property 'bccAddress'
     */
    @Test
    public void bccAddressTest() {
        // TODO: test bccAddress
    }

    /**
     * Test the property 'fromEmail'
     */
    @Test
    public void fromEmailTest() {
        // TODO: test fromEmail
    }

    /**
     * Test the property 'fromName'
     */
    @Test
    public void fromNameTest() {
        // TODO: test fromName
    }

    /**
     * Test the property 'globalMergeVars'
     */
    @Test
    public void globalMergeVarsTest() {
        // TODO: test globalMergeVars
    }

    /**
     * Test the property 'googleAnalyticsCampaign'
     */
    @Test
    public void googleAnalyticsCampaignTest() {
        // TODO: test googleAnalyticsCampaign
    }

    /**
     * Test the property 'googleAnalyticsDomains'
     */
    @Test
    public void googleAnalyticsDomainsTest() {
        // TODO: test googleAnalyticsDomains
    }

    /**
     * Test the property 'headers'
     */
    @Test
    public void headersTest() {
        // TODO: test headers
    }

    /**
     * Test the property 'html'
     */
    @Test
    public void htmlTest() {
        // TODO: test html
    }

    /**
     * Test the property 'images'
     */
    @Test
    public void imagesTest() {
        // TODO: test images
    }

    /**
     * Test the property 'important'
     */
    @Test
    public void importantTest() {
        // TODO: test important
    }

    /**
     * Test the property 'merge'
     */
    @Test
    public void mergeTest() {
        // TODO: test merge
    }

    /**
     * Test the property 'mergeVars'
     */
    @Test
    public void mergeVarsTest() {
        // TODO: test mergeVars
    }

    /**
     * Test the property 'metadata'
     */
    @Test
    public void metadataTest() {
        // TODO: test metadata
    }

    /**
     * Test the property 'recipientMetadata'
     */
    @Test
    public void recipientMetadataTest() {
        // TODO: test recipientMetadata
    }

    /**
     * Test the property 'subaccount'
     */
    @Test
    public void subaccountTest() {
        // TODO: test subaccount
    }

    /**
     * Test the property 'subject'
     */
    @Test
    public void subjectTest() {
        // TODO: test subject
    }

    /**
     * Test the property 'tags'
     */
    @Test
    public void tagsTest() {
        // TODO: test tags
    }

    /**
     * Test the property 'text'
     */
    @Test
    public void textTest() {
        // TODO: test text
    }

    /**
     * Test the property 'to'
     */
    @Test
    public void toTest() {
        // TODO: test to
    }

}
