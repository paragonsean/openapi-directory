/*
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MessagesContentResponseAttachmentsInner;
import org.openapitools.client.model.MessagesContentResponseHeaders;
import org.openapitools.client.model.MessagesSendMessageGlobalMergeVarsInner;
import org.openapitools.client.model.MessagesSendMessageMergeVarsInner;
import org.openapitools.client.model.MessagesSendMessageMetadata;
import org.openapitools.client.model.MessagesSendMessageRecipientMetadataInner;
import org.openapitools.client.model.MessagesSendMessageToInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MessagesSendMessage
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:29:49.454529-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MessagesSendMessage {
  public static final String SERIALIZED_NAME_ATTACHMENTS = "attachments";
  @SerializedName(SERIALIZED_NAME_ATTACHMENTS)
  private List<MessagesContentResponseAttachmentsInner> attachments = new ArrayList<>();

  public static final String SERIALIZED_NAME_BCC_ADDRESS = "bcc_address";
  @SerializedName(SERIALIZED_NAME_BCC_ADDRESS)
  private String bccAddress;

  public static final String SERIALIZED_NAME_FROM_EMAIL = "from_email";
  @SerializedName(SERIALIZED_NAME_FROM_EMAIL)
  private String fromEmail;

  public static final String SERIALIZED_NAME_FROM_NAME = "from_name";
  @SerializedName(SERIALIZED_NAME_FROM_NAME)
  private String fromName;

  public static final String SERIALIZED_NAME_GLOBAL_MERGE_VARS = "global_merge_vars";
  @SerializedName(SERIALIZED_NAME_GLOBAL_MERGE_VARS)
  private List<MessagesSendMessageGlobalMergeVarsInner> globalMergeVars = new ArrayList<>();

  public static final String SERIALIZED_NAME_GOOGLE_ANALYTICS_CAMPAIGN = "google_analytics_campaign";
  @SerializedName(SERIALIZED_NAME_GOOGLE_ANALYTICS_CAMPAIGN)
  private String googleAnalyticsCampaign;

  public static final String SERIALIZED_NAME_GOOGLE_ANALYTICS_DOMAINS = "google_analytics_domains";
  @SerializedName(SERIALIZED_NAME_GOOGLE_ANALYTICS_DOMAINS)
  private List<String> googleAnalyticsDomains = new ArrayList<>();

  public static final String SERIALIZED_NAME_HEADERS = "headers";
  @SerializedName(SERIALIZED_NAME_HEADERS)
  private MessagesContentResponseHeaders headers;

  public static final String SERIALIZED_NAME_HTML = "html";
  @SerializedName(SERIALIZED_NAME_HTML)
  private String html;

  public static final String SERIALIZED_NAME_IMAGES = "images";
  @SerializedName(SERIALIZED_NAME_IMAGES)
  private List<MessagesContentResponseAttachmentsInner> images = new ArrayList<>();

  public static final String SERIALIZED_NAME_IMPORTANT = "important";
  @SerializedName(SERIALIZED_NAME_IMPORTANT)
  private Boolean important;

  public static final String SERIALIZED_NAME_MERGE = "merge";
  @SerializedName(SERIALIZED_NAME_MERGE)
  private Boolean merge;

  public static final String SERIALIZED_NAME_MERGE_VARS = "merge_vars";
  @SerializedName(SERIALIZED_NAME_MERGE_VARS)
  private List<MessagesSendMessageMergeVarsInner> mergeVars = new ArrayList<>();

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private MessagesSendMessageMetadata metadata;

  public static final String SERIALIZED_NAME_RECIPIENT_METADATA = "recipient_metadata";
  @SerializedName(SERIALIZED_NAME_RECIPIENT_METADATA)
  private List<MessagesSendMessageRecipientMetadataInner> recipientMetadata = new ArrayList<>();

  public static final String SERIALIZED_NAME_SUBACCOUNT = "subaccount";
  @SerializedName(SERIALIZED_NAME_SUBACCOUNT)
  private String subaccount;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_TEXT = "text";
  @SerializedName(SERIALIZED_NAME_TEXT)
  private String text;

  public static final String SERIALIZED_NAME_TO = "to";
  @SerializedName(SERIALIZED_NAME_TO)
  private List<MessagesSendMessageToInner> to = new ArrayList<>();

  public MessagesSendMessage() {
  }

  public MessagesSendMessage attachments(List<MessagesContentResponseAttachmentsInner> attachments) {
    this.attachments = attachments;
    return this;
  }

  public MessagesSendMessage addAttachmentsItem(MessagesContentResponseAttachmentsInner attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

  /**
   * Get attachments
   * @return attachments
   */
  @javax.annotation.Nullable
  public List<MessagesContentResponseAttachmentsInner> getAttachments() {
    return attachments;
  }

  public void setAttachments(List<MessagesContentResponseAttachmentsInner> attachments) {
    this.attachments = attachments;
  }


  public MessagesSendMessage bccAddress(String bccAddress) {
    this.bccAddress = bccAddress;
    return this;
  }

  /**
   * Get bccAddress
   * @return bccAddress
   */
  @javax.annotation.Nullable
  public String getBccAddress() {
    return bccAddress;
  }

  public void setBccAddress(String bccAddress) {
    this.bccAddress = bccAddress;
  }


  public MessagesSendMessage fromEmail(String fromEmail) {
    this.fromEmail = fromEmail;
    return this;
  }

  /**
   * Get fromEmail
   * @return fromEmail
   */
  @javax.annotation.Nullable
  public String getFromEmail() {
    return fromEmail;
  }

  public void setFromEmail(String fromEmail) {
    this.fromEmail = fromEmail;
  }


  public MessagesSendMessage fromName(String fromName) {
    this.fromName = fromName;
    return this;
  }

  /**
   * Get fromName
   * @return fromName
   */
  @javax.annotation.Nullable
  public String getFromName() {
    return fromName;
  }

  public void setFromName(String fromName) {
    this.fromName = fromName;
  }


  public MessagesSendMessage globalMergeVars(List<MessagesSendMessageGlobalMergeVarsInner> globalMergeVars) {
    this.globalMergeVars = globalMergeVars;
    return this;
  }

  public MessagesSendMessage addGlobalMergeVarsItem(MessagesSendMessageGlobalMergeVarsInner globalMergeVarsItem) {
    if (this.globalMergeVars == null) {
      this.globalMergeVars = new ArrayList<>();
    }
    this.globalMergeVars.add(globalMergeVarsItem);
    return this;
  }

  /**
   * Get globalMergeVars
   * @return globalMergeVars
   */
  @javax.annotation.Nullable
  public List<MessagesSendMessageGlobalMergeVarsInner> getGlobalMergeVars() {
    return globalMergeVars;
  }

  public void setGlobalMergeVars(List<MessagesSendMessageGlobalMergeVarsInner> globalMergeVars) {
    this.globalMergeVars = globalMergeVars;
  }


  public MessagesSendMessage googleAnalyticsCampaign(String googleAnalyticsCampaign) {
    this.googleAnalyticsCampaign = googleAnalyticsCampaign;
    return this;
  }

  /**
   * Get googleAnalyticsCampaign
   * @return googleAnalyticsCampaign
   */
  @javax.annotation.Nullable
  public String getGoogleAnalyticsCampaign() {
    return googleAnalyticsCampaign;
  }

  public void setGoogleAnalyticsCampaign(String googleAnalyticsCampaign) {
    this.googleAnalyticsCampaign = googleAnalyticsCampaign;
  }


  public MessagesSendMessage googleAnalyticsDomains(List<String> googleAnalyticsDomains) {
    this.googleAnalyticsDomains = googleAnalyticsDomains;
    return this;
  }

  public MessagesSendMessage addGoogleAnalyticsDomainsItem(String googleAnalyticsDomainsItem) {
    if (this.googleAnalyticsDomains == null) {
      this.googleAnalyticsDomains = new ArrayList<>();
    }
    this.googleAnalyticsDomains.add(googleAnalyticsDomainsItem);
    return this;
  }

  /**
   * Get googleAnalyticsDomains
   * @return googleAnalyticsDomains
   */
  @javax.annotation.Nullable
  public List<String> getGoogleAnalyticsDomains() {
    return googleAnalyticsDomains;
  }

  public void setGoogleAnalyticsDomains(List<String> googleAnalyticsDomains) {
    this.googleAnalyticsDomains = googleAnalyticsDomains;
  }


  public MessagesSendMessage headers(MessagesContentResponseHeaders headers) {
    this.headers = headers;
    return this;
  }

  /**
   * Get headers
   * @return headers
   */
  @javax.annotation.Nullable
  public MessagesContentResponseHeaders getHeaders() {
    return headers;
  }

  public void setHeaders(MessagesContentResponseHeaders headers) {
    this.headers = headers;
  }


  public MessagesSendMessage html(String html) {
    this.html = html;
    return this;
  }

  /**
   * Get html
   * @return html
   */
  @javax.annotation.Nullable
  public String getHtml() {
    return html;
  }

  public void setHtml(String html) {
    this.html = html;
  }


  public MessagesSendMessage images(List<MessagesContentResponseAttachmentsInner> images) {
    this.images = images;
    return this;
  }

  public MessagesSendMessage addImagesItem(MessagesContentResponseAttachmentsInner imagesItem) {
    if (this.images == null) {
      this.images = new ArrayList<>();
    }
    this.images.add(imagesItem);
    return this;
  }

  /**
   * Get images
   * @return images
   */
  @javax.annotation.Nullable
  public List<MessagesContentResponseAttachmentsInner> getImages() {
    return images;
  }

  public void setImages(List<MessagesContentResponseAttachmentsInner> images) {
    this.images = images;
  }


  public MessagesSendMessage important(Boolean important) {
    this.important = important;
    return this;
  }

  /**
   * Get important
   * @return important
   */
  @javax.annotation.Nullable
  public Boolean getImportant() {
    return important;
  }

  public void setImportant(Boolean important) {
    this.important = important;
  }


  public MessagesSendMessage merge(Boolean merge) {
    this.merge = merge;
    return this;
  }

  /**
   * Get merge
   * @return merge
   */
  @javax.annotation.Nullable
  public Boolean getMerge() {
    return merge;
  }

  public void setMerge(Boolean merge) {
    this.merge = merge;
  }


  public MessagesSendMessage mergeVars(List<MessagesSendMessageMergeVarsInner> mergeVars) {
    this.mergeVars = mergeVars;
    return this;
  }

  public MessagesSendMessage addMergeVarsItem(MessagesSendMessageMergeVarsInner mergeVarsItem) {
    if (this.mergeVars == null) {
      this.mergeVars = new ArrayList<>();
    }
    this.mergeVars.add(mergeVarsItem);
    return this;
  }

  /**
   * Get mergeVars
   * @return mergeVars
   */
  @javax.annotation.Nullable
  public List<MessagesSendMessageMergeVarsInner> getMergeVars() {
    return mergeVars;
  }

  public void setMergeVars(List<MessagesSendMessageMergeVarsInner> mergeVars) {
    this.mergeVars = mergeVars;
  }


  public MessagesSendMessage metadata(MessagesSendMessageMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  public MessagesSendMessageMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(MessagesSendMessageMetadata metadata) {
    this.metadata = metadata;
  }


  public MessagesSendMessage recipientMetadata(List<MessagesSendMessageRecipientMetadataInner> recipientMetadata) {
    this.recipientMetadata = recipientMetadata;
    return this;
  }

  public MessagesSendMessage addRecipientMetadataItem(MessagesSendMessageRecipientMetadataInner recipientMetadataItem) {
    if (this.recipientMetadata == null) {
      this.recipientMetadata = new ArrayList<>();
    }
    this.recipientMetadata.add(recipientMetadataItem);
    return this;
  }

  /**
   * Get recipientMetadata
   * @return recipientMetadata
   */
  @javax.annotation.Nullable
  public List<MessagesSendMessageRecipientMetadataInner> getRecipientMetadata() {
    return recipientMetadata;
  }

  public void setRecipientMetadata(List<MessagesSendMessageRecipientMetadataInner> recipientMetadata) {
    this.recipientMetadata = recipientMetadata;
  }


  public MessagesSendMessage subaccount(String subaccount) {
    this.subaccount = subaccount;
    return this;
  }

  /**
   * Get subaccount
   * @return subaccount
   */
  @javax.annotation.Nullable
  public String getSubaccount() {
    return subaccount;
  }

  public void setSubaccount(String subaccount) {
    this.subaccount = subaccount;
  }


  public MessagesSendMessage subject(String subject) {
    this.subject = subject;
    return this;
  }

  /**
   * Get subject
   * @return subject
   */
  @javax.annotation.Nullable
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }


  public MessagesSendMessage tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public MessagesSendMessage addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public MessagesSendMessage text(String text) {
    this.text = text;
    return this;
  }

  /**
   * Get text
   * @return text
   */
  @javax.annotation.Nullable
  public String getText() {
    return text;
  }

  public void setText(String text) {
    this.text = text;
  }


  public MessagesSendMessage to(List<MessagesSendMessageToInner> to) {
    this.to = to;
    return this;
  }

  public MessagesSendMessage addToItem(MessagesSendMessageToInner toItem) {
    if (this.to == null) {
      this.to = new ArrayList<>();
    }
    this.to.add(toItem);
    return this;
  }

  /**
   * Get to
   * @return to
   */
  @javax.annotation.Nullable
  public List<MessagesSendMessageToInner> getTo() {
    return to;
  }

  public void setTo(List<MessagesSendMessageToInner> to) {
    this.to = to;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessagesSendMessage messagesSendMessage = (MessagesSendMessage) o;
    return Objects.equals(this.attachments, messagesSendMessage.attachments) &&
        Objects.equals(this.bccAddress, messagesSendMessage.bccAddress) &&
        Objects.equals(this.fromEmail, messagesSendMessage.fromEmail) &&
        Objects.equals(this.fromName, messagesSendMessage.fromName) &&
        Objects.equals(this.globalMergeVars, messagesSendMessage.globalMergeVars) &&
        Objects.equals(this.googleAnalyticsCampaign, messagesSendMessage.googleAnalyticsCampaign) &&
        Objects.equals(this.googleAnalyticsDomains, messagesSendMessage.googleAnalyticsDomains) &&
        Objects.equals(this.headers, messagesSendMessage.headers) &&
        Objects.equals(this.html, messagesSendMessage.html) &&
        Objects.equals(this.images, messagesSendMessage.images) &&
        Objects.equals(this.important, messagesSendMessage.important) &&
        Objects.equals(this.merge, messagesSendMessage.merge) &&
        Objects.equals(this.mergeVars, messagesSendMessage.mergeVars) &&
        Objects.equals(this.metadata, messagesSendMessage.metadata) &&
        Objects.equals(this.recipientMetadata, messagesSendMessage.recipientMetadata) &&
        Objects.equals(this.subaccount, messagesSendMessage.subaccount) &&
        Objects.equals(this.subject, messagesSendMessage.subject) &&
        Objects.equals(this.tags, messagesSendMessage.tags) &&
        Objects.equals(this.text, messagesSendMessage.text) &&
        Objects.equals(this.to, messagesSendMessage.to);
  }

  @Override
  public int hashCode() {
    return Objects.hash(attachments, bccAddress, fromEmail, fromName, globalMergeVars, googleAnalyticsCampaign, googleAnalyticsDomains, headers, html, images, important, merge, mergeVars, metadata, recipientMetadata, subaccount, subject, tags, text, to);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessagesSendMessage {\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    bccAddress: ").append(toIndentedString(bccAddress)).append("\n");
    sb.append("    fromEmail: ").append(toIndentedString(fromEmail)).append("\n");
    sb.append("    fromName: ").append(toIndentedString(fromName)).append("\n");
    sb.append("    globalMergeVars: ").append(toIndentedString(globalMergeVars)).append("\n");
    sb.append("    googleAnalyticsCampaign: ").append(toIndentedString(googleAnalyticsCampaign)).append("\n");
    sb.append("    googleAnalyticsDomains: ").append(toIndentedString(googleAnalyticsDomains)).append("\n");
    sb.append("    headers: ").append(toIndentedString(headers)).append("\n");
    sb.append("    html: ").append(toIndentedString(html)).append("\n");
    sb.append("    images: ").append(toIndentedString(images)).append("\n");
    sb.append("    important: ").append(toIndentedString(important)).append("\n");
    sb.append("    merge: ").append(toIndentedString(merge)).append("\n");
    sb.append("    mergeVars: ").append(toIndentedString(mergeVars)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    recipientMetadata: ").append(toIndentedString(recipientMetadata)).append("\n");
    sb.append("    subaccount: ").append(toIndentedString(subaccount)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    text: ").append(toIndentedString(text)).append("\n");
    sb.append("    to: ").append(toIndentedString(to)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("attachments");
    openapiFields.add("bcc_address");
    openapiFields.add("from_email");
    openapiFields.add("from_name");
    openapiFields.add("global_merge_vars");
    openapiFields.add("google_analytics_campaign");
    openapiFields.add("google_analytics_domains");
    openapiFields.add("headers");
    openapiFields.add("html");
    openapiFields.add("images");
    openapiFields.add("important");
    openapiFields.add("merge");
    openapiFields.add("merge_vars");
    openapiFields.add("metadata");
    openapiFields.add("recipient_metadata");
    openapiFields.add("subaccount");
    openapiFields.add("subject");
    openapiFields.add("tags");
    openapiFields.add("text");
    openapiFields.add("to");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MessagesSendMessage
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MessagesSendMessage.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MessagesSendMessage is not found in the empty JSON string", MessagesSendMessage.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MessagesSendMessage.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MessagesSendMessage` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (jsonObj.get("attachments") != null && !jsonObj.get("attachments").isJsonNull()) {
        JsonArray jsonArrayattachments = jsonObj.getAsJsonArray("attachments");
        if (jsonArrayattachments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attachments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attachments` to be an array in the JSON string but got `%s`", jsonObj.get("attachments").toString()));
          }

          // validate the optional field `attachments` (array)
          for (int i = 0; i < jsonArrayattachments.size(); i++) {
            MessagesContentResponseAttachmentsInner.validateJsonElement(jsonArrayattachments.get(i));
          };
        }
      }
      if ((jsonObj.get("bcc_address") != null && !jsonObj.get("bcc_address").isJsonNull()) && !jsonObj.get("bcc_address").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `bcc_address` to be a primitive type in the JSON string but got `%s`", jsonObj.get("bcc_address").toString()));
      }
      if ((jsonObj.get("from_email") != null && !jsonObj.get("from_email").isJsonNull()) && !jsonObj.get("from_email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from_email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from_email").toString()));
      }
      if ((jsonObj.get("from_name") != null && !jsonObj.get("from_name").isJsonNull()) && !jsonObj.get("from_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `from_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("from_name").toString()));
      }
      if (jsonObj.get("global_merge_vars") != null && !jsonObj.get("global_merge_vars").isJsonNull()) {
        JsonArray jsonArrayglobalMergeVars = jsonObj.getAsJsonArray("global_merge_vars");
        if (jsonArrayglobalMergeVars != null) {
          // ensure the json data is an array
          if (!jsonObj.get("global_merge_vars").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `global_merge_vars` to be an array in the JSON string but got `%s`", jsonObj.get("global_merge_vars").toString()));
          }

          // validate the optional field `global_merge_vars` (array)
          for (int i = 0; i < jsonArrayglobalMergeVars.size(); i++) {
            MessagesSendMessageGlobalMergeVarsInner.validateJsonElement(jsonArrayglobalMergeVars.get(i));
          };
        }
      }
      if ((jsonObj.get("google_analytics_campaign") != null && !jsonObj.get("google_analytics_campaign").isJsonNull()) && !jsonObj.get("google_analytics_campaign").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `google_analytics_campaign` to be a primitive type in the JSON string but got `%s`", jsonObj.get("google_analytics_campaign").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("google_analytics_domains") != null && !jsonObj.get("google_analytics_domains").isJsonNull() && !jsonObj.get("google_analytics_domains").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `google_analytics_domains` to be an array in the JSON string but got `%s`", jsonObj.get("google_analytics_domains").toString()));
      }
      // validate the optional field `headers`
      if (jsonObj.get("headers") != null && !jsonObj.get("headers").isJsonNull()) {
        MessagesContentResponseHeaders.validateJsonElement(jsonObj.get("headers"));
      }
      if ((jsonObj.get("html") != null && !jsonObj.get("html").isJsonNull()) && !jsonObj.get("html").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `html` to be a primitive type in the JSON string but got `%s`", jsonObj.get("html").toString()));
      }
      if (jsonObj.get("images") != null && !jsonObj.get("images").isJsonNull()) {
        JsonArray jsonArrayimages = jsonObj.getAsJsonArray("images");
        if (jsonArrayimages != null) {
          // ensure the json data is an array
          if (!jsonObj.get("images").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `images` to be an array in the JSON string but got `%s`", jsonObj.get("images").toString()));
          }

          // validate the optional field `images` (array)
          for (int i = 0; i < jsonArrayimages.size(); i++) {
            MessagesContentResponseAttachmentsInner.validateJsonElement(jsonArrayimages.get(i));
          };
        }
      }
      if (jsonObj.get("merge_vars") != null && !jsonObj.get("merge_vars").isJsonNull()) {
        JsonArray jsonArraymergeVars = jsonObj.getAsJsonArray("merge_vars");
        if (jsonArraymergeVars != null) {
          // ensure the json data is an array
          if (!jsonObj.get("merge_vars").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `merge_vars` to be an array in the JSON string but got `%s`", jsonObj.get("merge_vars").toString()));
          }

          // validate the optional field `merge_vars` (array)
          for (int i = 0; i < jsonArraymergeVars.size(); i++) {
            MessagesSendMessageMergeVarsInner.validateJsonElement(jsonArraymergeVars.get(i));
          };
        }
      }
      // validate the optional field `metadata`
      if (jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) {
        MessagesSendMessageMetadata.validateJsonElement(jsonObj.get("metadata"));
      }
      if (jsonObj.get("recipient_metadata") != null && !jsonObj.get("recipient_metadata").isJsonNull()) {
        JsonArray jsonArrayrecipientMetadata = jsonObj.getAsJsonArray("recipient_metadata");
        if (jsonArrayrecipientMetadata != null) {
          // ensure the json data is an array
          if (!jsonObj.get("recipient_metadata").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `recipient_metadata` to be an array in the JSON string but got `%s`", jsonObj.get("recipient_metadata").toString()));
          }

          // validate the optional field `recipient_metadata` (array)
          for (int i = 0; i < jsonArrayrecipientMetadata.size(); i++) {
            MessagesSendMessageRecipientMetadataInner.validateJsonElement(jsonArrayrecipientMetadata.get(i));
          };
        }
      }
      if ((jsonObj.get("subaccount") != null && !jsonObj.get("subaccount").isJsonNull()) && !jsonObj.get("subaccount").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subaccount` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subaccount").toString()));
      }
      if ((jsonObj.get("subject") != null && !jsonObj.get("subject").isJsonNull()) && !jsonObj.get("subject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subject").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull() && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if ((jsonObj.get("text") != null && !jsonObj.get("text").isJsonNull()) && !jsonObj.get("text").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `text` to be a primitive type in the JSON string but got `%s`", jsonObj.get("text").toString()));
      }
      if (jsonObj.get("to") != null && !jsonObj.get("to").isJsonNull()) {
        JsonArray jsonArrayto = jsonObj.getAsJsonArray("to");
        if (jsonArrayto != null) {
          // ensure the json data is an array
          if (!jsonObj.get("to").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `to` to be an array in the JSON string but got `%s`", jsonObj.get("to").toString()));
          }

          // validate the optional field `to` (array)
          for (int i = 0; i < jsonArrayto.size(); i++) {
            MessagesSendMessageToInner.validateJsonElement(jsonArrayto.get(i));
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MessagesSendMessage.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MessagesSendMessage' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MessagesSendMessage> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MessagesSendMessage.class));

       return (TypeAdapter<T>) new TypeAdapter<MessagesSendMessage>() {
           @Override
           public void write(JsonWriter out, MessagesSendMessage value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MessagesSendMessage read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MessagesSendMessage given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MessagesSendMessage
   * @throws IOException if the JSON string is invalid with respect to MessagesSendMessage
   */
  public static MessagesSendMessage fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MessagesSendMessage.class);
  }

  /**
   * Convert an instance of MessagesSendMessage to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

