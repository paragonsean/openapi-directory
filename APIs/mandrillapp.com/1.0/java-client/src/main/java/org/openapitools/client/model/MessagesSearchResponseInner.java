/*
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.MessagesInfoResponseClicksDetailInner;
import org.openapitools.client.model.MessagesInfoResponseMetadata;
import org.openapitools.client.model.MessagesInfoResponseOpensDetailInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MessagesSearchResponseInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:29:49.454529-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class MessagesSearchResponseInner {
  public static final String SERIALIZED_NAME_ID = "_id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CLICKS = "clicks";
  @SerializedName(SERIALIZED_NAME_CLICKS)
  private Integer clicks;

  public static final String SERIALIZED_NAME_CLICKS_DETAIL = "clicks_detail";
  @SerializedName(SERIALIZED_NAME_CLICKS_DETAIL)
  private List<MessagesInfoResponseClicksDetailInner> clicksDetail = new ArrayList<>();

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private MessagesInfoResponseMetadata metadata;

  public static final String SERIALIZED_NAME_OPENS = "opens";
  @SerializedName(SERIALIZED_NAME_OPENS)
  private Integer opens;

  public static final String SERIALIZED_NAME_OPENS_DETAIL = "opens_detail";
  @SerializedName(SERIALIZED_NAME_OPENS_DETAIL)
  private List<MessagesInfoResponseOpensDetailInner> opensDetail = new ArrayList<>();

  public static final String SERIALIZED_NAME_SENDER = "sender";
  @SerializedName(SERIALIZED_NAME_SENDER)
  private String sender;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_SUBJECT = "subject";
  @SerializedName(SERIALIZED_NAME_SUBJECT)
  private String subject;

  public static final String SERIALIZED_NAME_TAGS = "tags";
  @SerializedName(SERIALIZED_NAME_TAGS)
  private List<String> tags = new ArrayList<>();

  public static final String SERIALIZED_NAME_TEMPLATE = "template";
  @SerializedName(SERIALIZED_NAME_TEMPLATE)
  private String template;

  public static final String SERIALIZED_NAME_TS = "ts";
  @SerializedName(SERIALIZED_NAME_TS)
  private Integer ts;

  public MessagesSearchResponseInner() {
  }

  public MessagesSearchResponseInner id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public MessagesSearchResponseInner clicks(Integer clicks) {
    this.clicks = clicks;
    return this;
  }

  /**
   * Get clicks
   * @return clicks
   */
  @javax.annotation.Nullable
  public Integer getClicks() {
    return clicks;
  }

  public void setClicks(Integer clicks) {
    this.clicks = clicks;
  }


  public MessagesSearchResponseInner clicksDetail(List<MessagesInfoResponseClicksDetailInner> clicksDetail) {
    this.clicksDetail = clicksDetail;
    return this;
  }

  public MessagesSearchResponseInner addClicksDetailItem(MessagesInfoResponseClicksDetailInner clicksDetailItem) {
    if (this.clicksDetail == null) {
      this.clicksDetail = new ArrayList<>();
    }
    this.clicksDetail.add(clicksDetailItem);
    return this;
  }

  /**
   * Get clicksDetail
   * @return clicksDetail
   */
  @javax.annotation.Nullable
  public List<MessagesInfoResponseClicksDetailInner> getClicksDetail() {
    return clicksDetail;
  }

  public void setClicksDetail(List<MessagesInfoResponseClicksDetailInner> clicksDetail) {
    this.clicksDetail = clicksDetail;
  }


  public MessagesSearchResponseInner email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public MessagesSearchResponseInner metadata(MessagesInfoResponseMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

  /**
   * Get metadata
   * @return metadata
   */
  @javax.annotation.Nullable
  public MessagesInfoResponseMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(MessagesInfoResponseMetadata metadata) {
    this.metadata = metadata;
  }


  public MessagesSearchResponseInner opens(Integer opens) {
    this.opens = opens;
    return this;
  }

  /**
   * Get opens
   * @return opens
   */
  @javax.annotation.Nullable
  public Integer getOpens() {
    return opens;
  }

  public void setOpens(Integer opens) {
    this.opens = opens;
  }


  public MessagesSearchResponseInner opensDetail(List<MessagesInfoResponseOpensDetailInner> opensDetail) {
    this.opensDetail = opensDetail;
    return this;
  }

  public MessagesSearchResponseInner addOpensDetailItem(MessagesInfoResponseOpensDetailInner opensDetailItem) {
    if (this.opensDetail == null) {
      this.opensDetail = new ArrayList<>();
    }
    this.opensDetail.add(opensDetailItem);
    return this;
  }

  /**
   * Get opensDetail
   * @return opensDetail
   */
  @javax.annotation.Nullable
  public List<MessagesInfoResponseOpensDetailInner> getOpensDetail() {
    return opensDetail;
  }

  public void setOpensDetail(List<MessagesInfoResponseOpensDetailInner> opensDetail) {
    this.opensDetail = opensDetail;
  }


  public MessagesSearchResponseInner sender(String sender) {
    this.sender = sender;
    return this;
  }

  /**
   * Get sender
   * @return sender
   */
  @javax.annotation.Nullable
  public String getSender() {
    return sender;
  }

  public void setSender(String sender) {
    this.sender = sender;
  }


  public MessagesSearchResponseInner state(String state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }


  public MessagesSearchResponseInner subject(String subject) {
    this.subject = subject;
    return this;
  }

  /**
   * Get subject
   * @return subject
   */
  @javax.annotation.Nullable
  public String getSubject() {
    return subject;
  }

  public void setSubject(String subject) {
    this.subject = subject;
  }


  public MessagesSearchResponseInner tags(List<String> tags) {
    this.tags = tags;
    return this;
  }

  public MessagesSearchResponseInner addTagsItem(String tagsItem) {
    if (this.tags == null) {
      this.tags = new ArrayList<>();
    }
    this.tags.add(tagsItem);
    return this;
  }

  /**
   * Get tags
   * @return tags
   */
  @javax.annotation.Nullable
  public List<String> getTags() {
    return tags;
  }

  public void setTags(List<String> tags) {
    this.tags = tags;
  }


  public MessagesSearchResponseInner template(String template) {
    this.template = template;
    return this;
  }

  /**
   * Get template
   * @return template
   */
  @javax.annotation.Nullable
  public String getTemplate() {
    return template;
  }

  public void setTemplate(String template) {
    this.template = template;
  }


  public MessagesSearchResponseInner ts(Integer ts) {
    this.ts = ts;
    return this;
  }

  /**
   * Get ts
   * @return ts
   */
  @javax.annotation.Nullable
  public Integer getTs() {
    return ts;
  }

  public void setTs(Integer ts) {
    this.ts = ts;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessagesSearchResponseInner messagesSearchResponseInner = (MessagesSearchResponseInner) o;
    return Objects.equals(this.id, messagesSearchResponseInner.id) &&
        Objects.equals(this.clicks, messagesSearchResponseInner.clicks) &&
        Objects.equals(this.clicksDetail, messagesSearchResponseInner.clicksDetail) &&
        Objects.equals(this.email, messagesSearchResponseInner.email) &&
        Objects.equals(this.metadata, messagesSearchResponseInner.metadata) &&
        Objects.equals(this.opens, messagesSearchResponseInner.opens) &&
        Objects.equals(this.opensDetail, messagesSearchResponseInner.opensDetail) &&
        Objects.equals(this.sender, messagesSearchResponseInner.sender) &&
        Objects.equals(this.state, messagesSearchResponseInner.state) &&
        Objects.equals(this.subject, messagesSearchResponseInner.subject) &&
        Objects.equals(this.tags, messagesSearchResponseInner.tags) &&
        Objects.equals(this.template, messagesSearchResponseInner.template) &&
        Objects.equals(this.ts, messagesSearchResponseInner.ts);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, clicks, clicksDetail, email, metadata, opens, opensDetail, sender, state, subject, tags, template, ts);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessagesSearchResponseInner {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    clicks: ").append(toIndentedString(clicks)).append("\n");
    sb.append("    clicksDetail: ").append(toIndentedString(clicksDetail)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    opens: ").append(toIndentedString(opens)).append("\n");
    sb.append("    opensDetail: ").append(toIndentedString(opensDetail)).append("\n");
    sb.append("    sender: ").append(toIndentedString(sender)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    subject: ").append(toIndentedString(subject)).append("\n");
    sb.append("    tags: ").append(toIndentedString(tags)).append("\n");
    sb.append("    template: ").append(toIndentedString(template)).append("\n");
    sb.append("    ts: ").append(toIndentedString(ts)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("_id");
    openapiFields.add("clicks");
    openapiFields.add("clicks_detail");
    openapiFields.add("email");
    openapiFields.add("metadata");
    openapiFields.add("opens");
    openapiFields.add("opens_detail");
    openapiFields.add("sender");
    openapiFields.add("state");
    openapiFields.add("subject");
    openapiFields.add("tags");
    openapiFields.add("template");
    openapiFields.add("ts");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to MessagesSearchResponseInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!MessagesSearchResponseInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in MessagesSearchResponseInner is not found in the empty JSON string", MessagesSearchResponseInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!MessagesSearchResponseInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MessagesSearchResponseInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("_id") != null && !jsonObj.get("_id").isJsonNull()) && !jsonObj.get("_id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `_id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("_id").toString()));
      }
      if (jsonObj.get("clicks_detail") != null && !jsonObj.get("clicks_detail").isJsonNull()) {
        JsonArray jsonArrayclicksDetail = jsonObj.getAsJsonArray("clicks_detail");
        if (jsonArrayclicksDetail != null) {
          // ensure the json data is an array
          if (!jsonObj.get("clicks_detail").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `clicks_detail` to be an array in the JSON string but got `%s`", jsonObj.get("clicks_detail").toString()));
          }

          // validate the optional field `clicks_detail` (array)
          for (int i = 0; i < jsonArrayclicksDetail.size(); i++) {
            MessagesInfoResponseClicksDetailInner.validateJsonElement(jsonArrayclicksDetail.get(i));
          };
        }
      }
      if ((jsonObj.get("email") != null && !jsonObj.get("email").isJsonNull()) && !jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      // validate the optional field `metadata`
      if (jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) {
        MessagesInfoResponseMetadata.validateJsonElement(jsonObj.get("metadata"));
      }
      if (jsonObj.get("opens_detail") != null && !jsonObj.get("opens_detail").isJsonNull()) {
        JsonArray jsonArrayopensDetail = jsonObj.getAsJsonArray("opens_detail");
        if (jsonArrayopensDetail != null) {
          // ensure the json data is an array
          if (!jsonObj.get("opens_detail").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `opens_detail` to be an array in the JSON string but got `%s`", jsonObj.get("opens_detail").toString()));
          }

          // validate the optional field `opens_detail` (array)
          for (int i = 0; i < jsonArrayopensDetail.size(); i++) {
            MessagesInfoResponseOpensDetailInner.validateJsonElement(jsonArrayopensDetail.get(i));
          };
        }
      }
      if ((jsonObj.get("sender") != null && !jsonObj.get("sender").isJsonNull()) && !jsonObj.get("sender").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `sender` to be a primitive type in the JSON string but got `%s`", jsonObj.get("sender").toString()));
      }
      if ((jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) && !jsonObj.get("state").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `state` to be a primitive type in the JSON string but got `%s`", jsonObj.get("state").toString()));
      }
      if ((jsonObj.get("subject") != null && !jsonObj.get("subject").isJsonNull()) && !jsonObj.get("subject").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `subject` to be a primitive type in the JSON string but got `%s`", jsonObj.get("subject").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("tags") != null && !jsonObj.get("tags").isJsonNull() && !jsonObj.get("tags").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `tags` to be an array in the JSON string but got `%s`", jsonObj.get("tags").toString()));
      }
      if ((jsonObj.get("template") != null && !jsonObj.get("template").isJsonNull()) && !jsonObj.get("template").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `template` to be a primitive type in the JSON string but got `%s`", jsonObj.get("template").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MessagesSearchResponseInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MessagesSearchResponseInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MessagesSearchResponseInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MessagesSearchResponseInner.class));

       return (TypeAdapter<T>) new TypeAdapter<MessagesSearchResponseInner>() {
           @Override
           public void write(JsonWriter out, MessagesSearchResponseInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MessagesSearchResponseInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of MessagesSearchResponseInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of MessagesSearchResponseInner
   * @throws IOException if the JSON string is invalid with respect to MessagesSearchResponseInner
   */
  public static MessagesSearchResponseInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MessagesSearchResponseInner.class);
  }

  /**
   * Convert an instance of MessagesSearchResponseInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

