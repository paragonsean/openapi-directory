/*
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.SendersInfoResponseStatsLast30Days;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SubaccountsInfoResponse
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:29:49.454529-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SubaccountsInfoResponse {
  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private String createdAt;

  public static final String SERIALIZED_NAME_CUSTOM_QUOTA = "custom_quota";
  @SerializedName(SERIALIZED_NAME_CUSTOM_QUOTA)
  private Integer customQuota;

  public static final String SERIALIZED_NAME_FIRST_SENT_AT = "first_sent_at";
  @SerializedName(SERIALIZED_NAME_FIRST_SENT_AT)
  private String firstSentAt;

  public static final String SERIALIZED_NAME_HOURLY_QUOTA = "hourly_quota";
  @SerializedName(SERIALIZED_NAME_HOURLY_QUOTA)
  private Integer hourlyQuota;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_LAST30_DAYS = "last_30_days";
  @SerializedName(SERIALIZED_NAME_LAST30_DAYS)
  private SendersInfoResponseStatsLast30Days last30Days;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_NOTES = "notes";
  @SerializedName(SERIALIZED_NAME_NOTES)
  private String notes;

  public static final String SERIALIZED_NAME_REPUTATION = "reputation";
  @SerializedName(SERIALIZED_NAME_REPUTATION)
  private Integer reputation;

  public static final String SERIALIZED_NAME_SENT_HOURLY = "sent_hourly";
  @SerializedName(SERIALIZED_NAME_SENT_HOURLY)
  private Integer sentHourly;

  public static final String SERIALIZED_NAME_SENT_MONTHLY = "sent_monthly";
  @SerializedName(SERIALIZED_NAME_SENT_MONTHLY)
  private Integer sentMonthly;

  public static final String SERIALIZED_NAME_SENT_TOTAL = "sent_total";
  @SerializedName(SERIALIZED_NAME_SENT_TOTAL)
  private Integer sentTotal;

  public static final String SERIALIZED_NAME_SENT_WEEKLY = "sent_weekly";
  @SerializedName(SERIALIZED_NAME_SENT_WEEKLY)
  private Integer sentWeekly;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public SubaccountsInfoResponse() {
  }

  public SubaccountsInfoResponse createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @javax.annotation.Nullable
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }


  public SubaccountsInfoResponse customQuota(Integer customQuota) {
    this.customQuota = customQuota;
    return this;
  }

  /**
   * Get customQuota
   * @return customQuota
   */
  @javax.annotation.Nullable
  public Integer getCustomQuota() {
    return customQuota;
  }

  public void setCustomQuota(Integer customQuota) {
    this.customQuota = customQuota;
  }


  public SubaccountsInfoResponse firstSentAt(String firstSentAt) {
    this.firstSentAt = firstSentAt;
    return this;
  }

  /**
   * Get firstSentAt
   * @return firstSentAt
   */
  @javax.annotation.Nullable
  public String getFirstSentAt() {
    return firstSentAt;
  }

  public void setFirstSentAt(String firstSentAt) {
    this.firstSentAt = firstSentAt;
  }


  public SubaccountsInfoResponse hourlyQuota(Integer hourlyQuota) {
    this.hourlyQuota = hourlyQuota;
    return this;
  }

  /**
   * Get hourlyQuota
   * @return hourlyQuota
   */
  @javax.annotation.Nullable
  public Integer getHourlyQuota() {
    return hourlyQuota;
  }

  public void setHourlyQuota(Integer hourlyQuota) {
    this.hourlyQuota = hourlyQuota;
  }


  public SubaccountsInfoResponse id(String id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public SubaccountsInfoResponse last30Days(SendersInfoResponseStatsLast30Days last30Days) {
    this.last30Days = last30Days;
    return this;
  }

  /**
   * Get last30Days
   * @return last30Days
   */
  @javax.annotation.Nullable
  public SendersInfoResponseStatsLast30Days getLast30Days() {
    return last30Days;
  }

  public void setLast30Days(SendersInfoResponseStatsLast30Days last30Days) {
    this.last30Days = last30Days;
  }


  public SubaccountsInfoResponse name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public SubaccountsInfoResponse notes(String notes) {
    this.notes = notes;
    return this;
  }

  /**
   * Get notes
   * @return notes
   */
  @javax.annotation.Nullable
  public String getNotes() {
    return notes;
  }

  public void setNotes(String notes) {
    this.notes = notes;
  }


  public SubaccountsInfoResponse reputation(Integer reputation) {
    this.reputation = reputation;
    return this;
  }

  /**
   * Get reputation
   * @return reputation
   */
  @javax.annotation.Nullable
  public Integer getReputation() {
    return reputation;
  }

  public void setReputation(Integer reputation) {
    this.reputation = reputation;
  }


  public SubaccountsInfoResponse sentHourly(Integer sentHourly) {
    this.sentHourly = sentHourly;
    return this;
  }

  /**
   * Get sentHourly
   * @return sentHourly
   */
  @javax.annotation.Nullable
  public Integer getSentHourly() {
    return sentHourly;
  }

  public void setSentHourly(Integer sentHourly) {
    this.sentHourly = sentHourly;
  }


  public SubaccountsInfoResponse sentMonthly(Integer sentMonthly) {
    this.sentMonthly = sentMonthly;
    return this;
  }

  /**
   * Get sentMonthly
   * @return sentMonthly
   */
  @javax.annotation.Nullable
  public Integer getSentMonthly() {
    return sentMonthly;
  }

  public void setSentMonthly(Integer sentMonthly) {
    this.sentMonthly = sentMonthly;
  }


  public SubaccountsInfoResponse sentTotal(Integer sentTotal) {
    this.sentTotal = sentTotal;
    return this;
  }

  /**
   * Get sentTotal
   * @return sentTotal
   */
  @javax.annotation.Nullable
  public Integer getSentTotal() {
    return sentTotal;
  }

  public void setSentTotal(Integer sentTotal) {
    this.sentTotal = sentTotal;
  }


  public SubaccountsInfoResponse sentWeekly(Integer sentWeekly) {
    this.sentWeekly = sentWeekly;
    return this;
  }

  /**
   * Get sentWeekly
   * @return sentWeekly
   */
  @javax.annotation.Nullable
  public Integer getSentWeekly() {
    return sentWeekly;
  }

  public void setSentWeekly(Integer sentWeekly) {
    this.sentWeekly = sentWeekly;
  }


  public SubaccountsInfoResponse status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SubaccountsInfoResponse subaccountsInfoResponse = (SubaccountsInfoResponse) o;
    return Objects.equals(this.createdAt, subaccountsInfoResponse.createdAt) &&
        Objects.equals(this.customQuota, subaccountsInfoResponse.customQuota) &&
        Objects.equals(this.firstSentAt, subaccountsInfoResponse.firstSentAt) &&
        Objects.equals(this.hourlyQuota, subaccountsInfoResponse.hourlyQuota) &&
        Objects.equals(this.id, subaccountsInfoResponse.id) &&
        Objects.equals(this.last30Days, subaccountsInfoResponse.last30Days) &&
        Objects.equals(this.name, subaccountsInfoResponse.name) &&
        Objects.equals(this.notes, subaccountsInfoResponse.notes) &&
        Objects.equals(this.reputation, subaccountsInfoResponse.reputation) &&
        Objects.equals(this.sentHourly, subaccountsInfoResponse.sentHourly) &&
        Objects.equals(this.sentMonthly, subaccountsInfoResponse.sentMonthly) &&
        Objects.equals(this.sentTotal, subaccountsInfoResponse.sentTotal) &&
        Objects.equals(this.sentWeekly, subaccountsInfoResponse.sentWeekly) &&
        Objects.equals(this.status, subaccountsInfoResponse.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, customQuota, firstSentAt, hourlyQuota, id, last30Days, name, notes, reputation, sentHourly, sentMonthly, sentTotal, sentWeekly, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SubaccountsInfoResponse {\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    customQuota: ").append(toIndentedString(customQuota)).append("\n");
    sb.append("    firstSentAt: ").append(toIndentedString(firstSentAt)).append("\n");
    sb.append("    hourlyQuota: ").append(toIndentedString(hourlyQuota)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    last30Days: ").append(toIndentedString(last30Days)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    notes: ").append(toIndentedString(notes)).append("\n");
    sb.append("    reputation: ").append(toIndentedString(reputation)).append("\n");
    sb.append("    sentHourly: ").append(toIndentedString(sentHourly)).append("\n");
    sb.append("    sentMonthly: ").append(toIndentedString(sentMonthly)).append("\n");
    sb.append("    sentTotal: ").append(toIndentedString(sentTotal)).append("\n");
    sb.append("    sentWeekly: ").append(toIndentedString(sentWeekly)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("created_at");
    openapiFields.add("custom_quota");
    openapiFields.add("first_sent_at");
    openapiFields.add("hourly_quota");
    openapiFields.add("id");
    openapiFields.add("last_30_days");
    openapiFields.add("name");
    openapiFields.add("notes");
    openapiFields.add("reputation");
    openapiFields.add("sent_hourly");
    openapiFields.add("sent_monthly");
    openapiFields.add("sent_total");
    openapiFields.add("sent_weekly");
    openapiFields.add("status");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SubaccountsInfoResponse
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SubaccountsInfoResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SubaccountsInfoResponse is not found in the empty JSON string", SubaccountsInfoResponse.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SubaccountsInfoResponse.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SubaccountsInfoResponse` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("created_at") != null && !jsonObj.get("created_at").isJsonNull()) && !jsonObj.get("created_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `created_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("created_at").toString()));
      }
      if ((jsonObj.get("first_sent_at") != null && !jsonObj.get("first_sent_at").isJsonNull()) && !jsonObj.get("first_sent_at").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `first_sent_at` to be a primitive type in the JSON string but got `%s`", jsonObj.get("first_sent_at").toString()));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `last_30_days`
      if (jsonObj.get("last_30_days") != null && !jsonObj.get("last_30_days").isJsonNull()) {
        SendersInfoResponseStatsLast30Days.validateJsonElement(jsonObj.get("last_30_days"));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("notes") != null && !jsonObj.get("notes").isJsonNull()) && !jsonObj.get("notes").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notes` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notes").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SubaccountsInfoResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SubaccountsInfoResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SubaccountsInfoResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SubaccountsInfoResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<SubaccountsInfoResponse>() {
           @Override
           public void write(JsonWriter out, SubaccountsInfoResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SubaccountsInfoResponse read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SubaccountsInfoResponse given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SubaccountsInfoResponse
   * @throws IOException if the JSON string is invalid with respect to SubaccountsInfoResponse
   */
  public static SubaccountsInfoResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SubaccountsInfoResponse.class);
  }

  /**
   * Convert an instance of SubaccountsInfoResponse to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

