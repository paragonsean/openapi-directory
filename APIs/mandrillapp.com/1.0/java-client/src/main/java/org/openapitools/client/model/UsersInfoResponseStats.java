/*
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.SendersInfoResponseStatsLast30Days;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * UsersInfoResponseStats
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:29:49.454529-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class UsersInfoResponseStats {
  public static final String SERIALIZED_NAME_ALL_TIME = "all_time";
  @SerializedName(SERIALIZED_NAME_ALL_TIME)
  private SendersInfoResponseStatsLast30Days allTime;

  public static final String SERIALIZED_NAME_LAST30_DAYS = "last_30_days";
  @SerializedName(SERIALIZED_NAME_LAST30_DAYS)
  private SendersInfoResponseStatsLast30Days last30Days;

  public static final String SERIALIZED_NAME_LAST60_DAYS = "last_60_days";
  @SerializedName(SERIALIZED_NAME_LAST60_DAYS)
  private SendersInfoResponseStatsLast30Days last60Days;

  public static final String SERIALIZED_NAME_LAST7_DAYS = "last_7_days";
  @SerializedName(SERIALIZED_NAME_LAST7_DAYS)
  private SendersInfoResponseStatsLast30Days last7Days;

  public static final String SERIALIZED_NAME_LAST90_DAYS = "last_90_days";
  @SerializedName(SERIALIZED_NAME_LAST90_DAYS)
  private SendersInfoResponseStatsLast30Days last90Days;

  public static final String SERIALIZED_NAME_TODAY = "today";
  @SerializedName(SERIALIZED_NAME_TODAY)
  private SendersInfoResponseStatsLast30Days today;

  public UsersInfoResponseStats() {
  }

  public UsersInfoResponseStats allTime(SendersInfoResponseStatsLast30Days allTime) {
    this.allTime = allTime;
    return this;
  }

  /**
   * Get allTime
   * @return allTime
   */
  @javax.annotation.Nullable
  public SendersInfoResponseStatsLast30Days getAllTime() {
    return allTime;
  }

  public void setAllTime(SendersInfoResponseStatsLast30Days allTime) {
    this.allTime = allTime;
  }


  public UsersInfoResponseStats last30Days(SendersInfoResponseStatsLast30Days last30Days) {
    this.last30Days = last30Days;
    return this;
  }

  /**
   * Get last30Days
   * @return last30Days
   */
  @javax.annotation.Nullable
  public SendersInfoResponseStatsLast30Days getLast30Days() {
    return last30Days;
  }

  public void setLast30Days(SendersInfoResponseStatsLast30Days last30Days) {
    this.last30Days = last30Days;
  }


  public UsersInfoResponseStats last60Days(SendersInfoResponseStatsLast30Days last60Days) {
    this.last60Days = last60Days;
    return this;
  }

  /**
   * Get last60Days
   * @return last60Days
   */
  @javax.annotation.Nullable
  public SendersInfoResponseStatsLast30Days getLast60Days() {
    return last60Days;
  }

  public void setLast60Days(SendersInfoResponseStatsLast30Days last60Days) {
    this.last60Days = last60Days;
  }


  public UsersInfoResponseStats last7Days(SendersInfoResponseStatsLast30Days last7Days) {
    this.last7Days = last7Days;
    return this;
  }

  /**
   * Get last7Days
   * @return last7Days
   */
  @javax.annotation.Nullable
  public SendersInfoResponseStatsLast30Days getLast7Days() {
    return last7Days;
  }

  public void setLast7Days(SendersInfoResponseStatsLast30Days last7Days) {
    this.last7Days = last7Days;
  }


  public UsersInfoResponseStats last90Days(SendersInfoResponseStatsLast30Days last90Days) {
    this.last90Days = last90Days;
    return this;
  }

  /**
   * Get last90Days
   * @return last90Days
   */
  @javax.annotation.Nullable
  public SendersInfoResponseStatsLast30Days getLast90Days() {
    return last90Days;
  }

  public void setLast90Days(SendersInfoResponseStatsLast30Days last90Days) {
    this.last90Days = last90Days;
  }


  public UsersInfoResponseStats today(SendersInfoResponseStatsLast30Days today) {
    this.today = today;
    return this;
  }

  /**
   * Get today
   * @return today
   */
  @javax.annotation.Nullable
  public SendersInfoResponseStatsLast30Days getToday() {
    return today;
  }

  public void setToday(SendersInfoResponseStatsLast30Days today) {
    this.today = today;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UsersInfoResponseStats usersInfoResponseStats = (UsersInfoResponseStats) o;
    return Objects.equals(this.allTime, usersInfoResponseStats.allTime) &&
        Objects.equals(this.last30Days, usersInfoResponseStats.last30Days) &&
        Objects.equals(this.last60Days, usersInfoResponseStats.last60Days) &&
        Objects.equals(this.last7Days, usersInfoResponseStats.last7Days) &&
        Objects.equals(this.last90Days, usersInfoResponseStats.last90Days) &&
        Objects.equals(this.today, usersInfoResponseStats.today);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allTime, last30Days, last60Days, last7Days, last90Days, today);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UsersInfoResponseStats {\n");
    sb.append("    allTime: ").append(toIndentedString(allTime)).append("\n");
    sb.append("    last30Days: ").append(toIndentedString(last30Days)).append("\n");
    sb.append("    last60Days: ").append(toIndentedString(last60Days)).append("\n");
    sb.append("    last7Days: ").append(toIndentedString(last7Days)).append("\n");
    sb.append("    last90Days: ").append(toIndentedString(last90Days)).append("\n");
    sb.append("    today: ").append(toIndentedString(today)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("all_time");
    openapiFields.add("last_30_days");
    openapiFields.add("last_60_days");
    openapiFields.add("last_7_days");
    openapiFields.add("last_90_days");
    openapiFields.add("today");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to UsersInfoResponseStats
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!UsersInfoResponseStats.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in UsersInfoResponseStats is not found in the empty JSON string", UsersInfoResponseStats.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!UsersInfoResponseStats.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `UsersInfoResponseStats` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      // validate the optional field `all_time`
      if (jsonObj.get("all_time") != null && !jsonObj.get("all_time").isJsonNull()) {
        SendersInfoResponseStatsLast30Days.validateJsonElement(jsonObj.get("all_time"));
      }
      // validate the optional field `last_30_days`
      if (jsonObj.get("last_30_days") != null && !jsonObj.get("last_30_days").isJsonNull()) {
        SendersInfoResponseStatsLast30Days.validateJsonElement(jsonObj.get("last_30_days"));
      }
      // validate the optional field `last_60_days`
      if (jsonObj.get("last_60_days") != null && !jsonObj.get("last_60_days").isJsonNull()) {
        SendersInfoResponseStatsLast30Days.validateJsonElement(jsonObj.get("last_60_days"));
      }
      // validate the optional field `last_7_days`
      if (jsonObj.get("last_7_days") != null && !jsonObj.get("last_7_days").isJsonNull()) {
        SendersInfoResponseStatsLast30Days.validateJsonElement(jsonObj.get("last_7_days"));
      }
      // validate the optional field `last_90_days`
      if (jsonObj.get("last_90_days") != null && !jsonObj.get("last_90_days").isJsonNull()) {
        SendersInfoResponseStatsLast30Days.validateJsonElement(jsonObj.get("last_90_days"));
      }
      // validate the optional field `today`
      if (jsonObj.get("today") != null && !jsonObj.get("today").isJsonNull()) {
        SendersInfoResponseStatsLast30Days.validateJsonElement(jsonObj.get("today"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!UsersInfoResponseStats.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'UsersInfoResponseStats' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<UsersInfoResponseStats> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(UsersInfoResponseStats.class));

       return (TypeAdapter<T>) new TypeAdapter<UsersInfoResponseStats>() {
           @Override
           public void write(JsonWriter out, UsersInfoResponseStats value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public UsersInfoResponseStats read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of UsersInfoResponseStats given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of UsersInfoResponseStats
   * @throws IOException if the JSON string is invalid with respect to UsersInfoResponseStats
   */
  public static UsersInfoResponseStats fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, UsersInfoResponseStats.class);
  }

  /**
   * Convert an instance of UsersInfoResponseStats to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

