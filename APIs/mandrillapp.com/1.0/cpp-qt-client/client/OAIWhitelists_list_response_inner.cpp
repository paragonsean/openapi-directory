/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIWhitelists_list_response_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIWhitelists_list_response_inner::OAIWhitelists_list_response_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIWhitelists_list_response_inner::OAIWhitelists_list_response_inner() {
    this->initializeModel();
}

OAIWhitelists_list_response_inner::~OAIWhitelists_list_response_inner() {}

void OAIWhitelists_list_response_inner::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_detail_isSet = false;
    m_detail_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;
}

void OAIWhitelists_list_response_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIWhitelists_list_response_inner::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_detail_isValid = ::OpenAPI::fromJsonValue(m_detail, json[QString("detail")]);
    m_detail_isSet = !json[QString("detail")].isNull() && m_detail_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;
}

QString OAIWhitelists_list_response_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIWhitelists_list_response_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_detail_isSet) {
        obj.insert(QString("detail"), ::OpenAPI::toJsonValue(m_detail));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    return obj;
}

QString OAIWhitelists_list_response_inner::getCreatedAt() const {
    return m_created_at;
}
void OAIWhitelists_list_response_inner::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIWhitelists_list_response_inner::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIWhitelists_list_response_inner::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAIWhitelists_list_response_inner::getDetail() const {
    return m_detail;
}
void OAIWhitelists_list_response_inner::setDetail(const QString &detail) {
    m_detail = detail;
    m_detail_isSet = true;
}

bool OAIWhitelists_list_response_inner::is_detail_Set() const{
    return m_detail_isSet;
}

bool OAIWhitelists_list_response_inner::is_detail_Valid() const{
    return m_detail_isValid;
}

QString OAIWhitelists_list_response_inner::getEmail() const {
    return m_email;
}
void OAIWhitelists_list_response_inner::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIWhitelists_list_response_inner::is_email_Set() const{
    return m_email_isSet;
}

bool OAIWhitelists_list_response_inner::is_email_Valid() const{
    return m_email_isValid;
}

bool OAIWhitelists_list_response_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_detail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIWhitelists_list_response_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
