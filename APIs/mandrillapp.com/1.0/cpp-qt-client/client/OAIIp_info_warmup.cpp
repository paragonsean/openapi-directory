/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIp_info_warmup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIp_info_warmup::OAIIp_info_warmup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIp_info_warmup::OAIIp_info_warmup() {
    this->initializeModel();
}

OAIIp_info_warmup::~OAIIp_info_warmup() {}

void OAIIp_info_warmup::initializeModel() {

    m_end_at_isSet = false;
    m_end_at_isValid = false;

    m_start_at_isSet = false;
    m_start_at_isValid = false;

    m_warming_up_isSet = false;
    m_warming_up_isValid = false;
}

void OAIIp_info_warmup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIp_info_warmup::fromJsonObject(QJsonObject json) {

    m_end_at_isValid = ::OpenAPI::fromJsonValue(m_end_at, json[QString("end_at")]);
    m_end_at_isSet = !json[QString("end_at")].isNull() && m_end_at_isValid;

    m_start_at_isValid = ::OpenAPI::fromJsonValue(m_start_at, json[QString("start_at")]);
    m_start_at_isSet = !json[QString("start_at")].isNull() && m_start_at_isValid;

    m_warming_up_isValid = ::OpenAPI::fromJsonValue(m_warming_up, json[QString("warming_up")]);
    m_warming_up_isSet = !json[QString("warming_up")].isNull() && m_warming_up_isValid;
}

QString OAIIp_info_warmup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIp_info_warmup::asJsonObject() const {
    QJsonObject obj;
    if (m_end_at_isSet) {
        obj.insert(QString("end_at"), ::OpenAPI::toJsonValue(m_end_at));
    }
    if (m_start_at_isSet) {
        obj.insert(QString("start_at"), ::OpenAPI::toJsonValue(m_start_at));
    }
    if (m_warming_up_isSet) {
        obj.insert(QString("warming_up"), ::OpenAPI::toJsonValue(m_warming_up));
    }
    return obj;
}

QString OAIIp_info_warmup::getEndAt() const {
    return m_end_at;
}
void OAIIp_info_warmup::setEndAt(const QString &end_at) {
    m_end_at = end_at;
    m_end_at_isSet = true;
}

bool OAIIp_info_warmup::is_end_at_Set() const{
    return m_end_at_isSet;
}

bool OAIIp_info_warmup::is_end_at_Valid() const{
    return m_end_at_isValid;
}

QString OAIIp_info_warmup::getStartAt() const {
    return m_start_at;
}
void OAIIp_info_warmup::setStartAt(const QString &start_at) {
    m_start_at = start_at;
    m_start_at_isSet = true;
}

bool OAIIp_info_warmup::is_start_at_Set() const{
    return m_start_at_isSet;
}

bool OAIIp_info_warmup::is_start_at_Valid() const{
    return m_start_at_isValid;
}

bool OAIIp_info_warmup::isWarmingUp() const {
    return m_warming_up;
}
void OAIIp_info_warmup::setWarmingUp(const bool &warming_up) {
    m_warming_up = warming_up;
    m_warming_up_isSet = true;
}

bool OAIIp_info_warmup::is_warming_up_Set() const{
    return m_warming_up_isSet;
}

bool OAIIp_info_warmup::is_warming_up_Valid() const{
    return m_warming_up_isValid;
}

bool OAIIp_info_warmup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_end_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_start_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_warming_up_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIp_info_warmup::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
