/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInbound_send_raw.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInbound_send_raw::OAIInbound_send_raw(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInbound_send_raw::OAIInbound_send_raw() {
    this->initializeModel();
}

OAIInbound_send_raw::~OAIInbound_send_raw() {}

void OAIInbound_send_raw::initializeModel() {

    m_client_address_isSet = false;
    m_client_address_isValid = false;

    m_helo_isSet = false;
    m_helo_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;

    m_mail_from_isSet = false;
    m_mail_from_isValid = false;

    m_raw_message_isSet = false;
    m_raw_message_isValid = false;

    m_to_isSet = false;
    m_to_isValid = false;
}

void OAIInbound_send_raw::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInbound_send_raw::fromJsonObject(QJsonObject json) {

    m_client_address_isValid = ::OpenAPI::fromJsonValue(m_client_address, json[QString("client_address")]);
    m_client_address_isSet = !json[QString("client_address")].isNull() && m_client_address_isValid;

    m_helo_isValid = ::OpenAPI::fromJsonValue(m_helo, json[QString("helo")]);
    m_helo_isSet = !json[QString("helo")].isNull() && m_helo_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_mail_from_isValid = ::OpenAPI::fromJsonValue(m_mail_from, json[QString("mail_from")]);
    m_mail_from_isSet = !json[QString("mail_from")].isNull() && m_mail_from_isValid;

    m_raw_message_isValid = ::OpenAPI::fromJsonValue(m_raw_message, json[QString("raw_message")]);
    m_raw_message_isSet = !json[QString("raw_message")].isNull() && m_raw_message_isValid;

    m_to_isValid = ::OpenAPI::fromJsonValue(m_to, json[QString("to")]);
    m_to_isSet = !json[QString("to")].isNull() && m_to_isValid;
}

QString OAIInbound_send_raw::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInbound_send_raw::asJsonObject() const {
    QJsonObject obj;
    if (m_client_address_isSet) {
        obj.insert(QString("client_address"), ::OpenAPI::toJsonValue(m_client_address));
    }
    if (m_helo_isSet) {
        obj.insert(QString("helo"), ::OpenAPI::toJsonValue(m_helo));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_mail_from_isSet) {
        obj.insert(QString("mail_from"), ::OpenAPI::toJsonValue(m_mail_from));
    }
    if (m_raw_message_isSet) {
        obj.insert(QString("raw_message"), ::OpenAPI::toJsonValue(m_raw_message));
    }
    if (m_to.size() > 0) {
        obj.insert(QString("to"), ::OpenAPI::toJsonValue(m_to));
    }
    return obj;
}

QString OAIInbound_send_raw::getClientAddress() const {
    return m_client_address;
}
void OAIInbound_send_raw::setClientAddress(const QString &client_address) {
    m_client_address = client_address;
    m_client_address_isSet = true;
}

bool OAIInbound_send_raw::is_client_address_Set() const{
    return m_client_address_isSet;
}

bool OAIInbound_send_raw::is_client_address_Valid() const{
    return m_client_address_isValid;
}

QString OAIInbound_send_raw::getHelo() const {
    return m_helo;
}
void OAIInbound_send_raw::setHelo(const QString &helo) {
    m_helo = helo;
    m_helo_isSet = true;
}

bool OAIInbound_send_raw::is_helo_Set() const{
    return m_helo_isSet;
}

bool OAIInbound_send_raw::is_helo_Valid() const{
    return m_helo_isValid;
}

QString OAIInbound_send_raw::getKey() const {
    return m_key;
}
void OAIInbound_send_raw::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAIInbound_send_raw::is_key_Set() const{
    return m_key_isSet;
}

bool OAIInbound_send_raw::is_key_Valid() const{
    return m_key_isValid;
}

QString OAIInbound_send_raw::getMailFrom() const {
    return m_mail_from;
}
void OAIInbound_send_raw::setMailFrom(const QString &mail_from) {
    m_mail_from = mail_from;
    m_mail_from_isSet = true;
}

bool OAIInbound_send_raw::is_mail_from_Set() const{
    return m_mail_from_isSet;
}

bool OAIInbound_send_raw::is_mail_from_Valid() const{
    return m_mail_from_isValid;
}

QString OAIInbound_send_raw::getRawMessage() const {
    return m_raw_message;
}
void OAIInbound_send_raw::setRawMessage(const QString &raw_message) {
    m_raw_message = raw_message;
    m_raw_message_isSet = true;
}

bool OAIInbound_send_raw::is_raw_message_Set() const{
    return m_raw_message_isSet;
}

bool OAIInbound_send_raw::is_raw_message_Valid() const{
    return m_raw_message_isValid;
}

QList<QString> OAIInbound_send_raw::getTo() const {
    return m_to;
}
void OAIInbound_send_raw::setTo(const QList<QString> &to) {
    m_to = to;
    m_to_isSet = true;
}

bool OAIInbound_send_raw::is_to_Set() const{
    return m_to_isSet;
}

bool OAIInbound_send_raw::is_to_Valid() const{
    return m_to_isValid;
}

bool OAIInbound_send_raw::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_client_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_helo_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mail_from_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_raw_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_to.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInbound_send_raw::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
