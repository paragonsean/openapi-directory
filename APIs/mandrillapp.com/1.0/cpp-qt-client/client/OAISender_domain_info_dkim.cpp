/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISender_domain_info_dkim.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISender_domain_info_dkim::OAISender_domain_info_dkim(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISender_domain_info_dkim::OAISender_domain_info_dkim() {
    this->initializeModel();
}

OAISender_domain_info_dkim::~OAISender_domain_info_dkim() {}

void OAISender_domain_info_dkim::initializeModel() {

    m_error_isSet = false;
    m_error_isValid = false;

    m_r_valid_isSet = false;
    m_r_valid_isValid = false;

    m_valid_after_isSet = false;
    m_valid_after_isValid = false;
}

void OAISender_domain_info_dkim::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISender_domain_info_dkim::fromJsonObject(QJsonObject json) {

    m_error_isValid = ::OpenAPI::fromJsonValue(m_error, json[QString("error")]);
    m_error_isSet = !json[QString("error")].isNull() && m_error_isValid;

    m_r_valid_isValid = ::OpenAPI::fromJsonValue(m_r_valid, json[QString("valid")]);
    m_r_valid_isSet = !json[QString("valid")].isNull() && m_r_valid_isValid;

    m_valid_after_isValid = ::OpenAPI::fromJsonValue(m_valid_after, json[QString("valid_after")]);
    m_valid_after_isSet = !json[QString("valid_after")].isNull() && m_valid_after_isValid;
}

QString OAISender_domain_info_dkim::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISender_domain_info_dkim::asJsonObject() const {
    QJsonObject obj;
    if (m_error_isSet) {
        obj.insert(QString("error"), ::OpenAPI::toJsonValue(m_error));
    }
    if (m_r_valid_isSet) {
        obj.insert(QString("valid"), ::OpenAPI::toJsonValue(m_r_valid));
    }
    if (m_valid_after_isSet) {
        obj.insert(QString("valid_after"), ::OpenAPI::toJsonValue(m_valid_after));
    }
    return obj;
}

QString OAISender_domain_info_dkim::getError() const {
    return m_error;
}
void OAISender_domain_info_dkim::setError(const QString &error) {
    m_error = error;
    m_error_isSet = true;
}

bool OAISender_domain_info_dkim::is_error_Set() const{
    return m_error_isSet;
}

bool OAISender_domain_info_dkim::is_error_Valid() const{
    return m_error_isValid;
}

bool OAISender_domain_info_dkim::isRValid() const {
    return m_r_valid;
}
void OAISender_domain_info_dkim::setRValid(const bool &r_valid) {
    m_r_valid = r_valid;
    m_r_valid_isSet = true;
}

bool OAISender_domain_info_dkim::is_r_valid_Set() const{
    return m_r_valid_isSet;
}

bool OAISender_domain_info_dkim::is_r_valid_Valid() const{
    return m_r_valid_isValid;
}

QString OAISender_domain_info_dkim::getValidAfter() const {
    return m_valid_after;
}
void OAISender_domain_info_dkim::setValidAfter(const QString &valid_after) {
    m_valid_after = valid_after;
    m_valid_after_isSet = true;
}

bool OAISender_domain_info_dkim::is_valid_after_Set() const{
    return m_valid_after_isSet;
}

bool OAISender_domain_info_dkim::is_valid_after_Valid() const{
    return m_valid_after_isValid;
}

bool OAISender_domain_info_dkim::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_error_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_r_valid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_valid_after_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISender_domain_info_dkim::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
