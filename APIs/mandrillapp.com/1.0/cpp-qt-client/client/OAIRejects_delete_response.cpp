/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRejects_delete_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRejects_delete_response::OAIRejects_delete_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRejects_delete_response::OAIRejects_delete_response() {
    this->initializeModel();
}

OAIRejects_delete_response::~OAIRejects_delete_response() {}

void OAIRejects_delete_response::initializeModel() {

    m_deleted_isSet = false;
    m_deleted_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_subaccount_isSet = false;
    m_subaccount_isValid = false;
}

void OAIRejects_delete_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRejects_delete_response::fromJsonObject(QJsonObject json) {

    m_deleted_isValid = ::OpenAPI::fromJsonValue(m_deleted, json[QString("deleted")]);
    m_deleted_isSet = !json[QString("deleted")].isNull() && m_deleted_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_subaccount_isValid = ::OpenAPI::fromJsonValue(m_subaccount, json[QString("subaccount")]);
    m_subaccount_isSet = !json[QString("subaccount")].isNull() && m_subaccount_isValid;
}

QString OAIRejects_delete_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRejects_delete_response::asJsonObject() const {
    QJsonObject obj;
    if (m_deleted_isSet) {
        obj.insert(QString("deleted"), ::OpenAPI::toJsonValue(m_deleted));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_subaccount_isSet) {
        obj.insert(QString("subaccount"), ::OpenAPI::toJsonValue(m_subaccount));
    }
    return obj;
}

bool OAIRejects_delete_response::isDeleted() const {
    return m_deleted;
}
void OAIRejects_delete_response::setDeleted(const bool &deleted) {
    m_deleted = deleted;
    m_deleted_isSet = true;
}

bool OAIRejects_delete_response::is_deleted_Set() const{
    return m_deleted_isSet;
}

bool OAIRejects_delete_response::is_deleted_Valid() const{
    return m_deleted_isValid;
}

QString OAIRejects_delete_response::getEmail() const {
    return m_email;
}
void OAIRejects_delete_response::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIRejects_delete_response::is_email_Set() const{
    return m_email_isSet;
}

bool OAIRejects_delete_response::is_email_Valid() const{
    return m_email_isValid;
}

QString OAIRejects_delete_response::getSubaccount() const {
    return m_subaccount;
}
void OAIRejects_delete_response::setSubaccount(const QString &subaccount) {
    m_subaccount = subaccount;
    m_subaccount_isSet = true;
}

bool OAIRejects_delete_response::is_subaccount_Set() const{
    return m_subaccount_isSet;
}

bool OAIRejects_delete_response::is_subaccount_Valid() const{
    return m_subaccount_isValid;
}

bool OAIRejects_delete_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deleted_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subaccount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRejects_delete_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
