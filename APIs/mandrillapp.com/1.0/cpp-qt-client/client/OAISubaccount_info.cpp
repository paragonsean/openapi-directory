/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubaccount_info.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubaccount_info::OAISubaccount_info(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubaccount_info::OAISubaccount_info() {
    this->initializeModel();
}

OAISubaccount_info::~OAISubaccount_info() {}

void OAISubaccount_info::initializeModel() {

    m_custom_quota_isSet = false;
    m_custom_quota_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_key_isSet = false;
    m_key_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_notes_isSet = false;
    m_notes_isValid = false;
}

void OAISubaccount_info::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubaccount_info::fromJsonObject(QJsonObject json) {

    m_custom_quota_isValid = ::OpenAPI::fromJsonValue(m_custom_quota, json[QString("custom_quota")]);
    m_custom_quota_isSet = !json[QString("custom_quota")].isNull() && m_custom_quota_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_key_isValid = ::OpenAPI::fromJsonValue(m_key, json[QString("key")]);
    m_key_isSet = !json[QString("key")].isNull() && m_key_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_notes_isValid = ::OpenAPI::fromJsonValue(m_notes, json[QString("notes")]);
    m_notes_isSet = !json[QString("notes")].isNull() && m_notes_isValid;
}

QString OAISubaccount_info::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubaccount_info::asJsonObject() const {
    QJsonObject obj;
    if (m_custom_quota_isSet) {
        obj.insert(QString("custom_quota"), ::OpenAPI::toJsonValue(m_custom_quota));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_key_isSet) {
        obj.insert(QString("key"), ::OpenAPI::toJsonValue(m_key));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_notes_isSet) {
        obj.insert(QString("notes"), ::OpenAPI::toJsonValue(m_notes));
    }
    return obj;
}

qint32 OAISubaccount_info::getCustomQuota() const {
    return m_custom_quota;
}
void OAISubaccount_info::setCustomQuota(const qint32 &custom_quota) {
    m_custom_quota = custom_quota;
    m_custom_quota_isSet = true;
}

bool OAISubaccount_info::is_custom_quota_Set() const{
    return m_custom_quota_isSet;
}

bool OAISubaccount_info::is_custom_quota_Valid() const{
    return m_custom_quota_isValid;
}

QString OAISubaccount_info::getId() const {
    return m_id;
}
void OAISubaccount_info::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAISubaccount_info::is_id_Set() const{
    return m_id_isSet;
}

bool OAISubaccount_info::is_id_Valid() const{
    return m_id_isValid;
}

QString OAISubaccount_info::getKey() const {
    return m_key;
}
void OAISubaccount_info::setKey(const QString &key) {
    m_key = key;
    m_key_isSet = true;
}

bool OAISubaccount_info::is_key_Set() const{
    return m_key_isSet;
}

bool OAISubaccount_info::is_key_Valid() const{
    return m_key_isValid;
}

QString OAISubaccount_info::getName() const {
    return m_name;
}
void OAISubaccount_info::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISubaccount_info::is_name_Set() const{
    return m_name_isSet;
}

bool OAISubaccount_info::is_name_Valid() const{
    return m_name_isValid;
}

QString OAISubaccount_info::getNotes() const {
    return m_notes;
}
void OAISubaccount_info::setNotes(const QString &notes) {
    m_notes = notes;
    m_notes_isSet = true;
}

bool OAISubaccount_info::is_notes_Set() const{
    return m_notes_isSet;
}

bool OAISubaccount_info::is_notes_Valid() const{
    return m_notes_isValid;
}

bool OAISubaccount_info::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_custom_quota_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_key_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubaccount_info::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
