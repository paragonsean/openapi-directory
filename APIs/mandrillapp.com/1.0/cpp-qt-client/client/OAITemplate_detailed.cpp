/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITemplate_detailed.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITemplate_detailed::OAITemplate_detailed(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITemplate_detailed::OAITemplate_detailed() {
    this->initializeModel();
}

OAITemplate_detailed::~OAITemplate_detailed() {}

void OAITemplate_detailed::initializeModel() {

    m_code_isSet = false;
    m_code_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_from_email_isSet = false;
    m_from_email_isValid = false;

    m_from_name_isSet = false;
    m_from_name_isValid = false;

    m_labels_isSet = false;
    m_labels_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_publish_code_isSet = false;
    m_publish_code_isValid = false;

    m_publish_from_email_isSet = false;
    m_publish_from_email_isValid = false;

    m_publish_from_name_isSet = false;
    m_publish_from_name_isValid = false;

    m_publish_name_isSet = false;
    m_publish_name_isValid = false;

    m_publish_subject_isSet = false;
    m_publish_subject_isValid = false;

    m_publish_text_isSet = false;
    m_publish_text_isValid = false;

    m_published_at_isSet = false;
    m_published_at_isValid = false;

    m_slug_isSet = false;
    m_slug_isValid = false;

    m_subject_isSet = false;
    m_subject_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;
}

void OAITemplate_detailed::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITemplate_detailed::fromJsonObject(QJsonObject json) {

    m_code_isValid = ::OpenAPI::fromJsonValue(m_code, json[QString("code")]);
    m_code_isSet = !json[QString("code")].isNull() && m_code_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_from_email_isValid = ::OpenAPI::fromJsonValue(m_from_email, json[QString("from_email")]);
    m_from_email_isSet = !json[QString("from_email")].isNull() && m_from_email_isValid;

    m_from_name_isValid = ::OpenAPI::fromJsonValue(m_from_name, json[QString("from_name")]);
    m_from_name_isSet = !json[QString("from_name")].isNull() && m_from_name_isValid;

    m_labels_isValid = ::OpenAPI::fromJsonValue(m_labels, json[QString("labels")]);
    m_labels_isSet = !json[QString("labels")].isNull() && m_labels_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_publish_code_isValid = ::OpenAPI::fromJsonValue(m_publish_code, json[QString("publish_code")]);
    m_publish_code_isSet = !json[QString("publish_code")].isNull() && m_publish_code_isValid;

    m_publish_from_email_isValid = ::OpenAPI::fromJsonValue(m_publish_from_email, json[QString("publish_from_email")]);
    m_publish_from_email_isSet = !json[QString("publish_from_email")].isNull() && m_publish_from_email_isValid;

    m_publish_from_name_isValid = ::OpenAPI::fromJsonValue(m_publish_from_name, json[QString("publish_from_name")]);
    m_publish_from_name_isSet = !json[QString("publish_from_name")].isNull() && m_publish_from_name_isValid;

    m_publish_name_isValid = ::OpenAPI::fromJsonValue(m_publish_name, json[QString("publish_name")]);
    m_publish_name_isSet = !json[QString("publish_name")].isNull() && m_publish_name_isValid;

    m_publish_subject_isValid = ::OpenAPI::fromJsonValue(m_publish_subject, json[QString("publish_subject")]);
    m_publish_subject_isSet = !json[QString("publish_subject")].isNull() && m_publish_subject_isValid;

    m_publish_text_isValid = ::OpenAPI::fromJsonValue(m_publish_text, json[QString("publish_text")]);
    m_publish_text_isSet = !json[QString("publish_text")].isNull() && m_publish_text_isValid;

    m_published_at_isValid = ::OpenAPI::fromJsonValue(m_published_at, json[QString("published_at")]);
    m_published_at_isSet = !json[QString("published_at")].isNull() && m_published_at_isValid;

    m_slug_isValid = ::OpenAPI::fromJsonValue(m_slug, json[QString("slug")]);
    m_slug_isSet = !json[QString("slug")].isNull() && m_slug_isValid;

    m_subject_isValid = ::OpenAPI::fromJsonValue(m_subject, json[QString("subject")]);
    m_subject_isSet = !json[QString("subject")].isNull() && m_subject_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;
}

QString OAITemplate_detailed::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITemplate_detailed::asJsonObject() const {
    QJsonObject obj;
    if (m_code_isSet) {
        obj.insert(QString("code"), ::OpenAPI::toJsonValue(m_code));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_from_email_isSet) {
        obj.insert(QString("from_email"), ::OpenAPI::toJsonValue(m_from_email));
    }
    if (m_from_name_isSet) {
        obj.insert(QString("from_name"), ::OpenAPI::toJsonValue(m_from_name));
    }
    if (m_labels.size() > 0) {
        obj.insert(QString("labels"), ::OpenAPI::toJsonValue(m_labels));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_publish_code_isSet) {
        obj.insert(QString("publish_code"), ::OpenAPI::toJsonValue(m_publish_code));
    }
    if (m_publish_from_email_isSet) {
        obj.insert(QString("publish_from_email"), ::OpenAPI::toJsonValue(m_publish_from_email));
    }
    if (m_publish_from_name_isSet) {
        obj.insert(QString("publish_from_name"), ::OpenAPI::toJsonValue(m_publish_from_name));
    }
    if (m_publish_name_isSet) {
        obj.insert(QString("publish_name"), ::OpenAPI::toJsonValue(m_publish_name));
    }
    if (m_publish_subject_isSet) {
        obj.insert(QString("publish_subject"), ::OpenAPI::toJsonValue(m_publish_subject));
    }
    if (m_publish_text_isSet) {
        obj.insert(QString("publish_text"), ::OpenAPI::toJsonValue(m_publish_text));
    }
    if (m_published_at_isSet) {
        obj.insert(QString("published_at"), ::OpenAPI::toJsonValue(m_published_at));
    }
    if (m_slug_isSet) {
        obj.insert(QString("slug"), ::OpenAPI::toJsonValue(m_slug));
    }
    if (m_subject_isSet) {
        obj.insert(QString("subject"), ::OpenAPI::toJsonValue(m_subject));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    return obj;
}

QString OAITemplate_detailed::getCode() const {
    return m_code;
}
void OAITemplate_detailed::setCode(const QString &code) {
    m_code = code;
    m_code_isSet = true;
}

bool OAITemplate_detailed::is_code_Set() const{
    return m_code_isSet;
}

bool OAITemplate_detailed::is_code_Valid() const{
    return m_code_isValid;
}

QString OAITemplate_detailed::getCreatedAt() const {
    return m_created_at;
}
void OAITemplate_detailed::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAITemplate_detailed::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAITemplate_detailed::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAITemplate_detailed::getFromEmail() const {
    return m_from_email;
}
void OAITemplate_detailed::setFromEmail(const QString &from_email) {
    m_from_email = from_email;
    m_from_email_isSet = true;
}

bool OAITemplate_detailed::is_from_email_Set() const{
    return m_from_email_isSet;
}

bool OAITemplate_detailed::is_from_email_Valid() const{
    return m_from_email_isValid;
}

QString OAITemplate_detailed::getFromName() const {
    return m_from_name;
}
void OAITemplate_detailed::setFromName(const QString &from_name) {
    m_from_name = from_name;
    m_from_name_isSet = true;
}

bool OAITemplate_detailed::is_from_name_Set() const{
    return m_from_name_isSet;
}

bool OAITemplate_detailed::is_from_name_Valid() const{
    return m_from_name_isValid;
}

QList<QString> OAITemplate_detailed::getLabels() const {
    return m_labels;
}
void OAITemplate_detailed::setLabels(const QList<QString> &labels) {
    m_labels = labels;
    m_labels_isSet = true;
}

bool OAITemplate_detailed::is_labels_Set() const{
    return m_labels_isSet;
}

bool OAITemplate_detailed::is_labels_Valid() const{
    return m_labels_isValid;
}

QString OAITemplate_detailed::getName() const {
    return m_name;
}
void OAITemplate_detailed::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAITemplate_detailed::is_name_Set() const{
    return m_name_isSet;
}

bool OAITemplate_detailed::is_name_Valid() const{
    return m_name_isValid;
}

QString OAITemplate_detailed::getPublishCode() const {
    return m_publish_code;
}
void OAITemplate_detailed::setPublishCode(const QString &publish_code) {
    m_publish_code = publish_code;
    m_publish_code_isSet = true;
}

bool OAITemplate_detailed::is_publish_code_Set() const{
    return m_publish_code_isSet;
}

bool OAITemplate_detailed::is_publish_code_Valid() const{
    return m_publish_code_isValid;
}

QString OAITemplate_detailed::getPublishFromEmail() const {
    return m_publish_from_email;
}
void OAITemplate_detailed::setPublishFromEmail(const QString &publish_from_email) {
    m_publish_from_email = publish_from_email;
    m_publish_from_email_isSet = true;
}

bool OAITemplate_detailed::is_publish_from_email_Set() const{
    return m_publish_from_email_isSet;
}

bool OAITemplate_detailed::is_publish_from_email_Valid() const{
    return m_publish_from_email_isValid;
}

QString OAITemplate_detailed::getPublishFromName() const {
    return m_publish_from_name;
}
void OAITemplate_detailed::setPublishFromName(const QString &publish_from_name) {
    m_publish_from_name = publish_from_name;
    m_publish_from_name_isSet = true;
}

bool OAITemplate_detailed::is_publish_from_name_Set() const{
    return m_publish_from_name_isSet;
}

bool OAITemplate_detailed::is_publish_from_name_Valid() const{
    return m_publish_from_name_isValid;
}

QString OAITemplate_detailed::getPublishName() const {
    return m_publish_name;
}
void OAITemplate_detailed::setPublishName(const QString &publish_name) {
    m_publish_name = publish_name;
    m_publish_name_isSet = true;
}

bool OAITemplate_detailed::is_publish_name_Set() const{
    return m_publish_name_isSet;
}

bool OAITemplate_detailed::is_publish_name_Valid() const{
    return m_publish_name_isValid;
}

QString OAITemplate_detailed::getPublishSubject() const {
    return m_publish_subject;
}
void OAITemplate_detailed::setPublishSubject(const QString &publish_subject) {
    m_publish_subject = publish_subject;
    m_publish_subject_isSet = true;
}

bool OAITemplate_detailed::is_publish_subject_Set() const{
    return m_publish_subject_isSet;
}

bool OAITemplate_detailed::is_publish_subject_Valid() const{
    return m_publish_subject_isValid;
}

QString OAITemplate_detailed::getPublishText() const {
    return m_publish_text;
}
void OAITemplate_detailed::setPublishText(const QString &publish_text) {
    m_publish_text = publish_text;
    m_publish_text_isSet = true;
}

bool OAITemplate_detailed::is_publish_text_Set() const{
    return m_publish_text_isSet;
}

bool OAITemplate_detailed::is_publish_text_Valid() const{
    return m_publish_text_isValid;
}

QString OAITemplate_detailed::getPublishedAt() const {
    return m_published_at;
}
void OAITemplate_detailed::setPublishedAt(const QString &published_at) {
    m_published_at = published_at;
    m_published_at_isSet = true;
}

bool OAITemplate_detailed::is_published_at_Set() const{
    return m_published_at_isSet;
}

bool OAITemplate_detailed::is_published_at_Valid() const{
    return m_published_at_isValid;
}

QString OAITemplate_detailed::getSlug() const {
    return m_slug;
}
void OAITemplate_detailed::setSlug(const QString &slug) {
    m_slug = slug;
    m_slug_isSet = true;
}

bool OAITemplate_detailed::is_slug_Set() const{
    return m_slug_isSet;
}

bool OAITemplate_detailed::is_slug_Valid() const{
    return m_slug_isValid;
}

QString OAITemplate_detailed::getSubject() const {
    return m_subject;
}
void OAITemplate_detailed::setSubject(const QString &subject) {
    m_subject = subject;
    m_subject_isSet = true;
}

bool OAITemplate_detailed::is_subject_Set() const{
    return m_subject_isSet;
}

bool OAITemplate_detailed::is_subject_Valid() const{
    return m_subject_isValid;
}

QString OAITemplate_detailed::getText() const {
    return m_text;
}
void OAITemplate_detailed::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAITemplate_detailed::is_text_Set() const{
    return m_text_isSet;
}

bool OAITemplate_detailed::is_text_Valid() const{
    return m_text_isValid;
}

QString OAITemplate_detailed::getUpdatedAt() const {
    return m_updated_at;
}
void OAITemplate_detailed::setUpdatedAt(const QString &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAITemplate_detailed::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAITemplate_detailed::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

bool OAITemplate_detailed::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_labels.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publish_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publish_from_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publish_from_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publish_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publish_subject_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_publish_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_published_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_slug_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subject_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITemplate_detailed::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
