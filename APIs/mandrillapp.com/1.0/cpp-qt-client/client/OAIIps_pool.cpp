/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIps_pool.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIps_pool::OAIIps_pool(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIps_pool::OAIIps_pool() {
    this->initializeModel();
}

OAIIps_pool::~OAIIps_pool() {}

void OAIIps_pool::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_ips_isSet = false;
    m_ips_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;
}

void OAIIps_pool::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIps_pool::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_ips_isValid = ::OpenAPI::fromJsonValue(m_ips, json[QString("ips")]);
    m_ips_isSet = !json[QString("ips")].isNull() && m_ips_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;
}

QString OAIIps_pool::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIps_pool::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_ips.size() > 0) {
        obj.insert(QString("ips"), ::OpenAPI::toJsonValue(m_ips));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    return obj;
}

QString OAIIps_pool::getCreatedAt() const {
    return m_created_at;
}
void OAIIps_pool::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIIps_pool::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIIps_pool::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QList<OAIIps_list_pools_response_inner_ips_inner> OAIIps_pool::getIps() const {
    return m_ips;
}
void OAIIps_pool::setIps(const QList<OAIIps_list_pools_response_inner_ips_inner> &ips) {
    m_ips = ips;
    m_ips_isSet = true;
}

bool OAIIps_pool::is_ips_Set() const{
    return m_ips_isSet;
}

bool OAIIps_pool::is_ips_Valid() const{
    return m_ips_isValid;
}

QString OAIIps_pool::getName() const {
    return m_name;
}
void OAIIps_pool::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIIps_pool::is_name_Set() const{
    return m_name_isSet;
}

bool OAIIps_pool::is_name_Valid() const{
    return m_name_isValid;
}

bool OAIIps_pool::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ips.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIps_pool::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
