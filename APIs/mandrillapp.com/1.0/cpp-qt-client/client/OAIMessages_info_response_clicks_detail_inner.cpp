/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMessages_info_response_clicks_detail_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMessages_info_response_clicks_detail_inner::OAIMessages_info_response_clicks_detail_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMessages_info_response_clicks_detail_inner::OAIMessages_info_response_clicks_detail_inner() {
    this->initializeModel();
}

OAIMessages_info_response_clicks_detail_inner::~OAIMessages_info_response_clicks_detail_inner() {}

void OAIMessages_info_response_clicks_detail_inner::initializeModel() {

    m_ip_isSet = false;
    m_ip_isValid = false;

    m_location_isSet = false;
    m_location_isValid = false;

    m_ts_isSet = false;
    m_ts_isValid = false;

    m_ua_isSet = false;
    m_ua_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAIMessages_info_response_clicks_detail_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMessages_info_response_clicks_detail_inner::fromJsonObject(QJsonObject json) {

    m_ip_isValid = ::OpenAPI::fromJsonValue(m_ip, json[QString("ip")]);
    m_ip_isSet = !json[QString("ip")].isNull() && m_ip_isValid;

    m_location_isValid = ::OpenAPI::fromJsonValue(m_location, json[QString("location")]);
    m_location_isSet = !json[QString("location")].isNull() && m_location_isValid;

    m_ts_isValid = ::OpenAPI::fromJsonValue(m_ts, json[QString("ts")]);
    m_ts_isSet = !json[QString("ts")].isNull() && m_ts_isValid;

    m_ua_isValid = ::OpenAPI::fromJsonValue(m_ua, json[QString("ua")]);
    m_ua_isSet = !json[QString("ua")].isNull() && m_ua_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAIMessages_info_response_clicks_detail_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMessages_info_response_clicks_detail_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_ip_isSet) {
        obj.insert(QString("ip"), ::OpenAPI::toJsonValue(m_ip));
    }
    if (m_location_isSet) {
        obj.insert(QString("location"), ::OpenAPI::toJsonValue(m_location));
    }
    if (m_ts_isSet) {
        obj.insert(QString("ts"), ::OpenAPI::toJsonValue(m_ts));
    }
    if (m_ua_isSet) {
        obj.insert(QString("ua"), ::OpenAPI::toJsonValue(m_ua));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QString OAIMessages_info_response_clicks_detail_inner::getIp() const {
    return m_ip;
}
void OAIMessages_info_response_clicks_detail_inner::setIp(const QString &ip) {
    m_ip = ip;
    m_ip_isSet = true;
}

bool OAIMessages_info_response_clicks_detail_inner::is_ip_Set() const{
    return m_ip_isSet;
}

bool OAIMessages_info_response_clicks_detail_inner::is_ip_Valid() const{
    return m_ip_isValid;
}

QString OAIMessages_info_response_clicks_detail_inner::getLocation() const {
    return m_location;
}
void OAIMessages_info_response_clicks_detail_inner::setLocation(const QString &location) {
    m_location = location;
    m_location_isSet = true;
}

bool OAIMessages_info_response_clicks_detail_inner::is_location_Set() const{
    return m_location_isSet;
}

bool OAIMessages_info_response_clicks_detail_inner::is_location_Valid() const{
    return m_location_isValid;
}

qint32 OAIMessages_info_response_clicks_detail_inner::getTs() const {
    return m_ts;
}
void OAIMessages_info_response_clicks_detail_inner::setTs(const qint32 &ts) {
    m_ts = ts;
    m_ts_isSet = true;
}

bool OAIMessages_info_response_clicks_detail_inner::is_ts_Set() const{
    return m_ts_isSet;
}

bool OAIMessages_info_response_clicks_detail_inner::is_ts_Valid() const{
    return m_ts_isValid;
}

QString OAIMessages_info_response_clicks_detail_inner::getUa() const {
    return m_ua;
}
void OAIMessages_info_response_clicks_detail_inner::setUa(const QString &ua) {
    m_ua = ua;
    m_ua_isSet = true;
}

bool OAIMessages_info_response_clicks_detail_inner::is_ua_Set() const{
    return m_ua_isSet;
}

bool OAIMessages_info_response_clicks_detail_inner::is_ua_Valid() const{
    return m_ua_isValid;
}

QString OAIMessages_info_response_clicks_detail_inner::getUrl() const {
    return m_url;
}
void OAIMessages_info_response_clicks_detail_inner::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAIMessages_info_response_clicks_detail_inner::is_url_Set() const{
    return m_url_isSet;
}

bool OAIMessages_info_response_clicks_detail_inner::is_url_Valid() const{
    return m_url_isValid;
}

bool OAIMessages_info_response_clicks_detail_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ip_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_location_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ts_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ua_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMessages_info_response_clicks_detail_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
