/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISenders_info_response_stats.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISenders_info_response_stats::OAISenders_info_response_stats(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISenders_info_response_stats::OAISenders_info_response_stats() {
    this->initializeModel();
}

OAISenders_info_response_stats::~OAISenders_info_response_stats() {}

void OAISenders_info_response_stats::initializeModel() {

    m_last_30_days_isSet = false;
    m_last_30_days_isValid = false;

    m_last_60_days_isSet = false;
    m_last_60_days_isValid = false;

    m_last_7_days_isSet = false;
    m_last_7_days_isValid = false;

    m_last_90_days_isSet = false;
    m_last_90_days_isValid = false;

    m_today_isSet = false;
    m_today_isValid = false;
}

void OAISenders_info_response_stats::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISenders_info_response_stats::fromJsonObject(QJsonObject json) {

    m_last_30_days_isValid = ::OpenAPI::fromJsonValue(m_last_30_days, json[QString("last_30_days")]);
    m_last_30_days_isSet = !json[QString("last_30_days")].isNull() && m_last_30_days_isValid;

    m_last_60_days_isValid = ::OpenAPI::fromJsonValue(m_last_60_days, json[QString("last_60_days")]);
    m_last_60_days_isSet = !json[QString("last_60_days")].isNull() && m_last_60_days_isValid;

    m_last_7_days_isValid = ::OpenAPI::fromJsonValue(m_last_7_days, json[QString("last_7_days")]);
    m_last_7_days_isSet = !json[QString("last_7_days")].isNull() && m_last_7_days_isValid;

    m_last_90_days_isValid = ::OpenAPI::fromJsonValue(m_last_90_days, json[QString("last_90_days")]);
    m_last_90_days_isSet = !json[QString("last_90_days")].isNull() && m_last_90_days_isValid;

    m_today_isValid = ::OpenAPI::fromJsonValue(m_today, json[QString("today")]);
    m_today_isSet = !json[QString("today")].isNull() && m_today_isValid;
}

QString OAISenders_info_response_stats::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISenders_info_response_stats::asJsonObject() const {
    QJsonObject obj;
    if (m_last_30_days.isSet()) {
        obj.insert(QString("last_30_days"), ::OpenAPI::toJsonValue(m_last_30_days));
    }
    if (m_last_60_days.isSet()) {
        obj.insert(QString("last_60_days"), ::OpenAPI::toJsonValue(m_last_60_days));
    }
    if (m_last_7_days.isSet()) {
        obj.insert(QString("last_7_days"), ::OpenAPI::toJsonValue(m_last_7_days));
    }
    if (m_last_90_days.isSet()) {
        obj.insert(QString("last_90_days"), ::OpenAPI::toJsonValue(m_last_90_days));
    }
    if (m_today.isSet()) {
        obj.insert(QString("today"), ::OpenAPI::toJsonValue(m_today));
    }
    return obj;
}

OAISenders_info_response_stats_last_30_days OAISenders_info_response_stats::getLast30Days() const {
    return m_last_30_days;
}
void OAISenders_info_response_stats::setLast30Days(const OAISenders_info_response_stats_last_30_days &last_30_days) {
    m_last_30_days = last_30_days;
    m_last_30_days_isSet = true;
}

bool OAISenders_info_response_stats::is_last_30_days_Set() const{
    return m_last_30_days_isSet;
}

bool OAISenders_info_response_stats::is_last_30_days_Valid() const{
    return m_last_30_days_isValid;
}

OAISenders_info_response_stats_last_30_days OAISenders_info_response_stats::getLast60Days() const {
    return m_last_60_days;
}
void OAISenders_info_response_stats::setLast60Days(const OAISenders_info_response_stats_last_30_days &last_60_days) {
    m_last_60_days = last_60_days;
    m_last_60_days_isSet = true;
}

bool OAISenders_info_response_stats::is_last_60_days_Set() const{
    return m_last_60_days_isSet;
}

bool OAISenders_info_response_stats::is_last_60_days_Valid() const{
    return m_last_60_days_isValid;
}

OAISenders_info_response_stats_last_30_days OAISenders_info_response_stats::getLast7Days() const {
    return m_last_7_days;
}
void OAISenders_info_response_stats::setLast7Days(const OAISenders_info_response_stats_last_30_days &last_7_days) {
    m_last_7_days = last_7_days;
    m_last_7_days_isSet = true;
}

bool OAISenders_info_response_stats::is_last_7_days_Set() const{
    return m_last_7_days_isSet;
}

bool OAISenders_info_response_stats::is_last_7_days_Valid() const{
    return m_last_7_days_isValid;
}

OAISenders_info_response_stats_last_30_days OAISenders_info_response_stats::getLast90Days() const {
    return m_last_90_days;
}
void OAISenders_info_response_stats::setLast90Days(const OAISenders_info_response_stats_last_30_days &last_90_days) {
    m_last_90_days = last_90_days;
    m_last_90_days_isSet = true;
}

bool OAISenders_info_response_stats::is_last_90_days_Set() const{
    return m_last_90_days_isSet;
}

bool OAISenders_info_response_stats::is_last_90_days_Valid() const{
    return m_last_90_days_isValid;
}

OAISenders_info_response_stats_last_30_days OAISenders_info_response_stats::getToday() const {
    return m_today;
}
void OAISenders_info_response_stats::setToday(const OAISenders_info_response_stats_last_30_days &today) {
    m_today = today;
    m_today_isSet = true;
}

bool OAISenders_info_response_stats::is_today_Set() const{
    return m_today_isSet;
}

bool OAISenders_info_response_stats::is_today_Valid() const{
    return m_today_isValid;
}

bool OAISenders_info_response_stats::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_last_30_days.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_60_days.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_7_days.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_90_days.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_today.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISenders_info_response_stats::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
