/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMessages_search.h
 *
 * 
 */

#ifndef OAIMessages_search_H
#define OAIMessages_search_H

#include <QJsonObject>

#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIMessages_search : public OAIObject {
public:
    OAIMessages_search();
    OAIMessages_search(QString json);
    ~OAIMessages_search() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getApiKeys() const;
    void setApiKeys(const QList<QString> &api_keys);
    bool is_api_keys_Set() const;
    bool is_api_keys_Valid() const;

    QString getDateFrom() const;
    void setDateFrom(const QString &date_from);
    bool is_date_from_Set() const;
    bool is_date_from_Valid() const;

    QString getDateTo() const;
    void setDateTo(const QString &date_to);
    bool is_date_to_Set() const;
    bool is_date_to_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    qint32 getLimit() const;
    void setLimit(const qint32 &limit);
    bool is_limit_Set() const;
    bool is_limit_Valid() const;

    QString getQuery() const;
    void setQuery(const QString &query);
    bool is_query_Set() const;
    bool is_query_Valid() const;

    QList<QString> getSenders() const;
    void setSenders(const QList<QString> &senders);
    bool is_senders_Set() const;
    bool is_senders_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_api_keys;
    bool m_api_keys_isSet;
    bool m_api_keys_isValid;

    QString m_date_from;
    bool m_date_from_isSet;
    bool m_date_from_isValid;

    QString m_date_to;
    bool m_date_to_isSet;
    bool m_date_to_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    qint32 m_limit;
    bool m_limit_isSet;
    bool m_limit_isValid;

    QString m_query;
    bool m_query_isSet;
    bool m_query_isValid;

    QList<QString> m_senders;
    bool m_senders_isSet;
    bool m_senders_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMessages_search)

#endif // OAIMessages_search_H
