/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMessages_send_message_recipient_metadata_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMessages_send_message_recipient_metadata_inner::OAIMessages_send_message_recipient_metadata_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMessages_send_message_recipient_metadata_inner::OAIMessages_send_message_recipient_metadata_inner() {
    this->initializeModel();
}

OAIMessages_send_message_recipient_metadata_inner::~OAIMessages_send_message_recipient_metadata_inner() {}

void OAIMessages_send_message_recipient_metadata_inner::initializeModel() {

    m_rcpt_isSet = false;
    m_rcpt_isValid = false;

    m_values_isSet = false;
    m_values_isValid = false;
}

void OAIMessages_send_message_recipient_metadata_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMessages_send_message_recipient_metadata_inner::fromJsonObject(QJsonObject json) {

    m_rcpt_isValid = ::OpenAPI::fromJsonValue(m_rcpt, json[QString("rcpt")]);
    m_rcpt_isSet = !json[QString("rcpt")].isNull() && m_rcpt_isValid;

    m_values_isValid = ::OpenAPI::fromJsonValue(m_values, json[QString("values")]);
    m_values_isSet = !json[QString("values")].isNull() && m_values_isValid;
}

QString OAIMessages_send_message_recipient_metadata_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMessages_send_message_recipient_metadata_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_rcpt_isSet) {
        obj.insert(QString("rcpt"), ::OpenAPI::toJsonValue(m_rcpt));
    }
    if (m_values.isSet()) {
        obj.insert(QString("values"), ::OpenAPI::toJsonValue(m_values));
    }
    return obj;
}

QString OAIMessages_send_message_recipient_metadata_inner::getRcpt() const {
    return m_rcpt;
}
void OAIMessages_send_message_recipient_metadata_inner::setRcpt(const QString &rcpt) {
    m_rcpt = rcpt;
    m_rcpt_isSet = true;
}

bool OAIMessages_send_message_recipient_metadata_inner::is_rcpt_Set() const{
    return m_rcpt_isSet;
}

bool OAIMessages_send_message_recipient_metadata_inner::is_rcpt_Valid() const{
    return m_rcpt_isValid;
}

OAIMessages_send_message_recipient_metadata_inner_values OAIMessages_send_message_recipient_metadata_inner::getValues() const {
    return m_values;
}
void OAIMessages_send_message_recipient_metadata_inner::setValues(const OAIMessages_send_message_recipient_metadata_inner_values &values) {
    m_values = values;
    m_values_isSet = true;
}

bool OAIMessages_send_message_recipient_metadata_inner::is_values_Set() const{
    return m_values_isSet;
}

bool OAIMessages_send_message_recipient_metadata_inner::is_values_Valid() const{
    return m_values_isValid;
}

bool OAIMessages_send_message_recipient_metadata_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_rcpt_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_values.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMessages_send_message_recipient_metadata_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
