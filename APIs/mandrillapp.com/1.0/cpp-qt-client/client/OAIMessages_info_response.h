/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMessages_info_response.h
 *
 * 
 */

#ifndef OAIMessages_info_response_H
#define OAIMessages_info_response_H

#include <QJsonObject>

#include "OAIMessages_info_response_clicks_detail_inner.h"
#include "OAIMessages_info_response_metadata.h"
#include "OAIMessages_info_response_opens_detail_inner.h"
#include "OAIMessages_info_response_smtp_events_inner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIMessages_info_response_clicks_detail_inner;
class OAIMessages_info_response_metadata;
class OAIMessages_info_response_opens_detail_inner;
class OAIMessages_info_response_smtp_events_inner;

class OAIMessages_info_response : public OAIObject {
public:
    OAIMessages_info_response();
    OAIMessages_info_response(QString json);
    ~OAIMessages_info_response() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getId() const;
    void setId(const QString &_id);
    bool is__id_Set() const;
    bool is__id_Valid() const;

    qint32 getClicks() const;
    void setClicks(const qint32 &clicks);
    bool is_clicks_Set() const;
    bool is_clicks_Valid() const;

    QList<OAIMessages_info_response_clicks_detail_inner> getClicksDetail() const;
    void setClicksDetail(const QList<OAIMessages_info_response_clicks_detail_inner> &clicks_detail);
    bool is_clicks_detail_Set() const;
    bool is_clicks_detail_Valid() const;

    QString getEmail() const;
    void setEmail(const QString &email);
    bool is_email_Set() const;
    bool is_email_Valid() const;

    OAIMessages_info_response_metadata getMetadata() const;
    void setMetadata(const OAIMessages_info_response_metadata &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    qint32 getOpens() const;
    void setOpens(const qint32 &opens);
    bool is_opens_Set() const;
    bool is_opens_Valid() const;

    QList<OAIMessages_info_response_opens_detail_inner> getOpensDetail() const;
    void setOpensDetail(const QList<OAIMessages_info_response_opens_detail_inner> &opens_detail);
    bool is_opens_detail_Set() const;
    bool is_opens_detail_Valid() const;

    QString getSender() const;
    void setSender(const QString &sender);
    bool is_sender_Set() const;
    bool is_sender_Valid() const;

    QList<OAIMessages_info_response_smtp_events_inner> getSmtpEvents() const;
    void setSmtpEvents(const QList<OAIMessages_info_response_smtp_events_inner> &smtp_events);
    bool is_smtp_events_Set() const;
    bool is_smtp_events_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getSubject() const;
    void setSubject(const QString &subject);
    bool is_subject_Set() const;
    bool is_subject_Valid() const;

    QList<QString> getTags() const;
    void setTags(const QList<QString> &tags);
    bool is_tags_Set() const;
    bool is_tags_Valid() const;

    QString getRTemplate() const;
    void setRTemplate(const QString &r_template);
    bool is_r_template_Set() const;
    bool is_r_template_Valid() const;

    qint32 getTs() const;
    void setTs(const qint32 &ts);
    bool is_ts_Set() const;
    bool is_ts_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m__id;
    bool m__id_isSet;
    bool m__id_isValid;

    qint32 m_clicks;
    bool m_clicks_isSet;
    bool m_clicks_isValid;

    QList<OAIMessages_info_response_clicks_detail_inner> m_clicks_detail;
    bool m_clicks_detail_isSet;
    bool m_clicks_detail_isValid;

    QString m_email;
    bool m_email_isSet;
    bool m_email_isValid;

    OAIMessages_info_response_metadata m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    qint32 m_opens;
    bool m_opens_isSet;
    bool m_opens_isValid;

    QList<OAIMessages_info_response_opens_detail_inner> m_opens_detail;
    bool m_opens_detail_isSet;
    bool m_opens_detail_isValid;

    QString m_sender;
    bool m_sender_isSet;
    bool m_sender_isValid;

    QList<OAIMessages_info_response_smtp_events_inner> m_smtp_events;
    bool m_smtp_events_isSet;
    bool m_smtp_events_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_subject;
    bool m_subject_isSet;
    bool m_subject_isValid;

    QList<QString> m_tags;
    bool m_tags_isSet;
    bool m_tags_isValid;

    QString m_r_template;
    bool m_r_template_isSet;
    bool m_r_template_isValid;

    qint32 m_ts;
    bool m_ts_isSet;
    bool m_ts_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMessages_info_response)

#endif // OAIMessages_info_response_H
