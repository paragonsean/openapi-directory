/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRejects_list_response_inner_sender.h
 *
 * 
 */

#ifndef OAIRejects_list_response_inner_sender_H
#define OAIRejects_list_response_inner_sender_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRejects_list_response_inner_sender : public OAIObject {
public:
    OAIRejects_list_response_inner_sender();
    OAIRejects_list_response_inner_sender(QString json);
    ~OAIRejects_list_response_inner_sender() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddress() const;
    void setAddress(const QString &address);
    bool is_address_Set() const;
    bool is_address_Valid() const;

    qint32 getClicks() const;
    void setClicks(const qint32 &clicks);
    bool is_clicks_Set() const;
    bool is_clicks_Valid() const;

    qint32 getComplaints() const;
    void setComplaints(const qint32 &complaints);
    bool is_complaints_Set() const;
    bool is_complaints_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    qint32 getHardBounces() const;
    void setHardBounces(const qint32 &hard_bounces);
    bool is_hard_bounces_Set() const;
    bool is_hard_bounces_Valid() const;

    qint32 getOpens() const;
    void setOpens(const qint32 &opens);
    bool is_opens_Set() const;
    bool is_opens_Valid() const;

    qint32 getRejects() const;
    void setRejects(const qint32 &rejects);
    bool is_rejects_Set() const;
    bool is_rejects_Valid() const;

    qint32 getSent() const;
    void setSent(const qint32 &sent);
    bool is_sent_Set() const;
    bool is_sent_Valid() const;

    qint32 getSoftBounces() const;
    void setSoftBounces(const qint32 &soft_bounces);
    bool is_soft_bounces_Set() const;
    bool is_soft_bounces_Valid() const;

    qint32 getUniqueClicks() const;
    void setUniqueClicks(const qint32 &unique_clicks);
    bool is_unique_clicks_Set() const;
    bool is_unique_clicks_Valid() const;

    qint32 getUniqueOpens() const;
    void setUniqueOpens(const qint32 &unique_opens);
    bool is_unique_opens_Set() const;
    bool is_unique_opens_Valid() const;

    qint32 getUnsubs() const;
    void setUnsubs(const qint32 &unsubs);
    bool is_unsubs_Set() const;
    bool is_unsubs_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_address;
    bool m_address_isSet;
    bool m_address_isValid;

    qint32 m_clicks;
    bool m_clicks_isSet;
    bool m_clicks_isValid;

    qint32 m_complaints;
    bool m_complaints_isSet;
    bool m_complaints_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    qint32 m_hard_bounces;
    bool m_hard_bounces_isSet;
    bool m_hard_bounces_isValid;

    qint32 m_opens;
    bool m_opens_isSet;
    bool m_opens_isValid;

    qint32 m_rejects;
    bool m_rejects_isSet;
    bool m_rejects_isValid;

    qint32 m_sent;
    bool m_sent_isSet;
    bool m_sent_isValid;

    qint32 m_soft_bounces;
    bool m_soft_bounces_isSet;
    bool m_soft_bounces_isValid;

    qint32 m_unique_clicks;
    bool m_unique_clicks_isSet;
    bool m_unique_clicks_isValid;

    qint32 m_unique_opens;
    bool m_unique_opens_isSet;
    bool m_unique_opens_isValid;

    qint32 m_unsubs;
    bool m_unsubs_isSet;
    bool m_unsubs_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRejects_list_response_inner_sender)

#endif // OAIRejects_list_response_inner_sender_H
