/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISubaccounts_info_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISubaccounts_info_response::OAISubaccounts_info_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISubaccounts_info_response::OAISubaccounts_info_response() {
    this->initializeModel();
}

OAISubaccounts_info_response::~OAISubaccounts_info_response() {}

void OAISubaccounts_info_response::initializeModel() {

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_custom_quota_isSet = false;
    m_custom_quota_isValid = false;

    m_first_sent_at_isSet = false;
    m_first_sent_at_isValid = false;

    m_hourly_quota_isSet = false;
    m_hourly_quota_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_last_30_days_isSet = false;
    m_last_30_days_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_notes_isSet = false;
    m_notes_isValid = false;

    m_reputation_isSet = false;
    m_reputation_isValid = false;

    m_sent_hourly_isSet = false;
    m_sent_hourly_isValid = false;

    m_sent_monthly_isSet = false;
    m_sent_monthly_isValid = false;

    m_sent_total_isSet = false;
    m_sent_total_isValid = false;

    m_sent_weekly_isSet = false;
    m_sent_weekly_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAISubaccounts_info_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISubaccounts_info_response::fromJsonObject(QJsonObject json) {

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_custom_quota_isValid = ::OpenAPI::fromJsonValue(m_custom_quota, json[QString("custom_quota")]);
    m_custom_quota_isSet = !json[QString("custom_quota")].isNull() && m_custom_quota_isValid;

    m_first_sent_at_isValid = ::OpenAPI::fromJsonValue(m_first_sent_at, json[QString("first_sent_at")]);
    m_first_sent_at_isSet = !json[QString("first_sent_at")].isNull() && m_first_sent_at_isValid;

    m_hourly_quota_isValid = ::OpenAPI::fromJsonValue(m_hourly_quota, json[QString("hourly_quota")]);
    m_hourly_quota_isSet = !json[QString("hourly_quota")].isNull() && m_hourly_quota_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_last_30_days_isValid = ::OpenAPI::fromJsonValue(m_last_30_days, json[QString("last_30_days")]);
    m_last_30_days_isSet = !json[QString("last_30_days")].isNull() && m_last_30_days_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_notes_isValid = ::OpenAPI::fromJsonValue(m_notes, json[QString("notes")]);
    m_notes_isSet = !json[QString("notes")].isNull() && m_notes_isValid;

    m_reputation_isValid = ::OpenAPI::fromJsonValue(m_reputation, json[QString("reputation")]);
    m_reputation_isSet = !json[QString("reputation")].isNull() && m_reputation_isValid;

    m_sent_hourly_isValid = ::OpenAPI::fromJsonValue(m_sent_hourly, json[QString("sent_hourly")]);
    m_sent_hourly_isSet = !json[QString("sent_hourly")].isNull() && m_sent_hourly_isValid;

    m_sent_monthly_isValid = ::OpenAPI::fromJsonValue(m_sent_monthly, json[QString("sent_monthly")]);
    m_sent_monthly_isSet = !json[QString("sent_monthly")].isNull() && m_sent_monthly_isValid;

    m_sent_total_isValid = ::OpenAPI::fromJsonValue(m_sent_total, json[QString("sent_total")]);
    m_sent_total_isSet = !json[QString("sent_total")].isNull() && m_sent_total_isValid;

    m_sent_weekly_isValid = ::OpenAPI::fromJsonValue(m_sent_weekly, json[QString("sent_weekly")]);
    m_sent_weekly_isSet = !json[QString("sent_weekly")].isNull() && m_sent_weekly_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAISubaccounts_info_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISubaccounts_info_response::asJsonObject() const {
    QJsonObject obj;
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_custom_quota_isSet) {
        obj.insert(QString("custom_quota"), ::OpenAPI::toJsonValue(m_custom_quota));
    }
    if (m_first_sent_at_isSet) {
        obj.insert(QString("first_sent_at"), ::OpenAPI::toJsonValue(m_first_sent_at));
    }
    if (m_hourly_quota_isSet) {
        obj.insert(QString("hourly_quota"), ::OpenAPI::toJsonValue(m_hourly_quota));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_last_30_days.isSet()) {
        obj.insert(QString("last_30_days"), ::OpenAPI::toJsonValue(m_last_30_days));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_notes_isSet) {
        obj.insert(QString("notes"), ::OpenAPI::toJsonValue(m_notes));
    }
    if (m_reputation_isSet) {
        obj.insert(QString("reputation"), ::OpenAPI::toJsonValue(m_reputation));
    }
    if (m_sent_hourly_isSet) {
        obj.insert(QString("sent_hourly"), ::OpenAPI::toJsonValue(m_sent_hourly));
    }
    if (m_sent_monthly_isSet) {
        obj.insert(QString("sent_monthly"), ::OpenAPI::toJsonValue(m_sent_monthly));
    }
    if (m_sent_total_isSet) {
        obj.insert(QString("sent_total"), ::OpenAPI::toJsonValue(m_sent_total));
    }
    if (m_sent_weekly_isSet) {
        obj.insert(QString("sent_weekly"), ::OpenAPI::toJsonValue(m_sent_weekly));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAISubaccounts_info_response::getCreatedAt() const {
    return m_created_at;
}
void OAISubaccounts_info_response::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAISubaccounts_info_response::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAISubaccounts_info_response::is_created_at_Valid() const{
    return m_created_at_isValid;
}

qint32 OAISubaccounts_info_response::getCustomQuota() const {
    return m_custom_quota;
}
void OAISubaccounts_info_response::setCustomQuota(const qint32 &custom_quota) {
    m_custom_quota = custom_quota;
    m_custom_quota_isSet = true;
}

bool OAISubaccounts_info_response::is_custom_quota_Set() const{
    return m_custom_quota_isSet;
}

bool OAISubaccounts_info_response::is_custom_quota_Valid() const{
    return m_custom_quota_isValid;
}

QString OAISubaccounts_info_response::getFirstSentAt() const {
    return m_first_sent_at;
}
void OAISubaccounts_info_response::setFirstSentAt(const QString &first_sent_at) {
    m_first_sent_at = first_sent_at;
    m_first_sent_at_isSet = true;
}

bool OAISubaccounts_info_response::is_first_sent_at_Set() const{
    return m_first_sent_at_isSet;
}

bool OAISubaccounts_info_response::is_first_sent_at_Valid() const{
    return m_first_sent_at_isValid;
}

qint32 OAISubaccounts_info_response::getHourlyQuota() const {
    return m_hourly_quota;
}
void OAISubaccounts_info_response::setHourlyQuota(const qint32 &hourly_quota) {
    m_hourly_quota = hourly_quota;
    m_hourly_quota_isSet = true;
}

bool OAISubaccounts_info_response::is_hourly_quota_Set() const{
    return m_hourly_quota_isSet;
}

bool OAISubaccounts_info_response::is_hourly_quota_Valid() const{
    return m_hourly_quota_isValid;
}

QString OAISubaccounts_info_response::getId() const {
    return m_id;
}
void OAISubaccounts_info_response::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAISubaccounts_info_response::is_id_Set() const{
    return m_id_isSet;
}

bool OAISubaccounts_info_response::is_id_Valid() const{
    return m_id_isValid;
}

OAISenders_info_response_stats_last_30_days OAISubaccounts_info_response::getLast30Days() const {
    return m_last_30_days;
}
void OAISubaccounts_info_response::setLast30Days(const OAISenders_info_response_stats_last_30_days &last_30_days) {
    m_last_30_days = last_30_days;
    m_last_30_days_isSet = true;
}

bool OAISubaccounts_info_response::is_last_30_days_Set() const{
    return m_last_30_days_isSet;
}

bool OAISubaccounts_info_response::is_last_30_days_Valid() const{
    return m_last_30_days_isValid;
}

QString OAISubaccounts_info_response::getName() const {
    return m_name;
}
void OAISubaccounts_info_response::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAISubaccounts_info_response::is_name_Set() const{
    return m_name_isSet;
}

bool OAISubaccounts_info_response::is_name_Valid() const{
    return m_name_isValid;
}

QString OAISubaccounts_info_response::getNotes() const {
    return m_notes;
}
void OAISubaccounts_info_response::setNotes(const QString &notes) {
    m_notes = notes;
    m_notes_isSet = true;
}

bool OAISubaccounts_info_response::is_notes_Set() const{
    return m_notes_isSet;
}

bool OAISubaccounts_info_response::is_notes_Valid() const{
    return m_notes_isValid;
}

qint32 OAISubaccounts_info_response::getReputation() const {
    return m_reputation;
}
void OAISubaccounts_info_response::setReputation(const qint32 &reputation) {
    m_reputation = reputation;
    m_reputation_isSet = true;
}

bool OAISubaccounts_info_response::is_reputation_Set() const{
    return m_reputation_isSet;
}

bool OAISubaccounts_info_response::is_reputation_Valid() const{
    return m_reputation_isValid;
}

qint32 OAISubaccounts_info_response::getSentHourly() const {
    return m_sent_hourly;
}
void OAISubaccounts_info_response::setSentHourly(const qint32 &sent_hourly) {
    m_sent_hourly = sent_hourly;
    m_sent_hourly_isSet = true;
}

bool OAISubaccounts_info_response::is_sent_hourly_Set() const{
    return m_sent_hourly_isSet;
}

bool OAISubaccounts_info_response::is_sent_hourly_Valid() const{
    return m_sent_hourly_isValid;
}

qint32 OAISubaccounts_info_response::getSentMonthly() const {
    return m_sent_monthly;
}
void OAISubaccounts_info_response::setSentMonthly(const qint32 &sent_monthly) {
    m_sent_monthly = sent_monthly;
    m_sent_monthly_isSet = true;
}

bool OAISubaccounts_info_response::is_sent_monthly_Set() const{
    return m_sent_monthly_isSet;
}

bool OAISubaccounts_info_response::is_sent_monthly_Valid() const{
    return m_sent_monthly_isValid;
}

qint32 OAISubaccounts_info_response::getSentTotal() const {
    return m_sent_total;
}
void OAISubaccounts_info_response::setSentTotal(const qint32 &sent_total) {
    m_sent_total = sent_total;
    m_sent_total_isSet = true;
}

bool OAISubaccounts_info_response::is_sent_total_Set() const{
    return m_sent_total_isSet;
}

bool OAISubaccounts_info_response::is_sent_total_Valid() const{
    return m_sent_total_isValid;
}

qint32 OAISubaccounts_info_response::getSentWeekly() const {
    return m_sent_weekly;
}
void OAISubaccounts_info_response::setSentWeekly(const qint32 &sent_weekly) {
    m_sent_weekly = sent_weekly;
    m_sent_weekly_isSet = true;
}

bool OAISubaccounts_info_response::is_sent_weekly_Set() const{
    return m_sent_weekly_isSet;
}

bool OAISubaccounts_info_response::is_sent_weekly_Valid() const{
    return m_sent_weekly_isValid;
}

QString OAISubaccounts_info_response::getStatus() const {
    return m_status;
}
void OAISubaccounts_info_response::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAISubaccounts_info_response::is_status_Set() const{
    return m_status_isSet;
}

bool OAISubaccounts_info_response::is_status_Valid() const{
    return m_status_isValid;
}

bool OAISubaccounts_info_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_quota_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_sent_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_hourly_quota_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_30_days.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reputation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sent_hourly_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sent_monthly_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sent_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sent_weekly_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISubaccounts_info_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
