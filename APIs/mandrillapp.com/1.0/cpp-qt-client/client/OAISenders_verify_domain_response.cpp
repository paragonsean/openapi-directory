/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISenders_verify_domain_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISenders_verify_domain_response::OAISenders_verify_domain_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISenders_verify_domain_response::OAISenders_verify_domain_response() {
    this->initializeModel();
}

OAISenders_verify_domain_response::~OAISenders_verify_domain_response() {}

void OAISenders_verify_domain_response::initializeModel() {

    m_domain_isSet = false;
    m_domain_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;
}

void OAISenders_verify_domain_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISenders_verify_domain_response::fromJsonObject(QJsonObject json) {

    m_domain_isValid = ::OpenAPI::fromJsonValue(m_domain, json[QString("domain")]);
    m_domain_isSet = !json[QString("domain")].isNull() && m_domain_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;
}

QString OAISenders_verify_domain_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISenders_verify_domain_response::asJsonObject() const {
    QJsonObject obj;
    if (m_domain_isSet) {
        obj.insert(QString("domain"), ::OpenAPI::toJsonValue(m_domain));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    return obj;
}

QString OAISenders_verify_domain_response::getDomain() const {
    return m_domain;
}
void OAISenders_verify_domain_response::setDomain(const QString &domain) {
    m_domain = domain;
    m_domain_isSet = true;
}

bool OAISenders_verify_domain_response::is_domain_Set() const{
    return m_domain_isSet;
}

bool OAISenders_verify_domain_response::is_domain_Valid() const{
    return m_domain_isValid;
}

QString OAISenders_verify_domain_response::getEmail() const {
    return m_email;
}
void OAISenders_verify_domain_response::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAISenders_verify_domain_response::is_email_Set() const{
    return m_email_isSet;
}

bool OAISenders_verify_domain_response::is_email_Valid() const{
    return m_email_isValid;
}

QString OAISenders_verify_domain_response::getStatus() const {
    return m_status;
}
void OAISenders_verify_domain_response::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAISenders_verify_domain_response::is_status_Set() const{
    return m_status_isSet;
}

bool OAISenders_verify_domain_response::is_status_Valid() const{
    return m_status_isValid;
}

bool OAISenders_verify_domain_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_domain_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISenders_verify_domain_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
