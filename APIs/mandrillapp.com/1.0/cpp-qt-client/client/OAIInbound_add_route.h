/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInbound_add_route.h
 *
 * 
 */

#ifndef OAIInbound_add_route_H
#define OAIInbound_add_route_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInbound_add_route : public OAIObject {
public:
    OAIInbound_add_route();
    OAIInbound_add_route(QString json);
    ~OAIInbound_add_route() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getDomain() const;
    void setDomain(const QString &domain);
    bool is_domain_Set() const;
    bool is_domain_Valid() const;

    QString getKey() const;
    void setKey(const QString &key);
    bool is_key_Set() const;
    bool is_key_Valid() const;

    QString getPattern() const;
    void setPattern(const QString &pattern);
    bool is_pattern_Set() const;
    bool is_pattern_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_domain;
    bool m_domain_isSet;
    bool m_domain_isValid;

    QString m_key;
    bool m_key_isSet;
    bool m_key_isValid;

    QString m_pattern;
    bool m_pattern_isSet;
    bool m_pattern_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInbound_add_route)

#endif // OAIInbound_add_route_H
