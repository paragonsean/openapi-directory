/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Webhook model module.
 * @module model/Webhook
 * @version 1.0
 */
class Webhook {
    /**
     * Constructs a new <code>Webhook</code>.
     * @alias module:model/Webhook
     */
    constructor() { 
        
        Webhook.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Webhook</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Webhook} obj Optional instance to populate.
     * @return {module:model/Webhook} The populated <code>Webhook</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Webhook();

            if (data.hasOwnProperty('auth_key')) {
                obj['auth_key'] = ApiClient.convertToType(data['auth_key'], 'String');
            }
            if (data.hasOwnProperty('batches_sent')) {
                obj['batches_sent'] = ApiClient.convertToType(data['batches_sent'], 'Number');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('events')) {
                obj['events'] = ApiClient.convertToType(data['events'], ['String']);
            }
            if (data.hasOwnProperty('events_sent')) {
                obj['events_sent'] = ApiClient.convertToType(data['events_sent'], 'Number');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('last_error')) {
                obj['last_error'] = ApiClient.convertToType(data['last_error'], 'String');
            }
            if (data.hasOwnProperty('last_sent_at')) {
                obj['last_sent_at'] = ApiClient.convertToType(data['last_sent_at'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Webhook</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Webhook</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['auth_key'] && !(typeof data['auth_key'] === 'string' || data['auth_key'] instanceof String)) {
            throw new Error("Expected the field `auth_key` to be a primitive type in the JSON string but got " + data['auth_key']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['events'])) {
            throw new Error("Expected the field `events` to be an array in the JSON data but got " + data['events']);
        }
        // ensure the json data is a string
        if (data['last_error'] && !(typeof data['last_error'] === 'string' || data['last_error'] instanceof String)) {
            throw new Error("Expected the field `last_error` to be a primitive type in the JSON string but got " + data['last_error']);
        }
        // ensure the json data is a string
        if (data['last_sent_at'] && !(typeof data['last_sent_at'] === 'string' || data['last_sent_at'] instanceof String)) {
            throw new Error("Expected the field `last_sent_at` to be a primitive type in the JSON string but got " + data['last_sent_at']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {String} auth_key
 */
Webhook.prototype['auth_key'] = undefined;

/**
 * @member {Number} batches_sent
 */
Webhook.prototype['batches_sent'] = undefined;

/**
 * @member {String} created_at
 */
Webhook.prototype['created_at'] = undefined;

/**
 * @member {String} description
 */
Webhook.prototype['description'] = undefined;

/**
 * @member {Array.<String>} events
 */
Webhook.prototype['events'] = undefined;

/**
 * @member {Number} events_sent
 */
Webhook.prototype['events_sent'] = undefined;

/**
 * @member {Number} id
 */
Webhook.prototype['id'] = undefined;

/**
 * @member {String} last_error
 */
Webhook.prototype['last_error'] = undefined;

/**
 * @member {String} last_sent_at
 */
Webhook.prototype['last_sent_at'] = undefined;

/**
 * @member {String} url
 */
Webhook.prototype['url'] = undefined;






export default Webhook;

