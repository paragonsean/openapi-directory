/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MessagesContentResponseAttachmentsInner from './MessagesContentResponseAttachmentsInner';
import MessagesContentResponseHeaders from './MessagesContentResponseHeaders';
import MessagesSendMessageGlobalMergeVarsInner from './MessagesSendMessageGlobalMergeVarsInner';
import MessagesSendMessageMergeVarsInner from './MessagesSendMessageMergeVarsInner';
import MessagesSendMessageMetadata from './MessagesSendMessageMetadata';
import MessagesSendMessageRecipientMetadataInner from './MessagesSendMessageRecipientMetadataInner';
import MessagesSendMessageToInner from './MessagesSendMessageToInner';

/**
 * The MessagesSendMessage model module.
 * @module model/MessagesSendMessage
 * @version 1.0
 */
class MessagesSendMessage {
    /**
     * Constructs a new <code>MessagesSendMessage</code>.
     * @alias module:model/MessagesSendMessage
     */
    constructor() { 
        
        MessagesSendMessage.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MessagesSendMessage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessagesSendMessage} obj Optional instance to populate.
     * @return {module:model/MessagesSendMessage} The populated <code>MessagesSendMessage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessagesSendMessage();

            if (data.hasOwnProperty('attachments')) {
                obj['attachments'] = ApiClient.convertToType(data['attachments'], [MessagesContentResponseAttachmentsInner]);
            }
            if (data.hasOwnProperty('bcc_address')) {
                obj['bcc_address'] = ApiClient.convertToType(data['bcc_address'], 'String');
            }
            if (data.hasOwnProperty('from_email')) {
                obj['from_email'] = ApiClient.convertToType(data['from_email'], 'String');
            }
            if (data.hasOwnProperty('from_name')) {
                obj['from_name'] = ApiClient.convertToType(data['from_name'], 'String');
            }
            if (data.hasOwnProperty('global_merge_vars')) {
                obj['global_merge_vars'] = ApiClient.convertToType(data['global_merge_vars'], [MessagesSendMessageGlobalMergeVarsInner]);
            }
            if (data.hasOwnProperty('google_analytics_campaign')) {
                obj['google_analytics_campaign'] = ApiClient.convertToType(data['google_analytics_campaign'], 'String');
            }
            if (data.hasOwnProperty('google_analytics_domains')) {
                obj['google_analytics_domains'] = ApiClient.convertToType(data['google_analytics_domains'], ['String']);
            }
            if (data.hasOwnProperty('headers')) {
                obj['headers'] = MessagesContentResponseHeaders.constructFromObject(data['headers']);
            }
            if (data.hasOwnProperty('html')) {
                obj['html'] = ApiClient.convertToType(data['html'], 'String');
            }
            if (data.hasOwnProperty('images')) {
                obj['images'] = ApiClient.convertToType(data['images'], [MessagesContentResponseAttachmentsInner]);
            }
            if (data.hasOwnProperty('important')) {
                obj['important'] = ApiClient.convertToType(data['important'], 'Boolean');
            }
            if (data.hasOwnProperty('merge')) {
                obj['merge'] = ApiClient.convertToType(data['merge'], 'Boolean');
            }
            if (data.hasOwnProperty('merge_vars')) {
                obj['merge_vars'] = ApiClient.convertToType(data['merge_vars'], [MessagesSendMessageMergeVarsInner]);
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = MessagesSendMessageMetadata.constructFromObject(data['metadata']);
            }
            if (data.hasOwnProperty('recipient_metadata')) {
                obj['recipient_metadata'] = ApiClient.convertToType(data['recipient_metadata'], [MessagesSendMessageRecipientMetadataInner]);
            }
            if (data.hasOwnProperty('subaccount')) {
                obj['subaccount'] = ApiClient.convertToType(data['subaccount'], 'String');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = ApiClient.convertToType(data['to'], [MessagesSendMessageToInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MessagesSendMessage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MessagesSendMessage</code>.
     */
    static validateJSON(data) {
        if (data['attachments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['attachments'])) {
                throw new Error("Expected the field `attachments` to be an array in the JSON data but got " + data['attachments']);
            }
            // validate the optional field `attachments` (array)
            for (const item of data['attachments']) {
                MessagesContentResponseAttachmentsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['bcc_address'] && !(typeof data['bcc_address'] === 'string' || data['bcc_address'] instanceof String)) {
            throw new Error("Expected the field `bcc_address` to be a primitive type in the JSON string but got " + data['bcc_address']);
        }
        // ensure the json data is a string
        if (data['from_email'] && !(typeof data['from_email'] === 'string' || data['from_email'] instanceof String)) {
            throw new Error("Expected the field `from_email` to be a primitive type in the JSON string but got " + data['from_email']);
        }
        // ensure the json data is a string
        if (data['from_name'] && !(typeof data['from_name'] === 'string' || data['from_name'] instanceof String)) {
            throw new Error("Expected the field `from_name` to be a primitive type in the JSON string but got " + data['from_name']);
        }
        if (data['global_merge_vars']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['global_merge_vars'])) {
                throw new Error("Expected the field `global_merge_vars` to be an array in the JSON data but got " + data['global_merge_vars']);
            }
            // validate the optional field `global_merge_vars` (array)
            for (const item of data['global_merge_vars']) {
                MessagesSendMessageGlobalMergeVarsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['google_analytics_campaign'] && !(typeof data['google_analytics_campaign'] === 'string' || data['google_analytics_campaign'] instanceof String)) {
            throw new Error("Expected the field `google_analytics_campaign` to be a primitive type in the JSON string but got " + data['google_analytics_campaign']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['google_analytics_domains'])) {
            throw new Error("Expected the field `google_analytics_domains` to be an array in the JSON data but got " + data['google_analytics_domains']);
        }
        // validate the optional field `headers`
        if (data['headers']) { // data not null
          MessagesContentResponseHeaders.validateJSON(data['headers']);
        }
        // ensure the json data is a string
        if (data['html'] && !(typeof data['html'] === 'string' || data['html'] instanceof String)) {
            throw new Error("Expected the field `html` to be a primitive type in the JSON string but got " + data['html']);
        }
        if (data['images']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['images'])) {
                throw new Error("Expected the field `images` to be an array in the JSON data but got " + data['images']);
            }
            // validate the optional field `images` (array)
            for (const item of data['images']) {
                MessagesContentResponseAttachmentsInner.validateJSON(item);
            };
        }
        if (data['merge_vars']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['merge_vars'])) {
                throw new Error("Expected the field `merge_vars` to be an array in the JSON data but got " + data['merge_vars']);
            }
            // validate the optional field `merge_vars` (array)
            for (const item of data['merge_vars']) {
                MessagesSendMessageMergeVarsInner.validateJSON(item);
            };
        }
        // validate the optional field `metadata`
        if (data['metadata']) { // data not null
          MessagesSendMessageMetadata.validateJSON(data['metadata']);
        }
        if (data['recipient_metadata']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['recipient_metadata'])) {
                throw new Error("Expected the field `recipient_metadata` to be an array in the JSON data but got " + data['recipient_metadata']);
            }
            // validate the optional field `recipient_metadata` (array)
            for (const item of data['recipient_metadata']) {
                MessagesSendMessageRecipientMetadataInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['subaccount'] && !(typeof data['subaccount'] === 'string' || data['subaccount'] instanceof String)) {
            throw new Error("Expected the field `subaccount` to be a primitive type in the JSON string but got " + data['subaccount']);
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        if (data['to']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['to'])) {
                throw new Error("Expected the field `to` to be an array in the JSON data but got " + data['to']);
            }
            // validate the optional field `to` (array)
            for (const item of data['to']) {
                MessagesSendMessageToInner.validateJSON(item);
            };
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/MessagesContentResponseAttachmentsInner>} attachments
 */
MessagesSendMessage.prototype['attachments'] = undefined;

/**
 * @member {String} bcc_address
 */
MessagesSendMessage.prototype['bcc_address'] = undefined;

/**
 * @member {String} from_email
 */
MessagesSendMessage.prototype['from_email'] = undefined;

/**
 * @member {String} from_name
 */
MessagesSendMessage.prototype['from_name'] = undefined;

/**
 * @member {Array.<module:model/MessagesSendMessageGlobalMergeVarsInner>} global_merge_vars
 */
MessagesSendMessage.prototype['global_merge_vars'] = undefined;

/**
 * @member {String} google_analytics_campaign
 */
MessagesSendMessage.prototype['google_analytics_campaign'] = undefined;

/**
 * @member {Array.<String>} google_analytics_domains
 */
MessagesSendMessage.prototype['google_analytics_domains'] = undefined;

/**
 * @member {module:model/MessagesContentResponseHeaders} headers
 */
MessagesSendMessage.prototype['headers'] = undefined;

/**
 * @member {String} html
 */
MessagesSendMessage.prototype['html'] = undefined;

/**
 * @member {Array.<module:model/MessagesContentResponseAttachmentsInner>} images
 */
MessagesSendMessage.prototype['images'] = undefined;

/**
 * @member {Boolean} important
 */
MessagesSendMessage.prototype['important'] = undefined;

/**
 * @member {Boolean} merge
 */
MessagesSendMessage.prototype['merge'] = undefined;

/**
 * @member {Array.<module:model/MessagesSendMessageMergeVarsInner>} merge_vars
 */
MessagesSendMessage.prototype['merge_vars'] = undefined;

/**
 * @member {module:model/MessagesSendMessageMetadata} metadata
 */
MessagesSendMessage.prototype['metadata'] = undefined;

/**
 * @member {Array.<module:model/MessagesSendMessageRecipientMetadataInner>} recipient_metadata
 */
MessagesSendMessage.prototype['recipient_metadata'] = undefined;

/**
 * @member {String} subaccount
 */
MessagesSendMessage.prototype['subaccount'] = undefined;

/**
 * @member {String} subject
 */
MessagesSendMessage.prototype['subject'] = undefined;

/**
 * @member {Array.<String>} tags
 */
MessagesSendMessage.prototype['tags'] = undefined;

/**
 * @member {String} text
 */
MessagesSendMessage.prototype['text'] = undefined;

/**
 * @member {Array.<module:model/MessagesSendMessageToInner>} to
 */
MessagesSendMessage.prototype['to'] = undefined;






export default MessagesSendMessage;

