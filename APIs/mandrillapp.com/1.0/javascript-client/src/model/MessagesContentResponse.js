/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MessagesContentResponseAttachmentsInner from './MessagesContentResponseAttachmentsInner';
import MessagesContentResponseHeaders from './MessagesContentResponseHeaders';
import MessagesContentResponseTo from './MessagesContentResponseTo';

/**
 * The MessagesContentResponse model module.
 * @module model/MessagesContentResponse
 * @version 1.0
 */
class MessagesContentResponse {
    /**
     * Constructs a new <code>MessagesContentResponse</code>.
     * @alias module:model/MessagesContentResponse
     */
    constructor() { 
        
        MessagesContentResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MessagesContentResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessagesContentResponse} obj Optional instance to populate.
     * @return {module:model/MessagesContentResponse} The populated <code>MessagesContentResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessagesContentResponse();

            if (data.hasOwnProperty('_id')) {
                obj['_id'] = ApiClient.convertToType(data['_id'], 'String');
            }
            if (data.hasOwnProperty('attachments')) {
                obj['attachments'] = ApiClient.convertToType(data['attachments'], [MessagesContentResponseAttachmentsInner]);
            }
            if (data.hasOwnProperty('from_email')) {
                obj['from_email'] = ApiClient.convertToType(data['from_email'], 'String');
            }
            if (data.hasOwnProperty('from_name')) {
                obj['from_name'] = ApiClient.convertToType(data['from_name'], 'String');
            }
            if (data.hasOwnProperty('headers')) {
                obj['headers'] = MessagesContentResponseHeaders.constructFromObject(data['headers']);
            }
            if (data.hasOwnProperty('html')) {
                obj['html'] = ApiClient.convertToType(data['html'], 'String');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('to')) {
                obj['to'] = MessagesContentResponseTo.constructFromObject(data['to']);
            }
            if (data.hasOwnProperty('ts')) {
                obj['ts'] = ApiClient.convertToType(data['ts'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MessagesContentResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MessagesContentResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['_id'] && !(typeof data['_id'] === 'string' || data['_id'] instanceof String)) {
            throw new Error("Expected the field `_id` to be a primitive type in the JSON string but got " + data['_id']);
        }
        if (data['attachments']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['attachments'])) {
                throw new Error("Expected the field `attachments` to be an array in the JSON data but got " + data['attachments']);
            }
            // validate the optional field `attachments` (array)
            for (const item of data['attachments']) {
                MessagesContentResponseAttachmentsInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['from_email'] && !(typeof data['from_email'] === 'string' || data['from_email'] instanceof String)) {
            throw new Error("Expected the field `from_email` to be a primitive type in the JSON string but got " + data['from_email']);
        }
        // ensure the json data is a string
        if (data['from_name'] && !(typeof data['from_name'] === 'string' || data['from_name'] instanceof String)) {
            throw new Error("Expected the field `from_name` to be a primitive type in the JSON string but got " + data['from_name']);
        }
        // validate the optional field `headers`
        if (data['headers']) { // data not null
          MessagesContentResponseHeaders.validateJSON(data['headers']);
        }
        // ensure the json data is a string
        if (data['html'] && !(typeof data['html'] === 'string' || data['html'] instanceof String)) {
            throw new Error("Expected the field `html` to be a primitive type in the JSON string but got " + data['html']);
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        // validate the optional field `to`
        if (data['to']) { // data not null
          MessagesContentResponseTo.validateJSON(data['to']);
        }

        return true;
    }


}



/**
 * @member {String} _id
 */
MessagesContentResponse.prototype['_id'] = undefined;

/**
 * @member {Array.<module:model/MessagesContentResponseAttachmentsInner>} attachments
 */
MessagesContentResponse.prototype['attachments'] = undefined;

/**
 * @member {String} from_email
 */
MessagesContentResponse.prototype['from_email'] = undefined;

/**
 * @member {String} from_name
 */
MessagesContentResponse.prototype['from_name'] = undefined;

/**
 * @member {module:model/MessagesContentResponseHeaders} headers
 */
MessagesContentResponse.prototype['headers'] = undefined;

/**
 * @member {String} html
 */
MessagesContentResponse.prototype['html'] = undefined;

/**
 * @member {String} subject
 */
MessagesContentResponse.prototype['subject'] = undefined;

/**
 * @member {Array.<String>} tags
 */
MessagesContentResponse.prototype['tags'] = undefined;

/**
 * @member {String} text
 */
MessagesContentResponse.prototype['text'] = undefined;

/**
 * @member {module:model/MessagesContentResponseTo} to
 */
MessagesContentResponse.prototype['to'] = undefined;

/**
 * @member {Number} ts
 */
MessagesContentResponse.prototype['ts'] = undefined;






export default MessagesContentResponse;

