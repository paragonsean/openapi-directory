/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UsersInfoResponseStats from './UsersInfoResponseStats';

/**
 * The UsersInfoResponse model module.
 * @module model/UsersInfoResponse
 * @version 1.0
 */
class UsersInfoResponse {
    /**
     * Constructs a new <code>UsersInfoResponse</code>.
     * @alias module:model/UsersInfoResponse
     */
    constructor() { 
        
        UsersInfoResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UsersInfoResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UsersInfoResponse} obj Optional instance to populate.
     * @return {module:model/UsersInfoResponse} The populated <code>UsersInfoResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UsersInfoResponse();

            if (data.hasOwnProperty('backlog')) {
                obj['backlog'] = ApiClient.convertToType(data['backlog'], 'Number');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('hourly_quota')) {
                obj['hourly_quota'] = ApiClient.convertToType(data['hourly_quota'], 'Number');
            }
            if (data.hasOwnProperty('public_id')) {
                obj['public_id'] = ApiClient.convertToType(data['public_id'], 'String');
            }
            if (data.hasOwnProperty('reputation')) {
                obj['reputation'] = ApiClient.convertToType(data['reputation'], 'Number');
            }
            if (data.hasOwnProperty('stats')) {
                obj['stats'] = UsersInfoResponseStats.constructFromObject(data['stats']);
            }
            if (data.hasOwnProperty('username')) {
                obj['username'] = ApiClient.convertToType(data['username'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UsersInfoResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UsersInfoResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['public_id'] && !(typeof data['public_id'] === 'string' || data['public_id'] instanceof String)) {
            throw new Error("Expected the field `public_id` to be a primitive type in the JSON string but got " + data['public_id']);
        }
        // validate the optional field `stats`
        if (data['stats']) { // data not null
          UsersInfoResponseStats.validateJSON(data['stats']);
        }
        // ensure the json data is a string
        if (data['username'] && !(typeof data['username'] === 'string' || data['username'] instanceof String)) {
            throw new Error("Expected the field `username` to be a primitive type in the JSON string but got " + data['username']);
        }

        return true;
    }


}



/**
 * @member {Number} backlog
 */
UsersInfoResponse.prototype['backlog'] = undefined;

/**
 * @member {String} created_at
 */
UsersInfoResponse.prototype['created_at'] = undefined;

/**
 * @member {Number} hourly_quota
 */
UsersInfoResponse.prototype['hourly_quota'] = undefined;

/**
 * @member {String} public_id
 */
UsersInfoResponse.prototype['public_id'] = undefined;

/**
 * @member {Number} reputation
 */
UsersInfoResponse.prototype['reputation'] = undefined;

/**
 * @member {module:model/UsersInfoResponseStats} stats
 */
UsersInfoResponse.prototype['stats'] = undefined;

/**
 * @member {String} username
 */
UsersInfoResponse.prototype['username'] = undefined;






export default UsersInfoResponse;

