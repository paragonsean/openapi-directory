/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MessagesInfoResponseClicksDetailInner model module.
 * @module model/MessagesInfoResponseClicksDetailInner
 * @version 1.0
 */
class MessagesInfoResponseClicksDetailInner {
    /**
     * Constructs a new <code>MessagesInfoResponseClicksDetailInner</code>.
     * @alias module:model/MessagesInfoResponseClicksDetailInner
     */
    constructor() { 
        
        MessagesInfoResponseClicksDetailInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MessagesInfoResponseClicksDetailInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MessagesInfoResponseClicksDetailInner} obj Optional instance to populate.
     * @return {module:model/MessagesInfoResponseClicksDetailInner} The populated <code>MessagesInfoResponseClicksDetailInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MessagesInfoResponseClicksDetailInner();

            if (data.hasOwnProperty('ip')) {
                obj['ip'] = ApiClient.convertToType(data['ip'], 'String');
            }
            if (data.hasOwnProperty('location')) {
                obj['location'] = ApiClient.convertToType(data['location'], 'String');
            }
            if (data.hasOwnProperty('ts')) {
                obj['ts'] = ApiClient.convertToType(data['ts'], 'Number');
            }
            if (data.hasOwnProperty('ua')) {
                obj['ua'] = ApiClient.convertToType(data['ua'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MessagesInfoResponseClicksDetailInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MessagesInfoResponseClicksDetailInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ip'] && !(typeof data['ip'] === 'string' || data['ip'] instanceof String)) {
            throw new Error("Expected the field `ip` to be a primitive type in the JSON string but got " + data['ip']);
        }
        // ensure the json data is a string
        if (data['location'] && !(typeof data['location'] === 'string' || data['location'] instanceof String)) {
            throw new Error("Expected the field `location` to be a primitive type in the JSON string but got " + data['location']);
        }
        // ensure the json data is a string
        if (data['ua'] && !(typeof data['ua'] === 'string' || data['ua'] instanceof String)) {
            throw new Error("Expected the field `ua` to be a primitive type in the JSON string but got " + data['ua']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * @member {String} ip
 */
MessagesInfoResponseClicksDetailInner.prototype['ip'] = undefined;

/**
 * @member {String} location
 */
MessagesInfoResponseClicksDetailInner.prototype['location'] = undefined;

/**
 * @member {Number} ts
 */
MessagesInfoResponseClicksDetailInner.prototype['ts'] = undefined;

/**
 * @member {String} ua
 */
MessagesInfoResponseClicksDetailInner.prototype['ua'] = undefined;

/**
 * @member {String} url
 */
MessagesInfoResponseClicksDetailInner.prototype['url'] = undefined;






export default MessagesInfoResponseClicksDetailInner;

