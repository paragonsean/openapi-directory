/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TemplatesListResponseInner model module.
 * @module model/TemplatesListResponseInner
 * @version 1.0
 */
class TemplatesListResponseInner {
    /**
     * Constructs a new <code>TemplatesListResponseInner</code>.
     * @alias module:model/TemplatesListResponseInner
     */
    constructor() { 
        
        TemplatesListResponseInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TemplatesListResponseInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TemplatesListResponseInner} obj Optional instance to populate.
     * @return {module:model/TemplatesListResponseInner} The populated <code>TemplatesListResponseInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TemplatesListResponseInner();

            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('created_at')) {
                obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
            }
            if (data.hasOwnProperty('from_email')) {
                obj['from_email'] = ApiClient.convertToType(data['from_email'], 'String');
            }
            if (data.hasOwnProperty('from_name')) {
                obj['from_name'] = ApiClient.convertToType(data['from_name'], 'String');
            }
            if (data.hasOwnProperty('labels')) {
                obj['labels'] = ApiClient.convertToType(data['labels'], ['String']);
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('publish_code')) {
                obj['publish_code'] = ApiClient.convertToType(data['publish_code'], 'String');
            }
            if (data.hasOwnProperty('publish_from_email')) {
                obj['publish_from_email'] = ApiClient.convertToType(data['publish_from_email'], 'String');
            }
            if (data.hasOwnProperty('publish_from_name')) {
                obj['publish_from_name'] = ApiClient.convertToType(data['publish_from_name'], 'String');
            }
            if (data.hasOwnProperty('publish_name')) {
                obj['publish_name'] = ApiClient.convertToType(data['publish_name'], 'String');
            }
            if (data.hasOwnProperty('publish_subject')) {
                obj['publish_subject'] = ApiClient.convertToType(data['publish_subject'], 'String');
            }
            if (data.hasOwnProperty('publish_text')) {
                obj['publish_text'] = ApiClient.convertToType(data['publish_text'], 'String');
            }
            if (data.hasOwnProperty('published_at')) {
                obj['published_at'] = ApiClient.convertToType(data['published_at'], 'String');
            }
            if (data.hasOwnProperty('slug')) {
                obj['slug'] = ApiClient.convertToType(data['slug'], 'String');
            }
            if (data.hasOwnProperty('subject')) {
                obj['subject'] = ApiClient.convertToType(data['subject'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('updated_at')) {
                obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TemplatesListResponseInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TemplatesListResponseInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['created_at'] && !(typeof data['created_at'] === 'string' || data['created_at'] instanceof String)) {
            throw new Error("Expected the field `created_at` to be a primitive type in the JSON string but got " + data['created_at']);
        }
        // ensure the json data is a string
        if (data['from_email'] && !(typeof data['from_email'] === 'string' || data['from_email'] instanceof String)) {
            throw new Error("Expected the field `from_email` to be a primitive type in the JSON string but got " + data['from_email']);
        }
        // ensure the json data is a string
        if (data['from_name'] && !(typeof data['from_name'] === 'string' || data['from_name'] instanceof String)) {
            throw new Error("Expected the field `from_name` to be a primitive type in the JSON string but got " + data['from_name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['labels'])) {
            throw new Error("Expected the field `labels` to be an array in the JSON data but got " + data['labels']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['publish_code'] && !(typeof data['publish_code'] === 'string' || data['publish_code'] instanceof String)) {
            throw new Error("Expected the field `publish_code` to be a primitive type in the JSON string but got " + data['publish_code']);
        }
        // ensure the json data is a string
        if (data['publish_from_email'] && !(typeof data['publish_from_email'] === 'string' || data['publish_from_email'] instanceof String)) {
            throw new Error("Expected the field `publish_from_email` to be a primitive type in the JSON string but got " + data['publish_from_email']);
        }
        // ensure the json data is a string
        if (data['publish_from_name'] && !(typeof data['publish_from_name'] === 'string' || data['publish_from_name'] instanceof String)) {
            throw new Error("Expected the field `publish_from_name` to be a primitive type in the JSON string but got " + data['publish_from_name']);
        }
        // ensure the json data is a string
        if (data['publish_name'] && !(typeof data['publish_name'] === 'string' || data['publish_name'] instanceof String)) {
            throw new Error("Expected the field `publish_name` to be a primitive type in the JSON string but got " + data['publish_name']);
        }
        // ensure the json data is a string
        if (data['publish_subject'] && !(typeof data['publish_subject'] === 'string' || data['publish_subject'] instanceof String)) {
            throw new Error("Expected the field `publish_subject` to be a primitive type in the JSON string but got " + data['publish_subject']);
        }
        // ensure the json data is a string
        if (data['publish_text'] && !(typeof data['publish_text'] === 'string' || data['publish_text'] instanceof String)) {
            throw new Error("Expected the field `publish_text` to be a primitive type in the JSON string but got " + data['publish_text']);
        }
        // ensure the json data is a string
        if (data['published_at'] && !(typeof data['published_at'] === 'string' || data['published_at'] instanceof String)) {
            throw new Error("Expected the field `published_at` to be a primitive type in the JSON string but got " + data['published_at']);
        }
        // ensure the json data is a string
        if (data['slug'] && !(typeof data['slug'] === 'string' || data['slug'] instanceof String)) {
            throw new Error("Expected the field `slug` to be a primitive type in the JSON string but got " + data['slug']);
        }
        // ensure the json data is a string
        if (data['subject'] && !(typeof data['subject'] === 'string' || data['subject'] instanceof String)) {
            throw new Error("Expected the field `subject` to be a primitive type in the JSON string but got " + data['subject']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        // ensure the json data is a string
        if (data['updated_at'] && !(typeof data['updated_at'] === 'string' || data['updated_at'] instanceof String)) {
            throw new Error("Expected the field `updated_at` to be a primitive type in the JSON string but got " + data['updated_at']);
        }

        return true;
    }


}



/**
 * @member {String} code
 */
TemplatesListResponseInner.prototype['code'] = undefined;

/**
 * @member {String} created_at
 */
TemplatesListResponseInner.prototype['created_at'] = undefined;

/**
 * @member {String} from_email
 */
TemplatesListResponseInner.prototype['from_email'] = undefined;

/**
 * @member {String} from_name
 */
TemplatesListResponseInner.prototype['from_name'] = undefined;

/**
 * @member {Array.<String>} labels
 */
TemplatesListResponseInner.prototype['labels'] = undefined;

/**
 * @member {String} name
 */
TemplatesListResponseInner.prototype['name'] = undefined;

/**
 * @member {String} publish_code
 */
TemplatesListResponseInner.prototype['publish_code'] = undefined;

/**
 * @member {String} publish_from_email
 */
TemplatesListResponseInner.prototype['publish_from_email'] = undefined;

/**
 * @member {String} publish_from_name
 */
TemplatesListResponseInner.prototype['publish_from_name'] = undefined;

/**
 * @member {String} publish_name
 */
TemplatesListResponseInner.prototype['publish_name'] = undefined;

/**
 * @member {String} publish_subject
 */
TemplatesListResponseInner.prototype['publish_subject'] = undefined;

/**
 * @member {String} publish_text
 */
TemplatesListResponseInner.prototype['publish_text'] = undefined;

/**
 * @member {String} published_at
 */
TemplatesListResponseInner.prototype['published_at'] = undefined;

/**
 * @member {String} slug
 */
TemplatesListResponseInner.prototype['slug'] = undefined;

/**
 * @member {String} subject
 */
TemplatesListResponseInner.prototype['subject'] = undefined;

/**
 * @member {String} text
 */
TemplatesListResponseInner.prototype['text'] = undefined;

/**
 * @member {String} updated_at
 */
TemplatesListResponseInner.prototype['updated_at'] = undefined;






export default TemplatesListResponseInner;

