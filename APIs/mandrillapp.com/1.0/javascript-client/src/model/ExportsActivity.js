/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ExportsActivity model module.
 * @module model/ExportsActivity
 * @version 1.0
 */
class ExportsActivity {
    /**
     * Constructs a new <code>ExportsActivity</code>.
     * @alias module:model/ExportsActivity
     */
    constructor() { 
        
        ExportsActivity.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ExportsActivity</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ExportsActivity} obj Optional instance to populate.
     * @return {module:model/ExportsActivity} The populated <code>ExportsActivity</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ExportsActivity();

            if (data.hasOwnProperty('api_keys')) {
                obj['api_keys'] = ApiClient.convertToType(data['api_keys'], ['String']);
            }
            if (data.hasOwnProperty('date_from')) {
                obj['date_from'] = ApiClient.convertToType(data['date_from'], 'String');
            }
            if (data.hasOwnProperty('date_to')) {
                obj['date_to'] = ApiClient.convertToType(data['date_to'], 'String');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('notify_email')) {
                obj['notify_email'] = ApiClient.convertToType(data['notify_email'], 'String');
            }
            if (data.hasOwnProperty('senders')) {
                obj['senders'] = ApiClient.convertToType(data['senders'], ['String']);
            }
            if (data.hasOwnProperty('states')) {
                obj['states'] = ApiClient.convertToType(data['states'], ['String']);
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ExportsActivity</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ExportsActivity</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['api_keys'])) {
            throw new Error("Expected the field `api_keys` to be an array in the JSON data but got " + data['api_keys']);
        }
        // ensure the json data is a string
        if (data['date_from'] && !(typeof data['date_from'] === 'string' || data['date_from'] instanceof String)) {
            throw new Error("Expected the field `date_from` to be a primitive type in the JSON string but got " + data['date_from']);
        }
        // ensure the json data is a string
        if (data['date_to'] && !(typeof data['date_to'] === 'string' || data['date_to'] instanceof String)) {
            throw new Error("Expected the field `date_to` to be a primitive type in the JSON string but got " + data['date_to']);
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['notify_email'] && !(typeof data['notify_email'] === 'string' || data['notify_email'] instanceof String)) {
            throw new Error("Expected the field `notify_email` to be a primitive type in the JSON string but got " + data['notify_email']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['senders'])) {
            throw new Error("Expected the field `senders` to be an array in the JSON data but got " + data['senders']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['states'])) {
            throw new Error("Expected the field `states` to be an array in the JSON data but got " + data['states']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['tags'])) {
            throw new Error("Expected the field `tags` to be an array in the JSON data but got " + data['tags']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} api_keys
 */
ExportsActivity.prototype['api_keys'] = undefined;

/**
 * @member {String} date_from
 */
ExportsActivity.prototype['date_from'] = undefined;

/**
 * @member {String} date_to
 */
ExportsActivity.prototype['date_to'] = undefined;

/**
 * @member {String} key
 */
ExportsActivity.prototype['key'] = undefined;

/**
 * @member {String} notify_email
 */
ExportsActivity.prototype['notify_email'] = undefined;

/**
 * @member {Array.<String>} senders
 */
ExportsActivity.prototype['senders'] = undefined;

/**
 * @member {Array.<String>} states
 */
ExportsActivity.prototype['states'] = undefined;

/**
 * @member {Array.<String>} tags
 */
ExportsActivity.prototype['tags'] = undefined;






export default ExportsActivity;

