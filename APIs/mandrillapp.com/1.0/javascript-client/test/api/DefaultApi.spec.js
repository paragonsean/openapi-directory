/**
 * Mandrill
 * Mandrill is a reliable, scalable, and secure delivery API for transactional emails from websites and applications. It's ideal for sending data-driven transactional emails, including targeted e-commerce and personalized one-to-one messages. 
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Mandrill);
  }
}(this, function(expect, Mandrill) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Mandrill.DefaultApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DefaultApi', function() {
    describe('exportsActivityJsonPost', function() {
      it('should call exportsActivityJsonPost successfully', function(done) {
        //uncomment below and update the code to test exportsActivityJsonPost
        //instance.exportsActivityJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('exportsInfoJsonPost', function() {
      it('should call exportsInfoJsonPost successfully', function(done) {
        //uncomment below and update the code to test exportsInfoJsonPost
        //instance.exportsInfoJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('exportsListJsonPost', function() {
      it('should call exportsListJsonPost successfully', function(done) {
        //uncomment below and update the code to test exportsListJsonPost
        //instance.exportsListJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('exportsRejectsJsonPost', function() {
      it('should call exportsRejectsJsonPost successfully', function(done) {
        //uncomment below and update the code to test exportsRejectsJsonPost
        //instance.exportsRejectsJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('exportsWhitelistJsonPost', function() {
      it('should call exportsWhitelistJsonPost successfully', function(done) {
        //uncomment below and update the code to test exportsWhitelistJsonPost
        //instance.exportsWhitelistJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('inboundAddDomainJsonPost', function() {
      it('should call inboundAddDomainJsonPost successfully', function(done) {
        //uncomment below and update the code to test inboundAddDomainJsonPost
        //instance.inboundAddDomainJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('inboundAddRouteJsonPost', function() {
      it('should call inboundAddRouteJsonPost successfully', function(done) {
        //uncomment below and update the code to test inboundAddRouteJsonPost
        //instance.inboundAddRouteJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('inboundCheckDomainJsonPost', function() {
      it('should call inboundCheckDomainJsonPost successfully', function(done) {
        //uncomment below and update the code to test inboundCheckDomainJsonPost
        //instance.inboundCheckDomainJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('inboundDeleteDomainJsonPost', function() {
      it('should call inboundDeleteDomainJsonPost successfully', function(done) {
        //uncomment below and update the code to test inboundDeleteDomainJsonPost
        //instance.inboundDeleteDomainJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('inboundDeleteRouteJsonPost', function() {
      it('should call inboundDeleteRouteJsonPost successfully', function(done) {
        //uncomment below and update the code to test inboundDeleteRouteJsonPost
        //instance.inboundDeleteRouteJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('inboundDomainsJsonPost', function() {
      it('should call inboundDomainsJsonPost successfully', function(done) {
        //uncomment below and update the code to test inboundDomainsJsonPost
        //instance.inboundDomainsJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('inboundRoutesJsonPost', function() {
      it('should call inboundRoutesJsonPost successfully', function(done) {
        //uncomment below and update the code to test inboundRoutesJsonPost
        //instance.inboundRoutesJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('inboundSendRawJsonPost', function() {
      it('should call inboundSendRawJsonPost successfully', function(done) {
        //uncomment below and update the code to test inboundSendRawJsonPost
        //instance.inboundSendRawJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('inboundUpdateRouteJsonPost', function() {
      it('should call inboundUpdateRouteJsonPost successfully', function(done) {
        //uncomment below and update the code to test inboundUpdateRouteJsonPost
        //instance.inboundUpdateRouteJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipsCancelWarmupJsonPost', function() {
      it('should call ipsCancelWarmupJsonPost successfully', function(done) {
        //uncomment below and update the code to test ipsCancelWarmupJsonPost
        //instance.ipsCancelWarmupJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipsCheckCustomDnsJsonPost', function() {
      it('should call ipsCheckCustomDnsJsonPost successfully', function(done) {
        //uncomment below and update the code to test ipsCheckCustomDnsJsonPost
        //instance.ipsCheckCustomDnsJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipsCreatePoolJsonPost', function() {
      it('should call ipsCreatePoolJsonPost successfully', function(done) {
        //uncomment below and update the code to test ipsCreatePoolJsonPost
        //instance.ipsCreatePoolJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipsDeleteJsonPost', function() {
      it('should call ipsDeleteJsonPost successfully', function(done) {
        //uncomment below and update the code to test ipsDeleteJsonPost
        //instance.ipsDeleteJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipsDeletePoolJsonPost', function() {
      it('should call ipsDeletePoolJsonPost successfully', function(done) {
        //uncomment below and update the code to test ipsDeletePoolJsonPost
        //instance.ipsDeletePoolJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipsInfoJsonPost', function() {
      it('should call ipsInfoJsonPost successfully', function(done) {
        //uncomment below and update the code to test ipsInfoJsonPost
        //instance.ipsInfoJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipsListJsonPost', function() {
      it('should call ipsListJsonPost successfully', function(done) {
        //uncomment below and update the code to test ipsListJsonPost
        //instance.ipsListJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipsListPoolsJsonPost', function() {
      it('should call ipsListPoolsJsonPost successfully', function(done) {
        //uncomment below and update the code to test ipsListPoolsJsonPost
        //instance.ipsListPoolsJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipsPoolInfoJsonPost', function() {
      it('should call ipsPoolInfoJsonPost successfully', function(done) {
        //uncomment below and update the code to test ipsPoolInfoJsonPost
        //instance.ipsPoolInfoJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipsProvisionJsonPost', function() {
      it('should call ipsProvisionJsonPost successfully', function(done) {
        //uncomment below and update the code to test ipsProvisionJsonPost
        //instance.ipsProvisionJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipsSetCustomDnsJsonPost', function() {
      it('should call ipsSetCustomDnsJsonPost successfully', function(done) {
        //uncomment below and update the code to test ipsSetCustomDnsJsonPost
        //instance.ipsSetCustomDnsJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipsSetPoolJsonPost', function() {
      it('should call ipsSetPoolJsonPost successfully', function(done) {
        //uncomment below and update the code to test ipsSetPoolJsonPost
        //instance.ipsSetPoolJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ipsStartWarmupJsonPost', function() {
      it('should call ipsStartWarmupJsonPost successfully', function(done) {
        //uncomment below and update the code to test ipsStartWarmupJsonPost
        //instance.ipsStartWarmupJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('messagesCancelScheduledJsonPost', function() {
      it('should call messagesCancelScheduledJsonPost successfully', function(done) {
        //uncomment below and update the code to test messagesCancelScheduledJsonPost
        //instance.messagesCancelScheduledJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('messagesContentJsonPost', function() {
      it('should call messagesContentJsonPost successfully', function(done) {
        //uncomment below and update the code to test messagesContentJsonPost
        //instance.messagesContentJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('messagesInfoJsonPost', function() {
      it('should call messagesInfoJsonPost successfully', function(done) {
        //uncomment below and update the code to test messagesInfoJsonPost
        //instance.messagesInfoJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('messagesListScheduledJsonPost', function() {
      it('should call messagesListScheduledJsonPost successfully', function(done) {
        //uncomment below and update the code to test messagesListScheduledJsonPost
        //instance.messagesListScheduledJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('messagesParseJsonPost', function() {
      it('should call messagesParseJsonPost successfully', function(done) {
        //uncomment below and update the code to test messagesParseJsonPost
        //instance.messagesParseJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('messagesRescheduleJsonPost', function() {
      it('should call messagesRescheduleJsonPost successfully', function(done) {
        //uncomment below and update the code to test messagesRescheduleJsonPost
        //instance.messagesRescheduleJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('messagesSearchJsonPost', function() {
      it('should call messagesSearchJsonPost successfully', function(done) {
        //uncomment below and update the code to test messagesSearchJsonPost
        //instance.messagesSearchJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('messagesSearchTimeSeriesJsonPost', function() {
      it('should call messagesSearchTimeSeriesJsonPost successfully', function(done) {
        //uncomment below and update the code to test messagesSearchTimeSeriesJsonPost
        //instance.messagesSearchTimeSeriesJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('messagesSendJsonPost', function() {
      it('should call messagesSendJsonPost successfully', function(done) {
        //uncomment below and update the code to test messagesSendJsonPost
        //instance.messagesSendJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('messagesSendRawJsonPost', function() {
      it('should call messagesSendRawJsonPost successfully', function(done) {
        //uncomment below and update the code to test messagesSendRawJsonPost
        //instance.messagesSendRawJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('messagesSendTemplateJsonPost', function() {
      it('should call messagesSendTemplateJsonPost successfully', function(done) {
        //uncomment below and update the code to test messagesSendTemplateJsonPost
        //instance.messagesSendTemplateJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataAddJsonPost', function() {
      it('should call metadataAddJsonPost successfully', function(done) {
        //uncomment below and update the code to test metadataAddJsonPost
        //instance.metadataAddJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataDeleteJsonPost', function() {
      it('should call metadataDeleteJsonPost successfully', function(done) {
        //uncomment below and update the code to test metadataDeleteJsonPost
        //instance.metadataDeleteJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataListJsonPost', function() {
      it('should call metadataListJsonPost successfully', function(done) {
        //uncomment below and update the code to test metadataListJsonPost
        //instance.metadataListJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('metadataUpdateJsonPost', function() {
      it('should call metadataUpdateJsonPost successfully', function(done) {
        //uncomment below and update the code to test metadataUpdateJsonPost
        //instance.metadataUpdateJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rejectsAddJsonPost', function() {
      it('should call rejectsAddJsonPost successfully', function(done) {
        //uncomment below and update the code to test rejectsAddJsonPost
        //instance.rejectsAddJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rejectsDeleteJsonPost', function() {
      it('should call rejectsDeleteJsonPost successfully', function(done) {
        //uncomment below and update the code to test rejectsDeleteJsonPost
        //instance.rejectsDeleteJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('rejectsListJsonPost', function() {
      it('should call rejectsListJsonPost successfully', function(done) {
        //uncomment below and update the code to test rejectsListJsonPost
        //instance.rejectsListJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendersAddDomainJsonPost', function() {
      it('should call sendersAddDomainJsonPost successfully', function(done) {
        //uncomment below and update the code to test sendersAddDomainJsonPost
        //instance.sendersAddDomainJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendersCheckDomainJsonPost', function() {
      it('should call sendersCheckDomainJsonPost successfully', function(done) {
        //uncomment below and update the code to test sendersCheckDomainJsonPost
        //instance.sendersCheckDomainJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendersDomainsJsonPost', function() {
      it('should call sendersDomainsJsonPost successfully', function(done) {
        //uncomment below and update the code to test sendersDomainsJsonPost
        //instance.sendersDomainsJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendersInfoJsonPost', function() {
      it('should call sendersInfoJsonPost successfully', function(done) {
        //uncomment below and update the code to test sendersInfoJsonPost
        //instance.sendersInfoJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendersListJsonPost', function() {
      it('should call sendersListJsonPost successfully', function(done) {
        //uncomment below and update the code to test sendersListJsonPost
        //instance.sendersListJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendersTimeSeriesJsonPost', function() {
      it('should call sendersTimeSeriesJsonPost successfully', function(done) {
        //uncomment below and update the code to test sendersTimeSeriesJsonPost
        //instance.sendersTimeSeriesJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('sendersVerifyDomainJsonPost', function() {
      it('should call sendersVerifyDomainJsonPost successfully', function(done) {
        //uncomment below and update the code to test sendersVerifyDomainJsonPost
        //instance.sendersVerifyDomainJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subaccountsAddJsonPost', function() {
      it('should call subaccountsAddJsonPost successfully', function(done) {
        //uncomment below and update the code to test subaccountsAddJsonPost
        //instance.subaccountsAddJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subaccountsDeleteJsonPost', function() {
      it('should call subaccountsDeleteJsonPost successfully', function(done) {
        //uncomment below and update the code to test subaccountsDeleteJsonPost
        //instance.subaccountsDeleteJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subaccountsInfoJsonPost', function() {
      it('should call subaccountsInfoJsonPost successfully', function(done) {
        //uncomment below and update the code to test subaccountsInfoJsonPost
        //instance.subaccountsInfoJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subaccountsListJsonPost', function() {
      it('should call subaccountsListJsonPost successfully', function(done) {
        //uncomment below and update the code to test subaccountsListJsonPost
        //instance.subaccountsListJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subaccountsPauseJsonPost', function() {
      it('should call subaccountsPauseJsonPost successfully', function(done) {
        //uncomment below and update the code to test subaccountsPauseJsonPost
        //instance.subaccountsPauseJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subaccountsResumeJsonPost', function() {
      it('should call subaccountsResumeJsonPost successfully', function(done) {
        //uncomment below and update the code to test subaccountsResumeJsonPost
        //instance.subaccountsResumeJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('subaccountsUpdateJsonPost', function() {
      it('should call subaccountsUpdateJsonPost successfully', function(done) {
        //uncomment below and update the code to test subaccountsUpdateJsonPost
        //instance.subaccountsUpdateJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagsAllTimeSeriesJsonPost', function() {
      it('should call tagsAllTimeSeriesJsonPost successfully', function(done) {
        //uncomment below and update the code to test tagsAllTimeSeriesJsonPost
        //instance.tagsAllTimeSeriesJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagsDeleteJsonPost', function() {
      it('should call tagsDeleteJsonPost successfully', function(done) {
        //uncomment below and update the code to test tagsDeleteJsonPost
        //instance.tagsDeleteJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagsInfoJsonPost', function() {
      it('should call tagsInfoJsonPost successfully', function(done) {
        //uncomment below and update the code to test tagsInfoJsonPost
        //instance.tagsInfoJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagsListJsonPost', function() {
      it('should call tagsListJsonPost successfully', function(done) {
        //uncomment below and update the code to test tagsListJsonPost
        //instance.tagsListJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('tagsTimeSeriesJsonPost', function() {
      it('should call tagsTimeSeriesJsonPost successfully', function(done) {
        //uncomment below and update the code to test tagsTimeSeriesJsonPost
        //instance.tagsTimeSeriesJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templatesAddJsonPost', function() {
      it('should call templatesAddJsonPost successfully', function(done) {
        //uncomment below and update the code to test templatesAddJsonPost
        //instance.templatesAddJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templatesDeleteJsonPost', function() {
      it('should call templatesDeleteJsonPost successfully', function(done) {
        //uncomment below and update the code to test templatesDeleteJsonPost
        //instance.templatesDeleteJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templatesInfoJsonPost', function() {
      it('should call templatesInfoJsonPost successfully', function(done) {
        //uncomment below and update the code to test templatesInfoJsonPost
        //instance.templatesInfoJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templatesListJsonPost', function() {
      it('should call templatesListJsonPost successfully', function(done) {
        //uncomment below and update the code to test templatesListJsonPost
        //instance.templatesListJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templatesPublishJsonPost', function() {
      it('should call templatesPublishJsonPost successfully', function(done) {
        //uncomment below and update the code to test templatesPublishJsonPost
        //instance.templatesPublishJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templatesRenderJsonPost', function() {
      it('should call templatesRenderJsonPost successfully', function(done) {
        //uncomment below and update the code to test templatesRenderJsonPost
        //instance.templatesRenderJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templatesTimeSeriesJsonPost', function() {
      it('should call templatesTimeSeriesJsonPost successfully', function(done) {
        //uncomment below and update the code to test templatesTimeSeriesJsonPost
        //instance.templatesTimeSeriesJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('templatesUpdateJsonPost', function() {
      it('should call templatesUpdateJsonPost successfully', function(done) {
        //uncomment below and update the code to test templatesUpdateJsonPost
        //instance.templatesUpdateJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('urlsAddTrackingDomainJsonPost', function() {
      it('should call urlsAddTrackingDomainJsonPost successfully', function(done) {
        //uncomment below and update the code to test urlsAddTrackingDomainJsonPost
        //instance.urlsAddTrackingDomainJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('urlsCheckTrackingDomainJsonPost', function() {
      it('should call urlsCheckTrackingDomainJsonPost successfully', function(done) {
        //uncomment below and update the code to test urlsCheckTrackingDomainJsonPost
        //instance.urlsCheckTrackingDomainJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('urlsListJsonPost', function() {
      it('should call urlsListJsonPost successfully', function(done) {
        //uncomment below and update the code to test urlsListJsonPost
        //instance.urlsListJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('urlsSearchJsonPost', function() {
      it('should call urlsSearchJsonPost successfully', function(done) {
        //uncomment below and update the code to test urlsSearchJsonPost
        //instance.urlsSearchJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('urlsTimeSeriesJsonPost', function() {
      it('should call urlsTimeSeriesJsonPost successfully', function(done) {
        //uncomment below and update the code to test urlsTimeSeriesJsonPost
        //instance.urlsTimeSeriesJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('urlsTrackingDomainsJsonPost', function() {
      it('should call urlsTrackingDomainsJsonPost successfully', function(done) {
        //uncomment below and update the code to test urlsTrackingDomainsJsonPost
        //instance.urlsTrackingDomainsJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersInfoJsonPost', function() {
      it('should call usersInfoJsonPost successfully', function(done) {
        //uncomment below and update the code to test usersInfoJsonPost
        //instance.usersInfoJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersPing2JsonPost', function() {
      it('should call usersPing2JsonPost successfully', function(done) {
        //uncomment below and update the code to test usersPing2JsonPost
        //instance.usersPing2JsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersPingJsonPost', function() {
      it('should call usersPingJsonPost successfully', function(done) {
        //uncomment below and update the code to test usersPingJsonPost
        //instance.usersPingJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersSendersJsonPost', function() {
      it('should call usersSendersJsonPost successfully', function(done) {
        //uncomment below and update the code to test usersSendersJsonPost
        //instance.usersSendersJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('webhooksAddJsonPost', function() {
      it('should call webhooksAddJsonPost successfully', function(done) {
        //uncomment below and update the code to test webhooksAddJsonPost
        //instance.webhooksAddJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('webhooksDeleteJsonPost', function() {
      it('should call webhooksDeleteJsonPost successfully', function(done) {
        //uncomment below and update the code to test webhooksDeleteJsonPost
        //instance.webhooksDeleteJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('webhooksInfoJsonPost', function() {
      it('should call webhooksInfoJsonPost successfully', function(done) {
        //uncomment below and update the code to test webhooksInfoJsonPost
        //instance.webhooksInfoJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('webhooksListJsonPost', function() {
      it('should call webhooksListJsonPost successfully', function(done) {
        //uncomment below and update the code to test webhooksListJsonPost
        //instance.webhooksListJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('webhooksUpdateJsonPost', function() {
      it('should call webhooksUpdateJsonPost successfully', function(done) {
        //uncomment below and update the code to test webhooksUpdateJsonPost
        //instance.webhooksUpdateJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('whitelistsAddJsonPost', function() {
      it('should call whitelistsAddJsonPost successfully', function(done) {
        //uncomment below and update the code to test whitelistsAddJsonPost
        //instance.whitelistsAddJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('whitelistsDeleteJsonPost', function() {
      it('should call whitelistsDeleteJsonPost successfully', function(done) {
        //uncomment below and update the code to test whitelistsDeleteJsonPost
        //instance.whitelistsDeleteJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('whitelistsListJsonPost', function() {
      it('should call whitelistsListJsonPost successfully', function(done) {
        //uncomment below and update the code to test whitelistsListJsonPost
        //instance.whitelistsListJsonPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
