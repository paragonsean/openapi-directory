# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SubaccountInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_quota: int=None, id: str=None, key: str=None, name: str=None, notes: str=None):
        """SubaccountInfo - a model defined in OpenAPI

        :param custom_quota: The custom_quota of this SubaccountInfo.
        :param id: The id of this SubaccountInfo.
        :param key: The key of this SubaccountInfo.
        :param name: The name of this SubaccountInfo.
        :param notes: The notes of this SubaccountInfo.
        """
        self.openapi_types = {
            'custom_quota': int,
            'id': str,
            'key': str,
            'name': str,
            'notes': str
        }

        self.attribute_map = {
            'custom_quota': 'custom_quota',
            'id': 'id',
            'key': 'key',
            'name': 'name',
            'notes': 'notes'
        }

        self._custom_quota = custom_quota
        self._id = id
        self._key = key
        self._name = name
        self._notes = notes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SubaccountInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The subaccount_info of this SubaccountInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_quota(self):
        """Gets the custom_quota of this SubaccountInfo.


        :return: The custom_quota of this SubaccountInfo.
        :rtype: int
        """
        return self._custom_quota

    @custom_quota.setter
    def custom_quota(self, custom_quota):
        """Sets the custom_quota of this SubaccountInfo.


        :param custom_quota: The custom_quota of this SubaccountInfo.
        :type custom_quota: int
        """

        self._custom_quota = custom_quota

    @property
    def id(self):
        """Gets the id of this SubaccountInfo.


        :return: The id of this SubaccountInfo.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SubaccountInfo.


        :param id: The id of this SubaccountInfo.
        :type id: str
        """

        self._id = id

    @property
    def key(self):
        """Gets the key of this SubaccountInfo.


        :return: The key of this SubaccountInfo.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this SubaccountInfo.


        :param key: The key of this SubaccountInfo.
        :type key: str
        """

        self._key = key

    @property
    def name(self):
        """Gets the name of this SubaccountInfo.


        :return: The name of this SubaccountInfo.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SubaccountInfo.


        :param name: The name of this SubaccountInfo.
        :type name: str
        """

        self._name = name

    @property
    def notes(self):
        """Gets the notes of this SubaccountInfo.


        :return: The notes of this SubaccountInfo.
        :rtype: str
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this SubaccountInfo.


        :param notes: The notes of this SubaccountInfo.
        :type notes: str
        """

        self._notes = notes
