# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InboundSendRaw(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, client_address: str=None, helo: str=None, key: str=None, mail_from: str=None, raw_message: str=None, to: List[str]=None):
        """InboundSendRaw - a model defined in OpenAPI

        :param client_address: The client_address of this InboundSendRaw.
        :param helo: The helo of this InboundSendRaw.
        :param key: The key of this InboundSendRaw.
        :param mail_from: The mail_from of this InboundSendRaw.
        :param raw_message: The raw_message of this InboundSendRaw.
        :param to: The to of this InboundSendRaw.
        """
        self.openapi_types = {
            'client_address': str,
            'helo': str,
            'key': str,
            'mail_from': str,
            'raw_message': str,
            'to': List[str]
        }

        self.attribute_map = {
            'client_address': 'client_address',
            'helo': 'helo',
            'key': 'key',
            'mail_from': 'mail_from',
            'raw_message': 'raw_message',
            'to': 'to'
        }

        self._client_address = client_address
        self._helo = helo
        self._key = key
        self._mail_from = mail_from
        self._raw_message = raw_message
        self._to = to

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InboundSendRaw':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The inbound_send-raw of this InboundSendRaw.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def client_address(self):
        """Gets the client_address of this InboundSendRaw.


        :return: The client_address of this InboundSendRaw.
        :rtype: str
        """
        return self._client_address

    @client_address.setter
    def client_address(self, client_address):
        """Sets the client_address of this InboundSendRaw.


        :param client_address: The client_address of this InboundSendRaw.
        :type client_address: str
        """

        self._client_address = client_address

    @property
    def helo(self):
        """Gets the helo of this InboundSendRaw.


        :return: The helo of this InboundSendRaw.
        :rtype: str
        """
        return self._helo

    @helo.setter
    def helo(self, helo):
        """Sets the helo of this InboundSendRaw.


        :param helo: The helo of this InboundSendRaw.
        :type helo: str
        """

        self._helo = helo

    @property
    def key(self):
        """Gets the key of this InboundSendRaw.


        :return: The key of this InboundSendRaw.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this InboundSendRaw.


        :param key: The key of this InboundSendRaw.
        :type key: str
        """

        self._key = key

    @property
    def mail_from(self):
        """Gets the mail_from of this InboundSendRaw.


        :return: The mail_from of this InboundSendRaw.
        :rtype: str
        """
        return self._mail_from

    @mail_from.setter
    def mail_from(self, mail_from):
        """Sets the mail_from of this InboundSendRaw.


        :param mail_from: The mail_from of this InboundSendRaw.
        :type mail_from: str
        """

        self._mail_from = mail_from

    @property
    def raw_message(self):
        """Gets the raw_message of this InboundSendRaw.


        :return: The raw_message of this InboundSendRaw.
        :rtype: str
        """
        return self._raw_message

    @raw_message.setter
    def raw_message(self, raw_message):
        """Sets the raw_message of this InboundSendRaw.


        :param raw_message: The raw_message of this InboundSendRaw.
        :type raw_message: str
        """

        self._raw_message = raw_message

    @property
    def to(self):
        """Gets the to of this InboundSendRaw.


        :return: The to of this InboundSendRaw.
        :rtype: List[str]
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this InboundSendRaw.


        :param to: The to of this InboundSendRaw.
        :type to: List[str]
        """

        self._to = to
