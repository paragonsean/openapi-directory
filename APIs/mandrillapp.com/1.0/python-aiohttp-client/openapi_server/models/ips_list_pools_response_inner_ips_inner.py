# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ip_info_custom_dns import IpInfoCustomDns
from openapi_server.models.ip_info_warmup import IpInfoWarmup
from openapi_server import util


class IpsListPoolsResponseInnerIpsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, custom_dns: IpInfoCustomDns=None, domain: str=None, ip: str=None, pool: str=None, warmup: IpInfoWarmup=None):
        """IpsListPoolsResponseInnerIpsInner - a model defined in OpenAPI

        :param created_at: The created_at of this IpsListPoolsResponseInnerIpsInner.
        :param custom_dns: The custom_dns of this IpsListPoolsResponseInnerIpsInner.
        :param domain: The domain of this IpsListPoolsResponseInnerIpsInner.
        :param ip: The ip of this IpsListPoolsResponseInnerIpsInner.
        :param pool: The pool of this IpsListPoolsResponseInnerIpsInner.
        :param warmup: The warmup of this IpsListPoolsResponseInnerIpsInner.
        """
        self.openapi_types = {
            'created_at': str,
            'custom_dns': IpInfoCustomDns,
            'domain': str,
            'ip': str,
            'pool': str,
            'warmup': IpInfoWarmup
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'custom_dns': 'custom_dns',
            'domain': 'domain',
            'ip': 'ip',
            'pool': 'pool',
            'warmup': 'warmup'
        }

        self._created_at = created_at
        self._custom_dns = custom_dns
        self._domain = domain
        self._ip = ip
        self._pool = pool
        self._warmup = warmup

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IpsListPoolsResponseInnerIpsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ips_list_pools_response_inner_ips_inner of this IpsListPoolsResponseInnerIpsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this IpsListPoolsResponseInnerIpsInner.


        :return: The created_at of this IpsListPoolsResponseInnerIpsInner.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this IpsListPoolsResponseInnerIpsInner.


        :param created_at: The created_at of this IpsListPoolsResponseInnerIpsInner.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def custom_dns(self):
        """Gets the custom_dns of this IpsListPoolsResponseInnerIpsInner.


        :return: The custom_dns of this IpsListPoolsResponseInnerIpsInner.
        :rtype: IpInfoCustomDns
        """
        return self._custom_dns

    @custom_dns.setter
    def custom_dns(self, custom_dns):
        """Sets the custom_dns of this IpsListPoolsResponseInnerIpsInner.


        :param custom_dns: The custom_dns of this IpsListPoolsResponseInnerIpsInner.
        :type custom_dns: IpInfoCustomDns
        """

        self._custom_dns = custom_dns

    @property
    def domain(self):
        """Gets the domain of this IpsListPoolsResponseInnerIpsInner.


        :return: The domain of this IpsListPoolsResponseInnerIpsInner.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this IpsListPoolsResponseInnerIpsInner.


        :param domain: The domain of this IpsListPoolsResponseInnerIpsInner.
        :type domain: str
        """

        self._domain = domain

    @property
    def ip(self):
        """Gets the ip of this IpsListPoolsResponseInnerIpsInner.


        :return: The ip of this IpsListPoolsResponseInnerIpsInner.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this IpsListPoolsResponseInnerIpsInner.


        :param ip: The ip of this IpsListPoolsResponseInnerIpsInner.
        :type ip: str
        """

        self._ip = ip

    @property
    def pool(self):
        """Gets the pool of this IpsListPoolsResponseInnerIpsInner.


        :return: The pool of this IpsListPoolsResponseInnerIpsInner.
        :rtype: str
        """
        return self._pool

    @pool.setter
    def pool(self, pool):
        """Sets the pool of this IpsListPoolsResponseInnerIpsInner.


        :param pool: The pool of this IpsListPoolsResponseInnerIpsInner.
        :type pool: str
        """

        self._pool = pool

    @property
    def warmup(self):
        """Gets the warmup of this IpsListPoolsResponseInnerIpsInner.


        :return: The warmup of this IpsListPoolsResponseInnerIpsInner.
        :rtype: IpInfoWarmup
        """
        return self._warmup

    @warmup.setter
    def warmup(self, warmup):
        """Sets the warmup of this IpsListPoolsResponseInnerIpsInner.


        :param warmup: The warmup of this IpsListPoolsResponseInnerIpsInner.
        :type warmup: IpInfoWarmup
        """

        self._warmup = warmup
