# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class MetadataListResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, name: str=None, state: str=None, view_template: str=None):
        """MetadataListResponseInner - a model defined in OpenAPI

        :param name: The name of this MetadataListResponseInner.
        :param state: The state of this MetadataListResponseInner.
        :param view_template: The view_template of this MetadataListResponseInner.
        """
        self.openapi_types = {
            'name': str,
            'state': str,
            'view_template': str
        }

        self.attribute_map = {
            'name': 'name',
            'state': 'state',
            'view_template': 'view_template'
        }

        self._name = name
        self._state = state
        self._view_template = view_template

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MetadataListResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The metadata_list_response_inner of this MetadataListResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def name(self):
        """Gets the name of this MetadataListResponseInner.


        :return: The name of this MetadataListResponseInner.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this MetadataListResponseInner.


        :param name: The name of this MetadataListResponseInner.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this MetadataListResponseInner.


        :return: The state of this MetadataListResponseInner.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this MetadataListResponseInner.


        :param state: The state of this MetadataListResponseInner.
        :type state: str
        """

        self._state = state

    @property
    def view_template(self):
        """Gets the view_template of this MetadataListResponseInner.


        :return: The view_template of this MetadataListResponseInner.
        :rtype: str
        """
        return self._view_template

    @view_template.setter
    def view_template(self, view_template):
        """Sets the view_template of this MetadataListResponseInner.


        :param view_template: The view_template of this MetadataListResponseInner.
        :type view_template: str
        """

        self._view_template = view_template
