# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExportsInfoResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, finished_at: str=None, id: str=None, result_url: str=None, state: str=None, type: str=None):
        """ExportsInfoResponse - a model defined in OpenAPI

        :param created_at: The created_at of this ExportsInfoResponse.
        :param finished_at: The finished_at of this ExportsInfoResponse.
        :param id: The id of this ExportsInfoResponse.
        :param result_url: The result_url of this ExportsInfoResponse.
        :param state: The state of this ExportsInfoResponse.
        :param type: The type of this ExportsInfoResponse.
        """
        self.openapi_types = {
            'created_at': str,
            'finished_at': str,
            'id': str,
            'result_url': str,
            'state': str,
            'type': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'finished_at': 'finished_at',
            'id': 'id',
            'result_url': 'result_url',
            'state': 'state',
            'type': 'type'
        }

        self._created_at = created_at
        self._finished_at = finished_at
        self._id = id
        self._result_url = result_url
        self._state = state
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExportsInfoResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The exports_info-response of this ExportsInfoResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this ExportsInfoResponse.


        :return: The created_at of this ExportsInfoResponse.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this ExportsInfoResponse.


        :param created_at: The created_at of this ExportsInfoResponse.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def finished_at(self):
        """Gets the finished_at of this ExportsInfoResponse.


        :return: The finished_at of this ExportsInfoResponse.
        :rtype: str
        """
        return self._finished_at

    @finished_at.setter
    def finished_at(self, finished_at):
        """Sets the finished_at of this ExportsInfoResponse.


        :param finished_at: The finished_at of this ExportsInfoResponse.
        :type finished_at: str
        """

        self._finished_at = finished_at

    @property
    def id(self):
        """Gets the id of this ExportsInfoResponse.


        :return: The id of this ExportsInfoResponse.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ExportsInfoResponse.


        :param id: The id of this ExportsInfoResponse.
        :type id: str
        """

        self._id = id

    @property
    def result_url(self):
        """Gets the result_url of this ExportsInfoResponse.


        :return: The result_url of this ExportsInfoResponse.
        :rtype: str
        """
        return self._result_url

    @result_url.setter
    def result_url(self, result_url):
        """Sets the result_url of this ExportsInfoResponse.


        :param result_url: The result_url of this ExportsInfoResponse.
        :type result_url: str
        """

        self._result_url = result_url

    @property
    def state(self):
        """Gets the state of this ExportsInfoResponse.


        :return: The state of this ExportsInfoResponse.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this ExportsInfoResponse.


        :param state: The state of this ExportsInfoResponse.
        :type state: str
        """

        self._state = state

    @property
    def type(self):
        """Gets the type of this ExportsInfoResponse.


        :return: The type of this ExportsInfoResponse.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ExportsInfoResponse.


        :param type: The type of this ExportsInfoResponse.
        :type type: str
        """

        self._type = type
