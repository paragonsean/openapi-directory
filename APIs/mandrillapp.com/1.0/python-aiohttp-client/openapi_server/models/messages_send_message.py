# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.messages_content_response_attachments_inner import MessagesContentResponseAttachmentsInner
from openapi_server.models.messages_content_response_headers import MessagesContentResponseHeaders
from openapi_server.models.messages_send_message_global_merge_vars_inner import MessagesSendMessageGlobalMergeVarsInner
from openapi_server.models.messages_send_message_merge_vars_inner import MessagesSendMessageMergeVarsInner
from openapi_server.models.messages_send_message_metadata import MessagesSendMessageMetadata
from openapi_server.models.messages_send_message_recipient_metadata_inner import MessagesSendMessageRecipientMetadataInner
from openapi_server.models.messages_send_message_to_inner import MessagesSendMessageToInner
from openapi_server import util


class MessagesSendMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attachments: List[MessagesContentResponseAttachmentsInner]=None, bcc_address: str=None, from_email: str=None, from_name: str=None, global_merge_vars: List[MessagesSendMessageGlobalMergeVarsInner]=None, google_analytics_campaign: str=None, google_analytics_domains: List[str]=None, headers: MessagesContentResponseHeaders=None, html: str=None, images: List[MessagesContentResponseAttachmentsInner]=None, important: bool=None, merge: bool=None, merge_vars: List[MessagesSendMessageMergeVarsInner]=None, metadata: MessagesSendMessageMetadata=None, recipient_metadata: List[MessagesSendMessageRecipientMetadataInner]=None, subaccount: str=None, subject: str=None, tags: List[str]=None, text: str=None, to: List[MessagesSendMessageToInner]=None):
        """MessagesSendMessage - a model defined in OpenAPI

        :param attachments: The attachments of this MessagesSendMessage.
        :param bcc_address: The bcc_address of this MessagesSendMessage.
        :param from_email: The from_email of this MessagesSendMessage.
        :param from_name: The from_name of this MessagesSendMessage.
        :param global_merge_vars: The global_merge_vars of this MessagesSendMessage.
        :param google_analytics_campaign: The google_analytics_campaign of this MessagesSendMessage.
        :param google_analytics_domains: The google_analytics_domains of this MessagesSendMessage.
        :param headers: The headers of this MessagesSendMessage.
        :param html: The html of this MessagesSendMessage.
        :param images: The images of this MessagesSendMessage.
        :param important: The important of this MessagesSendMessage.
        :param merge: The merge of this MessagesSendMessage.
        :param merge_vars: The merge_vars of this MessagesSendMessage.
        :param metadata: The metadata of this MessagesSendMessage.
        :param recipient_metadata: The recipient_metadata of this MessagesSendMessage.
        :param subaccount: The subaccount of this MessagesSendMessage.
        :param subject: The subject of this MessagesSendMessage.
        :param tags: The tags of this MessagesSendMessage.
        :param text: The text of this MessagesSendMessage.
        :param to: The to of this MessagesSendMessage.
        """
        self.openapi_types = {
            'attachments': List[MessagesContentResponseAttachmentsInner],
            'bcc_address': str,
            'from_email': str,
            'from_name': str,
            'global_merge_vars': List[MessagesSendMessageGlobalMergeVarsInner],
            'google_analytics_campaign': str,
            'google_analytics_domains': List[str],
            'headers': MessagesContentResponseHeaders,
            'html': str,
            'images': List[MessagesContentResponseAttachmentsInner],
            'important': bool,
            'merge': bool,
            'merge_vars': List[MessagesSendMessageMergeVarsInner],
            'metadata': MessagesSendMessageMetadata,
            'recipient_metadata': List[MessagesSendMessageRecipientMetadataInner],
            'subaccount': str,
            'subject': str,
            'tags': List[str],
            'text': str,
            'to': List[MessagesSendMessageToInner]
        }

        self.attribute_map = {
            'attachments': 'attachments',
            'bcc_address': 'bcc_address',
            'from_email': 'from_email',
            'from_name': 'from_name',
            'global_merge_vars': 'global_merge_vars',
            'google_analytics_campaign': 'google_analytics_campaign',
            'google_analytics_domains': 'google_analytics_domains',
            'headers': 'headers',
            'html': 'html',
            'images': 'images',
            'important': 'important',
            'merge': 'merge',
            'merge_vars': 'merge_vars',
            'metadata': 'metadata',
            'recipient_metadata': 'recipient_metadata',
            'subaccount': 'subaccount',
            'subject': 'subject',
            'tags': 'tags',
            'text': 'text',
            'to': 'to'
        }

        self._attachments = attachments
        self._bcc_address = bcc_address
        self._from_email = from_email
        self._from_name = from_name
        self._global_merge_vars = global_merge_vars
        self._google_analytics_campaign = google_analytics_campaign
        self._google_analytics_domains = google_analytics_domains
        self._headers = headers
        self._html = html
        self._images = images
        self._important = important
        self._merge = merge
        self._merge_vars = merge_vars
        self._metadata = metadata
        self._recipient_metadata = recipient_metadata
        self._subaccount = subaccount
        self._subject = subject
        self._tags = tags
        self._text = text
        self._to = to

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MessagesSendMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The messages_send_message of this MessagesSendMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attachments(self):
        """Gets the attachments of this MessagesSendMessage.


        :return: The attachments of this MessagesSendMessage.
        :rtype: List[MessagesContentResponseAttachmentsInner]
        """
        return self._attachments

    @attachments.setter
    def attachments(self, attachments):
        """Sets the attachments of this MessagesSendMessage.


        :param attachments: The attachments of this MessagesSendMessage.
        :type attachments: List[MessagesContentResponseAttachmentsInner]
        """

        self._attachments = attachments

    @property
    def bcc_address(self):
        """Gets the bcc_address of this MessagesSendMessage.


        :return: The bcc_address of this MessagesSendMessage.
        :rtype: str
        """
        return self._bcc_address

    @bcc_address.setter
    def bcc_address(self, bcc_address):
        """Sets the bcc_address of this MessagesSendMessage.


        :param bcc_address: The bcc_address of this MessagesSendMessage.
        :type bcc_address: str
        """

        self._bcc_address = bcc_address

    @property
    def from_email(self):
        """Gets the from_email of this MessagesSendMessage.


        :return: The from_email of this MessagesSendMessage.
        :rtype: str
        """
        return self._from_email

    @from_email.setter
    def from_email(self, from_email):
        """Sets the from_email of this MessagesSendMessage.


        :param from_email: The from_email of this MessagesSendMessage.
        :type from_email: str
        """

        self._from_email = from_email

    @property
    def from_name(self):
        """Gets the from_name of this MessagesSendMessage.


        :return: The from_name of this MessagesSendMessage.
        :rtype: str
        """
        return self._from_name

    @from_name.setter
    def from_name(self, from_name):
        """Sets the from_name of this MessagesSendMessage.


        :param from_name: The from_name of this MessagesSendMessage.
        :type from_name: str
        """

        self._from_name = from_name

    @property
    def global_merge_vars(self):
        """Gets the global_merge_vars of this MessagesSendMessage.


        :return: The global_merge_vars of this MessagesSendMessage.
        :rtype: List[MessagesSendMessageGlobalMergeVarsInner]
        """
        return self._global_merge_vars

    @global_merge_vars.setter
    def global_merge_vars(self, global_merge_vars):
        """Sets the global_merge_vars of this MessagesSendMessage.


        :param global_merge_vars: The global_merge_vars of this MessagesSendMessage.
        :type global_merge_vars: List[MessagesSendMessageGlobalMergeVarsInner]
        """

        self._global_merge_vars = global_merge_vars

    @property
    def google_analytics_campaign(self):
        """Gets the google_analytics_campaign of this MessagesSendMessage.


        :return: The google_analytics_campaign of this MessagesSendMessage.
        :rtype: str
        """
        return self._google_analytics_campaign

    @google_analytics_campaign.setter
    def google_analytics_campaign(self, google_analytics_campaign):
        """Sets the google_analytics_campaign of this MessagesSendMessage.


        :param google_analytics_campaign: The google_analytics_campaign of this MessagesSendMessage.
        :type google_analytics_campaign: str
        """

        self._google_analytics_campaign = google_analytics_campaign

    @property
    def google_analytics_domains(self):
        """Gets the google_analytics_domains of this MessagesSendMessage.


        :return: The google_analytics_domains of this MessagesSendMessage.
        :rtype: List[str]
        """
        return self._google_analytics_domains

    @google_analytics_domains.setter
    def google_analytics_domains(self, google_analytics_domains):
        """Sets the google_analytics_domains of this MessagesSendMessage.


        :param google_analytics_domains: The google_analytics_domains of this MessagesSendMessage.
        :type google_analytics_domains: List[str]
        """

        self._google_analytics_domains = google_analytics_domains

    @property
    def headers(self):
        """Gets the headers of this MessagesSendMessage.


        :return: The headers of this MessagesSendMessage.
        :rtype: MessagesContentResponseHeaders
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this MessagesSendMessage.


        :param headers: The headers of this MessagesSendMessage.
        :type headers: MessagesContentResponseHeaders
        """

        self._headers = headers

    @property
    def html(self):
        """Gets the html of this MessagesSendMessage.


        :return: The html of this MessagesSendMessage.
        :rtype: str
        """
        return self._html

    @html.setter
    def html(self, html):
        """Sets the html of this MessagesSendMessage.


        :param html: The html of this MessagesSendMessage.
        :type html: str
        """

        self._html = html

    @property
    def images(self):
        """Gets the images of this MessagesSendMessage.


        :return: The images of this MessagesSendMessage.
        :rtype: List[MessagesContentResponseAttachmentsInner]
        """
        return self._images

    @images.setter
    def images(self, images):
        """Sets the images of this MessagesSendMessage.


        :param images: The images of this MessagesSendMessage.
        :type images: List[MessagesContentResponseAttachmentsInner]
        """

        self._images = images

    @property
    def important(self):
        """Gets the important of this MessagesSendMessage.


        :return: The important of this MessagesSendMessage.
        :rtype: bool
        """
        return self._important

    @important.setter
    def important(self, important):
        """Sets the important of this MessagesSendMessage.


        :param important: The important of this MessagesSendMessage.
        :type important: bool
        """

        self._important = important

    @property
    def merge(self):
        """Gets the merge of this MessagesSendMessage.


        :return: The merge of this MessagesSendMessage.
        :rtype: bool
        """
        return self._merge

    @merge.setter
    def merge(self, merge):
        """Sets the merge of this MessagesSendMessage.


        :param merge: The merge of this MessagesSendMessage.
        :type merge: bool
        """

        self._merge = merge

    @property
    def merge_vars(self):
        """Gets the merge_vars of this MessagesSendMessage.


        :return: The merge_vars of this MessagesSendMessage.
        :rtype: List[MessagesSendMessageMergeVarsInner]
        """
        return self._merge_vars

    @merge_vars.setter
    def merge_vars(self, merge_vars):
        """Sets the merge_vars of this MessagesSendMessage.


        :param merge_vars: The merge_vars of this MessagesSendMessage.
        :type merge_vars: List[MessagesSendMessageMergeVarsInner]
        """

        self._merge_vars = merge_vars

    @property
    def metadata(self):
        """Gets the metadata of this MessagesSendMessage.


        :return: The metadata of this MessagesSendMessage.
        :rtype: MessagesSendMessageMetadata
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this MessagesSendMessage.


        :param metadata: The metadata of this MessagesSendMessage.
        :type metadata: MessagesSendMessageMetadata
        """

        self._metadata = metadata

    @property
    def recipient_metadata(self):
        """Gets the recipient_metadata of this MessagesSendMessage.


        :return: The recipient_metadata of this MessagesSendMessage.
        :rtype: List[MessagesSendMessageRecipientMetadataInner]
        """
        return self._recipient_metadata

    @recipient_metadata.setter
    def recipient_metadata(self, recipient_metadata):
        """Sets the recipient_metadata of this MessagesSendMessage.


        :param recipient_metadata: The recipient_metadata of this MessagesSendMessage.
        :type recipient_metadata: List[MessagesSendMessageRecipientMetadataInner]
        """

        self._recipient_metadata = recipient_metadata

    @property
    def subaccount(self):
        """Gets the subaccount of this MessagesSendMessage.


        :return: The subaccount of this MessagesSendMessage.
        :rtype: str
        """
        return self._subaccount

    @subaccount.setter
    def subaccount(self, subaccount):
        """Sets the subaccount of this MessagesSendMessage.


        :param subaccount: The subaccount of this MessagesSendMessage.
        :type subaccount: str
        """

        self._subaccount = subaccount

    @property
    def subject(self):
        """Gets the subject of this MessagesSendMessage.


        :return: The subject of this MessagesSendMessage.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this MessagesSendMessage.


        :param subject: The subject of this MessagesSendMessage.
        :type subject: str
        """

        self._subject = subject

    @property
    def tags(self):
        """Gets the tags of this MessagesSendMessage.


        :return: The tags of this MessagesSendMessage.
        :rtype: List[str]
        """
        return self._tags

    @tags.setter
    def tags(self, tags):
        """Sets the tags of this MessagesSendMessage.


        :param tags: The tags of this MessagesSendMessage.
        :type tags: List[str]
        """

        self._tags = tags

    @property
    def text(self):
        """Gets the text of this MessagesSendMessage.


        :return: The text of this MessagesSendMessage.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this MessagesSendMessage.


        :param text: The text of this MessagesSendMessage.
        :type text: str
        """

        self._text = text

    @property
    def to(self):
        """Gets the to of this MessagesSendMessage.


        :return: The to of this MessagesSendMessage.
        :rtype: List[MessagesSendMessageToInner]
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this MessagesSendMessage.


        :param to: The to of this MessagesSendMessage.
        :type to: List[MessagesSendMessageToInner]
        """

        self._to = to
