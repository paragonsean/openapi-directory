# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NotifyEmail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key: str=None, notify_email: str=None):
        """NotifyEmail - a model defined in OpenAPI

        :param key: The key of this NotifyEmail.
        :param notify_email: The notify_email of this NotifyEmail.
        """
        self.openapi_types = {
            'key': str,
            'notify_email': str
        }

        self.attribute_map = {
            'key': 'key',
            'notify_email': 'notify_email'
        }

        self._key = key
        self._notify_email = notify_email

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NotifyEmail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The notify_email of this NotifyEmail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self):
        """Gets the key of this NotifyEmail.


        :return: The key of this NotifyEmail.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this NotifyEmail.


        :param key: The key of this NotifyEmail.
        :type key: str
        """

        self._key = key

    @property
    def notify_email(self):
        """Gets the notify_email of this NotifyEmail.


        :return: The notify_email of this NotifyEmail.
        :rtype: str
        """
        return self._notify_email

    @notify_email.setter
    def notify_email(self, notify_email):
        """Sets the notify_email of this NotifyEmail.


        :param notify_email: The notify_email of this NotifyEmail.
        :type notify_email: str
        """

        self._notify_email = notify_email
