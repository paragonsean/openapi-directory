# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class InboundInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, domain: str=None, valid_mx: bool=None):
        """InboundInfo - a model defined in OpenAPI

        :param created_at: The created_at of this InboundInfo.
        :param domain: The domain of this InboundInfo.
        :param valid_mx: The valid_mx of this InboundInfo.
        """
        self.openapi_types = {
            'created_at': str,
            'domain': str,
            'valid_mx': bool
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'domain': 'domain',
            'valid_mx': 'valid_mx'
        }

        self._created_at = created_at
        self._domain = domain
        self._valid_mx = valid_mx

    @classmethod
    def from_dict(cls, dikt: dict) -> 'InboundInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The inbound_info of this InboundInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this InboundInfo.


        :return: The created_at of this InboundInfo.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this InboundInfo.


        :param created_at: The created_at of this InboundInfo.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def domain(self):
        """Gets the domain of this InboundInfo.


        :return: The domain of this InboundInfo.
        :rtype: str
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this InboundInfo.


        :param domain: The domain of this InboundInfo.
        :type domain: str
        """

        self._domain = domain

    @property
    def valid_mx(self):
        """Gets the valid_mx of this InboundInfo.


        :return: The valid_mx of this InboundInfo.
        :rtype: bool
        """
        return self._valid_mx

    @valid_mx.setter
    def valid_mx(self, valid_mx):
        """Sets the valid_mx of this InboundInfo.


        :param valid_mx: The valid_mx of this InboundInfo.
        :type valid_mx: bool
        """

        self._valid_mx = valid_mx
