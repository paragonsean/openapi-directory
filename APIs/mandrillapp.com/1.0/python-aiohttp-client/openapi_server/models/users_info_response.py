# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.users_info_response_stats import UsersInfoResponseStats
from openapi_server import util


class UsersInfoResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, backlog: int=None, created_at: str=None, hourly_quota: int=None, public_id: str=None, reputation: int=None, stats: UsersInfoResponseStats=None, username: str=None):
        """UsersInfoResponse - a model defined in OpenAPI

        :param backlog: The backlog of this UsersInfoResponse.
        :param created_at: The created_at of this UsersInfoResponse.
        :param hourly_quota: The hourly_quota of this UsersInfoResponse.
        :param public_id: The public_id of this UsersInfoResponse.
        :param reputation: The reputation of this UsersInfoResponse.
        :param stats: The stats of this UsersInfoResponse.
        :param username: The username of this UsersInfoResponse.
        """
        self.openapi_types = {
            'backlog': int,
            'created_at': str,
            'hourly_quota': int,
            'public_id': str,
            'reputation': int,
            'stats': UsersInfoResponseStats,
            'username': str
        }

        self.attribute_map = {
            'backlog': 'backlog',
            'created_at': 'created_at',
            'hourly_quota': 'hourly_quota',
            'public_id': 'public_id',
            'reputation': 'reputation',
            'stats': 'stats',
            'username': 'username'
        }

        self._backlog = backlog
        self._created_at = created_at
        self._hourly_quota = hourly_quota
        self._public_id = public_id
        self._reputation = reputation
        self._stats = stats
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UsersInfoResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The users_info-response of this UsersInfoResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def backlog(self):
        """Gets the backlog of this UsersInfoResponse.


        :return: The backlog of this UsersInfoResponse.
        :rtype: int
        """
        return self._backlog

    @backlog.setter
    def backlog(self, backlog):
        """Sets the backlog of this UsersInfoResponse.


        :param backlog: The backlog of this UsersInfoResponse.
        :type backlog: int
        """

        self._backlog = backlog

    @property
    def created_at(self):
        """Gets the created_at of this UsersInfoResponse.


        :return: The created_at of this UsersInfoResponse.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this UsersInfoResponse.


        :param created_at: The created_at of this UsersInfoResponse.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def hourly_quota(self):
        """Gets the hourly_quota of this UsersInfoResponse.


        :return: The hourly_quota of this UsersInfoResponse.
        :rtype: int
        """
        return self._hourly_quota

    @hourly_quota.setter
    def hourly_quota(self, hourly_quota):
        """Sets the hourly_quota of this UsersInfoResponse.


        :param hourly_quota: The hourly_quota of this UsersInfoResponse.
        :type hourly_quota: int
        """

        self._hourly_quota = hourly_quota

    @property
    def public_id(self):
        """Gets the public_id of this UsersInfoResponse.


        :return: The public_id of this UsersInfoResponse.
        :rtype: str
        """
        return self._public_id

    @public_id.setter
    def public_id(self, public_id):
        """Sets the public_id of this UsersInfoResponse.


        :param public_id: The public_id of this UsersInfoResponse.
        :type public_id: str
        """

        self._public_id = public_id

    @property
    def reputation(self):
        """Gets the reputation of this UsersInfoResponse.


        :return: The reputation of this UsersInfoResponse.
        :rtype: int
        """
        return self._reputation

    @reputation.setter
    def reputation(self, reputation):
        """Sets the reputation of this UsersInfoResponse.


        :param reputation: The reputation of this UsersInfoResponse.
        :type reputation: int
        """

        self._reputation = reputation

    @property
    def stats(self):
        """Gets the stats of this UsersInfoResponse.


        :return: The stats of this UsersInfoResponse.
        :rtype: UsersInfoResponseStats
        """
        return self._stats

    @stats.setter
    def stats(self, stats):
        """Sets the stats of this UsersInfoResponse.


        :param stats: The stats of this UsersInfoResponse.
        :type stats: UsersInfoResponseStats
        """

        self._stats = stats

    @property
    def username(self):
        """Gets the username of this UsersInfoResponse.


        :return: The username of this UsersInfoResponse.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this UsersInfoResponse.


        :param username: The username of this UsersInfoResponse.
        :type username: str
        """

        self._username = username
