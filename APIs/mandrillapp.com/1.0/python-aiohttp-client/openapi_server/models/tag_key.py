# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TagKey(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, key: str=None, tag: str=None):
        """TagKey - a model defined in OpenAPI

        :param key: The key of this TagKey.
        :param tag: The tag of this TagKey.
        """
        self.openapi_types = {
            'key': str,
            'tag': str
        }

        self.attribute_map = {
            'key': 'key',
            'tag': 'tag'
        }

        self._key = key
        self._tag = tag

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TagKey':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The tag_key of this TagKey.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def key(self):
        """Gets the key of this TagKey.


        :return: The key of this TagKey.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this TagKey.


        :param key: The key of this TagKey.
        :type key: str
        """

        self._key = key

    @property
    def tag(self):
        """Gets the tag of this TagKey.


        :return: The tag of this TagKey.
        :rtype: str
        """
        return self._tag

    @tag.setter
    def tag(self, tag):
        """Sets the tag of this TagKey.


        :param tag: The tag of this TagKey.
        :type tag: str
        """

        self._tag = tag
