# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SendersInfoResponseStatsLast30Days(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, clicks: int=None, complaints: int=None, hard_bounces: int=None, opens: int=None, rejects: int=None, sent: int=None, soft_bounces: int=None, unique_clicks: int=None, unique_opens: int=None, unsubs: int=None):
        """SendersInfoResponseStatsLast30Days - a model defined in OpenAPI

        :param clicks: The clicks of this SendersInfoResponseStatsLast30Days.
        :param complaints: The complaints of this SendersInfoResponseStatsLast30Days.
        :param hard_bounces: The hard_bounces of this SendersInfoResponseStatsLast30Days.
        :param opens: The opens of this SendersInfoResponseStatsLast30Days.
        :param rejects: The rejects of this SendersInfoResponseStatsLast30Days.
        :param sent: The sent of this SendersInfoResponseStatsLast30Days.
        :param soft_bounces: The soft_bounces of this SendersInfoResponseStatsLast30Days.
        :param unique_clicks: The unique_clicks of this SendersInfoResponseStatsLast30Days.
        :param unique_opens: The unique_opens of this SendersInfoResponseStatsLast30Days.
        :param unsubs: The unsubs of this SendersInfoResponseStatsLast30Days.
        """
        self.openapi_types = {
            'clicks': int,
            'complaints': int,
            'hard_bounces': int,
            'opens': int,
            'rejects': int,
            'sent': int,
            'soft_bounces': int,
            'unique_clicks': int,
            'unique_opens': int,
            'unsubs': int
        }

        self.attribute_map = {
            'clicks': 'clicks',
            'complaints': 'complaints',
            'hard_bounces': 'hard_bounces',
            'opens': 'opens',
            'rejects': 'rejects',
            'sent': 'sent',
            'soft_bounces': 'soft_bounces',
            'unique_clicks': 'unique_clicks',
            'unique_opens': 'unique_opens',
            'unsubs': 'unsubs'
        }

        self._clicks = clicks
        self._complaints = complaints
        self._hard_bounces = hard_bounces
        self._opens = opens
        self._rejects = rejects
        self._sent = sent
        self._soft_bounces = soft_bounces
        self._unique_clicks = unique_clicks
        self._unique_opens = unique_opens
        self._unsubs = unsubs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SendersInfoResponseStatsLast30Days':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The senders_info_response_stats_last_30_days of this SendersInfoResponseStatsLast30Days.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def clicks(self):
        """Gets the clicks of this SendersInfoResponseStatsLast30Days.


        :return: The clicks of this SendersInfoResponseStatsLast30Days.
        :rtype: int
        """
        return self._clicks

    @clicks.setter
    def clicks(self, clicks):
        """Sets the clicks of this SendersInfoResponseStatsLast30Days.


        :param clicks: The clicks of this SendersInfoResponseStatsLast30Days.
        :type clicks: int
        """

        self._clicks = clicks

    @property
    def complaints(self):
        """Gets the complaints of this SendersInfoResponseStatsLast30Days.


        :return: The complaints of this SendersInfoResponseStatsLast30Days.
        :rtype: int
        """
        return self._complaints

    @complaints.setter
    def complaints(self, complaints):
        """Sets the complaints of this SendersInfoResponseStatsLast30Days.


        :param complaints: The complaints of this SendersInfoResponseStatsLast30Days.
        :type complaints: int
        """

        self._complaints = complaints

    @property
    def hard_bounces(self):
        """Gets the hard_bounces of this SendersInfoResponseStatsLast30Days.


        :return: The hard_bounces of this SendersInfoResponseStatsLast30Days.
        :rtype: int
        """
        return self._hard_bounces

    @hard_bounces.setter
    def hard_bounces(self, hard_bounces):
        """Sets the hard_bounces of this SendersInfoResponseStatsLast30Days.


        :param hard_bounces: The hard_bounces of this SendersInfoResponseStatsLast30Days.
        :type hard_bounces: int
        """

        self._hard_bounces = hard_bounces

    @property
    def opens(self):
        """Gets the opens of this SendersInfoResponseStatsLast30Days.


        :return: The opens of this SendersInfoResponseStatsLast30Days.
        :rtype: int
        """
        return self._opens

    @opens.setter
    def opens(self, opens):
        """Sets the opens of this SendersInfoResponseStatsLast30Days.


        :param opens: The opens of this SendersInfoResponseStatsLast30Days.
        :type opens: int
        """

        self._opens = opens

    @property
    def rejects(self):
        """Gets the rejects of this SendersInfoResponseStatsLast30Days.


        :return: The rejects of this SendersInfoResponseStatsLast30Days.
        :rtype: int
        """
        return self._rejects

    @rejects.setter
    def rejects(self, rejects):
        """Sets the rejects of this SendersInfoResponseStatsLast30Days.


        :param rejects: The rejects of this SendersInfoResponseStatsLast30Days.
        :type rejects: int
        """

        self._rejects = rejects

    @property
    def sent(self):
        """Gets the sent of this SendersInfoResponseStatsLast30Days.


        :return: The sent of this SendersInfoResponseStatsLast30Days.
        :rtype: int
        """
        return self._sent

    @sent.setter
    def sent(self, sent):
        """Sets the sent of this SendersInfoResponseStatsLast30Days.


        :param sent: The sent of this SendersInfoResponseStatsLast30Days.
        :type sent: int
        """

        self._sent = sent

    @property
    def soft_bounces(self):
        """Gets the soft_bounces of this SendersInfoResponseStatsLast30Days.


        :return: The soft_bounces of this SendersInfoResponseStatsLast30Days.
        :rtype: int
        """
        return self._soft_bounces

    @soft_bounces.setter
    def soft_bounces(self, soft_bounces):
        """Sets the soft_bounces of this SendersInfoResponseStatsLast30Days.


        :param soft_bounces: The soft_bounces of this SendersInfoResponseStatsLast30Days.
        :type soft_bounces: int
        """

        self._soft_bounces = soft_bounces

    @property
    def unique_clicks(self):
        """Gets the unique_clicks of this SendersInfoResponseStatsLast30Days.


        :return: The unique_clicks of this SendersInfoResponseStatsLast30Days.
        :rtype: int
        """
        return self._unique_clicks

    @unique_clicks.setter
    def unique_clicks(self, unique_clicks):
        """Sets the unique_clicks of this SendersInfoResponseStatsLast30Days.


        :param unique_clicks: The unique_clicks of this SendersInfoResponseStatsLast30Days.
        :type unique_clicks: int
        """

        self._unique_clicks = unique_clicks

    @property
    def unique_opens(self):
        """Gets the unique_opens of this SendersInfoResponseStatsLast30Days.


        :return: The unique_opens of this SendersInfoResponseStatsLast30Days.
        :rtype: int
        """
        return self._unique_opens

    @unique_opens.setter
    def unique_opens(self, unique_opens):
        """Sets the unique_opens of this SendersInfoResponseStatsLast30Days.


        :param unique_opens: The unique_opens of this SendersInfoResponseStatsLast30Days.
        :type unique_opens: int
        """

        self._unique_opens = unique_opens

    @property
    def unsubs(self):
        """Gets the unsubs of this SendersInfoResponseStatsLast30Days.


        :return: The unsubs of this SendersInfoResponseStatsLast30Days.
        :rtype: int
        """
        return self._unsubs

    @unsubs.setter
    def unsubs(self, unsubs):
        """Sets the unsubs of this SendersInfoResponseStatsLast30Days.


        :param unsubs: The unsubs of this SendersInfoResponseStatsLast30Days.
        :type unsubs: int
        """

        self._unsubs = unsubs
