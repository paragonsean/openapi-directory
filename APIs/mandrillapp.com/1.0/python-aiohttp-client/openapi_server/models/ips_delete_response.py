# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IpsDeleteResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deleted: bool=None, ip: str=None):
        """IpsDeleteResponse - a model defined in OpenAPI

        :param deleted: The deleted of this IpsDeleteResponse.
        :param ip: The ip of this IpsDeleteResponse.
        """
        self.openapi_types = {
            'deleted': bool,
            'ip': str
        }

        self.attribute_map = {
            'deleted': 'deleted',
            'ip': 'ip'
        }

        self._deleted = deleted
        self._ip = ip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IpsDeleteResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ips_delete-response of this IpsDeleteResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deleted(self):
        """Gets the deleted of this IpsDeleteResponse.


        :return: The deleted of this IpsDeleteResponse.
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this IpsDeleteResponse.


        :param deleted: The deleted of this IpsDeleteResponse.
        :type deleted: bool
        """

        self._deleted = deleted

    @property
    def ip(self):
        """Gets the ip of this IpsDeleteResponse.


        :return: The ip of this IpsDeleteResponse.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this IpsDeleteResponse.


        :param ip: The ip of this IpsDeleteResponse.
        :type ip: str
        """

        self._ip = ip
