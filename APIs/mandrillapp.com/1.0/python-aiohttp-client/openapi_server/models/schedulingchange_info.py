# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SchedulingchangeInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, created_at: str=None, from_email: str=None, send_at: str=None, subject: str=None, to: str=None):
        """SchedulingchangeInfo - a model defined in OpenAPI

        :param id: The id of this SchedulingchangeInfo.
        :param created_at: The created_at of this SchedulingchangeInfo.
        :param from_email: The from_email of this SchedulingchangeInfo.
        :param send_at: The send_at of this SchedulingchangeInfo.
        :param subject: The subject of this SchedulingchangeInfo.
        :param to: The to of this SchedulingchangeInfo.
        """
        self.openapi_types = {
            'id': str,
            'created_at': str,
            'from_email': str,
            'send_at': str,
            'subject': str,
            'to': str
        }

        self.attribute_map = {
            'id': '_id',
            'created_at': 'created_at',
            'from_email': 'from_email',
            'send_at': 'send_at',
            'subject': 'subject',
            'to': 'to'
        }

        self._id = id
        self._created_at = created_at
        self._from_email = from_email
        self._send_at = send_at
        self._subject = subject
        self._to = to

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SchedulingchangeInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The schedulingchange_info of this SchedulingchangeInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this SchedulingchangeInfo.


        :return: The id of this SchedulingchangeInfo.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SchedulingchangeInfo.


        :param id: The id of this SchedulingchangeInfo.
        :type id: str
        """

        self._id = id

    @property
    def created_at(self):
        """Gets the created_at of this SchedulingchangeInfo.


        :return: The created_at of this SchedulingchangeInfo.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this SchedulingchangeInfo.


        :param created_at: The created_at of this SchedulingchangeInfo.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def from_email(self):
        """Gets the from_email of this SchedulingchangeInfo.


        :return: The from_email of this SchedulingchangeInfo.
        :rtype: str
        """
        return self._from_email

    @from_email.setter
    def from_email(self, from_email):
        """Sets the from_email of this SchedulingchangeInfo.


        :param from_email: The from_email of this SchedulingchangeInfo.
        :type from_email: str
        """

        self._from_email = from_email

    @property
    def send_at(self):
        """Gets the send_at of this SchedulingchangeInfo.


        :return: The send_at of this SchedulingchangeInfo.
        :rtype: str
        """
        return self._send_at

    @send_at.setter
    def send_at(self, send_at):
        """Sets the send_at of this SchedulingchangeInfo.


        :param send_at: The send_at of this SchedulingchangeInfo.
        :type send_at: str
        """

        self._send_at = send_at

    @property
    def subject(self):
        """Gets the subject of this SchedulingchangeInfo.


        :return: The subject of this SchedulingchangeInfo.
        :rtype: str
        """
        return self._subject

    @subject.setter
    def subject(self, subject):
        """Sets the subject of this SchedulingchangeInfo.


        :param subject: The subject of this SchedulingchangeInfo.
        :type subject: str
        """

        self._subject = subject

    @property
    def to(self):
        """Gets the to of this SchedulingchangeInfo.


        :return: The to of this SchedulingchangeInfo.
        :rtype: str
        """
        return self._to

    @to.setter
    def to(self, to):
        """Sets the to of this SchedulingchangeInfo.


        :param to: The to of this SchedulingchangeInfo.
        :type to: str
        """

        self._to = to
