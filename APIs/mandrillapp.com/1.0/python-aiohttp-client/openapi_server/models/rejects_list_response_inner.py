# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.rejects_list_response_inner_sender import RejectsListResponseInnerSender
from openapi_server import util


class RejectsListResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_at: str=None, detail: str=None, email: str=None, expired: bool=None, expires_at: str=None, last_event_at: str=None, reason: str=None, sender: RejectsListResponseInnerSender=None, subaccount: str=None):
        """RejectsListResponseInner - a model defined in OpenAPI

        :param created_at: The created_at of this RejectsListResponseInner.
        :param detail: The detail of this RejectsListResponseInner.
        :param email: The email of this RejectsListResponseInner.
        :param expired: The expired of this RejectsListResponseInner.
        :param expires_at: The expires_at of this RejectsListResponseInner.
        :param last_event_at: The last_event_at of this RejectsListResponseInner.
        :param reason: The reason of this RejectsListResponseInner.
        :param sender: The sender of this RejectsListResponseInner.
        :param subaccount: The subaccount of this RejectsListResponseInner.
        """
        self.openapi_types = {
            'created_at': str,
            'detail': str,
            'email': str,
            'expired': bool,
            'expires_at': str,
            'last_event_at': str,
            'reason': str,
            'sender': RejectsListResponseInnerSender,
            'subaccount': str
        }

        self.attribute_map = {
            'created_at': 'created_at',
            'detail': 'detail',
            'email': 'email',
            'expired': 'expired',
            'expires_at': 'expires_at',
            'last_event_at': 'last_event_at',
            'reason': 'reason',
            'sender': 'sender',
            'subaccount': 'subaccount'
        }

        self._created_at = created_at
        self._detail = detail
        self._email = email
        self._expired = expired
        self._expires_at = expires_at
        self._last_event_at = last_event_at
        self._reason = reason
        self._sender = sender
        self._subaccount = subaccount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RejectsListResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The rejects_list_response_inner of this RejectsListResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_at(self):
        """Gets the created_at of this RejectsListResponseInner.


        :return: The created_at of this RejectsListResponseInner.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this RejectsListResponseInner.


        :param created_at: The created_at of this RejectsListResponseInner.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def detail(self):
        """Gets the detail of this RejectsListResponseInner.


        :return: The detail of this RejectsListResponseInner.
        :rtype: str
        """
        return self._detail

    @detail.setter
    def detail(self, detail):
        """Sets the detail of this RejectsListResponseInner.


        :param detail: The detail of this RejectsListResponseInner.
        :type detail: str
        """

        self._detail = detail

    @property
    def email(self):
        """Gets the email of this RejectsListResponseInner.


        :return: The email of this RejectsListResponseInner.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this RejectsListResponseInner.


        :param email: The email of this RejectsListResponseInner.
        :type email: str
        """

        self._email = email

    @property
    def expired(self):
        """Gets the expired of this RejectsListResponseInner.


        :return: The expired of this RejectsListResponseInner.
        :rtype: bool
        """
        return self._expired

    @expired.setter
    def expired(self, expired):
        """Sets the expired of this RejectsListResponseInner.


        :param expired: The expired of this RejectsListResponseInner.
        :type expired: bool
        """

        self._expired = expired

    @property
    def expires_at(self):
        """Gets the expires_at of this RejectsListResponseInner.


        :return: The expires_at of this RejectsListResponseInner.
        :rtype: str
        """
        return self._expires_at

    @expires_at.setter
    def expires_at(self, expires_at):
        """Sets the expires_at of this RejectsListResponseInner.


        :param expires_at: The expires_at of this RejectsListResponseInner.
        :type expires_at: str
        """

        self._expires_at = expires_at

    @property
    def last_event_at(self):
        """Gets the last_event_at of this RejectsListResponseInner.


        :return: The last_event_at of this RejectsListResponseInner.
        :rtype: str
        """
        return self._last_event_at

    @last_event_at.setter
    def last_event_at(self, last_event_at):
        """Sets the last_event_at of this RejectsListResponseInner.


        :param last_event_at: The last_event_at of this RejectsListResponseInner.
        :type last_event_at: str
        """

        self._last_event_at = last_event_at

    @property
    def reason(self):
        """Gets the reason of this RejectsListResponseInner.


        :return: The reason of this RejectsListResponseInner.
        :rtype: str
        """
        return self._reason

    @reason.setter
    def reason(self, reason):
        """Sets the reason of this RejectsListResponseInner.


        :param reason: The reason of this RejectsListResponseInner.
        :type reason: str
        """

        self._reason = reason

    @property
    def sender(self):
        """Gets the sender of this RejectsListResponseInner.


        :return: The sender of this RejectsListResponseInner.
        :rtype: RejectsListResponseInnerSender
        """
        return self._sender

    @sender.setter
    def sender(self, sender):
        """Sets the sender of this RejectsListResponseInner.


        :param sender: The sender of this RejectsListResponseInner.
        :type sender: RejectsListResponseInnerSender
        """

        self._sender = sender

    @property
    def subaccount(self):
        """Gets the subaccount of this RejectsListResponseInner.


        :return: The subaccount of this RejectsListResponseInner.
        :rtype: str
        """
        return self._subaccount

    @subaccount.setter
    def subaccount(self, subaccount):
        """Sets the subaccount of this RejectsListResponseInner.


        :param subaccount: The subaccount of this RejectsListResponseInner.
        :type subaccount: str
        """

        self._subaccount = subaccount
