# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class IpsSetPool(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, create_pool: bool=None, ip: str=None, key: str=None, pool: str=None):
        """IpsSetPool - a model defined in OpenAPI

        :param create_pool: The create_pool of this IpsSetPool.
        :param ip: The ip of this IpsSetPool.
        :param key: The key of this IpsSetPool.
        :param pool: The pool of this IpsSetPool.
        """
        self.openapi_types = {
            'create_pool': bool,
            'ip': str,
            'key': str,
            'pool': str
        }

        self.attribute_map = {
            'create_pool': 'create_pool',
            'ip': 'ip',
            'key': 'key',
            'pool': 'pool'
        }

        self._create_pool = create_pool
        self._ip = ip
        self._key = key
        self._pool = pool

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IpsSetPool':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ips_set-pool of this IpsSetPool.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def create_pool(self):
        """Gets the create_pool of this IpsSetPool.


        :return: The create_pool of this IpsSetPool.
        :rtype: bool
        """
        return self._create_pool

    @create_pool.setter
    def create_pool(self, create_pool):
        """Sets the create_pool of this IpsSetPool.


        :param create_pool: The create_pool of this IpsSetPool.
        :type create_pool: bool
        """

        self._create_pool = create_pool

    @property
    def ip(self):
        """Gets the ip of this IpsSetPool.


        :return: The ip of this IpsSetPool.
        :rtype: str
        """
        return self._ip

    @ip.setter
    def ip(self, ip):
        """Sets the ip of this IpsSetPool.


        :param ip: The ip of this IpsSetPool.
        :type ip: str
        """

        self._ip = ip

    @property
    def key(self):
        """Gets the key of this IpsSetPool.


        :return: The key of this IpsSetPool.
        :rtype: str
        """
        return self._key

    @key.setter
    def key(self, key):
        """Sets the key of this IpsSetPool.


        :param key: The key of this IpsSetPool.
        :type key: str
        """

        self._key = key

    @property
    def pool(self):
        """Gets the pool of this IpsSetPool.


        :return: The pool of this IpsSetPool.
        :rtype: str
        """
        return self._pool

    @pool.setter
    def pool(self, pool):
        """Sets the pool of this IpsSetPool.


        :param pool: The pool of this IpsSetPool.
        :type pool: str
        """

        self._pool = pool
