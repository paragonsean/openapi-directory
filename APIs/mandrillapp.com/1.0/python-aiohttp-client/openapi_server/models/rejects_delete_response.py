# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class RejectsDeleteResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deleted: bool=None, email: str=None, subaccount: str=None):
        """RejectsDeleteResponse - a model defined in OpenAPI

        :param deleted: The deleted of this RejectsDeleteResponse.
        :param email: The email of this RejectsDeleteResponse.
        :param subaccount: The subaccount of this RejectsDeleteResponse.
        """
        self.openapi_types = {
            'deleted': bool,
            'email': str,
            'subaccount': str
        }

        self.attribute_map = {
            'deleted': 'deleted',
            'email': 'email',
            'subaccount': 'subaccount'
        }

        self._deleted = deleted
        self._email = email
        self._subaccount = subaccount

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RejectsDeleteResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The rejects_delete-response of this RejectsDeleteResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deleted(self):
        """Gets the deleted of this RejectsDeleteResponse.


        :return: The deleted of this RejectsDeleteResponse.
        :rtype: bool
        """
        return self._deleted

    @deleted.setter
    def deleted(self, deleted):
        """Sets the deleted of this RejectsDeleteResponse.


        :param deleted: The deleted of this RejectsDeleteResponse.
        :type deleted: bool
        """

        self._deleted = deleted

    @property
    def email(self):
        """Gets the email of this RejectsDeleteResponse.


        :return: The email of this RejectsDeleteResponse.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this RejectsDeleteResponse.


        :param email: The email of this RejectsDeleteResponse.
        :type email: str
        """

        self._email = email

    @property
    def subaccount(self):
        """Gets the subaccount of this RejectsDeleteResponse.


        :return: The subaccount of this RejectsDeleteResponse.
        :rtype: str
        """
        return self._subaccount

    @subaccount.setter
    def subaccount(self, subaccount):
        """Sets the subaccount of this RejectsDeleteResponse.


        :param subaccount: The subaccount of this RejectsDeleteResponse.
        :type subaccount: str
        """

        self._subaccount = subaccount
