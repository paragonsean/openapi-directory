/**
 * SwaggerHub Registry API
 * # Overview Use SwaggerHub Registry API to access, manage, and update the following resources in SwaggerHub, bypassing the web interface:   * APIs   * Domains   * Integrations   * Projects   * Templates   SwaggerHub also provides the [User Management API](https://app.swaggerhub.com/apis-docs/swagger-hub/user-management-api/) to get information about organizations and manage organization members.  # Base URL Use the following base URL for SwaggerHub SaaS:          http(s)://api.swaggerhub.com  **Note:** This documentation is for SwaggerHub SaaS. On-Premise customers should use the bundled API definition, which can be found at the URLs provided below.  Version 1.29.0 or later:      http(s)://SERVER/v1/openapi.yaml - YAML version     http(s)://SERVER/v1/openapi.json - JSON version  Earlier versions:      http(s)://SERVER/v1/swagger.yaml - YAML version     http(s)://SERVER/v1/swagger.json - JSON version  # Authentication Operations that update data or access private data require authentication using an API key. You can find your personal API key on the [API Keys](https://app.swaggerhub.com/settings/apiKey) page in your account settings. Send this key in the `Authorization` header when making requests to the Registry API:      Authorization: YOUR_API_KEY  To test API calls from this documentation page, click the **Authorize** button below and paste your API key there.  **Important:** Keep the API key secure and do not store it directly in your code. # Tools In addition to calling the Registry API directly, you can use the following tools to interact with the API from the command line or CI/CD pipeline:   * [SwaggerHub CLI](https://www.npmjs.com/package/swaggerhub-cli)   * [Maven plugin](https://github.com/swagger-api/swaggerhub-maven-plugin)  * [Gradle plugin](https://github.com/swagger-api/swaggerhub-gradle-plugin) 
 *
 * The version of the OpenAPI document: 1.0.66
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SwaggerHubRegistryApi);
  }
}(this, function(expect, SwaggerHubRegistryApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SwaggerHubRegistryApi.AmazonIntegration();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AmazonIntegration', function() {
    it('should create an instance of AmazonIntegration', function() {
      // uncomment below and update the code to test AmazonIntegration
      //var instance = new SwaggerHubRegistryApi.AmazonIntegration();
      //expect(instance).to.be.a(SwaggerHubRegistryApi.AmazonIntegration);
    });

    it('should have the property enabled (base name: "enabled")', function() {
      // uncomment below and update the code to test the property enabled
      //var instance = new SwaggerHubRegistryApi.AmazonIntegration();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new SwaggerHubRegistryApi.AmazonIntegration();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SwaggerHubRegistryApi.AmazonIntegration();
      //expect(instance).to.be();
    });

    it('should have the property accessKey (base name: "accessKey")', function() {
      // uncomment below and update the code to test the property accessKey
      //var instance = new SwaggerHubRegistryApi.AmazonIntegration();
      //expect(instance).to.be();
    });

    it('should have the property apiId (base name: "apiId")', function() {
      // uncomment below and update the code to test the property apiId
      //var instance = new SwaggerHubRegistryApi.AmazonIntegration();
      //expect(instance).to.be();
    });

    it('should have the property basePathMode (base name: "basePathMode")', function() {
      // uncomment below and update the code to test the property basePathMode
      //var instance = new SwaggerHubRegistryApi.AmazonIntegration();
      //expect(instance).to.be();
    });

    it('should have the property deploymentMode (base name: "deploymentMode")', function() {
      // uncomment below and update the code to test the property deploymentMode
      //var instance = new SwaggerHubRegistryApi.AmazonIntegration();
      //expect(instance).to.be();
    });

    it('should have the property publishMode (base name: "publishMode")', function() {
      // uncomment below and update the code to test the property publishMode
      //var instance = new SwaggerHubRegistryApi.AmazonIntegration();
      //expect(instance).to.be();
    });

    it('should have the property region (base name: "region")', function() {
      // uncomment below and update the code to test the property region
      //var instance = new SwaggerHubRegistryApi.AmazonIntegration();
      //expect(instance).to.be();
    });

    it('should have the property secretKey (base name: "secretKey")', function() {
      // uncomment below and update the code to test the property secretKey
      //var instance = new SwaggerHubRegistryApi.AmazonIntegration();
      //expect(instance).to.be();
    });

    it('should have the property updateDefinition (base name: "updateDefinition")', function() {
      // uncomment below and update the code to test the property updateDefinition
      //var instance = new SwaggerHubRegistryApi.AmazonIntegration();
      //expect(instance).to.be();
    });

  });

}));
