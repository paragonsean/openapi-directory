/**
 * SwaggerHub Registry API
 * # Overview Use SwaggerHub Registry API to access, manage, and update the following resources in SwaggerHub, bypassing the web interface:   * APIs   * Domains   * Integrations   * Projects   * Templates   SwaggerHub also provides the [User Management API](https://app.swaggerhub.com/apis-docs/swagger-hub/user-management-api/) to get information about organizations and manage organization members.  # Base URL Use the following base URL for SwaggerHub SaaS:          http(s)://api.swaggerhub.com  **Note:** This documentation is for SwaggerHub SaaS. On-Premise customers should use the bundled API definition, which can be found at the URLs provided below.  Version 1.29.0 or later:      http(s)://SERVER/v1/openapi.yaml - YAML version     http(s)://SERVER/v1/openapi.json - JSON version  Earlier versions:      http(s)://SERVER/v1/swagger.yaml - YAML version     http(s)://SERVER/v1/swagger.json - JSON version  # Authentication Operations that update data or access private data require authentication using an API key. You can find your personal API key on the [API Keys](https://app.swaggerhub.com/settings/apiKey) page in your account settings. Send this key in the `Authorization` header when making requests to the Registry API:      Authorization: YOUR_API_KEY  To test API calls from this documentation page, click the **Authorize** button below and paste your API key there.  **Important:** Keep the API key secure and do not store it directly in your code. # Tools In addition to calling the Registry API directly, you can use the following tools to interact with the API from the command line or CI/CD pipeline:   * [SwaggerHub CLI](https://www.npmjs.com/package/swaggerhub-cli)   * [Maven plugin](https://github.com/swagger-api/swaggerhub-maven-plugin)  * [Gradle plugin](https://github.com/swagger-api/swaggerhub-gradle-plugin) 
 *
 * The version of the OpenAPI document: 1.0.66
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import IntegrationConfiguration from './IntegrationConfiguration';

/**
 * The IntegrationConfigurationSummary model module.
 * @module model/IntegrationConfigurationSummary
 * @version 1.0.66
 */
class IntegrationConfigurationSummary {
    /**
     * Constructs a new <code>IntegrationConfigurationSummary</code>.
     * @alias module:model/IntegrationConfigurationSummary
     * @implements module:model/IntegrationConfiguration
     * @param name {String} The display name of the integration. Must be unique among all integrations configured for the given API version.
     * @param configType {module:model/IntegrationConfigurationSummary.ConfigTypeEnum} Integration type
     */
    constructor(name, configType) { 
        IntegrationConfiguration.initialize(this, name);
        IntegrationConfigurationSummary.initialize(this, name, configType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name, configType) { 
        obj['enabled'] = true;
        obj['name'] = name;
        obj['configType'] = configType;
    }

    /**
     * Constructs a <code>IntegrationConfigurationSummary</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/IntegrationConfigurationSummary} obj Optional instance to populate.
     * @return {module:model/IntegrationConfigurationSummary} The populated <code>IntegrationConfigurationSummary</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new IntegrationConfigurationSummary();
            IntegrationConfiguration.constructFromObject(data, obj);

            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('configType')) {
                obj['configType'] = ApiClient.convertToType(data['configType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>IntegrationConfigurationSummary</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>IntegrationConfigurationSummary</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of IntegrationConfigurationSummary.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['configType'] && !(typeof data['configType'] === 'string' || data['configType'] instanceof String)) {
            throw new Error("Expected the field `configType` to be a primitive type in the JSON string but got " + data['configType']);
        }

        return true;
    }


}

IntegrationConfigurationSummary.RequiredProperties = ["name", "configType"];

/**
 * Whether the integration is enabled or disabled
 * @member {Boolean} enabled
 * @default true
 */
IntegrationConfigurationSummary.prototype['enabled'] = true;

/**
 * ID of the integration
 * @member {String} id
 */
IntegrationConfigurationSummary.prototype['id'] = undefined;

/**
 * The display name of the integration. Must be unique among all integrations configured for the given API version.
 * @member {String} name
 */
IntegrationConfigurationSummary.prototype['name'] = undefined;

/**
 * Integration type
 * @member {module:model/IntegrationConfigurationSummary.ConfigTypeEnum} configType
 */
IntegrationConfigurationSummary.prototype['configType'] = undefined;


// Implement IntegrationConfiguration interface:
/**
 * Whether the integration is enabled or disabled
 * @member {Boolean} enabled
 * @default true
 */
IntegrationConfiguration.prototype['enabled'] = true;
/**
 * ID of the integration
 * @member {String} id
 */
IntegrationConfiguration.prototype['id'] = undefined;
/**
 * The display name of the integration. Must be unique among all integrations configured for the given API version.
 * @member {String} name
 */
IntegrationConfiguration.prototype['name'] = undefined;



/**
 * Allowed values for the <code>configType</code> property.
 * @enum {String}
 * @readonly
 */
IntegrationConfigurationSummary['ConfigTypeEnum'] = {

    /**
     * value: "AMAZON_API_GATEWAY"
     * @const
     */
    "AMAZON_API_GATEWAY": "AMAZON_API_GATEWAY",

    /**
     * value: "AMAZON_API_GATEWAY_LAMBDA"
     * @const
     */
    "AMAZON_API_GATEWAY_LAMBDA": "AMAZON_API_GATEWAY_LAMBDA",

    /**
     * value: "API_AUTO_MOCKING"
     * @const
     */
    "API_AUTO_MOCKING": "API_AUTO_MOCKING",

    /**
     * value: "APIGEE_EDGE"
     * @const
     */
    "APIGEE_EDGE": "APIGEE_EDGE",

    /**
     * value: "AZURE_DEVOPS_SERVICES"
     * @const
     */
    "AZURE_DEVOPS_SERVICES": "AZURE_DEVOPS_SERVICES",

    /**
     * value: "BITBUCKET_CLOUD"
     * @const
     */
    "BITBUCKET_CLOUD": "BITBUCKET_CLOUD",

    /**
     * value: "BITBUCKET_SERVER"
     * @const
     */
    "BITBUCKET_SERVER": "BITBUCKET_SERVER",

    /**
     * value: "GITHUB"
     * @const
     */
    "GITHUB": "GITHUB",

    /**
     * value: "GITHUB_ENTERPRISE"
     * @const
     */
    "GITHUB_ENTERPRISE": "GITHUB_ENTERPRISE",

    /**
     * value: "GITLAB"
     * @const
     */
    "GITLAB": "GITLAB",

    /**
     * value: "WEBHOOK"
     * @const
     */
    "WEBHOOK": "WEBHOOK"
};



export default IntegrationConfigurationSummary;

