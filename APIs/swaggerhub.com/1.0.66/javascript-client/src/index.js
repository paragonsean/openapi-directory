/**
 * SwaggerHub Registry API
 * # Overview Use SwaggerHub Registry API to access, manage, and update the following resources in SwaggerHub, bypassing the web interface:   * APIs   * Domains   * Integrations   * Projects   * Templates   SwaggerHub also provides the [User Management API](https://app.swaggerhub.com/apis-docs/swagger-hub/user-management-api/) to get information about organizations and manage organization members.  # Base URL Use the following base URL for SwaggerHub SaaS:          http(s)://api.swaggerhub.com  **Note:** This documentation is for SwaggerHub SaaS. On-Premise customers should use the bundled API definition, which can be found at the URLs provided below.  Version 1.29.0 or later:      http(s)://SERVER/v1/openapi.yaml - YAML version     http(s)://SERVER/v1/openapi.json - JSON version  Earlier versions:      http(s)://SERVER/v1/swagger.yaml - YAML version     http(s)://SERVER/v1/swagger.json - JSON version  # Authentication Operations that update data or access private data require authentication using an API key. You can find your personal API key on the [API Keys](https://app.swaggerhub.com/settings/apiKey) page in your account settings. Send this key in the `Authorization` header when making requests to the Registry API:      Authorization: YOUR_API_KEY  To test API calls from this documentation page, click the **Authorize** button below and paste your API key there.  **Important:** Keep the API key secure and do not store it directly in your code. # Tools In addition to calling the Registry API directly, you can use the following tools to interact with the API from the command line or CI/CD pipeline:   * [SwaggerHub CLI](https://www.npmjs.com/package/swaggerhub-cli)   * [Maven plugin](https://github.com/swagger-api/swaggerhub-maven-plugin)  * [Gradle plugin](https://github.com/swagger-api/swaggerhub-gradle-plugin) 
 *
 * The version of the OpenAPI document: 1.0.66
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AmazonApiGatewayIntegration from './model/AmazonApiGatewayIntegration';
import AmazonApiGatewayLambdaIntegration from './model/AmazonApiGatewayLambdaIntegration';
import AmazonIntegration from './model/AmazonIntegration';
import ApiMetadata from './model/ApiMetadata';
import ApiMetadataLink from './model/ApiMetadataLink';
import ApigeeEdgeIntegration from './model/ApigeeEdgeIntegration';
import ApisJson from './model/ApisJson';
import ApisJsonApi from './model/ApisJsonApi';
import ApisJsonProperty from './model/ApisJsonProperty';
import AutoMockingIntegration from './model/AutoMockingIntegration';
import AzureApiManagementIntegration from './model/AzureApiManagementIntegration';
import AzureDevopsServicesIntegration from './model/AzureDevopsServicesIntegration';
import BitbucketCloudIntegration from './model/BitbucketCloudIntegration';
import BitbucketServerIntegration from './model/BitbucketServerIntegration';
import ClosableComment from './model/ClosableComment';
import ClosableCommentPatch from './model/ClosableCommentPatch';
import Collaboration from './model/Collaboration';
import CollaborationMember from './model/CollaborationMember';
import CollaborationMembership from './model/CollaborationMembership';
import CollaborationTeamMembership from './model/CollaborationTeamMembership';
import Comment from './model/Comment';
import CommentPatch from './model/CommentPatch';
import CommentsBatch from './model/CommentsBatch';
import DefaultVersion from './model/DefaultVersion';
import DraftModel from './model/DraftModel';
import ForkVersion from './model/ForkVersion';
import GitHubEnterpriseIntegration from './model/GitHubEnterpriseIntegration';
import GitHubIntegration from './model/GitHubIntegration';
import GitLabIntegration from './model/GitLabIntegration';
import IBMApiConnectIntegration from './model/IBMApiConnectIntegration';
import IntegrationConfiguration from './model/IntegrationConfiguration';
import IntegrationConfigurationSummary from './model/IntegrationConfigurationSummary';
import IntegrationConfigurations from './model/IntegrationConfigurations';
import LifecycleSettings from './model/LifecycleSettings';
import NewComment from './model/NewComment';
import NewReply from './model/NewReply';
import NewVersion from './model/NewVersion';
import NotificationPreferences from './model/NotificationPreferences';
import OrganizationOwner from './model/OrganizationOwner';
import Project from './model/Project';
import ProjectMember from './model/ProjectMember';
import ProjectMemberList from './model/ProjectMemberList';
import ProjectsJson from './model/ProjectsJson';
import SCMIntegrationConfiguration from './model/SCMIntegrationConfiguration';
import StandardizationError from './model/StandardizationError';
import StandardizationResult from './model/StandardizationResult';
import StandardizationRuleSeverity from './model/StandardizationRuleSeverity';
import TemplateWrapper from './model/TemplateWrapper';
import User from './model/User';
import ValidationErrors from './model/ValidationErrors';
import ValidationResult from './model/ValidationResult';
import VisibilitySettings from './model/VisibilitySettings';
import WebhookIntegration from './model/WebhookIntegration';
import APIsApi from './api/APIsApi';
import DomainsApi from './api/DomainsApi';
import IntegrationsApi from './api/IntegrationsApi';
import ProjectsApi from './api/ProjectsApi';
import TemplatesApi from './api/TemplatesApi';


/**
* # Overview Use SwaggerHub Registry API to access, manage, and update the following resources in SwaggerHub, bypassing the web interface:   * APIs   * Domains   * Integrations   * Projects   * Templates   SwaggerHub also provides the [User Management API](https://app.swaggerhub.com/apis-docs/swagger-hub/user-management-api/) to get information about organizations and manage organization members.  # Base URL Use the following base URL for SwaggerHub SaaS:          http(s)://api.swaggerhub.com  **Note:** This documentation is for SwaggerHub SaaS. On-Premise customers should use the bundled API definition, which can be found at the URLs provided below.  Version 1.29.0 or later:      http(s)://SERVER/v1/openapi.yaml - YAML version     http(s)://SERVER/v1/openapi.json - JSON version  Earlier versions:      http(s)://SERVER/v1/swagger.yaml - YAML version     http(s)://SERVER/v1/swagger.json - JSON version  # Authentication Operations that update data or access private data require authentication using an API key. You can find your personal API key on the [API Keys](https://app.swaggerhub.com/settings/apiKey) page in your account settings. Send this key in the &#x60;Authorization&#x60; header when making requests to the Registry API:      Authorization: YOUR_API_KEY  To test API calls from this documentation page, click the **Authorize** button below and paste your API key there.  **Important:** Keep the API key secure and do not store it directly in your code. # Tools In addition to calling the Registry API directly, you can use the following tools to interact with the API from the command line or CI/CD pipeline:   * [SwaggerHub CLI](https://www.npmjs.com/package/swaggerhub-cli)   * [Maven plugin](https://github.com/swagger-api/swaggerhub-maven-plugin)  * [Gradle plugin](https://github.com/swagger-api/swaggerhub-gradle-plugin) .<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var SwaggerHubRegistryApi = require('index'); // See note below*.
* var xxxSvc = new SwaggerHubRegistryApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new SwaggerHubRegistryApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new SwaggerHubRegistryApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new SwaggerHubRegistryApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.66
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AmazonApiGatewayIntegration model constructor.
     * @property {module:model/AmazonApiGatewayIntegration}
     */
    AmazonApiGatewayIntegration,

    /**
     * The AmazonApiGatewayLambdaIntegration model constructor.
     * @property {module:model/AmazonApiGatewayLambdaIntegration}
     */
    AmazonApiGatewayLambdaIntegration,

    /**
     * The AmazonIntegration model constructor.
     * @property {module:model/AmazonIntegration}
     */
    AmazonIntegration,

    /**
     * The ApiMetadata model constructor.
     * @property {module:model/ApiMetadata}
     */
    ApiMetadata,

    /**
     * The ApiMetadataLink model constructor.
     * @property {module:model/ApiMetadataLink}
     */
    ApiMetadataLink,

    /**
     * The ApigeeEdgeIntegration model constructor.
     * @property {module:model/ApigeeEdgeIntegration}
     */
    ApigeeEdgeIntegration,

    /**
     * The ApisJson model constructor.
     * @property {module:model/ApisJson}
     */
    ApisJson,

    /**
     * The ApisJsonApi model constructor.
     * @property {module:model/ApisJsonApi}
     */
    ApisJsonApi,

    /**
     * The ApisJsonProperty model constructor.
     * @property {module:model/ApisJsonProperty}
     */
    ApisJsonProperty,

    /**
     * The AutoMockingIntegration model constructor.
     * @property {module:model/AutoMockingIntegration}
     */
    AutoMockingIntegration,

    /**
     * The AzureApiManagementIntegration model constructor.
     * @property {module:model/AzureApiManagementIntegration}
     */
    AzureApiManagementIntegration,

    /**
     * The AzureDevopsServicesIntegration model constructor.
     * @property {module:model/AzureDevopsServicesIntegration}
     */
    AzureDevopsServicesIntegration,

    /**
     * The BitbucketCloudIntegration model constructor.
     * @property {module:model/BitbucketCloudIntegration}
     */
    BitbucketCloudIntegration,

    /**
     * The BitbucketServerIntegration model constructor.
     * @property {module:model/BitbucketServerIntegration}
     */
    BitbucketServerIntegration,

    /**
     * The ClosableComment model constructor.
     * @property {module:model/ClosableComment}
     */
    ClosableComment,

    /**
     * The ClosableCommentPatch model constructor.
     * @property {module:model/ClosableCommentPatch}
     */
    ClosableCommentPatch,

    /**
     * The Collaboration model constructor.
     * @property {module:model/Collaboration}
     */
    Collaboration,

    /**
     * The CollaborationMember model constructor.
     * @property {module:model/CollaborationMember}
     */
    CollaborationMember,

    /**
     * The CollaborationMembership model constructor.
     * @property {module:model/CollaborationMembership}
     */
    CollaborationMembership,

    /**
     * The CollaborationTeamMembership model constructor.
     * @property {module:model/CollaborationTeamMembership}
     */
    CollaborationTeamMembership,

    /**
     * The Comment model constructor.
     * @property {module:model/Comment}
     */
    Comment,

    /**
     * The CommentPatch model constructor.
     * @property {module:model/CommentPatch}
     */
    CommentPatch,

    /**
     * The CommentsBatch model constructor.
     * @property {module:model/CommentsBatch}
     */
    CommentsBatch,

    /**
     * The DefaultVersion model constructor.
     * @property {module:model/DefaultVersion}
     */
    DefaultVersion,

    /**
     * The DraftModel model constructor.
     * @property {module:model/DraftModel}
     */
    DraftModel,

    /**
     * The ForkVersion model constructor.
     * @property {module:model/ForkVersion}
     */
    ForkVersion,

    /**
     * The GitHubEnterpriseIntegration model constructor.
     * @property {module:model/GitHubEnterpriseIntegration}
     */
    GitHubEnterpriseIntegration,

    /**
     * The GitHubIntegration model constructor.
     * @property {module:model/GitHubIntegration}
     */
    GitHubIntegration,

    /**
     * The GitLabIntegration model constructor.
     * @property {module:model/GitLabIntegration}
     */
    GitLabIntegration,

    /**
     * The IBMApiConnectIntegration model constructor.
     * @property {module:model/IBMApiConnectIntegration}
     */
    IBMApiConnectIntegration,

    /**
     * The IntegrationConfiguration model constructor.
     * @property {module:model/IntegrationConfiguration}
     */
    IntegrationConfiguration,

    /**
     * The IntegrationConfigurationSummary model constructor.
     * @property {module:model/IntegrationConfigurationSummary}
     */
    IntegrationConfigurationSummary,

    /**
     * The IntegrationConfigurations model constructor.
     * @property {module:model/IntegrationConfigurations}
     */
    IntegrationConfigurations,

    /**
     * The LifecycleSettings model constructor.
     * @property {module:model/LifecycleSettings}
     */
    LifecycleSettings,

    /**
     * The NewComment model constructor.
     * @property {module:model/NewComment}
     */
    NewComment,

    /**
     * The NewReply model constructor.
     * @property {module:model/NewReply}
     */
    NewReply,

    /**
     * The NewVersion model constructor.
     * @property {module:model/NewVersion}
     */
    NewVersion,

    /**
     * The NotificationPreferences model constructor.
     * @property {module:model/NotificationPreferences}
     */
    NotificationPreferences,

    /**
     * The OrganizationOwner model constructor.
     * @property {module:model/OrganizationOwner}
     */
    OrganizationOwner,

    /**
     * The Project model constructor.
     * @property {module:model/Project}
     */
    Project,

    /**
     * The ProjectMember model constructor.
     * @property {module:model/ProjectMember}
     */
    ProjectMember,

    /**
     * The ProjectMemberList model constructor.
     * @property {module:model/ProjectMemberList}
     */
    ProjectMemberList,

    /**
     * The ProjectsJson model constructor.
     * @property {module:model/ProjectsJson}
     */
    ProjectsJson,

    /**
     * The SCMIntegrationConfiguration model constructor.
     * @property {module:model/SCMIntegrationConfiguration}
     */
    SCMIntegrationConfiguration,

    /**
     * The StandardizationError model constructor.
     * @property {module:model/StandardizationError}
     */
    StandardizationError,

    /**
     * The StandardizationResult model constructor.
     * @property {module:model/StandardizationResult}
     */
    StandardizationResult,

    /**
     * The StandardizationRuleSeverity model constructor.
     * @property {module:model/StandardizationRuleSeverity}
     */
    StandardizationRuleSeverity,

    /**
     * The TemplateWrapper model constructor.
     * @property {module:model/TemplateWrapper}
     */
    TemplateWrapper,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The ValidationErrors model constructor.
     * @property {module:model/ValidationErrors}
     */
    ValidationErrors,

    /**
     * The ValidationResult model constructor.
     * @property {module:model/ValidationResult}
     */
    ValidationResult,

    /**
     * The VisibilitySettings model constructor.
     * @property {module:model/VisibilitySettings}
     */
    VisibilitySettings,

    /**
     * The WebhookIntegration model constructor.
     * @property {module:model/WebhookIntegration}
     */
    WebhookIntegration,

    /**
    * The APIsApi service constructor.
    * @property {module:api/APIsApi}
    */
    APIsApi,

    /**
    * The DomainsApi service constructor.
    * @property {module:api/DomainsApi}
    */
    DomainsApi,

    /**
    * The IntegrationsApi service constructor.
    * @property {module:api/IntegrationsApi}
    */
    IntegrationsApi,

    /**
    * The ProjectsApi service constructor.
    * @property {module:api/ProjectsApi}
    */
    ProjectsApi,

    /**
    * The TemplatesApi service constructor.
    * @property {module:api/TemplatesApi}
    */
    TemplatesApi
};
