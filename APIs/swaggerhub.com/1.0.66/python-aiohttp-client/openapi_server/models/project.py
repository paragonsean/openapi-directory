# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Project(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, apis: List[str]=None, description: str='', domains: List[str]=None, name: str=None):
        """Project - a model defined in OpenAPI

        :param apis: The apis of this Project.
        :param description: The description of this Project.
        :param domains: The domains of this Project.
        :param name: The name of this Project.
        """
        self.openapi_types = {
            'apis': List[str],
            'description': str,
            'domains': List[str],
            'name': str
        }

        self.attribute_map = {
            'apis': 'apis',
            'description': 'description',
            'domains': 'domains',
            'name': 'name'
        }

        self._apis = apis
        self._description = description
        self._domains = domains
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Project':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Project of this Project.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def apis(self):
        """Gets the apis of this Project.

        A list of APIs included in this project. The APIs must belong to the same owner as the project. API names are case-sensitive. 

        :return: The apis of this Project.
        :rtype: List[str]
        """
        return self._apis

    @apis.setter
    def apis(self, apis):
        """Sets the apis of this Project.

        A list of APIs included in this project. The APIs must belong to the same owner as the project. API names are case-sensitive. 

        :param apis: The apis of this Project.
        :type apis: List[str]
        """

        self._apis = apis

    @property
    def description(self):
        """Gets the description of this Project.

        Project description

        :return: The description of this Project.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Project.

        Project description

        :param description: The description of this Project.
        :type description: str
        """

        self._description = description

    @property
    def domains(self):
        """Gets the domains of this Project.

        A list of domains included in this project. The domains must belong to the same owner as the project. Domain names are case-sensitive. 

        :return: The domains of this Project.
        :rtype: List[str]
        """
        return self._domains

    @domains.setter
    def domains(self, domains):
        """Sets the domains of this Project.

        A list of domains included in this project. The domains must belong to the same owner as the project. Domain names are case-sensitive. 

        :param domains: The domains of this Project.
        :type domains: List[str]
        """

        self._domains = domains

    @property
    def name(self):
        """Gets the name of this Project.

        Project name

        :return: The name of this Project.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Project.

        Project name

        :param name: The name of this Project.
        :type name: str
        """

        self._name = name
