# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.standardization_error import StandardizationError
from openapi_server import util


class StandardizationResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, validation: List[StandardizationError]=None):
        """StandardizationResult - a model defined in OpenAPI

        :param validation: The validation of this StandardizationResult.
        """
        self.openapi_types = {
            'validation': List[StandardizationError]
        }

        self.attribute_map = {
            'validation': 'validation'
        }

        self._validation = validation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'StandardizationResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The StandardizationResult of this StandardizationResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def validation(self):
        """Gets the validation of this StandardizationResult.


        :return: The validation of this StandardizationResult.
        :rtype: List[StandardizationError]
        """
        return self._validation

    @validation.setter
    def validation(self, validation):
        """Sets the validation of this StandardizationResult.


        :param validation: The validation of this StandardizationResult.
        :type validation: List[StandardizationError]
        """

        self._validation = validation
