# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DefaultVersion(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, version: str=None):
        """DefaultVersion - a model defined in OpenAPI

        :param version: The version of this DefaultVersion.
        """
        self.openapi_types = {
            'version': str
        }

        self.attribute_map = {
            'version': 'version'
        }

        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DefaultVersion':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DefaultVersion of this DefaultVersion.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def version(self):
        """Gets the version of this DefaultVersion.

        Version identifier (case-insensitive)

        :return: The version of this DefaultVersion.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this DefaultVersion.

        Version identifier (case-insensitive)

        :param version: The version of this DefaultVersion.
        :type version: str
        """
        if version is None:
            raise ValueError("Invalid value for `version`, must not be `None`")

        self._version = version
