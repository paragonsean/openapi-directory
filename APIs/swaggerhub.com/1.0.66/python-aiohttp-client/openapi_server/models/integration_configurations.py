# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.integration_configuration_summary import IntegrationConfigurationSummary
from openapi_server import util


class IntegrationConfigurations(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, integrations: List[IntegrationConfigurationSummary]=None):
        """IntegrationConfigurations - a model defined in OpenAPI

        :param integrations: The integrations of this IntegrationConfigurations.
        """
        self.openapi_types = {
            'integrations': List[IntegrationConfigurationSummary]
        }

        self.attribute_map = {
            'integrations': 'integrations'
        }

        self._integrations = integrations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IntegrationConfigurations':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IntegrationConfigurations of this IntegrationConfigurations.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def integrations(self):
        """Gets the integrations of this IntegrationConfigurations.

        A list of integrations

        :return: The integrations of this IntegrationConfigurations.
        :rtype: List[IntegrationConfigurationSummary]
        """
        return self._integrations

    @integrations.setter
    def integrations(self, integrations):
        """Sets the integrations of this IntegrationConfigurations.

        A list of integrations

        :param integrations: The integrations of this IntegrationConfigurations.
        :type integrations: List[IntegrationConfigurationSummary]
        """

        self._integrations = integrations
