# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class User(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None, id: str=None):
        """User - a model defined in OpenAPI

        :param active: The active of this User.
        :param id: The id of this User.
        """
        self.openapi_types = {
            'active': bool,
            'id': str
        }

        self.attribute_map = {
            'active': 'active',
            'id': 'id'
        }

        self._active = active
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'User':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The User of this User.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this User.

        `true` means an existing user, `false` means the user is inactive (for example, deleted) 

        :return: The active of this User.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this User.

        `true` means an existing user, `false` means the user is inactive (for example, deleted) 

        :param active: The active of this User.
        :type active: bool
        """

        self._active = active

    @property
    def id(self):
        """Gets the id of this User.

        User name

        :return: The id of this User.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this User.

        User name

        :param id: The id of this User.
        :type id: str
        """

        self._id = id
