/**
 * SwaggerHub Registry API
 * # Overview Use SwaggerHub Registry API to access, manage, and update the following resources in SwaggerHub, bypassing the web interface:   * APIs   * Domains   * Integrations   * Projects   * Templates   SwaggerHub also provides the [User Management API](https://app.swaggerhub.com/apis-docs/swagger-hub/user-management-api/) to get information about organizations and manage organization members.  # Base URL Use the following base URL for SwaggerHub SaaS:          http(s)://api.swaggerhub.com  **Note:** This documentation is for SwaggerHub SaaS. On-Premise customers should use the bundled API definition, which can be found at the URLs provided below.  Version 1.29.0 or later:      http(s)://SERVER/v1/openapi.yaml - YAML version     http(s)://SERVER/v1/openapi.json - JSON version  Earlier versions:      http(s)://SERVER/v1/swagger.yaml - YAML version     http(s)://SERVER/v1/swagger.json - JSON version  # Authentication Operations that update data or access private data require authentication using an API key. You can find your personal API key on the [API Keys](https://app.swaggerhub.com/settings/apiKey) page in your account settings. Send this key in the `Authorization` header when making requests to the Registry API:      Authorization: YOUR_API_KEY  To test API calls from this documentation page, click the **Authorize** button below and paste your API key there.  **Important:** Keep the API key secure and do not store it directly in your code. # Tools In addition to calling the Registry API directly, you can use the following tools to interact with the API from the command line or CI/CD pipeline:   * [SwaggerHub CLI](https://www.npmjs.com/package/swaggerhub-cli)   * [Maven plugin](https://github.com/swagger-api/swaggerhub-maven-plugin)  * [Gradle plugin](https://github.com/swagger-api/swaggerhub-gradle-plugin) 
 *
 * The version of the OpenAPI document: 1.0.66
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStandardizationRuleSeverity.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStandardizationRuleSeverity::OAIStandardizationRuleSeverity(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStandardizationRuleSeverity::OAIStandardizationRuleSeverity() {
    this->initializeModel();
}

OAIStandardizationRuleSeverity::~OAIStandardizationRuleSeverity() {}

void OAIStandardizationRuleSeverity::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIStandardizationRuleSeverity::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIStandardizationRuleSeverity::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Warning", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStandardizationRuleSeverity::WARNING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Critical", Qt::CaseInsensitive) == 0) {
        m_value = eOAIStandardizationRuleSeverity::CRITICAL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIStandardizationRuleSeverity::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIStandardizationRuleSeverity::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIStandardizationRuleSeverity::WARNING:
            val = "Warning";
            break;
        case eOAIStandardizationRuleSeverity::CRITICAL:
            val = "Critical";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIStandardizationRuleSeverity::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIStandardizationRuleSeverity::eOAIStandardizationRuleSeverity OAIStandardizationRuleSeverity::getValue() const {
    return m_value;
}

void OAIStandardizationRuleSeverity::setValue(const OAIStandardizationRuleSeverity::eOAIStandardizationRuleSeverity& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIStandardizationRuleSeverity::isSet() const {
    
    return m_value_isSet;
}

bool OAIStandardizationRuleSeverity::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
