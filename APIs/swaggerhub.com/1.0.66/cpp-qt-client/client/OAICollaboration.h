/**
 * SwaggerHub Registry API
 * # Overview Use SwaggerHub Registry API to access, manage, and update the following resources in SwaggerHub, bypassing the web interface:   * APIs   * Domains   * Integrations   * Projects   * Templates   SwaggerHub also provides the [User Management API](https://app.swaggerhub.com/apis-docs/swagger-hub/user-management-api/) to get information about organizations and manage organization members.  # Base URL Use the following base URL for SwaggerHub SaaS:          http(s)://api.swaggerhub.com  **Note:** This documentation is for SwaggerHub SaaS. On-Premise customers should use the bundled API definition, which can be found at the URLs provided below.  Version 1.29.0 or later:      http(s)://SERVER/v1/openapi.yaml - YAML version     http(s)://SERVER/v1/openapi.json - JSON version  Earlier versions:      http(s)://SERVER/v1/swagger.yaml - YAML version     http(s)://SERVER/v1/swagger.json - JSON version  # Authentication Operations that update data or access private data require authentication using an API key. You can find your personal API key on the [API Keys](https://app.swaggerhub.com/settings/apiKey) page in your account settings. Send this key in the `Authorization` header when making requests to the Registry API:      Authorization: YOUR_API_KEY  To test API calls from this documentation page, click the **Authorize** button below and paste your API key there.  **Important:** Keep the API key secure and do not store it directly in your code. # Tools In addition to calling the Registry API directly, you can use the following tools to interact with the API from the command line or CI/CD pipeline:   * [SwaggerHub CLI](https://www.npmjs.com/package/swaggerhub-cli)   * [Maven plugin](https://github.com/swagger-api/swaggerhub-maven-plugin)  * [Gradle plugin](https://github.com/swagger-api/swaggerhub-gradle-plugin) 
 *
 * The version of the OpenAPI document: 1.0.66
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICollaboration.h
 *
 * 
 */

#ifndef OAICollaboration_H
#define OAICollaboration_H

#include <QJsonObject>

#include "OAICollaborationMembership.h"
#include "OAICollaborationTeamMembership.h"
#include "OAIOrganizationOwner.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICollaborationMembership;
class OAIOrganizationOwner;
class OAICollaborationTeamMembership;

class OAICollaboration : public OAIObject {
public:
    OAICollaboration();
    OAICollaboration(QString json);
    ~OAICollaboration() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAICollaborationMembership> getMembers() const;
    void setMembers(const QList<OAICollaborationMembership> &members);
    bool is_members_Set() const;
    bool is_members_Valid() const;

    QString getOwner() const;
    void setOwner(const QString &owner);
    bool is_owner_Set() const;
    bool is_owner_Valid() const;

    QString getOwnerName() const;
    void setOwnerName(const QString &owner_name);
    bool is_owner_name_Set() const;
    bool is_owner_name_Valid() const;

    QList<OAIOrganizationOwner> getOwners() const;
    void setOwners(const QList<OAIOrganizationOwner> &owners);
    bool is_owners_Set() const;
    bool is_owners_Valid() const;

    QList<OAICollaborationMembership> getPendingMembers() const;
    void setPendingMembers(const QList<OAICollaborationMembership> &pending_members);
    bool is_pending_members_Set() const;
    bool is_pending_members_Valid() const;

    QList<OAICollaborationTeamMembership> getTeams() const;
    void setTeams(const QList<OAICollaborationTeamMembership> &teams);
    bool is_teams_Set() const;
    bool is_teams_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAICollaborationMembership> m_members;
    bool m_members_isSet;
    bool m_members_isValid;

    QString m_owner;
    bool m_owner_isSet;
    bool m_owner_isValid;

    QString m_owner_name;
    bool m_owner_name_isSet;
    bool m_owner_name_isValid;

    QList<OAIOrganizationOwner> m_owners;
    bool m_owners_isSet;
    bool m_owners_isValid;

    QList<OAICollaborationMembership> m_pending_members;
    bool m_pending_members_isSet;
    bool m_pending_members_isValid;

    QList<OAICollaborationTeamMembership> m_teams;
    bool m_teams_isSet;
    bool m_teams_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICollaboration)

#endif // OAICollaboration_H
