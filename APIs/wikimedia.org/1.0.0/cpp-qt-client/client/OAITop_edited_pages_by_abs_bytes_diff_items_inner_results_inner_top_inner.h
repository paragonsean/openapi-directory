/**
 * Wikimedia
 * This API provides cacheable and straightforward access to Wikimedia content and data, in machine-readable formats. ### Global Rules - Limit your clients to no more than 200 requests/s to this API.   Each API endpoint's documentation may detail more specific usage limits. - Set a unique `User-Agent` or `Api-User-Agent` header that   allows us to contact you quickly. Email addresses or URLs   of contact pages work well.  By using this API, you agree to Wikimedia's  [Terms of Use](https://wikimediafoundation.org/wiki/Terms_of_Use) and [Privacy Policy](https://wikimediafoundation.org/wiki/Privacy_policy). Unless otherwise specified in the endpoint documentation below, content accessed via this API is licensed under the [CC-BY-SA 3.0](https://creativecommons.org/licenses/by-sa/3.0/)  and [GFDL](https://www.gnu.org/copyleft/fdl.html) licenses, and you irrevocably agree to release modifications or additions made through this API under these licenses.  See https://www.mediawiki.org/wiki/REST_API for background and details. ### Endpoint documentation Please consult each endpoint's documentation for details on: - Licensing information for the specific type of content   and data served via the endpoint. - Stability markers to inform you about development status and   change policy, according to   [our API version policy](https://www.mediawiki.org/wiki/API_versioning). - Endpoint specific usage limits. 
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITop_edited_pages_by_abs_bytes_diff_items_inner_results_inner_top_inner.h
 *
 * 
 */

#ifndef OAITop_edited_pages_by_abs_bytes_diff_items_inner_results_inner_top_inner_H
#define OAITop_edited_pages_by_abs_bytes_diff_items_inner_results_inner_top_inner_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITop_edited_pages_by_abs_bytes_diff_items_inner_results_inner_top_inner : public OAIObject {
public:
    OAITop_edited_pages_by_abs_bytes_diff_items_inner_results_inner_top_inner();
    OAITop_edited_pages_by_abs_bytes_diff_items_inner_results_inner_top_inner(QString json);
    ~OAITop_edited_pages_by_abs_bytes_diff_items_inner_results_inner_top_inner() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint64 getAbsBytesDiff() const;
    void setAbsBytesDiff(const qint64 &abs_bytes_diff);
    bool is_abs_bytes_diff_Set() const;
    bool is_abs_bytes_diff_Valid() const;

    QString getPageTitle() const;
    void setPageTitle(const QString &page_title);
    bool is_page_title_Set() const;
    bool is_page_title_Valid() const;

    qint32 getRank() const;
    void setRank(const qint32 &rank);
    bool is_rank_Set() const;
    bool is_rank_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint64 m_abs_bytes_diff;
    bool m_abs_bytes_diff_isSet;
    bool m_abs_bytes_diff_isValid;

    QString m_page_title;
    bool m_page_title_isSet;
    bool m_page_title_isValid;

    qint32 m_rank;
    bool m_rank_isSet;
    bool m_rank_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITop_edited_pages_by_abs_bytes_diff_items_inner_results_inner_top_inner)

#endif // OAITop_edited_pages_by_abs_bytes_diff_items_inner_results_inner_top_inner_H
