# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class UniqueDevicesItemsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_site: str=None, devices: int=None, granularity: str=None, project: str=None, timestamp: str=None):
        """UniqueDevicesItemsInner - a model defined in OpenAPI

        :param access_site: The access_site of this UniqueDevicesItemsInner.
        :param devices: The devices of this UniqueDevicesItemsInner.
        :param granularity: The granularity of this UniqueDevicesItemsInner.
        :param project: The project of this UniqueDevicesItemsInner.
        :param timestamp: The timestamp of this UniqueDevicesItemsInner.
        """
        self.openapi_types = {
            'access_site': str,
            'devices': int,
            'granularity': str,
            'project': str,
            'timestamp': str
        }

        self.attribute_map = {
            'access_site': 'access-site',
            'devices': 'devices',
            'granularity': 'granularity',
            'project': 'project',
            'timestamp': 'timestamp'
        }

        self._access_site = access_site
        self._devices = devices
        self._granularity = granularity
        self._project = project
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UniqueDevicesItemsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The unique_devices_items_inner of this UniqueDevicesItemsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_site(self):
        """Gets the access_site of this UniqueDevicesItemsInner.


        :return: The access_site of this UniqueDevicesItemsInner.
        :rtype: str
        """
        return self._access_site

    @access_site.setter
    def access_site(self, access_site):
        """Sets the access_site of this UniqueDevicesItemsInner.


        :param access_site: The access_site of this UniqueDevicesItemsInner.
        :type access_site: str
        """

        self._access_site = access_site

    @property
    def devices(self):
        """Gets the devices of this UniqueDevicesItemsInner.


        :return: The devices of this UniqueDevicesItemsInner.
        :rtype: int
        """
        return self._devices

    @devices.setter
    def devices(self, devices):
        """Sets the devices of this UniqueDevicesItemsInner.


        :param devices: The devices of this UniqueDevicesItemsInner.
        :type devices: int
        """

        self._devices = devices

    @property
    def granularity(self):
        """Gets the granularity of this UniqueDevicesItemsInner.


        :return: The granularity of this UniqueDevicesItemsInner.
        :rtype: str
        """
        return self._granularity

    @granularity.setter
    def granularity(self, granularity):
        """Sets the granularity of this UniqueDevicesItemsInner.


        :param granularity: The granularity of this UniqueDevicesItemsInner.
        :type granularity: str
        """

        self._granularity = granularity

    @property
    def project(self):
        """Gets the project of this UniqueDevicesItemsInner.


        :return: The project of this UniqueDevicesItemsInner.
        :rtype: str
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this UniqueDevicesItemsInner.


        :param project: The project of this UniqueDevicesItemsInner.
        :type project: str
        """

        self._project = project

    @property
    def timestamp(self):
        """Gets the timestamp of this UniqueDevicesItemsInner.


        :return: The timestamp of this UniqueDevicesItemsInner.
        :rtype: str
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this UniqueDevicesItemsInner.


        :param timestamp: The timestamp of this UniqueDevicesItemsInner.
        :type timestamp: str
        """

        self._timestamp = timestamp
