# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CxDictTranslationsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, info: str=None, phrase: str=None, sources: str=None):
        """CxDictTranslationsInner - a model defined in OpenAPI

        :param info: The info of this CxDictTranslationsInner.
        :param phrase: The phrase of this CxDictTranslationsInner.
        :param sources: The sources of this CxDictTranslationsInner.
        """
        self.openapi_types = {
            'info': str,
            'phrase': str,
            'sources': str
        }

        self.attribute_map = {
            'info': 'info',
            'phrase': 'phrase',
            'sources': 'sources'
        }

        self._info = info
        self._phrase = phrase
        self._sources = sources

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CxDictTranslationsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The cx_dict_translations_inner of this CxDictTranslationsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def info(self):
        """Gets the info of this CxDictTranslationsInner.

        extra information about the phrase

        :return: The info of this CxDictTranslationsInner.
        :rtype: str
        """
        return self._info

    @info.setter
    def info(self, info):
        """Sets the info of this CxDictTranslationsInner.

        extra information about the phrase

        :param info: The info of this CxDictTranslationsInner.
        :type info: str
        """

        self._info = info

    @property
    def phrase(self):
        """Gets the phrase of this CxDictTranslationsInner.

        the translated phrase

        :return: The phrase of this CxDictTranslationsInner.
        :rtype: str
        """
        return self._phrase

    @phrase.setter
    def phrase(self, phrase):
        """Sets the phrase of this CxDictTranslationsInner.

        the translated phrase

        :param phrase: The phrase of this CxDictTranslationsInner.
        :type phrase: str
        """

        self._phrase = phrase

    @property
    def sources(self):
        """Gets the sources of this CxDictTranslationsInner.

        the source dictionary used for the translation

        :return: The sources of this CxDictTranslationsInner.
        :rtype: str
        """
        return self._sources

    @sources.setter
    def sources(self, sources):
        """Sets the sources of this CxDictTranslationsInner.

        the source dictionary used for the translation

        :param sources: The sources of this CxDictTranslationsInner.
        :type sources: str
        """

        self._sources = sources
