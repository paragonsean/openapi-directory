# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.net_bytes_difference_items_inner import NetBytesDifferenceItemsInner
from openapi_server import util


class NetBytesDifference(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, items: List[NetBytesDifferenceItemsInner]=None):
        """NetBytesDifference - a model defined in OpenAPI

        :param items: The items of this NetBytesDifference.
        """
        self.openapi_types = {
            'items': List[NetBytesDifferenceItemsInner]
        }

        self.attribute_map = {
            'items': 'items'
        }

        self._items = items

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NetBytesDifference':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The net-bytes-difference of this NetBytesDifference.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items(self):
        """Gets the items of this NetBytesDifference.


        :return: The items of this NetBytesDifference.
        :rtype: List[NetBytesDifferenceItemsInner]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this NetBytesDifference.


        :param items: The items of this NetBytesDifference.
        :type items: List[NetBytesDifferenceItemsInner]
        """

        self._items = items
