# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TopEditorsByAbsBytesDiffItemsInnerResultsInnerTopInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, abs_bytes_diff: int=None, rank: int=None, user_text: str=None):
        """TopEditorsByAbsBytesDiffItemsInnerResultsInnerTopInner - a model defined in OpenAPI

        :param abs_bytes_diff: The abs_bytes_diff of this TopEditorsByAbsBytesDiffItemsInnerResultsInnerTopInner.
        :param rank: The rank of this TopEditorsByAbsBytesDiffItemsInnerResultsInnerTopInner.
        :param user_text: The user_text of this TopEditorsByAbsBytesDiffItemsInnerResultsInnerTopInner.
        """
        self.openapi_types = {
            'abs_bytes_diff': int,
            'rank': int,
            'user_text': str
        }

        self.attribute_map = {
            'abs_bytes_diff': 'abs_bytes_diff',
            'rank': 'rank',
            'user_text': 'user_text'
        }

        self._abs_bytes_diff = abs_bytes_diff
        self._rank = rank
        self._user_text = user_text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TopEditorsByAbsBytesDiffItemsInnerResultsInnerTopInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The top_editors_by_abs_bytes_diff_items_inner_results_inner_top_inner of this TopEditorsByAbsBytesDiffItemsInnerResultsInnerTopInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def abs_bytes_diff(self):
        """Gets the abs_bytes_diff of this TopEditorsByAbsBytesDiffItemsInnerResultsInnerTopInner.


        :return: The abs_bytes_diff of this TopEditorsByAbsBytesDiffItemsInnerResultsInnerTopInner.
        :rtype: int
        """
        return self._abs_bytes_diff

    @abs_bytes_diff.setter
    def abs_bytes_diff(self, abs_bytes_diff):
        """Sets the abs_bytes_diff of this TopEditorsByAbsBytesDiffItemsInnerResultsInnerTopInner.


        :param abs_bytes_diff: The abs_bytes_diff of this TopEditorsByAbsBytesDiffItemsInnerResultsInnerTopInner.
        :type abs_bytes_diff: int
        """

        self._abs_bytes_diff = abs_bytes_diff

    @property
    def rank(self):
        """Gets the rank of this TopEditorsByAbsBytesDiffItemsInnerResultsInnerTopInner.


        :return: The rank of this TopEditorsByAbsBytesDiffItemsInnerResultsInnerTopInner.
        :rtype: int
        """
        return self._rank

    @rank.setter
    def rank(self, rank):
        """Sets the rank of this TopEditorsByAbsBytesDiffItemsInnerResultsInnerTopInner.


        :param rank: The rank of this TopEditorsByAbsBytesDiffItemsInnerResultsInnerTopInner.
        :type rank: int
        """

        self._rank = rank

    @property
    def user_text(self):
        """Gets the user_text of this TopEditorsByAbsBytesDiffItemsInnerResultsInnerTopInner.


        :return: The user_text of this TopEditorsByAbsBytesDiffItemsInnerResultsInnerTopInner.
        :rtype: str
        """
        return self._user_text

    @user_text.setter
    def user_text(self, user_text):
        """Sets the user_text of this TopEditorsByAbsBytesDiffItemsInnerResultsInnerTopInner.


        :param user_text: The user_text of this TopEditorsByAbsBytesDiffItemsInnerResultsInnerTopInner.
        :type user_text: str
        """

        self._user_text = user_text
