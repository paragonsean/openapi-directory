/*
 * Wikimedia
 * This API provides cacheable and straightforward access to Wikimedia content and data, in machine-readable formats. ### Global Rules - Limit your clients to no more than 200 requests/s to this API.   Each API endpoint's documentation may detail more specific usage limits. - Set a unique `User-Agent` or `Api-User-Agent` header that   allows us to contact you quickly. Email addresses or URLs   of contact pages work well.  By using this API, you agree to Wikimedia's  [Terms of Use](https://wikimediafoundation.org/wiki/Terms_of_Use) and [Privacy Policy](https://wikimediafoundation.org/wiki/Privacy_policy). Unless otherwise specified in the endpoint documentation below, content accessed via this API is licensed under the [CC-BY-SA 3.0](https://creativecommons.org/licenses/by-sa/3.0/)  and [GFDL](https://www.gnu.org/copyleft/fdl.html) licenses, and you irrevocably agree to release modifications or additions made through this API under these licenses.  See https://www.mediawiki.org/wiki/REST_API for background and details. ### Endpoint documentation Please consult each endpoint's documentation for details on: - Licensing information for the specific type of content   and data served via the endpoint. - Stability markers to inform you about development status and   change policy, according to   [our API version policy](https://www.mediawiki.org/wiki/API_versioning). - Endpoint specific usage limits. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.CxDict;
import org.openapitools.client.model.CxLanguagepairs;
import org.openapitools.client.model.CxListTools;
import org.openapitools.client.model.CxMt;
import org.openapitools.client.model.Problem;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TransformApi
 */
@Disabled
public class TransformApiTest {

    private final TransformApi api = new TransformApi();

    /**
     * Machine-translate content
     *
     * Fetches the machine translation for the posted content from the source to the destination language.  Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable) 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformHtmlFromFromLangToToLangPostTest() throws ApiException {
        String fromLang = null;
        String toLang = null;
        String html = null;
        CxMt response = api.transformHtmlFromFromLangToToLangPost(fromLang, toLang, html);
        // TODO: test validations
    }

    /**
     * Machine-translate content
     *
     * Fetches the machine translation for the posted content from the source to the destination language.  Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable) 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformHtmlFromFromLangToToLangProviderPostTest() throws ApiException {
        String fromLang = null;
        String toLang = null;
        String provider = null;
        String html = null;
        CxMt response = api.transformHtmlFromFromLangToToLangProviderPost(fromLang, toLang, provider, html);
        // TODO: test validations
    }

    /**
     * Lists the language pairs supported by the back-end
     *
     * Fetches the list of language pairs the back-end service can translate  Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable) 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformListLanguagepairsGetTest() throws ApiException {
        CxLanguagepairs response = api.transformListLanguagepairsGet();
        // TODO: test validations
    }

    /**
     * Lists the tools available for a language pair
     *
     * Fetches the list of tools that are available for the given pair of languages.  Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable) 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformListPairFromToGetTest() throws ApiException {
        String from = null;
        String to = null;
        CxListTools response = api.transformListPairFromToGet(from, to);
        // TODO: test validations
    }

    /**
     * Lists the tools and language pairs available for the given tool category
     *
     * Fetches the list of tools and all of the language pairs it can translate  Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable) 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformListToolToolFromGetTest() throws ApiException {
        String tool = null;
        String from = null;
        Object response = api.transformListToolToolFromGet(tool, from);
        // TODO: test validations
    }

    /**
     * Lists the tools and language pairs available for the given tool category
     *
     * Fetches the list of tools and all of the language pairs it can translate  Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable) 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformListToolToolFromToGetTest() throws ApiException {
        String tool = null;
        String from = null;
        String to = null;
        Object response = api.transformListToolToolFromToGet(tool, from, to);
        // TODO: test validations
    }

    /**
     * Lists the tools and language pairs available for the given tool category
     *
     * Fetches the list of tools and all of the language pairs it can translate  Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable) 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformListToolToolGetTest() throws ApiException {
        String tool = null;
        Object response = api.transformListToolToolGet(tool);
        // TODO: test validations
    }

    /**
     * Fetch the dictionary meaning of a word
     *
     * Fetches the dictionary meaning of a word from a language and displays it in the target language.  Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable) 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformWordFromFromLangToToLangWordGetTest() throws ApiException {
        String fromLang = null;
        String toLang = null;
        String word = null;
        CxDict response = api.transformWordFromFromLangToToLangWordGet(fromLang, toLang, word);
        // TODO: test validations
    }

    /**
     * Fetch the dictionary meaning of a word
     *
     * Fetches the dictionary meaning of a word from a language and displays it in the target language.  Stability: [unstable](https://www.mediawiki.org/wiki/API_versioning#Unstable) 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void transformWordFromFromLangToToLangWordProviderGetTest() throws ApiException {
        String fromLang = null;
        String toLang = null;
        String word = null;
        String provider = null;
        CxDict response = api.transformWordFromFromLangToToLangWordProviderGet(fromLang, toLang, word, provider);
        // TODO: test validations
    }

}
