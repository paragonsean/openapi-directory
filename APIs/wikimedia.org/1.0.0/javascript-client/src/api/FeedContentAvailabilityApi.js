/**
 * Wikimedia
 * This API provides cacheable and straightforward access to Wikimedia content and data, in machine-readable formats. ### Global Rules - Limit your clients to no more than 200 requests/s to this API.   Each API endpoint's documentation may detail more specific usage limits. - Set a unique `User-Agent` or `Api-User-Agent` header that   allows us to contact you quickly. Email addresses or URLs   of contact pages work well.  By using this API, you agree to Wikimedia's  [Terms of Use](https://wikimediafoundation.org/wiki/Terms_of_Use) and [Privacy Policy](https://wikimediafoundation.org/wiki/Privacy_policy). Unless otherwise specified in the endpoint documentation below, content accessed via this API is licensed under the [CC-BY-SA 3.0](https://creativecommons.org/licenses/by-sa/3.0/)  and [GFDL](https://www.gnu.org/copyleft/fdl.html) licenses, and you irrevocably agree to release modifications or additions made through this API under these licenses.  See https://www.mediawiki.org/wiki/REST_API for background and details. ### Endpoint documentation Please consult each endpoint's documentation for details on: - Licensing information for the specific type of content   and data served via the endpoint. - Stability markers to inform you about development status and   change policy, according to   [our API version policy](https://www.mediawiki.org/wiki/API_versioning). - Endpoint specific usage limits. 
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import Availability from '../model/Availability';
import Problem from '../model/Problem';

/**
* FeedContentAvailability service.
* @module api/FeedContentAvailabilityApi
* @version 1.0.0
*/
export default class FeedContentAvailabilityApi {

    /**
    * Constructs a new FeedContentAvailabilityApi. 
    * @alias module:api/FeedContentAvailabilityApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the feedAvailabilityGet operation.
     * @callback module:api/FeedContentAvailabilityApi~feedAvailabilityGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Availability} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets availability of featured feed content for the apps by wiki domain.
     * Gets availability of featured feed content for the apps by wiki domain.  Stability: [experimental](https://www.mediawiki.org/wiki/API_versioning#Experimental) 
     * @param {module:api/FeedContentAvailabilityApi~feedAvailabilityGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Availability}
     */
    feedAvailabilityGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json; charset=utf-8; profile=https://www.mediawiki.org/wiki/Specs/Availability/1.0.1', 'application/problem+json'];
      let returnType = Availability;
      return this.apiClient.callApi(
        '/feed/availability', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
