# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.segment_query_filter_model import SegmentQueryFilterModel
from openapi_server import util


class SegmentQueryFilterConfigModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_filters: List[SegmentQueryFilterModel]=None, hidden_filters: List[str]=None):
        """SegmentQueryFilterConfigModel - a model defined in OpenAPI

        :param custom_filters: The custom_filters of this SegmentQueryFilterConfigModel.
        :param hidden_filters: The hidden_filters of this SegmentQueryFilterConfigModel.
        """
        self.openapi_types = {
            'custom_filters': List[SegmentQueryFilterModel],
            'hidden_filters': List[str]
        }

        self.attribute_map = {
            'custom_filters': 'customFilters',
            'hidden_filters': 'hiddenFilters'
        }

        self._custom_filters = custom_filters
        self._hidden_filters = hidden_filters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SegmentQueryFilterConfigModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SegmentQueryFilterConfigModel of this SegmentQueryFilterConfigModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_filters(self):
        """Gets the custom_filters of this SegmentQueryFilterConfigModel.


        :return: The custom_filters of this SegmentQueryFilterConfigModel.
        :rtype: List[SegmentQueryFilterModel]
        """
        return self._custom_filters

    @custom_filters.setter
    def custom_filters(self, custom_filters):
        """Sets the custom_filters of this SegmentQueryFilterConfigModel.


        :param custom_filters: The custom_filters of this SegmentQueryFilterConfigModel.
        :type custom_filters: List[SegmentQueryFilterModel]
        """

        self._custom_filters = custom_filters

    @property
    def hidden_filters(self):
        """Gets the hidden_filters of this SegmentQueryFilterConfigModel.


        :return: The hidden_filters of this SegmentQueryFilterConfigModel.
        :rtype: List[str]
        """
        return self._hidden_filters

    @hidden_filters.setter
    def hidden_filters(self, hidden_filters):
        """Sets the hidden_filters of this SegmentQueryFilterConfigModel.


        :param hidden_filters: The hidden_filters of this SegmentQueryFilterConfigModel.
        :type hidden_filters: List[str]
        """

        self._hidden_filters = hidden_filters
