# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TestHarnessScenarioModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, scenario_json: object=None, scenario_name: str=None):
        """TestHarnessScenarioModel - a model defined in OpenAPI

        :param scenario_json: The scenario_json of this TestHarnessScenarioModel.
        :param scenario_name: The scenario_name of this TestHarnessScenarioModel.
        """
        self.openapi_types = {
            'scenario_json': object,
            'scenario_name': str
        }

        self.attribute_map = {
            'scenario_json': 'scenarioJson',
            'scenario_name': 'scenarioName'
        }

        self._scenario_json = scenario_json
        self._scenario_name = scenario_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestHarnessScenarioModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TestHarnessScenarioModel of this TestHarnessScenarioModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def scenario_json(self):
        """Gets the scenario_json of this TestHarnessScenarioModel.


        :return: The scenario_json of this TestHarnessScenarioModel.
        :rtype: object
        """
        return self._scenario_json

    @scenario_json.setter
    def scenario_json(self, scenario_json):
        """Sets the scenario_json of this TestHarnessScenarioModel.


        :param scenario_json: The scenario_json of this TestHarnessScenarioModel.
        :type scenario_json: object
        """

        self._scenario_json = scenario_json

    @property
    def scenario_name(self):
        """Gets the scenario_name of this TestHarnessScenarioModel.


        :return: The scenario_name of this TestHarnessScenarioModel.
        :rtype: str
        """
        return self._scenario_name

    @scenario_name.setter
    def scenario_name(self, scenario_name):
        """Sets the scenario_name of this TestHarnessScenarioModel.


        :param scenario_name: The scenario_name of this TestHarnessScenarioModel.
        :type scenario_name: str
        """

        self._scenario_name = scenario_name
