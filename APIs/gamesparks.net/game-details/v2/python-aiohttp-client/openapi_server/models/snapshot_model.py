# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SnapshotModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: datetime=None, created_by: str=None, description: str=None, id: str=None, index_progress: Dict[str, int]=None, published: bool=None, status: str=None):
        """SnapshotModel - a model defined in OpenAPI

        :param created: The created of this SnapshotModel.
        :param created_by: The created_by of this SnapshotModel.
        :param description: The description of this SnapshotModel.
        :param id: The id of this SnapshotModel.
        :param index_progress: The index_progress of this SnapshotModel.
        :param published: The published of this SnapshotModel.
        :param status: The status of this SnapshotModel.
        """
        self.openapi_types = {
            'created': datetime,
            'created_by': str,
            'description': str,
            'id': str,
            'index_progress': Dict[str, int],
            'published': bool,
            'status': str
        }

        self.attribute_map = {
            'created': 'created',
            'created_by': 'createdBy',
            'description': 'description',
            'id': 'id',
            'index_progress': 'indexProgress',
            'published': 'published',
            'status': 'status'
        }

        self._created = created
        self._created_by = created_by
        self._description = description
        self._id = id
        self._index_progress = index_progress
        self._published = published
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SnapshotModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SnapshotModel of this SnapshotModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this SnapshotModel.


        :return: The created of this SnapshotModel.
        :rtype: datetime
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this SnapshotModel.


        :param created: The created of this SnapshotModel.
        :type created: datetime
        """

        self._created = created

    @property
    def created_by(self):
        """Gets the created_by of this SnapshotModel.


        :return: The created_by of this SnapshotModel.
        :rtype: str
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this SnapshotModel.


        :param created_by: The created_by of this SnapshotModel.
        :type created_by: str
        """

        self._created_by = created_by

    @property
    def description(self):
        """Gets the description of this SnapshotModel.


        :return: The description of this SnapshotModel.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this SnapshotModel.


        :param description: The description of this SnapshotModel.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this SnapshotModel.


        :return: The id of this SnapshotModel.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this SnapshotModel.


        :param id: The id of this SnapshotModel.
        :type id: str
        """

        self._id = id

    @property
    def index_progress(self):
        """Gets the index_progress of this SnapshotModel.


        :return: The index_progress of this SnapshotModel.
        :rtype: Dict[str, int]
        """
        return self._index_progress

    @index_progress.setter
    def index_progress(self, index_progress):
        """Sets the index_progress of this SnapshotModel.


        :param index_progress: The index_progress of this SnapshotModel.
        :type index_progress: Dict[str, int]
        """

        self._index_progress = index_progress

    @property
    def published(self):
        """Gets the published of this SnapshotModel.


        :return: The published of this SnapshotModel.
        :rtype: bool
        """
        return self._published

    @published.setter
    def published(self, published):
        """Sets the published of this SnapshotModel.


        :param published: The published of this SnapshotModel.
        :type published: bool
        """

        self._published = published

    @property
    def status(self):
        """Gets the status of this SnapshotModel.


        :return: The status of this SnapshotModel.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this SnapshotModel.


        :param status: The status of this SnapshotModel.
        :type status: str
        """

        self._status = status
