# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GameEndpointsModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, live_elastic_search: str=None, live_nosql: str=None, preview_elastic_search: str=None, preview_nosql: str=None):
        """GameEndpointsModel - a model defined in OpenAPI

        :param live_elastic_search: The live_elastic_search of this GameEndpointsModel.
        :param live_nosql: The live_nosql of this GameEndpointsModel.
        :param preview_elastic_search: The preview_elastic_search of this GameEndpointsModel.
        :param preview_nosql: The preview_nosql of this GameEndpointsModel.
        """
        self.openapi_types = {
            'live_elastic_search': str,
            'live_nosql': str,
            'preview_elastic_search': str,
            'preview_nosql': str
        }

        self.attribute_map = {
            'live_elastic_search': 'liveElasticSearch',
            'live_nosql': 'liveNosql',
            'preview_elastic_search': 'previewElasticSearch',
            'preview_nosql': 'previewNosql'
        }

        self._live_elastic_search = live_elastic_search
        self._live_nosql = live_nosql
        self._preview_elastic_search = preview_elastic_search
        self._preview_nosql = preview_nosql

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GameEndpointsModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GameEndpointsModel of this GameEndpointsModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def live_elastic_search(self):
        """Gets the live_elastic_search of this GameEndpointsModel.


        :return: The live_elastic_search of this GameEndpointsModel.
        :rtype: str
        """
        return self._live_elastic_search

    @live_elastic_search.setter
    def live_elastic_search(self, live_elastic_search):
        """Sets the live_elastic_search of this GameEndpointsModel.


        :param live_elastic_search: The live_elastic_search of this GameEndpointsModel.
        :type live_elastic_search: str
        """

        self._live_elastic_search = live_elastic_search

    @property
    def live_nosql(self):
        """Gets the live_nosql of this GameEndpointsModel.


        :return: The live_nosql of this GameEndpointsModel.
        :rtype: str
        """
        return self._live_nosql

    @live_nosql.setter
    def live_nosql(self, live_nosql):
        """Sets the live_nosql of this GameEndpointsModel.


        :param live_nosql: The live_nosql of this GameEndpointsModel.
        :type live_nosql: str
        """

        self._live_nosql = live_nosql

    @property
    def preview_elastic_search(self):
        """Gets the preview_elastic_search of this GameEndpointsModel.


        :return: The preview_elastic_search of this GameEndpointsModel.
        :rtype: str
        """
        return self._preview_elastic_search

    @preview_elastic_search.setter
    def preview_elastic_search(self, preview_elastic_search):
        """Sets the preview_elastic_search of this GameEndpointsModel.


        :param preview_elastic_search: The preview_elastic_search of this GameEndpointsModel.
        :type preview_elastic_search: str
        """

        self._preview_elastic_search = preview_elastic_search

    @property
    def preview_nosql(self):
        """Gets the preview_nosql of this GameEndpointsModel.


        :return: The preview_nosql of this GameEndpointsModel.
        :rtype: str
        """
        return self._preview_nosql

    @preview_nosql.setter
    def preview_nosql(self, preview_nosql):
        """Sets the preview_nosql of this GameEndpointsModel.


        :param preview_nosql: The preview_nosql of this GameEndpointsModel.
        :type preview_nosql: str
        """

        self._preview_nosql = preview_nosql
