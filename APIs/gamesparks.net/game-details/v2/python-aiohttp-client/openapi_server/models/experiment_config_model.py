# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ExperimentConfigModel(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, player_mongo_query: str=None, player_query: str=None, variants: str=None):
        """ExperimentConfigModel - a model defined in OpenAPI

        :param player_mongo_query: The player_mongo_query of this ExperimentConfigModel.
        :param player_query: The player_query of this ExperimentConfigModel.
        :param variants: The variants of this ExperimentConfigModel.
        """
        self.openapi_types = {
            'player_mongo_query': str,
            'player_query': str,
            'variants': str
        }

        self.attribute_map = {
            'player_mongo_query': 'playerMongoQuery',
            'player_query': 'playerQuery',
            'variants': 'variants'
        }

        self._player_mongo_query = player_mongo_query
        self._player_query = player_query
        self._variants = variants

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ExperimentConfigModel':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ExperimentConfigModel of this ExperimentConfigModel.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def player_mongo_query(self):
        """Gets the player_mongo_query of this ExperimentConfigModel.


        :return: The player_mongo_query of this ExperimentConfigModel.
        :rtype: str
        """
        return self._player_mongo_query

    @player_mongo_query.setter
    def player_mongo_query(self, player_mongo_query):
        """Sets the player_mongo_query of this ExperimentConfigModel.


        :param player_mongo_query: The player_mongo_query of this ExperimentConfigModel.
        :type player_mongo_query: str
        """

        self._player_mongo_query = player_mongo_query

    @property
    def player_query(self):
        """Gets the player_query of this ExperimentConfigModel.


        :return: The player_query of this ExperimentConfigModel.
        :rtype: str
        """
        return self._player_query

    @player_query.setter
    def player_query(self, player_query):
        """Sets the player_query of this ExperimentConfigModel.


        :param player_query: The player_query of this ExperimentConfigModel.
        :type player_query: str
        """

        self._player_query = player_query

    @property
    def variants(self):
        """Gets the variants of this ExperimentConfigModel.


        :return: The variants of this ExperimentConfigModel.
        :rtype: str
        """
        return self._variants

    @variants.setter
    def variants(self, variants):
        """Sets the variants of this ExperimentConfigModel.


        :param variants: The variants of this ExperimentConfigModel.
        :type variants: str
        """

        self._variants = variants
