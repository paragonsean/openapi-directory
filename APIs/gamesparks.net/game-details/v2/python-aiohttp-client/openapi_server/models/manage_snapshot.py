# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ManageSnapshot(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, _date: datetime=None, description: str=None, id: str=None, published: bool=None):
        """ManageSnapshot - a model defined in OpenAPI

        :param _date: The _date of this ManageSnapshot.
        :param description: The description of this ManageSnapshot.
        :param id: The id of this ManageSnapshot.
        :param published: The published of this ManageSnapshot.
        """
        self.openapi_types = {
            '_date': datetime,
            'description': str,
            'id': str,
            'published': bool
        }

        self.attribute_map = {
            '_date': 'date',
            'description': 'description',
            'id': 'id',
            'published': 'published'
        }

        self.__date = _date
        self._description = description
        self._id = id
        self._published = published

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ManageSnapshot':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ManageSnapshot of this ManageSnapshot.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def _date(self):
        """Gets the _date of this ManageSnapshot.


        :return: The _date of this ManageSnapshot.
        :rtype: datetime
        """
        return self.__date

    @_date.setter
    def _date(self, _date):
        """Sets the _date of this ManageSnapshot.


        :param _date: The _date of this ManageSnapshot.
        :type _date: datetime
        """

        self.__date = _date

    @property
    def description(self):
        """Gets the description of this ManageSnapshot.


        :return: The description of this ManageSnapshot.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ManageSnapshot.


        :param description: The description of this ManageSnapshot.
        :type description: str
        """

        self._description = description

    @property
    def id(self):
        """Gets the id of this ManageSnapshot.


        :return: The id of this ManageSnapshot.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ManageSnapshot.


        :param id: The id of this ManageSnapshot.
        :type id: str
        """

        self._id = id

    @property
    def published(self):
        """Gets the published of this ManageSnapshot.


        :return: The published of this ManageSnapshot.
        :rtype: bool
        """
        return self._published

    @published.setter
    def published(self, published):
        """Sets the published of this ManageSnapshot.


        :param published: The published of this ManageSnapshot.
        :type published: bool
        """

        self._published = published
