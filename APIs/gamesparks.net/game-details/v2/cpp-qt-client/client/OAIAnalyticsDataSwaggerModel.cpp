/**
 * GameSparks Game Details API
 * The API to manage the GameSparks game details
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAnalyticsDataSwaggerModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAnalyticsDataSwaggerModel::OAIAnalyticsDataSwaggerModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAnalyticsDataSwaggerModel::OAIAnalyticsDataSwaggerModel() {
    this->initializeModel();
}

OAIAnalyticsDataSwaggerModel::~OAIAnalyticsDataSwaggerModel() {}

void OAIAnalyticsDataSwaggerModel::initializeModel() {

    m__id_isSet = false;
    m__id_isValid = false;
}

void OAIAnalyticsDataSwaggerModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAnalyticsDataSwaggerModel::fromJsonObject(QJsonObject json) {

    m__id_isValid = ::OpenAPI::fromJsonValue(m__id, json[QString("_id")]);
    m__id_isSet = !json[QString("_id")].isNull() && m__id_isValid;
}

QString OAIAnalyticsDataSwaggerModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAnalyticsDataSwaggerModel::asJsonObject() const {
    QJsonObject obj;
    if (m__id_isSet) {
        obj.insert(QString("_id"), ::OpenAPI::toJsonValue(m__id));
    }
    return obj;
}

QString OAIAnalyticsDataSwaggerModel::getId() const {
    return m__id;
}
void OAIAnalyticsDataSwaggerModel::setId(const QString &_id) {
    m__id = _id;
    m__id_isSet = true;
}

bool OAIAnalyticsDataSwaggerModel::is__id_Set() const{
    return m__id_isSet;
}

bool OAIAnalyticsDataSwaggerModel::is__id_Valid() const{
    return m__id_isValid;
}

bool OAIAnalyticsDataSwaggerModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m__id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAnalyticsDataSwaggerModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
