/**
 * GameSparks Game Details API
 * The API to manage the GameSparks game details
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISegmentQueryFilterListModel.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISegmentQueryFilterListModel::OAISegmentQueryFilterListModel(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISegmentQueryFilterListModel::OAISegmentQueryFilterListModel() {
    this->initializeModel();
}

OAISegmentQueryFilterListModel::~OAISegmentQueryFilterListModel() {}

void OAISegmentQueryFilterListModel::initializeModel() {

    m_filters_isSet = false;
    m_filters_isValid = false;
}

void OAISegmentQueryFilterListModel::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISegmentQueryFilterListModel::fromJsonObject(QJsonObject json) {

    m_filters_isValid = ::OpenAPI::fromJsonValue(m_filters, json[QString("filters")]);
    m_filters_isSet = !json[QString("filters")].isNull() && m_filters_isValid;
}

QString OAISegmentQueryFilterListModel::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISegmentQueryFilterListModel::asJsonObject() const {
    QJsonObject obj;
    if (m_filters.size() > 0) {
        obj.insert(QString("filters"), ::OpenAPI::toJsonValue(m_filters));
    }
    return obj;
}

QList<OAISegmentQueryFilterModel> OAISegmentQueryFilterListModel::getFilters() const {
    return m_filters;
}
void OAISegmentQueryFilterListModel::setFilters(const QList<OAISegmentQueryFilterModel> &filters) {
    m_filters = filters;
    m_filters_isSet = true;
}

bool OAISegmentQueryFilterListModel::is_filters_Set() const{
    return m_filters_isSet;
}

bool OAISegmentQueryFilterListModel::is_filters_Valid() const{
    return m_filters_isValid;
}

bool OAISegmentQueryFilterListModel::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_filters.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISegmentQueryFilterListModel::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
