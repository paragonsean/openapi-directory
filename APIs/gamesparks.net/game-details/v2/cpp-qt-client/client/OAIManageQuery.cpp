/**
 * GameSparks Game Details API
 * The API to manage the GameSparks game details
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIManageQuery.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIManageQuery::OAIManageQuery(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIManageQuery::OAIManageQuery() {
    this->initializeModel();
}

OAIManageQuery::~OAIManageQuery() {}

void OAIManageQuery::initializeModel() {

    m_es_rules_isSet = false;
    m_es_rules_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_qb_rules_isSet = false;
    m_qb_rules_isValid = false;

    m_short_code_isSet = false;
    m_short_code_isValid = false;
}

void OAIManageQuery::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIManageQuery::fromJsonObject(QJsonObject json) {

    m_es_rules_isValid = ::OpenAPI::fromJsonValue(m_es_rules, json[QString("esRules")]);
    m_es_rules_isSet = !json[QString("esRules")].isNull() && m_es_rules_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_qb_rules_isValid = ::OpenAPI::fromJsonValue(m_qb_rules, json[QString("qbRules")]);
    m_qb_rules_isSet = !json[QString("qbRules")].isNull() && m_qb_rules_isValid;

    m_short_code_isValid = ::OpenAPI::fromJsonValue(m_short_code, json[QString("shortCode")]);
    m_short_code_isSet = !json[QString("shortCode")].isNull() && m_short_code_isValid;
}

QString OAIManageQuery::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIManageQuery::asJsonObject() const {
    QJsonObject obj;
    if (m_es_rules_isSet) {
        obj.insert(QString("esRules"), ::OpenAPI::toJsonValue(m_es_rules));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_qb_rules_isSet) {
        obj.insert(QString("qbRules"), ::OpenAPI::toJsonValue(m_qb_rules));
    }
    if (m_short_code_isSet) {
        obj.insert(QString("shortCode"), ::OpenAPI::toJsonValue(m_short_code));
    }
    return obj;
}

QString OAIManageQuery::getEsRules() const {
    return m_es_rules;
}
void OAIManageQuery::setEsRules(const QString &es_rules) {
    m_es_rules = es_rules;
    m_es_rules_isSet = true;
}

bool OAIManageQuery::is_es_rules_Set() const{
    return m_es_rules_isSet;
}

bool OAIManageQuery::is_es_rules_Valid() const{
    return m_es_rules_isValid;
}

QString OAIManageQuery::getName() const {
    return m_name;
}
void OAIManageQuery::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIManageQuery::is_name_Set() const{
    return m_name_isSet;
}

bool OAIManageQuery::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIManageQuery::getQbRules() const {
    return m_qb_rules;
}
void OAIManageQuery::setQbRules(const QString &qb_rules) {
    m_qb_rules = qb_rules;
    m_qb_rules_isSet = true;
}

bool OAIManageQuery::is_qb_rules_Set() const{
    return m_qb_rules_isSet;
}

bool OAIManageQuery::is_qb_rules_Valid() const{
    return m_qb_rules_isValid;
}

QString OAIManageQuery::getShortCode() const {
    return m_short_code;
}
void OAIManageQuery::setShortCode(const QString &short_code) {
    m_short_code = short_code;
    m_short_code_isSet = true;
}

bool OAIManageQuery::is_short_code_Set() const{
    return m_short_code_isSet;
}

bool OAIManageQuery::is_short_code_Valid() const{
    return m_short_code_isValid;
}

bool OAIManageQuery::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_es_rules_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qb_rules_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_short_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIManageQuery::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
