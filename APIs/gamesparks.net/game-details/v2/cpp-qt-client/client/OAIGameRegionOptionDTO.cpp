/**
 * GameSparks Game Details API
 * The API to manage the GameSparks game details
 *
 * The version of the OpenAPI document: v2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGameRegionOptionDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGameRegionOptionDTO::OAIGameRegionOptionDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGameRegionOptionDTO::OAIGameRegionOptionDTO() {
    this->initializeModel();
}

OAIGameRegionOptionDTO::~OAIGameRegionOptionDTO() {}

void OAIGameRegionOptionDTO::initializeModel() {

    m_region_code_isSet = false;
    m_region_code_isValid = false;

    m_region_name_isSet = false;
    m_region_name_isValid = false;

    m_selected_isSet = false;
    m_selected_isValid = false;
}

void OAIGameRegionOptionDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGameRegionOptionDTO::fromJsonObject(QJsonObject json) {

    m_region_code_isValid = ::OpenAPI::fromJsonValue(m_region_code, json[QString("regionCode")]);
    m_region_code_isSet = !json[QString("regionCode")].isNull() && m_region_code_isValid;

    m_region_name_isValid = ::OpenAPI::fromJsonValue(m_region_name, json[QString("regionName")]);
    m_region_name_isSet = !json[QString("regionName")].isNull() && m_region_name_isValid;

    m_selected_isValid = ::OpenAPI::fromJsonValue(m_selected, json[QString("selected")]);
    m_selected_isSet = !json[QString("selected")].isNull() && m_selected_isValid;
}

QString OAIGameRegionOptionDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGameRegionOptionDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_region_code_isSet) {
        obj.insert(QString("regionCode"), ::OpenAPI::toJsonValue(m_region_code));
    }
    if (m_region_name_isSet) {
        obj.insert(QString("regionName"), ::OpenAPI::toJsonValue(m_region_name));
    }
    if (m_selected_isSet) {
        obj.insert(QString("selected"), ::OpenAPI::toJsonValue(m_selected));
    }
    return obj;
}

QString OAIGameRegionOptionDTO::getRegionCode() const {
    return m_region_code;
}
void OAIGameRegionOptionDTO::setRegionCode(const QString &region_code) {
    m_region_code = region_code;
    m_region_code_isSet = true;
}

bool OAIGameRegionOptionDTO::is_region_code_Set() const{
    return m_region_code_isSet;
}

bool OAIGameRegionOptionDTO::is_region_code_Valid() const{
    return m_region_code_isValid;
}

QString OAIGameRegionOptionDTO::getRegionName() const {
    return m_region_name;
}
void OAIGameRegionOptionDTO::setRegionName(const QString &region_name) {
    m_region_name = region_name;
    m_region_name_isSet = true;
}

bool OAIGameRegionOptionDTO::is_region_name_Set() const{
    return m_region_name_isSet;
}

bool OAIGameRegionOptionDTO::is_region_name_Valid() const{
    return m_region_name_isValid;
}

bool OAIGameRegionOptionDTO::isSelected() const {
    return m_selected;
}
void OAIGameRegionOptionDTO::setSelected(const bool &selected) {
    m_selected = selected;
    m_selected_isSet = true;
}

bool OAIGameRegionOptionDTO::is_selected_Set() const{
    return m_selected_isSet;
}

bool OAIGameRegionOptionDTO::is_selected_Valid() const{
    return m_selected_isValid;
}

bool OAIGameRegionOptionDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_region_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_region_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_selected_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGameRegionOptionDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
