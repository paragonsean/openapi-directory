/**
 * GameSparks Game Details API
 * The API to manage the GameSparks game details
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import AnalyticsDataCountSwaggerModel from './model/AnalyticsDataCountSwaggerModel';
import AnalyticsDataSwaggerModel from './model/AnalyticsDataSwaggerModel';
import BillingDetailsModel from './model/BillingDetailsModel';
import DeletedGameModel from './model/DeletedGameModel';
import ExperimentConfigModel from './model/ExperimentConfigModel';
import ExperimentModel from './model/ExperimentModel';
import GameEndpointsModel from './model/GameEndpointsModel';
import GameModel from './model/GameModel';
import GameRegionOptionDTO from './model/GameRegionOptionDTO';
import GameRegionOptionsDTO from './model/GameRegionOptionsDTO';
import GameSummaryModel from './model/GameSummaryModel';
import LogLevelSummaryModel from './model/LogLevelSummaryModel';
import ManageItemSummary from './model/ManageItemSummary';
import ManageQuery from './model/ManageQuery';
import ManageResult from './model/ManageResult';
import ManageScreen from './model/ManageScreen';
import ManageSnapshot from './model/ManageSnapshot';
import ManageSnippet from './model/ManageSnippet';
import MessageModel from './model/MessageModel';
import PushNotificationTestModel from './model/PushNotificationTestModel';
import PushNotificationTestSummaryListModel from './model/PushNotificationTestSummaryListModel';
import PushNotificationTestSummaryModel from './model/PushNotificationTestSummaryModel';
import RegionResult from './model/RegionResult';
import ScriptsDifferenceListModel from './model/ScriptsDifferenceListModel';
import ScriptsDifferenceModel from './model/ScriptsDifferenceModel';
import SegmentQueryFilterConfigModel from './model/SegmentQueryFilterConfigModel';
import SegmentQueryFilterListModel from './model/SegmentQueryFilterListModel';
import SegmentQueryFilterModel from './model/SegmentQueryFilterModel';
import SnapshotCreationModel from './model/SnapshotCreationModel';
import SnapshotCreationSuccessModel from './model/SnapshotCreationSuccessModel';
import SnapshotModel from './model/SnapshotModel';
import SnapshotScriptVersionListModel from './model/SnapshotScriptVersionListModel';
import SnapshotScriptVersionModel from './model/SnapshotScriptVersionModel';
import TestHarnessScenarioModel from './model/TestHarnessScenarioModel';
import AnalyticsApi from './api/AnalyticsApi';
import BillingDetailsApi from './api/BillingDetailsApi';
import CredentialsApi from './api/CredentialsApi';
import ExperimentsApi from './api/ExperimentsApi';
import GamesAdminApi from './api/GamesAdminApi';
import ManageApi from './api/ManageApi';
import NotificationsApi from './api/NotificationsApi';
import PushNotificationTestApi from './api/PushNotificationTestApi';
import RegionApi from './api/RegionApi';
import ScriptsApi from './api/ScriptsApi';
import SegmentQueryFiltersApi from './api/SegmentQueryFiltersApi';
import SnapshotsApi from './api/SnapshotsApi';
import TestHarnessApi from './api/TestHarnessApi';


/**
* The API to manage the GameSparks game details.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var GameSparksGameDetailsApi = require('index'); // See note below*.
* var xxxSvc = new GameSparksGameDetailsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new GameSparksGameDetailsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new GameSparksGameDetailsApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new GameSparksGameDetailsApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version v2
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The AnalyticsDataCountSwaggerModel model constructor.
     * @property {module:model/AnalyticsDataCountSwaggerModel}
     */
    AnalyticsDataCountSwaggerModel,

    /**
     * The AnalyticsDataSwaggerModel model constructor.
     * @property {module:model/AnalyticsDataSwaggerModel}
     */
    AnalyticsDataSwaggerModel,

    /**
     * The BillingDetailsModel model constructor.
     * @property {module:model/BillingDetailsModel}
     */
    BillingDetailsModel,

    /**
     * The DeletedGameModel model constructor.
     * @property {module:model/DeletedGameModel}
     */
    DeletedGameModel,

    /**
     * The ExperimentConfigModel model constructor.
     * @property {module:model/ExperimentConfigModel}
     */
    ExperimentConfigModel,

    /**
     * The ExperimentModel model constructor.
     * @property {module:model/ExperimentModel}
     */
    ExperimentModel,

    /**
     * The GameEndpointsModel model constructor.
     * @property {module:model/GameEndpointsModel}
     */
    GameEndpointsModel,

    /**
     * The GameModel model constructor.
     * @property {module:model/GameModel}
     */
    GameModel,

    /**
     * The GameRegionOptionDTO model constructor.
     * @property {module:model/GameRegionOptionDTO}
     */
    GameRegionOptionDTO,

    /**
     * The GameRegionOptionsDTO model constructor.
     * @property {module:model/GameRegionOptionsDTO}
     */
    GameRegionOptionsDTO,

    /**
     * The GameSummaryModel model constructor.
     * @property {module:model/GameSummaryModel}
     */
    GameSummaryModel,

    /**
     * The LogLevelSummaryModel model constructor.
     * @property {module:model/LogLevelSummaryModel}
     */
    LogLevelSummaryModel,

    /**
     * The ManageItemSummary model constructor.
     * @property {module:model/ManageItemSummary}
     */
    ManageItemSummary,

    /**
     * The ManageQuery model constructor.
     * @property {module:model/ManageQuery}
     */
    ManageQuery,

    /**
     * The ManageResult model constructor.
     * @property {module:model/ManageResult}
     */
    ManageResult,

    /**
     * The ManageScreen model constructor.
     * @property {module:model/ManageScreen}
     */
    ManageScreen,

    /**
     * The ManageSnapshot model constructor.
     * @property {module:model/ManageSnapshot}
     */
    ManageSnapshot,

    /**
     * The ManageSnippet model constructor.
     * @property {module:model/ManageSnippet}
     */
    ManageSnippet,

    /**
     * The MessageModel model constructor.
     * @property {module:model/MessageModel}
     */
    MessageModel,

    /**
     * The PushNotificationTestModel model constructor.
     * @property {module:model/PushNotificationTestModel}
     */
    PushNotificationTestModel,

    /**
     * The PushNotificationTestSummaryListModel model constructor.
     * @property {module:model/PushNotificationTestSummaryListModel}
     */
    PushNotificationTestSummaryListModel,

    /**
     * The PushNotificationTestSummaryModel model constructor.
     * @property {module:model/PushNotificationTestSummaryModel}
     */
    PushNotificationTestSummaryModel,

    /**
     * The RegionResult model constructor.
     * @property {module:model/RegionResult}
     */
    RegionResult,

    /**
     * The ScriptsDifferenceListModel model constructor.
     * @property {module:model/ScriptsDifferenceListModel}
     */
    ScriptsDifferenceListModel,

    /**
     * The ScriptsDifferenceModel model constructor.
     * @property {module:model/ScriptsDifferenceModel}
     */
    ScriptsDifferenceModel,

    /**
     * The SegmentQueryFilterConfigModel model constructor.
     * @property {module:model/SegmentQueryFilterConfigModel}
     */
    SegmentQueryFilterConfigModel,

    /**
     * The SegmentQueryFilterListModel model constructor.
     * @property {module:model/SegmentQueryFilterListModel}
     */
    SegmentQueryFilterListModel,

    /**
     * The SegmentQueryFilterModel model constructor.
     * @property {module:model/SegmentQueryFilterModel}
     */
    SegmentQueryFilterModel,

    /**
     * The SnapshotCreationModel model constructor.
     * @property {module:model/SnapshotCreationModel}
     */
    SnapshotCreationModel,

    /**
     * The SnapshotCreationSuccessModel model constructor.
     * @property {module:model/SnapshotCreationSuccessModel}
     */
    SnapshotCreationSuccessModel,

    /**
     * The SnapshotModel model constructor.
     * @property {module:model/SnapshotModel}
     */
    SnapshotModel,

    /**
     * The SnapshotScriptVersionListModel model constructor.
     * @property {module:model/SnapshotScriptVersionListModel}
     */
    SnapshotScriptVersionListModel,

    /**
     * The SnapshotScriptVersionModel model constructor.
     * @property {module:model/SnapshotScriptVersionModel}
     */
    SnapshotScriptVersionModel,

    /**
     * The TestHarnessScenarioModel model constructor.
     * @property {module:model/TestHarnessScenarioModel}
     */
    TestHarnessScenarioModel,

    /**
    * The AnalyticsApi service constructor.
    * @property {module:api/AnalyticsApi}
    */
    AnalyticsApi,

    /**
    * The BillingDetailsApi service constructor.
    * @property {module:api/BillingDetailsApi}
    */
    BillingDetailsApi,

    /**
    * The CredentialsApi service constructor.
    * @property {module:api/CredentialsApi}
    */
    CredentialsApi,

    /**
    * The ExperimentsApi service constructor.
    * @property {module:api/ExperimentsApi}
    */
    ExperimentsApi,

    /**
    * The GamesAdminApi service constructor.
    * @property {module:api/GamesAdminApi}
    */
    GamesAdminApi,

    /**
    * The ManageApi service constructor.
    * @property {module:api/ManageApi}
    */
    ManageApi,

    /**
    * The NotificationsApi service constructor.
    * @property {module:api/NotificationsApi}
    */
    NotificationsApi,

    /**
    * The PushNotificationTestApi service constructor.
    * @property {module:api/PushNotificationTestApi}
    */
    PushNotificationTestApi,

    /**
    * The RegionApi service constructor.
    * @property {module:api/RegionApi}
    */
    RegionApi,

    /**
    * The ScriptsApi service constructor.
    * @property {module:api/ScriptsApi}
    */
    ScriptsApi,

    /**
    * The SegmentQueryFiltersApi service constructor.
    * @property {module:api/SegmentQueryFiltersApi}
    */
    SegmentQueryFiltersApi,

    /**
    * The SnapshotsApi service constructor.
    * @property {module:api/SnapshotsApi}
    */
    SnapshotsApi,

    /**
    * The TestHarnessApi service constructor.
    * @property {module:api/TestHarnessApi}
    */
    TestHarnessApi
};
