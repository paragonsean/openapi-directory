/**
 * GameSparks Game Details API
 * The API to manage the GameSparks game details
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import DeletedGameModel from '../model/DeletedGameModel';
import GameEndpointsModel from '../model/GameEndpointsModel';
import GameModel from '../model/GameModel';
import MessageModel from '../model/MessageModel';

/**
* GamesAdmin service.
* @module api/GamesAdminApi
* @version v2
*/
export default class GamesAdminApi {

    /**
    * Constructs a new GamesAdminApi. 
    * @alias module:api/GamesAdminApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getGamesEndpointsUsingGET operation.
     * @callback module:api/GamesAdminApi~getGamesEndpointsUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameEndpointsModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getGamesEndpoints
     * @param {String} apiKey apiKey
     * @param {module:api/GamesAdminApi~getGamesEndpointsUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameEndpointsModel}
     */
    getGamesEndpointsUsingGET(apiKey, callback) {
      let postBody = null;
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling getGamesEndpointsUsingGET");
      }

      let pathParams = {
        'apiKey': apiKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json;charset=UTF-8'];
      let returnType = GameEndpointsModel;
      return this.apiClient.callApi(
        '/restv2/game/{apiKey}/endpoints', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listDeletedUsingGET operation.
     * @callback module:api/GamesAdminApi~listDeletedUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/DeletedGameModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * listDeleted
     * @param {module:api/GamesAdminApi~listDeletedUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/DeletedGameModel>}
     */
    listDeletedUsingGET(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json;charset=UTF-8'];
      let returnType = [DeletedGameModel];
      return this.apiClient.callApi(
        '/restv2/games/deleted', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the listUsingGET operation.
     * @callback module:api/GamesAdminApi~listUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/GameModel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * list
     * @param {module:api/GamesAdminApi~listUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/GameModel>}
     */
    listUsingGET(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json;charset=UTF-8'];
      let returnType = [GameModel];
      return this.apiClient.callApi(
        '/restv2/games', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the restoreDeletedGameUsingPOST operation.
     * @callback module:api/GamesAdminApi~restoreDeletedGameUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MessageModel} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * restoreDeletedGame
     * @param {String} apiKey apiKey
     * @param {module:api/GamesAdminApi~restoreDeletedGameUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MessageModel}
     */
    restoreDeletedGameUsingPOST(apiKey, callback) {
      let postBody = null;
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling restoreDeletedGameUsingPOST");
      }

      let pathParams = {
        'apiKey': apiKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json;charset=UTF-8'];
      let returnType = MessageModel;
      return this.apiClient.callApi(
        '/restv2/game/{apiKey}/restore', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
