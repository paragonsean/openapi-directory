/**
 * GameSparks Game Details API
 * The API to manage the GameSparks game details
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import MessageModel from '../model/MessageModel';

/**
* Credentials service.
* @module api/CredentialsApi
* @version v2
*/
export default class CredentialsApi {

    /**
    * Constructs a new CredentialsApi. 
    * @alias module:api/CredentialsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the updateCredentialSecretUsingPOST operation.
     * @callback module:api/CredentialsApi~updateCredentialSecretUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Resets the secret of a credential
     * @param {String} apiKey apiKey
     * @param {String} credentialName credentialName
     * @param {module:api/CredentialsApi~updateCredentialSecretUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     */
    updateCredentialSecretUsingPOST(apiKey, credentialName, callback) {
      let postBody = null;
      // verify the required parameter 'apiKey' is set
      if (apiKey === undefined || apiKey === null) {
        throw new Error("Missing the required parameter 'apiKey' when calling updateCredentialSecretUsingPOST");
      }
      // verify the required parameter 'credentialName' is set
      if (credentialName === undefined || credentialName === null) {
        throw new Error("Missing the required parameter 'credentialName' when calling updateCredentialSecretUsingPOST");
      }

      let pathParams = {
        'apiKey': apiKey,
        'credentialName': credentialName
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json;charset=UTF-8'];
      let returnType = null;
      return this.apiClient.callApi(
        '/restv2/game/{apiKey}/config/~credentials/{credentialName}/resetSecret', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
