/**
 * GameSparks Game Details API
 * The API to manage the GameSparks game details
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import GameRegionOptionsDTO from '../model/GameRegionOptionsDTO';
import MessageModel from '../model/MessageModel';
import RegionResult from '../model/RegionResult';

/**
* Region service.
* @module api/RegionApi
* @version v2
*/
export default class RegionApi {

    /**
    * Constructs a new RegionApi. 
    * @alias module:api/RegionApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getGameRegionOptionsUsingGET operation.
     * @callback module:api/RegionApi~getGameRegionOptionsUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameRegionOptionsDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getGameRegionOptions
     * @param {String} gameApiKey gameApiKey
     * @param {module:api/RegionApi~getGameRegionOptionsUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameRegionOptionsDTO}
     */
    getGameRegionOptionsUsingGET(gameApiKey, callback) {
      let postBody = null;
      // verify the required parameter 'gameApiKey' is set
      if (gameApiKey === undefined || gameApiKey === null) {
        throw new Error("Missing the required parameter 'gameApiKey' when calling getGameRegionOptionsUsingGET");
      }

      let pathParams = {
        'gameApiKey': gameApiKey
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json;charset=UTF-8'];
      let returnType = GameRegionOptionsDTO;
      return this.apiClient.callApi(
        '/restv2/game/{gameApiKey}/regions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getRegionOptionsUsingGET operation.
     * @callback module:api/RegionApi~getRegionOptionsUsingGETCallback
     * @param {String} error Error message, if any.
     * @param {module:model/GameRegionOptionsDTO} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * getRegionOptions
     * @param {module:api/RegionApi~getRegionOptionsUsingGETCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/GameRegionOptionsDTO}
     */
    getRegionOptionsUsingGET(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json;charset=UTF-8'];
      let returnType = GameRegionOptionsDTO;
      return this.apiClient.callApi(
        '/restv2/game/regions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the setGameRegionUsingPOST operation.
     * @callback module:api/RegionApi~setGameRegionUsingPOSTCallback
     * @param {String} error Error message, if any.
     * @param {module:model/RegionResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * setGameRegion
     * @param {String} gameApiKey gameApiKey
     * @param {String} regionCode regionCode
     * @param {module:api/RegionApi~setGameRegionUsingPOSTCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/RegionResult}
     */
    setGameRegionUsingPOST(gameApiKey, regionCode, callback) {
      let postBody = null;
      // verify the required parameter 'gameApiKey' is set
      if (gameApiKey === undefined || gameApiKey === null) {
        throw new Error("Missing the required parameter 'gameApiKey' when calling setGameRegionUsingPOST");
      }
      // verify the required parameter 'regionCode' is set
      if (regionCode === undefined || regionCode === null) {
        throw new Error("Missing the required parameter 'regionCode' when calling setGameRegionUsingPOST");
      }

      let pathParams = {
        'gameApiKey': gameApiKey,
        'regionCode': regionCode
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json;charset=UTF-8'];
      let returnType = RegionResult;
      return this.apiClient.callApi(
        '/restv2/game/{gameApiKey}/region/{regionCode}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
