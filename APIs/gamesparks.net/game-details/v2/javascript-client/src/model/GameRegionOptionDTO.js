/**
 * GameSparks Game Details API
 * The API to manage the GameSparks game details
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GameRegionOptionDTO model module.
 * @module model/GameRegionOptionDTO
 * @version v2
 */
class GameRegionOptionDTO {
    /**
     * Constructs a new <code>GameRegionOptionDTO</code>.
     * @alias module:model/GameRegionOptionDTO
     */
    constructor() { 
        
        GameRegionOptionDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GameRegionOptionDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GameRegionOptionDTO} obj Optional instance to populate.
     * @return {module:model/GameRegionOptionDTO} The populated <code>GameRegionOptionDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GameRegionOptionDTO();

            if (data.hasOwnProperty('regionCode')) {
                obj['regionCode'] = ApiClient.convertToType(data['regionCode'], 'String');
            }
            if (data.hasOwnProperty('regionName')) {
                obj['regionName'] = ApiClient.convertToType(data['regionName'], 'String');
            }
            if (data.hasOwnProperty('selected')) {
                obj['selected'] = ApiClient.convertToType(data['selected'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GameRegionOptionDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GameRegionOptionDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['regionCode'] && !(typeof data['regionCode'] === 'string' || data['regionCode'] instanceof String)) {
            throw new Error("Expected the field `regionCode` to be a primitive type in the JSON string but got " + data['regionCode']);
        }
        // ensure the json data is a string
        if (data['regionName'] && !(typeof data['regionName'] === 'string' || data['regionName'] instanceof String)) {
            throw new Error("Expected the field `regionName` to be a primitive type in the JSON string but got " + data['regionName']);
        }

        return true;
    }


}



/**
 * @member {String} regionCode
 */
GameRegionOptionDTO.prototype['regionCode'] = undefined;

/**
 * @member {String} regionName
 */
GameRegionOptionDTO.prototype['regionName'] = undefined;

/**
 * @member {Boolean} selected
 */
GameRegionOptionDTO.prototype['selected'] = undefined;






export default GameRegionOptionDTO;

