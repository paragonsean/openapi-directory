/**
 * GameSparks Game Details API
 * The API to manage the GameSparks game details
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GameSparksGameDetailsApi);
  }
}(this, function(expect, GameSparksGameDetailsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GameSparksGameDetailsApi.PushNotificationTestApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PushNotificationTestApi', function() {
    describe('testPushAmazonNotificationsUsingPOST', function() {
      it('should call testPushAmazonNotificationsUsingPOST successfully', function(done) {
        //uncomment below and update the code to test testPushAmazonNotificationsUsingPOST
        //instance.testPushAmazonNotificationsUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('testPushAppleDevNotificationsUsingPOST', function() {
      it('should call testPushAppleDevNotificationsUsingPOST successfully', function(done) {
        //uncomment below and update the code to test testPushAppleDevNotificationsUsingPOST
        //instance.testPushAppleDevNotificationsUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('testPushAppleProdNotificationsUsingPOST', function() {
      it('should call testPushAppleProdNotificationsUsingPOST successfully', function(done) {
        //uncomment below and update the code to test testPushAppleProdNotificationsUsingPOST
        //instance.testPushAppleProdNotificationsUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('testPushGoogleNotificationsUsingPOST', function() {
      it('should call testPushGoogleNotificationsUsingPOST successfully', function(done) {
        //uncomment below and update the code to test testPushGoogleNotificationsUsingPOST
        //instance.testPushGoogleNotificationsUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('testViberIntegrationNotificationsUsingPOST', function() {
      it('should call testViberIntegrationNotificationsUsingPOST successfully', function(done) {
        //uncomment below and update the code to test testViberIntegrationNotificationsUsingPOST
        //instance.testViberIntegrationNotificationsUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('testViberProductionNotificationsUsingPOST', function() {
      it('should call testViberProductionNotificationsUsingPOST successfully', function(done) {
        //uncomment below and update the code to test testViberProductionNotificationsUsingPOST
        //instance.testViberProductionNotificationsUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('testWindows8NotificationsUsingPOST', function() {
      it('should call testWindows8NotificationsUsingPOST successfully', function(done) {
        //uncomment below and update the code to test testWindows8NotificationsUsingPOST
        //instance.testWindows8NotificationsUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('testWindowsPhone8NotificationsUsingPOST', function() {
      it('should call testWindowsPhone8NotificationsUsingPOST successfully', function(done) {
        //uncomment below and update the code to test testWindowsPhone8NotificationsUsingPOST
        //instance.testWindowsPhone8NotificationsUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
