/**
 * GameSparks Game Details API
 * The API to manage the GameSparks game details
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GameSparksGameDetailsApi);
  }
}(this, function(expect, GameSparksGameDetailsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GameSparksGameDetailsApi.SnapshotsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SnapshotsApi', function() {
    describe('copySnapshotToExistingGameUsingPOST1', function() {
      it('should call copySnapshotToExistingGameUsingPOST1 successfully', function(done) {
        //uncomment below and update the code to test copySnapshotToExistingGameUsingPOST1
        //instance.copySnapshotToExistingGameUsingPOST1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('copySnapshotToNewGameUsingPOST', function() {
      it('should call copySnapshotToNewGameUsingPOST successfully', function(done) {
        //uncomment below and update the code to test copySnapshotToNewGameUsingPOST
        //instance.copySnapshotToNewGameUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSnapshotsUsingPOST', function() {
      it('should call createSnapshotsUsingPOST successfully', function(done) {
        //uncomment below and update the code to test createSnapshotsUsingPOST
        //instance.createSnapshotsUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSnapshotUsingDELETE1', function() {
      it('should call deleteSnapshotUsingDELETE1 successfully', function(done) {
        //uncomment below and update the code to test deleteSnapshotUsingDELETE1
        //instance.deleteSnapshotUsingDELETE1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getLiveSnapshotIdUsingGET', function() {
      it('should call getLiveSnapshotIdUsingGET successfully', function(done) {
        //uncomment below and update the code to test getLiveSnapshotIdUsingGET
        //instance.getLiveSnapshotIdUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSnapshotUsingGET', function() {
      it('should call getSnapshotUsingGET successfully', function(done) {
        //uncomment below and update the code to test getSnapshotUsingGET
        //instance.getSnapshotUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSnapshotsUsingGET', function() {
      it('should call getSnapshotsUsingGET successfully', function(done) {
        //uncomment below and update the code to test getSnapshotsUsingGET
        //instance.getSnapshotsUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSnapshotsUsingGET1', function() {
      it('should call getSnapshotsUsingGET1 successfully', function(done) {
        //uncomment below and update the code to test getSnapshotsUsingGET1
        //instance.getSnapshotsUsingGET1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publishSnapshotUsingPOST1', function() {
      it('should call publishSnapshotUsingPOST1 successfully', function(done) {
        //uncomment below and update the code to test publishSnapshotUsingPOST1
        //instance.publishSnapshotUsingPOST1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('revertToSnapshotUsingPOST', function() {
      it('should call revertToSnapshotUsingPOST successfully', function(done) {
        //uncomment below and update the code to test revertToSnapshotUsingPOST
        //instance.revertToSnapshotUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('unpublishSnapshotUsingPOST', function() {
      it('should call unpublishSnapshotUsingPOST successfully', function(done) {
        //uncomment below and update the code to test unpublishSnapshotUsingPOST
        //instance.unpublishSnapshotUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
