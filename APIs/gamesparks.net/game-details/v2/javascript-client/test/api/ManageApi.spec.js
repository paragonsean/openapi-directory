/**
 * GameSparks Game Details API
 * The API to manage the GameSparks game details
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GameSparksGameDetailsApi);
  }
}(this, function(expect, GameSparksGameDetailsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GameSparksGameDetailsApi.ManageApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ManageApi', function() {
    describe('copySnapshotToExistingGameUsingPOST', function() {
      it('should call copySnapshotToExistingGameUsingPOST successfully', function(done) {
        //uncomment below and update the code to test copySnapshotToExistingGameUsingPOST
        //instance.copySnapshotToExistingGameUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createQueryUsingPOST', function() {
      it('should call createQueryUsingPOST successfully', function(done) {
        //uncomment below and update the code to test createQueryUsingPOST
        //instance.createQueryUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createScreenUsingPOST', function() {
      it('should call createScreenUsingPOST successfully', function(done) {
        //uncomment below and update the code to test createScreenUsingPOST
        //instance.createScreenUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSnapshotUsingPOST', function() {
      it('should call createSnapshotUsingPOST successfully', function(done) {
        //uncomment below and update the code to test createSnapshotUsingPOST
        //instance.createSnapshotUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('createSnippetUsingPOST', function() {
      it('should call createSnippetUsingPOST successfully', function(done) {
        //uncomment below and update the code to test createSnippetUsingPOST
        //instance.createSnippetUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteQueryUsingDELETE', function() {
      it('should call deleteQueryUsingDELETE successfully', function(done) {
        //uncomment below and update the code to test deleteQueryUsingDELETE
        //instance.deleteQueryUsingDELETE(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteScreenUsingDELETE', function() {
      it('should call deleteScreenUsingDELETE successfully', function(done) {
        //uncomment below and update the code to test deleteScreenUsingDELETE
        //instance.deleteScreenUsingDELETE(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSnapshotUsingDELETE', function() {
      it('should call deleteSnapshotUsingDELETE successfully', function(done) {
        //uncomment below and update the code to test deleteSnapshotUsingDELETE
        //instance.deleteSnapshotUsingDELETE(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('deleteSnippetUsingDELETE', function() {
      it('should call deleteSnippetUsingDELETE successfully', function(done) {
        //uncomment below and update the code to test deleteSnippetUsingDELETE
        //instance.deleteSnippetUsingDELETE(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getQueryUsingGET', function() {
      it('should call getQueryUsingGET successfully', function(done) {
        //uncomment below and update the code to test getQueryUsingGET
        //instance.getQueryUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getScreenUsingGET', function() {
      it('should call getScreenUsingGET successfully', function(done) {
        //uncomment below and update the code to test getScreenUsingGET
        //instance.getScreenUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('getSnippetUsingGET', function() {
      it('should call getSnippetUsingGET successfully', function(done) {
        //uncomment below and update the code to test getSnippetUsingGET
        //instance.getSnippetUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listExecutableScreensUsingGET', function() {
      it('should call listExecutableScreensUsingGET successfully', function(done) {
        //uncomment below and update the code to test listExecutableScreensUsingGET
        //instance.listExecutableScreensUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listQueriesUsingGET', function() {
      it('should call listQueriesUsingGET successfully', function(done) {
        //uncomment below and update the code to test listQueriesUsingGET
        //instance.listQueriesUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listScreensUsingGET', function() {
      it('should call listScreensUsingGET successfully', function(done) {
        //uncomment below and update the code to test listScreensUsingGET
        //instance.listScreensUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSnapshotsUsingGET', function() {
      it('should call listSnapshotsUsingGET successfully', function(done) {
        //uncomment below and update the code to test listSnapshotsUsingGET
        //instance.listSnapshotsUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listSnippetsUsingGET', function() {
      it('should call listSnippetsUsingGET successfully', function(done) {
        //uncomment below and update the code to test listSnippetsUsingGET
        //instance.listSnippetsUsingGET(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('publishSnapshotUsingPOST', function() {
      it('should call publishSnapshotUsingPOST successfully', function(done) {
        //uncomment below and update the code to test publishSnapshotUsingPOST
        //instance.publishSnapshotUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('revertSnapshotUsingPOST', function() {
      it('should call revertSnapshotUsingPOST successfully', function(done) {
        //uncomment below and update the code to test revertSnapshotUsingPOST
        //instance.revertSnapshotUsingPOST(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateQueryUsingPUT', function() {
      it('should call updateQueryUsingPUT successfully', function(done) {
        //uncomment below and update the code to test updateQueryUsingPUT
        //instance.updateQueryUsingPUT(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateScreenUsingPUT', function() {
      it('should call updateScreenUsingPUT successfully', function(done) {
        //uncomment below and update the code to test updateScreenUsingPUT
        //instance.updateScreenUsingPUT(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('updateSnippetUsingPUT', function() {
      it('should call updateSnippetUsingPUT successfully', function(done) {
        //uncomment below and update the code to test updateSnippetUsingPUT
        //instance.updateSnippetUsingPUT(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
