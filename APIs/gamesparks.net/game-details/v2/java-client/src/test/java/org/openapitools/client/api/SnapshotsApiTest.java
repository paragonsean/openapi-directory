/*
 * GameSparks Game Details API
 * The API to manage the GameSparks game details
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.MessageModel;
import org.openapitools.client.model.SnapshotCreationModel;
import org.openapitools.client.model.SnapshotCreationSuccessModel;
import org.openapitools.client.model.SnapshotModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SnapshotsApi
 */
@Disabled
public class SnapshotsApiTest {

    private final SnapshotsApi api = new SnapshotsApi();

    /**
     * copySnapshotToExistingGame
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void copySnapshotToExistingGameUsingPOST1Test() throws ApiException {
        String apiKey = null;
        String snapshotId = null;
        String targetApiKey = null;
        Boolean includeGameConfig = null;
        Boolean includeMetadata = null;
        Boolean includeBinaries = null;
        Boolean includeCollaborators = null;
        SnapshotCreationSuccessModel response = api.copySnapshotToExistingGameUsingPOST1(apiKey, snapshotId, targetApiKey, includeGameConfig, includeMetadata, includeBinaries, includeCollaborators);
        // TODO: test validations
    }

    /**
     * copySnapshotToNewGame
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void copySnapshotToNewGameUsingPOSTTest() throws ApiException {
        String apiKey = null;
        String snapshotId = null;
        Boolean includeGameConfig = null;
        Boolean includeMetadata = null;
        Boolean includeBinaries = null;
        Boolean includeCollaborators = null;
        SnapshotCreationSuccessModel response = api.copySnapshotToNewGameUsingPOST(apiKey, snapshotId, includeGameConfig, includeMetadata, includeBinaries, includeCollaborators);
        // TODO: test validations
    }

    /**
     * createSnapshots
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createSnapshotsUsingPOSTTest() throws ApiException {
        String apiKey = null;
        SnapshotCreationModel snapshotCreationModel = null;
        SnapshotModel response = api.createSnapshotsUsingPOST(apiKey, snapshotCreationModel);
        // TODO: test validations
    }

    /**
     * deleteSnapshot
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteSnapshotUsingDELETE1Test() throws ApiException {
        String apiKey = null;
        String snapshotId = null;
        MessageModel response = api.deleteSnapshotUsingDELETE1(apiKey, snapshotId);
        // TODO: test validations
    }

    /**
     * getLiveSnapshotId
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLiveSnapshotIdUsingGETTest() throws ApiException {
        String apiKey = null;
        MessageModel response = api.getLiveSnapshotIdUsingGET(apiKey);
        // TODO: test validations
    }

    /**
     * getSnapshot
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSnapshotUsingGETTest() throws ApiException {
        String apiKey = null;
        String snapshotId = null;
        SnapshotModel response = api.getSnapshotUsingGET(apiKey, snapshotId);
        // TODO: test validations
    }

    /**
     * getSnapshots
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSnapshotsUsingGETTest() throws ApiException {
        String apiKey = null;
        Integer page = null;
        Integer pageSize = null;
        List<SnapshotModel> response = api.getSnapshotsUsingGET(apiKey, page, pageSize);
        // TODO: test validations
    }

    /**
     * getSnapshots
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getSnapshotsUsingGET1Test() throws ApiException {
        String apiKey = null;
        Integer pageSize = null;
        List<SnapshotModel> response = api.getSnapshotsUsingGET1(apiKey, pageSize);
        // TODO: test validations
    }

    /**
     * publishSnapshot
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void publishSnapshotUsingPOST1Test() throws ApiException {
        String apiKey = null;
        String snapshotId = null;
        api.publishSnapshotUsingPOST1(apiKey, snapshotId);
        // TODO: test validations
    }

    /**
     * revertToSnapshot
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void revertToSnapshotUsingPOSTTest() throws ApiException {
        String apiKey = null;
        String snapshotId = null;
        MessageModel response = api.revertToSnapshotUsingPOST(apiKey, snapshotId);
        // TODO: test validations
    }

    /**
     * unpublishSnapshot
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void unpublishSnapshotUsingPOSTTest() throws ApiException {
        String apiKey = null;
        String snapshotId = null;
        MessageModel response = api.unpublishSnapshotUsingPOST(apiKey, snapshotId);
        // TODO: test validations
    }

}
