/*
 * GameSparks Game Details API
 * The API to manage the GameSparks game details
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.MessageModel;
import org.openapitools.client.model.PushNotificationTestModel;
import org.openapitools.client.model.PushNotificationTestSummaryListModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for PushNotificationTestApi
 */
@Disabled
public class PushNotificationTestApiTest {

    private final PushNotificationTestApi api = new PushNotificationTestApi();

    /**
     * testPushAmazonNotifications
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void testPushAmazonNotificationsUsingPOSTTest() throws ApiException {
        String apiKey = null;
        PushNotificationTestModel pushNotificationTestModel = null;
        PushNotificationTestSummaryListModel response = api.testPushAmazonNotificationsUsingPOST(apiKey, pushNotificationTestModel);
        // TODO: test validations
    }

    /**
     * testPushAppleDevNotifications
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void testPushAppleDevNotificationsUsingPOSTTest() throws ApiException {
        String apiKey = null;
        PushNotificationTestModel pushNotificationTestModel = null;
        PushNotificationTestSummaryListModel response = api.testPushAppleDevNotificationsUsingPOST(apiKey, pushNotificationTestModel);
        // TODO: test validations
    }

    /**
     * testPushAppleProdNotifications
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void testPushAppleProdNotificationsUsingPOSTTest() throws ApiException {
        String apiKey = null;
        PushNotificationTestModel pushNotificationTestModel = null;
        PushNotificationTestSummaryListModel response = api.testPushAppleProdNotificationsUsingPOST(apiKey, pushNotificationTestModel);
        // TODO: test validations
    }

    /**
     * testPushGoogleNotifications
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void testPushGoogleNotificationsUsingPOSTTest() throws ApiException {
        String apiKey = null;
        PushNotificationTestModel pushNotificationTestModel = null;
        PushNotificationTestSummaryListModel response = api.testPushGoogleNotificationsUsingPOST(apiKey, pushNotificationTestModel);
        // TODO: test validations
    }

    /**
     * testViberIntegrationNotifications
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void testViberIntegrationNotificationsUsingPOSTTest() throws ApiException {
        String apiKey = null;
        PushNotificationTestModel pushNotificationTestModel = null;
        PushNotificationTestSummaryListModel response = api.testViberIntegrationNotificationsUsingPOST(apiKey, pushNotificationTestModel);
        // TODO: test validations
    }

    /**
     * testViberProductionNotifications
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void testViberProductionNotificationsUsingPOSTTest() throws ApiException {
        String apiKey = null;
        PushNotificationTestModel pushNotificationTestModel = null;
        PushNotificationTestSummaryListModel response = api.testViberProductionNotificationsUsingPOST(apiKey, pushNotificationTestModel);
        // TODO: test validations
    }

    /**
     * testWindows8Notifications
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void testWindows8NotificationsUsingPOSTTest() throws ApiException {
        String apiKey = null;
        PushNotificationTestModel pushNotificationTestModel = null;
        PushNotificationTestSummaryListModel response = api.testWindows8NotificationsUsingPOST(apiKey, pushNotificationTestModel);
        // TODO: test validations
    }

    /**
     * testWindowsPhone8Notifications
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void testWindowsPhone8NotificationsUsingPOSTTest() throws ApiException {
        String apiKey = null;
        PushNotificationTestModel pushNotificationTestModel = null;
        PushNotificationTestSummaryListModel response = api.testWindowsPhone8NotificationsUsingPOST(apiKey, pushNotificationTestModel);
        // TODO: test validations
    }

}
