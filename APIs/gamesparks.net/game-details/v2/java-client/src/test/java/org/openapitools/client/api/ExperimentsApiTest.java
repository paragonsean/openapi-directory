/*
 * GameSparks Game Details API
 * The API to manage the GameSparks game details
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.ExperimentModel;
import org.openapitools.client.model.MessageModel;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ExperimentsApi
 */
@Disabled
public class ExperimentsApiTest {

    private final ExperimentsApi api = new ExperimentsApi();

    /**
     * createExperiment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createExperimentUsingPOSTTest() throws ApiException {
        String apiKey = null;
        ExperimentModel experimentModel = null;
        ExperimentModel response = api.createExperimentUsingPOST(apiKey, experimentModel);
        // TODO: test validations
    }

    /**
     * deleteExperiment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteExperimentUsingDELETETest() throws ApiException {
        String apiKey = null;
        Long id = null;
        MessageModel response = api.deleteExperimentUsingDELETE(apiKey, id);
        // TODO: test validations
    }

    /**
     * doActionExperiment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void doActionExperimentUsingPOSTTest() throws ApiException {
        String apiKey = null;
        Long id = null;
        String action = null;
        ExperimentModel response = api.doActionExperimentUsingPOST(apiKey, id, action);
        // TODO: test validations
    }

    /**
     * getExperiment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExperimentUsingGETTest() throws ApiException {
        String apiKey = null;
        Long id = null;
        ExperimentModel response = api.getExperimentUsingGET(apiKey, id);
        // TODO: test validations
    }

    /**
     * getExperiments
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getExperimentsUsingGETTest() throws ApiException {
        String apiKey = null;
        List<ExperimentModel> response = api.getExperimentsUsingGET(apiKey);
        // TODO: test validations
    }

    /**
     * updateExperiment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateExperimentUsingPUTTest() throws ApiException {
        String apiKey = null;
        Long id = null;
        ExperimentModel experimentModel = null;
        ExperimentModel response = api.updateExperimentUsingPUT(apiKey, id, experimentModel);
        // TODO: test validations
    }

}
