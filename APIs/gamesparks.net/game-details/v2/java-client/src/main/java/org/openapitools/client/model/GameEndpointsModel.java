/*
 * GameSparks Game Details API
 * The API to manage the GameSparks game details
 *
 * The version of the OpenAPI document: v2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GameEndpointsModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:28:11.072846-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GameEndpointsModel {
  public static final String SERIALIZED_NAME_LIVE_ELASTIC_SEARCH = "liveElasticSearch";
  @SerializedName(SERIALIZED_NAME_LIVE_ELASTIC_SEARCH)
  private String liveElasticSearch;

  public static final String SERIALIZED_NAME_LIVE_NOSQL = "liveNosql";
  @SerializedName(SERIALIZED_NAME_LIVE_NOSQL)
  private String liveNosql;

  public static final String SERIALIZED_NAME_PREVIEW_ELASTIC_SEARCH = "previewElasticSearch";
  @SerializedName(SERIALIZED_NAME_PREVIEW_ELASTIC_SEARCH)
  private String previewElasticSearch;

  public static final String SERIALIZED_NAME_PREVIEW_NOSQL = "previewNosql";
  @SerializedName(SERIALIZED_NAME_PREVIEW_NOSQL)
  private String previewNosql;

  public GameEndpointsModel() {
  }

  public GameEndpointsModel liveElasticSearch(String liveElasticSearch) {
    this.liveElasticSearch = liveElasticSearch;
    return this;
  }

  /**
   * Get liveElasticSearch
   * @return liveElasticSearch
   */
  @javax.annotation.Nullable
  public String getLiveElasticSearch() {
    return liveElasticSearch;
  }

  public void setLiveElasticSearch(String liveElasticSearch) {
    this.liveElasticSearch = liveElasticSearch;
  }


  public GameEndpointsModel liveNosql(String liveNosql) {
    this.liveNosql = liveNosql;
    return this;
  }

  /**
   * Get liveNosql
   * @return liveNosql
   */
  @javax.annotation.Nullable
  public String getLiveNosql() {
    return liveNosql;
  }

  public void setLiveNosql(String liveNosql) {
    this.liveNosql = liveNosql;
  }


  public GameEndpointsModel previewElasticSearch(String previewElasticSearch) {
    this.previewElasticSearch = previewElasticSearch;
    return this;
  }

  /**
   * Get previewElasticSearch
   * @return previewElasticSearch
   */
  @javax.annotation.Nullable
  public String getPreviewElasticSearch() {
    return previewElasticSearch;
  }

  public void setPreviewElasticSearch(String previewElasticSearch) {
    this.previewElasticSearch = previewElasticSearch;
  }


  public GameEndpointsModel previewNosql(String previewNosql) {
    this.previewNosql = previewNosql;
    return this;
  }

  /**
   * Get previewNosql
   * @return previewNosql
   */
  @javax.annotation.Nullable
  public String getPreviewNosql() {
    return previewNosql;
  }

  public void setPreviewNosql(String previewNosql) {
    this.previewNosql = previewNosql;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GameEndpointsModel gameEndpointsModel = (GameEndpointsModel) o;
    return Objects.equals(this.liveElasticSearch, gameEndpointsModel.liveElasticSearch) &&
        Objects.equals(this.liveNosql, gameEndpointsModel.liveNosql) &&
        Objects.equals(this.previewElasticSearch, gameEndpointsModel.previewElasticSearch) &&
        Objects.equals(this.previewNosql, gameEndpointsModel.previewNosql);
  }

  @Override
  public int hashCode() {
    return Objects.hash(liveElasticSearch, liveNosql, previewElasticSearch, previewNosql);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GameEndpointsModel {\n");
    sb.append("    liveElasticSearch: ").append(toIndentedString(liveElasticSearch)).append("\n");
    sb.append("    liveNosql: ").append(toIndentedString(liveNosql)).append("\n");
    sb.append("    previewElasticSearch: ").append(toIndentedString(previewElasticSearch)).append("\n");
    sb.append("    previewNosql: ").append(toIndentedString(previewNosql)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("liveElasticSearch");
    openapiFields.add("liveNosql");
    openapiFields.add("previewElasticSearch");
    openapiFields.add("previewNosql");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GameEndpointsModel
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GameEndpointsModel.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GameEndpointsModel is not found in the empty JSON string", GameEndpointsModel.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GameEndpointsModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GameEndpointsModel` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("liveElasticSearch") != null && !jsonObj.get("liveElasticSearch").isJsonNull()) && !jsonObj.get("liveElasticSearch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `liveElasticSearch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("liveElasticSearch").toString()));
      }
      if ((jsonObj.get("liveNosql") != null && !jsonObj.get("liveNosql").isJsonNull()) && !jsonObj.get("liveNosql").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `liveNosql` to be a primitive type in the JSON string but got `%s`", jsonObj.get("liveNosql").toString()));
      }
      if ((jsonObj.get("previewElasticSearch") != null && !jsonObj.get("previewElasticSearch").isJsonNull()) && !jsonObj.get("previewElasticSearch").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `previewElasticSearch` to be a primitive type in the JSON string but got `%s`", jsonObj.get("previewElasticSearch").toString()));
      }
      if ((jsonObj.get("previewNosql") != null && !jsonObj.get("previewNosql").isJsonNull()) && !jsonObj.get("previewNosql").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `previewNosql` to be a primitive type in the JSON string but got `%s`", jsonObj.get("previewNosql").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GameEndpointsModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GameEndpointsModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GameEndpointsModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GameEndpointsModel.class));

       return (TypeAdapter<T>) new TypeAdapter<GameEndpointsModel>() {
           @Override
           public void write(JsonWriter out, GameEndpointsModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GameEndpointsModel read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GameEndpointsModel given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GameEndpointsModel
   * @throws IOException if the JSON string is invalid with respect to GameEndpointsModel
   */
  public static GameEndpointsModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GameEndpointsModel.class);
  }

  /**
   * Convert an instance of GameEndpointsModel to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

