/**
 * Product Library API
 * The Product Library API is used for managing merchant's product information and product images.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ProductCountResponse model module.
 * @module model/ProductCountResponse
 * @version 1.0.0
 */
class ProductCountResponse {
    /**
     * Constructs a new <code>ProductCountResponse</code>.
     * @alias module:model/ProductCountResponse
     * @param productCount {Number} 
     */
    constructor(productCount) { 
        
        ProductCountResponse.initialize(this, productCount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, productCount) { 
        obj['productCount'] = productCount;
    }

    /**
     * Constructs a <code>ProductCountResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ProductCountResponse} obj Optional instance to populate.
     * @return {module:model/ProductCountResponse} The populated <code>ProductCountResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ProductCountResponse();

            if (data.hasOwnProperty('productCount')) {
                obj['productCount'] = ApiClient.convertToType(data['productCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ProductCountResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ProductCountResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ProductCountResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

ProductCountResponse.RequiredProperties = ["productCount"];

/**
 * @member {Number} productCount
 */
ProductCountResponse.prototype['productCount'] = undefined;






export default ProductCountResponse;

