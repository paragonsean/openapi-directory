/**
 * Product Library API
 * The Product Library API is used for managing merchant's product information and product images.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import BulkImportRequest from './model/BulkImportRequest';
import CategoryDTO from './model/CategoryDTO';
import CategoryResponse from './model/CategoryResponse';
import ConstraintViolation from './model/ConstraintViolation';
import CreateCategoriesRequest from './model/CreateCategoriesRequest';
import CreateSlugRequest from './model/CreateSlugRequest';
import DiscountRequest from './model/DiscountRequest';
import DiscountResponse from './model/DiscountResponse';
import ErrorResponse from './model/ErrorResponse';
import FullProductUpdateRequest from './model/FullProductUpdateRequest';
import ImportResponse from './model/ImportResponse';
import LibraryImagesResponse from './model/LibraryImagesResponse';
import LibraryResponse from './model/LibraryResponse';
import MetadataDTO from './model/MetadataDTO';
import OnlineProperties from './model/OnlineProperties';
import Option from './model/Option';
import Presentation from './model/Presentation';
import PresentationDTO from './model/PresentationDTO';
import Price from './model/Price';
import ProductCountResponse from './model/ProductCountResponse';
import ProductCreateRequest from './model/ProductCreateRequest';
import ProductResponse from './model/ProductResponse';
import RenameCategoryRequest from './model/RenameCategoryRequest';
import SearchEngineOptimization from './model/SearchEngineOptimization';
import Shipping from './model/Shipping';
import SlugResponse from './model/SlugResponse';
import SourceDTO from './model/SourceDTO';
import TaxRate from './model/TaxRate';
import TaxRateProductCount from './model/TaxRateProductCount';
import TaxRateProductCountResponse from './model/TaxRateProductCountResponse';
import TaxRateUpdateRequest from './model/TaxRateUpdateRequest';
import TaxRatesCreateRequest from './model/TaxRatesCreateRequest';
import TaxRatesResponse from './model/TaxRatesResponse';
import TaxSettingsResponse from './model/TaxSettingsResponse';
import TaxSettingsUpdateRequest from './model/TaxSettingsUpdateRequest';
import VariantDTO from './model/VariantDTO';
import VariantOption from './model/VariantOption';
import VariantOptionDefinition from './model/VariantOptionDefinition';
import VariantOptionDefinitions from './model/VariantOptionDefinitions';
import VariantOptionProperties from './model/VariantOptionProperties';
import VariantOptionsResponse from './model/VariantOptionsResponse';
import Weight from './model/Weight';
import CategoriesApi from './api/CategoriesApi';
import DiscountsApi from './api/DiscountsApi';
import ImagesApi from './api/ImagesApi';
import ImportApi from './api/ImportApi';
import LibraryApi from './api/LibraryApi';
import ProductsApi from './api/ProductsApi';
import ProductsOnlineApi from './api/ProductsOnlineApi';
import TaxesApi from './api/TaxesApi';


/**
* The Product Library API is used for managing merchant&#39;s product information and product images..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var ProductLibraryApi = require('index'); // See note below*.
* var xxxSvc = new ProductLibraryApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new ProductLibraryApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new ProductLibraryApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new ProductLibraryApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 1.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The BulkImportRequest model constructor.
     * @property {module:model/BulkImportRequest}
     */
    BulkImportRequest,

    /**
     * The CategoryDTO model constructor.
     * @property {module:model/CategoryDTO}
     */
    CategoryDTO,

    /**
     * The CategoryResponse model constructor.
     * @property {module:model/CategoryResponse}
     */
    CategoryResponse,

    /**
     * The ConstraintViolation model constructor.
     * @property {module:model/ConstraintViolation}
     */
    ConstraintViolation,

    /**
     * The CreateCategoriesRequest model constructor.
     * @property {module:model/CreateCategoriesRequest}
     */
    CreateCategoriesRequest,

    /**
     * The CreateSlugRequest model constructor.
     * @property {module:model/CreateSlugRequest}
     */
    CreateSlugRequest,

    /**
     * The DiscountRequest model constructor.
     * @property {module:model/DiscountRequest}
     */
    DiscountRequest,

    /**
     * The DiscountResponse model constructor.
     * @property {module:model/DiscountResponse}
     */
    DiscountResponse,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The FullProductUpdateRequest model constructor.
     * @property {module:model/FullProductUpdateRequest}
     */
    FullProductUpdateRequest,

    /**
     * The ImportResponse model constructor.
     * @property {module:model/ImportResponse}
     */
    ImportResponse,

    /**
     * The LibraryImagesResponse model constructor.
     * @property {module:model/LibraryImagesResponse}
     */
    LibraryImagesResponse,

    /**
     * The LibraryResponse model constructor.
     * @property {module:model/LibraryResponse}
     */
    LibraryResponse,

    /**
     * The MetadataDTO model constructor.
     * @property {module:model/MetadataDTO}
     */
    MetadataDTO,

    /**
     * The OnlineProperties model constructor.
     * @property {module:model/OnlineProperties}
     */
    OnlineProperties,

    /**
     * The Option model constructor.
     * @property {module:model/Option}
     */
    Option,

    /**
     * The Presentation model constructor.
     * @property {module:model/Presentation}
     */
    Presentation,

    /**
     * The PresentationDTO model constructor.
     * @property {module:model/PresentationDTO}
     */
    PresentationDTO,

    /**
     * The Price model constructor.
     * @property {module:model/Price}
     */
    Price,

    /**
     * The ProductCountResponse model constructor.
     * @property {module:model/ProductCountResponse}
     */
    ProductCountResponse,

    /**
     * The ProductCreateRequest model constructor.
     * @property {module:model/ProductCreateRequest}
     */
    ProductCreateRequest,

    /**
     * The ProductResponse model constructor.
     * @property {module:model/ProductResponse}
     */
    ProductResponse,

    /**
     * The RenameCategoryRequest model constructor.
     * @property {module:model/RenameCategoryRequest}
     */
    RenameCategoryRequest,

    /**
     * The SearchEngineOptimization model constructor.
     * @property {module:model/SearchEngineOptimization}
     */
    SearchEngineOptimization,

    /**
     * The Shipping model constructor.
     * @property {module:model/Shipping}
     */
    Shipping,

    /**
     * The SlugResponse model constructor.
     * @property {module:model/SlugResponse}
     */
    SlugResponse,

    /**
     * The SourceDTO model constructor.
     * @property {module:model/SourceDTO}
     */
    SourceDTO,

    /**
     * The TaxRate model constructor.
     * @property {module:model/TaxRate}
     */
    TaxRate,

    /**
     * The TaxRateProductCount model constructor.
     * @property {module:model/TaxRateProductCount}
     */
    TaxRateProductCount,

    /**
     * The TaxRateProductCountResponse model constructor.
     * @property {module:model/TaxRateProductCountResponse}
     */
    TaxRateProductCountResponse,

    /**
     * The TaxRateUpdateRequest model constructor.
     * @property {module:model/TaxRateUpdateRequest}
     */
    TaxRateUpdateRequest,

    /**
     * The TaxRatesCreateRequest model constructor.
     * @property {module:model/TaxRatesCreateRequest}
     */
    TaxRatesCreateRequest,

    /**
     * The TaxRatesResponse model constructor.
     * @property {module:model/TaxRatesResponse}
     */
    TaxRatesResponse,

    /**
     * The TaxSettingsResponse model constructor.
     * @property {module:model/TaxSettingsResponse}
     */
    TaxSettingsResponse,

    /**
     * The TaxSettingsUpdateRequest model constructor.
     * @property {module:model/TaxSettingsUpdateRequest}
     */
    TaxSettingsUpdateRequest,

    /**
     * The VariantDTO model constructor.
     * @property {module:model/VariantDTO}
     */
    VariantDTO,

    /**
     * The VariantOption model constructor.
     * @property {module:model/VariantOption}
     */
    VariantOption,

    /**
     * The VariantOptionDefinition model constructor.
     * @property {module:model/VariantOptionDefinition}
     */
    VariantOptionDefinition,

    /**
     * The VariantOptionDefinitions model constructor.
     * @property {module:model/VariantOptionDefinitions}
     */
    VariantOptionDefinitions,

    /**
     * The VariantOptionProperties model constructor.
     * @property {module:model/VariantOptionProperties}
     */
    VariantOptionProperties,

    /**
     * The VariantOptionsResponse model constructor.
     * @property {module:model/VariantOptionsResponse}
     */
    VariantOptionsResponse,

    /**
     * The Weight model constructor.
     * @property {module:model/Weight}
     */
    Weight,

    /**
    * The CategoriesApi service constructor.
    * @property {module:api/CategoriesApi}
    */
    CategoriesApi,

    /**
    * The DiscountsApi service constructor.
    * @property {module:api/DiscountsApi}
    */
    DiscountsApi,

    /**
    * The ImagesApi service constructor.
    * @property {module:api/ImagesApi}
    */
    ImagesApi,

    /**
    * The ImportApi service constructor.
    * @property {module:api/ImportApi}
    */
    ImportApi,

    /**
    * The LibraryApi service constructor.
    * @property {module:api/LibraryApi}
    */
    LibraryApi,

    /**
    * The ProductsApi service constructor.
    * @property {module:api/ProductsApi}
    */
    ProductsApi,

    /**
    * The ProductsOnlineApi service constructor.
    * @property {module:api/ProductsOnlineApi}
    */
    ProductsOnlineApi,

    /**
    * The TaxesApi service constructor.
    * @property {module:api/TaxesApi}
    */
    TaxesApi
};
