/**
 * Product Library API
 * The Product Library API is used for managing merchant's product information and product images.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import CreateSlugRequest from '../model/CreateSlugRequest';
import SlugResponse from '../model/SlugResponse';

/**
* ProductsOnline service.
* @module api/ProductsOnlineApi
* @version 1.0.0
*/
export default class ProductsOnlineApi {

    /**
    * Constructs a new ProductsOnlineApi. 
    * @alias module:api/ProductsOnlineApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the createProductSlug operation.
     * @callback module:api/ProductsOnlineApi~createProductSlugCallback
     * @param {String} error Error message, if any.
     * @param {module:model/SlugResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a product identifier
     * Creates a unique slug (identifier) for a product. The slug is used to create a product URL
     * @param {String} organizationUuid 
     * @param {module:model/CreateSlugRequest} createSlugRequest 
     * @param {module:api/ProductsOnlineApi~createProductSlugCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/SlugResponse}
     */
    createProductSlug(organizationUuid, createSlugRequest, callback) {
      let postBody = createSlugRequest;
      // verify the required parameter 'organizationUuid' is set
      if (organizationUuid === undefined || organizationUuid === null) {
        throw new Error("Missing the required parameter 'organizationUuid' when calling createProductSlug");
      }
      // verify the required parameter 'createSlugRequest' is set
      if (createSlugRequest === undefined || createSlugRequest === null) {
        throw new Error("Missing the required parameter 'createSlugRequest' when calling createProductSlug");
      }

      let pathParams = {
        'organizationUuid': organizationUuid
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ZettleOauth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = SlugResponse;
      return this.apiClient.callApi(
        '/organizations/{organizationUuid}/products/online/slug', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
