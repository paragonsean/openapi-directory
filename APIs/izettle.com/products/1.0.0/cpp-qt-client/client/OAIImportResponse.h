/**
 * Product Library API
 * The Product Library API is used for managing merchant's product information and product images.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImportResponse.h
 *
 * 
 */

#ifndef OAIImportResponse_H
#define OAIImportResponse_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIImportResponse : public OAIObject {
public:
    OAIImportResponse();
    OAIImportResponse(QString json);
    ~OAIImportResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreated() const;
    void setCreated(const QDateTime &created);
    bool is_created_Set() const;
    bool is_created_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    QDateTime getFinished() const;
    void setFinished(const QDateTime &finished);
    bool is_finished_Set() const;
    bool is_finished_Valid() const;

    qint64 getItems() const;
    void setItems(const qint64 &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getUuid() const;
    void setUuid(const QString &uuid);
    bool is_uuid_Set() const;
    bool is_uuid_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_created;
    bool m_created_isSet;
    bool m_created_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    QDateTime m_finished;
    bool m_finished_isSet;
    bool m_finished_isValid;

    qint64 m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_uuid;
    bool m_uuid_isSet;
    bool m_uuid_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImportResponse)

#endif // OAIImportResponse_H
