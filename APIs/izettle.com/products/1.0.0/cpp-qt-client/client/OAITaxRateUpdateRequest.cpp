/**
 * Product Library API
 * The Product Library API is used for managing merchant's product information and product images.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITaxRateUpdateRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITaxRateUpdateRequest::OAITaxRateUpdateRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITaxRateUpdateRequest::OAITaxRateUpdateRequest() {
    this->initializeModel();
}

OAITaxRateUpdateRequest::~OAITaxRateUpdateRequest() {}

void OAITaxRateUpdateRequest::initializeModel() {

    m_r_default_isSet = false;
    m_r_default_isValid = false;

    m_label_isSet = false;
    m_label_isValid = false;

    m_percentage_isSet = false;
    m_percentage_isValid = false;
}

void OAITaxRateUpdateRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITaxRateUpdateRequest::fromJsonObject(QJsonObject json) {

    m_r_default_isValid = ::OpenAPI::fromJsonValue(m_r_default, json[QString("default")]);
    m_r_default_isSet = !json[QString("default")].isNull() && m_r_default_isValid;

    m_label_isValid = ::OpenAPI::fromJsonValue(m_label, json[QString("label")]);
    m_label_isSet = !json[QString("label")].isNull() && m_label_isValid;

    m_percentage_isValid = ::OpenAPI::fromJsonValue(m_percentage, json[QString("percentage")]);
    m_percentage_isSet = !json[QString("percentage")].isNull() && m_percentage_isValid;
}

QString OAITaxRateUpdateRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITaxRateUpdateRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_r_default_isSet) {
        obj.insert(QString("default"), ::OpenAPI::toJsonValue(m_r_default));
    }
    if (m_label_isSet) {
        obj.insert(QString("label"), ::OpenAPI::toJsonValue(m_label));
    }
    if (m_percentage_isSet) {
        obj.insert(QString("percentage"), ::OpenAPI::toJsonValue(m_percentage));
    }
    return obj;
}

bool OAITaxRateUpdateRequest::isRDefault() const {
    return m_r_default;
}
void OAITaxRateUpdateRequest::setRDefault(const bool &r_default) {
    m_r_default = r_default;
    m_r_default_isSet = true;
}

bool OAITaxRateUpdateRequest::is_r_default_Set() const{
    return m_r_default_isSet;
}

bool OAITaxRateUpdateRequest::is_r_default_Valid() const{
    return m_r_default_isValid;
}

QString OAITaxRateUpdateRequest::getLabel() const {
    return m_label;
}
void OAITaxRateUpdateRequest::setLabel(const QString &label) {
    m_label = label;
    m_label_isSet = true;
}

bool OAITaxRateUpdateRequest::is_label_Set() const{
    return m_label_isSet;
}

bool OAITaxRateUpdateRequest::is_label_Valid() const{
    return m_label_isValid;
}

double OAITaxRateUpdateRequest::getPercentage() const {
    return m_percentage;
}
void OAITaxRateUpdateRequest::setPercentage(const double &percentage) {
    m_percentage = percentage;
    m_percentage_isSet = true;
}

bool OAITaxRateUpdateRequest::is_percentage_Set() const{
    return m_percentage_isSet;
}

bool OAITaxRateUpdateRequest::is_percentage_Valid() const{
    return m_percentage_isValid;
}

bool OAITaxRateUpdateRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_r_default_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_label_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITaxRateUpdateRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
