/**
 * Product Library API
 * The Product Library API is used for managing merchant's product information and product images.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILibraryResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILibraryResponse::OAILibraryResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILibraryResponse::OAILibraryResponse() {
    this->initializeModel();
}

OAILibraryResponse::~OAILibraryResponse() {}

void OAILibraryResponse::initializeModel() {

    m_deleted_discounts_isSet = false;
    m_deleted_discounts_isValid = false;

    m_deleted_products_isSet = false;
    m_deleted_products_isValid = false;

    m_discounts_isSet = false;
    m_discounts_isValid = false;

    m_from_event_log_uuid_isSet = false;
    m_from_event_log_uuid_isValid = false;

    m_products_isSet = false;
    m_products_isValid = false;

    m_until_event_log_uuid_isSet = false;
    m_until_event_log_uuid_isValid = false;
}

void OAILibraryResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILibraryResponse::fromJsonObject(QJsonObject json) {

    m_deleted_discounts_isValid = ::OpenAPI::fromJsonValue(m_deleted_discounts, json[QString("deletedDiscounts")]);
    m_deleted_discounts_isSet = !json[QString("deletedDiscounts")].isNull() && m_deleted_discounts_isValid;

    m_deleted_products_isValid = ::OpenAPI::fromJsonValue(m_deleted_products, json[QString("deletedProducts")]);
    m_deleted_products_isSet = !json[QString("deletedProducts")].isNull() && m_deleted_products_isValid;

    m_discounts_isValid = ::OpenAPI::fromJsonValue(m_discounts, json[QString("discounts")]);
    m_discounts_isSet = !json[QString("discounts")].isNull() && m_discounts_isValid;

    m_from_event_log_uuid_isValid = ::OpenAPI::fromJsonValue(m_from_event_log_uuid, json[QString("fromEventLogUuid")]);
    m_from_event_log_uuid_isSet = !json[QString("fromEventLogUuid")].isNull() && m_from_event_log_uuid_isValid;

    m_products_isValid = ::OpenAPI::fromJsonValue(m_products, json[QString("products")]);
    m_products_isSet = !json[QString("products")].isNull() && m_products_isValid;

    m_until_event_log_uuid_isValid = ::OpenAPI::fromJsonValue(m_until_event_log_uuid, json[QString("untilEventLogUuid")]);
    m_until_event_log_uuid_isSet = !json[QString("untilEventLogUuid")].isNull() && m_until_event_log_uuid_isValid;
}

QString OAILibraryResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILibraryResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_deleted_discounts.size() > 0) {
        obj.insert(QString("deletedDiscounts"), ::OpenAPI::toJsonValue(m_deleted_discounts));
    }
    if (m_deleted_products.size() > 0) {
        obj.insert(QString("deletedProducts"), ::OpenAPI::toJsonValue(m_deleted_products));
    }
    if (m_discounts.size() > 0) {
        obj.insert(QString("discounts"), ::OpenAPI::toJsonValue(m_discounts));
    }
    if (m_from_event_log_uuid_isSet) {
        obj.insert(QString("fromEventLogUuid"), ::OpenAPI::toJsonValue(m_from_event_log_uuid));
    }
    if (m_products.size() > 0) {
        obj.insert(QString("products"), ::OpenAPI::toJsonValue(m_products));
    }
    if (m_until_event_log_uuid_isSet) {
        obj.insert(QString("untilEventLogUuid"), ::OpenAPI::toJsonValue(m_until_event_log_uuid));
    }
    return obj;
}

QSet<QString> OAILibraryResponse::getDeletedDiscounts() const {
    return m_deleted_discounts;
}
void OAILibraryResponse::setDeletedDiscounts(const QSet<QString> &deleted_discounts) {
    m_deleted_discounts = deleted_discounts;
    m_deleted_discounts_isSet = true;
}

bool OAILibraryResponse::is_deleted_discounts_Set() const{
    return m_deleted_discounts_isSet;
}

bool OAILibraryResponse::is_deleted_discounts_Valid() const{
    return m_deleted_discounts_isValid;
}

QSet<QString> OAILibraryResponse::getDeletedProducts() const {
    return m_deleted_products;
}
void OAILibraryResponse::setDeletedProducts(const QSet<QString> &deleted_products) {
    m_deleted_products = deleted_products;
    m_deleted_products_isSet = true;
}

bool OAILibraryResponse::is_deleted_products_Set() const{
    return m_deleted_products_isSet;
}

bool OAILibraryResponse::is_deleted_products_Valid() const{
    return m_deleted_products_isValid;
}

QSet<OAIDiscountResponse> OAILibraryResponse::getDiscounts() const {
    return m_discounts;
}
void OAILibraryResponse::setDiscounts(const QSet<OAIDiscountResponse> &discounts) {
    m_discounts = discounts;
    m_discounts_isSet = true;
}

bool OAILibraryResponse::is_discounts_Set() const{
    return m_discounts_isSet;
}

bool OAILibraryResponse::is_discounts_Valid() const{
    return m_discounts_isValid;
}

QString OAILibraryResponse::getFromEventLogUuid() const {
    return m_from_event_log_uuid;
}
void OAILibraryResponse::setFromEventLogUuid(const QString &from_event_log_uuid) {
    m_from_event_log_uuid = from_event_log_uuid;
    m_from_event_log_uuid_isSet = true;
}

bool OAILibraryResponse::is_from_event_log_uuid_Set() const{
    return m_from_event_log_uuid_isSet;
}

bool OAILibraryResponse::is_from_event_log_uuid_Valid() const{
    return m_from_event_log_uuid_isValid;
}

QSet<OAIProductResponse> OAILibraryResponse::getProducts() const {
    return m_products;
}
void OAILibraryResponse::setProducts(const QSet<OAIProductResponse> &products) {
    m_products = products;
    m_products_isSet = true;
}

bool OAILibraryResponse::is_products_Set() const{
    return m_products_isSet;
}

bool OAILibraryResponse::is_products_Valid() const{
    return m_products_isValid;
}

QString OAILibraryResponse::getUntilEventLogUuid() const {
    return m_until_event_log_uuid;
}
void OAILibraryResponse::setUntilEventLogUuid(const QString &until_event_log_uuid) {
    m_until_event_log_uuid = until_event_log_uuid;
    m_until_event_log_uuid_isSet = true;
}

bool OAILibraryResponse::is_until_event_log_uuid_Set() const{
    return m_until_event_log_uuid_isSet;
}

bool OAILibraryResponse::is_until_event_log_uuid_Valid() const{
    return m_until_event_log_uuid_isValid;
}

bool OAILibraryResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_deleted_discounts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_deleted_products.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_discounts.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_from_event_log_uuid_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_products.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_until_event_log_uuid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILibraryResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
