/**
 * Product Library API
 * The Product Library API is used for managing merchant's product information and product images.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDiscountRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDiscountRequest::OAIDiscountRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDiscountRequest::OAIDiscountRequest() {
    this->initializeModel();
}

OAIDiscountRequest::~OAIDiscountRequest() {}

void OAIDiscountRequest::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_external_reference_isSet = false;
    m_external_reference_isValid = false;

    m_image_lookup_keys_isSet = false;
    m_image_lookup_keys_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_percentage_isSet = false;
    m_percentage_isValid = false;

    m_uuid_isSet = false;
    m_uuid_isValid = false;
}

void OAIDiscountRequest::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDiscountRequest::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_external_reference_isValid = ::OpenAPI::fromJsonValue(m_external_reference, json[QString("externalReference")]);
    m_external_reference_isSet = !json[QString("externalReference")].isNull() && m_external_reference_isValid;

    m_image_lookup_keys_isValid = ::OpenAPI::fromJsonValue(m_image_lookup_keys, json[QString("imageLookupKeys")]);
    m_image_lookup_keys_isSet = !json[QString("imageLookupKeys")].isNull() && m_image_lookup_keys_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_percentage_isValid = ::OpenAPI::fromJsonValue(m_percentage, json[QString("percentage")]);
    m_percentage_isSet = !json[QString("percentage")].isNull() && m_percentage_isValid;

    m_uuid_isValid = ::OpenAPI::fromJsonValue(m_uuid, json[QString("uuid")]);
    m_uuid_isSet = !json[QString("uuid")].isNull() && m_uuid_isValid;
}

QString OAIDiscountRequest::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDiscountRequest::asJsonObject() const {
    QJsonObject obj;
    if (m_amount.isSet()) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_external_reference_isSet) {
        obj.insert(QString("externalReference"), ::OpenAPI::toJsonValue(m_external_reference));
    }
    if (m_image_lookup_keys.size() > 0) {
        obj.insert(QString("imageLookupKeys"), ::OpenAPI::toJsonValue(m_image_lookup_keys));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_percentage_isSet) {
        obj.insert(QString("percentage"), ::OpenAPI::toJsonValue(m_percentage));
    }
    if (m_uuid_isSet) {
        obj.insert(QString("uuid"), ::OpenAPI::toJsonValue(m_uuid));
    }
    return obj;
}

OAIPrice OAIDiscountRequest::getAmount() const {
    return m_amount;
}
void OAIDiscountRequest::setAmount(const OAIPrice &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIDiscountRequest::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIDiscountRequest::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAIDiscountRequest::getDescription() const {
    return m_description;
}
void OAIDiscountRequest::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIDiscountRequest::is_description_Set() const{
    return m_description_isSet;
}

bool OAIDiscountRequest::is_description_Valid() const{
    return m_description_isValid;
}

QString OAIDiscountRequest::getExternalReference() const {
    return m_external_reference;
}
void OAIDiscountRequest::setExternalReference(const QString &external_reference) {
    m_external_reference = external_reference;
    m_external_reference_isSet = true;
}

bool OAIDiscountRequest::is_external_reference_Set() const{
    return m_external_reference_isSet;
}

bool OAIDiscountRequest::is_external_reference_Valid() const{
    return m_external_reference_isValid;
}

QSet<QString> OAIDiscountRequest::getImageLookupKeys() const {
    return m_image_lookup_keys;
}
void OAIDiscountRequest::setImageLookupKeys(const QSet<QString> &image_lookup_keys) {
    m_image_lookup_keys = image_lookup_keys;
    m_image_lookup_keys_isSet = true;
}

bool OAIDiscountRequest::is_image_lookup_keys_Set() const{
    return m_image_lookup_keys_isSet;
}

bool OAIDiscountRequest::is_image_lookup_keys_Valid() const{
    return m_image_lookup_keys_isValid;
}

QString OAIDiscountRequest::getName() const {
    return m_name;
}
void OAIDiscountRequest::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIDiscountRequest::is_name_Set() const{
    return m_name_isSet;
}

bool OAIDiscountRequest::is_name_Valid() const{
    return m_name_isValid;
}

double OAIDiscountRequest::getPercentage() const {
    return m_percentage;
}
void OAIDiscountRequest::setPercentage(const double &percentage) {
    m_percentage = percentage;
    m_percentage_isSet = true;
}

bool OAIDiscountRequest::is_percentage_Set() const{
    return m_percentage_isSet;
}

bool OAIDiscountRequest::is_percentage_Valid() const{
    return m_percentage_isValid;
}

QString OAIDiscountRequest::getUuid() const {
    return m_uuid;
}
void OAIDiscountRequest::setUuid(const QString &uuid) {
    m_uuid = uuid;
    m_uuid_isSet = true;
}

bool OAIDiscountRequest::is_uuid_Set() const{
    return m_uuid_isSet;
}

bool OAIDiscountRequest::is_uuid_Valid() const{
    return m_uuid_isValid;
}

bool OAIDiscountRequest::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_image_lookup_keys.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_percentage_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uuid_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDiscountRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_uuid_isValid && true;
}

} // namespace OpenAPI
