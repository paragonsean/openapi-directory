/**
 * Product Library API
 * The Product Library API is used for managing merchant's product information and product images.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICategoryResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICategoryResponse::OAICategoryResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICategoryResponse::OAICategoryResponse() {
    this->initializeModel();
}

OAICategoryResponse::~OAICategoryResponse() {}

void OAICategoryResponse::initializeModel() {

    m_categories_isSet = false;
    m_categories_isValid = false;
}

void OAICategoryResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICategoryResponse::fromJsonObject(QJsonObject json) {

    m_categories_isValid = ::OpenAPI::fromJsonValue(m_categories, json[QString("categories")]);
    m_categories_isSet = !json[QString("categories")].isNull() && m_categories_isValid;
}

QString OAICategoryResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICategoryResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_categories.size() > 0) {
        obj.insert(QString("categories"), ::OpenAPI::toJsonValue(m_categories));
    }
    return obj;
}

QList<OAICategoryDTO> OAICategoryResponse::getCategories() const {
    return m_categories;
}
void OAICategoryResponse::setCategories(const QList<OAICategoryDTO> &categories) {
    m_categories = categories;
    m_categories_isSet = true;
}

bool OAICategoryResponse::is_categories_Set() const{
    return m_categories_isSet;
}

bool OAICategoryResponse::is_categories_Valid() const{
    return m_categories_isValid;
}

bool OAICategoryResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_categories.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICategoryResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_categories_isValid && true;
}

} // namespace OpenAPI
