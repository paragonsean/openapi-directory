/**
 * Product Library API
 * The Product Library API is used for managing merchant's product information and product images.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVariantOptionDefinitions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVariantOptionDefinitions::OAIVariantOptionDefinitions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVariantOptionDefinitions::OAIVariantOptionDefinitions() {
    this->initializeModel();
}

OAIVariantOptionDefinitions::~OAIVariantOptionDefinitions() {}

void OAIVariantOptionDefinitions::initializeModel() {

    m_definitions_isSet = false;
    m_definitions_isValid = false;
}

void OAIVariantOptionDefinitions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIVariantOptionDefinitions::fromJsonObject(QJsonObject json) {

    m_definitions_isValid = ::OpenAPI::fromJsonValue(m_definitions, json[QString("definitions")]);
    m_definitions_isSet = !json[QString("definitions")].isNull() && m_definitions_isValid;
}

QString OAIVariantOptionDefinitions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIVariantOptionDefinitions::asJsonObject() const {
    QJsonObject obj;
    if (m_definitions.size() > 0) {
        obj.insert(QString("definitions"), ::OpenAPI::toJsonValue(m_definitions));
    }
    return obj;
}

QList<OAIVariantOptionDefinition> OAIVariantOptionDefinitions::getDefinitions() const {
    return m_definitions;
}
void OAIVariantOptionDefinitions::setDefinitions(const QList<OAIVariantOptionDefinition> &definitions) {
    m_definitions = definitions;
    m_definitions_isSet = true;
}

bool OAIVariantOptionDefinitions::is_definitions_Set() const{
    return m_definitions_isSet;
}

bool OAIVariantOptionDefinitions::is_definitions_Valid() const{
    return m_definitions_isValid;
}

bool OAIVariantOptionDefinitions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_definitions.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIVariantOptionDefinitions::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_definitions_isValid && true;
}

} // namespace OpenAPI
