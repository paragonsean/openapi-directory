/*
 * Product Library API
 * The Product Library API is used for managing merchant's product information and product images.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.DiscountRequest;
import org.openapitools.client.model.DiscountResponse;
import org.openapitools.client.model.ErrorResponse;
import java.util.UUID;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DiscountsApi
 */
@Disabled
public class DiscountsApiTest {

    private final DiscountsApi api = new DiscountsApi();

    /**
     * Create a discount
     *
     * Creates a single discount entity. The location of the newly created discount will be available in the successful response as a HttpHeaders.LOCATION header
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void createDiscountTest() throws ApiException {
        UUID organizationUuid = null;
        DiscountRequest discountRequest = null;
        api.createDiscount(organizationUuid, discountRequest);
        // TODO: test validations
    }

    /**
     * Delete a single discount 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void deleteDiscountTest() throws ApiException {
        UUID organizationUuid = null;
        UUID discountUuid = null;
        api.deleteDiscount(organizationUuid, discountUuid);
        // TODO: test validations
    }

    /**
     * Retrieve all discounts
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getAllDiscountsTest() throws ApiException {
        UUID organizationUuid = null;
        List<DiscountResponse> response = api.getAllDiscounts(organizationUuid);
        // TODO: test validations
    }

    /**
     * Retrieve a single discount
     *
     * Get the full discount with the provided UUID. The method supports conditional GET through providing a HttpHeaders.IF_NONE_MATCH header. If the conditional prerequisite is fullfilled, the full discount is returned: otherwise a 304 not modified will be returned with an empty body.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getDiscountTest() throws ApiException {
        UUID organizationUuid = null;
        UUID discountUuid = null;
        String ifNoneMatch = null;
        DiscountResponse response = api.getDiscount(organizationUuid, discountUuid, ifNoneMatch);
        // TODO: test validations
    }

    /**
     * Update a single discount
     *
     * Updates a discount entity using JSON merge patch (https://tools.ietf.org/html/rfc7386). This means that only included fields will be changed: null values removes the field on the target entity, and other values updates the field. Conditional updates are supported through the HttpHeaders.IF_MATCH header. If the conditional prerequisite is fullfilled, the discount is updated: otherwise a 412 precondition failed will be returned with an empty body.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateDiscountTest() throws ApiException {
        UUID organizationUuid = null;
        UUID discountUuid = null;
        DiscountRequest discountRequest = null;
        String ifMatch = null;
        api.updateDiscount(organizationUuid, discountUuid, discountRequest, ifMatch);
        // TODO: test validations
    }

}
