# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProductCountResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, product_count: int=None):
        """ProductCountResponse - a model defined in OpenAPI

        :param product_count: The product_count of this ProductCountResponse.
        """
        self.openapi_types = {
            'product_count': int
        }

        self.attribute_map = {
            'product_count': 'productCount'
        }

        self._product_count = product_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProductCountResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProductCountResponse of this ProductCountResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def product_count(self):
        """Gets the product_count of this ProductCountResponse.


        :return: The product_count of this ProductCountResponse.
        :rtype: int
        """
        return self._product_count

    @product_count.setter
    def product_count(self, product_count):
        """Sets the product_count of this ProductCountResponse.


        :param product_count: The product_count of this ProductCountResponse.
        :type product_count: int
        """
        if product_count is None:
            raise ValueError("Invalid value for `product_count`, must not be `None`")

        self._product_count = product_count
