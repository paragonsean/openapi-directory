# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SlugResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, product_name: str=None, slug: str=None):
        """SlugResponse - a model defined in OpenAPI

        :param product_name: The product_name of this SlugResponse.
        :param slug: The slug of this SlugResponse.
        """
        self.openapi_types = {
            'product_name': str,
            'slug': str
        }

        self.attribute_map = {
            'product_name': 'productName',
            'slug': 'slug'
        }

        self._product_name = product_name
        self._slug = slug

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SlugResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SlugResponse of this SlugResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def product_name(self):
        """Gets the product_name of this SlugResponse.


        :return: The product_name of this SlugResponse.
        :rtype: str
        """
        return self._product_name

    @product_name.setter
    def product_name(self, product_name):
        """Sets the product_name of this SlugResponse.


        :param product_name: The product_name of this SlugResponse.
        :type product_name: str
        """

        self._product_name = product_name

    @property
    def slug(self):
        """Gets the slug of this SlugResponse.


        :return: The slug of this SlugResponse.
        :rtype: str
        """
        return self._slug

    @slug.setter
    def slug(self, slug):
        """Sets the slug of this SlugResponse.


        :param slug: The slug of this SlugResponse.
        :type slug: str
        """

        self._slug = slug
