# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PresentationDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, background_color: str=None, image_url: str=None, text_color: str=None):
        """PresentationDTO - a model defined in OpenAPI

        :param background_color: The background_color of this PresentationDTO.
        :param image_url: The image_url of this PresentationDTO.
        :param text_color: The text_color of this PresentationDTO.
        """
        self.openapi_types = {
            'background_color': str,
            'image_url': str,
            'text_color': str
        }

        self.attribute_map = {
            'background_color': 'backgroundColor',
            'image_url': 'imageUrl',
            'text_color': 'textColor'
        }

        self._background_color = background_color
        self._image_url = image_url
        self._text_color = text_color

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PresentationDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PresentationDTO of this PresentationDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def background_color(self):
        """Gets the background_color of this PresentationDTO.


        :return: The background_color of this PresentationDTO.
        :rtype: str
        """
        return self._background_color

    @background_color.setter
    def background_color(self, background_color):
        """Sets the background_color of this PresentationDTO.


        :param background_color: The background_color of this PresentationDTO.
        :type background_color: str
        """

        self._background_color = background_color

    @property
    def image_url(self):
        """Gets the image_url of this PresentationDTO.


        :return: The image_url of this PresentationDTO.
        :rtype: str
        """
        return self._image_url

    @image_url.setter
    def image_url(self, image_url):
        """Sets the image_url of this PresentationDTO.


        :param image_url: The image_url of this PresentationDTO.
        :type image_url: str
        """

        self._image_url = image_url

    @property
    def text_color(self):
        """Gets the text_color of this PresentationDTO.


        :return: The text_color of this PresentationDTO.
        :rtype: str
        """
        return self._text_color

    @text_color.setter
    def text_color(self, text_color):
        """Sets the text_color of this PresentationDTO.


        :param text_color: The text_color of this PresentationDTO.
        :type text_color: str
        """

        self._text_color = text_color
