# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.constraint_violation import ConstraintViolation
from openapi_server import util


class ErrorResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, developer_message: str=None, error_type: str=None, violations: list[ConstraintViolation]=None):
        """ErrorResponse - a model defined in OpenAPI

        :param developer_message: The developer_message of this ErrorResponse.
        :param error_type: The error_type of this ErrorResponse.
        :param violations: The violations of this ErrorResponse.
        """
        self.openapi_types = {
            'developer_message': str,
            'error_type': str,
            'violations': list[ConstraintViolation]
        }

        self.attribute_map = {
            'developer_message': 'developerMessage',
            'error_type': 'errorType',
            'violations': 'violations'
        }

        self._developer_message = developer_message
        self._error_type = error_type
        self._violations = violations

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErrorResponse of this ErrorResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def developer_message(self):
        """Gets the developer_message of this ErrorResponse.


        :return: The developer_message of this ErrorResponse.
        :rtype: str
        """
        return self._developer_message

    @developer_message.setter
    def developer_message(self, developer_message):
        """Sets the developer_message of this ErrorResponse.


        :param developer_message: The developer_message of this ErrorResponse.
        :type developer_message: str
        """

        self._developer_message = developer_message

    @property
    def error_type(self):
        """Gets the error_type of this ErrorResponse.


        :return: The error_type of this ErrorResponse.
        :rtype: str
        """
        return self._error_type

    @error_type.setter
    def error_type(self, error_type):
        """Sets the error_type of this ErrorResponse.


        :param error_type: The error_type of this ErrorResponse.
        :type error_type: str
        """

        self._error_type = error_type

    @property
    def violations(self):
        """Gets the violations of this ErrorResponse.


        :return: The violations of this ErrorResponse.
        :rtype: list[ConstraintViolation]
        """
        return self._violations

    @violations.setter
    def violations(self, violations):
        """Sets the violations of this ErrorResponse.


        :param violations: The violations of this ErrorResponse.
        :type violations: list[ConstraintViolation]
        """

        self._violations = violations
