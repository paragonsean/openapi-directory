# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.discount_response import DiscountResponse
from openapi_server.models.product_response import ProductResponse
from openapi_server import util


class LibraryResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deleted_discounts: list[str]=None, deleted_products: list[str]=None, discounts: list[DiscountResponse]=None, from_event_log_uuid: str=None, products: list[ProductResponse]=None, until_event_log_uuid: str=None):
        """LibraryResponse - a model defined in OpenAPI

        :param deleted_discounts: The deleted_discounts of this LibraryResponse.
        :param deleted_products: The deleted_products of this LibraryResponse.
        :param discounts: The discounts of this LibraryResponse.
        :param from_event_log_uuid: The from_event_log_uuid of this LibraryResponse.
        :param products: The products of this LibraryResponse.
        :param until_event_log_uuid: The until_event_log_uuid of this LibraryResponse.
        """
        self.openapi_types = {
            'deleted_discounts': list[str],
            'deleted_products': list[str],
            'discounts': list[DiscountResponse],
            'from_event_log_uuid': str,
            'products': list[ProductResponse],
            'until_event_log_uuid': str
        }

        self.attribute_map = {
            'deleted_discounts': 'deletedDiscounts',
            'deleted_products': 'deletedProducts',
            'discounts': 'discounts',
            'from_event_log_uuid': 'fromEventLogUuid',
            'products': 'products',
            'until_event_log_uuid': 'untilEventLogUuid'
        }

        self._deleted_discounts = deleted_discounts
        self._deleted_products = deleted_products
        self._discounts = discounts
        self._from_event_log_uuid = from_event_log_uuid
        self._products = products
        self._until_event_log_uuid = until_event_log_uuid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LibraryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The LibraryResponse of this LibraryResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deleted_discounts(self):
        """Gets the deleted_discounts of this LibraryResponse.


        :return: The deleted_discounts of this LibraryResponse.
        :rtype: list[str]
        """
        return self._deleted_discounts

    @deleted_discounts.setter
    def deleted_discounts(self, deleted_discounts):
        """Sets the deleted_discounts of this LibraryResponse.


        :param deleted_discounts: The deleted_discounts of this LibraryResponse.
        :type deleted_discounts: list[str]
        """

        self._deleted_discounts = deleted_discounts

    @property
    def deleted_products(self):
        """Gets the deleted_products of this LibraryResponse.


        :return: The deleted_products of this LibraryResponse.
        :rtype: list[str]
        """
        return self._deleted_products

    @deleted_products.setter
    def deleted_products(self, deleted_products):
        """Sets the deleted_products of this LibraryResponse.


        :param deleted_products: The deleted_products of this LibraryResponse.
        :type deleted_products: list[str]
        """

        self._deleted_products = deleted_products

    @property
    def discounts(self):
        """Gets the discounts of this LibraryResponse.


        :return: The discounts of this LibraryResponse.
        :rtype: list[DiscountResponse]
        """
        return self._discounts

    @discounts.setter
    def discounts(self, discounts):
        """Sets the discounts of this LibraryResponse.


        :param discounts: The discounts of this LibraryResponse.
        :type discounts: list[DiscountResponse]
        """

        self._discounts = discounts

    @property
    def from_event_log_uuid(self):
        """Gets the from_event_log_uuid of this LibraryResponse.


        :return: The from_event_log_uuid of this LibraryResponse.
        :rtype: str
        """
        return self._from_event_log_uuid

    @from_event_log_uuid.setter
    def from_event_log_uuid(self, from_event_log_uuid):
        """Sets the from_event_log_uuid of this LibraryResponse.


        :param from_event_log_uuid: The from_event_log_uuid of this LibraryResponse.
        :type from_event_log_uuid: str
        """

        self._from_event_log_uuid = from_event_log_uuid

    @property
    def products(self):
        """Gets the products of this LibraryResponse.


        :return: The products of this LibraryResponse.
        :rtype: list[ProductResponse]
        """
        return self._products

    @products.setter
    def products(self, products):
        """Sets the products of this LibraryResponse.


        :param products: The products of this LibraryResponse.
        :type products: list[ProductResponse]
        """

        self._products = products

    @property
    def until_event_log_uuid(self):
        """Gets the until_event_log_uuid of this LibraryResponse.


        :return: The until_event_log_uuid of this LibraryResponse.
        :rtype: str
        """
        return self._until_event_log_uuid

    @until_event_log_uuid.setter
    def until_event_log_uuid(self, until_event_log_uuid):
        """Sets the until_event_log_uuid of this LibraryResponse.


        :param until_event_log_uuid: The until_event_log_uuid of this LibraryResponse.
        :type until_event_log_uuid: str
        """

        self._until_event_log_uuid = until_event_log_uuid
