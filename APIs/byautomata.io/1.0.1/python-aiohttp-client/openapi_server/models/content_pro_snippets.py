# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContentProSnippets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: List[str]=None, text: List[str]=None, title: List[str]=None):
        """ContentProSnippets - a model defined in OpenAPI

        :param description: The description of this ContentProSnippets.
        :param text: The text of this ContentProSnippets.
        :param title: The title of this ContentProSnippets.
        """
        self.openapi_types = {
            'description': List[str],
            'text': List[str],
            'title': List[str]
        }

        self.attribute_map = {
            'description': 'description',
            'text': 'text',
            'title': 'title'
        }

        self._description = description
        self._text = text
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentProSnippets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContentProSnippets of this ContentProSnippets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this ContentProSnippets.


        :return: The description of this ContentProSnippets.
        :rtype: List[str]
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ContentProSnippets.


        :param description: The description of this ContentProSnippets.
        :type description: List[str]
        """

        self._description = description

    @property
    def text(self):
        """Gets the text of this ContentProSnippets.


        :return: The text of this ContentProSnippets.
        :rtype: List[str]
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this ContentProSnippets.


        :param text: The text of this ContentProSnippets.
        :type text: List[str]
        """

        self._text = text

    @property
    def title(self):
        """Gets the title of this ContentProSnippets.


        :return: The title of this ContentProSnippets.
        :rtype: List[str]
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this ContentProSnippets.


        :param title: The title of this ContentProSnippets.
        :type title: List[str]
        """

        self._title = title
