# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.article import Article
from openapi_server.models.content_pro_company import ContentProCompany
from openapi_server.models.content_pro_snippets import ContentProSnippets
from openapi_server import util


class ContentproSearchGet200ResponseDataInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, article: Article=None, company: ContentProCompany=None, snippets: ContentProSnippets=None):
        """ContentproSearchGet200ResponseDataInner - a model defined in OpenAPI

        :param article: The article of this ContentproSearchGet200ResponseDataInner.
        :param company: The company of this ContentproSearchGet200ResponseDataInner.
        :param snippets: The snippets of this ContentproSearchGet200ResponseDataInner.
        """
        self.openapi_types = {
            'article': Article,
            'company': ContentProCompany,
            'snippets': ContentProSnippets
        }

        self.attribute_map = {
            'article': 'article',
            'company': 'company',
            'snippets': 'snippets'
        }

        self._article = article
        self._company = company
        self._snippets = snippets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContentproSearchGet200ResponseDataInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _contentpro_search_get_200_response_data_inner of this ContentproSearchGet200ResponseDataInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def article(self):
        """Gets the article of this ContentproSearchGet200ResponseDataInner.


        :return: The article of this ContentproSearchGet200ResponseDataInner.
        :rtype: Article
        """
        return self._article

    @article.setter
    def article(self, article):
        """Sets the article of this ContentproSearchGet200ResponseDataInner.


        :param article: The article of this ContentproSearchGet200ResponseDataInner.
        :type article: Article
        """

        self._article = article

    @property
    def company(self):
        """Gets the company of this ContentproSearchGet200ResponseDataInner.


        :return: The company of this ContentproSearchGet200ResponseDataInner.
        :rtype: ContentProCompany
        """
        return self._company

    @company.setter
    def company(self, company):
        """Sets the company of this ContentproSearchGet200ResponseDataInner.


        :param company: The company of this ContentproSearchGet200ResponseDataInner.
        :type company: ContentProCompany
        """

        self._company = company

    @property
    def snippets(self):
        """Gets the snippets of this ContentproSearchGet200ResponseDataInner.


        :return: The snippets of this ContentproSearchGet200ResponseDataInner.
        :rtype: ContentProSnippets
        """
        return self._snippets

    @snippets.setter
    def snippets(self, snippets):
        """Sets the snippets of this ContentproSearchGet200ResponseDataInner.


        :param snippets: The snippets of this ContentproSearchGet200ResponseDataInner.
        :type snippets: ContentProSnippets
        """

        self._snippets = snippets
