/*
 * Automata Market Intelligence API
 * This document provides the documentation for the Market Intelligence API by Automata. Get your API Key at https://apis.byautomata.io and check out our <a href='https://www.getpostman.com/collections/d182a1c78d4491d55e19'>Postman Collection</a>.<br><br>The root API endpoint is https://api.byautomata.io. Please refer to the code samples for examples of how to call the Market Intelligence API. The ContentPro endpoints (/contentpro-search and /contentpro-similar-text) are not included in the standard Market Intelligence API plans. Please contact support@byautomata.io for access.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@byautomata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.InputCompany;
import org.openapitools.client.model.SimilarCompany;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * SimilarGet200Response
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T12:32:54.723311-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class SimilarGet200Response {
  public static final String SERIALIZED_NAME_CALLS_PER_MONTH = "calls_per_month";
  @SerializedName(SERIALIZED_NAME_CALLS_PER_MONTH)
  private String callsPerMonth;

  public static final String SERIALIZED_NAME_COMPANIES = "companies";
  @SerializedName(SERIALIZED_NAME_COMPANIES)
  private List<SimilarCompany> companies = new ArrayList<>();

  public static final String SERIALIZED_NAME_COUNT_REMAINING = "count_remaining";
  @SerializedName(SERIALIZED_NAME_COUNT_REMAINING)
  private String countRemaining;

  public static final String SERIALIZED_NAME_INPUT_COMPANY = "input_company";
  @SerializedName(SERIALIZED_NAME_INPUT_COMPANY)
  private InputCompany inputCompany;

  public static final String SERIALIZED_NAME_RENEWAL_DATE = "renewal_date";
  @SerializedName(SERIALIZED_NAME_RENEWAL_DATE)
  private String renewalDate;

  public SimilarGet200Response() {
  }

  public SimilarGet200Response callsPerMonth(String callsPerMonth) {
    this.callsPerMonth = callsPerMonth;
    return this;
  }

  /**
   * Get callsPerMonth
   * @return callsPerMonth
   */
  @javax.annotation.Nullable
  public String getCallsPerMonth() {
    return callsPerMonth;
  }

  public void setCallsPerMonth(String callsPerMonth) {
    this.callsPerMonth = callsPerMonth;
  }


  public SimilarGet200Response companies(List<SimilarCompany> companies) {
    this.companies = companies;
    return this;
  }

  public SimilarGet200Response addCompaniesItem(SimilarCompany companiesItem) {
    if (this.companies == null) {
      this.companies = new ArrayList<>();
    }
    this.companies.add(companiesItem);
    return this;
  }

  /**
   * Get companies
   * @return companies
   */
  @javax.annotation.Nullable
  public List<SimilarCompany> getCompanies() {
    return companies;
  }

  public void setCompanies(List<SimilarCompany> companies) {
    this.companies = companies;
  }


  public SimilarGet200Response countRemaining(String countRemaining) {
    this.countRemaining = countRemaining;
    return this;
  }

  /**
   * Get countRemaining
   * @return countRemaining
   */
  @javax.annotation.Nullable
  public String getCountRemaining() {
    return countRemaining;
  }

  public void setCountRemaining(String countRemaining) {
    this.countRemaining = countRemaining;
  }


  public SimilarGet200Response inputCompany(InputCompany inputCompany) {
    this.inputCompany = inputCompany;
    return this;
  }

  /**
   * Get inputCompany
   * @return inputCompany
   */
  @javax.annotation.Nullable
  public InputCompany getInputCompany() {
    return inputCompany;
  }

  public void setInputCompany(InputCompany inputCompany) {
    this.inputCompany = inputCompany;
  }


  public SimilarGet200Response renewalDate(String renewalDate) {
    this.renewalDate = renewalDate;
    return this;
  }

  /**
   * Get renewalDate
   * @return renewalDate
   */
  @javax.annotation.Nullable
  public String getRenewalDate() {
    return renewalDate;
  }

  public void setRenewalDate(String renewalDate) {
    this.renewalDate = renewalDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimilarGet200Response similarGet200Response = (SimilarGet200Response) o;
    return Objects.equals(this.callsPerMonth, similarGet200Response.callsPerMonth) &&
        Objects.equals(this.companies, similarGet200Response.companies) &&
        Objects.equals(this.countRemaining, similarGet200Response.countRemaining) &&
        Objects.equals(this.inputCompany, similarGet200Response.inputCompany) &&
        Objects.equals(this.renewalDate, similarGet200Response.renewalDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(callsPerMonth, companies, countRemaining, inputCompany, renewalDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimilarGet200Response {\n");
    sb.append("    callsPerMonth: ").append(toIndentedString(callsPerMonth)).append("\n");
    sb.append("    companies: ").append(toIndentedString(companies)).append("\n");
    sb.append("    countRemaining: ").append(toIndentedString(countRemaining)).append("\n");
    sb.append("    inputCompany: ").append(toIndentedString(inputCompany)).append("\n");
    sb.append("    renewalDate: ").append(toIndentedString(renewalDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("calls_per_month");
    openapiFields.add("companies");
    openapiFields.add("count_remaining");
    openapiFields.add("input_company");
    openapiFields.add("renewal_date");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to SimilarGet200Response
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!SimilarGet200Response.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in SimilarGet200Response is not found in the empty JSON string", SimilarGet200Response.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!SimilarGet200Response.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `SimilarGet200Response` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("calls_per_month") != null && !jsonObj.get("calls_per_month").isJsonNull()) && !jsonObj.get("calls_per_month").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `calls_per_month` to be a primitive type in the JSON string but got `%s`", jsonObj.get("calls_per_month").toString()));
      }
      if (jsonObj.get("companies") != null && !jsonObj.get("companies").isJsonNull()) {
        JsonArray jsonArraycompanies = jsonObj.getAsJsonArray("companies");
        if (jsonArraycompanies != null) {
          // ensure the json data is an array
          if (!jsonObj.get("companies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `companies` to be an array in the JSON string but got `%s`", jsonObj.get("companies").toString()));
          }

          // validate the optional field `companies` (array)
          for (int i = 0; i < jsonArraycompanies.size(); i++) {
            SimilarCompany.validateJsonElement(jsonArraycompanies.get(i));
          };
        }
      }
      if ((jsonObj.get("count_remaining") != null && !jsonObj.get("count_remaining").isJsonNull()) && !jsonObj.get("count_remaining").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `count_remaining` to be a primitive type in the JSON string but got `%s`", jsonObj.get("count_remaining").toString()));
      }
      // validate the optional field `input_company`
      if (jsonObj.get("input_company") != null && !jsonObj.get("input_company").isJsonNull()) {
        InputCompany.validateJsonElement(jsonObj.get("input_company"));
      }
      if ((jsonObj.get("renewal_date") != null && !jsonObj.get("renewal_date").isJsonNull()) && !jsonObj.get("renewal_date").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `renewal_date` to be a primitive type in the JSON string but got `%s`", jsonObj.get("renewal_date").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SimilarGet200Response.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SimilarGet200Response' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SimilarGet200Response> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SimilarGet200Response.class));

       return (TypeAdapter<T>) new TypeAdapter<SimilarGet200Response>() {
           @Override
           public void write(JsonWriter out, SimilarGet200Response value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public SimilarGet200Response read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of SimilarGet200Response given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of SimilarGet200Response
   * @throws IOException if the JSON string is invalid with respect to SimilarGet200Response
   */
  public static SimilarGet200Response fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SimilarGet200Response.class);
  }

  /**
   * Convert an instance of SimilarGet200Response to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

