/**
 * Automata Market Intelligence API
 * This document provides the documentation for the Market Intelligence API by Automata. Get your API Key at https://apis.byautomata.io and check out our <a href='https://www.getpostman.com/collections/d182a1c78d4491d55e19'>Postman Collection</a>.<br><br>The root API endpoint is https://api.byautomata.io. Please refer to the code samples for examples of how to call the Market Intelligence API. The ContentPro endpoints (/contentpro-search and /contentpro-similar-text) are not included in the standard Market Intelligence API plans. Please contact support@byautomata.io for access.
 *
 * The version of the OpenAPI document: 1.0.1
 * Contact: support@byautomata.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Snippet model module.
 * @module model/Snippet
 * @version 1.0.1
 */
class Snippet {
    /**
     * Constructs a new <code>Snippet</code>.
     * @alias module:model/Snippet
     */
    constructor() { 
        
        Snippet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Snippet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Snippet} obj Optional instance to populate.
     * @return {module:model/Snippet} The populated <code>Snippet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Snippet();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], ['String']);
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], ['String']);
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Snippet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Snippet</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['description'])) {
            throw new Error("Expected the field `description` to be an array in the JSON data but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['text'])) {
            throw new Error("Expected the field `text` to be an array in the JSON data but got " + data['text']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['title'])) {
            throw new Error("Expected the field `title` to be an array in the JSON data but got " + data['title']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} description
 */
Snippet.prototype['description'] = undefined;

/**
 * @member {Array.<String>} text
 */
Snippet.prototype['text'] = undefined;

/**
 * @member {Array.<String>} title
 */
Snippet.prototype['title'] = undefined;






export default Snippet;

