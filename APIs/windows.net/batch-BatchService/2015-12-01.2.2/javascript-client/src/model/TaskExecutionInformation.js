/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2015-12-01.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TaskSchedulingError from './TaskSchedulingError';

/**
 * The TaskExecutionInformation model module.
 * @module model/TaskExecutionInformation
 * @version 2015-12-01.2.2
 */
class TaskExecutionInformation {
    /**
     * Constructs a new <code>TaskExecutionInformation</code>.
     * Information about the execution of a task.
     * @alias module:model/TaskExecutionInformation
     * @param requeueCount {Number} Gets or sets the number of times the task has been requeued by the Batch service as the result of a user request.
     * @param retryCount {Number} Gets or sets the number of times the task has been retried by the Batch service.
     */
    constructor(requeueCount, retryCount) { 
        
        TaskExecutionInformation.initialize(this, requeueCount, retryCount);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, requeueCount, retryCount) { 
        obj['requeueCount'] = requeueCount;
        obj['retryCount'] = retryCount;
    }

    /**
     * Constructs a <code>TaskExecutionInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaskExecutionInformation} obj Optional instance to populate.
     * @return {module:model/TaskExecutionInformation} The populated <code>TaskExecutionInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaskExecutionInformation();

            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('exitCode')) {
                obj['exitCode'] = ApiClient.convertToType(data['exitCode'], 'Number');
            }
            if (data.hasOwnProperty('lastRequeueTime')) {
                obj['lastRequeueTime'] = ApiClient.convertToType(data['lastRequeueTime'], 'Date');
            }
            if (data.hasOwnProperty('lastRetryTime')) {
                obj['lastRetryTime'] = ApiClient.convertToType(data['lastRetryTime'], 'Date');
            }
            if (data.hasOwnProperty('requeueCount')) {
                obj['requeueCount'] = ApiClient.convertToType(data['requeueCount'], 'Number');
            }
            if (data.hasOwnProperty('retryCount')) {
                obj['retryCount'] = ApiClient.convertToType(data['retryCount'], 'Number');
            }
            if (data.hasOwnProperty('schedulingError')) {
                obj['schedulingError'] = TaskSchedulingError.constructFromObject(data['schedulingError']);
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TaskExecutionInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TaskExecutionInformation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TaskExecutionInformation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `schedulingError`
        if (data['schedulingError']) { // data not null
          TaskSchedulingError.validateJSON(data['schedulingError']);
        }

        return true;
    }


}

TaskExecutionInformation.RequiredProperties = ["requeueCount", "retryCount"];

/**
 * Gets or sets the time at which the task completed. This property is set only if the task is in the Completed state.
 * @member {Date} endTime
 */
TaskExecutionInformation.prototype['endTime'] = undefined;

/**
 * Gets or sets the exit code of the task. This property is set only if the task is in completed state.
 * @member {Number} exitCode
 */
TaskExecutionInformation.prototype['exitCode'] = undefined;

/**
 * Gets or sets the most recent time at which the task has been requeued by the Batch service as the result of a user request.
 * @member {Date} lastRequeueTime
 */
TaskExecutionInformation.prototype['lastRequeueTime'] = undefined;

/**
 * Gets or sets the most recent time at which a retry of the task started running.
 * @member {Date} lastRetryTime
 */
TaskExecutionInformation.prototype['lastRetryTime'] = undefined;

/**
 * Gets or sets the number of times the task has been requeued by the Batch service as the result of a user request.
 * @member {Number} requeueCount
 */
TaskExecutionInformation.prototype['requeueCount'] = undefined;

/**
 * Gets or sets the number of times the task has been retried by the Batch service.
 * @member {Number} retryCount
 */
TaskExecutionInformation.prototype['retryCount'] = undefined;

/**
 * @member {module:model/TaskSchedulingError} schedulingError
 */
TaskExecutionInformation.prototype['schedulingError'] = undefined;

/**
 * Gets or sets the time at which the task started running. If the task has been restarted or retried, this is the most recent time at which the task started running.
 * @member {Date} startTime
 */
TaskExecutionInformation.prototype['startTime'] = undefined;






export default TaskExecutionInformation;

