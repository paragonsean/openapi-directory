/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2015-12-01.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResourceFile model module.
 * @module model/ResourceFile
 * @version 2015-12-01.2.2
 */
class ResourceFile {
    /**
     * Constructs a new <code>ResourceFile</code>.
     * A file to be downloaded from Azure blob storage to a compute node.
     * @alias module:model/ResourceFile
     */
    constructor() { 
        
        ResourceFile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>ResourceFile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceFile} obj Optional instance to populate.
     * @return {module:model/ResourceFile} The populated <code>ResourceFile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceFile();

            if (data.hasOwnProperty('blobSource')) {
                obj['blobSource'] = ApiClient.convertToType(data['blobSource'], 'String');
            }
            if (data.hasOwnProperty('filePath')) {
                obj['filePath'] = ApiClient.convertToType(data['filePath'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceFile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceFile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['blobSource'] && !(typeof data['blobSource'] === 'string' || data['blobSource'] instanceof String)) {
            throw new Error("Expected the field `blobSource` to be a primitive type in the JSON string but got " + data['blobSource']);
        }
        // ensure the json data is a string
        if (data['filePath'] && !(typeof data['filePath'] === 'string' || data['filePath'] instanceof String)) {
            throw new Error("Expected the field `filePath` to be a primitive type in the JSON string but got " + data['filePath']);
        }

        return true;
    }


}



/**
 * Gets or sets the URL of a blob in Azure storage. The Batch service downloads the blob to the specified file path. The URL must be readable using anonymous access.
 * @member {String} blobSource
 */
ResourceFile.prototype['blobSource'] = undefined;

/**
 * Gets or sets the location on the compute node to which the file should be downloaded.
 * @member {String} filePath
 */
ResourceFile.prototype['filePath'] = undefined;






export default ResourceFile;

