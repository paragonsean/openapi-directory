/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2015-12-01.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EnvironmentSetting from './EnvironmentSetting';
import ResourceFile from './ResourceFile';

/**
 * The JobReleaseTask model module.
 * @module model/JobReleaseTask
 * @version 2015-12-01.2.2
 */
class JobReleaseTask {
    /**
     * Constructs a new <code>JobReleaseTask</code>.
     * A Job Release task to run on job completion on any compute node where the job has run.
     * @alias module:model/JobReleaseTask
     */
    constructor() { 
        
        JobReleaseTask.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobReleaseTask</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobReleaseTask} obj Optional instance to populate.
     * @return {module:model/JobReleaseTask} The populated <code>JobReleaseTask</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobReleaseTask();

            if (data.hasOwnProperty('commandLine')) {
                obj['commandLine'] = ApiClient.convertToType(data['commandLine'], 'String');
            }
            if (data.hasOwnProperty('environmentSettings')) {
                obj['environmentSettings'] = ApiClient.convertToType(data['environmentSettings'], [EnvironmentSetting]);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('maxWallClockTime')) {
                obj['maxWallClockTime'] = ApiClient.convertToType(data['maxWallClockTime'], 'String');
            }
            if (data.hasOwnProperty('resourceFiles')) {
                obj['resourceFiles'] = ApiClient.convertToType(data['resourceFiles'], [ResourceFile]);
            }
            if (data.hasOwnProperty('retentionTime')) {
                obj['retentionTime'] = ApiClient.convertToType(data['retentionTime'], 'String');
            }
            if (data.hasOwnProperty('runElevated')) {
                obj['runElevated'] = ApiClient.convertToType(data['runElevated'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobReleaseTask</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobReleaseTask</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['commandLine'] && !(typeof data['commandLine'] === 'string' || data['commandLine'] instanceof String)) {
            throw new Error("Expected the field `commandLine` to be a primitive type in the JSON string but got " + data['commandLine']);
        }
        if (data['environmentSettings']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['environmentSettings'])) {
                throw new Error("Expected the field `environmentSettings` to be an array in the JSON data but got " + data['environmentSettings']);
            }
            // validate the optional field `environmentSettings` (array)
            for (const item of data['environmentSettings']) {
                EnvironmentSetting.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['maxWallClockTime'] && !(typeof data['maxWallClockTime'] === 'string' || data['maxWallClockTime'] instanceof String)) {
            throw new Error("Expected the field `maxWallClockTime` to be a primitive type in the JSON string but got " + data['maxWallClockTime']);
        }
        if (data['resourceFiles']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['resourceFiles'])) {
                throw new Error("Expected the field `resourceFiles` to be an array in the JSON data but got " + data['resourceFiles']);
            }
            // validate the optional field `resourceFiles` (array)
            for (const item of data['resourceFiles']) {
                ResourceFile.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['retentionTime'] && !(typeof data['retentionTime'] === 'string' || data['retentionTime'] instanceof String)) {
            throw new Error("Expected the field `retentionTime` to be a primitive type in the JSON string but got " + data['retentionTime']);
        }

        return true;
    }


}



/**
 * Gets or sets the command line of the Job Release task.
 * @member {String} commandLine
 */
JobReleaseTask.prototype['commandLine'] = undefined;

/**
 * Gets or sets a list of environment variable settings for the Job Release task.
 * @member {Array.<module:model/EnvironmentSetting>} environmentSettings
 */
JobReleaseTask.prototype['environmentSettings'] = undefined;

/**
 * Gets or sets a string that uniquely identifies the Job Release task within the job. The id can contain any combination of alphanumeric characters including hyphens and underscores and cannot contain more than 64 characters.
 * @member {String} id
 */
JobReleaseTask.prototype['id'] = undefined;

/**
 * Gets or sets the maximum elapsed time that the Job Release task may run on a given compute node, measured from the time the task starts. If the task does not complete within the time limit, the Batch service terminates it. The default value is 15 minutes.
 * @member {String} maxWallClockTime
 */
JobReleaseTask.prototype['maxWallClockTime'] = undefined;

/**
 * Gets or sets a list of files that Batch will download to the compute node before running the command line.
 * @member {Array.<module:model/ResourceFile>} resourceFiles
 */
JobReleaseTask.prototype['resourceFiles'] = undefined;

/**
 * Gets or sets the minimum time to retain the working directory for the Job Release task on the compute node.  After this time, the Batch service may delete the working directory and all its contents. The default is infinite.
 * @member {String} retentionTime
 */
JobReleaseTask.prototype['retentionTime'] = undefined;

/**
 * Gets or sets whether to run the Job Release task in elevated mode. The default value is false.
 * @member {Boolean} runElevated
 */
JobReleaseTask.prototype['runElevated'] = undefined;






export default JobReleaseTask;

