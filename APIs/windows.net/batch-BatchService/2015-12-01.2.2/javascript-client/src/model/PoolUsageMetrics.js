/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2015-12-01.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PoolUsageMetrics model module.
 * @module model/PoolUsageMetrics
 * @version 2015-12-01.2.2
 */
class PoolUsageMetrics {
    /**
     * Constructs a new <code>PoolUsageMetrics</code>.
     * Usage metrics for a pool across an aggregation interval.
     * @alias module:model/PoolUsageMetrics
     * @param dataEgressGiB {Number} Gets or sets the cross data center network egress in GiB from the pool during this interval.
     * @param dataIngressGiB {Number} Gets or sets the cross data center network ingress in GiB to the pool during this interval.
     * @param endTime {Date} Gets or sets the end time of the aggregation interval.
     * @param poolId {String} Gets or sets the id of the pool whose metrics are being aggregated.
     * @param startTime {Date} Gets or sets the start time of the aggregation interval.
     * @param totalCoreHours {Number} Gets or sets the total core hours used in the pool during this aggregation interval.
     * @param vmSize {String} Gets or sets the size of virtual machines in the pool.  All VMs in a pool are the same size.
     */
    constructor(dataEgressGiB, dataIngressGiB, endTime, poolId, startTime, totalCoreHours, vmSize) { 
        
        PoolUsageMetrics.initialize(this, dataEgressGiB, dataIngressGiB, endTime, poolId, startTime, totalCoreHours, vmSize);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, dataEgressGiB, dataIngressGiB, endTime, poolId, startTime, totalCoreHours, vmSize) { 
        obj['dataEgressGiB'] = dataEgressGiB;
        obj['dataIngressGiB'] = dataIngressGiB;
        obj['endTime'] = endTime;
        obj['poolId'] = poolId;
        obj['startTime'] = startTime;
        obj['totalCoreHours'] = totalCoreHours;
        obj['vmSize'] = vmSize;
    }

    /**
     * Constructs a <code>PoolUsageMetrics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PoolUsageMetrics} obj Optional instance to populate.
     * @return {module:model/PoolUsageMetrics} The populated <code>PoolUsageMetrics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PoolUsageMetrics();

            if (data.hasOwnProperty('dataEgressGiB')) {
                obj['dataEgressGiB'] = ApiClient.convertToType(data['dataEgressGiB'], 'Number');
            }
            if (data.hasOwnProperty('dataIngressGiB')) {
                obj['dataIngressGiB'] = ApiClient.convertToType(data['dataIngressGiB'], 'Number');
            }
            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('poolId')) {
                obj['poolId'] = ApiClient.convertToType(data['poolId'], 'String');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('totalCoreHours')) {
                obj['totalCoreHours'] = ApiClient.convertToType(data['totalCoreHours'], 'Number');
            }
            if (data.hasOwnProperty('vmSize')) {
                obj['vmSize'] = ApiClient.convertToType(data['vmSize'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PoolUsageMetrics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PoolUsageMetrics</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PoolUsageMetrics.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['poolId'] && !(typeof data['poolId'] === 'string' || data['poolId'] instanceof String)) {
            throw new Error("Expected the field `poolId` to be a primitive type in the JSON string but got " + data['poolId']);
        }
        // ensure the json data is a string
        if (data['vmSize'] && !(typeof data['vmSize'] === 'string' || data['vmSize'] instanceof String)) {
            throw new Error("Expected the field `vmSize` to be a primitive type in the JSON string but got " + data['vmSize']);
        }

        return true;
    }


}

PoolUsageMetrics.RequiredProperties = ["dataEgressGiB", "dataIngressGiB", "endTime", "poolId", "startTime", "totalCoreHours", "vmSize"];

/**
 * Gets or sets the cross data center network egress in GiB from the pool during this interval.
 * @member {Number} dataEgressGiB
 */
PoolUsageMetrics.prototype['dataEgressGiB'] = undefined;

/**
 * Gets or sets the cross data center network ingress in GiB to the pool during this interval.
 * @member {Number} dataIngressGiB
 */
PoolUsageMetrics.prototype['dataIngressGiB'] = undefined;

/**
 * Gets or sets the end time of the aggregation interval.
 * @member {Date} endTime
 */
PoolUsageMetrics.prototype['endTime'] = undefined;

/**
 * Gets or sets the id of the pool whose metrics are being aggregated.
 * @member {String} poolId
 */
PoolUsageMetrics.prototype['poolId'] = undefined;

/**
 * Gets or sets the start time of the aggregation interval.
 * @member {Date} startTime
 */
PoolUsageMetrics.prototype['startTime'] = undefined;

/**
 * Gets or sets the total core hours used in the pool during this aggregation interval.
 * @member {Number} totalCoreHours
 */
PoolUsageMetrics.prototype['totalCoreHours'] = undefined;

/**
 * Gets or sets the size of virtual machines in the pool.  All VMs in a pool are the same size.
 * @member {String} vmSize
 */
PoolUsageMetrics.prototype['vmSize'] = undefined;






export default PoolUsageMetrics;

