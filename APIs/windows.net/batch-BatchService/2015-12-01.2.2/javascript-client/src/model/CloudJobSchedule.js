/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2015-12-01.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobScheduleExecutionInformation from './JobScheduleExecutionInformation';
import JobScheduleStatistics from './JobScheduleStatistics';
import JobSpecification from './JobSpecification';
import MetadataItem from './MetadataItem';
import Schedule from './Schedule';

/**
 * The CloudJobSchedule model module.
 * @module model/CloudJobSchedule
 * @version 2015-12-01.2.2
 */
class CloudJobSchedule {
    /**
     * Constructs a new <code>CloudJobSchedule</code>.
     * A job schedule that allows recurring jobs by specifying when to run jobs and a specification used to create each job.
     * @alias module:model/CloudJobSchedule
     */
    constructor() { 
        
        CloudJobSchedule.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CloudJobSchedule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CloudJobSchedule} obj Optional instance to populate.
     * @return {module:model/CloudJobSchedule} The populated <code>CloudJobSchedule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CloudJobSchedule();

            if (data.hasOwnProperty('creationTime')) {
                obj['creationTime'] = ApiClient.convertToType(data['creationTime'], 'Date');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('eTag')) {
                obj['eTag'] = ApiClient.convertToType(data['eTag'], 'String');
            }
            if (data.hasOwnProperty('executionInfo')) {
                obj['executionInfo'] = JobScheduleExecutionInformation.constructFromObject(data['executionInfo']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('jobSpecification')) {
                obj['jobSpecification'] = JobSpecification.constructFromObject(data['jobSpecification']);
            }
            if (data.hasOwnProperty('lastModified')) {
                obj['lastModified'] = ApiClient.convertToType(data['lastModified'], 'Date');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], [MetadataItem]);
            }
            if (data.hasOwnProperty('previousState')) {
                obj['previousState'] = ApiClient.convertToType(data['previousState'], 'String');
            }
            if (data.hasOwnProperty('previousStateTransitionTime')) {
                obj['previousStateTransitionTime'] = ApiClient.convertToType(data['previousStateTransitionTime'], 'Date');
            }
            if (data.hasOwnProperty('schedule')) {
                obj['schedule'] = Schedule.constructFromObject(data['schedule']);
            }
            if (data.hasOwnProperty('state')) {
                obj['state'] = ApiClient.convertToType(data['state'], 'String');
            }
            if (data.hasOwnProperty('stateTransitionTime')) {
                obj['stateTransitionTime'] = ApiClient.convertToType(data['stateTransitionTime'], 'Date');
            }
            if (data.hasOwnProperty('stats')) {
                obj['stats'] = JobScheduleStatistics.constructFromObject(data['stats']);
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CloudJobSchedule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CloudJobSchedule</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['eTag'] && !(typeof data['eTag'] === 'string' || data['eTag'] instanceof String)) {
            throw new Error("Expected the field `eTag` to be a primitive type in the JSON string but got " + data['eTag']);
        }
        // validate the optional field `executionInfo`
        if (data['executionInfo']) { // data not null
          JobScheduleExecutionInformation.validateJSON(data['executionInfo']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `jobSpecification`
        if (data['jobSpecification']) { // data not null
          JobSpecification.validateJSON(data['jobSpecification']);
        }
        if (data['metadata']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['metadata'])) {
                throw new Error("Expected the field `metadata` to be an array in the JSON data but got " + data['metadata']);
            }
            // validate the optional field `metadata` (array)
            for (const item of data['metadata']) {
                MetadataItem.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['previousState'] && !(typeof data['previousState'] === 'string' || data['previousState'] instanceof String)) {
            throw new Error("Expected the field `previousState` to be a primitive type in the JSON string but got " + data['previousState']);
        }
        // validate the optional field `schedule`
        if (data['schedule']) { // data not null
          Schedule.validateJSON(data['schedule']);
        }
        // ensure the json data is a string
        if (data['state'] && !(typeof data['state'] === 'string' || data['state'] instanceof String)) {
            throw new Error("Expected the field `state` to be a primitive type in the JSON string but got " + data['state']);
        }
        // validate the optional field `stats`
        if (data['stats']) { // data not null
          JobScheduleStatistics.validateJSON(data['stats']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }

        return true;
    }


}



/**
 * Gets or sets the creation time of the job schedule.
 * @member {Date} creationTime
 */
CloudJobSchedule.prototype['creationTime'] = undefined;

/**
 * Gets or sets the display name for the schedule.
 * @member {String} displayName
 */
CloudJobSchedule.prototype['displayName'] = undefined;

/**
 * Gets or sets the ETag of the job schedule.
 * @member {String} eTag
 */
CloudJobSchedule.prototype['eTag'] = undefined;

/**
 * @member {module:model/JobScheduleExecutionInformation} executionInfo
 */
CloudJobSchedule.prototype['executionInfo'] = undefined;

/**
 * Gets or sets a string that uniquely identifies the schedule within the account. A GUID is recommended.
 * @member {String} id
 */
CloudJobSchedule.prototype['id'] = undefined;

/**
 * @member {module:model/JobSpecification} jobSpecification
 */
CloudJobSchedule.prototype['jobSpecification'] = undefined;

/**
 * Gets or sets the last modified time of the job schedule.
 * @member {Date} lastModified
 */
CloudJobSchedule.prototype['lastModified'] = undefined;

/**
 * Gets or sets a list of name-value pairs associated with the schedule as metadata.
 * @member {Array.<module:model/MetadataItem>} metadata
 */
CloudJobSchedule.prototype['metadata'] = undefined;

/**
 * Gets or sets the previous state of the job schedule.
 * @member {module:model/CloudJobSchedule.PreviousStateEnum} previousState
 */
CloudJobSchedule.prototype['previousState'] = undefined;

/**
 * Gets or sets the time at which the job schedule entered its previous state.
 * @member {Date} previousStateTransitionTime
 */
CloudJobSchedule.prototype['previousStateTransitionTime'] = undefined;

/**
 * @member {module:model/Schedule} schedule
 */
CloudJobSchedule.prototype['schedule'] = undefined;

/**
 * Gets or sets the current state of the job schedule.
 * @member {module:model/CloudJobSchedule.StateEnum} state
 */
CloudJobSchedule.prototype['state'] = undefined;

/**
 * Gets or sets the time at which the job schedule entered the current state.
 * @member {Date} stateTransitionTime
 */
CloudJobSchedule.prototype['stateTransitionTime'] = undefined;

/**
 * @member {module:model/JobScheduleStatistics} stats
 */
CloudJobSchedule.prototype['stats'] = undefined;

/**
 * Gets or sets the URL of the job schedule.
 * @member {String} url
 */
CloudJobSchedule.prototype['url'] = undefined;





/**
 * Allowed values for the <code>previousState</code> property.
 * @enum {String}
 * @readonly
 */
CloudJobSchedule['PreviousStateEnum'] = {

    /**
     * value: "active"
     * @const
     */
    "active": "active",

    /**
     * value: "completed"
     * @const
     */
    "completed": "completed",

    /**
     * value: "disabled"
     * @const
     */
    "disabled": "disabled",

    /**
     * value: "terminating"
     * @const
     */
    "terminating": "terminating",

    /**
     * value: "deleting"
     * @const
     */
    "deleting": "deleting"
};


/**
 * Allowed values for the <code>state</code> property.
 * @enum {String}
 * @readonly
 */
CloudJobSchedule['StateEnum'] = {

    /**
     * value: "active"
     * @const
     */
    "active": "active",

    /**
     * value: "completed"
     * @const
     */
    "completed": "completed",

    /**
     * value: "disabled"
     * @const
     */
    "disabled": "disabled",

    /**
     * value: "terminating"
     * @const
     */
    "terminating": "terminating",

    /**
     * value: "deleting"
     * @const
     */
    "deleting": "deleting"
};



export default CloudJobSchedule;

