/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2015-12-01.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TaskSchedulingPolicy model module.
 * @module model/TaskSchedulingPolicy
 * @version 2015-12-01.2.2
 */
class TaskSchedulingPolicy {
    /**
     * Constructs a new <code>TaskSchedulingPolicy</code>.
     * Specifies how tasks should be distributed across compute nodes.
     * @alias module:model/TaskSchedulingPolicy
     * @param nodeFillType {module:model/TaskSchedulingPolicy.NodeFillTypeEnum} Gets or sets how tasks should be distributed across compute nodes
     */
    constructor(nodeFillType) { 
        
        TaskSchedulingPolicy.initialize(this, nodeFillType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, nodeFillType) { 
        obj['nodeFillType'] = nodeFillType;
    }

    /**
     * Constructs a <code>TaskSchedulingPolicy</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TaskSchedulingPolicy} obj Optional instance to populate.
     * @return {module:model/TaskSchedulingPolicy} The populated <code>TaskSchedulingPolicy</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TaskSchedulingPolicy();

            if (data.hasOwnProperty('nodeFillType')) {
                obj['nodeFillType'] = ApiClient.convertToType(data['nodeFillType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TaskSchedulingPolicy</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TaskSchedulingPolicy</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of TaskSchedulingPolicy.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['nodeFillType'] && !(typeof data['nodeFillType'] === 'string' || data['nodeFillType'] instanceof String)) {
            throw new Error("Expected the field `nodeFillType` to be a primitive type in the JSON string but got " + data['nodeFillType']);
        }

        return true;
    }


}

TaskSchedulingPolicy.RequiredProperties = ["nodeFillType"];

/**
 * Gets or sets how tasks should be distributed across compute nodes
 * @member {module:model/TaskSchedulingPolicy.NodeFillTypeEnum} nodeFillType
 */
TaskSchedulingPolicy.prototype['nodeFillType'] = undefined;





/**
 * Allowed values for the <code>nodeFillType</code> property.
 * @enum {String}
 * @readonly
 */
TaskSchedulingPolicy['NodeFillTypeEnum'] = {

    /**
     * value: "spread"
     * @const
     */
    "spread": "spread",

    /**
     * value: "pack"
     * @const
     */
    "pack": "pack",

    /**
     * value: "unmapped"
     * @const
     */
    "unmapped": "unmapped"
};



export default TaskSchedulingPolicy;

