/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2015-12-01.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AutoPoolSpecification from './AutoPoolSpecification';

/**
 * The PoolInformation model module.
 * @module model/PoolInformation
 * @version 2015-12-01.2.2
 */
class PoolInformation {
    /**
     * Constructs a new <code>PoolInformation</code>.
     * Specifies how a job should be assigned to a pool.
     * @alias module:model/PoolInformation
     */
    constructor() { 
        
        PoolInformation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PoolInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PoolInformation} obj Optional instance to populate.
     * @return {module:model/PoolInformation} The populated <code>PoolInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PoolInformation();

            if (data.hasOwnProperty('autoPoolSpecification')) {
                obj['autoPoolSpecification'] = AutoPoolSpecification.constructFromObject(data['autoPoolSpecification']);
            }
            if (data.hasOwnProperty('poolId')) {
                obj['poolId'] = ApiClient.convertToType(data['poolId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PoolInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PoolInformation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `autoPoolSpecification`
        if (data['autoPoolSpecification']) { // data not null
          AutoPoolSpecification.validateJSON(data['autoPoolSpecification']);
        }
        // ensure the json data is a string
        if (data['poolId'] && !(typeof data['poolId'] === 'string' || data['poolId'] instanceof String)) {
            throw new Error("Expected the field `poolId` to be a primitive type in the JSON string but got " + data['poolId']);
        }

        return true;
    }


}



/**
 * @member {module:model/AutoPoolSpecification} autoPoolSpecification
 */
PoolInformation.prototype['autoPoolSpecification'] = undefined;

/**
 * Gets or sets the id of an existing pool. All the tasks of the job will run on the specified pool. You must specify either PoolId or AutoPoolSpecification, but not both.
 * @member {String} poolId
 */
PoolInformation.prototype['poolId'] = undefined;






export default PoolInformation;

