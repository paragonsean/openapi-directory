/*
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2015-12-01.2.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.BatchError;
import org.openapitools.client.model.CloudTask;
import org.openapitools.client.model.CloudTaskListResult;
import org.openapitools.client.model.CloudTaskListSubtasksResult;
import org.openapitools.client.model.TaskAddParameter;
import org.openapitools.client.model.TaskUpdateParameter;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TasksApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public TasksApi() {
        this(Configuration.getDefaultApiClient());
    }

    public TasksApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for taskAdd
     * @param jobId The id of the job to which the task is to be added. (required)
     * @param apiVersion Client API Version. (required)
     * @param taskAddParameter Specifies the task to be added. (required)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td>  </td><td>  * DataServiceId - Gets the OData id of the resource to which the request applied. <br>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call taskAddCall(String jobId, String apiVersion, TaskAddParameter taskAddParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = taskAddParameter;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}/tasks"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json; odata=minimalmetadata"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call taskAddValidateBeforeCall(String jobId, String apiVersion, TaskAddParameter taskAddParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling taskAdd(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling taskAdd(Async)");
        }

        // verify the required parameter 'taskAddParameter' is set
        if (taskAddParameter == null) {
            throw new ApiException("Missing the required parameter 'taskAddParameter' when calling taskAdd(Async)");
        }

        return taskAddCall(jobId, apiVersion, taskAddParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);

    }

    /**
     * 
     * Adds a task to the specified job.
     * @param jobId The id of the job to which the task is to be added. (required)
     * @param apiVersion Client API Version. (required)
     * @param taskAddParameter Specifies the task to be added. (required)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td>  </td><td>  * DataServiceId - Gets the OData id of the resource to which the request applied. <br>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public void taskAdd(String jobId, String apiVersion, TaskAddParameter taskAddParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        taskAddWithHttpInfo(jobId, apiVersion, taskAddParameter, timeout, clientRequestId, returnClientRequestId, ocpDate);
    }

    /**
     * 
     * Adds a task to the specified job.
     * @param jobId The id of the job to which the task is to be added. (required)
     * @param apiVersion Client API Version. (required)
     * @param taskAddParameter Specifies the task to be added. (required)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td>  </td><td>  * DataServiceId - Gets the OData id of the resource to which the request applied. <br>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> taskAddWithHttpInfo(String jobId, String apiVersion, TaskAddParameter taskAddParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        okhttp3.Call localVarCall = taskAddValidateBeforeCall(jobId, apiVersion, taskAddParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Adds a task to the specified job.
     * @param jobId The id of the job to which the task is to be added. (required)
     * @param apiVersion Client API Version. (required)
     * @param taskAddParameter Specifies the task to be added. (required)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td>  </td><td>  * DataServiceId - Gets the OData id of the resource to which the request applied. <br>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call taskAddAsync(String jobId, String apiVersion, TaskAddParameter taskAddParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = taskAddValidateBeforeCall(jobId, apiVersion, taskAddParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for taskDelete
     * @param jobId The id of the job from which to delete the task. (required)
     * @param taskId The id of the task to delete. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call taskDeleteCall(String jobId, String taskId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}/tasks/{taskId}"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()))
            .replace("{" + "taskId" + "}", localVarApiClient.escapeString(taskId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        if (ifMatch != null) {
            localVarHeaderParams.put("If-Match", localVarApiClient.parameterToString(ifMatch));
        }

        if (ifNoneMatch != null) {
            localVarHeaderParams.put("If-None-Match", localVarApiClient.parameterToString(ifNoneMatch));
        }

        if (ifModifiedSince != null) {
            localVarHeaderParams.put("If-Modified-Since", localVarApiClient.parameterToString(ifModifiedSince));
        }

        if (ifUnmodifiedSince != null) {
            localVarHeaderParams.put("If-Unmodified-Since", localVarApiClient.parameterToString(ifUnmodifiedSince));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call taskDeleteValidateBeforeCall(String jobId, String taskId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling taskDelete(Async)");
        }

        // verify the required parameter 'taskId' is set
        if (taskId == null) {
            throw new ApiException("Missing the required parameter 'taskId' when calling taskDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling taskDelete(Async)");
        }

        return taskDeleteCall(jobId, taskId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);

    }

    /**
     * 
     * Deletes a task from the specified job.
     * @param jobId The id of the job from which to delete the task. (required)
     * @param taskId The id of the task to delete. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public void taskDelete(String jobId, String taskId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        taskDeleteWithHttpInfo(jobId, taskId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince);
    }

    /**
     * 
     * Deletes a task from the specified job.
     * @param jobId The id of the job from which to delete the task. (required)
     * @param taskId The id of the task to delete. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> taskDeleteWithHttpInfo(String jobId, String taskId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        okhttp3.Call localVarCall = taskDeleteValidateBeforeCall(jobId, taskId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes a task from the specified job.
     * @param jobId The id of the job from which to delete the task. (required)
     * @param taskId The id of the task to delete. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call taskDeleteAsync(String jobId, String taskId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = taskDeleteValidateBeforeCall(jobId, taskId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for taskGet
     * @param jobId The id of the job that contains the task. (required)
     * @param taskId The id of the task to get information about. (required)
     * @param apiVersion Client API Version. (required)
     * @param $select Sets an OData $select clause. (optional)
     * @param $expand Sets an OData $expand clause. (optional)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * DataServiceId - Gets the OData id of the resource to which the request applied. <br>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call taskGetCall(String jobId, String taskId, String apiVersion, String $select, String $expand, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}/tasks/{taskId}"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()))
            .replace("{" + "taskId" + "}", localVarApiClient.escapeString(taskId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($select != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$select", $select));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        if (ifMatch != null) {
            localVarHeaderParams.put("If-Match", localVarApiClient.parameterToString(ifMatch));
        }

        if (ifNoneMatch != null) {
            localVarHeaderParams.put("If-None-Match", localVarApiClient.parameterToString(ifNoneMatch));
        }

        if (ifModifiedSince != null) {
            localVarHeaderParams.put("If-Modified-Since", localVarApiClient.parameterToString(ifModifiedSince));
        }

        if (ifUnmodifiedSince != null) {
            localVarHeaderParams.put("If-Unmodified-Since", localVarApiClient.parameterToString(ifUnmodifiedSince));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call taskGetValidateBeforeCall(String jobId, String taskId, String apiVersion, String $select, String $expand, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling taskGet(Async)");
        }

        // verify the required parameter 'taskId' is set
        if (taskId == null) {
            throw new ApiException("Missing the required parameter 'taskId' when calling taskGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling taskGet(Async)");
        }

        return taskGetCall(jobId, taskId, apiVersion, $select, $expand, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);

    }

    /**
     * 
     * Gets information about the specified task.
     * @param jobId The id of the job that contains the task. (required)
     * @param taskId The id of the task to get information about. (required)
     * @param apiVersion Client API Version. (required)
     * @param $select Sets an OData $select clause. (optional)
     * @param $expand Sets an OData $expand clause. (optional)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @return CloudTask
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * DataServiceId - Gets the OData id of the resource to which the request applied. <br>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public CloudTask taskGet(String jobId, String taskId, String apiVersion, String $select, String $expand, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        ApiResponse<CloudTask> localVarResp = taskGetWithHttpInfo(jobId, taskId, apiVersion, $select, $expand, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets information about the specified task.
     * @param jobId The id of the job that contains the task. (required)
     * @param taskId The id of the task to get information about. (required)
     * @param apiVersion Client API Version. (required)
     * @param $select Sets an OData $select clause. (optional)
     * @param $expand Sets an OData $expand clause. (optional)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @return ApiResponse&lt;CloudTask&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * DataServiceId - Gets the OData id of the resource to which the request applied. <br>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CloudTask> taskGetWithHttpInfo(String jobId, String taskId, String apiVersion, String $select, String $expand, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        okhttp3.Call localVarCall = taskGetValidateBeforeCall(jobId, taskId, apiVersion, $select, $expand, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, null);
        Type localVarReturnType = new TypeToken<CloudTask>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets information about the specified task.
     * @param jobId The id of the job that contains the task. (required)
     * @param taskId The id of the task to get information about. (required)
     * @param apiVersion Client API Version. (required)
     * @param $select Sets an OData $select clause. (optional)
     * @param $expand Sets an OData $expand clause. (optional)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * DataServiceId - Gets the OData id of the resource to which the request applied. <br>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call taskGetAsync(String jobId, String taskId, String apiVersion, String $select, String $expand, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback<CloudTask> _callback) throws ApiException {

        okhttp3.Call localVarCall = taskGetValidateBeforeCall(jobId, taskId, apiVersion, $select, $expand, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);
        Type localVarReturnType = new TypeToken<CloudTask>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for taskList
     * @param jobId The id of the job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter Sets an OData $filter clause. (optional)
     * @param $select Sets an OData $select clause. (optional)
     * @param $expand Sets an OData $expand clause. (optional)
     * @param maxresults Sets the maximum number of items to return in the response. (optional)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call taskListCall(String jobId, String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}/tasks"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if ($select != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$select", $select));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if (maxresults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxresults", maxresults));
        }

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call taskListValidateBeforeCall(String jobId, String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling taskList(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling taskList(Async)");
        }

        return taskListCall(jobId, apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);

    }

    /**
     * 
     * Lists all of the tasks that are associated with the specified job.
     * @param jobId The id of the job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter Sets an OData $filter clause. (optional)
     * @param $select Sets an OData $select clause. (optional)
     * @param $expand Sets an OData $expand clause. (optional)
     * @param maxresults Sets the maximum number of items to return in the response. (optional)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @return CloudTaskListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public CloudTaskListResult taskList(String jobId, String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        ApiResponse<CloudTaskListResult> localVarResp = taskListWithHttpInfo(jobId, apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all of the tasks that are associated with the specified job.
     * @param jobId The id of the job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter Sets an OData $filter clause. (optional)
     * @param $select Sets an OData $select clause. (optional)
     * @param $expand Sets an OData $expand clause. (optional)
     * @param maxresults Sets the maximum number of items to return in the response. (optional)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @return ApiResponse&lt;CloudTaskListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CloudTaskListResult> taskListWithHttpInfo(String jobId, String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        okhttp3.Call localVarCall = taskListValidateBeforeCall(jobId, apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, null);
        Type localVarReturnType = new TypeToken<CloudTaskListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all of the tasks that are associated with the specified job.
     * @param jobId The id of the job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter Sets an OData $filter clause. (optional)
     * @param $select Sets an OData $select clause. (optional)
     * @param $expand Sets an OData $expand clause. (optional)
     * @param maxresults Sets the maximum number of items to return in the response. (optional)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call taskListAsync(String jobId, String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback<CloudTaskListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = taskListValidateBeforeCall(jobId, apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);
        Type localVarReturnType = new TypeToken<CloudTaskListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for taskListSubtasks
     * @param jobId The id of the job. (required)
     * @param taskId The id of the task. (required)
     * @param apiVersion Client API Version. (required)
     * @param $select Sets an OData $select clause. (optional)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call taskListSubtasksCall(String jobId, String taskId, String apiVersion, String $select, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}/tasks/{taskId}/subtasksinfo"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()))
            .replace("{" + "taskId" + "}", localVarApiClient.escapeString(taskId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($select != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$select", $select));
        }

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call taskListSubtasksValidateBeforeCall(String jobId, String taskId, String apiVersion, String $select, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling taskListSubtasks(Async)");
        }

        // verify the required parameter 'taskId' is set
        if (taskId == null) {
            throw new ApiException("Missing the required parameter 'taskId' when calling taskListSubtasks(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling taskListSubtasks(Async)");
        }

        return taskListSubtasksCall(jobId, taskId, apiVersion, $select, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);

    }

    /**
     * 
     * Lists all of the subtasks that are associated with the specified multi-instance task.
     * @param jobId The id of the job. (required)
     * @param taskId The id of the task. (required)
     * @param apiVersion Client API Version. (required)
     * @param $select Sets an OData $select clause. (optional)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @return CloudTaskListSubtasksResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public CloudTaskListSubtasksResult taskListSubtasks(String jobId, String taskId, String apiVersion, String $select, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        ApiResponse<CloudTaskListSubtasksResult> localVarResp = taskListSubtasksWithHttpInfo(jobId, taskId, apiVersion, $select, timeout, clientRequestId, returnClientRequestId, ocpDate);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all of the subtasks that are associated with the specified multi-instance task.
     * @param jobId The id of the job. (required)
     * @param taskId The id of the task. (required)
     * @param apiVersion Client API Version. (required)
     * @param $select Sets an OData $select clause. (optional)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @return ApiResponse&lt;CloudTaskListSubtasksResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CloudTaskListSubtasksResult> taskListSubtasksWithHttpInfo(String jobId, String taskId, String apiVersion, String $select, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        okhttp3.Call localVarCall = taskListSubtasksValidateBeforeCall(jobId, taskId, apiVersion, $select, timeout, clientRequestId, returnClientRequestId, ocpDate, null);
        Type localVarReturnType = new TypeToken<CloudTaskListSubtasksResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all of the subtasks that are associated with the specified multi-instance task.
     * @param jobId The id of the job. (required)
     * @param taskId The id of the task. (required)
     * @param apiVersion Client API Version. (required)
     * @param $select Sets an OData $select clause. (optional)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call taskListSubtasksAsync(String jobId, String taskId, String apiVersion, String $select, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback<CloudTaskListSubtasksResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = taskListSubtasksValidateBeforeCall(jobId, taskId, apiVersion, $select, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);
        Type localVarReturnType = new TypeToken<CloudTaskListSubtasksResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for taskTerminate
     * @param jobId The id of the job containing the task. (required)
     * @param taskId The id of the task to terminate. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td>  </td><td>  * DataServiceId - Gets the OData id of the resource to which the request applied. <br>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call taskTerminateCall(String jobId, String taskId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}/tasks/{taskId}/terminate"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()))
            .replace("{" + "taskId" + "}", localVarApiClient.escapeString(taskId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        if (ifMatch != null) {
            localVarHeaderParams.put("If-Match", localVarApiClient.parameterToString(ifMatch));
        }

        if (ifNoneMatch != null) {
            localVarHeaderParams.put("If-None-Match", localVarApiClient.parameterToString(ifNoneMatch));
        }

        if (ifModifiedSince != null) {
            localVarHeaderParams.put("If-Modified-Since", localVarApiClient.parameterToString(ifModifiedSince));
        }

        if (ifUnmodifiedSince != null) {
            localVarHeaderParams.put("If-Unmodified-Since", localVarApiClient.parameterToString(ifUnmodifiedSince));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call taskTerminateValidateBeforeCall(String jobId, String taskId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling taskTerminate(Async)");
        }

        // verify the required parameter 'taskId' is set
        if (taskId == null) {
            throw new ApiException("Missing the required parameter 'taskId' when calling taskTerminate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling taskTerminate(Async)");
        }

        return taskTerminateCall(jobId, taskId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);

    }

    /**
     * 
     * Terminates the specified task.
     * @param jobId The id of the job containing the task. (required)
     * @param taskId The id of the task to terminate. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td>  </td><td>  * DataServiceId - Gets the OData id of the resource to which the request applied. <br>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public void taskTerminate(String jobId, String taskId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        taskTerminateWithHttpInfo(jobId, taskId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince);
    }

    /**
     * 
     * Terminates the specified task.
     * @param jobId The id of the job containing the task. (required)
     * @param taskId The id of the task to terminate. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td>  </td><td>  * DataServiceId - Gets the OData id of the resource to which the request applied. <br>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> taskTerminateWithHttpInfo(String jobId, String taskId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        okhttp3.Call localVarCall = taskTerminateValidateBeforeCall(jobId, taskId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Terminates the specified task.
     * @param jobId The id of the job containing the task. (required)
     * @param taskId The id of the task to terminate. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 204 </td><td>  </td><td>  * DataServiceId - Gets the OData id of the resource to which the request applied. <br>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call taskTerminateAsync(String jobId, String taskId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = taskTerminateValidateBeforeCall(jobId, taskId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for taskUpdate
     * @param jobId The id of the job containing the task. (required)
     * @param taskId The id of the task to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param taskUpdateParameter The parameters for the request. (required)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * DataServiceId - Gets the OData id of the resource to which the request applied. <br>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call taskUpdateCall(String jobId, String taskId, String apiVersion, TaskUpdateParameter taskUpdateParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = taskUpdateParameter;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}/tasks/{taskId}"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()))
            .replace("{" + "taskId" + "}", localVarApiClient.escapeString(taskId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        if (ifMatch != null) {
            localVarHeaderParams.put("If-Match", localVarApiClient.parameterToString(ifMatch));
        }

        if (ifNoneMatch != null) {
            localVarHeaderParams.put("If-None-Match", localVarApiClient.parameterToString(ifNoneMatch));
        }

        if (ifModifiedSince != null) {
            localVarHeaderParams.put("If-Modified-Since", localVarApiClient.parameterToString(ifModifiedSince));
        }

        if (ifUnmodifiedSince != null) {
            localVarHeaderParams.put("If-Unmodified-Since", localVarApiClient.parameterToString(ifUnmodifiedSince));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json; odata=minimalmetadata"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call taskUpdateValidateBeforeCall(String jobId, String taskId, String apiVersion, TaskUpdateParameter taskUpdateParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling taskUpdate(Async)");
        }

        // verify the required parameter 'taskId' is set
        if (taskId == null) {
            throw new ApiException("Missing the required parameter 'taskId' when calling taskUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling taskUpdate(Async)");
        }

        // verify the required parameter 'taskUpdateParameter' is set
        if (taskUpdateParameter == null) {
            throw new ApiException("Missing the required parameter 'taskUpdateParameter' when calling taskUpdate(Async)");
        }

        return taskUpdateCall(jobId, taskId, apiVersion, taskUpdateParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);

    }

    /**
     * 
     * Updates the properties of the specified task.
     * @param jobId The id of the job containing the task. (required)
     * @param taskId The id of the task to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param taskUpdateParameter The parameters for the request. (required)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * DataServiceId - Gets the OData id of the resource to which the request applied. <br>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public void taskUpdate(String jobId, String taskId, String apiVersion, TaskUpdateParameter taskUpdateParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        taskUpdateWithHttpInfo(jobId, taskId, apiVersion, taskUpdateParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince);
    }

    /**
     * 
     * Updates the properties of the specified task.
     * @param jobId The id of the job containing the task. (required)
     * @param taskId The id of the task to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param taskUpdateParameter The parameters for the request. (required)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * DataServiceId - Gets the OData id of the resource to which the request applied. <br>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> taskUpdateWithHttpInfo(String jobId, String taskId, String apiVersion, TaskUpdateParameter taskUpdateParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        okhttp3.Call localVarCall = taskUpdateValidateBeforeCall(jobId, taskId, apiVersion, taskUpdateParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Updates the properties of the specified task.
     * @param jobId The id of the job containing the task. (required)
     * @param taskId The id of the task to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param taskUpdateParameter The parameters for the request. (required)
     * @param timeout Sets the maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId Caller generated request identity, in the form of a GUID with no decoration such as curly braces e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Specifies if the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * DataServiceId - Gets the OData id of the resource to which the request applied. <br>  * ETag - Gets the content of the ETag HTTP response header. <br>  * Last-Modified - Gets the content of the Last-Modified HTTP response header. <br>  * client-request-id - Gets the ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - Gets the value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> Error from the Batch service </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call taskUpdateAsync(String jobId, String taskId, String apiVersion, TaskUpdateParameter taskUpdateParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = taskUpdateValidateBeforeCall(jobId, taskId, apiVersion, taskUpdateParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
