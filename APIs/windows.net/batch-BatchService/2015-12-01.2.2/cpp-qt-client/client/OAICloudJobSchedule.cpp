/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2015-12-01.2.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICloudJobSchedule.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICloudJobSchedule::OAICloudJobSchedule(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICloudJobSchedule::OAICloudJobSchedule() {
    this->initializeModel();
}

OAICloudJobSchedule::~OAICloudJobSchedule() {}

void OAICloudJobSchedule::initializeModel() {

    m_creation_time_isSet = false;
    m_creation_time_isValid = false;

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_e_tag_isSet = false;
    m_e_tag_isValid = false;

    m_execution_info_isSet = false;
    m_execution_info_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_job_specification_isSet = false;
    m_job_specification_isValid = false;

    m_last_modified_isSet = false;
    m_last_modified_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_previous_state_isSet = false;
    m_previous_state_isValid = false;

    m_previous_state_transition_time_isSet = false;
    m_previous_state_transition_time_isValid = false;

    m_schedule_isSet = false;
    m_schedule_isValid = false;

    m_state_isSet = false;
    m_state_isValid = false;

    m_state_transition_time_isSet = false;
    m_state_transition_time_isValid = false;

    m_stats_isSet = false;
    m_stats_isValid = false;

    m_url_isSet = false;
    m_url_isValid = false;
}

void OAICloudJobSchedule::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICloudJobSchedule::fromJsonObject(QJsonObject json) {

    m_creation_time_isValid = ::OpenAPI::fromJsonValue(m_creation_time, json[QString("creationTime")]);
    m_creation_time_isSet = !json[QString("creationTime")].isNull() && m_creation_time_isValid;

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_e_tag_isValid = ::OpenAPI::fromJsonValue(m_e_tag, json[QString("eTag")]);
    m_e_tag_isSet = !json[QString("eTag")].isNull() && m_e_tag_isValid;

    m_execution_info_isValid = ::OpenAPI::fromJsonValue(m_execution_info, json[QString("executionInfo")]);
    m_execution_info_isSet = !json[QString("executionInfo")].isNull() && m_execution_info_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_job_specification_isValid = ::OpenAPI::fromJsonValue(m_job_specification, json[QString("jobSpecification")]);
    m_job_specification_isSet = !json[QString("jobSpecification")].isNull() && m_job_specification_isValid;

    m_last_modified_isValid = ::OpenAPI::fromJsonValue(m_last_modified, json[QString("lastModified")]);
    m_last_modified_isSet = !json[QString("lastModified")].isNull() && m_last_modified_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_previous_state_isValid = ::OpenAPI::fromJsonValue(m_previous_state, json[QString("previousState")]);
    m_previous_state_isSet = !json[QString("previousState")].isNull() && m_previous_state_isValid;

    m_previous_state_transition_time_isValid = ::OpenAPI::fromJsonValue(m_previous_state_transition_time, json[QString("previousStateTransitionTime")]);
    m_previous_state_transition_time_isSet = !json[QString("previousStateTransitionTime")].isNull() && m_previous_state_transition_time_isValid;

    m_schedule_isValid = ::OpenAPI::fromJsonValue(m_schedule, json[QString("schedule")]);
    m_schedule_isSet = !json[QString("schedule")].isNull() && m_schedule_isValid;

    m_state_isValid = ::OpenAPI::fromJsonValue(m_state, json[QString("state")]);
    m_state_isSet = !json[QString("state")].isNull() && m_state_isValid;

    m_state_transition_time_isValid = ::OpenAPI::fromJsonValue(m_state_transition_time, json[QString("stateTransitionTime")]);
    m_state_transition_time_isSet = !json[QString("stateTransitionTime")].isNull() && m_state_transition_time_isValid;

    m_stats_isValid = ::OpenAPI::fromJsonValue(m_stats, json[QString("stats")]);
    m_stats_isSet = !json[QString("stats")].isNull() && m_stats_isValid;

    m_url_isValid = ::OpenAPI::fromJsonValue(m_url, json[QString("url")]);
    m_url_isSet = !json[QString("url")].isNull() && m_url_isValid;
}

QString OAICloudJobSchedule::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICloudJobSchedule::asJsonObject() const {
    QJsonObject obj;
    if (m_creation_time_isSet) {
        obj.insert(QString("creationTime"), ::OpenAPI::toJsonValue(m_creation_time));
    }
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_e_tag_isSet) {
        obj.insert(QString("eTag"), ::OpenAPI::toJsonValue(m_e_tag));
    }
    if (m_execution_info.isSet()) {
        obj.insert(QString("executionInfo"), ::OpenAPI::toJsonValue(m_execution_info));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_job_specification.isSet()) {
        obj.insert(QString("jobSpecification"), ::OpenAPI::toJsonValue(m_job_specification));
    }
    if (m_last_modified_isSet) {
        obj.insert(QString("lastModified"), ::OpenAPI::toJsonValue(m_last_modified));
    }
    if (m_metadata.size() > 0) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_previous_state_isSet) {
        obj.insert(QString("previousState"), ::OpenAPI::toJsonValue(m_previous_state));
    }
    if (m_previous_state_transition_time_isSet) {
        obj.insert(QString("previousStateTransitionTime"), ::OpenAPI::toJsonValue(m_previous_state_transition_time));
    }
    if (m_schedule.isSet()) {
        obj.insert(QString("schedule"), ::OpenAPI::toJsonValue(m_schedule));
    }
    if (m_state_isSet) {
        obj.insert(QString("state"), ::OpenAPI::toJsonValue(m_state));
    }
    if (m_state_transition_time_isSet) {
        obj.insert(QString("stateTransitionTime"), ::OpenAPI::toJsonValue(m_state_transition_time));
    }
    if (m_stats.isSet()) {
        obj.insert(QString("stats"), ::OpenAPI::toJsonValue(m_stats));
    }
    if (m_url_isSet) {
        obj.insert(QString("url"), ::OpenAPI::toJsonValue(m_url));
    }
    return obj;
}

QDateTime OAICloudJobSchedule::getCreationTime() const {
    return m_creation_time;
}
void OAICloudJobSchedule::setCreationTime(const QDateTime &creation_time) {
    m_creation_time = creation_time;
    m_creation_time_isSet = true;
}

bool OAICloudJobSchedule::is_creation_time_Set() const{
    return m_creation_time_isSet;
}

bool OAICloudJobSchedule::is_creation_time_Valid() const{
    return m_creation_time_isValid;
}

QString OAICloudJobSchedule::getDisplayName() const {
    return m_display_name;
}
void OAICloudJobSchedule::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAICloudJobSchedule::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAICloudJobSchedule::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAICloudJobSchedule::getETag() const {
    return m_e_tag;
}
void OAICloudJobSchedule::setETag(const QString &e_tag) {
    m_e_tag = e_tag;
    m_e_tag_isSet = true;
}

bool OAICloudJobSchedule::is_e_tag_Set() const{
    return m_e_tag_isSet;
}

bool OAICloudJobSchedule::is_e_tag_Valid() const{
    return m_e_tag_isValid;
}

OAIJobScheduleExecutionInformation OAICloudJobSchedule::getExecutionInfo() const {
    return m_execution_info;
}
void OAICloudJobSchedule::setExecutionInfo(const OAIJobScheduleExecutionInformation &execution_info) {
    m_execution_info = execution_info;
    m_execution_info_isSet = true;
}

bool OAICloudJobSchedule::is_execution_info_Set() const{
    return m_execution_info_isSet;
}

bool OAICloudJobSchedule::is_execution_info_Valid() const{
    return m_execution_info_isValid;
}

QString OAICloudJobSchedule::getId() const {
    return m_id;
}
void OAICloudJobSchedule::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICloudJobSchedule::is_id_Set() const{
    return m_id_isSet;
}

bool OAICloudJobSchedule::is_id_Valid() const{
    return m_id_isValid;
}

OAIJobSpecification OAICloudJobSchedule::getJobSpecification() const {
    return m_job_specification;
}
void OAICloudJobSchedule::setJobSpecification(const OAIJobSpecification &job_specification) {
    m_job_specification = job_specification;
    m_job_specification_isSet = true;
}

bool OAICloudJobSchedule::is_job_specification_Set() const{
    return m_job_specification_isSet;
}

bool OAICloudJobSchedule::is_job_specification_Valid() const{
    return m_job_specification_isValid;
}

QDateTime OAICloudJobSchedule::getLastModified() const {
    return m_last_modified;
}
void OAICloudJobSchedule::setLastModified(const QDateTime &last_modified) {
    m_last_modified = last_modified;
    m_last_modified_isSet = true;
}

bool OAICloudJobSchedule::is_last_modified_Set() const{
    return m_last_modified_isSet;
}

bool OAICloudJobSchedule::is_last_modified_Valid() const{
    return m_last_modified_isValid;
}

QList<OAIMetadataItem> OAICloudJobSchedule::getMetadata() const {
    return m_metadata;
}
void OAICloudJobSchedule::setMetadata(const QList<OAIMetadataItem> &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAICloudJobSchedule::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAICloudJobSchedule::is_metadata_Valid() const{
    return m_metadata_isValid;
}

QString OAICloudJobSchedule::getPreviousState() const {
    return m_previous_state;
}
void OAICloudJobSchedule::setPreviousState(const QString &previous_state) {
    m_previous_state = previous_state;
    m_previous_state_isSet = true;
}

bool OAICloudJobSchedule::is_previous_state_Set() const{
    return m_previous_state_isSet;
}

bool OAICloudJobSchedule::is_previous_state_Valid() const{
    return m_previous_state_isValid;
}

QDateTime OAICloudJobSchedule::getPreviousStateTransitionTime() const {
    return m_previous_state_transition_time;
}
void OAICloudJobSchedule::setPreviousStateTransitionTime(const QDateTime &previous_state_transition_time) {
    m_previous_state_transition_time = previous_state_transition_time;
    m_previous_state_transition_time_isSet = true;
}

bool OAICloudJobSchedule::is_previous_state_transition_time_Set() const{
    return m_previous_state_transition_time_isSet;
}

bool OAICloudJobSchedule::is_previous_state_transition_time_Valid() const{
    return m_previous_state_transition_time_isValid;
}

OAISchedule OAICloudJobSchedule::getSchedule() const {
    return m_schedule;
}
void OAICloudJobSchedule::setSchedule(const OAISchedule &schedule) {
    m_schedule = schedule;
    m_schedule_isSet = true;
}

bool OAICloudJobSchedule::is_schedule_Set() const{
    return m_schedule_isSet;
}

bool OAICloudJobSchedule::is_schedule_Valid() const{
    return m_schedule_isValid;
}

QString OAICloudJobSchedule::getState() const {
    return m_state;
}
void OAICloudJobSchedule::setState(const QString &state) {
    m_state = state;
    m_state_isSet = true;
}

bool OAICloudJobSchedule::is_state_Set() const{
    return m_state_isSet;
}

bool OAICloudJobSchedule::is_state_Valid() const{
    return m_state_isValid;
}

QDateTime OAICloudJobSchedule::getStateTransitionTime() const {
    return m_state_transition_time;
}
void OAICloudJobSchedule::setStateTransitionTime(const QDateTime &state_transition_time) {
    m_state_transition_time = state_transition_time;
    m_state_transition_time_isSet = true;
}

bool OAICloudJobSchedule::is_state_transition_time_Set() const{
    return m_state_transition_time_isSet;
}

bool OAICloudJobSchedule::is_state_transition_time_Valid() const{
    return m_state_transition_time_isValid;
}

OAIJobScheduleStatistics OAICloudJobSchedule::getStats() const {
    return m_stats;
}
void OAICloudJobSchedule::setStats(const OAIJobScheduleStatistics &stats) {
    m_stats = stats;
    m_stats_isSet = true;
}

bool OAICloudJobSchedule::is_stats_Set() const{
    return m_stats_isSet;
}

bool OAICloudJobSchedule::is_stats_Valid() const{
    return m_stats_isValid;
}

QString OAICloudJobSchedule::getUrl() const {
    return m_url;
}
void OAICloudJobSchedule::setUrl(const QString &url) {
    m_url = url;
    m_url_isSet = true;
}

bool OAICloudJobSchedule::is_url_Set() const{
    return m_url_isSet;
}

bool OAICloudJobSchedule::is_url_Valid() const{
    return m_url_isValid;
}

bool OAICloudJobSchedule::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creation_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_e_tag_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_execution_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_job_specification.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_modified_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_previous_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_previous_state_transition_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_schedule.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_state_transition_time_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stats.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_url_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICloudJobSchedule::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
