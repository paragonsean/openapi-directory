/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2015-12-01.2.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICloudJobSchedule.h
 *
 * A job schedule that allows recurring jobs by specifying when to run jobs and a specification used to create each job.
 */

#ifndef OAICloudJobSchedule_H
#define OAICloudJobSchedule_H

#include <QJsonObject>

#include "OAIJobScheduleExecutionInformation.h"
#include "OAIJobScheduleStatistics.h"
#include "OAIJobSpecification.h"
#include "OAIMetadataItem.h"
#include "OAISchedule.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIJobScheduleExecutionInformation;
class OAIJobSpecification;
class OAIMetadataItem;
class OAISchedule;
class OAIJobScheduleStatistics;

class OAICloudJobSchedule : public OAIObject {
public:
    OAICloudJobSchedule();
    OAICloudJobSchedule(QString json);
    ~OAICloudJobSchedule() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getCreationTime() const;
    void setCreationTime(const QDateTime &creation_time);
    bool is_creation_time_Set() const;
    bool is_creation_time_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QString getETag() const;
    void setETag(const QString &e_tag);
    bool is_e_tag_Set() const;
    bool is_e_tag_Valid() const;

    OAIJobScheduleExecutionInformation getExecutionInfo() const;
    void setExecutionInfo(const OAIJobScheduleExecutionInformation &execution_info);
    bool is_execution_info_Set() const;
    bool is_execution_info_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIJobSpecification getJobSpecification() const;
    void setJobSpecification(const OAIJobSpecification &job_specification);
    bool is_job_specification_Set() const;
    bool is_job_specification_Valid() const;

    QDateTime getLastModified() const;
    void setLastModified(const QDateTime &last_modified);
    bool is_last_modified_Set() const;
    bool is_last_modified_Valid() const;

    QList<OAIMetadataItem> getMetadata() const;
    void setMetadata(const QList<OAIMetadataItem> &metadata);
    bool is_metadata_Set() const;
    bool is_metadata_Valid() const;

    QString getPreviousState() const;
    void setPreviousState(const QString &previous_state);
    bool is_previous_state_Set() const;
    bool is_previous_state_Valid() const;

    QDateTime getPreviousStateTransitionTime() const;
    void setPreviousStateTransitionTime(const QDateTime &previous_state_transition_time);
    bool is_previous_state_transition_time_Set() const;
    bool is_previous_state_transition_time_Valid() const;

    OAISchedule getSchedule() const;
    void setSchedule(const OAISchedule &schedule);
    bool is_schedule_Set() const;
    bool is_schedule_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QDateTime getStateTransitionTime() const;
    void setStateTransitionTime(const QDateTime &state_transition_time);
    bool is_state_transition_time_Set() const;
    bool is_state_transition_time_Valid() const;

    OAIJobScheduleStatistics getStats() const;
    void setStats(const OAIJobScheduleStatistics &stats);
    bool is_stats_Set() const;
    bool is_stats_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_creation_time;
    bool m_creation_time_isSet;
    bool m_creation_time_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QString m_e_tag;
    bool m_e_tag_isSet;
    bool m_e_tag_isValid;

    OAIJobScheduleExecutionInformation m_execution_info;
    bool m_execution_info_isSet;
    bool m_execution_info_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIJobSpecification m_job_specification;
    bool m_job_specification_isSet;
    bool m_job_specification_isValid;

    QDateTime m_last_modified;
    bool m_last_modified_isSet;
    bool m_last_modified_isValid;

    QList<OAIMetadataItem> m_metadata;
    bool m_metadata_isSet;
    bool m_metadata_isValid;

    QString m_previous_state;
    bool m_previous_state_isSet;
    bool m_previous_state_isValid;

    QDateTime m_previous_state_transition_time;
    bool m_previous_state_transition_time_isSet;
    bool m_previous_state_transition_time_isValid;

    OAISchedule m_schedule;
    bool m_schedule_isSet;
    bool m_schedule_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QDateTime m_state_transition_time;
    bool m_state_transition_time_isSet;
    bool m_state_transition_time_isValid;

    OAIJobScheduleStatistics m_stats;
    bool m_stats_isSet;
    bool m_stats_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICloudJobSchedule)

#endif // OAICloudJobSchedule_H
