# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.batch_error_detail import BatchErrorDetail
from openapi_server.models.error_message import ErrorMessage
from openapi_server import util


class BatchError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, message: ErrorMessage=None, values: List[BatchErrorDetail]=None):
        """BatchError - a model defined in OpenAPI

        :param code: The code of this BatchError.
        :param message: The message of this BatchError.
        :param values: The values of this BatchError.
        """
        self.openapi_types = {
            'code': str,
            'message': ErrorMessage,
            'values': List[BatchErrorDetail]
        }

        self.attribute_map = {
            'code': 'code',
            'message': 'message',
            'values': 'values'
        }

        self._code = code
        self._message = message
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BatchError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BatchError of this BatchError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this BatchError.

        Gets or sets an identifier for the error. Codes are invariant and are intended to be consumed programmatically.

        :return: The code of this BatchError.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this BatchError.

        Gets or sets an identifier for the error. Codes are invariant and are intended to be consumed programmatically.

        :param code: The code of this BatchError.
        :type code: str
        """

        self._code = code

    @property
    def message(self):
        """Gets the message of this BatchError.


        :return: The message of this BatchError.
        :rtype: ErrorMessage
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this BatchError.


        :param message: The message of this BatchError.
        :type message: ErrorMessage
        """

        self._message = message

    @property
    def values(self):
        """Gets the values of this BatchError.

        Gets or sets a collection of key-value pairs containing additional details about the error.

        :return: The values of this BatchError.
        :rtype: List[BatchErrorDetail]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this BatchError.

        Gets or sets a collection of key-value pairs containing additional details about the error.

        :param values: The values of this BatchError.
        :type values: List[BatchErrorDetail]
        """

        self._values = values
