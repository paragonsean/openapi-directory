# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ComputeNodeInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, affinity_id: str=None, node_id: str=None, node_url: str=None, pool_id: str=None, task_root_directory: str=None, task_root_directory_url: str=None):
        """ComputeNodeInformation - a model defined in OpenAPI

        :param affinity_id: The affinity_id of this ComputeNodeInformation.
        :param node_id: The node_id of this ComputeNodeInformation.
        :param node_url: The node_url of this ComputeNodeInformation.
        :param pool_id: The pool_id of this ComputeNodeInformation.
        :param task_root_directory: The task_root_directory of this ComputeNodeInformation.
        :param task_root_directory_url: The task_root_directory_url of this ComputeNodeInformation.
        """
        self.openapi_types = {
            'affinity_id': str,
            'node_id': str,
            'node_url': str,
            'pool_id': str,
            'task_root_directory': str,
            'task_root_directory_url': str
        }

        self.attribute_map = {
            'affinity_id': 'affinityId',
            'node_id': 'nodeId',
            'node_url': 'nodeUrl',
            'pool_id': 'poolId',
            'task_root_directory': 'taskRootDirectory',
            'task_root_directory_url': 'taskRootDirectoryUrl'
        }

        self._affinity_id = affinity_id
        self._node_id = node_id
        self._node_url = node_url
        self._pool_id = pool_id
        self._task_root_directory = task_root_directory
        self._task_root_directory_url = task_root_directory_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComputeNodeInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComputeNodeInformation of this ComputeNodeInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def affinity_id(self):
        """Gets the affinity_id of this ComputeNodeInformation.


        :return: The affinity_id of this ComputeNodeInformation.
        :rtype: str
        """
        return self._affinity_id

    @affinity_id.setter
    def affinity_id(self, affinity_id):
        """Sets the affinity_id of this ComputeNodeInformation.


        :param affinity_id: The affinity_id of this ComputeNodeInformation.
        :type affinity_id: str
        """

        self._affinity_id = affinity_id

    @property
    def node_id(self):
        """Gets the node_id of this ComputeNodeInformation.


        :return: The node_id of this ComputeNodeInformation.
        :rtype: str
        """
        return self._node_id

    @node_id.setter
    def node_id(self, node_id):
        """Sets the node_id of this ComputeNodeInformation.


        :param node_id: The node_id of this ComputeNodeInformation.
        :type node_id: str
        """

        self._node_id = node_id

    @property
    def node_url(self):
        """Gets the node_url of this ComputeNodeInformation.


        :return: The node_url of this ComputeNodeInformation.
        :rtype: str
        """
        return self._node_url

    @node_url.setter
    def node_url(self, node_url):
        """Sets the node_url of this ComputeNodeInformation.


        :param node_url: The node_url of this ComputeNodeInformation.
        :type node_url: str
        """

        self._node_url = node_url

    @property
    def pool_id(self):
        """Gets the pool_id of this ComputeNodeInformation.


        :return: The pool_id of this ComputeNodeInformation.
        :rtype: str
        """
        return self._pool_id

    @pool_id.setter
    def pool_id(self, pool_id):
        """Sets the pool_id of this ComputeNodeInformation.


        :param pool_id: The pool_id of this ComputeNodeInformation.
        :type pool_id: str
        """

        self._pool_id = pool_id

    @property
    def task_root_directory(self):
        """Gets the task_root_directory of this ComputeNodeInformation.


        :return: The task_root_directory of this ComputeNodeInformation.
        :rtype: str
        """
        return self._task_root_directory

    @task_root_directory.setter
    def task_root_directory(self, task_root_directory):
        """Sets the task_root_directory of this ComputeNodeInformation.


        :param task_root_directory: The task_root_directory of this ComputeNodeInformation.
        :type task_root_directory: str
        """

        self._task_root_directory = task_root_directory

    @property
    def task_root_directory_url(self):
        """Gets the task_root_directory_url of this ComputeNodeInformation.


        :return: The task_root_directory_url of this ComputeNodeInformation.
        :rtype: str
        """
        return self._task_root_directory_url

    @task_root_directory_url.setter
    def task_root_directory_url(self, task_root_directory_url):
        """Sets the task_root_directory_url of this ComputeNodeInformation.


        :param task_root_directory_url: The task_root_directory_url of this ComputeNodeInformation.
        :type task_root_directory_url: str
        """

        self._task_root_directory_url = task_root_directory_url
