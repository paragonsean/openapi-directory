# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class JobDisableParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, disable_tasks: str=None):
        """JobDisableParameter - a model defined in OpenAPI

        :param disable_tasks: The disable_tasks of this JobDisableParameter.
        """
        self.openapi_types = {
            'disable_tasks': str
        }

        self.attribute_map = {
            'disable_tasks': 'disableTasks'
        }

        self._disable_tasks = disable_tasks

    @classmethod
    def from_dict(cls, dikt: dict) -> 'JobDisableParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The JobDisableParameter of this JobDisableParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def disable_tasks(self):
        """Gets the disable_tasks of this JobDisableParameter.

        Possible values are: requeue – Terminate running tasks and requeue them. The tasks will run again when the job is enabled. terminate – Terminate running tasks. The tasks will not run again. wait – Allow currently running tasks to complete.

        :return: The disable_tasks of this JobDisableParameter.
        :rtype: str
        """
        return self._disable_tasks

    @disable_tasks.setter
    def disable_tasks(self, disable_tasks):
        """Sets the disable_tasks of this JobDisableParameter.

        Possible values are: requeue – Terminate running tasks and requeue them. The tasks will run again when the job is enabled. terminate – Terminate running tasks. The tasks will not run again. wait – Allow currently running tasks to complete.

        :param disable_tasks: The disable_tasks of this JobDisableParameter.
        :type disable_tasks: str
        """
        allowed_values = ["requeue", "terminate", "wait"]  # noqa: E501
        if disable_tasks not in allowed_values:
            raise ValueError(
                "Invalid value for `disable_tasks` ({0}), must be one of {1}"
                .format(disable_tasks, allowed_values)
            )

        self._disable_tasks = disable_tasks
