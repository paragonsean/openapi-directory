/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2016-07-01.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BatchService);
  }
}(this, function(expect, BatchService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BatchService.JobStatistics();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('JobStatistics', function() {
    it('should create an instance of JobStatistics', function() {
      // uncomment below and update the code to test JobStatistics
      //var instance = new BatchService.JobStatistics();
      //expect(instance).to.be.a(BatchService.JobStatistics);
    });

    it('should have the property kernelCPUTime (base name: "kernelCPUTime")', function() {
      // uncomment below and update the code to test the property kernelCPUTime
      //var instance = new BatchService.JobStatistics();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdateTime (base name: "lastUpdateTime")', function() {
      // uncomment below and update the code to test the property lastUpdateTime
      //var instance = new BatchService.JobStatistics();
      //expect(instance).to.be();
    });

    it('should have the property numFailedTasks (base name: "numFailedTasks")', function() {
      // uncomment below and update the code to test the property numFailedTasks
      //var instance = new BatchService.JobStatistics();
      //expect(instance).to.be();
    });

    it('should have the property numSucceededTasks (base name: "numSucceededTasks")', function() {
      // uncomment below and update the code to test the property numSucceededTasks
      //var instance = new BatchService.JobStatistics();
      //expect(instance).to.be();
    });

    it('should have the property numTaskRetries (base name: "numTaskRetries")', function() {
      // uncomment below and update the code to test the property numTaskRetries
      //var instance = new BatchService.JobStatistics();
      //expect(instance).to.be();
    });

    it('should have the property readIOGiB (base name: "readIOGiB")', function() {
      // uncomment below and update the code to test the property readIOGiB
      //var instance = new BatchService.JobStatistics();
      //expect(instance).to.be();
    });

    it('should have the property readIOps (base name: "readIOps")', function() {
      // uncomment below and update the code to test the property readIOps
      //var instance = new BatchService.JobStatistics();
      //expect(instance).to.be();
    });

    it('should have the property startTime (base name: "startTime")', function() {
      // uncomment below and update the code to test the property startTime
      //var instance = new BatchService.JobStatistics();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instance = new BatchService.JobStatistics();
      //expect(instance).to.be();
    });

    it('should have the property userCPUTime (base name: "userCPUTime")', function() {
      // uncomment below and update the code to test the property userCPUTime
      //var instance = new BatchService.JobStatistics();
      //expect(instance).to.be();
    });

    it('should have the property waitTime (base name: "waitTime")', function() {
      // uncomment below and update the code to test the property waitTime
      //var instance = new BatchService.JobStatistics();
      //expect(instance).to.be();
    });

    it('should have the property wallClockTime (base name: "wallClockTime")', function() {
      // uncomment below and update the code to test the property wallClockTime
      //var instance = new BatchService.JobStatistics();
      //expect(instance).to.be();
    });

    it('should have the property writeIOGiB (base name: "writeIOGiB")', function() {
      // uncomment below and update the code to test the property writeIOGiB
      //var instance = new BatchService.JobStatistics();
      //expect(instance).to.be();
    });

    it('should have the property writeIOps (base name: "writeIOps")', function() {
      // uncomment below and update the code to test the property writeIOps
      //var instance = new BatchService.JobStatistics();
      //expect(instance).to.be();
    });

  });

}));
