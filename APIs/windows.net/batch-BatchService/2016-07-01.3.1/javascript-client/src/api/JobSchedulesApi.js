/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2016-07-01.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import BatchError from '../model/BatchError';
import CloudJobSchedule from '../model/CloudJobSchedule';
import CloudJobScheduleListResult from '../model/CloudJobScheduleListResult';
import JobScheduleAddParameter from '../model/JobScheduleAddParameter';
import JobSchedulePatchParameter from '../model/JobSchedulePatchParameter';
import JobScheduleUpdateParameter from '../model/JobScheduleUpdateParameter';

/**
* JobSchedules service.
* @module api/JobSchedulesApi
* @version 2016-07-01.3.1
*/
export default class JobSchedulesApi {

    /**
    * Constructs a new JobSchedulesApi. 
    * @alias module:api/JobSchedulesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the jobScheduleAdd operation.
     * @callback module:api/JobSchedulesApi~jobScheduleAddCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Adds a job schedule to the specified account.
     * @param {String} apiVersion Client API Version.
     * @param {module:model/JobScheduleAddParameter} cloudJobSchedule The job schedule to be added.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
     * @param {module:api/JobSchedulesApi~jobScheduleAddCallback} callback The callback function, accepting three arguments: error, data, response
     */
    jobScheduleAdd(apiVersion, cloudJobSchedule, opts, callback) {
      opts = opts || {};
      let postBody = cloudJobSchedule;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling jobScheduleAdd");
      }
      // verify the required parameter 'cloudJobSchedule' is set
      if (cloudJobSchedule === undefined || cloudJobSchedule === null) {
        throw new Error("Missing the required parameter 'cloudJobSchedule' when calling jobScheduleAdd");
      }

      let pathParams = {
      };
      let queryParams = {
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json; odata=minimalmetadata'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/jobschedules', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the jobScheduleDelete operation.
     * @callback module:api/JobSchedulesApi~jobScheduleDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Deletes a job schedule from the specified account.
     * When you delete a job schedule, this also deletes all jobs and tasks under that schedule. When tasks are deleted, all the files in their working directories on the compute nodes are also deleted (the retention period is ignored). The job schedule statistics are no longer accessible once the job schedule is deleted, though they are still counted towards account lifetime statistics.
     * @param {String} jobScheduleId The ID of the job schedule to delete.
     * @param {String} apiVersion Client API Version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
     * @param {String} [ifMatch] An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
     * @param {String} [ifNoneMatch] An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
     * @param {String} [ifModifiedSince] Specify this header to perform the operation only if the resource has been modified since the specified date/time.
     * @param {String} [ifUnmodifiedSince] Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
     * @param {module:api/JobSchedulesApi~jobScheduleDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    jobScheduleDelete(jobScheduleId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'jobScheduleId' is set
      if (jobScheduleId === undefined || jobScheduleId === null) {
        throw new Error("Missing the required parameter 'jobScheduleId' when calling jobScheduleDelete");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling jobScheduleDelete");
      }

      let pathParams = {
        'jobScheduleId': jobScheduleId
      };
      let queryParams = {
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate'],
        'If-Match': opts['ifMatch'],
        'If-None-Match': opts['ifNoneMatch'],
        'If-Modified-Since': opts['ifModifiedSince'],
        'If-Unmodified-Since': opts['ifUnmodifiedSince']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/jobschedules/{jobScheduleId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the jobScheduleDisable operation.
     * @callback module:api/JobSchedulesApi~jobScheduleDisableCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Disables a job schedule.
     * No new jobs will be created until the job schedule is enabled again.
     * @param {String} jobScheduleId The ID of the job schedule to disable.
     * @param {String} apiVersion Client API Version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
     * @param {String} [ifMatch] An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
     * @param {String} [ifNoneMatch] An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
     * @param {String} [ifModifiedSince] Specify this header to perform the operation only if the resource has been modified since the specified date/time.
     * @param {String} [ifUnmodifiedSince] Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
     * @param {module:api/JobSchedulesApi~jobScheduleDisableCallback} callback The callback function, accepting three arguments: error, data, response
     */
    jobScheduleDisable(jobScheduleId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'jobScheduleId' is set
      if (jobScheduleId === undefined || jobScheduleId === null) {
        throw new Error("Missing the required parameter 'jobScheduleId' when calling jobScheduleDisable");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling jobScheduleDisable");
      }

      let pathParams = {
        'jobScheduleId': jobScheduleId
      };
      let queryParams = {
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate'],
        'If-Match': opts['ifMatch'],
        'If-None-Match': opts['ifNoneMatch'],
        'If-Modified-Since': opts['ifModifiedSince'],
        'If-Unmodified-Since': opts['ifUnmodifiedSince']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/jobschedules/{jobScheduleId}/disable', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the jobScheduleEnable operation.
     * @callback module:api/JobSchedulesApi~jobScheduleEnableCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Enables a job schedule.
     * @param {String} jobScheduleId The ID of the job schedule to enable.
     * @param {String} apiVersion Client API Version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
     * @param {String} [ifMatch] An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
     * @param {String} [ifNoneMatch] An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
     * @param {String} [ifModifiedSince] Specify this header to perform the operation only if the resource has been modified since the specified date/time.
     * @param {String} [ifUnmodifiedSince] Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
     * @param {module:api/JobSchedulesApi~jobScheduleEnableCallback} callback The callback function, accepting three arguments: error, data, response
     */
    jobScheduleEnable(jobScheduleId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'jobScheduleId' is set
      if (jobScheduleId === undefined || jobScheduleId === null) {
        throw new Error("Missing the required parameter 'jobScheduleId' when calling jobScheduleEnable");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling jobScheduleEnable");
      }

      let pathParams = {
        'jobScheduleId': jobScheduleId
      };
      let queryParams = {
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate'],
        'If-Match': opts['ifMatch'],
        'If-None-Match': opts['ifNoneMatch'],
        'If-Modified-Since': opts['ifModifiedSince'],
        'If-Unmodified-Since': opts['ifUnmodifiedSince']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/jobschedules/{jobScheduleId}/enable', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the jobScheduleExists operation.
     * @callback module:api/JobSchedulesApi~jobScheduleExistsCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Checks the specified job schedule exists.
     * @param {String} jobScheduleId The ID of the job schedule which you want to check.
     * @param {String} apiVersion Client API Version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
     * @param {String} [ifMatch] An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
     * @param {String} [ifNoneMatch] An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
     * @param {String} [ifModifiedSince] Specify this header to perform the operation only if the resource has been modified since the specified date/time.
     * @param {String} [ifUnmodifiedSince] Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
     * @param {module:api/JobSchedulesApi~jobScheduleExistsCallback} callback The callback function, accepting three arguments: error, data, response
     */
    jobScheduleExists(jobScheduleId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'jobScheduleId' is set
      if (jobScheduleId === undefined || jobScheduleId === null) {
        throw new Error("Missing the required parameter 'jobScheduleId' when calling jobScheduleExists");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling jobScheduleExists");
      }

      let pathParams = {
        'jobScheduleId': jobScheduleId
      };
      let queryParams = {
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate'],
        'If-Match': opts['ifMatch'],
        'If-None-Match': opts['ifNoneMatch'],
        'If-Modified-Since': opts['ifModifiedSince'],
        'If-Unmodified-Since': opts['ifUnmodifiedSince']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/jobschedules/{jobScheduleId}', 'HEAD',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the jobScheduleGet operation.
     * @callback module:api/JobSchedulesApi~jobScheduleGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CloudJobSchedule} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Gets information about the specified job schedule.
     * @param {String} jobScheduleId The ID of the job schedule to get.
     * @param {String} apiVersion Client API Version.
     * @param {Object} opts Optional parameters
     * @param {String} [select] An OData $select clause.
     * @param {String} [expand] An OData $expand clause.
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
     * @param {String} [ifMatch] An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
     * @param {String} [ifNoneMatch] An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
     * @param {String} [ifModifiedSince] Specify this header to perform the operation only if the resource has been modified since the specified date/time.
     * @param {String} [ifUnmodifiedSince] Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
     * @param {module:api/JobSchedulesApi~jobScheduleGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CloudJobSchedule}
     */
    jobScheduleGet(jobScheduleId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'jobScheduleId' is set
      if (jobScheduleId === undefined || jobScheduleId === null) {
        throw new Error("Missing the required parameter 'jobScheduleId' when calling jobScheduleGet");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling jobScheduleGet");
      }

      let pathParams = {
        'jobScheduleId': jobScheduleId
      };
      let queryParams = {
        '$select': opts['select'],
        '$expand': opts['expand'],
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate'],
        'If-Match': opts['ifMatch'],
        'If-None-Match': opts['ifNoneMatch'],
        'If-Modified-Since': opts['ifModifiedSince'],
        'If-Unmodified-Since': opts['ifUnmodifiedSince']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CloudJobSchedule;
      return this.apiClient.callApi(
        '/jobschedules/{jobScheduleId}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the jobScheduleList operation.
     * @callback module:api/JobSchedulesApi~jobScheduleListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CloudJobScheduleListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Lists all of the job schedules in the specified account.
     * @param {String} apiVersion Client API Version.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] An OData $filter clause.
     * @param {String} [select] An OData $select clause.
     * @param {String} [expand] An OData $expand clause.
     * @param {Number} [maxresults = 1000)] The maximum number of items to return in the response. A maximum of 1000 job schedules can be returned.
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
     * @param {module:api/JobSchedulesApi~jobScheduleListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CloudJobScheduleListResult}
     */
    jobScheduleList(apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling jobScheduleList");
      }

      let pathParams = {
      };
      let queryParams = {
        '$filter': opts['filter'],
        '$select': opts['select'],
        '$expand': opts['expand'],
        'maxresults': opts['maxresults'],
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CloudJobScheduleListResult;
      return this.apiClient.callApi(
        '/jobschedules', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the jobSchedulePatch operation.
     * @callback module:api/JobSchedulesApi~jobSchedulePatchCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the properties of the specified job schedule.
     * This replaces only the job schedule properties specified in the request. For example, if the schedule property is not specified with this request, then the Batch service will keep the existing schedule. Changes to a job schedule only impact jobs created by the schedule after the update has taken place; currently running jobs are unaffected.
     * @param {String} jobScheduleId The ID of the job schedule to update.
     * @param {String} apiVersion Client API Version.
     * @param {module:model/JobSchedulePatchParameter} jobSchedulePatchParameter The parameters for the request.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
     * @param {String} [ifMatch] An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
     * @param {String} [ifNoneMatch] An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
     * @param {String} [ifModifiedSince] Specify this header to perform the operation only if the resource has been modified since the specified date/time.
     * @param {String} [ifUnmodifiedSince] Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
     * @param {module:api/JobSchedulesApi~jobSchedulePatchCallback} callback The callback function, accepting three arguments: error, data, response
     */
    jobSchedulePatch(jobScheduleId, apiVersion, jobSchedulePatchParameter, opts, callback) {
      opts = opts || {};
      let postBody = jobSchedulePatchParameter;
      // verify the required parameter 'jobScheduleId' is set
      if (jobScheduleId === undefined || jobScheduleId === null) {
        throw new Error("Missing the required parameter 'jobScheduleId' when calling jobSchedulePatch");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling jobSchedulePatch");
      }
      // verify the required parameter 'jobSchedulePatchParameter' is set
      if (jobSchedulePatchParameter === undefined || jobSchedulePatchParameter === null) {
        throw new Error("Missing the required parameter 'jobSchedulePatchParameter' when calling jobSchedulePatch");
      }

      let pathParams = {
        'jobScheduleId': jobScheduleId
      };
      let queryParams = {
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate'],
        'If-Match': opts['ifMatch'],
        'If-None-Match': opts['ifNoneMatch'],
        'If-Modified-Since': opts['ifModifiedSince'],
        'If-Unmodified-Since': opts['ifUnmodifiedSince']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json; odata=minimalmetadata'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/jobschedules/{jobScheduleId}', 'PATCH',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the jobScheduleTerminate operation.
     * @callback module:api/JobSchedulesApi~jobScheduleTerminateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Terminates a job schedule.
     * @param {String} jobScheduleId The ID of the job schedule to terminates.
     * @param {String} apiVersion Client API Version.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
     * @param {String} [ifMatch] An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
     * @param {String} [ifNoneMatch] An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
     * @param {String} [ifModifiedSince] Specify this header to perform the operation only if the resource has been modified since the specified date/time.
     * @param {String} [ifUnmodifiedSince] Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
     * @param {module:api/JobSchedulesApi~jobScheduleTerminateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    jobScheduleTerminate(jobScheduleId, apiVersion, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'jobScheduleId' is set
      if (jobScheduleId === undefined || jobScheduleId === null) {
        throw new Error("Missing the required parameter 'jobScheduleId' when calling jobScheduleTerminate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling jobScheduleTerminate");
      }

      let pathParams = {
        'jobScheduleId': jobScheduleId
      };
      let queryParams = {
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate'],
        'If-Match': opts['ifMatch'],
        'If-None-Match': opts['ifNoneMatch'],
        'If-Modified-Since': opts['ifModifiedSince'],
        'If-Unmodified-Since': opts['ifUnmodifiedSince']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/jobschedules/{jobScheduleId}/terminate', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the jobScheduleUpdate operation.
     * @callback module:api/JobSchedulesApi~jobScheduleUpdateCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Updates the properties of the specified job schedule.
     * This fully replaces all the updatable properties of the job schedule. For example, if the schedule property is not specified with this request, then the Batch service will remove the existing schedule. Changes to a job schedule only impact jobs created by the schedule after the update has taken place; currently running jobs are unaffected.
     * @param {String} jobScheduleId The ID of the job schedule to update.
     * @param {String} apiVersion Client API Version.
     * @param {module:model/JobScheduleUpdateParameter} jobScheduleUpdateParameter The parameters for the request.
     * @param {Object} opts Optional parameters
     * @param {Number} [timeout = 30)] The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds.
     * @param {String} [clientRequestId] The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0.
     * @param {Boolean} [returnClientRequestId = false)] Whether the server should return the client-request-id in the response.
     * @param {String} [ocpDate] The time the request was issued. If not specified, this header will be automatically populated with the current system clock time.
     * @param {String} [ifMatch] An ETag is specified. Specify this header to perform the operation only if the resource's ETag is an exact match as specified.
     * @param {String} [ifNoneMatch] An ETag is specified. Specify this header to perform the operation only if the resource's ETag does not match the specified ETag.
     * @param {String} [ifModifiedSince] Specify this header to perform the operation only if the resource has been modified since the specified date/time.
     * @param {String} [ifUnmodifiedSince] Specify this header to perform the operation only if the resource has not been modified since the specified date/time.
     * @param {module:api/JobSchedulesApi~jobScheduleUpdateCallback} callback The callback function, accepting three arguments: error, data, response
     */
    jobScheduleUpdate(jobScheduleId, apiVersion, jobScheduleUpdateParameter, opts, callback) {
      opts = opts || {};
      let postBody = jobScheduleUpdateParameter;
      // verify the required parameter 'jobScheduleId' is set
      if (jobScheduleId === undefined || jobScheduleId === null) {
        throw new Error("Missing the required parameter 'jobScheduleId' when calling jobScheduleUpdate");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling jobScheduleUpdate");
      }
      // verify the required parameter 'jobScheduleUpdateParameter' is set
      if (jobScheduleUpdateParameter === undefined || jobScheduleUpdateParameter === null) {
        throw new Error("Missing the required parameter 'jobScheduleUpdateParameter' when calling jobScheduleUpdate");
      }

      let pathParams = {
        'jobScheduleId': jobScheduleId
      };
      let queryParams = {
        'timeout': opts['timeout'],
        'api-version': apiVersion
      };
      let headerParams = {
        'client-request-id': opts['clientRequestId'],
        'return-client-request-id': opts['returnClientRequestId'],
        'ocp-date': opts['ocpDate'],
        'If-Match': opts['ifMatch'],
        'If-None-Match': opts['ifNoneMatch'],
        'If-Modified-Since': opts['ifModifiedSince'],
        'If-Unmodified-Since': opts['ifUnmodifiedSince']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json; odata=minimalmetadata'];
      let accepts = ['application/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/jobschedules/{jobScheduleId}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
