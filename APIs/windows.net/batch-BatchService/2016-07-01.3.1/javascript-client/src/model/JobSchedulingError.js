/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2016-07-01.3.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import NameValuePair from './NameValuePair';

/**
 * The JobSchedulingError model module.
 * @module model/JobSchedulingError
 * @version 2016-07-01.3.1
 */
class JobSchedulingError {
    /**
     * Constructs a new <code>JobSchedulingError</code>.
     * @alias module:model/JobSchedulingError
     * @param category {module:model/JobSchedulingError.CategoryEnum} 
     */
    constructor(category) { 
        
        JobSchedulingError.initialize(this, category);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, category) { 
        obj['category'] = category;
    }

    /**
     * Constructs a <code>JobSchedulingError</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobSchedulingError} obj Optional instance to populate.
     * @return {module:model/JobSchedulingError} The populated <code>JobSchedulingError</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobSchedulingError();

            if (data.hasOwnProperty('category')) {
                obj['category'] = ApiClient.convertToType(data['category'], 'String');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('details')) {
                obj['details'] = ApiClient.convertToType(data['details'], [NameValuePair]);
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = ApiClient.convertToType(data['message'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobSchedulingError</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobSchedulingError</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JobSchedulingError.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['category'] && !(typeof data['category'] === 'string' || data['category'] instanceof String)) {
            throw new Error("Expected the field `category` to be a primitive type in the JSON string but got " + data['category']);
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        if (data['details']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['details'])) {
                throw new Error("Expected the field `details` to be an array in the JSON data but got " + data['details']);
            }
            // validate the optional field `details` (array)
            for (const item of data['details']) {
                NameValuePair.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['message'] && !(typeof data['message'] === 'string' || data['message'] instanceof String)) {
            throw new Error("Expected the field `message` to be a primitive type in the JSON string but got " + data['message']);
        }

        return true;
    }


}

JobSchedulingError.RequiredProperties = ["category"];

/**
 * @member {module:model/JobSchedulingError.CategoryEnum} category
 */
JobSchedulingError.prototype['category'] = undefined;

/**
 * @member {String} code
 */
JobSchedulingError.prototype['code'] = undefined;

/**
 * @member {Array.<module:model/NameValuePair>} details
 */
JobSchedulingError.prototype['details'] = undefined;

/**
 * @member {String} message
 */
JobSchedulingError.prototype['message'] = undefined;





/**
 * Allowed values for the <code>category</code> property.
 * @enum {String}
 * @readonly
 */
JobSchedulingError['CategoryEnum'] = {

    /**
     * value: "usererror"
     * @const
     */
    "usererror": "usererror",

    /**
     * value: "servererror"
     * @const
     */
    "servererror": "servererror",

    /**
     * value: "unmapped"
     * @const
     */
    "unmapped": "unmapped"
};



export default JobSchedulingError;

