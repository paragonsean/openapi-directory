/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2017-09-01.6.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaskCounts.h
 *
 * 
 */

#ifndef OAITaskCounts_H
#define OAITaskCounts_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITaskCounts : public OAIObject {
public:
    OAITaskCounts();
    OAITaskCounts(QString json);
    ~OAITaskCounts() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getActive() const;
    void setActive(const qint32 &active);
    bool is_active_Set() const;
    bool is_active_Valid() const;

    qint32 getCompleted() const;
    void setCompleted(const qint32 &completed);
    bool is_completed_Set() const;
    bool is_completed_Valid() const;

    qint32 getFailed() const;
    void setFailed(const qint32 &failed);
    bool is_failed_Set() const;
    bool is_failed_Valid() const;

    qint32 getRunning() const;
    void setRunning(const qint32 &running);
    bool is_running_Set() const;
    bool is_running_Valid() const;

    qint32 getSucceeded() const;
    void setSucceeded(const qint32 &succeeded);
    bool is_succeeded_Set() const;
    bool is_succeeded_Valid() const;

    QString getValidationStatus() const;
    void setValidationStatus(const QString &validation_status);
    bool is_validation_status_Set() const;
    bool is_validation_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_active;
    bool m_active_isSet;
    bool m_active_isValid;

    qint32 m_completed;
    bool m_completed_isSet;
    bool m_completed_isValid;

    qint32 m_failed;
    bool m_failed_isSet;
    bool m_failed_isValid;

    qint32 m_running;
    bool m_running_isSet;
    bool m_running_isValid;

    qint32 m_succeeded;
    bool m_succeeded_isSet;
    bool m_succeeded_isValid;

    QString m_validation_status;
    bool m_validation_status_isSet;
    bool m_validation_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaskCounts)

#endif // OAITaskCounts_H
