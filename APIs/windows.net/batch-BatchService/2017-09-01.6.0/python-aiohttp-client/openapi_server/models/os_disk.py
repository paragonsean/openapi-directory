# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.caching_type import CachingType
from openapi_server import util


class OSDisk(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, caching: CachingType=None):
        """OSDisk - a model defined in OpenAPI

        :param caching: The caching of this OSDisk.
        """
        self.openapi_types = {
            'caching': CachingType
        }

        self.attribute_map = {
            'caching': 'caching'
        }

        self._caching = caching

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OSDisk':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OSDisk of this OSDisk.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def caching(self):
        """Gets the caching of this OSDisk.


        :return: The caching of this OSDisk.
        :rtype: CachingType
        """
        return self._caching

    @caching.setter
    def caching(self, caching):
        """Sets the caching of this OSDisk.


        :param caching: The caching of this OSDisk.
        :type caching: CachingType
        """

        self._caching = caching
