# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.task_add_parameter import TaskAddParameter
from openapi_server import util


class TaskAddCollectionParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, value: List[TaskAddParameter]=None):
        """TaskAddCollectionParameter - a model defined in OpenAPI

        :param value: The value of this TaskAddCollectionParameter.
        """
        self.openapi_types = {
            'value': List[TaskAddParameter]
        }

        self.attribute_map = {
            'value': 'value'
        }

        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskAddCollectionParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskAddCollectionParameter of this TaskAddCollectionParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def value(self):
        """Gets the value of this TaskAddCollectionParameter.

        The total serialized size of this collection must be less than 4MB. If it is greater than 4MB (for example if each task has 100's of resource files or environment variables), the request will fail with code 'RequestBodyTooLarge' and should be retried again with fewer tasks.

        :return: The value of this TaskAddCollectionParameter.
        :rtype: List[TaskAddParameter]
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this TaskAddCollectionParameter.

        The total serialized size of this collection must be less than 4MB. If it is greater than 4MB (for example if each task has 100's of resource files or environment variables), the request will fail with code 'RequestBodyTooLarge' and should be retried again with fewer tasks.

        :param value: The value of this TaskAddCollectionParameter.
        :type value: List[TaskAddParameter]
        """
        if value is None:
            raise ValueError("Invalid value for `value`, must not be `None`")
        if value is not None and len(value) > 100:
            raise ValueError("Invalid value for `value`, number of items must be less than or equal to `100`")

        self._value = value
