# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.inbound_nat_pool import InboundNATPool
from openapi_server import util


class PoolEndpointConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inbound_nat_pools: List[InboundNATPool]=None):
        """PoolEndpointConfiguration - a model defined in OpenAPI

        :param inbound_nat_pools: The inbound_nat_pools of this PoolEndpointConfiguration.
        """
        self.openapi_types = {
            'inbound_nat_pools': List[InboundNATPool]
        }

        self.attribute_map = {
            'inbound_nat_pools': 'inboundNATPools'
        }

        self._inbound_nat_pools = inbound_nat_pools

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PoolEndpointConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PoolEndpointConfiguration of this PoolEndpointConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inbound_nat_pools(self):
        """Gets the inbound_nat_pools of this PoolEndpointConfiguration.

        The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the request fails with HTTP status code 400.

        :return: The inbound_nat_pools of this PoolEndpointConfiguration.
        :rtype: List[InboundNATPool]
        """
        return self._inbound_nat_pools

    @inbound_nat_pools.setter
    def inbound_nat_pools(self, inbound_nat_pools):
        """Sets the inbound_nat_pools of this PoolEndpointConfiguration.

        The maximum number of inbound NAT pools per Batch pool is 5. If the maximum number of inbound NAT pools is exceeded the request fails with HTTP status code 400.

        :param inbound_nat_pools: The inbound_nat_pools of this PoolEndpointConfiguration.
        :type inbound_nat_pools: List[InboundNATPool]
        """
        if inbound_nat_pools is None:
            raise ValueError("Invalid value for `inbound_nat_pools`, must not be `None`")

        self._inbound_nat_pools = inbound_nat_pools
