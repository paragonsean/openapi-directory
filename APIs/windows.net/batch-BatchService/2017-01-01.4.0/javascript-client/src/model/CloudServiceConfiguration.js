/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2017-01-01.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CloudServiceConfiguration model module.
 * @module model/CloudServiceConfiguration
 * @version 2017-01-01.4.0
 */
class CloudServiceConfiguration {
    /**
     * Constructs a new <code>CloudServiceConfiguration</code>.
     * @alias module:model/CloudServiceConfiguration
     * @param osFamily {String} Possible values are: 2 - OS Family 2, equivalent to Windows Server 2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 - OS Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5, equivalent to Windows Server 2016. For more information, see Azure Guest OS Releases (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
     */
    constructor(osFamily) { 
        
        CloudServiceConfiguration.initialize(this, osFamily);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, osFamily) { 
        obj['osFamily'] = osFamily;
    }

    /**
     * Constructs a <code>CloudServiceConfiguration</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CloudServiceConfiguration} obj Optional instance to populate.
     * @return {module:model/CloudServiceConfiguration} The populated <code>CloudServiceConfiguration</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CloudServiceConfiguration();

            if (data.hasOwnProperty('currentOSVersion')) {
                obj['currentOSVersion'] = ApiClient.convertToType(data['currentOSVersion'], 'String');
            }
            if (data.hasOwnProperty('osFamily')) {
                obj['osFamily'] = ApiClient.convertToType(data['osFamily'], 'String');
            }
            if (data.hasOwnProperty('targetOSVersion')) {
                obj['targetOSVersion'] = ApiClient.convertToType(data['targetOSVersion'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CloudServiceConfiguration</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CloudServiceConfiguration</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CloudServiceConfiguration.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['currentOSVersion'] && !(typeof data['currentOSVersion'] === 'string' || data['currentOSVersion'] instanceof String)) {
            throw new Error("Expected the field `currentOSVersion` to be a primitive type in the JSON string but got " + data['currentOSVersion']);
        }
        // ensure the json data is a string
        if (data['osFamily'] && !(typeof data['osFamily'] === 'string' || data['osFamily'] instanceof String)) {
            throw new Error("Expected the field `osFamily` to be a primitive type in the JSON string but got " + data['osFamily']);
        }
        // ensure the json data is a string
        if (data['targetOSVersion'] && !(typeof data['targetOSVersion'] === 'string' || data['targetOSVersion'] instanceof String)) {
            throw new Error("Expected the field `targetOSVersion` to be a primitive type in the JSON string but got " + data['targetOSVersion']);
        }

        return true;
    }


}

CloudServiceConfiguration.RequiredProperties = ["osFamily"];

/**
 * This may differ from targetOSVersion if the pool state is Upgrading. In this case some virtual machines may be on the targetOSVersion and some may be on the currentOSVersion during the upgrade process. Once all virtual machines have upgraded, currentOSVersion is updated to be the same as targetOSVersion.
 * @member {String} currentOSVersion
 */
CloudServiceConfiguration.prototype['currentOSVersion'] = undefined;

/**
 * Possible values are: 2 - OS Family 2, equivalent to Windows Server 2008 R2 SP1. 3 - OS Family 3, equivalent to Windows Server 2012. 4 - OS Family 4, equivalent to Windows Server 2012 R2. 5 - OS Family 5, equivalent to Windows Server 2016. For more information, see Azure Guest OS Releases (https://azure.microsoft.com/documentation/articles/cloud-services-guestos-update-matrix/#releases).
 * @member {String} osFamily
 */
CloudServiceConfiguration.prototype['osFamily'] = undefined;

/**
 * The default value is * which specifies the latest operating system version for the specified OS family.
 * @member {String} targetOSVersion
 */
CloudServiceConfiguration.prototype['targetOSVersion'] = undefined;






export default CloudServiceConfiguration;

