/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2017-01-01.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ComputeNodeDeallocationOption from './ComputeNodeDeallocationOption';

/**
 * The PoolResizeParameter model module.
 * @module model/PoolResizeParameter
 * @version 2017-01-01.4.0
 */
class PoolResizeParameter {
    /**
     * Constructs a new <code>PoolResizeParameter</code>.
     * @alias module:model/PoolResizeParameter
     * @param targetDedicated {Number} 
     */
    constructor(targetDedicated) { 
        
        PoolResizeParameter.initialize(this, targetDedicated);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, targetDedicated) { 
        obj['targetDedicated'] = targetDedicated;
    }

    /**
     * Constructs a <code>PoolResizeParameter</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PoolResizeParameter} obj Optional instance to populate.
     * @return {module:model/PoolResizeParameter} The populated <code>PoolResizeParameter</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PoolResizeParameter();

            if (data.hasOwnProperty('nodeDeallocationOption')) {
                obj['nodeDeallocationOption'] = ComputeNodeDeallocationOption.constructFromObject(data['nodeDeallocationOption']);
            }
            if (data.hasOwnProperty('resizeTimeout')) {
                obj['resizeTimeout'] = ApiClient.convertToType(data['resizeTimeout'], 'String');
            }
            if (data.hasOwnProperty('targetDedicated')) {
                obj['targetDedicated'] = ApiClient.convertToType(data['targetDedicated'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PoolResizeParameter</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PoolResizeParameter</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of PoolResizeParameter.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['resizeTimeout'] && !(typeof data['resizeTimeout'] === 'string' || data['resizeTimeout'] instanceof String)) {
            throw new Error("Expected the field `resizeTimeout` to be a primitive type in the JSON string but got " + data['resizeTimeout']);
        }

        return true;
    }


}

PoolResizeParameter.RequiredProperties = ["targetDedicated"];

/**
 * @member {module:model/ComputeNodeDeallocationOption} nodeDeallocationOption
 */
PoolResizeParameter.prototype['nodeDeallocationOption'] = undefined;

/**
 * The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
 * @member {String} resizeTimeout
 */
PoolResizeParameter.prototype['resizeTimeout'] = undefined;

/**
 * @member {Number} targetDedicated
 */
PoolResizeParameter.prototype['targetDedicated'] = undefined;






export default PoolResizeParameter;

