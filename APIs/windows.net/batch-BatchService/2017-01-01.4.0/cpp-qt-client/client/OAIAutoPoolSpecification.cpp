/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2017-01-01.4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAutoPoolSpecification.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAutoPoolSpecification::OAIAutoPoolSpecification(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAutoPoolSpecification::OAIAutoPoolSpecification() {
    this->initializeModel();
}

OAIAutoPoolSpecification::~OAIAutoPoolSpecification() {}

void OAIAutoPoolSpecification::initializeModel() {

    m_auto_pool_id_prefix_isSet = false;
    m_auto_pool_id_prefix_isValid = false;

    m_keep_alive_isSet = false;
    m_keep_alive_isValid = false;

    m_pool_isSet = false;
    m_pool_isValid = false;

    m_pool_lifetime_option_isSet = false;
    m_pool_lifetime_option_isValid = false;
}

void OAIAutoPoolSpecification::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAutoPoolSpecification::fromJsonObject(QJsonObject json) {

    m_auto_pool_id_prefix_isValid = ::OpenAPI::fromJsonValue(m_auto_pool_id_prefix, json[QString("autoPoolIdPrefix")]);
    m_auto_pool_id_prefix_isSet = !json[QString("autoPoolIdPrefix")].isNull() && m_auto_pool_id_prefix_isValid;

    m_keep_alive_isValid = ::OpenAPI::fromJsonValue(m_keep_alive, json[QString("keepAlive")]);
    m_keep_alive_isSet = !json[QString("keepAlive")].isNull() && m_keep_alive_isValid;

    m_pool_isValid = ::OpenAPI::fromJsonValue(m_pool, json[QString("pool")]);
    m_pool_isSet = !json[QString("pool")].isNull() && m_pool_isValid;

    m_pool_lifetime_option_isValid = ::OpenAPI::fromJsonValue(m_pool_lifetime_option, json[QString("poolLifetimeOption")]);
    m_pool_lifetime_option_isSet = !json[QString("poolLifetimeOption")].isNull() && m_pool_lifetime_option_isValid;
}

QString OAIAutoPoolSpecification::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAutoPoolSpecification::asJsonObject() const {
    QJsonObject obj;
    if (m_auto_pool_id_prefix_isSet) {
        obj.insert(QString("autoPoolIdPrefix"), ::OpenAPI::toJsonValue(m_auto_pool_id_prefix));
    }
    if (m_keep_alive_isSet) {
        obj.insert(QString("keepAlive"), ::OpenAPI::toJsonValue(m_keep_alive));
    }
    if (m_pool.isSet()) {
        obj.insert(QString("pool"), ::OpenAPI::toJsonValue(m_pool));
    }
    if (m_pool_lifetime_option_isSet) {
        obj.insert(QString("poolLifetimeOption"), ::OpenAPI::toJsonValue(m_pool_lifetime_option));
    }
    return obj;
}

QString OAIAutoPoolSpecification::getAutoPoolIdPrefix() const {
    return m_auto_pool_id_prefix;
}
void OAIAutoPoolSpecification::setAutoPoolIdPrefix(const QString &auto_pool_id_prefix) {
    m_auto_pool_id_prefix = auto_pool_id_prefix;
    m_auto_pool_id_prefix_isSet = true;
}

bool OAIAutoPoolSpecification::is_auto_pool_id_prefix_Set() const{
    return m_auto_pool_id_prefix_isSet;
}

bool OAIAutoPoolSpecification::is_auto_pool_id_prefix_Valid() const{
    return m_auto_pool_id_prefix_isValid;
}

bool OAIAutoPoolSpecification::isKeepAlive() const {
    return m_keep_alive;
}
void OAIAutoPoolSpecification::setKeepAlive(const bool &keep_alive) {
    m_keep_alive = keep_alive;
    m_keep_alive_isSet = true;
}

bool OAIAutoPoolSpecification::is_keep_alive_Set() const{
    return m_keep_alive_isSet;
}

bool OAIAutoPoolSpecification::is_keep_alive_Valid() const{
    return m_keep_alive_isValid;
}

OAIPoolSpecification OAIAutoPoolSpecification::getPool() const {
    return m_pool;
}
void OAIAutoPoolSpecification::setPool(const OAIPoolSpecification &pool) {
    m_pool = pool;
    m_pool_isSet = true;
}

bool OAIAutoPoolSpecification::is_pool_Set() const{
    return m_pool_isSet;
}

bool OAIAutoPoolSpecification::is_pool_Valid() const{
    return m_pool_isValid;
}

QString OAIAutoPoolSpecification::getPoolLifetimeOption() const {
    return m_pool_lifetime_option;
}
void OAIAutoPoolSpecification::setPoolLifetimeOption(const QString &pool_lifetime_option) {
    m_pool_lifetime_option = pool_lifetime_option;
    m_pool_lifetime_option_isSet = true;
}

bool OAIAutoPoolSpecification::is_pool_lifetime_option_Set() const{
    return m_pool_lifetime_option_isSet;
}

bool OAIAutoPoolSpecification::is_pool_lifetime_option_Valid() const{
    return m_pool_lifetime_option_isValid;
}

bool OAIAutoPoolSpecification::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_auto_pool_id_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_keep_alive_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_pool.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_pool_lifetime_option_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAutoPoolSpecification::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pool_lifetime_option_isValid && true;
}

} // namespace OpenAPI
