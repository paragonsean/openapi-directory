/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2017-01-01.4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITaskDependencies.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITaskDependencies::OAITaskDependencies(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITaskDependencies::OAITaskDependencies() {
    this->initializeModel();
}

OAITaskDependencies::~OAITaskDependencies() {}

void OAITaskDependencies::initializeModel() {

    m_task_id_ranges_isSet = false;
    m_task_id_ranges_isValid = false;

    m_task_ids_isSet = false;
    m_task_ids_isValid = false;
}

void OAITaskDependencies::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITaskDependencies::fromJsonObject(QJsonObject json) {

    m_task_id_ranges_isValid = ::OpenAPI::fromJsonValue(m_task_id_ranges, json[QString("taskIdRanges")]);
    m_task_id_ranges_isSet = !json[QString("taskIdRanges")].isNull() && m_task_id_ranges_isValid;

    m_task_ids_isValid = ::OpenAPI::fromJsonValue(m_task_ids, json[QString("taskIds")]);
    m_task_ids_isSet = !json[QString("taskIds")].isNull() && m_task_ids_isValid;
}

QString OAITaskDependencies::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITaskDependencies::asJsonObject() const {
    QJsonObject obj;
    if (m_task_id_ranges.size() > 0) {
        obj.insert(QString("taskIdRanges"), ::OpenAPI::toJsonValue(m_task_id_ranges));
    }
    if (m_task_ids.size() > 0) {
        obj.insert(QString("taskIds"), ::OpenAPI::toJsonValue(m_task_ids));
    }
    return obj;
}

QList<OAITaskIdRange> OAITaskDependencies::getTaskIdRanges() const {
    return m_task_id_ranges;
}
void OAITaskDependencies::setTaskIdRanges(const QList<OAITaskIdRange> &task_id_ranges) {
    m_task_id_ranges = task_id_ranges;
    m_task_id_ranges_isSet = true;
}

bool OAITaskDependencies::is_task_id_ranges_Set() const{
    return m_task_id_ranges_isSet;
}

bool OAITaskDependencies::is_task_id_ranges_Valid() const{
    return m_task_id_ranges_isValid;
}

QList<QString> OAITaskDependencies::getTaskIds() const {
    return m_task_ids;
}
void OAITaskDependencies::setTaskIds(const QList<QString> &task_ids) {
    m_task_ids = task_ids;
    m_task_ids_isSet = true;
}

bool OAITaskDependencies::is_task_ids_Set() const{
    return m_task_ids_isSet;
}

bool OAITaskDependencies::is_task_ids_Valid() const{
    return m_task_ids_isValid;
}

bool OAITaskDependencies::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_task_id_ranges.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_task_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITaskDependencies::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
