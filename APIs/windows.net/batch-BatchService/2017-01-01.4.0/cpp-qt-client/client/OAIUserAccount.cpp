/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2017-01-01.4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUserAccount.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUserAccount::OAIUserAccount(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUserAccount::OAIUserAccount() {
    this->initializeModel();
}

OAIUserAccount::~OAIUserAccount() {}

void OAIUserAccount::initializeModel() {

    m_elevation_level_isSet = false;
    m_elevation_level_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_password_isSet = false;
    m_password_isValid = false;

    m_ssh_private_key_isSet = false;
    m_ssh_private_key_isValid = false;
}

void OAIUserAccount::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUserAccount::fromJsonObject(QJsonObject json) {

    m_elevation_level_isValid = ::OpenAPI::fromJsonValue(m_elevation_level, json[QString("elevationLevel")]);
    m_elevation_level_isSet = !json[QString("elevationLevel")].isNull() && m_elevation_level_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_password_isValid = ::OpenAPI::fromJsonValue(m_password, json[QString("password")]);
    m_password_isSet = !json[QString("password")].isNull() && m_password_isValid;

    m_ssh_private_key_isValid = ::OpenAPI::fromJsonValue(m_ssh_private_key, json[QString("sshPrivateKey")]);
    m_ssh_private_key_isSet = !json[QString("sshPrivateKey")].isNull() && m_ssh_private_key_isValid;
}

QString OAIUserAccount::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUserAccount::asJsonObject() const {
    QJsonObject obj;
    if (m_elevation_level.isSet()) {
        obj.insert(QString("elevationLevel"), ::OpenAPI::toJsonValue(m_elevation_level));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_password_isSet) {
        obj.insert(QString("password"), ::OpenAPI::toJsonValue(m_password));
    }
    if (m_ssh_private_key_isSet) {
        obj.insert(QString("sshPrivateKey"), ::OpenAPI::toJsonValue(m_ssh_private_key));
    }
    return obj;
}

OAIElevationLevel OAIUserAccount::getElevationLevel() const {
    return m_elevation_level;
}
void OAIUserAccount::setElevationLevel(const OAIElevationLevel &elevation_level) {
    m_elevation_level = elevation_level;
    m_elevation_level_isSet = true;
}

bool OAIUserAccount::is_elevation_level_Set() const{
    return m_elevation_level_isSet;
}

bool OAIUserAccount::is_elevation_level_Valid() const{
    return m_elevation_level_isValid;
}

QString OAIUserAccount::getName() const {
    return m_name;
}
void OAIUserAccount::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIUserAccount::is_name_Set() const{
    return m_name_isSet;
}

bool OAIUserAccount::is_name_Valid() const{
    return m_name_isValid;
}

QString OAIUserAccount::getPassword() const {
    return m_password;
}
void OAIUserAccount::setPassword(const QString &password) {
    m_password = password;
    m_password_isSet = true;
}

bool OAIUserAccount::is_password_Set() const{
    return m_password_isSet;
}

bool OAIUserAccount::is_password_Valid() const{
    return m_password_isValid;
}

QString OAIUserAccount::getSshPrivateKey() const {
    return m_ssh_private_key;
}
void OAIUserAccount::setSshPrivateKey(const QString &ssh_private_key) {
    m_ssh_private_key = ssh_private_key;
    m_ssh_private_key_isSet = true;
}

bool OAIUserAccount::is_ssh_private_key_Set() const{
    return m_ssh_private_key_isSet;
}

bool OAIUserAccount::is_ssh_private_key_Valid() const{
    return m_ssh_private_key_isValid;
}

bool OAIUserAccount::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_elevation_level.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ssh_private_key_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUserAccount::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && m_password_isValid && true;
}

} // namespace OpenAPI
