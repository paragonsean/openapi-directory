/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2017-01-01.4.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISchedulingErrorCategory.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISchedulingErrorCategory::OAISchedulingErrorCategory(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISchedulingErrorCategory::OAISchedulingErrorCategory() {
    this->initializeModel();
}

OAISchedulingErrorCategory::~OAISchedulingErrorCategory() {}

void OAISchedulingErrorCategory::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAISchedulingErrorCategory::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAISchedulingErrorCategory::fromJson(QString jsonString) {
    
    if ( jsonString.compare("userError", Qt::CaseInsensitive) == 0) {
        m_value = eOAISchedulingErrorCategory::USERERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("serverError", Qt::CaseInsensitive) == 0) {
        m_value = eOAISchedulingErrorCategory::SERVERERROR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("unmapped", Qt::CaseInsensitive) == 0) {
        m_value = eOAISchedulingErrorCategory::UNMAPPED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAISchedulingErrorCategory::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAISchedulingErrorCategory::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAISchedulingErrorCategory::USERERROR:
            val = "userError";
            break;
        case eOAISchedulingErrorCategory::SERVERERROR:
            val = "serverError";
            break;
        case eOAISchedulingErrorCategory::UNMAPPED:
            val = "unmapped";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAISchedulingErrorCategory::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAISchedulingErrorCategory::eOAISchedulingErrorCategory OAISchedulingErrorCategory::getValue() const {
    return m_value;
}

void OAISchedulingErrorCategory::setValue(const OAISchedulingErrorCategory::eOAISchedulingErrorCategory& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAISchedulingErrorCategory::isSet() const {
    
    return m_value_isSet;
}

bool OAISchedulingErrorCategory::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
