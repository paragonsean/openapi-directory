/*
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2017-01-01.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * JobScheduleStatistics
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:59:14.789524-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class JobScheduleStatistics {
  public static final String SERIALIZED_NAME_KERNEL_C_P_U_TIME = "kernelCPUTime";
  @SerializedName(SERIALIZED_NAME_KERNEL_C_P_U_TIME)
  private String kernelCPUTime;

  public static final String SERIALIZED_NAME_LAST_UPDATE_TIME = "lastUpdateTime";
  @SerializedName(SERIALIZED_NAME_LAST_UPDATE_TIME)
  private OffsetDateTime lastUpdateTime;

  public static final String SERIALIZED_NAME_NUM_FAILED_TASKS = "numFailedTasks";
  @SerializedName(SERIALIZED_NAME_NUM_FAILED_TASKS)
  private Long numFailedTasks;

  public static final String SERIALIZED_NAME_NUM_SUCCEEDED_TASKS = "numSucceededTasks";
  @SerializedName(SERIALIZED_NAME_NUM_SUCCEEDED_TASKS)
  private Long numSucceededTasks;

  public static final String SERIALIZED_NAME_NUM_TASK_RETRIES = "numTaskRetries";
  @SerializedName(SERIALIZED_NAME_NUM_TASK_RETRIES)
  private Long numTaskRetries;

  public static final String SERIALIZED_NAME_READ_I_O_GI_B = "readIOGiB";
  @SerializedName(SERIALIZED_NAME_READ_I_O_GI_B)
  private Double readIOGiB;

  public static final String SERIALIZED_NAME_READ_I_OPS = "readIOps";
  @SerializedName(SERIALIZED_NAME_READ_I_OPS)
  private Long readIOps;

  public static final String SERIALIZED_NAME_START_TIME = "startTime";
  @SerializedName(SERIALIZED_NAME_START_TIME)
  private OffsetDateTime startTime;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public static final String SERIALIZED_NAME_USER_C_P_U_TIME = "userCPUTime";
  @SerializedName(SERIALIZED_NAME_USER_C_P_U_TIME)
  private String userCPUTime;

  public static final String SERIALIZED_NAME_WAIT_TIME = "waitTime";
  @SerializedName(SERIALIZED_NAME_WAIT_TIME)
  private String waitTime;

  public static final String SERIALIZED_NAME_WALL_CLOCK_TIME = "wallClockTime";
  @SerializedName(SERIALIZED_NAME_WALL_CLOCK_TIME)
  private String wallClockTime;

  public static final String SERIALIZED_NAME_WRITE_I_O_GI_B = "writeIOGiB";
  @SerializedName(SERIALIZED_NAME_WRITE_I_O_GI_B)
  private Double writeIOGiB;

  public static final String SERIALIZED_NAME_WRITE_I_OPS = "writeIOps";
  @SerializedName(SERIALIZED_NAME_WRITE_I_OPS)
  private Long writeIOps;

  public JobScheduleStatistics() {
  }

  public JobScheduleStatistics kernelCPUTime(String kernelCPUTime) {
    this.kernelCPUTime = kernelCPUTime;
    return this;
  }

  /**
   * Get kernelCPUTime
   * @return kernelCPUTime
   */
  @javax.annotation.Nonnull
  public String getKernelCPUTime() {
    return kernelCPUTime;
  }

  public void setKernelCPUTime(String kernelCPUTime) {
    this.kernelCPUTime = kernelCPUTime;
  }


  public JobScheduleStatistics lastUpdateTime(OffsetDateTime lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
    return this;
  }

  /**
   * Get lastUpdateTime
   * @return lastUpdateTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getLastUpdateTime() {
    return lastUpdateTime;
  }

  public void setLastUpdateTime(OffsetDateTime lastUpdateTime) {
    this.lastUpdateTime = lastUpdateTime;
  }


  public JobScheduleStatistics numFailedTasks(Long numFailedTasks) {
    this.numFailedTasks = numFailedTasks;
    return this;
  }

  /**
   * Get numFailedTasks
   * @return numFailedTasks
   */
  @javax.annotation.Nonnull
  public Long getNumFailedTasks() {
    return numFailedTasks;
  }

  public void setNumFailedTasks(Long numFailedTasks) {
    this.numFailedTasks = numFailedTasks;
  }


  public JobScheduleStatistics numSucceededTasks(Long numSucceededTasks) {
    this.numSucceededTasks = numSucceededTasks;
    return this;
  }

  /**
   * Get numSucceededTasks
   * @return numSucceededTasks
   */
  @javax.annotation.Nonnull
  public Long getNumSucceededTasks() {
    return numSucceededTasks;
  }

  public void setNumSucceededTasks(Long numSucceededTasks) {
    this.numSucceededTasks = numSucceededTasks;
  }


  public JobScheduleStatistics numTaskRetries(Long numTaskRetries) {
    this.numTaskRetries = numTaskRetries;
    return this;
  }

  /**
   * Get numTaskRetries
   * @return numTaskRetries
   */
  @javax.annotation.Nonnull
  public Long getNumTaskRetries() {
    return numTaskRetries;
  }

  public void setNumTaskRetries(Long numTaskRetries) {
    this.numTaskRetries = numTaskRetries;
  }


  public JobScheduleStatistics readIOGiB(Double readIOGiB) {
    this.readIOGiB = readIOGiB;
    return this;
  }

  /**
   * Get readIOGiB
   * @return readIOGiB
   */
  @javax.annotation.Nonnull
  public Double getReadIOGiB() {
    return readIOGiB;
  }

  public void setReadIOGiB(Double readIOGiB) {
    this.readIOGiB = readIOGiB;
  }


  public JobScheduleStatistics readIOps(Long readIOps) {
    this.readIOps = readIOps;
    return this;
  }

  /**
   * Get readIOps
   * @return readIOps
   */
  @javax.annotation.Nonnull
  public Long getReadIOps() {
    return readIOps;
  }

  public void setReadIOps(Long readIOps) {
    this.readIOps = readIOps;
  }


  public JobScheduleStatistics startTime(OffsetDateTime startTime) {
    this.startTime = startTime;
    return this;
  }

  /**
   * Get startTime
   * @return startTime
   */
  @javax.annotation.Nonnull
  public OffsetDateTime getStartTime() {
    return startTime;
  }

  public void setStartTime(OffsetDateTime startTime) {
    this.startTime = startTime;
  }


  public JobScheduleStatistics url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nonnull
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }


  public JobScheduleStatistics userCPUTime(String userCPUTime) {
    this.userCPUTime = userCPUTime;
    return this;
  }

  /**
   * Get userCPUTime
   * @return userCPUTime
   */
  @javax.annotation.Nonnull
  public String getUserCPUTime() {
    return userCPUTime;
  }

  public void setUserCPUTime(String userCPUTime) {
    this.userCPUTime = userCPUTime;
  }


  public JobScheduleStatistics waitTime(String waitTime) {
    this.waitTime = waitTime;
    return this;
  }

  /**
   * This value is only reported in the account lifetime statistics; it is not included in the job statistics.
   * @return waitTime
   */
  @javax.annotation.Nonnull
  public String getWaitTime() {
    return waitTime;
  }

  public void setWaitTime(String waitTime) {
    this.waitTime = waitTime;
  }


  public JobScheduleStatistics wallClockTime(String wallClockTime) {
    this.wallClockTime = wallClockTime;
    return this;
  }

  /**
   * The wall clock time is the elapsed time from when the task started running on a compute node to when it finished (or to the last time the statistics were updated, if the task had not finished by then). If a task was retried, this includes the wall clock time of all the task retries.
   * @return wallClockTime
   */
  @javax.annotation.Nonnull
  public String getWallClockTime() {
    return wallClockTime;
  }

  public void setWallClockTime(String wallClockTime) {
    this.wallClockTime = wallClockTime;
  }


  public JobScheduleStatistics writeIOGiB(Double writeIOGiB) {
    this.writeIOGiB = writeIOGiB;
    return this;
  }

  /**
   * Get writeIOGiB
   * @return writeIOGiB
   */
  @javax.annotation.Nonnull
  public Double getWriteIOGiB() {
    return writeIOGiB;
  }

  public void setWriteIOGiB(Double writeIOGiB) {
    this.writeIOGiB = writeIOGiB;
  }


  public JobScheduleStatistics writeIOps(Long writeIOps) {
    this.writeIOps = writeIOps;
    return this;
  }

  /**
   * Get writeIOps
   * @return writeIOps
   */
  @javax.annotation.Nonnull
  public Long getWriteIOps() {
    return writeIOps;
  }

  public void setWriteIOps(Long writeIOps) {
    this.writeIOps = writeIOps;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobScheduleStatistics jobScheduleStatistics = (JobScheduleStatistics) o;
    return Objects.equals(this.kernelCPUTime, jobScheduleStatistics.kernelCPUTime) &&
        Objects.equals(this.lastUpdateTime, jobScheduleStatistics.lastUpdateTime) &&
        Objects.equals(this.numFailedTasks, jobScheduleStatistics.numFailedTasks) &&
        Objects.equals(this.numSucceededTasks, jobScheduleStatistics.numSucceededTasks) &&
        Objects.equals(this.numTaskRetries, jobScheduleStatistics.numTaskRetries) &&
        Objects.equals(this.readIOGiB, jobScheduleStatistics.readIOGiB) &&
        Objects.equals(this.readIOps, jobScheduleStatistics.readIOps) &&
        Objects.equals(this.startTime, jobScheduleStatistics.startTime) &&
        Objects.equals(this.url, jobScheduleStatistics.url) &&
        Objects.equals(this.userCPUTime, jobScheduleStatistics.userCPUTime) &&
        Objects.equals(this.waitTime, jobScheduleStatistics.waitTime) &&
        Objects.equals(this.wallClockTime, jobScheduleStatistics.wallClockTime) &&
        Objects.equals(this.writeIOGiB, jobScheduleStatistics.writeIOGiB) &&
        Objects.equals(this.writeIOps, jobScheduleStatistics.writeIOps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(kernelCPUTime, lastUpdateTime, numFailedTasks, numSucceededTasks, numTaskRetries, readIOGiB, readIOps, startTime, url, userCPUTime, waitTime, wallClockTime, writeIOGiB, writeIOps);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobScheduleStatistics {\n");
    sb.append("    kernelCPUTime: ").append(toIndentedString(kernelCPUTime)).append("\n");
    sb.append("    lastUpdateTime: ").append(toIndentedString(lastUpdateTime)).append("\n");
    sb.append("    numFailedTasks: ").append(toIndentedString(numFailedTasks)).append("\n");
    sb.append("    numSucceededTasks: ").append(toIndentedString(numSucceededTasks)).append("\n");
    sb.append("    numTaskRetries: ").append(toIndentedString(numTaskRetries)).append("\n");
    sb.append("    readIOGiB: ").append(toIndentedString(readIOGiB)).append("\n");
    sb.append("    readIOps: ").append(toIndentedString(readIOps)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    userCPUTime: ").append(toIndentedString(userCPUTime)).append("\n");
    sb.append("    waitTime: ").append(toIndentedString(waitTime)).append("\n");
    sb.append("    wallClockTime: ").append(toIndentedString(wallClockTime)).append("\n");
    sb.append("    writeIOGiB: ").append(toIndentedString(writeIOGiB)).append("\n");
    sb.append("    writeIOps: ").append(toIndentedString(writeIOps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("kernelCPUTime");
    openapiFields.add("lastUpdateTime");
    openapiFields.add("numFailedTasks");
    openapiFields.add("numSucceededTasks");
    openapiFields.add("numTaskRetries");
    openapiFields.add("readIOGiB");
    openapiFields.add("readIOps");
    openapiFields.add("startTime");
    openapiFields.add("url");
    openapiFields.add("userCPUTime");
    openapiFields.add("waitTime");
    openapiFields.add("wallClockTime");
    openapiFields.add("writeIOGiB");
    openapiFields.add("writeIOps");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("kernelCPUTime");
    openapiRequiredFields.add("lastUpdateTime");
    openapiRequiredFields.add("numFailedTasks");
    openapiRequiredFields.add("numSucceededTasks");
    openapiRequiredFields.add("numTaskRetries");
    openapiRequiredFields.add("readIOGiB");
    openapiRequiredFields.add("readIOps");
    openapiRequiredFields.add("startTime");
    openapiRequiredFields.add("url");
    openapiRequiredFields.add("userCPUTime");
    openapiRequiredFields.add("waitTime");
    openapiRequiredFields.add("wallClockTime");
    openapiRequiredFields.add("writeIOGiB");
    openapiRequiredFields.add("writeIOps");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to JobScheduleStatistics
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!JobScheduleStatistics.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in JobScheduleStatistics is not found in the empty JSON string", JobScheduleStatistics.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!JobScheduleStatistics.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `JobScheduleStatistics` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : JobScheduleStatistics.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("kernelCPUTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `kernelCPUTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("kernelCPUTime").toString()));
      }
      if (!jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
      if (!jsonObj.get("userCPUTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `userCPUTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("userCPUTime").toString()));
      }
      if (!jsonObj.get("waitTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `waitTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("waitTime").toString()));
      }
      if (!jsonObj.get("wallClockTime").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `wallClockTime` to be a primitive type in the JSON string but got `%s`", jsonObj.get("wallClockTime").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!JobScheduleStatistics.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'JobScheduleStatistics' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<JobScheduleStatistics> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(JobScheduleStatistics.class));

       return (TypeAdapter<T>) new TypeAdapter<JobScheduleStatistics>() {
           @Override
           public void write(JsonWriter out, JobScheduleStatistics value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public JobScheduleStatistics read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of JobScheduleStatistics given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of JobScheduleStatistics
   * @throws IOException if the JSON string is invalid with respect to JobScheduleStatistics
   */
  public static JobScheduleStatistics fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, JobScheduleStatistics.class);
  }

  /**
   * Convert an instance of JobScheduleStatistics to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

