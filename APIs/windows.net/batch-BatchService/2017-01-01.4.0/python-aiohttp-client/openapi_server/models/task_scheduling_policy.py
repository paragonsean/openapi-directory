# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TaskSchedulingPolicy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, node_fill_type: str=None):
        """TaskSchedulingPolicy - a model defined in OpenAPI

        :param node_fill_type: The node_fill_type of this TaskSchedulingPolicy.
        """
        self.openapi_types = {
            'node_fill_type': str
        }

        self.attribute_map = {
            'node_fill_type': 'nodeFillType'
        }

        self._node_fill_type = node_fill_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskSchedulingPolicy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskSchedulingPolicy of this TaskSchedulingPolicy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def node_fill_type(self):
        """Gets the node_fill_type of this TaskSchedulingPolicy.


        :return: The node_fill_type of this TaskSchedulingPolicy.
        :rtype: str
        """
        return self._node_fill_type

    @node_fill_type.setter
    def node_fill_type(self, node_fill_type):
        """Sets the node_fill_type of this TaskSchedulingPolicy.


        :param node_fill_type: The node_fill_type of this TaskSchedulingPolicy.
        :type node_fill_type: str
        """
        allowed_values = ["spread", "pack", "unmapped"]  # noqa: E501
        if node_fill_type not in allowed_values:
            raise ValueError(
                "Invalid value for `node_fill_type` ({0}), must be one of {1}"
                .format(node_fill_type, allowed_values)
            )

        self._node_fill_type = node_fill_type
