/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2017-05-01.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ComputeNodeUser model module.
 * @module model/ComputeNodeUser
 * @version 2017-05-01.5.0
 */
class ComputeNodeUser {
    /**
     * Constructs a new <code>ComputeNodeUser</code>.
     * @alias module:model/ComputeNodeUser
     * @param name {String} 
     */
    constructor(name) { 
        
        ComputeNodeUser.initialize(this, name);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, name) { 
        obj['name'] = name;
    }

    /**
     * Constructs a <code>ComputeNodeUser</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ComputeNodeUser} obj Optional instance to populate.
     * @return {module:model/ComputeNodeUser} The populated <code>ComputeNodeUser</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ComputeNodeUser();

            if (data.hasOwnProperty('expiryTime')) {
                obj['expiryTime'] = ApiClient.convertToType(data['expiryTime'], 'Date');
            }
            if (data.hasOwnProperty('isAdmin')) {
                obj['isAdmin'] = ApiClient.convertToType(data['isAdmin'], 'Boolean');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('password')) {
                obj['password'] = ApiClient.convertToType(data['password'], 'String');
            }
            if (data.hasOwnProperty('sshPublicKey')) {
                obj['sshPublicKey'] = ApiClient.convertToType(data['sshPublicKey'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ComputeNodeUser</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ComputeNodeUser</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ComputeNodeUser.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['password'] && !(typeof data['password'] === 'string' || data['password'] instanceof String)) {
            throw new Error("Expected the field `password` to be a primitive type in the JSON string but got " + data['password']);
        }
        // ensure the json data is a string
        if (data['sshPublicKey'] && !(typeof data['sshPublicKey'] === 'string' || data['sshPublicKey'] instanceof String)) {
            throw new Error("Expected the field `sshPublicKey` to be a primitive type in the JSON string but got " + data['sshPublicKey']);
        }

        return true;
    }


}

ComputeNodeUser.RequiredProperties = ["name"];

/**
 * If omitted, the default is 1 day from the current time. For Linux compute nodes, the expiryTime has a precision up to a day.
 * @member {Date} expiryTime
 */
ComputeNodeUser.prototype['expiryTime'] = undefined;

/**
 * The default value is false.
 * @member {Boolean} isAdmin
 */
ComputeNodeUser.prototype['isAdmin'] = undefined;

/**
 * @member {String} name
 */
ComputeNodeUser.prototype['name'] = undefined;

/**
 * The password is required for Windows nodes (those created with 'cloudServiceConfiguration', or created with 'virtualMachineConfiguration' using a Windows image reference). For Linux compute nodes, the password can optionally be specified along with the sshPublicKey property.
 * @member {String} password
 */
ComputeNodeUser.prototype['password'] = undefined;

/**
 * The public key should be compatible with OpenSSH encoding and should be base 64 encoded. This property can be specified only for Linux nodes. If this is specified for a Windows node, then the Batch service rejects the request; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).
 * @member {String} sshPublicKey
 */
ComputeNodeUser.prototype['sshPublicKey'] = undefined;






export default ComputeNodeUser;

