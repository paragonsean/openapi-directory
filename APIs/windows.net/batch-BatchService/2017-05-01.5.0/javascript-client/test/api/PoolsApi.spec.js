/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2017-05-01.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BatchService);
  }
}(this, function(expect, BatchService) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BatchService.PoolsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PoolsApi', function() {
    describe('poolAdd', function() {
      it('should call poolAdd successfully', function(done) {
        //uncomment below and update the code to test poolAdd
        //instance.poolAdd(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poolDelete', function() {
      it('should call poolDelete successfully', function(done) {
        //uncomment below and update the code to test poolDelete
        //instance.poolDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poolDisableAutoScale', function() {
      it('should call poolDisableAutoScale successfully', function(done) {
        //uncomment below and update the code to test poolDisableAutoScale
        //instance.poolDisableAutoScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poolEnableAutoScale', function() {
      it('should call poolEnableAutoScale successfully', function(done) {
        //uncomment below and update the code to test poolEnableAutoScale
        //instance.poolEnableAutoScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poolEvaluateAutoScale', function() {
      it('should call poolEvaluateAutoScale successfully', function(done) {
        //uncomment below and update the code to test poolEvaluateAutoScale
        //instance.poolEvaluateAutoScale(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poolExists', function() {
      it('should call poolExists successfully', function(done) {
        //uncomment below and update the code to test poolExists
        //instance.poolExists(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poolGet', function() {
      it('should call poolGet successfully', function(done) {
        //uncomment below and update the code to test poolGet
        //instance.poolGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poolGetAllLifetimeStatistics', function() {
      it('should call poolGetAllLifetimeStatistics successfully', function(done) {
        //uncomment below and update the code to test poolGetAllLifetimeStatistics
        //instance.poolGetAllLifetimeStatistics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poolList', function() {
      it('should call poolList successfully', function(done) {
        //uncomment below and update the code to test poolList
        //instance.poolList(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poolListUsageMetrics', function() {
      it('should call poolListUsageMetrics successfully', function(done) {
        //uncomment below and update the code to test poolListUsageMetrics
        //instance.poolListUsageMetrics(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poolPatch', function() {
      it('should call poolPatch successfully', function(done) {
        //uncomment below and update the code to test poolPatch
        //instance.poolPatch(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poolResize', function() {
      it('should call poolResize successfully', function(done) {
        //uncomment below and update the code to test poolResize
        //instance.poolResize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poolStopResize', function() {
      it('should call poolStopResize successfully', function(done) {
        //uncomment below and update the code to test poolStopResize
        //instance.poolStopResize(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poolUpdateProperties', function() {
      it('should call poolUpdateProperties successfully', function(done) {
        //uncomment below and update the code to test poolUpdateProperties
        //instance.poolUpdateProperties(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('poolUpgradeOS', function() {
      it('should call poolUpgradeOS successfully', function(done) {
        //uncomment below and update the code to test poolUpgradeOS
        //instance.poolUpgradeOS(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
