# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.output_file_blob_container_destination import OutputFileBlobContainerDestination
from openapi_server import util


class OutputFileDestination(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, container: OutputFileBlobContainerDestination=None):
        """OutputFileDestination - a model defined in OpenAPI

        :param container: The container of this OutputFileDestination.
        """
        self.openapi_types = {
            'container': OutputFileBlobContainerDestination
        }

        self.attribute_map = {
            'container': 'container'
        }

        self._container = container

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OutputFileDestination':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OutputFileDestination of this OutputFileDestination.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def container(self):
        """Gets the container of this OutputFileDestination.


        :return: The container of this OutputFileDestination.
        :rtype: OutputFileBlobContainerDestination
        """
        return self._container

    @container.setter
    def container(self, container):
        """Sets the container of this OutputFileDestination.


        :param container: The container of this OutputFileDestination.
        :type container: OutputFileBlobContainerDestination
        """

        self._container = container
