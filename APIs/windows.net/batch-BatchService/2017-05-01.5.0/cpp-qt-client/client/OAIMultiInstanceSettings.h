/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2017-05-01.5.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIMultiInstanceSettings.h
 *
 * Multi-instance tasks are commonly used to support MPI tasks.
 */

#ifndef OAIMultiInstanceSettings_H
#define OAIMultiInstanceSettings_H

#include <QJsonObject>

#include "OAIResourceFile.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIResourceFile;

class OAIMultiInstanceSettings : public OAIObject {
public:
    OAIMultiInstanceSettings();
    OAIMultiInstanceSettings(QString json);
    ~OAIMultiInstanceSettings() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIResourceFile> getCommonResourceFiles() const;
    void setCommonResourceFiles(const QList<OAIResourceFile> &common_resource_files);
    bool is_common_resource_files_Set() const;
    bool is_common_resource_files_Valid() const;

    QString getCoordinationCommandLine() const;
    void setCoordinationCommandLine(const QString &coordination_command_line);
    bool is_coordination_command_line_Set() const;
    bool is_coordination_command_line_Valid() const;

    qint32 getNumberOfInstances() const;
    void setNumberOfInstances(const qint32 &number_of_instances);
    bool is_number_of_instances_Set() const;
    bool is_number_of_instances_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIResourceFile> m_common_resource_files;
    bool m_common_resource_files_isSet;
    bool m_common_resource_files_isValid;

    QString m_coordination_command_line;
    bool m_coordination_command_line_isSet;
    bool m_coordination_command_line_isValid;

    qint32 m_number_of_instances;
    bool m_number_of_instances_isSet;
    bool m_number_of_instances_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIMultiInstanceSettings)

#endif // OAIMultiInstanceSettings_H
