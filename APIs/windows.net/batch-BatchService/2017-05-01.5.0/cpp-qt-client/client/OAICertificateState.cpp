/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2017-05-01.5.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICertificateState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICertificateState::OAICertificateState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICertificateState::OAICertificateState() {
    this->initializeModel();
}

OAICertificateState::~OAICertificateState() {}

void OAICertificateState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAICertificateState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAICertificateState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("active", Qt::CaseInsensitive) == 0) {
        m_value = eOAICertificateState::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("deleting", Qt::CaseInsensitive) == 0) {
        m_value = eOAICertificateState::DELETING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("deleteFailed", Qt::CaseInsensitive) == 0) {
        m_value = eOAICertificateState::DELETEFAILED;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAICertificateState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAICertificateState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAICertificateState::ACTIVE:
            val = "active";
            break;
        case eOAICertificateState::DELETING:
            val = "deleting";
            break;
        case eOAICertificateState::DELETEFAILED:
            val = "deleteFailed";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAICertificateState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAICertificateState::eOAICertificateState OAICertificateState::getValue() const {
    return m_value;
}

void OAICertificateState::setValue(const OAICertificateState::eOAICertificateState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAICertificateState::isSet() const {
    
    return m_value_isSet;
}

bool OAICertificateState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
