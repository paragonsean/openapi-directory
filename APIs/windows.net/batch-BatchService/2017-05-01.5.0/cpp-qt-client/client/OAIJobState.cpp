/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2017-05-01.5.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobState.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobState::OAIJobState(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobState::OAIJobState() {
    this->initializeModel();
}

OAIJobState::~OAIJobState() {}

void OAIJobState::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIJobState::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIJobState::fromJson(QString jsonString) {
    
    if ( jsonString.compare("active", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobState::ACTIVE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("disabling", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobState::DISABLING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("disabled", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobState::DISABLED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("enabling", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobState::ENABLING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("terminating", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobState::TERMINATING;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("completed", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobState::COMPLETED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("deleting", Qt::CaseInsensitive) == 0) {
        m_value = eOAIJobState::DELETING;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIJobState::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIJobState::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIJobState::ACTIVE:
            val = "active";
            break;
        case eOAIJobState::DISABLING:
            val = "disabling";
            break;
        case eOAIJobState::DISABLED:
            val = "disabled";
            break;
        case eOAIJobState::ENABLING:
            val = "enabling";
            break;
        case eOAIJobState::TERMINATING:
            val = "terminating";
            break;
        case eOAIJobState::COMPLETED:
            val = "completed";
            break;
        case eOAIJobState::DELETING:
            val = "deleting";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIJobState::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIJobState::eOAIJobState OAIJobState::getValue() const {
    return m_value;
}

void OAIJobState::setValue(const OAIJobState::eOAIJobState& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIJobState::isSet() const {
    
    return m_value_isSet;
}

bool OAIJobState::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
