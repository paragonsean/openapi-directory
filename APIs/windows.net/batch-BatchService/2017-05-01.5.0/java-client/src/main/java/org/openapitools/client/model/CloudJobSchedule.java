/*
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2017-05-01.5.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.JobScheduleExecutionInformation;
import org.openapitools.client.model.JobScheduleState;
import org.openapitools.client.model.JobScheduleStatistics;
import org.openapitools.client.model.JobSpecification;
import org.openapitools.client.model.MetadataItem;
import org.openapitools.client.model.Schedule;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * CloudJobSchedule
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:58:55.624704-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class CloudJobSchedule {
  public static final String SERIALIZED_NAME_CREATION_TIME = "creationTime";
  @SerializedName(SERIALIZED_NAME_CREATION_TIME)
  private OffsetDateTime creationTime;

  public static final String SERIALIZED_NAME_DISPLAY_NAME = "displayName";
  @SerializedName(SERIALIZED_NAME_DISPLAY_NAME)
  private String displayName;

  public static final String SERIALIZED_NAME_E_TAG = "eTag";
  @SerializedName(SERIALIZED_NAME_E_TAG)
  private String eTag;

  public static final String SERIALIZED_NAME_EXECUTION_INFO = "executionInfo";
  @SerializedName(SERIALIZED_NAME_EXECUTION_INFO)
  private JobScheduleExecutionInformation executionInfo;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_JOB_SPECIFICATION = "jobSpecification";
  @SerializedName(SERIALIZED_NAME_JOB_SPECIFICATION)
  private JobSpecification jobSpecification;

  public static final String SERIALIZED_NAME_LAST_MODIFIED = "lastModified";
  @SerializedName(SERIALIZED_NAME_LAST_MODIFIED)
  private OffsetDateTime lastModified;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private List<MetadataItem> metadata = new ArrayList<>();

  public static final String SERIALIZED_NAME_PREVIOUS_STATE = "previousState";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_STATE)
  private JobScheduleState previousState;

  public static final String SERIALIZED_NAME_PREVIOUS_STATE_TRANSITION_TIME = "previousStateTransitionTime";
  @SerializedName(SERIALIZED_NAME_PREVIOUS_STATE_TRANSITION_TIME)
  private OffsetDateTime previousStateTransitionTime;

  public static final String SERIALIZED_NAME_SCHEDULE = "schedule";
  @SerializedName(SERIALIZED_NAME_SCHEDULE)
  private Schedule schedule;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private JobScheduleState state;

  public static final String SERIALIZED_NAME_STATE_TRANSITION_TIME = "stateTransitionTime";
  @SerializedName(SERIALIZED_NAME_STATE_TRANSITION_TIME)
  private OffsetDateTime stateTransitionTime;

  public static final String SERIALIZED_NAME_STATS = "stats";
  @SerializedName(SERIALIZED_NAME_STATS)
  private JobScheduleStatistics stats;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;

  public CloudJobSchedule() {
  }

  public CloudJobSchedule creationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
    return this;
  }

  /**
   * Get creationTime
   * @return creationTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getCreationTime() {
    return creationTime;
  }

  public void setCreationTime(OffsetDateTime creationTime) {
    this.creationTime = creationTime;
  }


  public CloudJobSchedule displayName(String displayName) {
    this.displayName = displayName;
    return this;
  }

  /**
   * Get displayName
   * @return displayName
   */
  @javax.annotation.Nullable
  public String getDisplayName() {
    return displayName;
  }

  public void setDisplayName(String displayName) {
    this.displayName = displayName;
  }


  public CloudJobSchedule eTag(String eTag) {
    this.eTag = eTag;
    return this;
  }

  /**
   * This is an opaque string. You can use it to detect whether the job schedule has changed between requests. In particular, you can be pass the ETag with an Update Job Schedule request to specify that your changes should take effect only if nobody else has modified the schedule in the meantime.
   * @return eTag
   */
  @javax.annotation.Nullable
  public String geteTag() {
    return eTag;
  }

  public void seteTag(String eTag) {
    this.eTag = eTag;
  }


  public CloudJobSchedule executionInfo(JobScheduleExecutionInformation executionInfo) {
    this.executionInfo = executionInfo;
    return this;
  }

  /**
   * Get executionInfo
   * @return executionInfo
   */
  @javax.annotation.Nullable
  public JobScheduleExecutionInformation getExecutionInfo() {
    return executionInfo;
  }

  public void setExecutionInfo(JobScheduleExecutionInformation executionInfo) {
    this.executionInfo = executionInfo;
  }


  public CloudJobSchedule id(String id) {
    this.id = id;
    return this;
  }

  /**
   * It is common to use a GUID for the id.
   * @return id
   */
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }


  public CloudJobSchedule jobSpecification(JobSpecification jobSpecification) {
    this.jobSpecification = jobSpecification;
    return this;
  }

  /**
   * Get jobSpecification
   * @return jobSpecification
   */
  @javax.annotation.Nullable
  public JobSpecification getJobSpecification() {
    return jobSpecification;
  }

  public void setJobSpecification(JobSpecification jobSpecification) {
    this.jobSpecification = jobSpecification;
  }


  public CloudJobSchedule lastModified(OffsetDateTime lastModified) {
    this.lastModified = lastModified;
    return this;
  }

  /**
   * This is the last time at which the schedule level data, such as the job specification or recurrence information, changed. It does not factor in job-level changes such as new jobs being created or jobs changing state.
   * @return lastModified
   */
  @javax.annotation.Nullable
  public OffsetDateTime getLastModified() {
    return lastModified;
  }

  public void setLastModified(OffsetDateTime lastModified) {
    this.lastModified = lastModified;
  }


  public CloudJobSchedule metadata(List<MetadataItem> metadata) {
    this.metadata = metadata;
    return this;
  }

  public CloudJobSchedule addMetadataItem(MetadataItem metadataItem) {
    if (this.metadata == null) {
      this.metadata = new ArrayList<>();
    }
    this.metadata.add(metadataItem);
    return this;
  }

  /**
   * The Batch service does not assign any meaning to metadata; it is solely for the use of user code.
   * @return metadata
   */
  @javax.annotation.Nullable
  public List<MetadataItem> getMetadata() {
    return metadata;
  }

  public void setMetadata(List<MetadataItem> metadata) {
    this.metadata = metadata;
  }


  public CloudJobSchedule previousState(JobScheduleState previousState) {
    this.previousState = previousState;
    return this;
  }

  /**
   * Get previousState
   * @return previousState
   */
  @javax.annotation.Nullable
  public JobScheduleState getPreviousState() {
    return previousState;
  }

  public void setPreviousState(JobScheduleState previousState) {
    this.previousState = previousState;
  }


  public CloudJobSchedule previousStateTransitionTime(OffsetDateTime previousStateTransitionTime) {
    this.previousStateTransitionTime = previousStateTransitionTime;
    return this;
  }

  /**
   * This property is not present if the job schedule is in its initial active state.
   * @return previousStateTransitionTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getPreviousStateTransitionTime() {
    return previousStateTransitionTime;
  }

  public void setPreviousStateTransitionTime(OffsetDateTime previousStateTransitionTime) {
    this.previousStateTransitionTime = previousStateTransitionTime;
  }


  public CloudJobSchedule schedule(Schedule schedule) {
    this.schedule = schedule;
    return this;
  }

  /**
   * Get schedule
   * @return schedule
   */
  @javax.annotation.Nullable
  public Schedule getSchedule() {
    return schedule;
  }

  public void setSchedule(Schedule schedule) {
    this.schedule = schedule;
  }


  public CloudJobSchedule state(JobScheduleState state) {
    this.state = state;
    return this;
  }

  /**
   * Get state
   * @return state
   */
  @javax.annotation.Nullable
  public JobScheduleState getState() {
    return state;
  }

  public void setState(JobScheduleState state) {
    this.state = state;
  }


  public CloudJobSchedule stateTransitionTime(OffsetDateTime stateTransitionTime) {
    this.stateTransitionTime = stateTransitionTime;
    return this;
  }

  /**
   * Get stateTransitionTime
   * @return stateTransitionTime
   */
  @javax.annotation.Nullable
  public OffsetDateTime getStateTransitionTime() {
    return stateTransitionTime;
  }

  public void setStateTransitionTime(OffsetDateTime stateTransitionTime) {
    this.stateTransitionTime = stateTransitionTime;
  }


  public CloudJobSchedule stats(JobScheduleStatistics stats) {
    this.stats = stats;
    return this;
  }

  /**
   * Get stats
   * @return stats
   */
  @javax.annotation.Nullable
  public JobScheduleStatistics getStats() {
    return stats;
  }

  public void setStats(JobScheduleStatistics stats) {
    this.stats = stats;
  }


  public CloudJobSchedule url(String url) {
    this.url = url;
    return this;
  }

  /**
   * Get url
   * @return url
   */
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CloudJobSchedule cloudJobSchedule = (CloudJobSchedule) o;
    return Objects.equals(this.creationTime, cloudJobSchedule.creationTime) &&
        Objects.equals(this.displayName, cloudJobSchedule.displayName) &&
        Objects.equals(this.eTag, cloudJobSchedule.eTag) &&
        Objects.equals(this.executionInfo, cloudJobSchedule.executionInfo) &&
        Objects.equals(this.id, cloudJobSchedule.id) &&
        Objects.equals(this.jobSpecification, cloudJobSchedule.jobSpecification) &&
        Objects.equals(this.lastModified, cloudJobSchedule.lastModified) &&
        Objects.equals(this.metadata, cloudJobSchedule.metadata) &&
        Objects.equals(this.previousState, cloudJobSchedule.previousState) &&
        Objects.equals(this.previousStateTransitionTime, cloudJobSchedule.previousStateTransitionTime) &&
        Objects.equals(this.schedule, cloudJobSchedule.schedule) &&
        Objects.equals(this.state, cloudJobSchedule.state) &&
        Objects.equals(this.stateTransitionTime, cloudJobSchedule.stateTransitionTime) &&
        Objects.equals(this.stats, cloudJobSchedule.stats) &&
        Objects.equals(this.url, cloudJobSchedule.url);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creationTime, displayName, eTag, executionInfo, id, jobSpecification, lastModified, metadata, previousState, previousStateTransitionTime, schedule, state, stateTransitionTime, stats, url);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CloudJobSchedule {\n");
    sb.append("    creationTime: ").append(toIndentedString(creationTime)).append("\n");
    sb.append("    displayName: ").append(toIndentedString(displayName)).append("\n");
    sb.append("    eTag: ").append(toIndentedString(eTag)).append("\n");
    sb.append("    executionInfo: ").append(toIndentedString(executionInfo)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    jobSpecification: ").append(toIndentedString(jobSpecification)).append("\n");
    sb.append("    lastModified: ").append(toIndentedString(lastModified)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    previousState: ").append(toIndentedString(previousState)).append("\n");
    sb.append("    previousStateTransitionTime: ").append(toIndentedString(previousStateTransitionTime)).append("\n");
    sb.append("    schedule: ").append(toIndentedString(schedule)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    stateTransitionTime: ").append(toIndentedString(stateTransitionTime)).append("\n");
    sb.append("    stats: ").append(toIndentedString(stats)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("creationTime");
    openapiFields.add("displayName");
    openapiFields.add("eTag");
    openapiFields.add("executionInfo");
    openapiFields.add("id");
    openapiFields.add("jobSpecification");
    openapiFields.add("lastModified");
    openapiFields.add("metadata");
    openapiFields.add("previousState");
    openapiFields.add("previousStateTransitionTime");
    openapiFields.add("schedule");
    openapiFields.add("state");
    openapiFields.add("stateTransitionTime");
    openapiFields.add("stats");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to CloudJobSchedule
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!CloudJobSchedule.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in CloudJobSchedule is not found in the empty JSON string", CloudJobSchedule.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!CloudJobSchedule.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `CloudJobSchedule` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("displayName") != null && !jsonObj.get("displayName").isJsonNull()) && !jsonObj.get("displayName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `displayName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("displayName").toString()));
      }
      if ((jsonObj.get("eTag") != null && !jsonObj.get("eTag").isJsonNull()) && !jsonObj.get("eTag").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `eTag` to be a primitive type in the JSON string but got `%s`", jsonObj.get("eTag").toString()));
      }
      // validate the optional field `executionInfo`
      if (jsonObj.get("executionInfo") != null && !jsonObj.get("executionInfo").isJsonNull()) {
        JobScheduleExecutionInformation.validateJsonElement(jsonObj.get("executionInfo"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      // validate the optional field `jobSpecification`
      if (jsonObj.get("jobSpecification") != null && !jsonObj.get("jobSpecification").isJsonNull()) {
        JobSpecification.validateJsonElement(jsonObj.get("jobSpecification"));
      }
      if (jsonObj.get("metadata") != null && !jsonObj.get("metadata").isJsonNull()) {
        JsonArray jsonArraymetadata = jsonObj.getAsJsonArray("metadata");
        if (jsonArraymetadata != null) {
          // ensure the json data is an array
          if (!jsonObj.get("metadata").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `metadata` to be an array in the JSON string but got `%s`", jsonObj.get("metadata").toString()));
          }

          // validate the optional field `metadata` (array)
          for (int i = 0; i < jsonArraymetadata.size(); i++) {
            MetadataItem.validateJsonElement(jsonArraymetadata.get(i));
          };
        }
      }
      // validate the optional field `previousState`
      if (jsonObj.get("previousState") != null && !jsonObj.get("previousState").isJsonNull()) {
        JobScheduleState.validateJsonElement(jsonObj.get("previousState"));
      }
      // validate the optional field `schedule`
      if (jsonObj.get("schedule") != null && !jsonObj.get("schedule").isJsonNull()) {
        Schedule.validateJsonElement(jsonObj.get("schedule"));
      }
      // validate the optional field `state`
      if (jsonObj.get("state") != null && !jsonObj.get("state").isJsonNull()) {
        JobScheduleState.validateJsonElement(jsonObj.get("state"));
      }
      // validate the optional field `stats`
      if (jsonObj.get("stats") != null && !jsonObj.get("stats").isJsonNull()) {
        JobScheduleStatistics.validateJsonElement(jsonObj.get("stats"));
      }
      if ((jsonObj.get("url") != null && !jsonObj.get("url").isJsonNull()) && !jsonObj.get("url").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `url` to be a primitive type in the JSON string but got `%s`", jsonObj.get("url").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CloudJobSchedule.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CloudJobSchedule' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CloudJobSchedule> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CloudJobSchedule.class));

       return (TypeAdapter<T>) new TypeAdapter<CloudJobSchedule>() {
           @Override
           public void write(JsonWriter out, CloudJobSchedule value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public CloudJobSchedule read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of CloudJobSchedule given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of CloudJobSchedule
   * @throws IOException if the JSON string is invalid with respect to CloudJobSchedule
   */
  public static CloudJobSchedule fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CloudJobSchedule.class);
  }

  /**
   * Convert an instance of CloudJobSchedule to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

