/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2017-06-01.5.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISubtaskState.h
 *
 * Values are:   preparing - The task has been assigned to a compute node, but is waiting for a required Job Preparation task to complete on the node. If the Job Preparation task succeeds, the task will move to running. If the Job Preparation task fails, the task will be eligible to be assigned to a different node.  running - The subtask is running on a compute node.  completed - The subtask is no longer eligible to run, usually because the subtask has finished successfully, or the subtask has finished unsuccessfully and has exhausted its retry limit. A subtask is also marked as completed if an error occurred launching the subtask, or when the task has been terminated.
 */

#ifndef OAISubtaskState_H
#define OAISubtaskState_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISubtaskState : public OAIEnum {
public:
    OAISubtaskState();
    OAISubtaskState(QString json);
    ~OAISubtaskState() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAISubtaskState {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        PREPARING, 
        RUNNING, 
        COMPLETED
    };
    OAISubtaskState::eOAISubtaskState getValue() const;
    void setValue(const OAISubtaskState::eOAISubtaskState& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAISubtaskState m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISubtaskState)

#endif // OAISubtaskState_H
