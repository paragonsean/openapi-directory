# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NodeDisableSchedulingParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, node_disable_scheduling_option: str=None):
        """NodeDisableSchedulingParameter - a model defined in OpenAPI

        :param node_disable_scheduling_option: The node_disable_scheduling_option of this NodeDisableSchedulingParameter.
        """
        self.openapi_types = {
            'node_disable_scheduling_option': str
        }

        self.attribute_map = {
            'node_disable_scheduling_option': 'nodeDisableSchedulingOption'
        }

        self._node_disable_scheduling_option = node_disable_scheduling_option

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NodeDisableSchedulingParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NodeDisableSchedulingParameter of this NodeDisableSchedulingParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def node_disable_scheduling_option(self):
        """Gets the node_disable_scheduling_option of this NodeDisableSchedulingParameter.

        Values are:   requeue - Terminate running task processes and requeue the tasks. The tasks may run again on other compute nodes, or when task scheduling is re-enabled on this node. Enter offline state as soon as tasks have been terminated.  terminate - Terminate running tasks. The tasks will not run again. Enter offline state as soon as tasks have been terminated.  taskcompletion - Allow currently running tasks to complete. Schedule no new tasks while waiting. Enter offline state when all tasks have completed.   The default value is requeue.

        :return: The node_disable_scheduling_option of this NodeDisableSchedulingParameter.
        :rtype: str
        """
        return self._node_disable_scheduling_option

    @node_disable_scheduling_option.setter
    def node_disable_scheduling_option(self, node_disable_scheduling_option):
        """Sets the node_disable_scheduling_option of this NodeDisableSchedulingParameter.

        Values are:   requeue - Terminate running task processes and requeue the tasks. The tasks may run again on other compute nodes, or when task scheduling is re-enabled on this node. Enter offline state as soon as tasks have been terminated.  terminate - Terminate running tasks. The tasks will not run again. Enter offline state as soon as tasks have been terminated.  taskcompletion - Allow currently running tasks to complete. Schedule no new tasks while waiting. Enter offline state when all tasks have completed.   The default value is requeue.

        :param node_disable_scheduling_option: The node_disable_scheduling_option of this NodeDisableSchedulingParameter.
        :type node_disable_scheduling_option: str
        """
        allowed_values = ["requeue", "terminate", "taskCompletion"]  # noqa: E501
        if node_disable_scheduling_option not in allowed_values:
            raise ValueError(
                "Invalid value for `node_disable_scheduling_option` ({0}), must be one of {1}"
                .format(node_disable_scheduling_option, allowed_values)
            )

        self._node_disable_scheduling_option = node_disable_scheduling_option
