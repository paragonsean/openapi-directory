# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NodeReimageParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, node_reimage_option: str=None):
        """NodeReimageParameter - a model defined in OpenAPI

        :param node_reimage_option: The node_reimage_option of this NodeReimageParameter.
        """
        self.openapi_types = {
            'node_reimage_option': str
        }

        self.attribute_map = {
            'node_reimage_option': 'nodeReimageOption'
        }

        self._node_reimage_option = node_reimage_option

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NodeReimageParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NodeReimageParameter of this NodeReimageParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def node_reimage_option(self):
        """Gets the node_reimage_option of this NodeReimageParameter.

        Values are:   requeue - Terminate running task processes and requeue the tasks. The tasks will run again when a node is available. Reimage the node as soon as tasks have been terminated.  terminate - Terminate running tasks. The tasks will not run again. Reimage the node as soon as tasks have been terminated.  taskcompletion - Allow currently running tasks to complete. Schedule no new tasks while waiting. Reimage the node when all tasks have completed.  retaineddata - Allow currently running tasks to complete, then wait for all task data retention periods to expire. Schedule no new tasks while waiting. Reimage the node when all task retention periods have expired.   The default value is requeue.

        :return: The node_reimage_option of this NodeReimageParameter.
        :rtype: str
        """
        return self._node_reimage_option

    @node_reimage_option.setter
    def node_reimage_option(self, node_reimage_option):
        """Sets the node_reimage_option of this NodeReimageParameter.

        Values are:   requeue - Terminate running task processes and requeue the tasks. The tasks will run again when a node is available. Reimage the node as soon as tasks have been terminated.  terminate - Terminate running tasks. The tasks will not run again. Reimage the node as soon as tasks have been terminated.  taskcompletion - Allow currently running tasks to complete. Schedule no new tasks while waiting. Reimage the node when all tasks have completed.  retaineddata - Allow currently running tasks to complete, then wait for all task data retention periods to expire. Schedule no new tasks while waiting. Reimage the node when all task retention periods have expired.   The default value is requeue.

        :param node_reimage_option: The node_reimage_option of this NodeReimageParameter.
        :type node_reimage_option: str
        """
        allowed_values = ["requeue", "terminate", "taskCompletion", "retainedData"]  # noqa: E501
        if node_reimage_option not in allowed_values:
            raise ValueError(
                "Invalid value for `node_reimage_option` ({0}), must be one of {1}"
                .format(node_reimage_option, allowed_values)
            )

        self._node_reimage_option = node_reimage_option
