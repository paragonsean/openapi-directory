/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2017-06-01.5.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The JobConstraints model module.
 * @module model/JobConstraints
 * @version 2017-06-01.5.1
 */
class JobConstraints {
    /**
     * Constructs a new <code>JobConstraints</code>.
     * @alias module:model/JobConstraints
     */
    constructor() { 
        
        JobConstraints.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobConstraints</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobConstraints} obj Optional instance to populate.
     * @return {module:model/JobConstraints} The populated <code>JobConstraints</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobConstraints();

            if (data.hasOwnProperty('maxTaskRetryCount')) {
                obj['maxTaskRetryCount'] = ApiClient.convertToType(data['maxTaskRetryCount'], 'Number');
            }
            if (data.hasOwnProperty('maxWallClockTime')) {
                obj['maxWallClockTime'] = ApiClient.convertToType(data['maxWallClockTime'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobConstraints</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobConstraints</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['maxWallClockTime'] && !(typeof data['maxWallClockTime'] === 'string' || data['maxWallClockTime'] instanceof String)) {
            throw new Error("Expected the field `maxWallClockTime` to be a primitive type in the JSON string but got " + data['maxWallClockTime']);
        }

        return true;
    }


}



/**
 * Note that this value specifically controls the number of retries. The Batch service will try each task once, and may then retry up to this limit. For example, if the maximum retry count is 3, Batch tries a task up to 4 times (one initial try and 3 retries). If the maximum retry count is 0, the Batch service does not retry tasks. If the maximum retry count is -1, the Batch service retries tasks without limit. The default value is 0 (no retries).
 * @member {Number} maxTaskRetryCount
 */
JobConstraints.prototype['maxTaskRetryCount'] = undefined;

/**
 * If the job does not complete within the time limit, the Batch service terminates it and any tasks that are still running. In this case, the termination reason will be MaxWallClockTimeExpiry. If this property is not specified, there is no time limit on how long the job may run.
 * @member {String} maxWallClockTime
 */
JobConstraints.prototype['maxWallClockTime'] = undefined;






export default JobConstraints;

