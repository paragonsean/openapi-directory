/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2017-06-01.5.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NetworkSecurityGroupRule model module.
 * @module model/NetworkSecurityGroupRule
 * @version 2017-06-01.5.1
 */
class NetworkSecurityGroupRule {
    /**
     * Constructs a new <code>NetworkSecurityGroupRule</code>.
     * @alias module:model/NetworkSecurityGroupRule
     * @param access {module:model/NetworkSecurityGroupRule.AccessEnum} 
     * @param priority {Number} Priorities within a pool must be unique and are evaluated in order of priority. The lower the number the higher the priority. For example, rules could be specified with order numbers of 150, 250, and 350. The rule with the order number of 150 takes precedence over the rule that has an order of 250. Allowed priorities are 150 to 3500. If any reserved or duplicate values are provided the request fails with HTTP status code 400.
     * @param sourceAddressPrefix {String} Valid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e. 192.168.1.0/24), default tag, or * (for all addresses).  If any other values are provided the request fails with HTTP status code 400.
     */
    constructor(access, priority, sourceAddressPrefix) { 
        
        NetworkSecurityGroupRule.initialize(this, access, priority, sourceAddressPrefix);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, access, priority, sourceAddressPrefix) { 
        obj['access'] = access;
        obj['priority'] = priority;
        obj['sourceAddressPrefix'] = sourceAddressPrefix;
    }

    /**
     * Constructs a <code>NetworkSecurityGroupRule</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NetworkSecurityGroupRule} obj Optional instance to populate.
     * @return {module:model/NetworkSecurityGroupRule} The populated <code>NetworkSecurityGroupRule</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NetworkSecurityGroupRule();

            if (data.hasOwnProperty('access')) {
                obj['access'] = ApiClient.convertToType(data['access'], 'String');
            }
            if (data.hasOwnProperty('priority')) {
                obj['priority'] = ApiClient.convertToType(data['priority'], 'Number');
            }
            if (data.hasOwnProperty('sourceAddressPrefix')) {
                obj['sourceAddressPrefix'] = ApiClient.convertToType(data['sourceAddressPrefix'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NetworkSecurityGroupRule</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NetworkSecurityGroupRule</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NetworkSecurityGroupRule.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['access'] && !(typeof data['access'] === 'string' || data['access'] instanceof String)) {
            throw new Error("Expected the field `access` to be a primitive type in the JSON string but got " + data['access']);
        }
        // ensure the json data is a string
        if (data['sourceAddressPrefix'] && !(typeof data['sourceAddressPrefix'] === 'string' || data['sourceAddressPrefix'] instanceof String)) {
            throw new Error("Expected the field `sourceAddressPrefix` to be a primitive type in the JSON string but got " + data['sourceAddressPrefix']);
        }

        return true;
    }


}

NetworkSecurityGroupRule.RequiredProperties = ["access", "priority", "sourceAddressPrefix"];

/**
 * @member {module:model/NetworkSecurityGroupRule.AccessEnum} access
 */
NetworkSecurityGroupRule.prototype['access'] = undefined;

/**
 * Priorities within a pool must be unique and are evaluated in order of priority. The lower the number the higher the priority. For example, rules could be specified with order numbers of 150, 250, and 350. The rule with the order number of 150 takes precedence over the rule that has an order of 250. Allowed priorities are 150 to 3500. If any reserved or duplicate values are provided the request fails with HTTP status code 400.
 * @member {Number} priority
 */
NetworkSecurityGroupRule.prototype['priority'] = undefined;

/**
 * Valid values are a single IP address (i.e. 10.10.10.10), IP subnet (i.e. 192.168.1.0/24), default tag, or * (for all addresses).  If any other values are provided the request fails with HTTP status code 400.
 * @member {String} sourceAddressPrefix
 */
NetworkSecurityGroupRule.prototype['sourceAddressPrefix'] = undefined;





/**
 * Allowed values for the <code>access</code> property.
 * @enum {String}
 * @readonly
 */
NetworkSecurityGroupRule['AccessEnum'] = {

    /**
     * value: "allow"
     * @const
     */
    "allow": "allow",

    /**
     * value: "deny"
     * @const
     */
    "deny": "deny"
};



export default NetworkSecurityGroupRule;

