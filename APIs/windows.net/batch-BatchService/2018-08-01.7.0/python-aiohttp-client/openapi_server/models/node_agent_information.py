# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NodeAgentInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, last_update_time: datetime=None, version: str=None):
        """NodeAgentInformation - a model defined in OpenAPI

        :param last_update_time: The last_update_time of this NodeAgentInformation.
        :param version: The version of this NodeAgentInformation.
        """
        self.openapi_types = {
            'last_update_time': datetime,
            'version': str
        }

        self.attribute_map = {
            'last_update_time': 'lastUpdateTime',
            'version': 'version'
        }

        self._last_update_time = last_update_time
        self._version = version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NodeAgentInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NodeAgentInformation of this NodeAgentInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def last_update_time(self):
        """Gets the last_update_time of this NodeAgentInformation.

        This is the most recent time that the node agent was updated to a new version.

        :return: The last_update_time of this NodeAgentInformation.
        :rtype: datetime
        """
        return self._last_update_time

    @last_update_time.setter
    def last_update_time(self, last_update_time):
        """Sets the last_update_time of this NodeAgentInformation.

        This is the most recent time that the node agent was updated to a new version.

        :param last_update_time: The last_update_time of this NodeAgentInformation.
        :type last_update_time: datetime
        """
        if last_update_time is None:
            raise ValueError("Invalid value for `last_update_time`, must not be `None`")

        self._last_update_time = last_update_time

    @property
    def version(self):
        """Gets the version of this NodeAgentInformation.

        This version number can be checked against the node agent release notes located at https://github.com/Azure/Batch/blob/master/changelogs/nodeagent/CHANGELOG.md.

        :return: The version of this NodeAgentInformation.
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this NodeAgentInformation.

        This version number can be checked against the node agent release notes located at https://github.com/Azure/Batch/blob/master/changelogs/nodeagent/CHANGELOG.md.

        :param version: The version of this NodeAgentInformation.
        :type version: str
        """
        if version is None:
            raise ValueError("Invalid value for `version`, must not be `None`")

        self._version = version
