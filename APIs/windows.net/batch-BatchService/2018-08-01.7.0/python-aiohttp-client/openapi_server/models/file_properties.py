# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FileProperties(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, content_length: int=None, content_type: str=None, creation_time: datetime=None, file_mode: str=None, last_modified: datetime=None):
        """FileProperties - a model defined in OpenAPI

        :param content_length: The content_length of this FileProperties.
        :param content_type: The content_type of this FileProperties.
        :param creation_time: The creation_time of this FileProperties.
        :param file_mode: The file_mode of this FileProperties.
        :param last_modified: The last_modified of this FileProperties.
        """
        self.openapi_types = {
            'content_length': int,
            'content_type': str,
            'creation_time': datetime,
            'file_mode': str,
            'last_modified': datetime
        }

        self.attribute_map = {
            'content_length': 'contentLength',
            'content_type': 'contentType',
            'creation_time': 'creationTime',
            'file_mode': 'fileMode',
            'last_modified': 'lastModified'
        }

        self._content_length = content_length
        self._content_type = content_type
        self._creation_time = creation_time
        self._file_mode = file_mode
        self._last_modified = last_modified

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FileProperties':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FileProperties of this FileProperties.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def content_length(self):
        """Gets the content_length of this FileProperties.


        :return: The content_length of this FileProperties.
        :rtype: int
        """
        return self._content_length

    @content_length.setter
    def content_length(self, content_length):
        """Sets the content_length of this FileProperties.


        :param content_length: The content_length of this FileProperties.
        :type content_length: int
        """
        if content_length is None:
            raise ValueError("Invalid value for `content_length`, must not be `None`")

        self._content_length = content_length

    @property
    def content_type(self):
        """Gets the content_type of this FileProperties.


        :return: The content_type of this FileProperties.
        :rtype: str
        """
        return self._content_type

    @content_type.setter
    def content_type(self, content_type):
        """Sets the content_type of this FileProperties.


        :param content_type: The content_type of this FileProperties.
        :type content_type: str
        """

        self._content_type = content_type

    @property
    def creation_time(self):
        """Gets the creation_time of this FileProperties.

        The creation time is not returned for files on Linux compute nodes.

        :return: The creation_time of this FileProperties.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this FileProperties.

        The creation time is not returned for files on Linux compute nodes.

        :param creation_time: The creation_time of this FileProperties.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def file_mode(self):
        """Gets the file_mode of this FileProperties.

        The file mode is returned only for files on Linux compute nodes.

        :return: The file_mode of this FileProperties.
        :rtype: str
        """
        return self._file_mode

    @file_mode.setter
    def file_mode(self, file_mode):
        """Sets the file_mode of this FileProperties.

        The file mode is returned only for files on Linux compute nodes.

        :param file_mode: The file_mode of this FileProperties.
        :type file_mode: str
        """

        self._file_mode = file_mode

    @property
    def last_modified(self):
        """Gets the last_modified of this FileProperties.


        :return: The last_modified of this FileProperties.
        :rtype: datetime
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this FileProperties.


        :param last_modified: The last_modified of this FileProperties.
        :type last_modified: datetime
        """
        if last_modified is None:
            raise ValueError("Invalid value for `last_modified`, must not be `None`")

        self._last_modified = last_modified
