# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.auto_user_specification import AutoUserSpecification
from openapi_server import util


class UserIdentity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, auto_user: AutoUserSpecification=None, username: str=None):
        """UserIdentity - a model defined in OpenAPI

        :param auto_user: The auto_user of this UserIdentity.
        :param username: The username of this UserIdentity.
        """
        self.openapi_types = {
            'auto_user': AutoUserSpecification,
            'username': str
        }

        self.attribute_map = {
            'auto_user': 'autoUser',
            'username': 'username'
        }

        self._auto_user = auto_user
        self._username = username

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UserIdentity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The UserIdentity of this UserIdentity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def auto_user(self):
        """Gets the auto_user of this UserIdentity.


        :return: The auto_user of this UserIdentity.
        :rtype: AutoUserSpecification
        """
        return self._auto_user

    @auto_user.setter
    def auto_user(self, auto_user):
        """Sets the auto_user of this UserIdentity.


        :param auto_user: The auto_user of this UserIdentity.
        :type auto_user: AutoUserSpecification
        """

        self._auto_user = auto_user

    @property
    def username(self):
        """Gets the username of this UserIdentity.

        The userName and autoUser properties are mutually exclusive; you must specify one but not both.

        :return: The username of this UserIdentity.
        :rtype: str
        """
        return self._username

    @username.setter
    def username(self, username):
        """Sets the username of this UserIdentity.

        The userName and autoUser properties are mutually exclusive; you must specify one but not both.

        :param username: The username of this UserIdentity.
        :type username: str
        """

        self._username = username
