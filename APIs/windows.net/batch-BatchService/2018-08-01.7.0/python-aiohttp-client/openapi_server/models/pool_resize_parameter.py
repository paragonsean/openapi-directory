# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.compute_node_deallocation_option import ComputeNodeDeallocationOption
from openapi_server import util


class PoolResizeParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, node_deallocation_option: ComputeNodeDeallocationOption=None, resize_timeout: str=None, target_dedicated_nodes: int=None, target_low_priority_nodes: int=None):
        """PoolResizeParameter - a model defined in OpenAPI

        :param node_deallocation_option: The node_deallocation_option of this PoolResizeParameter.
        :param resize_timeout: The resize_timeout of this PoolResizeParameter.
        :param target_dedicated_nodes: The target_dedicated_nodes of this PoolResizeParameter.
        :param target_low_priority_nodes: The target_low_priority_nodes of this PoolResizeParameter.
        """
        self.openapi_types = {
            'node_deallocation_option': ComputeNodeDeallocationOption,
            'resize_timeout': str,
            'target_dedicated_nodes': int,
            'target_low_priority_nodes': int
        }

        self.attribute_map = {
            'node_deallocation_option': 'nodeDeallocationOption',
            'resize_timeout': 'resizeTimeout',
            'target_dedicated_nodes': 'targetDedicatedNodes',
            'target_low_priority_nodes': 'targetLowPriorityNodes'
        }

        self._node_deallocation_option = node_deallocation_option
        self._resize_timeout = resize_timeout
        self._target_dedicated_nodes = target_dedicated_nodes
        self._target_low_priority_nodes = target_low_priority_nodes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PoolResizeParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PoolResizeParameter of this PoolResizeParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def node_deallocation_option(self):
        """Gets the node_deallocation_option of this PoolResizeParameter.


        :return: The node_deallocation_option of this PoolResizeParameter.
        :rtype: ComputeNodeDeallocationOption
        """
        return self._node_deallocation_option

    @node_deallocation_option.setter
    def node_deallocation_option(self, node_deallocation_option):
        """Sets the node_deallocation_option of this PoolResizeParameter.


        :param node_deallocation_option: The node_deallocation_option of this PoolResizeParameter.
        :type node_deallocation_option: ComputeNodeDeallocationOption
        """

        self._node_deallocation_option = node_deallocation_option

    @property
    def resize_timeout(self):
        """Gets the resize_timeout of this PoolResizeParameter.

        The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).

        :return: The resize_timeout of this PoolResizeParameter.
        :rtype: str
        """
        return self._resize_timeout

    @resize_timeout.setter
    def resize_timeout(self, resize_timeout):
        """Sets the resize_timeout of this PoolResizeParameter.

        The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request).

        :param resize_timeout: The resize_timeout of this PoolResizeParameter.
        :type resize_timeout: str
        """

        self._resize_timeout = resize_timeout

    @property
    def target_dedicated_nodes(self):
        """Gets the target_dedicated_nodes of this PoolResizeParameter.


        :return: The target_dedicated_nodes of this PoolResizeParameter.
        :rtype: int
        """
        return self._target_dedicated_nodes

    @target_dedicated_nodes.setter
    def target_dedicated_nodes(self, target_dedicated_nodes):
        """Sets the target_dedicated_nodes of this PoolResizeParameter.


        :param target_dedicated_nodes: The target_dedicated_nodes of this PoolResizeParameter.
        :type target_dedicated_nodes: int
        """

        self._target_dedicated_nodes = target_dedicated_nodes

    @property
    def target_low_priority_nodes(self):
        """Gets the target_low_priority_nodes of this PoolResizeParameter.


        :return: The target_low_priority_nodes of this PoolResizeParameter.
        :rtype: int
        """
        return self._target_low_priority_nodes

    @target_low_priority_nodes.setter
    def target_low_priority_nodes(self, target_low_priority_nodes):
        """Sets the target_low_priority_nodes of this PoolResizeParameter.


        :param target_low_priority_nodes: The target_low_priority_nodes of this PoolResizeParameter.
        :type target_low_priority_nodes: int
        """

        self._target_low_priority_nodes = target_low_priority_nodes
