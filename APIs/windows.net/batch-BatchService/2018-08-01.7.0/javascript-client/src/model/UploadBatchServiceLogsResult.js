/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2018-08-01.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UploadBatchServiceLogsResult model module.
 * @module model/UploadBatchServiceLogsResult
 * @version 2018-08-01.7.0
 */
class UploadBatchServiceLogsResult {
    /**
     * Constructs a new <code>UploadBatchServiceLogsResult</code>.
     * @alias module:model/UploadBatchServiceLogsResult
     * @param numberOfFilesUploaded {Number} 
     * @param virtualDirectoryName {String} The virtual directory name is part of the blob name for each log file uploaded, and it is built based poolId, nodeId and a unique identifier.
     */
    constructor(numberOfFilesUploaded, virtualDirectoryName) { 
        
        UploadBatchServiceLogsResult.initialize(this, numberOfFilesUploaded, virtualDirectoryName);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, numberOfFilesUploaded, virtualDirectoryName) { 
        obj['numberOfFilesUploaded'] = numberOfFilesUploaded;
        obj['virtualDirectoryName'] = virtualDirectoryName;
    }

    /**
     * Constructs a <code>UploadBatchServiceLogsResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UploadBatchServiceLogsResult} obj Optional instance to populate.
     * @return {module:model/UploadBatchServiceLogsResult} The populated <code>UploadBatchServiceLogsResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UploadBatchServiceLogsResult();

            if (data.hasOwnProperty('numberOfFilesUploaded')) {
                obj['numberOfFilesUploaded'] = ApiClient.convertToType(data['numberOfFilesUploaded'], 'Number');
            }
            if (data.hasOwnProperty('virtualDirectoryName')) {
                obj['virtualDirectoryName'] = ApiClient.convertToType(data['virtualDirectoryName'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UploadBatchServiceLogsResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UploadBatchServiceLogsResult</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UploadBatchServiceLogsResult.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['virtualDirectoryName'] && !(typeof data['virtualDirectoryName'] === 'string' || data['virtualDirectoryName'] instanceof String)) {
            throw new Error("Expected the field `virtualDirectoryName` to be a primitive type in the JSON string but got " + data['virtualDirectoryName']);
        }

        return true;
    }


}

UploadBatchServiceLogsResult.RequiredProperties = ["numberOfFilesUploaded", "virtualDirectoryName"];

/**
 * @member {Number} numberOfFilesUploaded
 */
UploadBatchServiceLogsResult.prototype['numberOfFilesUploaded'] = undefined;

/**
 * The virtual directory name is part of the blob name for each log file uploaded, and it is built based poolId, nodeId and a unique identifier.
 * @member {String} virtualDirectoryName
 */
UploadBatchServiceLogsResult.prototype['virtualDirectoryName'] = undefined;






export default UploadBatchServiceLogsResult;

