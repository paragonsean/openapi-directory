/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2018-08-01.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The NodeAgentInformation model module.
 * @module model/NodeAgentInformation
 * @version 2018-08-01.7.0
 */
class NodeAgentInformation {
    /**
     * Constructs a new <code>NodeAgentInformation</code>.
     * The Batch node agent is a program that runs on each node in the pool and provides Batch capability on the compute node.
     * @alias module:model/NodeAgentInformation
     * @param lastUpdateTime {Date} This is the most recent time that the node agent was updated to a new version.
     * @param version {String} This version number can be checked against the node agent release notes located at https://github.com/Azure/Batch/blob/master/changelogs/nodeagent/CHANGELOG.md.
     */
    constructor(lastUpdateTime, version) { 
        
        NodeAgentInformation.initialize(this, lastUpdateTime, version);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, lastUpdateTime, version) { 
        obj['lastUpdateTime'] = lastUpdateTime;
        obj['version'] = version;
    }

    /**
     * Constructs a <code>NodeAgentInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/NodeAgentInformation} obj Optional instance to populate.
     * @return {module:model/NodeAgentInformation} The populated <code>NodeAgentInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new NodeAgentInformation();

            if (data.hasOwnProperty('lastUpdateTime')) {
                obj['lastUpdateTime'] = ApiClient.convertToType(data['lastUpdateTime'], 'Date');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>NodeAgentInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>NodeAgentInformation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of NodeAgentInformation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}

NodeAgentInformation.RequiredProperties = ["lastUpdateTime", "version"];

/**
 * This is the most recent time that the node agent was updated to a new version.
 * @member {Date} lastUpdateTime
 */
NodeAgentInformation.prototype['lastUpdateTime'] = undefined;

/**
 * This version number can be checked against the node agent release notes located at https://github.com/Azure/Batch/blob/master/changelogs/nodeagent/CHANGELOG.md.
 * @member {String} version
 */
NodeAgentInformation.prototype['version'] = undefined;






export default NodeAgentInformation;

