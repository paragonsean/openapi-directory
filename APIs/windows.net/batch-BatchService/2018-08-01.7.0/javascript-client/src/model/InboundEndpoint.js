/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2018-08-01.7.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import InboundEndpointProtocol from './InboundEndpointProtocol';

/**
 * The InboundEndpoint model module.
 * @module model/InboundEndpoint
 * @version 2018-08-01.7.0
 */
class InboundEndpoint {
    /**
     * Constructs a new <code>InboundEndpoint</code>.
     * @alias module:model/InboundEndpoint
     * @param backendPort {Number} 
     * @param frontendPort {Number} 
     * @param name {String} 
     * @param protocol {module:model/InboundEndpointProtocol} 
     * @param publicFQDN {String} 
     * @param publicIPAddress {String} 
     */
    constructor(backendPort, frontendPort, name, protocol, publicFQDN, publicIPAddress) { 
        
        InboundEndpoint.initialize(this, backendPort, frontendPort, name, protocol, publicFQDN, publicIPAddress);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, backendPort, frontendPort, name, protocol, publicFQDN, publicIPAddress) { 
        obj['backendPort'] = backendPort;
        obj['frontendPort'] = frontendPort;
        obj['name'] = name;
        obj['protocol'] = protocol;
        obj['publicFQDN'] = publicFQDN;
        obj['publicIPAddress'] = publicIPAddress;
    }

    /**
     * Constructs a <code>InboundEndpoint</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InboundEndpoint} obj Optional instance to populate.
     * @return {module:model/InboundEndpoint} The populated <code>InboundEndpoint</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InboundEndpoint();

            if (data.hasOwnProperty('backendPort')) {
                obj['backendPort'] = ApiClient.convertToType(data['backendPort'], 'Number');
            }
            if (data.hasOwnProperty('frontendPort')) {
                obj['frontendPort'] = ApiClient.convertToType(data['frontendPort'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('protocol')) {
                obj['protocol'] = InboundEndpointProtocol.constructFromObject(data['protocol']);
            }
            if (data.hasOwnProperty('publicFQDN')) {
                obj['publicFQDN'] = ApiClient.convertToType(data['publicFQDN'], 'String');
            }
            if (data.hasOwnProperty('publicIPAddress')) {
                obj['publicIPAddress'] = ApiClient.convertToType(data['publicIPAddress'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InboundEndpoint</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InboundEndpoint</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InboundEndpoint.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['publicFQDN'] && !(typeof data['publicFQDN'] === 'string' || data['publicFQDN'] instanceof String)) {
            throw new Error("Expected the field `publicFQDN` to be a primitive type in the JSON string but got " + data['publicFQDN']);
        }
        // ensure the json data is a string
        if (data['publicIPAddress'] && !(typeof data['publicIPAddress'] === 'string' || data['publicIPAddress'] instanceof String)) {
            throw new Error("Expected the field `publicIPAddress` to be a primitive type in the JSON string but got " + data['publicIPAddress']);
        }

        return true;
    }


}

InboundEndpoint.RequiredProperties = ["backendPort", "frontendPort", "name", "protocol", "publicFQDN", "publicIPAddress"];

/**
 * @member {Number} backendPort
 */
InboundEndpoint.prototype['backendPort'] = undefined;

/**
 * @member {Number} frontendPort
 */
InboundEndpoint.prototype['frontendPort'] = undefined;

/**
 * @member {String} name
 */
InboundEndpoint.prototype['name'] = undefined;

/**
 * @member {module:model/InboundEndpointProtocol} protocol
 */
InboundEndpoint.prototype['protocol'] = undefined;

/**
 * @member {String} publicFQDN
 */
InboundEndpoint.prototype['publicFQDN'] = undefined;

/**
 * @member {String} publicIPAddress
 */
InboundEndpoint.prototype['publicIPAddress'] = undefined;






export default InboundEndpoint;

