/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2018-08-01.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaskAddParameter.h
 *
 * Batch will retry tasks when a recovery operation is triggered on a compute node. Examples of recovery operations include (but are not limited to) when an unhealthy compute node is rebooted or a compute node disappeared due to host failure. Retries due to recovery operations are independent of and are not counted against the maxTaskRetryCount. Even if the maxTaskRetryCount is 0, an internal retry due to a recovery operation may occur. Because of this, all tasks should be idempotent. This means tasks need to tolerate being interrupted and restarted without causing any corruption or duplicate data. The best practice for long running tasks is to use some form of checkpointing.
 */

#ifndef OAITaskAddParameter_H
#define OAITaskAddParameter_H

#include <QJsonObject>

#include "OAIAffinityInformation.h"
#include "OAIApplicationPackageReference.h"
#include "OAIAuthenticationTokenSettings.h"
#include "OAIEnvironmentSetting.h"
#include "OAIExitConditions.h"
#include "OAIMultiInstanceSettings.h"
#include "OAIOutputFile.h"
#include "OAIResourceFile.h"
#include "OAITaskConstraints.h"
#include "OAITaskContainerSettings.h"
#include "OAITaskDependencies.h"
#include "OAIUserIdentity.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAffinityInformation;
class OAIApplicationPackageReference;
class OAIAuthenticationTokenSettings;
class OAITaskConstraints;
class OAITaskContainerSettings;
class OAITaskDependencies;
class OAIEnvironmentSetting;
class OAIExitConditions;
class OAIMultiInstanceSettings;
class OAIOutputFile;
class OAIResourceFile;
class OAIUserIdentity;

class OAITaskAddParameter : public OAIObject {
public:
    OAITaskAddParameter();
    OAITaskAddParameter(QString json);
    ~OAITaskAddParameter() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAffinityInformation getAffinityInfo() const;
    void setAffinityInfo(const OAIAffinityInformation &affinity_info);
    bool is_affinity_info_Set() const;
    bool is_affinity_info_Valid() const;

    QList<OAIApplicationPackageReference> getApplicationPackageReferences() const;
    void setApplicationPackageReferences(const QList<OAIApplicationPackageReference> &application_package_references);
    bool is_application_package_references_Set() const;
    bool is_application_package_references_Valid() const;

    OAIAuthenticationTokenSettings getAuthenticationTokenSettings() const;
    void setAuthenticationTokenSettings(const OAIAuthenticationTokenSettings &authentication_token_settings);
    bool is_authentication_token_settings_Set() const;
    bool is_authentication_token_settings_Valid() const;

    QString getCommandLine() const;
    void setCommandLine(const QString &command_line);
    bool is_command_line_Set() const;
    bool is_command_line_Valid() const;

    OAITaskConstraints getConstraints() const;
    void setConstraints(const OAITaskConstraints &constraints);
    bool is_constraints_Set() const;
    bool is_constraints_Valid() const;

    OAITaskContainerSettings getContainerSettings() const;
    void setContainerSettings(const OAITaskContainerSettings &container_settings);
    bool is_container_settings_Set() const;
    bool is_container_settings_Valid() const;

    OAITaskDependencies getDependsOn() const;
    void setDependsOn(const OAITaskDependencies &depends_on);
    bool is_depends_on_Set() const;
    bool is_depends_on_Valid() const;

    QString getDisplayName() const;
    void setDisplayName(const QString &display_name);
    bool is_display_name_Set() const;
    bool is_display_name_Valid() const;

    QList<OAIEnvironmentSetting> getEnvironmentSettings() const;
    void setEnvironmentSettings(const QList<OAIEnvironmentSetting> &environment_settings);
    bool is_environment_settings_Set() const;
    bool is_environment_settings_Valid() const;

    OAIExitConditions getExitConditions() const;
    void setExitConditions(const OAIExitConditions &exit_conditions);
    bool is_exit_conditions_Set() const;
    bool is_exit_conditions_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIMultiInstanceSettings getMultiInstanceSettings() const;
    void setMultiInstanceSettings(const OAIMultiInstanceSettings &multi_instance_settings);
    bool is_multi_instance_settings_Set() const;
    bool is_multi_instance_settings_Valid() const;

    QList<OAIOutputFile> getOutputFiles() const;
    void setOutputFiles(const QList<OAIOutputFile> &output_files);
    bool is_output_files_Set() const;
    bool is_output_files_Valid() const;

    QList<OAIResourceFile> getResourceFiles() const;
    void setResourceFiles(const QList<OAIResourceFile> &resource_files);
    bool is_resource_files_Set() const;
    bool is_resource_files_Valid() const;

    OAIUserIdentity getUserIdentity() const;
    void setUserIdentity(const OAIUserIdentity &user_identity);
    bool is_user_identity_Set() const;
    bool is_user_identity_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAffinityInformation m_affinity_info;
    bool m_affinity_info_isSet;
    bool m_affinity_info_isValid;

    QList<OAIApplicationPackageReference> m_application_package_references;
    bool m_application_package_references_isSet;
    bool m_application_package_references_isValid;

    OAIAuthenticationTokenSettings m_authentication_token_settings;
    bool m_authentication_token_settings_isSet;
    bool m_authentication_token_settings_isValid;

    QString m_command_line;
    bool m_command_line_isSet;
    bool m_command_line_isValid;

    OAITaskConstraints m_constraints;
    bool m_constraints_isSet;
    bool m_constraints_isValid;

    OAITaskContainerSettings m_container_settings;
    bool m_container_settings_isSet;
    bool m_container_settings_isValid;

    OAITaskDependencies m_depends_on;
    bool m_depends_on_isSet;
    bool m_depends_on_isValid;

    QString m_display_name;
    bool m_display_name_isSet;
    bool m_display_name_isValid;

    QList<OAIEnvironmentSetting> m_environment_settings;
    bool m_environment_settings_isSet;
    bool m_environment_settings_isValid;

    OAIExitConditions m_exit_conditions;
    bool m_exit_conditions_isSet;
    bool m_exit_conditions_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIMultiInstanceSettings m_multi_instance_settings;
    bool m_multi_instance_settings_isSet;
    bool m_multi_instance_settings_isValid;

    QList<OAIOutputFile> m_output_files;
    bool m_output_files_isSet;
    bool m_output_files_isValid;

    QList<OAIResourceFile> m_resource_files;
    bool m_resource_files_isSet;
    bool m_resource_files_isValid;

    OAIUserIdentity m_user_identity;
    bool m_user_identity_isSet;
    bool m_user_identity_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaskAddParameter)

#endif // OAITaskAddParameter_H
