/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2018-08-01.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIJobReleaseTaskExecutionInformation.h
 *
 * 
 */

#ifndef OAIJobReleaseTaskExecutionInformation_H
#define OAIJobReleaseTaskExecutionInformation_H

#include <QJsonObject>

#include "OAITaskContainerExecutionInformation.h"
#include "OAITaskExecutionResult.h"
#include "OAITaskFailureInformation.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITaskContainerExecutionInformation;
class OAITaskFailureInformation;

class OAIJobReleaseTaskExecutionInformation : public OAIObject {
public:
    OAIJobReleaseTaskExecutionInformation();
    OAIJobReleaseTaskExecutionInformation(QString json);
    ~OAIJobReleaseTaskExecutionInformation() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAITaskContainerExecutionInformation getContainerInfo() const;
    void setContainerInfo(const OAITaskContainerExecutionInformation &container_info);
    bool is_container_info_Set() const;
    bool is_container_info_Valid() const;

    QDateTime getEndTime() const;
    void setEndTime(const QDateTime &end_time);
    bool is_end_time_Set() const;
    bool is_end_time_Valid() const;

    qint32 getExitCode() const;
    void setExitCode(const qint32 &exit_code);
    bool is_exit_code_Set() const;
    bool is_exit_code_Valid() const;

    OAITaskFailureInformation getFailureInfo() const;
    void setFailureInfo(const OAITaskFailureInformation &failure_info);
    bool is_failure_info_Set() const;
    bool is_failure_info_Valid() const;

    OAITaskExecutionResult getResult() const;
    void setResult(const OAITaskExecutionResult &result);
    bool is_result_Set() const;
    bool is_result_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getState() const;
    void setState(const QString &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getTaskRootDirectory() const;
    void setTaskRootDirectory(const QString &task_root_directory);
    bool is_task_root_directory_Set() const;
    bool is_task_root_directory_Valid() const;

    QString getTaskRootDirectoryUrl() const;
    void setTaskRootDirectoryUrl(const QString &task_root_directory_url);
    bool is_task_root_directory_url_Set() const;
    bool is_task_root_directory_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAITaskContainerExecutionInformation m_container_info;
    bool m_container_info_isSet;
    bool m_container_info_isValid;

    QDateTime m_end_time;
    bool m_end_time_isSet;
    bool m_end_time_isValid;

    qint32 m_exit_code;
    bool m_exit_code_isSet;
    bool m_exit_code_isValid;

    OAITaskFailureInformation m_failure_info;
    bool m_failure_info_isSet;
    bool m_failure_info_isValid;

    OAITaskExecutionResult m_result;
    bool m_result_isSet;
    bool m_result_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_task_root_directory;
    bool m_task_root_directory_isSet;
    bool m_task_root_directory_isValid;

    QString m_task_root_directory_url;
    bool m_task_root_directory_url_isSet;
    bool m_task_root_directory_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIJobReleaseTaskExecutionInformation)

#endif // OAIJobReleaseTaskExecutionInformation_H
