/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2018-08-01.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITaskStatistics.h
 *
 * 
 */

#ifndef OAITaskStatistics_H
#define OAITaskStatistics_H

#include <QJsonObject>

#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITaskStatistics : public OAIObject {
public:
    OAITaskStatistics();
    OAITaskStatistics(QString json);
    ~OAITaskStatistics() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getKernelCpuTime() const;
    void setKernelCpuTime(const QString &kernel_cpu_time);
    bool is_kernel_cpu_time_Set() const;
    bool is_kernel_cpu_time_Valid() const;

    QDateTime getLastUpdateTime() const;
    void setLastUpdateTime(const QDateTime &last_update_time);
    bool is_last_update_time_Set() const;
    bool is_last_update_time_Valid() const;

    double getReadIogiB() const;
    void setReadIogiB(const double &read_iogi_b);
    bool is_read_iogi_b_Set() const;
    bool is_read_iogi_b_Valid() const;

    qint64 getReadIOps() const;
    void setReadIOps(const qint64 &read_i_ops);
    bool is_read_i_ops_Set() const;
    bool is_read_i_ops_Valid() const;

    QDateTime getStartTime() const;
    void setStartTime(const QDateTime &start_time);
    bool is_start_time_Set() const;
    bool is_start_time_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    QString getUserCpuTime() const;
    void setUserCpuTime(const QString &user_cpu_time);
    bool is_user_cpu_time_Set() const;
    bool is_user_cpu_time_Valid() const;

    QString getWaitTime() const;
    void setWaitTime(const QString &wait_time);
    bool is_wait_time_Set() const;
    bool is_wait_time_Valid() const;

    QString getWallClockTime() const;
    void setWallClockTime(const QString &wall_clock_time);
    bool is_wall_clock_time_Set() const;
    bool is_wall_clock_time_Valid() const;

    double getWriteIogiB() const;
    void setWriteIogiB(const double &write_iogi_b);
    bool is_write_iogi_b_Set() const;
    bool is_write_iogi_b_Valid() const;

    qint64 getWriteIOps() const;
    void setWriteIOps(const qint64 &write_i_ops);
    bool is_write_i_ops_Set() const;
    bool is_write_i_ops_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_kernel_cpu_time;
    bool m_kernel_cpu_time_isSet;
    bool m_kernel_cpu_time_isValid;

    QDateTime m_last_update_time;
    bool m_last_update_time_isSet;
    bool m_last_update_time_isValid;

    double m_read_iogi_b;
    bool m_read_iogi_b_isSet;
    bool m_read_iogi_b_isValid;

    qint64 m_read_i_ops;
    bool m_read_i_ops_isSet;
    bool m_read_i_ops_isValid;

    QDateTime m_start_time;
    bool m_start_time_isSet;
    bool m_start_time_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;

    QString m_user_cpu_time;
    bool m_user_cpu_time_isSet;
    bool m_user_cpu_time_isValid;

    QString m_wait_time;
    bool m_wait_time_isSet;
    bool m_wait_time_isValid;

    QString m_wall_clock_time;
    bool m_wall_clock_time_isSet;
    bool m_wall_clock_time_isValid;

    double m_write_iogi_b;
    bool m_write_iogi_b_isSet;
    bool m_write_iogi_b_isValid;

    qint64 m_write_i_ops;
    bool m_write_i_ops_isSet;
    bool m_write_i_ops_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITaskStatistics)

#endif // OAITaskStatistics_H
