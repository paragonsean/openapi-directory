/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2018-08-01.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIComputeNodeEndpointConfiguration.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIComputeNodeEndpointConfiguration::OAIComputeNodeEndpointConfiguration(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIComputeNodeEndpointConfiguration::OAIComputeNodeEndpointConfiguration() {
    this->initializeModel();
}

OAIComputeNodeEndpointConfiguration::~OAIComputeNodeEndpointConfiguration() {}

void OAIComputeNodeEndpointConfiguration::initializeModel() {

    m_inbound_endpoints_isSet = false;
    m_inbound_endpoints_isValid = false;
}

void OAIComputeNodeEndpointConfiguration::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIComputeNodeEndpointConfiguration::fromJsonObject(QJsonObject json) {

    m_inbound_endpoints_isValid = ::OpenAPI::fromJsonValue(m_inbound_endpoints, json[QString("inboundEndpoints")]);
    m_inbound_endpoints_isSet = !json[QString("inboundEndpoints")].isNull() && m_inbound_endpoints_isValid;
}

QString OAIComputeNodeEndpointConfiguration::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIComputeNodeEndpointConfiguration::asJsonObject() const {
    QJsonObject obj;
    if (m_inbound_endpoints.size() > 0) {
        obj.insert(QString("inboundEndpoints"), ::OpenAPI::toJsonValue(m_inbound_endpoints));
    }
    return obj;
}

QList<OAIInboundEndpoint> OAIComputeNodeEndpointConfiguration::getInboundEndpoints() const {
    return m_inbound_endpoints;
}
void OAIComputeNodeEndpointConfiguration::setInboundEndpoints(const QList<OAIInboundEndpoint> &inbound_endpoints) {
    m_inbound_endpoints = inbound_endpoints;
    m_inbound_endpoints_isSet = true;
}

bool OAIComputeNodeEndpointConfiguration::is_inbound_endpoints_Set() const{
    return m_inbound_endpoints_isSet;
}

bool OAIComputeNodeEndpointConfiguration::is_inbound_endpoints_Valid() const{
    return m_inbound_endpoints_isValid;
}

bool OAIComputeNodeEndpointConfiguration::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_inbound_endpoints.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIComputeNodeEndpointConfiguration::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_inbound_endpoints_isValid && true;
}

} // namespace OpenAPI
