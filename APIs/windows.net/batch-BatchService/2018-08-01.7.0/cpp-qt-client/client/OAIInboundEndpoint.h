/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2018-08-01.7.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIInboundEndpoint.h
 *
 * 
 */

#ifndef OAIInboundEndpoint_H
#define OAIInboundEndpoint_H

#include <QJsonObject>

#include "OAIInboundEndpointProtocol.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIInboundEndpoint : public OAIObject {
public:
    OAIInboundEndpoint();
    OAIInboundEndpoint(QString json);
    ~OAIInboundEndpoint() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getBackendPort() const;
    void setBackendPort(const qint32 &backend_port);
    bool is_backend_port_Set() const;
    bool is_backend_port_Valid() const;

    qint32 getFrontendPort() const;
    void setFrontendPort(const qint32 &frontend_port);
    bool is_frontend_port_Set() const;
    bool is_frontend_port_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAIInboundEndpointProtocol getProtocol() const;
    void setProtocol(const OAIInboundEndpointProtocol &protocol);
    bool is_protocol_Set() const;
    bool is_protocol_Valid() const;

    QString getPublicFqdn() const;
    void setPublicFqdn(const QString &public_fqdn);
    bool is_public_fqdn_Set() const;
    bool is_public_fqdn_Valid() const;

    QString getPublicIpAddress() const;
    void setPublicIpAddress(const QString &public_ip_address);
    bool is_public_ip_address_Set() const;
    bool is_public_ip_address_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_backend_port;
    bool m_backend_port_isSet;
    bool m_backend_port_isValid;

    qint32 m_frontend_port;
    bool m_frontend_port_isSet;
    bool m_frontend_port_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAIInboundEndpointProtocol m_protocol;
    bool m_protocol_isSet;
    bool m_protocol_isValid;

    QString m_public_fqdn;
    bool m_public_fqdn_isSet;
    bool m_public_fqdn_isValid;

    QString m_public_ip_address;
    bool m_public_ip_address_isSet;
    bool m_public_ip_address_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIInboundEndpoint)

#endif // OAIInboundEndpoint_H
