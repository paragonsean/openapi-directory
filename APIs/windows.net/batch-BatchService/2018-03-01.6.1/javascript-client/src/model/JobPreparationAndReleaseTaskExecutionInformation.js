/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2018-03-01.6.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobPreparationTaskExecutionInformation from './JobPreparationTaskExecutionInformation';
import JobReleaseTaskExecutionInformation from './JobReleaseTaskExecutionInformation';

/**
 * The JobPreparationAndReleaseTaskExecutionInformation model module.
 * @module model/JobPreparationAndReleaseTaskExecutionInformation
 * @version 2018-03-01.6.1
 */
class JobPreparationAndReleaseTaskExecutionInformation {
    /**
     * Constructs a new <code>JobPreparationAndReleaseTaskExecutionInformation</code>.
     * @alias module:model/JobPreparationAndReleaseTaskExecutionInformation
     */
    constructor() { 
        
        JobPreparationAndReleaseTaskExecutionInformation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>JobPreparationAndReleaseTaskExecutionInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobPreparationAndReleaseTaskExecutionInformation} obj Optional instance to populate.
     * @return {module:model/JobPreparationAndReleaseTaskExecutionInformation} The populated <code>JobPreparationAndReleaseTaskExecutionInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobPreparationAndReleaseTaskExecutionInformation();

            if (data.hasOwnProperty('jobPreparationTaskExecutionInfo')) {
                obj['jobPreparationTaskExecutionInfo'] = JobPreparationTaskExecutionInformation.constructFromObject(data['jobPreparationTaskExecutionInfo']);
            }
            if (data.hasOwnProperty('jobReleaseTaskExecutionInfo')) {
                obj['jobReleaseTaskExecutionInfo'] = JobReleaseTaskExecutionInformation.constructFromObject(data['jobReleaseTaskExecutionInfo']);
            }
            if (data.hasOwnProperty('nodeId')) {
                obj['nodeId'] = ApiClient.convertToType(data['nodeId'], 'String');
            }
            if (data.hasOwnProperty('nodeUrl')) {
                obj['nodeUrl'] = ApiClient.convertToType(data['nodeUrl'], 'String');
            }
            if (data.hasOwnProperty('poolId')) {
                obj['poolId'] = ApiClient.convertToType(data['poolId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobPreparationAndReleaseTaskExecutionInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobPreparationAndReleaseTaskExecutionInformation</code>.
     */
    static validateJSON(data) {
        // validate the optional field `jobPreparationTaskExecutionInfo`
        if (data['jobPreparationTaskExecutionInfo']) { // data not null
          JobPreparationTaskExecutionInformation.validateJSON(data['jobPreparationTaskExecutionInfo']);
        }
        // validate the optional field `jobReleaseTaskExecutionInfo`
        if (data['jobReleaseTaskExecutionInfo']) { // data not null
          JobReleaseTaskExecutionInformation.validateJSON(data['jobReleaseTaskExecutionInfo']);
        }
        // ensure the json data is a string
        if (data['nodeId'] && !(typeof data['nodeId'] === 'string' || data['nodeId'] instanceof String)) {
            throw new Error("Expected the field `nodeId` to be a primitive type in the JSON string but got " + data['nodeId']);
        }
        // ensure the json data is a string
        if (data['nodeUrl'] && !(typeof data['nodeUrl'] === 'string' || data['nodeUrl'] instanceof String)) {
            throw new Error("Expected the field `nodeUrl` to be a primitive type in the JSON string but got " + data['nodeUrl']);
        }
        // ensure the json data is a string
        if (data['poolId'] && !(typeof data['poolId'] === 'string' || data['poolId'] instanceof String)) {
            throw new Error("Expected the field `poolId` to be a primitive type in the JSON string but got " + data['poolId']);
        }

        return true;
    }


}



/**
 * @member {module:model/JobPreparationTaskExecutionInformation} jobPreparationTaskExecutionInfo
 */
JobPreparationAndReleaseTaskExecutionInformation.prototype['jobPreparationTaskExecutionInfo'] = undefined;

/**
 * @member {module:model/JobReleaseTaskExecutionInformation} jobReleaseTaskExecutionInfo
 */
JobPreparationAndReleaseTaskExecutionInformation.prototype['jobReleaseTaskExecutionInfo'] = undefined;

/**
 * @member {String} nodeId
 */
JobPreparationAndReleaseTaskExecutionInformation.prototype['nodeId'] = undefined;

/**
 * @member {String} nodeUrl
 */
JobPreparationAndReleaseTaskExecutionInformation.prototype['nodeUrl'] = undefined;

/**
 * @member {String} poolId
 */
JobPreparationAndReleaseTaskExecutionInformation.prototype['poolId'] = undefined;






export default JobPreparationAndReleaseTaskExecutionInformation;

