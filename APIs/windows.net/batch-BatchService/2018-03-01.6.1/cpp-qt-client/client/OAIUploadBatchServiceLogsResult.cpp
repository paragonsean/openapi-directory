/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2018-03-01.6.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUploadBatchServiceLogsResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUploadBatchServiceLogsResult::OAIUploadBatchServiceLogsResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUploadBatchServiceLogsResult::OAIUploadBatchServiceLogsResult() {
    this->initializeModel();
}

OAIUploadBatchServiceLogsResult::~OAIUploadBatchServiceLogsResult() {}

void OAIUploadBatchServiceLogsResult::initializeModel() {

    m_number_of_files_uploaded_isSet = false;
    m_number_of_files_uploaded_isValid = false;

    m_virtual_directory_name_isSet = false;
    m_virtual_directory_name_isValid = false;
}

void OAIUploadBatchServiceLogsResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUploadBatchServiceLogsResult::fromJsonObject(QJsonObject json) {

    m_number_of_files_uploaded_isValid = ::OpenAPI::fromJsonValue(m_number_of_files_uploaded, json[QString("numberOfFilesUploaded")]);
    m_number_of_files_uploaded_isSet = !json[QString("numberOfFilesUploaded")].isNull() && m_number_of_files_uploaded_isValid;

    m_virtual_directory_name_isValid = ::OpenAPI::fromJsonValue(m_virtual_directory_name, json[QString("virtualDirectoryName")]);
    m_virtual_directory_name_isSet = !json[QString("virtualDirectoryName")].isNull() && m_virtual_directory_name_isValid;
}

QString OAIUploadBatchServiceLogsResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUploadBatchServiceLogsResult::asJsonObject() const {
    QJsonObject obj;
    if (m_number_of_files_uploaded_isSet) {
        obj.insert(QString("numberOfFilesUploaded"), ::OpenAPI::toJsonValue(m_number_of_files_uploaded));
    }
    if (m_virtual_directory_name_isSet) {
        obj.insert(QString("virtualDirectoryName"), ::OpenAPI::toJsonValue(m_virtual_directory_name));
    }
    return obj;
}

qint32 OAIUploadBatchServiceLogsResult::getNumberOfFilesUploaded() const {
    return m_number_of_files_uploaded;
}
void OAIUploadBatchServiceLogsResult::setNumberOfFilesUploaded(const qint32 &number_of_files_uploaded) {
    m_number_of_files_uploaded = number_of_files_uploaded;
    m_number_of_files_uploaded_isSet = true;
}

bool OAIUploadBatchServiceLogsResult::is_number_of_files_uploaded_Set() const{
    return m_number_of_files_uploaded_isSet;
}

bool OAIUploadBatchServiceLogsResult::is_number_of_files_uploaded_Valid() const{
    return m_number_of_files_uploaded_isValid;
}

QString OAIUploadBatchServiceLogsResult::getVirtualDirectoryName() const {
    return m_virtual_directory_name;
}
void OAIUploadBatchServiceLogsResult::setVirtualDirectoryName(const QString &virtual_directory_name) {
    m_virtual_directory_name = virtual_directory_name;
    m_virtual_directory_name_isSet = true;
}

bool OAIUploadBatchServiceLogsResult::is_virtual_directory_name_Set() const{
    return m_virtual_directory_name_isSet;
}

bool OAIUploadBatchServiceLogsResult::is_virtual_directory_name_Valid() const{
    return m_virtual_directory_name_isValid;
}

bool OAIUploadBatchServiceLogsResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_number_of_files_uploaded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_virtual_directory_name_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUploadBatchServiceLogsResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_number_of_files_uploaded_isValid && m_virtual_directory_name_isValid && true;
}

} // namespace OpenAPI
