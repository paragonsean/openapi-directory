/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2018-03-01.6.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOutputFileDestination.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOutputFileDestination::OAIOutputFileDestination(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOutputFileDestination::OAIOutputFileDestination() {
    this->initializeModel();
}

OAIOutputFileDestination::~OAIOutputFileDestination() {}

void OAIOutputFileDestination::initializeModel() {

    m_container_isSet = false;
    m_container_isValid = false;
}

void OAIOutputFileDestination::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOutputFileDestination::fromJsonObject(QJsonObject json) {

    m_container_isValid = ::OpenAPI::fromJsonValue(m_container, json[QString("container")]);
    m_container_isSet = !json[QString("container")].isNull() && m_container_isValid;
}

QString OAIOutputFileDestination::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOutputFileDestination::asJsonObject() const {
    QJsonObject obj;
    if (m_container.isSet()) {
        obj.insert(QString("container"), ::OpenAPI::toJsonValue(m_container));
    }
    return obj;
}

OAIOutputFileBlobContainerDestination OAIOutputFileDestination::getContainer() const {
    return m_container;
}
void OAIOutputFileDestination::setContainer(const OAIOutputFileBlobContainerDestination &container) {
    m_container = container;
    m_container_isSet = true;
}

bool OAIOutputFileDestination::is_container_Set() const{
    return m_container_isSet;
}

bool OAIOutputFileDestination::is_container_Valid() const{
    return m_container_isValid;
}

bool OAIOutputFileDestination::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_container.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOutputFileDestination::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
