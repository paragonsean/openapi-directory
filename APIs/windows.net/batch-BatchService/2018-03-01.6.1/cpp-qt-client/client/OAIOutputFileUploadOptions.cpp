/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2018-03-01.6.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOutputFileUploadOptions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOutputFileUploadOptions::OAIOutputFileUploadOptions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOutputFileUploadOptions::OAIOutputFileUploadOptions() {
    this->initializeModel();
}

OAIOutputFileUploadOptions::~OAIOutputFileUploadOptions() {}

void OAIOutputFileUploadOptions::initializeModel() {

    m_upload_condition_isSet = false;
    m_upload_condition_isValid = false;
}

void OAIOutputFileUploadOptions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOutputFileUploadOptions::fromJsonObject(QJsonObject json) {

    m_upload_condition_isValid = ::OpenAPI::fromJsonValue(m_upload_condition, json[QString("uploadCondition")]);
    m_upload_condition_isSet = !json[QString("uploadCondition")].isNull() && m_upload_condition_isValid;
}

QString OAIOutputFileUploadOptions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOutputFileUploadOptions::asJsonObject() const {
    QJsonObject obj;
    if (m_upload_condition.isSet()) {
        obj.insert(QString("uploadCondition"), ::OpenAPI::toJsonValue(m_upload_condition));
    }
    return obj;
}

OAIOutputFileUploadCondition OAIOutputFileUploadOptions::getUploadCondition() const {
    return m_upload_condition;
}
void OAIOutputFileUploadOptions::setUploadCondition(const OAIOutputFileUploadCondition &upload_condition) {
    m_upload_condition = upload_condition;
    m_upload_condition_isSet = true;
}

bool OAIOutputFileUploadOptions::is_upload_condition_Set() const{
    return m_upload_condition_isSet;
}

bool OAIOutputFileUploadOptions::is_upload_condition_Valid() const{
    return m_upload_condition_isValid;
}

bool OAIOutputFileUploadOptions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_upload_condition.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOutputFileUploadOptions::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_upload_condition_isValid && true;
}

} // namespace OpenAPI
