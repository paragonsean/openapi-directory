/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2016-02-01.3.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIJobUpdateParameter.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIJobUpdateParameter::OAIJobUpdateParameter(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIJobUpdateParameter::OAIJobUpdateParameter() {
    this->initializeModel();
}

OAIJobUpdateParameter::~OAIJobUpdateParameter() {}

void OAIJobUpdateParameter::initializeModel() {

    m_constraints_isSet = false;
    m_constraints_isValid = false;

    m_metadata_isSet = false;
    m_metadata_isValid = false;

    m_pool_info_isSet = false;
    m_pool_info_isValid = false;

    m_priority_isSet = false;
    m_priority_isValid = false;
}

void OAIJobUpdateParameter::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIJobUpdateParameter::fromJsonObject(QJsonObject json) {

    m_constraints_isValid = ::OpenAPI::fromJsonValue(m_constraints, json[QString("constraints")]);
    m_constraints_isSet = !json[QString("constraints")].isNull() && m_constraints_isValid;

    m_metadata_isValid = ::OpenAPI::fromJsonValue(m_metadata, json[QString("metadata")]);
    m_metadata_isSet = !json[QString("metadata")].isNull() && m_metadata_isValid;

    m_pool_info_isValid = ::OpenAPI::fromJsonValue(m_pool_info, json[QString("poolInfo")]);
    m_pool_info_isSet = !json[QString("poolInfo")].isNull() && m_pool_info_isValid;

    m_priority_isValid = ::OpenAPI::fromJsonValue(m_priority, json[QString("priority")]);
    m_priority_isSet = !json[QString("priority")].isNull() && m_priority_isValid;
}

QString OAIJobUpdateParameter::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIJobUpdateParameter::asJsonObject() const {
    QJsonObject obj;
    if (m_constraints.isSet()) {
        obj.insert(QString("constraints"), ::OpenAPI::toJsonValue(m_constraints));
    }
    if (m_metadata.size() > 0) {
        obj.insert(QString("metadata"), ::OpenAPI::toJsonValue(m_metadata));
    }
    if (m_pool_info.isSet()) {
        obj.insert(QString("poolInfo"), ::OpenAPI::toJsonValue(m_pool_info));
    }
    if (m_priority_isSet) {
        obj.insert(QString("priority"), ::OpenAPI::toJsonValue(m_priority));
    }
    return obj;
}

OAIJobConstraints OAIJobUpdateParameter::getConstraints() const {
    return m_constraints;
}
void OAIJobUpdateParameter::setConstraints(const OAIJobConstraints &constraints) {
    m_constraints = constraints;
    m_constraints_isSet = true;
}

bool OAIJobUpdateParameter::is_constraints_Set() const{
    return m_constraints_isSet;
}

bool OAIJobUpdateParameter::is_constraints_Valid() const{
    return m_constraints_isValid;
}

QList<OAIMetadataItem> OAIJobUpdateParameter::getMetadata() const {
    return m_metadata;
}
void OAIJobUpdateParameter::setMetadata(const QList<OAIMetadataItem> &metadata) {
    m_metadata = metadata;
    m_metadata_isSet = true;
}

bool OAIJobUpdateParameter::is_metadata_Set() const{
    return m_metadata_isSet;
}

bool OAIJobUpdateParameter::is_metadata_Valid() const{
    return m_metadata_isValid;
}

OAIPoolInformation OAIJobUpdateParameter::getPoolInfo() const {
    return m_pool_info;
}
void OAIJobUpdateParameter::setPoolInfo(const OAIPoolInformation &pool_info) {
    m_pool_info = pool_info;
    m_pool_info_isSet = true;
}

bool OAIJobUpdateParameter::is_pool_info_Set() const{
    return m_pool_info_isSet;
}

bool OAIJobUpdateParameter::is_pool_info_Valid() const{
    return m_pool_info_isValid;
}

qint32 OAIJobUpdateParameter::getPriority() const {
    return m_priority;
}
void OAIJobUpdateParameter::setPriority(const qint32 &priority) {
    m_priority = priority;
    m_priority_isSet = true;
}

bool OAIJobUpdateParameter::is_priority_Set() const{
    return m_priority_isSet;
}

bool OAIJobUpdateParameter::is_priority_Valid() const{
    return m_priority_isValid;
}

bool OAIJobUpdateParameter::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_constraints.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_metadata.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_pool_info.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_priority_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIJobUpdateParameter::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_pool_info_isValid && true;
}

} // namespace OpenAPI
