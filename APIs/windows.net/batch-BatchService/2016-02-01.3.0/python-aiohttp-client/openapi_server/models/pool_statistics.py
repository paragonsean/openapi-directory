# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.resource_statistics import ResourceStatistics
from openapi_server.models.usage_statistics import UsageStatistics
from openapi_server import util


class PoolStatistics(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, last_update_time: datetime=None, resource_stats: ResourceStatistics=None, start_time: datetime=None, url: str=None, usage_stats: UsageStatistics=None):
        """PoolStatistics - a model defined in OpenAPI

        :param last_update_time: The last_update_time of this PoolStatistics.
        :param resource_stats: The resource_stats of this PoolStatistics.
        :param start_time: The start_time of this PoolStatistics.
        :param url: The url of this PoolStatistics.
        :param usage_stats: The usage_stats of this PoolStatistics.
        """
        self.openapi_types = {
            'last_update_time': datetime,
            'resource_stats': ResourceStatistics,
            'start_time': datetime,
            'url': str,
            'usage_stats': UsageStatistics
        }

        self.attribute_map = {
            'last_update_time': 'lastUpdateTime',
            'resource_stats': 'resourceStats',
            'start_time': 'startTime',
            'url': 'url',
            'usage_stats': 'usageStats'
        }

        self._last_update_time = last_update_time
        self._resource_stats = resource_stats
        self._start_time = start_time
        self._url = url
        self._usage_stats = usage_stats

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PoolStatistics':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PoolStatistics of this PoolStatistics.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def last_update_time(self):
        """Gets the last_update_time of this PoolStatistics.

        The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.

        :return: The last_update_time of this PoolStatistics.
        :rtype: datetime
        """
        return self._last_update_time

    @last_update_time.setter
    def last_update_time(self, last_update_time):
        """Sets the last_update_time of this PoolStatistics.

        The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.

        :param last_update_time: The last_update_time of this PoolStatistics.
        :type last_update_time: datetime
        """
        if last_update_time is None:
            raise ValueError("Invalid value for `last_update_time`, must not be `None`")

        self._last_update_time = last_update_time

    @property
    def resource_stats(self):
        """Gets the resource_stats of this PoolStatistics.


        :return: The resource_stats of this PoolStatistics.
        :rtype: ResourceStatistics
        """
        return self._resource_stats

    @resource_stats.setter
    def resource_stats(self, resource_stats):
        """Sets the resource_stats of this PoolStatistics.


        :param resource_stats: The resource_stats of this PoolStatistics.
        :type resource_stats: ResourceStatistics
        """

        self._resource_stats = resource_stats

    @property
    def start_time(self):
        """Gets the start_time of this PoolStatistics.

        The start time of the time range covered by the statistics.

        :return: The start_time of this PoolStatistics.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this PoolStatistics.

        The start time of the time range covered by the statistics.

        :param start_time: The start_time of this PoolStatistics.
        :type start_time: datetime
        """
        if start_time is None:
            raise ValueError("Invalid value for `start_time`, must not be `None`")

        self._start_time = start_time

    @property
    def url(self):
        """Gets the url of this PoolStatistics.

        The URL for the statistics.

        :return: The url of this PoolStatistics.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this PoolStatistics.

        The URL for the statistics.

        :param url: The url of this PoolStatistics.
        :type url: str
        """
        if url is None:
            raise ValueError("Invalid value for `url`, must not be `None`")

        self._url = url

    @property
    def usage_stats(self):
        """Gets the usage_stats of this PoolStatistics.


        :return: The usage_stats of this PoolStatistics.
        :rtype: UsageStatistics
        """
        return self._usage_stats

    @usage_stats.setter
    def usage_stats(self, usage_stats):
        """Sets the usage_stats of this PoolStatistics.


        :param usage_stats: The usage_stats of this PoolStatistics.
        :type usage_stats: UsageStatistics
        """

        self._usage_stats = usage_stats
