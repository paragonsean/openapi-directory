# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.job_schedule_execution_information import JobScheduleExecutionInformation
from openapi_server.models.job_schedule_statistics import JobScheduleStatistics
from openapi_server.models.job_specification import JobSpecification
from openapi_server.models.metadata_item import MetadataItem
from openapi_server.models.schedule import Schedule
from openapi_server import util


class CloudJobSchedule(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, creation_time: datetime=None, display_name: str=None, e_tag: str=None, execution_info: JobScheduleExecutionInformation=None, id: str=None, job_specification: JobSpecification=None, last_modified: datetime=None, metadata: List[MetadataItem]=None, previous_state: str=None, previous_state_transition_time: datetime=None, schedule: Schedule=None, state: str=None, state_transition_time: datetime=None, stats: JobScheduleStatistics=None, url: str=None):
        """CloudJobSchedule - a model defined in OpenAPI

        :param creation_time: The creation_time of this CloudJobSchedule.
        :param display_name: The display_name of this CloudJobSchedule.
        :param e_tag: The e_tag of this CloudJobSchedule.
        :param execution_info: The execution_info of this CloudJobSchedule.
        :param id: The id of this CloudJobSchedule.
        :param job_specification: The job_specification of this CloudJobSchedule.
        :param last_modified: The last_modified of this CloudJobSchedule.
        :param metadata: The metadata of this CloudJobSchedule.
        :param previous_state: The previous_state of this CloudJobSchedule.
        :param previous_state_transition_time: The previous_state_transition_time of this CloudJobSchedule.
        :param schedule: The schedule of this CloudJobSchedule.
        :param state: The state of this CloudJobSchedule.
        :param state_transition_time: The state_transition_time of this CloudJobSchedule.
        :param stats: The stats of this CloudJobSchedule.
        :param url: The url of this CloudJobSchedule.
        """
        self.openapi_types = {
            'creation_time': datetime,
            'display_name': str,
            'e_tag': str,
            'execution_info': JobScheduleExecutionInformation,
            'id': str,
            'job_specification': JobSpecification,
            'last_modified': datetime,
            'metadata': List[MetadataItem],
            'previous_state': str,
            'previous_state_transition_time': datetime,
            'schedule': Schedule,
            'state': str,
            'state_transition_time': datetime,
            'stats': JobScheduleStatistics,
            'url': str
        }

        self.attribute_map = {
            'creation_time': 'creationTime',
            'display_name': 'displayName',
            'e_tag': 'eTag',
            'execution_info': 'executionInfo',
            'id': 'id',
            'job_specification': 'jobSpecification',
            'last_modified': 'lastModified',
            'metadata': 'metadata',
            'previous_state': 'previousState',
            'previous_state_transition_time': 'previousStateTransitionTime',
            'schedule': 'schedule',
            'state': 'state',
            'state_transition_time': 'stateTransitionTime',
            'stats': 'stats',
            'url': 'url'
        }

        self._creation_time = creation_time
        self._display_name = display_name
        self._e_tag = e_tag
        self._execution_info = execution_info
        self._id = id
        self._job_specification = job_specification
        self._last_modified = last_modified
        self._metadata = metadata
        self._previous_state = previous_state
        self._previous_state_transition_time = previous_state_transition_time
        self._schedule = schedule
        self._state = state
        self._state_transition_time = state_transition_time
        self._stats = stats
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloudJobSchedule':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CloudJobSchedule of this CloudJobSchedule.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def creation_time(self):
        """Gets the creation_time of this CloudJobSchedule.

        The creation time of the job schedule.

        :return: The creation_time of this CloudJobSchedule.
        :rtype: datetime
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this CloudJobSchedule.

        The creation time of the job schedule.

        :param creation_time: The creation_time of this CloudJobSchedule.
        :type creation_time: datetime
        """

        self._creation_time = creation_time

    @property
    def display_name(self):
        """Gets the display_name of this CloudJobSchedule.

        The display name for the schedule.

        :return: The display_name of this CloudJobSchedule.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this CloudJobSchedule.

        The display name for the schedule.

        :param display_name: The display_name of this CloudJobSchedule.
        :type display_name: str
        """

        self._display_name = display_name

    @property
    def e_tag(self):
        """Gets the e_tag of this CloudJobSchedule.

        The ETag of the job schedule.

        :return: The e_tag of this CloudJobSchedule.
        :rtype: str
        """
        return self._e_tag

    @e_tag.setter
    def e_tag(self, e_tag):
        """Sets the e_tag of this CloudJobSchedule.

        The ETag of the job schedule.

        :param e_tag: The e_tag of this CloudJobSchedule.
        :type e_tag: str
        """

        self._e_tag = e_tag

    @property
    def execution_info(self):
        """Gets the execution_info of this CloudJobSchedule.


        :return: The execution_info of this CloudJobSchedule.
        :rtype: JobScheduleExecutionInformation
        """
        return self._execution_info

    @execution_info.setter
    def execution_info(self, execution_info):
        """Sets the execution_info of this CloudJobSchedule.


        :param execution_info: The execution_info of this CloudJobSchedule.
        :type execution_info: JobScheduleExecutionInformation
        """

        self._execution_info = execution_info

    @property
    def id(self):
        """Gets the id of this CloudJobSchedule.

        A string that uniquely identifies the schedule within the account. A GUID is recommended.

        :return: The id of this CloudJobSchedule.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this CloudJobSchedule.

        A string that uniquely identifies the schedule within the account. A GUID is recommended.

        :param id: The id of this CloudJobSchedule.
        :type id: str
        """

        self._id = id

    @property
    def job_specification(self):
        """Gets the job_specification of this CloudJobSchedule.


        :return: The job_specification of this CloudJobSchedule.
        :rtype: JobSpecification
        """
        return self._job_specification

    @job_specification.setter
    def job_specification(self, job_specification):
        """Sets the job_specification of this CloudJobSchedule.


        :param job_specification: The job_specification of this CloudJobSchedule.
        :type job_specification: JobSpecification
        """

        self._job_specification = job_specification

    @property
    def last_modified(self):
        """Gets the last_modified of this CloudJobSchedule.

        The last modified time of the job schedule.

        :return: The last_modified of this CloudJobSchedule.
        :rtype: datetime
        """
        return self._last_modified

    @last_modified.setter
    def last_modified(self, last_modified):
        """Sets the last_modified of this CloudJobSchedule.

        The last modified time of the job schedule.

        :param last_modified: The last_modified of this CloudJobSchedule.
        :type last_modified: datetime
        """

        self._last_modified = last_modified

    @property
    def metadata(self):
        """Gets the metadata of this CloudJobSchedule.

        A list of name-value pairs associated with the schedule as metadata.

        :return: The metadata of this CloudJobSchedule.
        :rtype: List[MetadataItem]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this CloudJobSchedule.

        A list of name-value pairs associated with the schedule as metadata.

        :param metadata: The metadata of this CloudJobSchedule.
        :type metadata: List[MetadataItem]
        """

        self._metadata = metadata

    @property
    def previous_state(self):
        """Gets the previous_state of this CloudJobSchedule.

        The previous state of the job schedule.

        :return: The previous_state of this CloudJobSchedule.
        :rtype: str
        """
        return self._previous_state

    @previous_state.setter
    def previous_state(self, previous_state):
        """Sets the previous_state of this CloudJobSchedule.

        The previous state of the job schedule.

        :param previous_state: The previous_state of this CloudJobSchedule.
        :type previous_state: str
        """
        allowed_values = ["active", "completed", "disabled", "terminating", "deleting"]  # noqa: E501
        if previous_state not in allowed_values:
            raise ValueError(
                "Invalid value for `previous_state` ({0}), must be one of {1}"
                .format(previous_state, allowed_values)
            )

        self._previous_state = previous_state

    @property
    def previous_state_transition_time(self):
        """Gets the previous_state_transition_time of this CloudJobSchedule.

        The time at which the job schedule entered its previous state.

        :return: The previous_state_transition_time of this CloudJobSchedule.
        :rtype: datetime
        """
        return self._previous_state_transition_time

    @previous_state_transition_time.setter
    def previous_state_transition_time(self, previous_state_transition_time):
        """Sets the previous_state_transition_time of this CloudJobSchedule.

        The time at which the job schedule entered its previous state.

        :param previous_state_transition_time: The previous_state_transition_time of this CloudJobSchedule.
        :type previous_state_transition_time: datetime
        """

        self._previous_state_transition_time = previous_state_transition_time

    @property
    def schedule(self):
        """Gets the schedule of this CloudJobSchedule.


        :return: The schedule of this CloudJobSchedule.
        :rtype: Schedule
        """
        return self._schedule

    @schedule.setter
    def schedule(self, schedule):
        """Sets the schedule of this CloudJobSchedule.


        :param schedule: The schedule of this CloudJobSchedule.
        :type schedule: Schedule
        """

        self._schedule = schedule

    @property
    def state(self):
        """Gets the state of this CloudJobSchedule.

        The current state of the job schedule.

        :return: The state of this CloudJobSchedule.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this CloudJobSchedule.

        The current state of the job schedule.

        :param state: The state of this CloudJobSchedule.
        :type state: str
        """
        allowed_values = ["active", "completed", "disabled", "terminating", "deleting"]  # noqa: E501
        if state not in allowed_values:
            raise ValueError(
                "Invalid value for `state` ({0}), must be one of {1}"
                .format(state, allowed_values)
            )

        self._state = state

    @property
    def state_transition_time(self):
        """Gets the state_transition_time of this CloudJobSchedule.

        The time at which the job schedule entered the current state.

        :return: The state_transition_time of this CloudJobSchedule.
        :rtype: datetime
        """
        return self._state_transition_time

    @state_transition_time.setter
    def state_transition_time(self, state_transition_time):
        """Sets the state_transition_time of this CloudJobSchedule.

        The time at which the job schedule entered the current state.

        :param state_transition_time: The state_transition_time of this CloudJobSchedule.
        :type state_transition_time: datetime
        """

        self._state_transition_time = state_transition_time

    @property
    def stats(self):
        """Gets the stats of this CloudJobSchedule.


        :return: The stats of this CloudJobSchedule.
        :rtype: JobScheduleStatistics
        """
        return self._stats

    @stats.setter
    def stats(self, stats):
        """Sets the stats of this CloudJobSchedule.


        :param stats: The stats of this CloudJobSchedule.
        :type stats: JobScheduleStatistics
        """

        self._stats = stats

    @property
    def url(self):
        """Gets the url of this CloudJobSchedule.

        The URL of the job schedule.

        :return: The url of this CloudJobSchedule.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this CloudJobSchedule.

        The URL of the job schedule.

        :param url: The url of this CloudJobSchedule.
        :type url: str
        """

        self._url = url
