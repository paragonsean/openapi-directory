# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ComputeNodeGetRemoteLoginSettingsResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, remote_login_ip_address: str=None, remote_login_port: int=None):
        """ComputeNodeGetRemoteLoginSettingsResult - a model defined in OpenAPI

        :param remote_login_ip_address: The remote_login_ip_address of this ComputeNodeGetRemoteLoginSettingsResult.
        :param remote_login_port: The remote_login_port of this ComputeNodeGetRemoteLoginSettingsResult.
        """
        self.openapi_types = {
            'remote_login_ip_address': str,
            'remote_login_port': int
        }

        self.attribute_map = {
            'remote_login_ip_address': 'remoteLoginIPAddress',
            'remote_login_port': 'remoteLoginPort'
        }

        self._remote_login_ip_address = remote_login_ip_address
        self._remote_login_port = remote_login_port

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ComputeNodeGetRemoteLoginSettingsResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ComputeNodeGetRemoteLoginSettingsResult of this ComputeNodeGetRemoteLoginSettingsResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def remote_login_ip_address(self):
        """Gets the remote_login_ip_address of this ComputeNodeGetRemoteLoginSettingsResult.

        The IP address used for remote login to the compute node.

        :return: The remote_login_ip_address of this ComputeNodeGetRemoteLoginSettingsResult.
        :rtype: str
        """
        return self._remote_login_ip_address

    @remote_login_ip_address.setter
    def remote_login_ip_address(self, remote_login_ip_address):
        """Sets the remote_login_ip_address of this ComputeNodeGetRemoteLoginSettingsResult.

        The IP address used for remote login to the compute node.

        :param remote_login_ip_address: The remote_login_ip_address of this ComputeNodeGetRemoteLoginSettingsResult.
        :type remote_login_ip_address: str
        """
        if remote_login_ip_address is None:
            raise ValueError("Invalid value for `remote_login_ip_address`, must not be `None`")

        self._remote_login_ip_address = remote_login_ip_address

    @property
    def remote_login_port(self):
        """Gets the remote_login_port of this ComputeNodeGetRemoteLoginSettingsResult.

        The port used for remote login to the compute node.

        :return: The remote_login_port of this ComputeNodeGetRemoteLoginSettingsResult.
        :rtype: int
        """
        return self._remote_login_port

    @remote_login_port.setter
    def remote_login_port(self, remote_login_port):
        """Sets the remote_login_port of this ComputeNodeGetRemoteLoginSettingsResult.

        The port used for remote login to the compute node.

        :param remote_login_port: The remote_login_port of this ComputeNodeGetRemoteLoginSettingsResult.
        :type remote_login_port: int
        """
        if remote_login_port is None:
            raise ValueError("Invalid value for `remote_login_port`, must not be `None`")

        self._remote_login_port = remote_login_port
