# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TaskConstraints(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_task_retry_count: int=None, max_wall_clock_time: str=None, retention_time: str=None):
        """TaskConstraints - a model defined in OpenAPI

        :param max_task_retry_count: The max_task_retry_count of this TaskConstraints.
        :param max_wall_clock_time: The max_wall_clock_time of this TaskConstraints.
        :param retention_time: The retention_time of this TaskConstraints.
        """
        self.openapi_types = {
            'max_task_retry_count': int,
            'max_wall_clock_time': str,
            'retention_time': str
        }

        self.attribute_map = {
            'max_task_retry_count': 'maxTaskRetryCount',
            'max_wall_clock_time': 'maxWallClockTime',
            'retention_time': 'retentionTime'
        }

        self._max_task_retry_count = max_task_retry_count
        self._max_wall_clock_time = max_wall_clock_time
        self._retention_time = retention_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaskConstraints':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TaskConstraints of this TaskConstraints.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_task_retry_count(self):
        """Gets the max_task_retry_count of this TaskConstraints.

        The maximum number of times the task may be retried. The Batch service retries a task if its exit code is nonzero.

        :return: The max_task_retry_count of this TaskConstraints.
        :rtype: int
        """
        return self._max_task_retry_count

    @max_task_retry_count.setter
    def max_task_retry_count(self, max_task_retry_count):
        """Sets the max_task_retry_count of this TaskConstraints.

        The maximum number of times the task may be retried. The Batch service retries a task if its exit code is nonzero.

        :param max_task_retry_count: The max_task_retry_count of this TaskConstraints.
        :type max_task_retry_count: int
        """

        self._max_task_retry_count = max_task_retry_count

    @property
    def max_wall_clock_time(self):
        """Gets the max_wall_clock_time of this TaskConstraints.

        The maximum elapsed time that the task may run, measured from the time the task starts. If the task does not complete within the time limit, the Batch service terminates it.

        :return: The max_wall_clock_time of this TaskConstraints.
        :rtype: str
        """
        return self._max_wall_clock_time

    @max_wall_clock_time.setter
    def max_wall_clock_time(self, max_wall_clock_time):
        """Sets the max_wall_clock_time of this TaskConstraints.

        The maximum elapsed time that the task may run, measured from the time the task starts. If the task does not complete within the time limit, the Batch service terminates it.

        :param max_wall_clock_time: The max_wall_clock_time of this TaskConstraints.
        :type max_wall_clock_time: str
        """

        self._max_wall_clock_time = max_wall_clock_time

    @property
    def retention_time(self):
        """Gets the retention_time of this TaskConstraints.

        The minimum time to retain the working directory for the task on the compute node where it ran, from the time it completes execution. After this time, the Batch service may delete the working directory and all its contents. The default is infinite.

        :return: The retention_time of this TaskConstraints.
        :rtype: str
        """
        return self._retention_time

    @retention_time.setter
    def retention_time(self, retention_time):
        """Sets the retention_time of this TaskConstraints.

        The minimum time to retain the working directory for the task on the compute node where it ran, from the time it completes execution. After this time, the Batch service may delete the working directory and all its contents. The default is infinite.

        :param retention_time: The retention_time of this TaskConstraints.
        :type retention_time: str
        """

        self._retention_time = retention_time
