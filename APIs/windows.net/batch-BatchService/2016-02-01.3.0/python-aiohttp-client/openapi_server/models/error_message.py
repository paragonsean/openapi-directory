# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ErrorMessage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, lang: str=None, value: str=None):
        """ErrorMessage - a model defined in OpenAPI

        :param lang: The lang of this ErrorMessage.
        :param value: The value of this ErrorMessage.
        """
        self.openapi_types = {
            'lang': str,
            'value': str
        }

        self.attribute_map = {
            'lang': 'lang',
            'value': 'value'
        }

        self._lang = lang
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ErrorMessage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ErrorMessage of this ErrorMessage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def lang(self):
        """Gets the lang of this ErrorMessage.

        The language code of the error message

        :return: The lang of this ErrorMessage.
        :rtype: str
        """
        return self._lang

    @lang.setter
    def lang(self, lang):
        """Sets the lang of this ErrorMessage.

        The language code of the error message

        :param lang: The lang of this ErrorMessage.
        :type lang: str
        """

        self._lang = lang

    @property
    def value(self):
        """Gets the value of this ErrorMessage.

        The text of the message.

        :return: The value of this ErrorMessage.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this ErrorMessage.

        The text of the message.

        :param value: The value of this ErrorMessage.
        :type value: str
        """

        self._value = value
