# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NodeRemoveParameter(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, node_deallocation_option: str=None, node_list: List[str]=None, resize_timeout: str=None):
        """NodeRemoveParameter - a model defined in OpenAPI

        :param node_deallocation_option: The node_deallocation_option of this NodeRemoveParameter.
        :param node_list: The node_list of this NodeRemoveParameter.
        :param resize_timeout: The resize_timeout of this NodeRemoveParameter.
        """
        self.openapi_types = {
            'node_deallocation_option': str,
            'node_list': List[str],
            'resize_timeout': str
        }

        self.attribute_map = {
            'node_deallocation_option': 'nodeDeallocationOption',
            'node_list': 'nodeList',
            'resize_timeout': 'resizeTimeout'
        }

        self._node_deallocation_option = node_deallocation_option
        self._node_list = node_list
        self._resize_timeout = resize_timeout

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NodeRemoveParameter':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NodeRemoveParameter of this NodeRemoveParameter.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def node_deallocation_option(self):
        """Gets the node_deallocation_option of this NodeRemoveParameter.

        When compute nodes may be removed from the pool.

        :return: The node_deallocation_option of this NodeRemoveParameter.
        :rtype: str
        """
        return self._node_deallocation_option

    @node_deallocation_option.setter
    def node_deallocation_option(self, node_deallocation_option):
        """Sets the node_deallocation_option of this NodeRemoveParameter.

        When compute nodes may be removed from the pool.

        :param node_deallocation_option: The node_deallocation_option of this NodeRemoveParameter.
        :type node_deallocation_option: str
        """
        allowed_values = ["requeue", "terminate", "taskcompletion", "retaineddata"]  # noqa: E501
        if node_deallocation_option not in allowed_values:
            raise ValueError(
                "Invalid value for `node_deallocation_option` ({0}), must be one of {1}"
                .format(node_deallocation_option, allowed_values)
            )

        self._node_deallocation_option = node_deallocation_option

    @property
    def node_list(self):
        """Gets the node_list of this NodeRemoveParameter.

        A list containing the id of the compute nodes to be removed from the specified pool.

        :return: The node_list of this NodeRemoveParameter.
        :rtype: List[str]
        """
        return self._node_list

    @node_list.setter
    def node_list(self, node_list):
        """Sets the node_list of this NodeRemoveParameter.

        A list containing the id of the compute nodes to be removed from the specified pool.

        :param node_list: The node_list of this NodeRemoveParameter.
        :type node_list: List[str]
        """
        if node_list is None:
            raise ValueError("Invalid value for `node_list`, must not be `None`")

        self._node_list = node_list

    @property
    def resize_timeout(self):
        """Gets the resize_timeout of this NodeRemoveParameter.

        The timeout for removal of compute nodes to the pool. The default value is 10 minutes.

        :return: The resize_timeout of this NodeRemoveParameter.
        :rtype: str
        """
        return self._resize_timeout

    @resize_timeout.setter
    def resize_timeout(self, resize_timeout):
        """Sets the resize_timeout of this NodeRemoveParameter.

        The timeout for removal of compute nodes to the pool. The default value is 10 minutes.

        :param resize_timeout: The resize_timeout of this NodeRemoveParameter.
        :type resize_timeout: str
        """

        self._resize_timeout = resize_timeout
