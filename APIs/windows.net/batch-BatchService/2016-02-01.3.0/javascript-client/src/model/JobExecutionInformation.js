/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2016-02-01.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import JobSchedulingError from './JobSchedulingError';

/**
 * The JobExecutionInformation model module.
 * @module model/JobExecutionInformation
 * @version 2016-02-01.3.0
 */
class JobExecutionInformation {
    /**
     * Constructs a new <code>JobExecutionInformation</code>.
     * Contains information about the execution of a job in the Azure Batch service.
     * @alias module:model/JobExecutionInformation
     * @param startTime {Date} The start time of the job.
     */
    constructor(startTime) { 
        
        JobExecutionInformation.initialize(this, startTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, startTime) { 
        obj['startTime'] = startTime;
    }

    /**
     * Constructs a <code>JobExecutionInformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/JobExecutionInformation} obj Optional instance to populate.
     * @return {module:model/JobExecutionInformation} The populated <code>JobExecutionInformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new JobExecutionInformation();

            if (data.hasOwnProperty('endTime')) {
                obj['endTime'] = ApiClient.convertToType(data['endTime'], 'Date');
            }
            if (data.hasOwnProperty('poolId')) {
                obj['poolId'] = ApiClient.convertToType(data['poolId'], 'String');
            }
            if (data.hasOwnProperty('schedulingError')) {
                obj['schedulingError'] = JobSchedulingError.constructFromObject(data['schedulingError']);
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
            if (data.hasOwnProperty('terminateReason')) {
                obj['terminateReason'] = ApiClient.convertToType(data['terminateReason'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>JobExecutionInformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>JobExecutionInformation</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of JobExecutionInformation.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['poolId'] && !(typeof data['poolId'] === 'string' || data['poolId'] instanceof String)) {
            throw new Error("Expected the field `poolId` to be a primitive type in the JSON string but got " + data['poolId']);
        }
        // validate the optional field `schedulingError`
        if (data['schedulingError']) { // data not null
          JobSchedulingError.validateJSON(data['schedulingError']);
        }
        // ensure the json data is a string
        if (data['terminateReason'] && !(typeof data['terminateReason'] === 'string' || data['terminateReason'] instanceof String)) {
            throw new Error("Expected the field `terminateReason` to be a primitive type in the JSON string but got " + data['terminateReason']);
        }

        return true;
    }


}

JobExecutionInformation.RequiredProperties = ["startTime"];

/**
 * The completion time of the job. This property is set only if the job is in the completed state.
 * @member {Date} endTime
 */
JobExecutionInformation.prototype['endTime'] = undefined;

/**
 * The id of the pool to which this job is assigned.
 * @member {String} poolId
 */
JobExecutionInformation.prototype['poolId'] = undefined;

/**
 * @member {module:model/JobSchedulingError} schedulingError
 */
JobExecutionInformation.prototype['schedulingError'] = undefined;

/**
 * The start time of the job.
 * @member {Date} startTime
 */
JobExecutionInformation.prototype['startTime'] = undefined;

/**
 * A string describing the reason the job ended.
 * @member {String} terminateReason
 */
JobExecutionInformation.prototype['terminateReason'] = undefined;






export default JobExecutionInformation;

