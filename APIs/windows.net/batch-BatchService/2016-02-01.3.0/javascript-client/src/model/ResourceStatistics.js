/**
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2016-02-01.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ResourceStatistics model module.
 * @module model/ResourceStatistics
 * @version 2016-02-01.3.0
 */
class ResourceStatistics {
    /**
     * Constructs a new <code>ResourceStatistics</code>.
     * Statistics related to resource consumption by compute nodes in a pool.
     * @alias module:model/ResourceStatistics
     * @param avgCPUPercentage {Number} The average CPU usage across all nodes in the pool (percentage per node).
     * @param avgDiskGiB {Number} The average used disk space in GiB across all nodes in the pool.
     * @param avgMemoryGiB {Number} The average memory usage in GiB across all nodes in the pool.
     * @param diskReadGiB {Number} The total amount of data in GiB of disk reads across all nodes in the pool.
     * @param diskReadIOps {Number} The total number of disk read operations across all nodes in the pool.
     * @param diskWriteGiB {Number} The total amount of data in GiB of disk writes across all nodes in the pool.
     * @param diskWriteIOps {Number} The total number of disk write operations across all nodes in the pool.
     * @param lastUpdateTime {Date} The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
     * @param networkReadGiB {Number} The total amount of data in GiB of network reads across all nodes in the pool.
     * @param networkWriteGiB {Number} The total amount of data in GiB of network writes across all nodes in the pool.
     * @param peakDiskGiB {Number} The peak used disk space in GiB across all nodes in the pool.
     * @param peakMemoryGiB {Number} The peak memory usage in GiB across all nodes in the pool.
     * @param startTime {Date} The start time of the time range covered by the statistics.
     */
    constructor(avgCPUPercentage, avgDiskGiB, avgMemoryGiB, diskReadGiB, diskReadIOps, diskWriteGiB, diskWriteIOps, lastUpdateTime, networkReadGiB, networkWriteGiB, peakDiskGiB, peakMemoryGiB, startTime) { 
        
        ResourceStatistics.initialize(this, avgCPUPercentage, avgDiskGiB, avgMemoryGiB, diskReadGiB, diskReadIOps, diskWriteGiB, diskWriteIOps, lastUpdateTime, networkReadGiB, networkWriteGiB, peakDiskGiB, peakMemoryGiB, startTime);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, avgCPUPercentage, avgDiskGiB, avgMemoryGiB, diskReadGiB, diskReadIOps, diskWriteGiB, diskWriteIOps, lastUpdateTime, networkReadGiB, networkWriteGiB, peakDiskGiB, peakMemoryGiB, startTime) { 
        obj['avgCPUPercentage'] = avgCPUPercentage;
        obj['avgDiskGiB'] = avgDiskGiB;
        obj['avgMemoryGiB'] = avgMemoryGiB;
        obj['diskReadGiB'] = diskReadGiB;
        obj['diskReadIOps'] = diskReadIOps;
        obj['diskWriteGiB'] = diskWriteGiB;
        obj['diskWriteIOps'] = diskWriteIOps;
        obj['lastUpdateTime'] = lastUpdateTime;
        obj['networkReadGiB'] = networkReadGiB;
        obj['networkWriteGiB'] = networkWriteGiB;
        obj['peakDiskGiB'] = peakDiskGiB;
        obj['peakMemoryGiB'] = peakMemoryGiB;
        obj['startTime'] = startTime;
    }

    /**
     * Constructs a <code>ResourceStatistics</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ResourceStatistics} obj Optional instance to populate.
     * @return {module:model/ResourceStatistics} The populated <code>ResourceStatistics</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ResourceStatistics();

            if (data.hasOwnProperty('avgCPUPercentage')) {
                obj['avgCPUPercentage'] = ApiClient.convertToType(data['avgCPUPercentage'], 'Number');
            }
            if (data.hasOwnProperty('avgDiskGiB')) {
                obj['avgDiskGiB'] = ApiClient.convertToType(data['avgDiskGiB'], 'Number');
            }
            if (data.hasOwnProperty('avgMemoryGiB')) {
                obj['avgMemoryGiB'] = ApiClient.convertToType(data['avgMemoryGiB'], 'Number');
            }
            if (data.hasOwnProperty('diskReadGiB')) {
                obj['diskReadGiB'] = ApiClient.convertToType(data['diskReadGiB'], 'Number');
            }
            if (data.hasOwnProperty('diskReadIOps')) {
                obj['diskReadIOps'] = ApiClient.convertToType(data['diskReadIOps'], 'Number');
            }
            if (data.hasOwnProperty('diskWriteGiB')) {
                obj['diskWriteGiB'] = ApiClient.convertToType(data['diskWriteGiB'], 'Number');
            }
            if (data.hasOwnProperty('diskWriteIOps')) {
                obj['diskWriteIOps'] = ApiClient.convertToType(data['diskWriteIOps'], 'Number');
            }
            if (data.hasOwnProperty('lastUpdateTime')) {
                obj['lastUpdateTime'] = ApiClient.convertToType(data['lastUpdateTime'], 'Date');
            }
            if (data.hasOwnProperty('networkReadGiB')) {
                obj['networkReadGiB'] = ApiClient.convertToType(data['networkReadGiB'], 'Number');
            }
            if (data.hasOwnProperty('networkWriteGiB')) {
                obj['networkWriteGiB'] = ApiClient.convertToType(data['networkWriteGiB'], 'Number');
            }
            if (data.hasOwnProperty('peakDiskGiB')) {
                obj['peakDiskGiB'] = ApiClient.convertToType(data['peakDiskGiB'], 'Number');
            }
            if (data.hasOwnProperty('peakMemoryGiB')) {
                obj['peakMemoryGiB'] = ApiClient.convertToType(data['peakMemoryGiB'], 'Number');
            }
            if (data.hasOwnProperty('startTime')) {
                obj['startTime'] = ApiClient.convertToType(data['startTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ResourceStatistics</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ResourceStatistics</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ResourceStatistics.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

ResourceStatistics.RequiredProperties = ["avgCPUPercentage", "avgDiskGiB", "avgMemoryGiB", "diskReadGiB", "diskReadIOps", "diskWriteGiB", "diskWriteIOps", "lastUpdateTime", "networkReadGiB", "networkWriteGiB", "peakDiskGiB", "peakMemoryGiB", "startTime"];

/**
 * The average CPU usage across all nodes in the pool (percentage per node).
 * @member {Number} avgCPUPercentage
 */
ResourceStatistics.prototype['avgCPUPercentage'] = undefined;

/**
 * The average used disk space in GiB across all nodes in the pool.
 * @member {Number} avgDiskGiB
 */
ResourceStatistics.prototype['avgDiskGiB'] = undefined;

/**
 * The average memory usage in GiB across all nodes in the pool.
 * @member {Number} avgMemoryGiB
 */
ResourceStatistics.prototype['avgMemoryGiB'] = undefined;

/**
 * The total amount of data in GiB of disk reads across all nodes in the pool.
 * @member {Number} diskReadGiB
 */
ResourceStatistics.prototype['diskReadGiB'] = undefined;

/**
 * The total number of disk read operations across all nodes in the pool.
 * @member {Number} diskReadIOps
 */
ResourceStatistics.prototype['diskReadIOps'] = undefined;

/**
 * The total amount of data in GiB of disk writes across all nodes in the pool.
 * @member {Number} diskWriteGiB
 */
ResourceStatistics.prototype['diskWriteGiB'] = undefined;

/**
 * The total number of disk write operations across all nodes in the pool.
 * @member {Number} diskWriteIOps
 */
ResourceStatistics.prototype['diskWriteIOps'] = undefined;

/**
 * The time at which the statistics were last updated. All statistics are limited to the range between startTime and lastUpdateTime.
 * @member {Date} lastUpdateTime
 */
ResourceStatistics.prototype['lastUpdateTime'] = undefined;

/**
 * The total amount of data in GiB of network reads across all nodes in the pool.
 * @member {Number} networkReadGiB
 */
ResourceStatistics.prototype['networkReadGiB'] = undefined;

/**
 * The total amount of data in GiB of network writes across all nodes in the pool.
 * @member {Number} networkWriteGiB
 */
ResourceStatistics.prototype['networkWriteGiB'] = undefined;

/**
 * The peak used disk space in GiB across all nodes in the pool.
 * @member {Number} peakDiskGiB
 */
ResourceStatistics.prototype['peakDiskGiB'] = undefined;

/**
 * The peak memory usage in GiB across all nodes in the pool.
 * @member {Number} peakMemoryGiB
 */
ResourceStatistics.prototype['peakMemoryGiB'] = undefined;

/**
 * The start time of the time range covered by the statistics.
 * @member {Date} startTime
 */
ResourceStatistics.prototype['startTime'] = undefined;






export default ResourceStatistics;

