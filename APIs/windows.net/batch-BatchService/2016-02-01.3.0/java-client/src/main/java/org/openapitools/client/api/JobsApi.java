/*
 * BatchService
 * A client for issuing REST requests to the Azure Batch service.
 *
 * The version of the OpenAPI document: 2016-02-01.3.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.BatchError;
import org.openapitools.client.model.CloudJob;
import org.openapitools.client.model.CloudJobListPreparationAndReleaseTaskStatusResult;
import org.openapitools.client.model.CloudJobListResult;
import org.openapitools.client.model.JobAddParameter;
import org.openapitools.client.model.JobDisableParameter;
import org.openapitools.client.model.JobPatchParameter;
import org.openapitools.client.model.JobStatistics;
import org.openapitools.client.model.JobTerminateParameter;
import org.openapitools.client.model.JobUpdateParameter;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class JobsApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public JobsApi() {
        this(Configuration.getDefaultApiClient());
    }

    public JobsApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for jobAdd
     * @param apiVersion Client API Version. (required)
     * @param jobAddParameter The job to be added. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobAddCall(String apiVersion, JobAddParameter jobAddParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = jobAddParameter;

        // create path and map variables
        String localVarPath = "/jobs";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json; odata=minimalmetadata"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobAddValidateBeforeCall(String apiVersion, JobAddParameter jobAddParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobAdd(Async)");
        }

        // verify the required parameter 'jobAddParameter' is set
        if (jobAddParameter == null) {
            throw new ApiException("Missing the required parameter 'jobAddParameter' when calling jobAdd(Async)");
        }

        return jobAddCall(apiVersion, jobAddParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);

    }

    /**
     * 
     * Adds a job to the specified account.
     * @param apiVersion Client API Version. (required)
     * @param jobAddParameter The job to be added. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public void jobAdd(String apiVersion, JobAddParameter jobAddParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        jobAddWithHttpInfo(apiVersion, jobAddParameter, timeout, clientRequestId, returnClientRequestId, ocpDate);
    }

    /**
     * 
     * Adds a job to the specified account.
     * @param apiVersion Client API Version. (required)
     * @param jobAddParameter The job to be added. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> jobAddWithHttpInfo(String apiVersion, JobAddParameter jobAddParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        okhttp3.Call localVarCall = jobAddValidateBeforeCall(apiVersion, jobAddParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Adds a job to the specified account.
     * @param apiVersion Client API Version. (required)
     * @param jobAddParameter The job to be added. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 201 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobAddAsync(String apiVersion, JobAddParameter jobAddParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobAddValidateBeforeCall(apiVersion, jobAddParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobDelete
     * @param jobId The id of the job to delete. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td>  </td><td>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobDeleteCall(String jobId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        if (ifMatch != null) {
            localVarHeaderParams.put("If-Match", localVarApiClient.parameterToString(ifMatch));
        }

        if (ifNoneMatch != null) {
            localVarHeaderParams.put("If-None-Match", localVarApiClient.parameterToString(ifNoneMatch));
        }

        if (ifModifiedSince != null) {
            localVarHeaderParams.put("If-Modified-Since", localVarApiClient.parameterToString(ifModifiedSince));
        }

        if (ifUnmodifiedSince != null) {
            localVarHeaderParams.put("If-Unmodified-Since", localVarApiClient.parameterToString(ifUnmodifiedSince));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobDeleteValidateBeforeCall(String jobId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling jobDelete(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobDelete(Async)");
        }

        return jobDeleteCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);

    }

    /**
     * 
     * Deletes a job.
     * @param jobId The id of the job to delete. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td>  </td><td>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public void jobDelete(String jobId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        jobDeleteWithHttpInfo(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince);
    }

    /**
     * 
     * Deletes a job.
     * @param jobId The id of the job to delete. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td>  </td><td>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> jobDeleteWithHttpInfo(String jobId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        okhttp3.Call localVarCall = jobDeleteValidateBeforeCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Deletes a job.
     * @param jobId The id of the job to delete. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td>  </td><td>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobDeleteAsync(String jobId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobDeleteValidateBeforeCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobDisable
     * @param jobId The id of the job to disable. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobDisableParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobDisableCall(String jobId, String apiVersion, JobDisableParameter jobDisableParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = jobDisableParameter;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}/disable"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        if (ifMatch != null) {
            localVarHeaderParams.put("If-Match", localVarApiClient.parameterToString(ifMatch));
        }

        if (ifNoneMatch != null) {
            localVarHeaderParams.put("If-None-Match", localVarApiClient.parameterToString(ifNoneMatch));
        }

        if (ifModifiedSince != null) {
            localVarHeaderParams.put("If-Modified-Since", localVarApiClient.parameterToString(ifModifiedSince));
        }

        if (ifUnmodifiedSince != null) {
            localVarHeaderParams.put("If-Unmodified-Since", localVarApiClient.parameterToString(ifUnmodifiedSince));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json; odata=minimalmetadata"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobDisableValidateBeforeCall(String jobId, String apiVersion, JobDisableParameter jobDisableParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling jobDisable(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobDisable(Async)");
        }

        // verify the required parameter 'jobDisableParameter' is set
        if (jobDisableParameter == null) {
            throw new ApiException("Missing the required parameter 'jobDisableParameter' when calling jobDisable(Async)");
        }

        return jobDisableCall(jobId, apiVersion, jobDisableParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);

    }

    /**
     * 
     * Disables the specified job, preventing new tasks from running.
     * @param jobId The id of the job to disable. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobDisableParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public void jobDisable(String jobId, String apiVersion, JobDisableParameter jobDisableParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        jobDisableWithHttpInfo(jobId, apiVersion, jobDisableParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince);
    }

    /**
     * 
     * Disables the specified job, preventing new tasks from running.
     * @param jobId The id of the job to disable. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobDisableParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> jobDisableWithHttpInfo(String jobId, String apiVersion, JobDisableParameter jobDisableParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        okhttp3.Call localVarCall = jobDisableValidateBeforeCall(jobId, apiVersion, jobDisableParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Disables the specified job, preventing new tasks from running.
     * @param jobId The id of the job to disable. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobDisableParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobDisableAsync(String jobId, String apiVersion, JobDisableParameter jobDisableParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobDisableValidateBeforeCall(jobId, apiVersion, jobDisableParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobEnable
     * @param jobId The id of the job to enable. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobEnableCall(String jobId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}/enable"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        if (ifMatch != null) {
            localVarHeaderParams.put("If-Match", localVarApiClient.parameterToString(ifMatch));
        }

        if (ifNoneMatch != null) {
            localVarHeaderParams.put("If-None-Match", localVarApiClient.parameterToString(ifNoneMatch));
        }

        if (ifModifiedSince != null) {
            localVarHeaderParams.put("If-Modified-Since", localVarApiClient.parameterToString(ifModifiedSince));
        }

        if (ifUnmodifiedSince != null) {
            localVarHeaderParams.put("If-Unmodified-Since", localVarApiClient.parameterToString(ifUnmodifiedSince));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobEnableValidateBeforeCall(String jobId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling jobEnable(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobEnable(Async)");
        }

        return jobEnableCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);

    }

    /**
     * 
     * Enables the specified job, allowing new tasks to run.
     * @param jobId The id of the job to enable. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public void jobEnable(String jobId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        jobEnableWithHttpInfo(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince);
    }

    /**
     * 
     * Enables the specified job, allowing new tasks to run.
     * @param jobId The id of the job to enable. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> jobEnableWithHttpInfo(String jobId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        okhttp3.Call localVarCall = jobEnableValidateBeforeCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Enables the specified job, allowing new tasks to run.
     * @param jobId The id of the job to enable. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobEnableAsync(String jobId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobEnableValidateBeforeCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobGet
     * @param jobId The id of the job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobGetCall(String jobId, String apiVersion, String $select, String $expand, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($select != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$select", $select));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobGetValidateBeforeCall(String jobId, String apiVersion, String $select, String $expand, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling jobGet(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobGet(Async)");
        }

        return jobGetCall(jobId, apiVersion, $select, $expand, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);

    }

    /**
     * 
     * Gets information about the specified job.
     * @param jobId The id of the job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @return CloudJob
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public CloudJob jobGet(String jobId, String apiVersion, String $select, String $expand, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        ApiResponse<CloudJob> localVarResp = jobGetWithHttpInfo(jobId, apiVersion, $select, $expand, timeout, clientRequestId, returnClientRequestId, ocpDate);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets information about the specified job.
     * @param jobId The id of the job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @return ApiResponse&lt;CloudJob&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CloudJob> jobGetWithHttpInfo(String jobId, String apiVersion, String $select, String $expand, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        okhttp3.Call localVarCall = jobGetValidateBeforeCall(jobId, apiVersion, $select, $expand, timeout, clientRequestId, returnClientRequestId, ocpDate, null);
        Type localVarReturnType = new TypeToken<CloudJob>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets information about the specified job.
     * @param jobId The id of the job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobGetAsync(String jobId, String apiVersion, String $select, String $expand, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback<CloudJob> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobGetValidateBeforeCall(jobId, apiVersion, $select, $expand, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);
        Type localVarReturnType = new TypeToken<CloudJob>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobGetAllJobsLifetimeStatistics
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobGetAllJobsLifetimeStatisticsCall(String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/lifetimejobstats";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobGetAllJobsLifetimeStatisticsValidateBeforeCall(String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobGetAllJobsLifetimeStatistics(Async)");
        }

        return jobGetAllJobsLifetimeStatisticsCall(apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);

    }

    /**
     * 
     * Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @return JobStatistics
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public JobStatistics jobGetAllJobsLifetimeStatistics(String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        ApiResponse<JobStatistics> localVarResp = jobGetAllJobsLifetimeStatisticsWithHttpInfo(apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate);
        return localVarResp.getData();
    }

    /**
     * 
     * Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @return ApiResponse&lt;JobStatistics&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<JobStatistics> jobGetAllJobsLifetimeStatisticsWithHttpInfo(String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        okhttp3.Call localVarCall = jobGetAllJobsLifetimeStatisticsValidateBeforeCall(apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, null);
        Type localVarReturnType = new TypeToken<JobStatistics>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Gets lifetime summary statistics for all of the jobs in the specified account. Statistics are aggregated across all jobs that have ever existed in the account, from account creation to the last update time of the statistics.
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobGetAllJobsLifetimeStatisticsAsync(String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback<JobStatistics> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobGetAllJobsLifetimeStatisticsValidateBeforeCall(apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);
        Type localVarReturnType = new TypeToken<JobStatistics>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobList
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. (optional)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param maxresults The maximum number of items to return in the response. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobListCall(String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/jobs";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if ($select != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$select", $select));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if (maxresults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxresults", maxresults));
        }

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobListValidateBeforeCall(String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobList(Async)");
        }

        return jobListCall(apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);

    }

    /**
     * 
     * Lists all of the jobs in the specified account.
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. (optional)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param maxresults The maximum number of items to return in the response. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @return CloudJobListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public CloudJobListResult jobList(String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        ApiResponse<CloudJobListResult> localVarResp = jobListWithHttpInfo(apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists all of the jobs in the specified account.
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. (optional)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param maxresults The maximum number of items to return in the response. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @return ApiResponse&lt;CloudJobListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CloudJobListResult> jobListWithHttpInfo(String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        okhttp3.Call localVarCall = jobListValidateBeforeCall(apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, null);
        Type localVarReturnType = new TypeToken<CloudJobListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists all of the jobs in the specified account.
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. (optional)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param maxresults The maximum number of items to return in the response. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobListAsync(String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback<CloudJobListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobListValidateBeforeCall(apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);
        Type localVarReturnType = new TypeToken<CloudJobListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobListFromJobSchedule
     * @param jobScheduleId The id of the job schedule from which you want to get a list of jobs. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. (optional)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param maxresults The maximum number of items to return in the response. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobListFromJobScheduleCall(String jobScheduleId, String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/jobschedules/{jobScheduleId}/jobs"
            .replace("{" + "jobScheduleId" + "}", localVarApiClient.escapeString(jobScheduleId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if ($select != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$select", $select));
        }

        if ($expand != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$expand", $expand));
        }

        if (maxresults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxresults", maxresults));
        }

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobListFromJobScheduleValidateBeforeCall(String jobScheduleId, String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobScheduleId' is set
        if (jobScheduleId == null) {
            throw new ApiException("Missing the required parameter 'jobScheduleId' when calling jobListFromJobSchedule(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobListFromJobSchedule(Async)");
        }

        return jobListFromJobScheduleCall(jobScheduleId, apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);

    }

    /**
     * 
     * Lists the jobs that have been created under the specified job schedule.
     * @param jobScheduleId The id of the job schedule from which you want to get a list of jobs. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. (optional)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param maxresults The maximum number of items to return in the response. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @return CloudJobListResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public CloudJobListResult jobListFromJobSchedule(String jobScheduleId, String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        ApiResponse<CloudJobListResult> localVarResp = jobListFromJobScheduleWithHttpInfo(jobScheduleId, apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the jobs that have been created under the specified job schedule.
     * @param jobScheduleId The id of the job schedule from which you want to get a list of jobs. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. (optional)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param maxresults The maximum number of items to return in the response. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @return ApiResponse&lt;CloudJobListResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CloudJobListResult> jobListFromJobScheduleWithHttpInfo(String jobScheduleId, String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        okhttp3.Call localVarCall = jobListFromJobScheduleValidateBeforeCall(jobScheduleId, apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, null);
        Type localVarReturnType = new TypeToken<CloudJobListResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the jobs that have been created under the specified job schedule.
     * @param jobScheduleId The id of the job schedule from which you want to get a list of jobs. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. (optional)
     * @param $select An OData $select clause. (optional)
     * @param $expand An OData $expand clause. (optional)
     * @param maxresults The maximum number of items to return in the response. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobListFromJobScheduleAsync(String jobScheduleId, String apiVersion, String $filter, String $select, String $expand, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback<CloudJobListResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobListFromJobScheduleValidateBeforeCall(jobScheduleId, apiVersion, $filter, $select, $expand, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);
        Type localVarReturnType = new TypeToken<CloudJobListResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobListPreparationAndReleaseTaskStatus
     * @param jobId The id of the job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. (optional)
     * @param $select An OData $select clause. (optional)
     * @param maxresults The maximum number of items to return in the response. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobListPreparationAndReleaseTaskStatusCall(String jobId, String apiVersion, String $filter, String $select, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}/jobpreparationandreleasetaskstatus"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if ($filter != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$filter", $filter));
        }

        if ($select != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("$select", $select));
        }

        if (maxresults != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("maxresults", maxresults));
        }

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobListPreparationAndReleaseTaskStatusValidateBeforeCall(String jobId, String apiVersion, String $filter, String $select, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling jobListPreparationAndReleaseTaskStatus(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobListPreparationAndReleaseTaskStatus(Async)");
        }

        return jobListPreparationAndReleaseTaskStatusCall(jobId, apiVersion, $filter, $select, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);

    }

    /**
     * 
     * Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run.
     * @param jobId The id of the job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. (optional)
     * @param $select An OData $select clause. (optional)
     * @param maxresults The maximum number of items to return in the response. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @return CloudJobListPreparationAndReleaseTaskStatusResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public CloudJobListPreparationAndReleaseTaskStatusResult jobListPreparationAndReleaseTaskStatus(String jobId, String apiVersion, String $filter, String $select, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        ApiResponse<CloudJobListPreparationAndReleaseTaskStatusResult> localVarResp = jobListPreparationAndReleaseTaskStatusWithHttpInfo(jobId, apiVersion, $filter, $select, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate);
        return localVarResp.getData();
    }

    /**
     * 
     * Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run.
     * @param jobId The id of the job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. (optional)
     * @param $select An OData $select clause. (optional)
     * @param maxresults The maximum number of items to return in the response. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @return ApiResponse&lt;CloudJobListPreparationAndReleaseTaskStatusResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CloudJobListPreparationAndReleaseTaskStatusResult> jobListPreparationAndReleaseTaskStatusWithHttpInfo(String jobId, String apiVersion, String $filter, String $select, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate) throws ApiException {
        okhttp3.Call localVarCall = jobListPreparationAndReleaseTaskStatusValidateBeforeCall(jobId, apiVersion, $filter, $select, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, null);
        Type localVarReturnType = new TypeToken<CloudJobListPreparationAndReleaseTaskStatusResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     *  (asynchronously)
     * Lists the execution status of the Job Preparation and Job Release task for the specified job across the compute nodes where the job has run.
     * @param jobId The id of the job. (required)
     * @param apiVersion Client API Version. (required)
     * @param $filter An OData $filter clause. (optional)
     * @param $select An OData $select clause. (optional)
     * @param maxresults The maximum number of items to return in the response. (optional)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobListPreparationAndReleaseTaskStatusAsync(String jobId, String apiVersion, String $filter, String $select, Integer maxresults, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, final ApiCallback<CloudJobListPreparationAndReleaseTaskStatusResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobListPreparationAndReleaseTaskStatusValidateBeforeCall(jobId, apiVersion, $filter, $select, maxresults, timeout, clientRequestId, returnClientRequestId, ocpDate, _callback);
        Type localVarReturnType = new TypeToken<CloudJobListPreparationAndReleaseTaskStatusResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobPatch
     * @param jobId The id of the job whose properties you want to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobPatchParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobPatchCall(String jobId, String apiVersion, JobPatchParameter jobPatchParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = jobPatchParameter;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        if (ifMatch != null) {
            localVarHeaderParams.put("If-Match", localVarApiClient.parameterToString(ifMatch));
        }

        if (ifNoneMatch != null) {
            localVarHeaderParams.put("If-None-Match", localVarApiClient.parameterToString(ifNoneMatch));
        }

        if (ifModifiedSince != null) {
            localVarHeaderParams.put("If-Modified-Since", localVarApiClient.parameterToString(ifModifiedSince));
        }

        if (ifUnmodifiedSince != null) {
            localVarHeaderParams.put("If-Unmodified-Since", localVarApiClient.parameterToString(ifUnmodifiedSince));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json; odata=minimalmetadata"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PATCH", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobPatchValidateBeforeCall(String jobId, String apiVersion, JobPatchParameter jobPatchParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling jobPatch(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobPatch(Async)");
        }

        // verify the required parameter 'jobPatchParameter' is set
        if (jobPatchParameter == null) {
            throw new ApiException("Missing the required parameter 'jobPatchParameter' when calling jobPatch(Async)");
        }

        return jobPatchCall(jobId, apiVersion, jobPatchParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);

    }

    /**
     * 
     * Updates the properties of a job.
     * @param jobId The id of the job whose properties you want to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobPatchParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public void jobPatch(String jobId, String apiVersion, JobPatchParameter jobPatchParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        jobPatchWithHttpInfo(jobId, apiVersion, jobPatchParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince);
    }

    /**
     * 
     * Updates the properties of a job.
     * @param jobId The id of the job whose properties you want to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobPatchParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> jobPatchWithHttpInfo(String jobId, String apiVersion, JobPatchParameter jobPatchParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        okhttp3.Call localVarCall = jobPatchValidateBeforeCall(jobId, apiVersion, jobPatchParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Updates the properties of a job.
     * @param jobId The id of the job whose properties you want to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobPatchParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobPatchAsync(String jobId, String apiVersion, JobPatchParameter jobPatchParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobPatchValidateBeforeCall(jobId, apiVersion, jobPatchParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobTerminate
     * @param jobId The id of the job to terminate. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param jobTerminateParameter The parameters for the request. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobTerminateCall(String jobId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, JobTerminateParameter jobTerminateParameter, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = jobTerminateParameter;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}/terminate"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        if (ifMatch != null) {
            localVarHeaderParams.put("If-Match", localVarApiClient.parameterToString(ifMatch));
        }

        if (ifNoneMatch != null) {
            localVarHeaderParams.put("If-None-Match", localVarApiClient.parameterToString(ifNoneMatch));
        }

        if (ifModifiedSince != null) {
            localVarHeaderParams.put("If-Modified-Since", localVarApiClient.parameterToString(ifModifiedSince));
        }

        if (ifUnmodifiedSince != null) {
            localVarHeaderParams.put("If-Unmodified-Since", localVarApiClient.parameterToString(ifUnmodifiedSince));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json; odata=minimalmetadata"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobTerminateValidateBeforeCall(String jobId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, JobTerminateParameter jobTerminateParameter, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling jobTerminate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobTerminate(Async)");
        }

        return jobTerminateCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, jobTerminateParameter, _callback);

    }

    /**
     * 
     * Terminates the specified job, marking it as completed.
     * @param jobId The id of the job to terminate. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param jobTerminateParameter The parameters for the request. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public void jobTerminate(String jobId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, JobTerminateParameter jobTerminateParameter) throws ApiException {
        jobTerminateWithHttpInfo(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, jobTerminateParameter);
    }

    /**
     * 
     * Terminates the specified job, marking it as completed.
     * @param jobId The id of the job to terminate. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param jobTerminateParameter The parameters for the request. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> jobTerminateWithHttpInfo(String jobId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, JobTerminateParameter jobTerminateParameter) throws ApiException {
        okhttp3.Call localVarCall = jobTerminateValidateBeforeCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, jobTerminateParameter, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Terminates the specified job, marking it as completed.
     * @param jobId The id of the job to terminate. (required)
     * @param apiVersion Client API Version. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param jobTerminateParameter The parameters for the request. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 202 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobTerminateAsync(String jobId, String apiVersion, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, JobTerminateParameter jobTerminateParameter, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobTerminateValidateBeforeCall(jobId, apiVersion, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, jobTerminateParameter, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for jobUpdate
     * @param jobId The id of the job whose properties you want to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobUpdateParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobUpdateCall(String jobId, String apiVersion, JobUpdateParameter jobUpdateParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = jobUpdateParameter;

        // create path and map variables
        String localVarPath = "/jobs/{jobId}"
            .replace("{" + "jobId" + "}", localVarApiClient.escapeString(jobId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (timeout != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("timeout", timeout));
        }

        if (apiVersion != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("api-version", apiVersion));
        }

        if (clientRequestId != null) {
            localVarHeaderParams.put("client-request-id", localVarApiClient.parameterToString(clientRequestId));
        }

        if (returnClientRequestId != null) {
            localVarHeaderParams.put("return-client-request-id", localVarApiClient.parameterToString(returnClientRequestId));
        }

        if (ocpDate != null) {
            localVarHeaderParams.put("ocp-date", localVarApiClient.parameterToString(ocpDate));
        }

        if (ifMatch != null) {
            localVarHeaderParams.put("If-Match", localVarApiClient.parameterToString(ifMatch));
        }

        if (ifNoneMatch != null) {
            localVarHeaderParams.put("If-None-Match", localVarApiClient.parameterToString(ifNoneMatch));
        }

        if (ifModifiedSince != null) {
            localVarHeaderParams.put("If-Modified-Since", localVarApiClient.parameterToString(ifModifiedSince));
        }

        if (ifUnmodifiedSince != null) {
            localVarHeaderParams.put("If-Unmodified-Since", localVarApiClient.parameterToString(ifUnmodifiedSince));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json; odata=minimalmetadata"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call jobUpdateValidateBeforeCall(String jobId, String apiVersion, JobUpdateParameter jobUpdateParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'jobId' is set
        if (jobId == null) {
            throw new ApiException("Missing the required parameter 'jobId' when calling jobUpdate(Async)");
        }

        // verify the required parameter 'apiVersion' is set
        if (apiVersion == null) {
            throw new ApiException("Missing the required parameter 'apiVersion' when calling jobUpdate(Async)");
        }

        // verify the required parameter 'jobUpdateParameter' is set
        if (jobUpdateParameter == null) {
            throw new ApiException("Missing the required parameter 'jobUpdateParameter' when calling jobUpdate(Async)");
        }

        return jobUpdateCall(jobId, apiVersion, jobUpdateParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);

    }

    /**
     * 
     * Updates the properties of a job.
     * @param jobId The id of the job whose properties you want to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobUpdateParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public void jobUpdate(String jobId, String apiVersion, JobUpdateParameter jobUpdateParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        jobUpdateWithHttpInfo(jobId, apiVersion, jobUpdateParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince);
    }

    /**
     * 
     * Updates the properties of a job.
     * @param jobId The id of the job whose properties you want to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobUpdateParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> jobUpdateWithHttpInfo(String jobId, String apiVersion, JobUpdateParameter jobUpdateParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince) throws ApiException {
        okhttp3.Call localVarCall = jobUpdateValidateBeforeCall(jobId, apiVersion, jobUpdateParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     *  (asynchronously)
     * Updates the properties of a job.
     * @param jobId The id of the job whose properties you want to update. (required)
     * @param apiVersion Client API Version. (required)
     * @param jobUpdateParameter The parameters for the request. (required)
     * @param timeout The maximum time that the server can spend processing the request, in seconds. The default is 30 seconds. (optional, default to 30)
     * @param clientRequestId The caller-generated request identity, in the form of a GUID with no decoration such as curly braces, e.g. 9C4D50EE-2D56-4CD3-8152-34347DC9F2B0. (optional)
     * @param returnClientRequestId Whether the server should return the client-request-id identifier in the response. (optional)
     * @param ocpDate The time the request was issued. If not specified, this header will be automatically populated with the current system clock time. (optional)
     * @param ifMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag is an exact match as specified. (optional)
     * @param ifNoneMatch An ETag is specified. Specify this header to perform the operation only if the resource&#39;s ETag does not match the specified ETag. (optional)
     * @param ifModifiedSince Specify this header to perform the operation only if the resource has been modified since the specified date/time. (optional)
     * @param ifUnmodifiedSince Specify this header to perform the operation only if the resource has not been modified since the specified date/time. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td>  </td><td>  * DataServiceId - The OData id of the resource to which the request applied. <br>  * ETag - The content of the ETag HTTP response header. <br>  * Last-Modified - The content of the Last-Modified HTTP response header. <br>  * client-request-id - The ClientRequestId provided by the client during the request, if present and requested to be returned. <br>  * request-id - The value that uniquely identifies a request. <br>  </td></tr>
        <tr><td> 0 </td><td> The error from the Batch service. </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call jobUpdateAsync(String jobId, String apiVersion, JobUpdateParameter jobUpdateParameter, Integer timeout, String clientRequestId, Boolean returnClientRequestId, String ocpDate, String ifMatch, String ifNoneMatch, String ifModifiedSince, String ifUnmodifiedSince, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = jobUpdateValidateBeforeCall(jobId, apiVersion, jobUpdateParameter, timeout, clientRequestId, returnClientRequestId, ocpDate, ifMatch, ifNoneMatch, ifModifiedSince, ifUnmodifiedSince, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
}
