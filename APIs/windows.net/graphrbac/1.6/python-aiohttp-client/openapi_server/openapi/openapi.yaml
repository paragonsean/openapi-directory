openapi: 3.0.0
info:
  description: The Graph RBAC Management Client
  title: GraphRbacManagementClient
  version: "1.6"
  x-apisguru-categories:
  - cloud
  x-logo:
    url: https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png
  x-origin:
  - format: openapi
    url: https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/specification/graphrbac/data-plane/Microsoft.GraphRbac/stable/1.6/graphrbac.json
    version: "3.0"
  x-providerName: windows.net
  x-serviceName: graphrbac
servers:
- url: https://graph.windows.net
security:
- azure_auth:
  - user_impersonation
paths:
  /{tenantID}/applications:
    get:
      description: Lists applications by filter parameters.
      operationId: applications_list
      parameters:
      - description: The filters to apply to the operation.
        explode: true
        in: query
        name: $filter
        required: false
        schema:
          type: string
        style: form
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ApplicationListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - Application
      x-ms-odata: '#/components/schemas/Application'
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Applications_ListNext
      x-openapi-router-controller: openapi_server.controllers.application_controller
    post:
      description: Create a new application.
      operationId: applications_create
      parameters:
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationCreateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/ApplicationCreateParameters'
        description: The parameters for creating an application.
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
            text/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: The application was created successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - Application
      x-openapi-router-controller: openapi_server.controllers.application_controller
      x-codegen-request-body-name: body
  /{tenantID}/applications/{applicationObjectId}:
    delete:
      description: Delete an application.
      operationId: applications_delete
      parameters:
      - description: Application object ID.
        explode: false
        in: path
        name: applicationObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - Application
      x-openapi-router-controller: openapi_server.controllers.application_controller
    get:
      description: Get an application by object ID.
      operationId: applications_get
      parameters:
      - description: Application object ID.
        explode: false
        in: path
        name: applicationObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
            text/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - Application
      x-openapi-router-controller: openapi_server.controllers.application_controller
    patch:
      description: Update an existing application.
      operationId: applications_patch
      parameters:
      - description: Application object ID.
        explode: false
        in: path
        name: applicationObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationUpdateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/ApplicationUpdateParameters'
        description: Parameters to update an existing application.
        required: true
        x-body-name: body
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - Application
      x-openapi-router-controller: openapi_server.controllers.application_controller
      x-codegen-request-body-name: body
  /{tenantID}/applications/{applicationObjectId}/$links/owners:
    post:
      description: Add an owner to an application.
      operationId: applications_add_owner
      parameters:
      - description: The object ID of the application to which to add the owner.
        explode: false
        in: path
        name: applicationObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        $ref: '#/components/requestBodies/AddOwnerParameters'
        x-body-name: body
      responses:
        "204":
          description: No Content. Indicates success. No response body is returned.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - ApplicationOwners
      x-openapi-router-controller: openapi_server.controllers.application_owners_controller
      x-codegen-request-body-name: body
  /{tenantID}/applications/{applicationObjectId}/$links/owners/{ownerObjectId}:
    delete:
      description: Remove a member from owners.
      operationId: applications_remove_owner
      parameters:
      - description: The object ID of the application from which to remove the owner.
        explode: false
        in: path
        name: applicationObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Owner object id
        explode: false
        in: path
        name: ownerObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "204":
          description: No Content. Indicates success. No response body is returned.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - ApplicationOwners
      x-openapi-router-controller: openapi_server.controllers.application_owners_controller
  /{tenantID}/applications/{applicationObjectId}/keyCredentials:
    get:
      description: Get the keyCredentials associated with an application.
      operationId: applications_list_key_credentials
      parameters:
      - description: Application object ID.
        explode: false
        in: path
        name: applicationObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyCredentialListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyCredentialListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - ApplicationKeyCredentials
      x-ms-pageable:
        nextLinkName:
          $ref: "#/paths/~1{tenantID}~1domains/get/x-ms-pageable/nextLinkName"
      x-openapi-router-controller: openapi_server.controllers.application_key_credentials_controller
    patch:
      description: Update the keyCredentials associated with an application.
      operationId: applications_update_key_credentials
      parameters:
      - description: Application object ID.
        explode: false
        in: path
        name: applicationObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyCredentialsUpdateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyCredentialsUpdateParameters'
        description: Parameters to update the keyCredentials of an existing application.
        required: true
        x-body-name: body
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - ApplicationKeyCredentials
      x-openapi-router-controller: openapi_server.controllers.application_key_credentials_controller
      x-codegen-request-body-name: body
  /{tenantID}/applications/{applicationObjectId}/owners:
    get:
      description: The owners are a set of non-admin users who are allowed to modify
        this object.
      operationId: applications_list_owners
      parameters:
      - description: The object ID of the application for which to get owners.
        explode: false
        in: path
        name: applicationObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryObjectListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/DirectoryObjectListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      summary: Directory objects that are owners of the application.
      tags:
      - ApplicationOwners
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-openapi-router-controller: openapi_server.controllers.application_owners_controller
  /{tenantID}/applications/{applicationObjectId}/passwordCredentials:
    get:
      description: Get the passwordCredentials associated with an application.
      operationId: applications_list_password_credentials
      parameters:
      - description: Application object ID.
        explode: false
        in: path
        name: applicationObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordCredentialListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PasswordCredentialListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - ApplicationPasswordCredentials
      x-ms-pageable:
        nextLinkName:
          $ref: "#/paths/~1{tenantID}~1domains/get/x-ms-pageable/nextLinkName"
      x-openapi-router-controller: openapi_server.controllers.application_password_credentials_controller
    patch:
      description: Update passwordCredentials associated with an application.
      operationId: applications_update_password_credentials
      parameters:
      - description: Application object ID.
        explode: false
        in: path
        name: applicationObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordCredentialsUpdateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/PasswordCredentialsUpdateParameters'
        description: Parameters to update passwordCredentials of an existing application.
        required: true
        x-body-name: body
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - ApplicationPasswordCredentials
      x-openapi-router-controller: openapi_server.controllers.application_password_credentials_controller
      x-codegen-request-body-name: body
  /{tenantID}/deletedApplications:
    get:
      description: Gets a list of deleted applications in the directory.
      operationId: deleted_applications_list
      parameters:
      - description: The filter to apply to the operation.
        explode: true
        in: query
        name: $filter
        required: false
        schema:
          type: string
        style: form
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ApplicationListResult'
          description: The applications were retrieved successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - deletedApplications
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: DeletedApplications_ListNext
      x-openapi-router-controller: openapi_server.controllers.deleted_applications_controller
  /{tenantID}/deletedApplications/{applicationObjectId}:
    delete:
      description: Hard-delete an application.
      operationId: deleted_applications_hard_delete
      parameters:
      - description: Application object ID.
        explode: false
        in: path
        name: applicationObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - Application
      x-openapi-router-controller: openapi_server.controllers.application_controller
  /{tenantID}/deletedApplications/{objectId}/restore:
    post:
      description: Restores the deleted application in the directory.
      operationId: deleted_applications_restore
      parameters:
      - description: Application object ID.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
            text/json:
              schema:
                $ref: '#/components/schemas/Application'
          description: The application was restored successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - deletedApplications
      x-openapi-router-controller: openapi_server.controllers.deleted_applications_controller
  /{tenantID}/domains:
    get:
      description: Gets a list of domains for the current tenant.
      operationId: domains_list
      parameters:
      - description: The filter to apply to the operation.
        explode: true
        in: query
        name: $filter
        required: false
        schema:
          type: string
        style: form
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DomainListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/DomainListResult'
          description: OK. The operation was successful.
      tags:
      - Domain
      x-ms-odata: '#/components/schemas/User'
      x-ms-pageable:
        nextLinkName: {}
      x-openapi-router-controller: openapi_server.controllers.domain_controller
  /{tenantID}/domains/{domainName}:
    get:
      description: Gets a specific domain in the current tenant.
      operationId: domains_get
      parameters:
      - description: name of the domain.
        explode: false
        in: path
        name: domainName
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Domain'
            text/json:
              schema:
                $ref: '#/components/schemas/Domain'
          description: OK. The operation was successful.
      tags:
      - Domain
      x-openapi-router-controller: openapi_server.controllers.domain_controller
  /{tenantID}/getObjectsByObjectIds:
    post:
      description: "Gets the directory objects specified in a list of object IDs.\
        \ You can also specify which resource collections (users, groups, etc.) should\
        \ be searched by specifying the optional types parameter."
      operationId: objects_get_objects_by_object_ids
      parameters:
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetObjectsParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/GetObjectsParameters'
        description: Objects filtering parameters.
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryObjectListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/DirectoryObjectListResult'
          description: OK. The operation was successful.
      tags:
      - Objects
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Objects_GetObjectsByObjectIdsNext
      x-openapi-router-controller: openapi_server.controllers.objects_controller
      x-codegen-request-body-name: body
  /{tenantID}/groups:
    get:
      description: Gets list of groups for the current tenant.
      operationId: groups_list
      parameters:
      - description: The filter to apply to the operation.
        explode: true
        in: query
        name: $filter
        required: false
        schema:
          type: string
        style: form
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - Group
      x-ms-odata: '#/components/schemas/ADGroup'
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Groups_ListNext
      x-openapi-router-controller: openapi_server.controllers.group_controller
    post:
      description: Create a group in the directory.
      operationId: groups_create
      parameters:
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupCreateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/GroupCreateParameters'
        description: The parameters for the group to create.
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ADGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/ADGroup'
          description: Created
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - Group
      x-openapi-router-controller: openapi_server.controllers.group_controller
      x-codegen-request-body-name: body
  /{tenantID}/groups/{groupObjectId}/$links/members:
    post:
      description: Add a member to a group.
      operationId: groups_add_member
      parameters:
      - description: The object ID of the group to which to add the member.
        explode: false
        in: path
        name: groupObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupAddMemberParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/GroupAddMemberParameters'
        description: "The URL of the member object, such as https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd."
        required: true
        x-body-name: body
      responses:
        "204":
          description: No Content. Indicates success. No response body is returned.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - Group
      x-openapi-router-controller: openapi_server.controllers.group_controller
      x-codegen-request-body-name: body
  /{tenantID}/groups/{groupObjectId}/$links/members/{memberObjectId}:
    delete:
      description: Remove a member from a group.
      operationId: groups_remove_member
      parameters:
      - description: The object ID of the group from which to remove the member.
        explode: false
        in: path
        name: groupObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Member object id
        explode: false
        in: path
        name: memberObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "204":
          description: No Content. Indicates success. No response body is returned.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - Group
      x-openapi-router-controller: openapi_server.controllers.group_controller
  /{tenantID}/groups/{objectId}:
    delete:
      description: Delete a group from the directory.
      operationId: groups_delete
      parameters:
      - description: The object ID of the group to delete.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - Group
      x-openapi-router-controller: openapi_server.controllers.group_controller
    get:
      description: Gets group information from the directory.
      operationId: groups_get
      parameters:
      - description: The object ID of the user for which to get group information.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ADGroup'
            text/json:
              schema:
                $ref: '#/components/schemas/ADGroup'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - Group
      x-openapi-router-controller: openapi_server.controllers.group_controller
  /{tenantID}/groups/{objectId}/$links/owners:
    post:
      description: Add an owner to a group.
      operationId: groups_add_owner
      parameters:
      - description: The object ID of the application to which to add the owner.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        $ref: '#/components/requestBodies/AddOwnerParameters'
        x-body-name: body
      responses:
        "204":
          description: No Content. Indicates success. No response body is returned.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - GroupsOwners
      x-openapi-router-controller: openapi_server.controllers.groups_owners_controller
      x-codegen-request-body-name: body
  /{tenantID}/groups/{objectId}/$links/owners/{ownerObjectId}:
    delete:
      description: Remove a member from owners.
      operationId: groups_remove_owner
      parameters:
      - description: The object ID of the group from which to remove the owner.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Owner object id
        explode: false
        in: path
        name: ownerObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "204":
          description: No Content. Indicates success. No response body is returned.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - GroupsOwners
      x-openapi-router-controller: openapi_server.controllers.groups_owners_controller
  /{tenantID}/groups/{objectId}/getMemberGroups:
    post:
      description: Gets a collection of object IDs of groups of which the specified
        group is a member.
      operationId: groups_get_member_groups
      parameters:
      - description: The object ID of the group for which to get group membership.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupGetMemberGroupsParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/GroupGetMemberGroupsParameters'
        description: Group filtering parameters.
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupGetMemberGroupsResult'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupGetMemberGroupsResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - Group
      x-ms-pageable:
        nextLinkName:
          $ref: "#/paths/~1{tenantID}~1domains/get/x-ms-pageable/nextLinkName"
      x-openapi-router-controller: openapi_server.controllers.group_controller
      x-codegen-request-body-name: body
  /{tenantID}/groups/{objectId}/members:
    get:
      description: Gets the members of a group.
      operationId: groups_get_group_members
      parameters:
      - description: The object ID of the group whose members should be retrieved.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryObjectListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/DirectoryObjectListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - Group
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Groups_GetGroupMembersNext
      x-openapi-router-controller: openapi_server.controllers.group_controller
  /{tenantID}/groups/{objectId}/owners:
    get:
      description: The owners are a set of non-admin users who are allowed to modify
        this object.
      operationId: groups_list_owners
      parameters:
      - description: The object ID of the group for which to get owners.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryObjectListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/DirectoryObjectListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      summary: Directory objects that are owners of the group.
      tags:
      - GroupOwners
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-openapi-router-controller: openapi_server.controllers.group_owners_controller
  /{tenantID}/isMemberOf:
    post:
      description: "Checks whether the specified user, group, contact, or service\
        \ principal is a direct or transitive member of the specified group."
      operationId: groups_is_member_of
      parameters:
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckGroupMembershipParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/CheckGroupMembershipParameters'
        description: The check group membership parameters.
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckGroupMembershipResult'
            text/json:
              schema:
                $ref: '#/components/schemas/CheckGroupMembershipResult'
          description: "OK. Indicates success. Returns true if the user, contact,\
            \ group, or service principal is a direct or a transitive member of the\
            \ specified group; otherwise, false."
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - Group
      x-openapi-router-controller: openapi_server.controllers.group_controller
      x-codegen-request-body-name: body
  /{tenantID}/me:
    get:
      description: Gets the details for the currently logged-in user.
      operationId: signed_in_user_get
      parameters:
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - SignedInUser
      x-openapi-router-controller: openapi_server.controllers.signed_in_user_controller
  /{tenantID}/me/ownedObjects:
    get:
      description: Get the list of directory objects that are owned by the user.
      operationId: signed_in_user_list_owned_objects
      parameters:
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryObjectListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/DirectoryObjectListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - SignedInUser
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: SignedInUser_ListOwnedObjectsNext
      x-openapi-router-controller: openapi_server.controllers.signed_in_user_controller
  /{tenantID}/oauth2PermissionGrants:
    get:
      description: Queries OAuth2 permissions grants for the relevant SP ObjectId
        of an app.
      operationId: o_auth2_permission_grant_list
      parameters:
      - description: This is the Service Principal ObjectId associated with the app
        example: clientId+eq+'61ed44c3-5a1d-4639-a215-07f25129c6c3
        explode: true
        in: query
        name: $filter
        required: false
        schema:
          type: string
        style: form
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2PermissionGrantListResult'
          description: OK. The operation was successful.
      tags:
      - OAuth2PermissionGrant_List
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: OAuth2PermissionGrant_ListNext
      x-openapi-router-controller: openapi_server.controllers.o_auth2_permission_grant_list_controller
    post:
      description: Grants OAuth2 permissions for the relevant resource Ids of an app.
      operationId: o_auth2_permission_grant_create
      parameters:
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OAuth2PermissionGrant'
        description: The relevant app Service Principal Object Id and the Service
          Principal Object Id you want to grant.
        x-examples:
          application/json: "{\n\t\"odata.type\": \"Microsoft.DirectoryServices.OAuth2PermissionGrant\"\
            ,\n\t\"clientId\": \"39afbaa2-4a5c-4f5b-9ee3-2c83f09bbc87\", \n\t\"consentType\"\
            : \"AllPrincipals\",\n\t\"principalId\": null,\n\t\"resourceId\": \"d3247842-c517-4520-80a7-332690ae2fe4\"\
            ,\n\t\"scope\": \"user_impersonation\",\n    \"startTime\": \"0001-01-01T00:00:00\"\
            ,\n    \"expiryTime\": \"9000-01-01T00:00:00\"\n}"
          description: "These are the values required to grant permission to a resourceId\
            \ for an app, only one operation is allowed per request"
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2PermissionGrant'
          description: OK. The operation was successful.
      tags:
      - OAuth2PermissionGrant_Create
      x-openapi-router-controller: openapi_server.controllers.o_auth2_permission_grant_create_controller
      x-codegen-request-body-name: body
  /{tenantID}/oauth2PermissionGrants/{objectId}:
    delete:
      description: Delete a OAuth2 permission grant for the relevant resource Ids
        of an app.
      operationId: o_auth2_permission_grant_delete
      parameters:
      - description: The object ID of a permission grant.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - OAuth2PermissionGrant_delete
      x-openapi-router-controller: openapi_server.controllers.o_auth2_permission_grant_delete_controller
  /{tenantID}/servicePrincipals:
    get:
      description: Gets a list of service principals from the current tenant.
      operationId: service_principals_list
      parameters:
      - description: The filter to apply to the operation.
        explode: true
        in: query
        name: $filter
        required: false
        schema:
          type: string
        style: form
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePrincipalListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ServicePrincipalListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - ServicePrincipal
      x-ms-odata: '#/components/schemas/ServicePrincipal'
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: ServicePrincipals_ListNext
      x-openapi-router-controller: openapi_server.controllers.service_principal_controller
    post:
      description: Creates a service principal in the directory.
      operationId: service_principals_create
      parameters:
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicePrincipalCreateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/ServicePrincipalCreateParameters'
        description: Parameters to create a service principal.
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePrincipal'
            text/json:
              schema:
                $ref: '#/components/schemas/ServicePrincipal'
          description: The service principal was created successfully.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - ServicePrincipal
      x-openapi-router-controller: openapi_server.controllers.service_principal_controller
      x-codegen-request-body-name: body
  /{tenantID}/servicePrincipals/{objectId}:
    delete:
      description: Deletes a service principal from the directory.
      operationId: service_principals_delete
      parameters:
      - description: The object ID of the service principal to delete.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - ServicePrincipal
      x-openapi-router-controller: openapi_server.controllers.service_principal_controller
    get:
      description: Gets service principal information from the directory. Query by
        objectId or pass a filter to query by appId
      operationId: service_principals_get
      parameters:
      - description: The object ID of the service principal to get.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePrincipal'
            text/json:
              schema:
                $ref: '#/components/schemas/ServicePrincipal'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - ServicePrincipal
      x-openapi-router-controller: openapi_server.controllers.service_principal_controller
    patch:
      description: Updates a service principal in the directory.
      operationId: service_principals_update
      parameters:
      - description: The object ID of the service principal to delete.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServicePrincipalUpdateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/ServicePrincipalUpdateParameters'
        description: Parameters to update a service principal.
        required: true
        x-body-name: body
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - ServicePrincipal
      x-openapi-router-controller: openapi_server.controllers.service_principal_controller
      x-codegen-request-body-name: body
  /{tenantID}/servicePrincipals/{objectId}/$links/owners:
    post:
      description: Add an owner to a service principal.
      operationId: service_principals_add_owner
      parameters:
      - description: The object ID of the service principal to which to add the owner.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        $ref: '#/components/requestBodies/AddOwnerParameters'
        x-body-name: body
      responses:
        "204":
          description: No Content. Indicates success. No response body is returned.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - ServicePrincipalOwners
      x-openapi-router-controller: openapi_server.controllers.service_principal_owners_controller
      x-codegen-request-body-name: body
  /{tenantID}/servicePrincipals/{objectId}/$links/owners/{ownerObjectId}:
    delete:
      description: Remove a member from owners.
      operationId: service_principals_remove_owner
      parameters:
      - description: The object ID of the service principal from which to remove the
          owner.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Owner object id
        explode: false
        in: path
        name: ownerObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "204":
          description: No Content. Indicates success. No response body is returned.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - ServicePrincipalOwners
      x-openapi-router-controller: openapi_server.controllers.service_principal_owners_controller
  /{tenantID}/servicePrincipals/{objectId}/appRoleAssignedTo:
    get:
      operationId: service_principals_list_app_role_assigned_to
      parameters:
      - description: The object ID of the service principal for which to get owners.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppRoleAssignmentListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/AppRoleAssignmentListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      summary: "Principals (users, groups, and service principals) that are assigned\
        \ to this service principal."
      tags:
      - ServicePrincipalAppRoleAssignedTo
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-openapi-router-controller: openapi_server.controllers.service_principal_app_role_assigned_to_controller
  /{tenantID}/servicePrincipals/{objectId}/appRoleAssignments:
    get:
      operationId: service_principals_list_app_role_assignments
      parameters:
      - description: The object ID of the service principal for which to get owners.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppRoleAssignmentListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/AppRoleAssignmentListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      summary: Applications that the service principal is assigned to.
      tags:
      - ServicePrincipalAppRoleAssignments
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-openapi-router-controller: openapi_server.controllers.service_principal_app_role_assignments_controller
  /{tenantID}/servicePrincipals/{objectId}/keyCredentials:
    get:
      description: Get the keyCredentials associated with the specified service principal.
      operationId: service_principals_list_key_credentials
      parameters:
      - description: The object ID of the service principal for which to get keyCredentials.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KeyCredentialListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/KeyCredentialListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - ServicePrincipalKeyCredentials
      x-ms-pageable:
        nextLinkName:
          $ref: "#/paths/~1{tenantID}~1domains/get/x-ms-pageable/nextLinkName"
      x-openapi-router-controller: openapi_server.controllers.service_principal_key_credentials_controller
    patch:
      description: Update the keyCredentials associated with a service principal.
      operationId: service_principals_update_key_credentials
      parameters:
      - description: The object ID for which to get service principal information.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KeyCredentialsUpdateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/KeyCredentialsUpdateParameters'
        description: Parameters to update the keyCredentials of an existing service
          principal.
        required: true
        x-body-name: body
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - ServicePrincipalKeyCredentials
      x-openapi-router-controller: openapi_server.controllers.service_principal_key_credentials_controller
      x-codegen-request-body-name: body
  /{tenantID}/servicePrincipals/{objectId}/owners:
    get:
      description: The owners are a set of non-admin users who are allowed to modify
        this object.
      operationId: service_principals_list_owners
      parameters:
      - description: The object ID of the service principal for which to get owners.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryObjectListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/DirectoryObjectListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      summary: Directory objects that are owners of this service principal.
      tags:
      - ServicePrincipalOwners
      x-ms-pageable:
        nextLinkName: odata.nextLink
      x-openapi-router-controller: openapi_server.controllers.service_principal_owners_controller
  /{tenantID}/servicePrincipals/{objectId}/passwordCredentials:
    get:
      description: Gets the passwordCredentials associated with a service principal.
      operationId: service_principals_list_password_credentials
      parameters:
      - description: The object ID of the service principal.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordCredentialListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/PasswordCredentialListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - ServicePrincipalPasswordCredentials
      x-ms-pageable:
        nextLinkName:
          $ref: "#/paths/~1{tenantID}~1domains/get/x-ms-pageable/nextLinkName"
      x-openapi-router-controller: openapi_server.controllers.service_principal_password_credentials_controller
    patch:
      description: Updates the passwordCredentials associated with a service principal.
      operationId: service_principals_update_password_credentials
      parameters:
      - description: The object ID of the service principal.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordCredentialsUpdateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/PasswordCredentialsUpdateParameters'
        description: Parameters to update the passwordCredentials of an existing service
          principal.
        required: true
        x-body-name: body
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - ServicePrincipalPasswordCredentials
      x-openapi-router-controller: openapi_server.controllers.service_principal_password_credentials_controller
      x-codegen-request-body-name: body
  /{tenantID}/servicePrincipalsByAppId/{applicationID}/objectId:
    get:
      description: Gets an object id for a given application id from the current tenant.
      operationId: applications_get_service_principals_id_by_app_id
      parameters:
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      - description: The application ID.
        explode: false
        in: path
        name: applicationID
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePrincipalObjectResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ServicePrincipalObjectResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - ServicePrincipalsByAppId
      x-openapi-router-controller: openapi_server.controllers.service_principals_by_app_id_controller
  /{tenantID}/users:
    get:
      description: Gets list of users for the current tenant.
      operationId: users_list
      parameters:
      - description: The filter to apply to the operation.
        explode: true
        in: query
        name: $filter
        required: false
        schema:
          type: string
        style: form
      - description: The expand value for the operation result.
        explode: true
        in: query
        name: $expand
        required: false
        schema:
          type: string
        style: form
      - description: (Optional) Set the maximum number of results per response.
        explode: true
        in: query
        name: $top
        required: false
        schema:
          default: 100
          maximum: 999
          minimum: 1
          type: integer
        style: form
        x-ms-parameter-location: method
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/UserListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - User
      x-ms-odata: '#/components/schemas/User'
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Users_ListNext
      x-openapi-router-controller: openapi_server.controllers.user_controller
    post:
      description: Create a new user.
      operationId: users_create
      parameters:
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/UserCreateParameters'
        description: Parameters to create a user.
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
          description: Created. Indicates success. The new user is returned in the
            response body.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - User
      x-openapi-router-controller: openapi_server.controllers.user_controller
      x-codegen-request-body-name: body
  /{tenantID}/users/{objectId}/getMemberGroups:
    post:
      description: Gets a collection that contains the object IDs of the groups of
        which the user is a member.
      operationId: users_get_member_groups
      parameters:
      - description: The object ID of the user for which to get group membership.
        explode: false
        in: path
        name: objectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserGetMemberGroupsParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/UserGetMemberGroupsParameters'
        description: User filtering parameters.
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGetMemberGroupsResult'
            text/json:
              schema:
                $ref: '#/components/schemas/UserGetMemberGroupsResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - User
      x-ms-pageable:
        nextLinkName:
          $ref: "#/paths/~1{tenantID}~1domains/get/x-ms-pageable/nextLinkName"
      x-openapi-router-controller: openapi_server.controllers.user_controller
      x-codegen-request-body-name: body
  /{tenantID}/users/{upnOrObjectId}:
    delete:
      description: Delete a user.
      operationId: users_delete
      parameters:
      - description: The object ID or principal name of the user to delete.
        explode: false
        in: path
        name: upnOrObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "204":
          description: No Content
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - User
      x-openapi-router-controller: openapi_server.controllers.user_controller
    get:
      description: Gets user information from the directory.
      operationId: users_get
      parameters:
      - description: The object ID or principal name of the user for which to get
          information.
        explode: false
        in: path
        name: upnOrObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            text/json:
              schema:
                $ref: '#/components/schemas/User'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - User
      x-openapi-router-controller: openapi_server.controllers.user_controller
    patch:
      description: Updates a user.
      operationId: users_update
      parameters:
      - description: The object ID or principal name of the user to update.
        explode: false
        in: path
        name: upnOrObjectId
        required: true
        schema:
          type: string
        style: simple
      - description: Client API version.
        explode: true
        in: query
        name: api-version
        required: true
        schema:
          type: string
        style: form
      - description: The tenant ID.
        explode: false
        in: path
        name: tenantID
        required: true
        schema:
          type: string
        style: simple
        x-ms-parameter-location: client
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateParameters'
          text/json:
            schema:
              $ref: '#/components/schemas/UserUpdateParameters'
        description: Parameters to update an existing user.
        required: true
        x-body-name: body
      responses:
        "204":
          description: No Content.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - User
      x-openapi-router-controller: openapi_server.controllers.user_controller
      x-codegen-request-body-name: body
components:
  parameters:
    ApiVersionParameter:
      description: Client API version.
      explode: true
      in: query
      name: api-version
      required: true
      schema:
        type: string
      style: form
    tenantIDInPath:
      description: The tenant ID.
      explode: false
      in: path
      name: tenantID
      required: true
      schema:
        type: string
      style: simple
      x-ms-parameter-location: client
    top:
      description: (Optional) Set the maximum number of results per response.
      explode: true
      in: query
      name: $top
      required: false
      schema:
        default: 100
        maximum: 999
        minimum: 1
        type: integer
      style: form
      x-ms-parameter-location: method
  requestBodies:
    AddOwnerParameters:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/AddOwnerParameters'
        text/json:
          schema:
            $ref: '#/components/schemas/AddOwnerParameters'
      description: "The URL of the owner object, such as https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd."
      required: true
  schemas:
    ADGroup:
      allOf:
      - $ref: '#/components/schemas/DirectoryObject'
      description: Active Directory group information.
      example:
        mail: mail
        displayName: displayName
        mailEnabled: true
        securityEnabled: true
        mailNickname: mailNickname
      properties:
        displayName:
          description: The display name of the group.
          title: displayName
          type: string
        mail:
          description: The primary email address of the group.
          title: mail
          type: string
        mailEnabled:
          description: Whether the group is mail-enabled. Must be false. This is because
            only pure security groups can be created using the Graph API.
          title: mailEnabled
          type: boolean
        mailNickname:
          description: 'The mail alias for the group. '
          title: mailNickname
          type: string
        securityEnabled:
          description: Whether the group is security-enable.
          title: securityEnabled
          type: boolean
      title: ADGroup
      type: object
      x-ms-discriminator-value: Group
    AddOwnerParameters:
      additionalProperties:
        type: object
      description: Request parameters for adding a owner to an application.
      example:
        url: url
      properties:
        url:
          description: "A owner object URL, such as \"https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd\"\
            , where \"0b1f9851-1bf0-433f-aec3-cb9272f093dc\" is the tenantId and \"\
            f260bbc4-c254-447b-94cf-293b5ec434dd\" is the objectId of the owner (user,\
            \ application, servicePrincipal, group) to be added."
          type: string
      required:
      - url
      title: AddOwnerParameters
      type: object
    AppRole:
      example:
        displayName: displayName
        isEnabled: true
        description: description
        id: id
        allowedMemberTypes:
        - allowedMemberTypes
        - allowedMemberTypes
        value: value
      properties:
        allowedMemberTypes:
          description: "Specifies whether this app role definition can be assigned\
            \ to users and groups by setting to 'User', or to other applications (that\
            \ are accessing this application in daemon service scenarios) by setting\
            \ to 'Application', or to both. "
          items:
            type: string
          title: allowedMemberTypes
          type: array
        description:
          description: Permission help text that appears in the admin app assignment
            and consent experiences.
          title: description
          type: string
        displayName:
          description: Display name for the permission that appears in the admin consent
            and app assignment experiences.
          title: displayName
          type: string
        id:
          description: Unique role identifier inside the appRoles collection.
          title: id
          type: string
        isEnabled:
          description: "When creating or updating a role definition, this must be\
            \ set to true (which is the default). To delete a role, this must first\
            \ be set to false. At that point, in a subsequent call, this role may\
            \ be removed."
          title: isEnabled
          type: boolean
        value:
          description: Specifies the value of the roles claim that the application
            should expect in the authentication and access tokens.
          title: value
          type: string
      title: AppRole
      type: object
    AppRoleAssignment:
      allOf:
      - $ref: '#/components/schemas/DirectoryObject'
      description: AppRoleAssignment information.
      example:
        resourceDisplayName: resourceDisplayName
        resourceId: resourceId
        principalDisplayName: principalDisplayName
        principalId: principalId
        id: id
        principalType: principalType
      properties:
        id:
          description: The role id that was assigned to the principal. This role must
            be declared by the target resource application resourceId in its appRoles
            property.
          title: id
          type: string
        principalDisplayName:
          description: The display name of the principal that was granted the access.
          title: principalDisplayName
          type: string
        principalId:
          description: The unique identifier (objectId) for the principal being granted
            the access.
          title: principalId
          type: string
        principalType:
          description: "The type of principal. This can either be \"User\", \"Group\"\
            \ or \"ServicePrincipal\"."
          title: principalType
          type: string
        resourceDisplayName:
          description: The display name of the resource to which the assignment was
            made.
          title: resourceDisplayName
          type: string
        resourceId:
          description: The unique identifier (objectId) for the target resource (service
            principal) for which the assignment was made.
          title: resourceId
          type: string
      title: AppRoleAssignment
      type: object
      x-ms-discriminator-value: AppRoleAssignment
    AppRoleAssignmentListResult:
      description: AppRoleAssignment list operation result.
      example:
        value:
        - resourceDisplayName: resourceDisplayName
          resourceId: resourceId
          principalDisplayName: principalDisplayName
          principalId: principalId
          id: id
          principalType: principalType
        - resourceDisplayName: resourceDisplayName
          resourceId: resourceId
          principalDisplayName: principalDisplayName
          principalId: principalId
          id: id
          principalType: principalType
        odata.nextLink: odata.nextLink
      properties:
        odata.nextLink:
          description: The URL to get the next set of results.
          title: odata.nextLink
          type: string
        value:
          description: A collection of AppRoleAssignment.
          items:
            $ref: '#/components/schemas/AppRoleAssignment'
          title: value
          type: array
      title: AppRoleAssignmentListResult
      type: object
    Application:
      allOf:
      - $ref: '#/components/schemas/DirectoryObject'
      description: Active Directory application information.
      example:
        publicClient: true
        allowPassthroughUsers: true
        displayName: displayName
        informationalUrls:
          marketing: marketing
          privacy: privacy
          termsOfService: termsOfService
          support: support
        optionalClaims:
          idToken:
          - name: name
            additionalProperties: "{}"
            source: source
            essential: true
          - name: name
            additionalProperties: "{}"
            source: source
            essential: true
          samlToken:
          - name: name
            additionalProperties: "{}"
            source: source
            essential: true
          - name: name
            additionalProperties: "{}"
            source: source
            essential: true
          accessToken:
          - name: name
            additionalProperties: "{}"
            source: source
            essential: true
          - name: name
            additionalProperties: "{}"
            source: source
            essential: true
        groupMembershipClaims: None
        replyUrls:
        - replyUrls
        - replyUrls
        appLogoUrl: appLogoUrl
        wwwHomepage: wwwHomepage
        availableToOtherTenants: true
        oauth2RequirePostResponse: true
        passwordCredentials:
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          keyId: keyId
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          keyId: keyId
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
        preAuthorizedApplications:
        - extensions:
          - conditions:
            - conditions
            - conditions
          - conditions:
            - conditions
            - conditions
          permissions:
          - directAccessGrant: true
            accessGrants:
            - accessGrants
            - accessGrants
          - directAccessGrant: true
            accessGrants:
            - accessGrants
            - accessGrants
          appId: appId
        - extensions:
          - conditions:
            - conditions
            - conditions
          - conditions:
            - conditions
            - conditions
          permissions:
          - directAccessGrant: true
            accessGrants:
            - accessGrants
            - accessGrants
          - directAccessGrant: true
            accessGrants:
            - accessGrants
            - accessGrants
          appId: appId
        signInAudience: signInAudience
        orgRestrictions:
        - orgRestrictions
        - orgRestrictions
        oauth2Permissions:
        - userConsentDescription: userConsentDescription
          adminConsentDisplayName: adminConsentDisplayName
          isEnabled: true
          id: id
          type: type
          userConsentDisplayName: userConsentDisplayName
          value: value
          adminConsentDescription: adminConsentDescription
        - userConsentDescription: userConsentDescription
          adminConsentDisplayName: adminConsentDisplayName
          isEnabled: true
          id: id
          type: type
          userConsentDisplayName: userConsentDisplayName
          value: value
          adminConsentDescription: adminConsentDescription
        appId: appId
        identifierUris:
        - identifierUris
        - identifierUris
        samlMetadataUrl: samlMetadataUrl
        keyCredentials:
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          usage: usage
          keyId: keyId
          type: type
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          usage: usage
          keyId: keyId
          type: type
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
        publisherDomain: publisherDomain
        oauth2AllowImplicitFlow: true
        isDeviceOnlyAuthSupported: true
        errorUrl: errorUrl
        appPermissions:
        - appPermissions
        - appPermissions
        knownClientApplications:
        - knownClientApplications
        - knownClientApplications
        oauth2AllowUrlPathMatching: true
        requiredResourceAccess:
        - resourceAppId: resourceAppId
          resourceAccess:
          - id: id
            type: type
          - id: id
            type: type
        - resourceAppId: resourceAppId
          resourceAccess:
          - id: id
            type: type
          - id: id
            type: type
        logoutUrl: logoutUrl
        allowGuestsSignIn: true
        appRoles:
        - displayName: displayName
          isEnabled: true
          description: description
          id: id
          allowedMemberTypes:
          - allowedMemberTypes
          - allowedMemberTypes
          value: value
        - displayName: displayName
          isEnabled: true
          description: description
          id: id
          allowedMemberTypes:
          - allowedMemberTypes
          - allowedMemberTypes
          value: value
        homepage: homepage
      properties:
        allowGuestsSignIn:
          description: A property on the application to indicate if the application
            accepts other IDPs or not or partially accepts.
          title: allowGuestsSignIn
          type: boolean
        allowPassthroughUsers:
          description: Indicates that the application supports pass through users
            who have no presence in the resource tenant.
          title: allowPassthroughUsers
          type: boolean
        appId:
          description: The application ID.
          title: appId
          type: string
        appLogoUrl:
          description: The url for the application logo image stored in a CDN.
          title: appLogoUrl
          type: string
        appPermissions:
          description: The application permissions.
          items:
            type: string
          title: appPermissions
          type: array
        appRoles:
          description: "The collection of application roles that an application may\
            \ declare. These roles can be assigned to users, groups or service principals."
          items:
            $ref: '#/components/schemas/AppRole'
          title: appRoles
          type: array
        availableToOtherTenants:
          description: Whether the application is available to other tenants.
          title: availableToOtherTenants
          type: boolean
        displayName:
          description: The display name of the application.
          title: displayName
          type: string
        errorUrl:
          description: A URL provided by the author of the application to report errors
            when using the application.
          title: errorUrl
          type: string
        groupMembershipClaims:
          $ref: '#/components/schemas/GroupMembershipClaims'
        homepage:
          description: The home page of the application.
          title: homepage
          type: string
        identifierUris:
          description: A collection of URIs for the application.
          items:
            type: string
          title: identifierUris
          type: array
        informationalUrls:
          $ref: '#/components/schemas/InformationalUrl'
        isDeviceOnlyAuthSupported:
          description: Specifies whether this application supports device authentication
            without a user. The default is false.
          title: isDeviceOnlyAuthSupported
          type: boolean
        keyCredentials:
          description: A collection of KeyCredential objects.
          items:
            $ref: '#/components/schemas/KeyCredential'
          title: keyCredentials
          type: array
        knownClientApplications:
          description: Client applications that are tied to this resource application.
            Consent to any of the known client applications will result in implicit
            consent to the resource application through a combined consent dialog
            (showing the OAuth permission scopes required by the client and the resource).
          items:
            type: string
          title: knownClientApplications
          type: array
        logoutUrl:
          description: the url of the logout page
          title: logoutUrl
          type: string
        oauth2AllowImplicitFlow:
          description: Whether to allow implicit grant flow for OAuth2
          title: oauth2AllowImplicitFlow
          type: boolean
        oauth2AllowUrlPathMatching:
          description: Specifies whether during a token Request Azure AD will allow
            path matching of the redirect URI against the applications collection
            of replyURLs. The default is false.
          title: oauth2AllowUrlPathMatching
          type: boolean
        oauth2Permissions:
          description: The collection of OAuth 2.0 permission scopes that the web
            API (resource) application exposes to client applications. These permission
            scopes may be granted to client applications during consent.
          items:
            $ref: '#/components/schemas/OAuth2Permission'
          title: oauth2Permissions
          type: array
        oauth2RequirePostResponse:
          description: "Specifies whether, as part of OAuth 2.0 token requests, Azure\
            \ AD will allow POST requests, as opposed to GET requests. The default\
            \ is false, which specifies that only GET requests will be allowed."
          title: oauth2RequirePostResponse
          type: boolean
        optionalClaims:
          $ref: '#/components/schemas/OptionalClaims'
        orgRestrictions:
          description: A list of tenants allowed to access application.
          items:
            type: string
          title: orgRestrictions
          type: array
        passwordCredentials:
          description: A collection of PasswordCredential objects
          items:
            $ref: '#/components/schemas/PasswordCredential'
          title: passwordCredentials
          type: array
        preAuthorizedApplications:
          description: list of pre-authorized applications.
          items:
            $ref: '#/components/schemas/PreAuthorizedApplication'
          title: preAuthorizedApplications
          type: array
        publicClient:
          description: Specifies whether this application is a public client (such
            as an installed application running on a mobile device). Default is false.
          title: publicClient
          type: boolean
        publisherDomain:
          description: Reliable domain which can be used to identify an application.
          title: publisherDomain
          type: string
        replyUrls:
          description: A collection of reply URLs for the application.
          items:
            type: string
          title: replyUrls
          type: array
        requiredResourceAccess:
          description: Specifies resources that this application requires access to
            and the set of OAuth permission scopes and application roles that it needs
            under each of those resources. This pre-configuration of required resource
            access drives the consent experience.
          items:
            $ref: '#/components/schemas/RequiredResourceAccess'
          title: requiredResourceAccess
          type: array
        samlMetadataUrl:
          description: The URL to the SAML metadata for the application.
          title: samlMetadataUrl
          type: string
        signInAudience:
          description: "Audience for signing in to the application (AzureADMyOrganization,\
            \ AzureADAllOrganizations, AzureADAndMicrosoftAccounts)."
          title: signInAudience
          type: string
        wwwHomepage:
          description: The primary Web page.
          title: wwwHomepage
          type: string
      title: Application
      type: object
    ApplicationBase:
      description: "Active Directive Application common properties shared among GET,\
        \ POST and PATCH"
      properties:
        allowGuestsSignIn:
          description: A property on the application to indicate if the application
            accepts other IDPs or not or partially accepts.
          title: allowGuestsSignIn
          type: boolean
        allowPassthroughUsers:
          description: Indicates that the application supports pass through users
            who have no presence in the resource tenant.
          title: allowPassthroughUsers
          type: boolean
        appLogoUrl:
          description: The url for the application logo image stored in a CDN.
          title: appLogoUrl
          type: string
        appPermissions:
          description: The application permissions.
          items:
            type: string
          title: appPermissions
          type: array
        appRoles:
          description: "The collection of application roles that an application may\
            \ declare. These roles can be assigned to users, groups or service principals."
          items:
            $ref: '#/components/schemas/AppRole'
          title: appRoles
          type: array
        availableToOtherTenants:
          description: Whether the application is available to other tenants.
          title: availableToOtherTenants
          type: boolean
        errorUrl:
          description: A URL provided by the author of the application to report errors
            when using the application.
          title: errorUrl
          type: string
        groupMembershipClaims:
          $ref: '#/components/schemas/GroupMembershipClaims'
        homepage:
          description: The home page of the application.
          title: homepage
          type: string
        informationalUrls:
          $ref: '#/components/schemas/InformationalUrl'
        isDeviceOnlyAuthSupported:
          description: Specifies whether this application supports device authentication
            without a user. The default is false.
          title: isDeviceOnlyAuthSupported
          type: boolean
        keyCredentials:
          description: A collection of KeyCredential objects.
          items:
            $ref: '#/components/schemas/KeyCredential'
          title: keyCredentials
          type: array
        knownClientApplications:
          description: Client applications that are tied to this resource application.
            Consent to any of the known client applications will result in implicit
            consent to the resource application through a combined consent dialog
            (showing the OAuth permission scopes required by the client and the resource).
          items:
            type: string
          title: knownClientApplications
          type: array
        logoutUrl:
          description: the url of the logout page
          title: logoutUrl
          type: string
        oauth2AllowImplicitFlow:
          description: Whether to allow implicit grant flow for OAuth2
          title: oauth2AllowImplicitFlow
          type: boolean
        oauth2AllowUrlPathMatching:
          description: Specifies whether during a token Request Azure AD will allow
            path matching of the redirect URI against the applications collection
            of replyURLs. The default is false.
          title: oauth2AllowUrlPathMatching
          type: boolean
        oauth2Permissions:
          description: The collection of OAuth 2.0 permission scopes that the web
            API (resource) application exposes to client applications. These permission
            scopes may be granted to client applications during consent.
          items:
            $ref: '#/components/schemas/OAuth2Permission'
          title: oauth2Permissions
          type: array
        oauth2RequirePostResponse:
          description: "Specifies whether, as part of OAuth 2.0 token requests, Azure\
            \ AD will allow POST requests, as opposed to GET requests. The default\
            \ is false, which specifies that only GET requests will be allowed."
          title: oauth2RequirePostResponse
          type: boolean
        optionalClaims:
          $ref: '#/components/schemas/OptionalClaims'
        orgRestrictions:
          description: A list of tenants allowed to access application.
          items:
            type: string
          title: orgRestrictions
          type: array
        passwordCredentials:
          description: A collection of PasswordCredential objects
          items:
            $ref: '#/components/schemas/PasswordCredential'
          title: passwordCredentials
          type: array
        preAuthorizedApplications:
          description: list of pre-authorized applications.
          items:
            $ref: '#/components/schemas/PreAuthorizedApplication'
          title: preAuthorizedApplications
          type: array
        publicClient:
          description: Specifies whether this application is a public client (such
            as an installed application running on a mobile device). Default is false.
          title: publicClient
          type: boolean
        publisherDomain:
          description: Reliable domain which can be used to identify an application.
          title: publisherDomain
          type: string
        replyUrls:
          description: A collection of reply URLs for the application.
          items:
            type: string
          title: replyUrls
          type: array
        requiredResourceAccess:
          description: Specifies resources that this application requires access to
            and the set of OAuth permission scopes and application roles that it needs
            under each of those resources. This pre-configuration of required resource
            access drives the consent experience.
          items:
            $ref: '#/components/schemas/RequiredResourceAccess'
          title: requiredResourceAccess
          type: array
        samlMetadataUrl:
          description: The URL to the SAML metadata for the application.
          title: samlMetadataUrl
          type: string
        signInAudience:
          description: "Audience for signing in to the application (AzureADMyOrganization,\
            \ AzureADAllOrganizations, AzureADAndMicrosoftAccounts)."
          title: signInAudience
          type: string
        wwwHomepage:
          description: The primary Web page.
          title: wwwHomepage
          type: string
      title: ApplicationBase
      type: object
    ApplicationCreateParameters:
      allOf:
      - $ref: '#/components/schemas/ApplicationBase'
      description: Request parameters for creating a new application.
      example:
        displayName: displayName
        identifierUris:
        - identifierUris
        - identifierUris
      properties:
        displayName:
          description: The display name of the application.
          title: displayName
          type: string
        identifierUris:
          description: A collection of URIs for the application.
          items:
            type: string
          title: identifierUris
          type: array
      required:
      - displayName
      title: ApplicationCreateParameters
      type: object
    ApplicationListResult:
      description: Application list operation result.
      example:
        value:
        - publicClient: true
          allowPassthroughUsers: true
          displayName: displayName
          informationalUrls:
            marketing: marketing
            privacy: privacy
            termsOfService: termsOfService
            support: support
          optionalClaims:
            idToken:
            - name: name
              additionalProperties: "{}"
              source: source
              essential: true
            - name: name
              additionalProperties: "{}"
              source: source
              essential: true
            samlToken:
            - name: name
              additionalProperties: "{}"
              source: source
              essential: true
            - name: name
              additionalProperties: "{}"
              source: source
              essential: true
            accessToken:
            - name: name
              additionalProperties: "{}"
              source: source
              essential: true
            - name: name
              additionalProperties: "{}"
              source: source
              essential: true
          groupMembershipClaims: None
          replyUrls:
          - replyUrls
          - replyUrls
          appLogoUrl: appLogoUrl
          wwwHomepage: wwwHomepage
          availableToOtherTenants: true
          oauth2RequirePostResponse: true
          passwordCredentials:
          - customKeyIdentifier: customKeyIdentifier
            endDate: 2000-01-23T04:56:07.000+00:00
            keyId: keyId
            value: value
            startDate: 2000-01-23T04:56:07.000+00:00
          - customKeyIdentifier: customKeyIdentifier
            endDate: 2000-01-23T04:56:07.000+00:00
            keyId: keyId
            value: value
            startDate: 2000-01-23T04:56:07.000+00:00
          preAuthorizedApplications:
          - extensions:
            - conditions:
              - conditions
              - conditions
            - conditions:
              - conditions
              - conditions
            permissions:
            - directAccessGrant: true
              accessGrants:
              - accessGrants
              - accessGrants
            - directAccessGrant: true
              accessGrants:
              - accessGrants
              - accessGrants
            appId: appId
          - extensions:
            - conditions:
              - conditions
              - conditions
            - conditions:
              - conditions
              - conditions
            permissions:
            - directAccessGrant: true
              accessGrants:
              - accessGrants
              - accessGrants
            - directAccessGrant: true
              accessGrants:
              - accessGrants
              - accessGrants
            appId: appId
          signInAudience: signInAudience
          orgRestrictions:
          - orgRestrictions
          - orgRestrictions
          oauth2Permissions:
          - userConsentDescription: userConsentDescription
            adminConsentDisplayName: adminConsentDisplayName
            isEnabled: true
            id: id
            type: type
            userConsentDisplayName: userConsentDisplayName
            value: value
            adminConsentDescription: adminConsentDescription
          - userConsentDescription: userConsentDescription
            adminConsentDisplayName: adminConsentDisplayName
            isEnabled: true
            id: id
            type: type
            userConsentDisplayName: userConsentDisplayName
            value: value
            adminConsentDescription: adminConsentDescription
          appId: appId
          identifierUris:
          - identifierUris
          - identifierUris
          samlMetadataUrl: samlMetadataUrl
          keyCredentials:
          - customKeyIdentifier: customKeyIdentifier
            endDate: 2000-01-23T04:56:07.000+00:00
            usage: usage
            keyId: keyId
            type: type
            value: value
            startDate: 2000-01-23T04:56:07.000+00:00
          - customKeyIdentifier: customKeyIdentifier
            endDate: 2000-01-23T04:56:07.000+00:00
            usage: usage
            keyId: keyId
            type: type
            value: value
            startDate: 2000-01-23T04:56:07.000+00:00
          publisherDomain: publisherDomain
          oauth2AllowImplicitFlow: true
          isDeviceOnlyAuthSupported: true
          errorUrl: errorUrl
          appPermissions:
          - appPermissions
          - appPermissions
          knownClientApplications:
          - knownClientApplications
          - knownClientApplications
          oauth2AllowUrlPathMatching: true
          requiredResourceAccess:
          - resourceAppId: resourceAppId
            resourceAccess:
            - id: id
              type: type
            - id: id
              type: type
          - resourceAppId: resourceAppId
            resourceAccess:
            - id: id
              type: type
            - id: id
              type: type
          logoutUrl: logoutUrl
          allowGuestsSignIn: true
          appRoles:
          - displayName: displayName
            isEnabled: true
            description: description
            id: id
            allowedMemberTypes:
            - allowedMemberTypes
            - allowedMemberTypes
            value: value
          - displayName: displayName
            isEnabled: true
            description: description
            id: id
            allowedMemberTypes:
            - allowedMemberTypes
            - allowedMemberTypes
            value: value
          homepage: homepage
        - publicClient: true
          allowPassthroughUsers: true
          displayName: displayName
          informationalUrls:
            marketing: marketing
            privacy: privacy
            termsOfService: termsOfService
            support: support
          optionalClaims:
            idToken:
            - name: name
              additionalProperties: "{}"
              source: source
              essential: true
            - name: name
              additionalProperties: "{}"
              source: source
              essential: true
            samlToken:
            - name: name
              additionalProperties: "{}"
              source: source
              essential: true
            - name: name
              additionalProperties: "{}"
              source: source
              essential: true
            accessToken:
            - name: name
              additionalProperties: "{}"
              source: source
              essential: true
            - name: name
              additionalProperties: "{}"
              source: source
              essential: true
          groupMembershipClaims: None
          replyUrls:
          - replyUrls
          - replyUrls
          appLogoUrl: appLogoUrl
          wwwHomepage: wwwHomepage
          availableToOtherTenants: true
          oauth2RequirePostResponse: true
          passwordCredentials:
          - customKeyIdentifier: customKeyIdentifier
            endDate: 2000-01-23T04:56:07.000+00:00
            keyId: keyId
            value: value
            startDate: 2000-01-23T04:56:07.000+00:00
          - customKeyIdentifier: customKeyIdentifier
            endDate: 2000-01-23T04:56:07.000+00:00
            keyId: keyId
            value: value
            startDate: 2000-01-23T04:56:07.000+00:00
          preAuthorizedApplications:
          - extensions:
            - conditions:
              - conditions
              - conditions
            - conditions:
              - conditions
              - conditions
            permissions:
            - directAccessGrant: true
              accessGrants:
              - accessGrants
              - accessGrants
            - directAccessGrant: true
              accessGrants:
              - accessGrants
              - accessGrants
            appId: appId
          - extensions:
            - conditions:
              - conditions
              - conditions
            - conditions:
              - conditions
              - conditions
            permissions:
            - directAccessGrant: true
              accessGrants:
              - accessGrants
              - accessGrants
            - directAccessGrant: true
              accessGrants:
              - accessGrants
              - accessGrants
            appId: appId
          signInAudience: signInAudience
          orgRestrictions:
          - orgRestrictions
          - orgRestrictions
          oauth2Permissions:
          - userConsentDescription: userConsentDescription
            adminConsentDisplayName: adminConsentDisplayName
            isEnabled: true
            id: id
            type: type
            userConsentDisplayName: userConsentDisplayName
            value: value
            adminConsentDescription: adminConsentDescription
          - userConsentDescription: userConsentDescription
            adminConsentDisplayName: adminConsentDisplayName
            isEnabled: true
            id: id
            type: type
            userConsentDisplayName: userConsentDisplayName
            value: value
            adminConsentDescription: adminConsentDescription
          appId: appId
          identifierUris:
          - identifierUris
          - identifierUris
          samlMetadataUrl: samlMetadataUrl
          keyCredentials:
          - customKeyIdentifier: customKeyIdentifier
            endDate: 2000-01-23T04:56:07.000+00:00
            usage: usage
            keyId: keyId
            type: type
            value: value
            startDate: 2000-01-23T04:56:07.000+00:00
          - customKeyIdentifier: customKeyIdentifier
            endDate: 2000-01-23T04:56:07.000+00:00
            usage: usage
            keyId: keyId
            type: type
            value: value
            startDate: 2000-01-23T04:56:07.000+00:00
          publisherDomain: publisherDomain
          oauth2AllowImplicitFlow: true
          isDeviceOnlyAuthSupported: true
          errorUrl: errorUrl
          appPermissions:
          - appPermissions
          - appPermissions
          knownClientApplications:
          - knownClientApplications
          - knownClientApplications
          oauth2AllowUrlPathMatching: true
          requiredResourceAccess:
          - resourceAppId: resourceAppId
            resourceAccess:
            - id: id
              type: type
            - id: id
              type: type
          - resourceAppId: resourceAppId
            resourceAccess:
            - id: id
              type: type
            - id: id
              type: type
          logoutUrl: logoutUrl
          allowGuestsSignIn: true
          appRoles:
          - displayName: displayName
            isEnabled: true
            description: description
            id: id
            allowedMemberTypes:
            - allowedMemberTypes
            - allowedMemberTypes
            value: value
          - displayName: displayName
            isEnabled: true
            description: description
            id: id
            allowedMemberTypes:
            - allowedMemberTypes
            - allowedMemberTypes
            value: value
          homepage: homepage
        odata.nextLink: odata.nextLink
      properties:
        odata.nextLink:
          description: The URL to get the next set of results.
          title: odata.nextLink
          type: string
        value:
          description: A collection of applications.
          items:
            $ref: '#/components/schemas/Application'
          title: value
          type: array
      title: ApplicationListResult
      type: object
    ApplicationUpdateParameters:
      allOf:
      - $ref: '#/components/schemas/ApplicationBase'
      description: Request parameters for updating a new application.
      example:
        displayName: displayName
        identifierUris:
        - identifierUris
        - identifierUris
      properties:
        displayName:
          description: The display name of the application.
          title: displayName
          type: string
        identifierUris:
          description: A collection of URIs for the application.
          items:
            type: string
          title: identifierUris
          type: array
      title: ApplicationUpdateParameters
      type: object
    CheckGroupMembershipParameters:
      additionalProperties:
        type: object
      description: Request parameters for IsMemberOf API call.
      example:
        groupId: groupId
        memberId: memberId
      properties:
        groupId:
          description: The object ID of the group to check.
          type: string
        memberId:
          description: "The object ID of the contact, group, user, or service principal\
            \ to check for membership in the specified group."
          type: string
      required:
      - groupId
      - memberId
      title: CheckGroupMembershipParameters
      type: object
    CheckGroupMembershipResult:
      additionalProperties:
        type: object
      description: Server response for IsMemberOf API call
      example:
        value: true
      properties:
        value:
          description: "True if the specified user, group, contact, or service principal\
            \ has either direct or transitive membership in the specified group; otherwise,\
            \ false."
          type: boolean
      title: CheckGroupMembershipResult
      type: object
    DirectoryObject:
      additionalProperties:
        type: object
      description: Represents an Azure Active Directory object.
      discriminator:
        propertyName: objectType
      example:
        objectId: objectId
        deletionTimestamp: 2000-01-23T04:56:07.000+00:00
        objectType: objectType
      properties:
        deletionTimestamp:
          description: The time at which the directory object was deleted.
          format: date-time
          nullable: true
          readOnly: true
          type: string
        objectId:
          description: The object ID.
          readOnly: true
          type: string
        objectType:
          description: The object type.
          type: string
      required:
      - objectType
      title: DirectoryObject
      type: object
    DirectoryObjectListResult:
      description: DirectoryObject list operation result.
      example:
        value:
        - objectId: objectId
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          objectType: objectType
        - objectId: objectId
          deletionTimestamp: 2000-01-23T04:56:07.000+00:00
          objectType: objectType
        odata.nextLink: odata.nextLink
      properties:
        odata.nextLink:
          description: The URL to get the next set of results.
          title: odata.nextLink
          type: string
        value:
          description: A collection of DirectoryObject.
          items:
            $ref: '#/components/schemas/DirectoryObject'
          title: value
          type: array
      title: DirectoryObjectListResult
      type: object
    Domain:
      additionalProperties:
        type: object
      description: Active Directory Domain information.
      example:
        isDefault: true
        isVerified: true
        name: name
        authenticationType: authenticationType
      properties:
        authenticationType:
          description: the type of the authentication into the domain.
          readOnly: true
          type: string
        isDefault:
          description: if this is the default domain in the tenant.
          readOnly: true
          type: boolean
        isVerified:
          description: if this domain's ownership is verified.
          readOnly: true
          type: boolean
        name:
          description: the domain name.
          type: string
      required:
      - name
      title: Domain
      type: object
    DomainListResult:
      description: Server response for Get tenant domains API call.
      example:
        value:
        - isDefault: true
          isVerified: true
          name: name
          authenticationType: authenticationType
        - isDefault: true
          isVerified: true
          name: name
          authenticationType: authenticationType
      properties:
        value:
          description: the list of domains.
          items:
            $ref: '#/components/schemas/Domain'
          title: value
          type: array
      title: DomainListResult
      type: object
    ErrorMessage:
      description: Active Directory error message.
      example:
        value: value
      properties:
        value:
          description: Error message value.
          title: value
          type: string
          x-ms-client-name: message
      title: ErrorMessage
      type: object
    GetObjectsParameters:
      additionalProperties:
        type: object
      description: Request parameters for the GetObjectsByObjectIds API.
      example:
        types:
        - types
        - types
        includeDirectoryObjectReferences: true
        objectIds:
        - objectIds
        - objectIds
      properties:
        includeDirectoryObjectReferences:
          description: "If true, also searches for object IDs in the partner tenant."
          type: boolean
        objectIds:
          description: The requested object IDs.
          items:
            type: string
          type: array
        types:
          description: The requested object types.
          items:
            type: string
          type: array
      title: GetObjectsParameters
      type: object
    GraphError:
      description: Active Directory error information.
      example:
        odata.error:
          code: code
          message:
            value: value
      properties:
        odata.error:
          $ref: '#/components/schemas/OdataError'
      title: GraphError
      type: object
    GroupAddMemberParameters:
      additionalProperties:
        type: object
      description: Request parameters for adding a member to a group.
      example:
        url: url
      properties:
        url:
          description: "A member object URL, such as \"https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd\"\
            , where \"0b1f9851-1bf0-433f-aec3-cb9272f093dc\" is the tenantId and \"\
            f260bbc4-c254-447b-94cf-293b5ec434dd\" is the objectId of the member (user,\
            \ application, servicePrincipal, group) to be added."
          type: string
      required:
      - url
      title: GroupAddMemberParameters
      type: object
    GroupCreateParameters:
      additionalProperties:
        type: object
      description: Request parameters for creating a new group.
      example:
        displayName: displayName
        mailEnabled: true
        securityEnabled: true
        mailNickname: mailNickname
      properties:
        displayName:
          description: Group display name
          type: string
        mailEnabled:
          description: Whether the group is mail-enabled. Must be false. This is because
            only pure security groups can be created using the Graph API.
          enum:
          - false
          type: boolean
        mailNickname:
          description: Mail nickname
          type: string
        securityEnabled:
          description: Whether the group is a security group. Must be true. This is
            because only pure security groups can be created using the Graph API.
          enum:
          - true
          type: boolean
      required:
      - displayName
      - mailEnabled
      - mailNickname
      - securityEnabled
      title: GroupCreateParameters
      type: object
    GroupGetMemberGroupsParameters:
      additionalProperties:
        type: object
      description: Request parameters for GetMemberGroups API call.
      example:
        securityEnabledOnly: true
      properties:
        securityEnabledOnly:
          description: "If true, only membership in security-enabled groups should\
            \ be checked. Otherwise, membership in all groups should be checked."
          type: boolean
      required:
      - securityEnabledOnly
      title: GroupGetMemberGroupsParameters
      type: object
    GroupGetMemberGroupsResult:
      description: Server response for GetMemberGroups API call.
      example:
        value:
        - value
        - value
      properties:
        value:
          description: A collection of group IDs of which the group is a member.
          items:
            type: string
          title: value
          type: array
      title: GroupGetMemberGroupsResult
      type: object
    GroupListResult:
      description: Server response for Get tenant groups API call
      example:
        value:
        - mail: mail
          displayName: displayName
          mailEnabled: true
          securityEnabled: true
          mailNickname: mailNickname
        - mail: mail
          displayName: displayName
          mailEnabled: true
          securityEnabled: true
          mailNickname: mailNickname
        odata.nextLink: odata.nextLink
      properties:
        odata.nextLink:
          description: The URL to get the next set of results.
          title: odata.nextLink
          type: string
        value:
          description: A collection of Active Directory groups.
          items:
            $ref: '#/components/schemas/ADGroup'
          title: value
          type: array
      title: GroupListResult
      type: object
    GroupMembershipClaims:
      description: Configures the groups claim issued in a user or OAuth 2.0 access
        token that the app expects.
      enum:
      - None
      - SecurityGroup
      - All
      title: GroupMembershipClaims
      type: string
      x-ms-enum:
        modelAsString: true
        name: GroupMembershipClaimTypes
    InformationalUrl:
      description: "Represents a group of URIs that provide terms of service, marketing,\
        \ support and privacy policy information about an application. The default\
        \ value for each string is null."
      example:
        marketing: marketing
        privacy: privacy
        termsOfService: termsOfService
        support: support
      properties:
        marketing:
          description: The marketing URI
          title: marketing
          type: string
        privacy:
          description: The privacy policy URI
          title: privacy
          type: string
        support:
          description: The support URI
          title: support
          type: string
        termsOfService:
          description: The terms of service URI
          title: termsOfService
          type: string
      title: InformationalUrl
      type: object
    KeyCredential:
      additionalProperties:
        type: object
      description: Active Directory Key Credential information.
      example:
        customKeyIdentifier: customKeyIdentifier
        endDate: 2000-01-23T04:56:07.000+00:00
        usage: usage
        keyId: keyId
        type: type
        value: value
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        customKeyIdentifier:
          description: Custom Key Identifier
          type: string
        endDate:
          description: End date.
          format: date-time
          type: string
        keyId:
          description: Key ID.
          type: string
        startDate:
          description: Start date.
          format: date-time
          type: string
        type:
          description: Type. Acceptable values are 'AsymmetricX509Cert' and 'Symmetric'.
          type: string
        usage:
          description: Usage. Acceptable values are 'Verify' and 'Sign'.
          type: string
        value:
          description: Key value.
          type: string
      title: KeyCredential
      type: object
    KeyCredentialListResult:
      description: KeyCredential list operation result.
      example:
        value:
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          usage: usage
          keyId: keyId
          type: type
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          usage: usage
          keyId: keyId
          type: type
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        value:
          description: A collection of KeyCredentials.
          items:
            $ref: '#/components/schemas/KeyCredential'
          title: value
          type: array
      title: KeyCredentialListResult
      type: object
    KeyCredentialsUpdateParameters:
      description: Request parameters for a KeyCredentials update operation
      example:
        value:
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          usage: usage
          keyId: keyId
          type: type
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          usage: usage
          keyId: keyId
          type: type
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        value:
          description: A collection of KeyCredentials.
          items:
            $ref: '#/components/schemas/KeyCredential'
          title: value
          type: array
      required:
      - value
      title: KeyCredentialsUpdateParameters
      type: object
    OAuth2Permission:
      description: Represents an OAuth 2.0 delegated permission scope. The specified
        OAuth 2.0 delegated permission scopes may be requested by client applications
        (through the requiredResourceAccess collection on the Application object)
        when calling a resource application. The oauth2Permissions property of the
        ServicePrincipal entity and of the Application entity is a collection of OAuth2Permission.
      example:
        userConsentDescription: userConsentDescription
        adminConsentDisplayName: adminConsentDisplayName
        isEnabled: true
        id: id
        type: type
        userConsentDisplayName: userConsentDisplayName
        value: value
        adminConsentDescription: adminConsentDescription
      properties:
        adminConsentDescription:
          description: Permission help text that appears in the admin consent and
            app assignment experiences.
          title: adminConsentDescription
          type: string
        adminConsentDisplayName:
          description: Display name for the permission that appears in the admin consent
            and app assignment experiences.
          title: adminConsentDisplayName
          type: string
        id:
          description: Unique scope permission identifier inside the oauth2Permissions
            collection.
          title: id
          type: string
        isEnabled:
          description: "When creating or updating a permission, this property must\
            \ be set to true (which is the default). To delete a permission, this\
            \ property must first be set to false. At that point, in a subsequent\
            \ call, the permission may be removed. "
          title: isEnabled
          type: boolean
        type:
          description: "Specifies whether this scope permission can be consented to\
            \ by an end user, or whether it is a tenant-wide permission that must\
            \ be consented to by a Company Administrator. Possible values are \"User\"\
            \ or \"Admin\"."
          title: type
          type: string
        userConsentDescription:
          description: Permission help text that appears in the end user consent experience.
          title: userConsentDescription
          type: string
        userConsentDisplayName:
          description: Display name for the permission that appears in the end user
            consent experience.
          title: userConsentDisplayName
          type: string
        value:
          description: The value of the scope claim that the resource application
            should expect in the OAuth 2.0 access token.
          title: value
          type: string
      title: OAuth2Permission
      type: object
    OAuth2PermissionGrant:
      example:
        clientId: clientId
        consentType: consentType
        expiryTime: expiryTime
        odata.type: odata.type
        principalId: ""
        resourceId: resourceId
        scope: scope
        startTime: startTime
      properties:
        clientId:
          description: The id of the resource's service principal granted consent
            to impersonate the user when accessing the resource (represented by the
            resourceId property).
          type: string
        consentType:
          description: Indicates if consent was provided by the administrator (on
            behalf of the organization) or by an individual.
          enum:
          - AllPrincipals
          - Principal
          type: string
          x-ms-enum:
            modelAsString: true
            name: ConsentType
        expiryTime:
          description: Expiry time for TTL
          type: string
        objectId:
          description: The id of the permission grant
          type: string
        odata.type:
          description: Microsoft.DirectoryServices.OAuth2PermissionGrant
          type: string
        principalId:
          description: "When consent type is Principal, this property specifies the\
            \ id of the user that granted consent and applies only for that user."
          type: string
        resourceId:
          description: Object Id of the resource you want to grant
          type: string
        scope:
          description: "Specifies the value of the scope claim that the resource application\
            \ should expect in the OAuth 2.0 access token. For example, User.Read"
          type: string
        startTime:
          description: Start time for TTL
          type: string
      title: OAuth2PermissionGrant
    OAuth2PermissionGrantListResult:
      description: Server response for get oauth2 permissions grants
      example:
        value:
        - clientId: clientId
          consentType: consentType
          expiryTime: expiryTime
          odata.type: odata.type
          principalId: ""
          resourceId: resourceId
          scope: scope
          startTime: startTime
        - clientId: clientId
          consentType: consentType
          expiryTime: expiryTime
          odata.type: odata.type
          principalId: ""
          resourceId: resourceId
          scope: scope
          startTime: startTime
        odata.nextLink: odata.nextLink
      properties:
        odata.nextLink:
          description: the URL to get the next set of results.
          title: odata.nextLink
          type: string
        value:
          description: the list of oauth2 permissions grants
          items:
            $ref: '#/components/schemas/OAuth2PermissionGrant'
          title: value
          type: array
      title: OAuth2PermissionGrantListResult
      type: object
    OdataError:
      description: Active Directory OData error information.
      example:
        code: code
        message:
          value: value
      properties:
        code:
          description: Error code.
          title: code
          type: string
        message:
          $ref: '#/components/schemas/ErrorMessage'
      title: OdataError
      type: object
    OptionalClaim:
      description: Specifying the claims to be included in a token.
      example:
        name: name
        additionalProperties: "{}"
        source: source
        essential: true
      properties:
        additionalProperties:
          title: additionalProperties
          type: object
        essential:
          description: Is this a required claim.
          title: essential
          type: boolean
        name:
          description: Claim name.
          title: name
          type: string
        source:
          description: Claim source.
          title: source
          type: string
      title: OptionalClaim
      type: object
    OptionalClaims:
      description: Specifying the claims to be included in the token.
      example:
        idToken:
        - name: name
          additionalProperties: "{}"
          source: source
          essential: true
        - name: name
          additionalProperties: "{}"
          source: source
          essential: true
        samlToken:
        - name: name
          additionalProperties: "{}"
          source: source
          essential: true
        - name: name
          additionalProperties: "{}"
          source: source
          essential: true
        accessToken:
        - name: name
          additionalProperties: "{}"
          source: source
          essential: true
        - name: name
          additionalProperties: "{}"
          source: source
          essential: true
      properties:
        accessToken:
          description: Optional claims requested to be included in the access token.
          items:
            $ref: '#/components/schemas/OptionalClaim'
          title: accessToken
          type: array
        idToken:
          description: Optional claims requested to be included in the id token.
          items:
            $ref: '#/components/schemas/OptionalClaim'
          title: idToken
          type: array
        samlToken:
          description: Optional claims requested to be included in the saml token.
          items:
            $ref: '#/components/schemas/OptionalClaim'
          title: samlToken
          type: array
      title: OptionalClaims
      type: object
    PasswordCredential:
      additionalProperties:
        type: object
      description: Active Directory Password Credential information.
      example:
        customKeyIdentifier: customKeyIdentifier
        endDate: 2000-01-23T04:56:07.000+00:00
        keyId: keyId
        value: value
        startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        customKeyIdentifier:
          description: Custom Key Identifier
          format: byte
          type: string
        endDate:
          description: End date.
          format: date-time
          type: string
        keyId:
          description: Key ID.
          type: string
        startDate:
          description: Start date.
          format: date-time
          type: string
        value:
          description: Key value.
          type: string
      title: PasswordCredential
      type: object
    PasswordCredentialListResult:
      description: PasswordCredential list operation result.
      example:
        value:
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          keyId: keyId
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          keyId: keyId
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        value:
          description: A collection of PasswordCredentials.
          items:
            $ref: '#/components/schemas/PasswordCredential'
          title: value
          type: array
      title: PasswordCredentialListResult
      type: object
    PasswordCredentialsUpdateParameters:
      description: Request parameters for a PasswordCredentials update operation.
      example:
        value:
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          keyId: keyId
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          keyId: keyId
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
      properties:
        value:
          description: A collection of PasswordCredentials.
          items:
            $ref: '#/components/schemas/PasswordCredential'
          title: value
          type: array
      required:
      - value
      title: PasswordCredentialsUpdateParameters
      type: object
    PasswordProfile:
      additionalProperties:
        type: object
      description: The password profile associated with a user.
      example:
        password: password
        forceChangePasswordNextLogin: true
      properties:
        forceChangePasswordNextLogin:
          description: Whether to force a password change on next login.
          type: boolean
        password:
          description: Password
          type: string
      required:
      - password
      title: PasswordProfile
      type: object
    PreAuthorizedApplication:
      description: Contains information about pre authorized client application.
      example:
        extensions:
        - conditions:
          - conditions
          - conditions
        - conditions:
          - conditions
          - conditions
        permissions:
        - directAccessGrant: true
          accessGrants:
          - accessGrants
          - accessGrants
        - directAccessGrant: true
          accessGrants:
          - accessGrants
          - accessGrants
        appId: appId
      properties:
        appId:
          description: Represents the application id.
          title: appId
          type: string
        extensions:
          description: Collection of extensions from the resource application.
          items:
            $ref: '#/components/schemas/PreAuthorizedApplicationExtension'
          title: extensions
          type: array
        permissions:
          description: Collection of required app permissions/entitlements from the
            resource application.
          items:
            $ref: '#/components/schemas/PreAuthorizedApplicationPermission'
          title: permissions
          type: array
      title: PreAuthorizedApplication
      type: object
    PreAuthorizedApplicationExtension:
      description: Representation of an app PreAuthorizedApplicationExtension required
        by a pre authorized client app.
      example:
        conditions:
        - conditions
        - conditions
      properties:
        conditions:
          description: The extension's conditions.
          items:
            type: string
          title: conditions
          type: array
      title: PreAuthorizedApplicationExtension
      type: object
    PreAuthorizedApplicationPermission:
      description: Contains information about the pre-authorized permissions.
      example:
        directAccessGrant: true
        accessGrants:
        - accessGrants
        - accessGrants
      properties:
        accessGrants:
          description: The list of permissions.
          items:
            type: string
          title: accessGrants
          type: array
        directAccessGrant:
          description: Indicates whether the permission set is DirectAccess or impersonation.
          title: directAccessGrant
          type: boolean
      title: PreAuthorizedApplicationPermission
      type: object
    RequiredResourceAccess:
      additionalProperties:
        type: object
      description: Specifies the set of OAuth 2.0 permission scopes and app roles
        under the specified resource that an application requires access to. The specified
        OAuth 2.0 permission scopes may be requested by client applications (through
        the requiredResourceAccess collection) when calling a resource application.
        The requiredResourceAccess property of the Application entity is a collection
        of RequiredResourceAccess.
      example:
        resourceAppId: resourceAppId
        resourceAccess:
        - id: id
          type: type
        - id: id
          type: type
      properties:
        resourceAccess:
          description: The list of OAuth2.0 permission scopes and app roles that the
            application requires from the specified resource.
          items:
            $ref: '#/components/schemas/ResourceAccess'
          type: array
        resourceAppId:
          description: The unique identifier for the resource that the application
            requires access to. This should be equal to the appId declared on the
            target resource application.
          type: string
      required:
      - resourceAccess
      title: RequiredResourceAccess
      type: object
    ResourceAccess:
      additionalProperties:
        type: object
      description: Specifies an OAuth 2.0 permission scope or an app role that an
        application requires. The resourceAccess property of the RequiredResourceAccess
        type is a collection of ResourceAccess.
      example:
        id: id
        type: type
      properties:
        id:
          description: The unique identifier for one of the OAuth2Permission or AppRole
            instances that the resource application exposes.
          type: string
        type:
          description: Specifies whether the id property references an OAuth2Permission
            or an AppRole. Possible values are "scope" or "role".
          type: string
      required:
      - id
      title: ResourceAccess
      type: object
    ServicePrincipal:
      allOf:
      - $ref: '#/components/schemas/DirectoryObject'
      description: Active Directory service principal information.
      example:
        servicePrincipalType: servicePrincipalType
        samlMetadataUrl: samlMetadataUrl
        preferredTokenSigningKeyThumbprint: preferredTokenSigningKeyThumbprint
        keyCredentials:
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          usage: usage
          keyId: keyId
          type: type
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          usage: usage
          keyId: keyId
          type: type
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
        appDisplayName: appDisplayName
        displayName: displayName
        replyUrls:
        - replyUrls
        - replyUrls
        appOwnerTenantId: appOwnerTenantId
        accountEnabled: true
        passwordCredentials:
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          keyId: keyId
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          keyId: keyId
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
        tags:
        - tags
        - tags
        alternativeNames:
        - alternativeNames
        - alternativeNames
        errorUrl: errorUrl
        appRoleAssignmentRequired: true
        oauth2Permissions:
        - userConsentDescription: userConsentDescription
          adminConsentDisplayName: adminConsentDisplayName
          isEnabled: true
          id: id
          type: type
          userConsentDisplayName: userConsentDisplayName
          value: value
          adminConsentDescription: adminConsentDescription
        - userConsentDescription: userConsentDescription
          adminConsentDisplayName: adminConsentDisplayName
          isEnabled: true
          id: id
          type: type
          userConsentDisplayName: userConsentDisplayName
          value: value
          adminConsentDescription: adminConsentDescription
        logoutUrl: logoutUrl
        publisherName: publisherName
        servicePrincipalNames:
        - servicePrincipalNames
        - servicePrincipalNames
        appId: appId
        appRoles:
        - displayName: displayName
          isEnabled: true
          description: description
          id: id
          allowedMemberTypes:
          - allowedMemberTypes
          - allowedMemberTypes
          value: value
        - displayName: displayName
          isEnabled: true
          description: description
          id: id
          allowedMemberTypes:
          - allowedMemberTypes
          - allowedMemberTypes
          value: value
        homepage: homepage
      properties:
        accountEnabled:
          description: whether or not the service principal account is enabled
          title: accountEnabled
          type: boolean
        alternativeNames:
          description: alternative names
          items:
            type: string
          title: alternativeNames
          type: array
        appDisplayName:
          description: The display name exposed by the associated application.
          readOnly: true
          title: appDisplayName
          type: string
        appId:
          description: The application ID.
          title: appId
          type: string
        appOwnerTenantId:
          readOnly: true
          title: appOwnerTenantId
          type: string
        appRoleAssignmentRequired:
          description: Specifies whether an AppRoleAssignment to a user or group is
            required before Azure AD will issue a user or access token to the application.
          title: appRoleAssignmentRequired
          type: boolean
        appRoles:
          description: "The collection of application roles that an application may\
            \ declare. These roles can be assigned to users, groups or service principals."
          items:
            $ref: '#/components/schemas/AppRole'
          title: appRoles
          type: array
        displayName:
          description: The display name of the service principal.
          title: displayName
          type: string
        errorUrl:
          description: A URL provided by the author of the associated application
            to report errors when using the application.
          title: errorUrl
          type: string
        homepage:
          description: The URL to the homepage of the associated application.
          title: homepage
          type: string
        keyCredentials:
          description: The collection of key credentials associated with the service
            principal.
          items:
            $ref: '#/components/schemas/KeyCredential'
          title: keyCredentials
          type: array
        logoutUrl:
          description: A URL provided by the author of the associated application
            to logout
          title: logoutUrl
          type: string
        oauth2Permissions:
          description: The OAuth 2.0 permissions exposed by the associated application.
          items:
            $ref: '#/components/schemas/OAuth2Permission'
          readOnly: true
          title: oauth2Permissions
          type: array
        passwordCredentials:
          description: The collection of password credentials associated with the
            service principal.
          items:
            $ref: '#/components/schemas/PasswordCredential'
          title: passwordCredentials
          type: array
        preferredTokenSigningKeyThumbprint:
          description: The thumbprint of preferred certificate to sign the token
          title: preferredTokenSigningKeyThumbprint
          type: string
        publisherName:
          description: The publisher's name of the associated application
          title: publisherName
          type: string
        replyUrls:
          description: The URLs that user tokens are sent to for sign in with the
            associated application.  The redirect URIs that the oAuth 2.0 authorization
            code and access tokens are sent to for the associated application.
          items:
            type: string
          title: replyUrls
          type: array
        samlMetadataUrl:
          description: The URL to the SAML metadata of the associated application
          title: samlMetadataUrl
          type: string
        servicePrincipalNames:
          description: A collection of service principal names.
          items:
            type: string
          title: servicePrincipalNames
          type: array
        servicePrincipalType:
          description: the type of the service principal
          title: servicePrincipalType
          type: string
        tags:
          description: Optional list of tags that you can apply to your service principals.
            Not nullable.
          items:
            type: string
          title: tags
          type: array
      title: ServicePrincipal
      type: object
    ServicePrincipalBase:
      description: "Active Directory service principal common properties shared among\
        \ GET, POST and PATCH"
      properties:
        accountEnabled:
          description: whether or not the service principal account is enabled
          title: accountEnabled
          type: boolean
        appRoleAssignmentRequired:
          description: Specifies whether an AppRoleAssignment to a user or group is
            required before Azure AD will issue a user or access token to the application.
          title: appRoleAssignmentRequired
          type: boolean
        keyCredentials:
          description: The collection of key credentials associated with the service
            principal.
          items:
            $ref: '#/components/schemas/KeyCredential'
          title: keyCredentials
          type: array
        passwordCredentials:
          description: The collection of password credentials associated with the
            service principal.
          items:
            $ref: '#/components/schemas/PasswordCredential'
          title: passwordCredentials
          type: array
        servicePrincipalType:
          description: the type of the service principal
          title: servicePrincipalType
          type: string
        tags:
          description: Optional list of tags that you can apply to your service principals.
            Not nullable.
          items:
            type: string
          title: tags
          type: array
      title: ServicePrincipalBase
      type: object
    ServicePrincipalCreateParameters:
      allOf:
      - $ref: '#/components/schemas/ServicePrincipalBase'
      description: Request parameters for creating a new service principal.
      example:
        appId: appId
      properties:
        appId:
          description: The application ID.
          title: appId
          type: string
      required:
      - appId
      title: ServicePrincipalCreateParameters
      type: object
    ServicePrincipalListResult:
      description: Server response for get tenant service principals API call.
      example:
        value:
        - servicePrincipalType: servicePrincipalType
          samlMetadataUrl: samlMetadataUrl
          preferredTokenSigningKeyThumbprint: preferredTokenSigningKeyThumbprint
          keyCredentials:
          - customKeyIdentifier: customKeyIdentifier
            endDate: 2000-01-23T04:56:07.000+00:00
            usage: usage
            keyId: keyId
            type: type
            value: value
            startDate: 2000-01-23T04:56:07.000+00:00
          - customKeyIdentifier: customKeyIdentifier
            endDate: 2000-01-23T04:56:07.000+00:00
            usage: usage
            keyId: keyId
            type: type
            value: value
            startDate: 2000-01-23T04:56:07.000+00:00
          appDisplayName: appDisplayName
          displayName: displayName
          replyUrls:
          - replyUrls
          - replyUrls
          appOwnerTenantId: appOwnerTenantId
          accountEnabled: true
          passwordCredentials:
          - customKeyIdentifier: customKeyIdentifier
            endDate: 2000-01-23T04:56:07.000+00:00
            keyId: keyId
            value: value
            startDate: 2000-01-23T04:56:07.000+00:00
          - customKeyIdentifier: customKeyIdentifier
            endDate: 2000-01-23T04:56:07.000+00:00
            keyId: keyId
            value: value
            startDate: 2000-01-23T04:56:07.000+00:00
          tags:
          - tags
          - tags
          alternativeNames:
          - alternativeNames
          - alternativeNames
          errorUrl: errorUrl
          appRoleAssignmentRequired: true
          oauth2Permissions:
          - userConsentDescription: userConsentDescription
            adminConsentDisplayName: adminConsentDisplayName
            isEnabled: true
            id: id
            type: type
            userConsentDisplayName: userConsentDisplayName
            value: value
            adminConsentDescription: adminConsentDescription
          - userConsentDescription: userConsentDescription
            adminConsentDisplayName: adminConsentDisplayName
            isEnabled: true
            id: id
            type: type
            userConsentDisplayName: userConsentDisplayName
            value: value
            adminConsentDescription: adminConsentDescription
          logoutUrl: logoutUrl
          publisherName: publisherName
          servicePrincipalNames:
          - servicePrincipalNames
          - servicePrincipalNames
          appId: appId
          appRoles:
          - displayName: displayName
            isEnabled: true
            description: description
            id: id
            allowedMemberTypes:
            - allowedMemberTypes
            - allowedMemberTypes
            value: value
          - displayName: displayName
            isEnabled: true
            description: description
            id: id
            allowedMemberTypes:
            - allowedMemberTypes
            - allowedMemberTypes
            value: value
          homepage: homepage
        - servicePrincipalType: servicePrincipalType
          samlMetadataUrl: samlMetadataUrl
          preferredTokenSigningKeyThumbprint: preferredTokenSigningKeyThumbprint
          keyCredentials:
          - customKeyIdentifier: customKeyIdentifier
            endDate: 2000-01-23T04:56:07.000+00:00
            usage: usage
            keyId: keyId
            type: type
            value: value
            startDate: 2000-01-23T04:56:07.000+00:00
          - customKeyIdentifier: customKeyIdentifier
            endDate: 2000-01-23T04:56:07.000+00:00
            usage: usage
            keyId: keyId
            type: type
            value: value
            startDate: 2000-01-23T04:56:07.000+00:00
          appDisplayName: appDisplayName
          displayName: displayName
          replyUrls:
          - replyUrls
          - replyUrls
          appOwnerTenantId: appOwnerTenantId
          accountEnabled: true
          passwordCredentials:
          - customKeyIdentifier: customKeyIdentifier
            endDate: 2000-01-23T04:56:07.000+00:00
            keyId: keyId
            value: value
            startDate: 2000-01-23T04:56:07.000+00:00
          - customKeyIdentifier: customKeyIdentifier
            endDate: 2000-01-23T04:56:07.000+00:00
            keyId: keyId
            value: value
            startDate: 2000-01-23T04:56:07.000+00:00
          tags:
          - tags
          - tags
          alternativeNames:
          - alternativeNames
          - alternativeNames
          errorUrl: errorUrl
          appRoleAssignmentRequired: true
          oauth2Permissions:
          - userConsentDescription: userConsentDescription
            adminConsentDisplayName: adminConsentDisplayName
            isEnabled: true
            id: id
            type: type
            userConsentDisplayName: userConsentDisplayName
            value: value
            adminConsentDescription: adminConsentDescription
          - userConsentDescription: userConsentDescription
            adminConsentDisplayName: adminConsentDisplayName
            isEnabled: true
            id: id
            type: type
            userConsentDisplayName: userConsentDisplayName
            value: value
            adminConsentDescription: adminConsentDescription
          logoutUrl: logoutUrl
          publisherName: publisherName
          servicePrincipalNames:
          - servicePrincipalNames
          - servicePrincipalNames
          appId: appId
          appRoles:
          - displayName: displayName
            isEnabled: true
            description: description
            id: id
            allowedMemberTypes:
            - allowedMemberTypes
            - allowedMemberTypes
            value: value
          - displayName: displayName
            isEnabled: true
            description: description
            id: id
            allowedMemberTypes:
            - allowedMemberTypes
            - allowedMemberTypes
            value: value
          homepage: homepage
        odata.nextLink: odata.nextLink
      properties:
        odata.nextLink:
          description: the URL to get the next set of results.
          title: odata.nextLink
          type: string
        value:
          description: the list of service principals.
          items:
            $ref: '#/components/schemas/ServicePrincipal'
          title: value
          type: array
      title: ServicePrincipalListResult
      type: object
    ServicePrincipalObjectResult:
      description: Service Principal Object Result.
      example:
        odata.metadata: odata.metadata
        value: value
      properties:
        odata.metadata:
          description: The URL representing edm equivalent.
          title: odata.metadata
          type: string
        value:
          description: The Object ID of the service principal with the specified application
            ID.
          title: value
          type: string
      title: ServicePrincipalObjectResult
      type: object
    ServicePrincipalUpdateParameters:
      allOf:
      - $ref: '#/components/schemas/ServicePrincipalBase'
      description: Request parameters for update an existing service principal.
      example:
        servicePrincipalType: servicePrincipalType
        keyCredentials:
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          usage: usage
          keyId: keyId
          type: type
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          usage: usage
          keyId: keyId
          type: type
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
        appRoleAssignmentRequired: true
        accountEnabled: true
        passwordCredentials:
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          keyId: keyId
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
        - customKeyIdentifier: customKeyIdentifier
          endDate: 2000-01-23T04:56:07.000+00:00
          keyId: keyId
          value: value
          startDate: 2000-01-23T04:56:07.000+00:00
        tags:
        - tags
        - tags
      title: ServicePrincipalUpdateParameters
      type: object
    SignInName:
      additionalProperties:
        type: object
      description: Contains information about a sign-in name of a local account user
        in an Azure Active Directory B2C tenant.
      example:
        type: type
        value: value
      properties:
        type:
          description: "A string value that can be used to classify user sign-in types\
            \ in your directory, such as 'emailAddress' or 'userName'."
          type: string
        value:
          description: "The sign-in used by the local account. Must be unique across\
            \ the company/tenant. For example, 'johnc@example.com'."
          type: string
      title: SignInName
      type: object
    User:
      allOf:
      - $ref: '#/components/schemas/DirectoryObject'
      description: Active Directory user information.
      example:
        immutableId: immutableId
        mail: mail
        displayName: displayName
        surname: surname
        givenName: givenName
        usageLocation: usageLocation
        userType: Member
        signInNames:
        - type: type
          value: value
        - type: type
          value: value
        accountEnabled: true
        userPrincipalName: userPrincipalName
        mailNickname: mailNickname
      properties:
        accountEnabled:
          description: Whether the account is enabled.
          title: accountEnabled
          type: boolean
        displayName:
          description: The display name of the user.
          title: displayName
          type: string
        givenName:
          description: The given name for the user.
          title: givenName
          type: string
        immutableId:
          description: This must be specified if you are using a federated domain
            for the user's userPrincipalName (UPN) property when creating a new user
            account. It is used to associate an on-premises Active Directory user
            account with their Azure AD user object.
          title: immutableId
          type: string
        mail:
          description: The primary email address of the user.
          title: mail
          type: string
        mailNickname:
          description: The mail alias for the user.
          title: mailNickname
          type: string
        signInNames:
          description: The sign-in names of the user.
          items:
            $ref: '#/components/schemas/SignInName'
          title: signInNames
          type: array
        surname:
          description: The user's surname (family name or last name).
          title: surname
          type: string
        usageLocation:
          description: "A two letter country code (ISO standard 3166). Required for\
            \ users that will be assigned licenses due to legal requirement to check\
            \ for availability of services in countries. Examples include: \"US\"\
            , \"JP\", and \"GB\"."
          title: usageLocation
          type: string
        userPrincipalName:
          description: The principal name of the user.
          title: userPrincipalName
          type: string
        userType:
          description: "A string value that can be used to classify user types in\
            \ your directory, such as 'Member' and 'Guest'."
          enum:
          - Member
          - Guest
          title: userType
          type: string
          x-ms-enum:
            modelAsString: true
            name: UserType
      title: User
      type: object
    UserBase:
      additionalProperties:
        type: object
      properties:
        givenName:
          description: The given name for the user.
          type: string
        immutableId:
          description: This must be specified if you are using a federated domain
            for the user's userPrincipalName (UPN) property when creating a new user
            account. It is used to associate an on-premises Active Directory user
            account with their Azure AD user object.
          type: string
        surname:
          description: The user's surname (family name or last name).
          type: string
        usageLocation:
          description: "A two letter country code (ISO standard 3166). Required for\
            \ users that will be assigned licenses due to legal requirement to check\
            \ for availability of services in countries. Examples include: \"US\"\
            , \"JP\", and \"GB\"."
          type: string
        userType:
          description: "A string value that can be used to classify user types in\
            \ your directory, such as 'Member' and 'Guest'."
          enum:
          - Member
          - Guest
          type: string
          x-ms-enum:
            modelAsString: true
            name: UserType
      title: UserBase
      type: object
    UserCreateParameters:
      allOf:
      - $ref: '#/components/schemas/UserBase'
      description: Request parameters for creating a new work or school account user.
      example:
        passwordProfile:
          password: password
          forceChangePasswordNextLogin: true
        mail: mail
        displayName: displayName
        accountEnabled: true
        userPrincipalName: userPrincipalName
        mailNickname: mailNickname
      properties:
        accountEnabled:
          description: Whether the account is enabled.
          title: accountEnabled
          type: boolean
        displayName:
          description: The display name of the user.
          title: displayName
          type: string
        mail:
          description: The primary email address of the user.
          title: mail
          type: string
        mailNickname:
          description: The mail alias for the user.
          title: mailNickname
          type: string
        passwordProfile:
          $ref: '#/components/schemas/PasswordProfile'
        userPrincipalName:
          description: The user principal name (someuser@contoso.com). It must contain
            one of the verified domains for the tenant.
          title: userPrincipalName
          type: string
      required:
      - accountEnabled
      - displayName
      - mailNickname
      - passwordProfile
      - userPrincipalName
      title: UserCreateParameters
      type: object
    UserGetMemberGroupsParameters:
      additionalProperties:
        type: object
      description: Request parameters for GetMemberGroups API call.
      example:
        securityEnabledOnly: true
      properties:
        securityEnabledOnly:
          description: "If true, only membership in security-enabled groups should\
            \ be checked. Otherwise, membership in all groups should be checked."
          type: boolean
      required:
      - securityEnabledOnly
      title: UserGetMemberGroupsParameters
      type: object
    UserGetMemberGroupsResult:
      description: Server response for GetMemberGroups API call.
      example:
        value:
        - value
        - value
      properties:
        value:
          description: A collection of group IDs of which the user is a member.
          items:
            type: string
          title: value
          type: array
      title: UserGetMemberGroupsResult
      type: object
    UserListResult:
      description: Server response for Get tenant users API call.
      example:
        value:
        - immutableId: immutableId
          mail: mail
          displayName: displayName
          surname: surname
          givenName: givenName
          usageLocation: usageLocation
          userType: Member
          signInNames:
          - type: type
            value: value
          - type: type
            value: value
          accountEnabled: true
          userPrincipalName: userPrincipalName
          mailNickname: mailNickname
        - immutableId: immutableId
          mail: mail
          displayName: displayName
          surname: surname
          givenName: givenName
          usageLocation: usageLocation
          userType: Member
          signInNames:
          - type: type
            value: value
          - type: type
            value: value
          accountEnabled: true
          userPrincipalName: userPrincipalName
          mailNickname: mailNickname
        odata.nextLink: odata.nextLink
      properties:
        odata.nextLink:
          description: The URL to get the next set of results.
          title: odata.nextLink
          type: string
        value:
          description: the list of users.
          items:
            $ref: '#/components/schemas/User'
          title: value
          type: array
      title: UserListResult
      type: object
    UserUpdateParameters:
      allOf:
      - $ref: '#/components/schemas/UserBase'
      description: Request parameters for updating an existing work or school account
        user.
      example:
        passwordProfile:
          password: password
          forceChangePasswordNextLogin: true
        mail: mail
        displayName: displayName
        accountEnabled: true
        userPrincipalName: userPrincipalName
        mailNickname: mailNickname
      properties:
        accountEnabled:
          description: Whether the account is enabled.
          title: accountEnabled
          type: boolean
        displayName:
          description: The display name of the user.
          title: displayName
          type: string
        mail:
          description: The primary email address of the user.
          title: mail
          type: string
        mailNickname:
          description: The mail alias for the user.
          title: mailNickname
          type: string
        passwordProfile:
          $ref: '#/components/schemas/PasswordProfile'
        userPrincipalName:
          description: The user principal name (someuser@contoso.com). It must contain
            one of the verified domains for the tenant.
          title: userPrincipalName
          type: string
      title: UserUpdateParameters
      type: object
  securitySchemes:
    azure_auth:
      description: Azure Active Directory OAuth2 Flow
      flows:
        implicit:
          authorizationUrl: https://login.microsoftonline.com/common/oauth2/authorize
          scopes:
            user_impersonation: impersonate your user account
      type: oauth2
      x-tokenInfoFunc: openapi_server.controllers.security_controller.info_from_azure_auth
      x-scopeValidateFunc: openapi_server.controllers.security_controller.validate_scope_azure_auth
x-ms-paths:
  /{tenantID}/{nextLink}?Applications_ListNext:
    get:
      description: Gets a list of applications from the current tenant.
      operationId: Applications_ListNext
      parameters:
      - description: Next link for the list operation.
        in: path
        name: nextLink
        required: true
        schema:
          type: string
        x-ms-skip-url-encoding: true
      - $ref: '#/components/parameters/ApiVersionParameter'
      - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ApplicationListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - Applications
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Applications_ListNext
  /{tenantID}/{nextLink}?DeletedApplications_ListNext:
    get:
      description: Gets a list of deleted applications in the directory.
      operationId: DeletedApplications_ListNext
      parameters:
      - description: Next link for the list operation.
        in: path
        name: nextLink
        required: true
        schema:
          type: string
        x-ms-skip-url-encoding: true
      - $ref: '#/components/parameters/ApiVersionParameter'
      - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ApplicationListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - deletedApplications
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: DeletedApplications_ListNext
  /{tenantID}/{nextLink}?Groups_GetGroupMembersNext:
    get:
      description: Gets the members of a group.
      operationId: Groups_GetGroupMembersNext
      parameters:
      - description: Next link for the list operation.
        in: path
        name: nextLink
        required: true
        schema:
          type: string
        x-ms-skip-url-encoding: true
      - $ref: '#/components/parameters/ApiVersionParameter'
      - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryObjectListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/DirectoryObjectListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - Group
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Groups_GetGroupMembersNext
  /{tenantID}/{nextLink}?Groups_ListNext:
    get:
      description: Gets a list of groups for the current tenant.
      operationId: Groups_ListNext
      parameters:
      - description: Next link for the list operation.
        in: path
        name: nextLink
        required: true
        schema:
          type: string
        x-ms-skip-url-encoding: true
      - $ref: '#/components/parameters/ApiVersionParameter'
      - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GroupListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/GroupListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - Group
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Groups_ListNext
  /{tenantID}/{nextLink}?OAuth2PermissionGrant_ListNext:
    get:
      description: Gets the next page of OAuth2 permission grants
      operationId: OAuth2PermissionGrant_ListNext
      parameters:
      - description: Next link for the list operation.
        in: path
        name: nextLink
        required: true
        schema:
          type: string
        x-ms-skip-url-encoding: true
      - $ref: '#/components/parameters/ApiVersionParameter'
      - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2PermissionGrantListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/OAuth2PermissionGrantListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - OAuth2PermissionGrant_ListNext
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: OAuth2PermissionGrant_ListNext
  /{tenantID}/{nextLink}?Objects_GetObjectsByObjectIdsNext:
    post:
      description: Gets AD group membership for the specified AD object IDs.
      operationId: Objects_GetObjectsByObjectIdsNext
      parameters:
      - description: Next link for the list operation.
        in: path
        name: nextLink
        required: true
        schema:
          type: string
        x-ms-skip-url-encoding: true
      - $ref: '#/components/parameters/ApiVersionParameter'
      - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryObjectListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/DirectoryObjectListResult'
          description: OK. The operation was successful.
      tags:
      - Objects
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Objects_GetObjectsByObjectIdsNext
  /{tenantID}/{nextLink}?ServicePrincipals_ListNext:
    get:
      description: Gets a list of service principals from the current tenant.
      operationId: ServicePrincipals_ListNext
      parameters:
      - description: Next link for the list operation.
        in: path
        name: nextLink
        required: true
        schema:
          type: string
        x-ms-skip-url-encoding: true
      - $ref: '#/components/parameters/ApiVersionParameter'
      - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServicePrincipalListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/ServicePrincipalListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - ServicePrincipal
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: ServicePrincipals_ListNext
  /{tenantID}/{nextLink}?SignedInUser_ListOwnedObjectsNext:
    get:
      description: Get the list of directory objects that are owned by the user.
      operationId: SignedInUser_ListOwnedObjectsNext
      parameters:
      - description: Next link for the list operation.
        in: path
        name: nextLink
        required: true
        schema:
          type: string
        x-ms-skip-url-encoding: true
      - $ref: '#/components/parameters/ApiVersionParameter'
      - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DirectoryObjectListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/DirectoryObjectListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - SignedInUser
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: SignedInUser_ListOwnedObjectsNext
  /{tenantID}/{nextLink}?Users_ListNext:
    get:
      description: Gets a list of users for the current tenant.
      operationId: Users_ListNext
      parameters:
      - description: Next link for the list operation.
        in: path
        name: nextLink
        required: true
        schema:
          type: string
        x-ms-skip-url-encoding: true
      - $ref: '#/components/parameters/ApiVersionParameter'
      - $ref: '#/components/parameters/tenantIDInPath'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResult'
            text/json:
              schema:
                $ref: '#/components/schemas/UserListResult'
          description: OK. The operation was successful.
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GraphError'
            text/json:
              schema:
                $ref: '#/components/schemas/GraphError'
          description: Error response describing why the operation failed.
      tags:
      - User
      x-ms-pageable:
        nextLinkName: odata.nextLink
        operationName: Users_ListNext
