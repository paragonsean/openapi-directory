# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetObjectsParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, include_directory_object_references: bool=None, object_ids: List[str]=None, types: List[str]=None):
        """GetObjectsParameters - a model defined in OpenAPI

        :param include_directory_object_references: The include_directory_object_references of this GetObjectsParameters.
        :param object_ids: The object_ids of this GetObjectsParameters.
        :param types: The types of this GetObjectsParameters.
        """
        self.openapi_types = {
            'include_directory_object_references': bool,
            'object_ids': List[str],
            'types': List[str]
        }

        self.attribute_map = {
            'include_directory_object_references': 'includeDirectoryObjectReferences',
            'object_ids': 'objectIds',
            'types': 'types'
        }

        self._include_directory_object_references = include_directory_object_references
        self._object_ids = object_ids
        self._types = types

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetObjectsParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetObjectsParameters of this GetObjectsParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def include_directory_object_references(self):
        """Gets the include_directory_object_references of this GetObjectsParameters.

        If true, also searches for object IDs in the partner tenant.

        :return: The include_directory_object_references of this GetObjectsParameters.
        :rtype: bool
        """
        return self._include_directory_object_references

    @include_directory_object_references.setter
    def include_directory_object_references(self, include_directory_object_references):
        """Sets the include_directory_object_references of this GetObjectsParameters.

        If true, also searches for object IDs in the partner tenant.

        :param include_directory_object_references: The include_directory_object_references of this GetObjectsParameters.
        :type include_directory_object_references: bool
        """

        self._include_directory_object_references = include_directory_object_references

    @property
    def object_ids(self):
        """Gets the object_ids of this GetObjectsParameters.

        The requested object IDs.

        :return: The object_ids of this GetObjectsParameters.
        :rtype: List[str]
        """
        return self._object_ids

    @object_ids.setter
    def object_ids(self, object_ids):
        """Sets the object_ids of this GetObjectsParameters.

        The requested object IDs.

        :param object_ids: The object_ids of this GetObjectsParameters.
        :type object_ids: List[str]
        """

        self._object_ids = object_ids

    @property
    def types(self):
        """Gets the types of this GetObjectsParameters.

        The requested object types.

        :return: The types of this GetObjectsParameters.
        :rtype: List[str]
        """
        return self._types

    @types.setter
    def types(self, types):
        """Sets the types of this GetObjectsParameters.

        The requested object types.

        :param types: The types of this GetObjectsParameters.
        :type types: List[str]
        """

        self._types = types
