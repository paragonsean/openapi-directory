# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.app_role import AppRole
from openapi_server.models.group_membership_claims import GroupMembershipClaims
from openapi_server.models.informational_url import InformationalUrl
from openapi_server.models.key_credential import KeyCredential
from openapi_server.models.o_auth2_permission import OAuth2Permission
from openapi_server.models.optional_claims import OptionalClaims
from openapi_server.models.password_credential import PasswordCredential
from openapi_server.models.pre_authorized_application import PreAuthorizedApplication
from openapi_server.models.required_resource_access import RequiredResourceAccess
from openapi_server import util


class ApplicationCreateParameters(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, display_name: str=None, identifier_uris: List[str]=None, allow_guests_sign_in: bool=None, allow_passthrough_users: bool=None, app_logo_url: str=None, app_permissions: List[str]=None, app_roles: List[AppRole]=None, available_to_other_tenants: bool=None, error_url: str=None, group_membership_claims: GroupMembershipClaims=None, homepage: str=None, informational_urls: InformationalUrl=None, is_device_only_auth_supported: bool=None, key_credentials: List[KeyCredential]=None, known_client_applications: List[str]=None, logout_url: str=None, oauth2_allow_implicit_flow: bool=None, oauth2_allow_url_path_matching: bool=None, oauth2_permissions: List[OAuth2Permission]=None, oauth2_require_post_response: bool=None, optional_claims: OptionalClaims=None, org_restrictions: List[str]=None, password_credentials: List[PasswordCredential]=None, pre_authorized_applications: List[PreAuthorizedApplication]=None, public_client: bool=None, publisher_domain: str=None, reply_urls: List[str]=None, required_resource_access: List[RequiredResourceAccess]=None, saml_metadata_url: str=None, sign_in_audience: str=None, www_homepage: str=None):
        """ApplicationCreateParameters - a model defined in OpenAPI

        :param display_name: The display_name of this ApplicationCreateParameters.
        :param identifier_uris: The identifier_uris of this ApplicationCreateParameters.
        :param allow_guests_sign_in: The allow_guests_sign_in of this ApplicationCreateParameters.
        :param allow_passthrough_users: The allow_passthrough_users of this ApplicationCreateParameters.
        :param app_logo_url: The app_logo_url of this ApplicationCreateParameters.
        :param app_permissions: The app_permissions of this ApplicationCreateParameters.
        :param app_roles: The app_roles of this ApplicationCreateParameters.
        :param available_to_other_tenants: The available_to_other_tenants of this ApplicationCreateParameters.
        :param error_url: The error_url of this ApplicationCreateParameters.
        :param group_membership_claims: The group_membership_claims of this ApplicationCreateParameters.
        :param homepage: The homepage of this ApplicationCreateParameters.
        :param informational_urls: The informational_urls of this ApplicationCreateParameters.
        :param is_device_only_auth_supported: The is_device_only_auth_supported of this ApplicationCreateParameters.
        :param key_credentials: The key_credentials of this ApplicationCreateParameters.
        :param known_client_applications: The known_client_applications of this ApplicationCreateParameters.
        :param logout_url: The logout_url of this ApplicationCreateParameters.
        :param oauth2_allow_implicit_flow: The oauth2_allow_implicit_flow of this ApplicationCreateParameters.
        :param oauth2_allow_url_path_matching: The oauth2_allow_url_path_matching of this ApplicationCreateParameters.
        :param oauth2_permissions: The oauth2_permissions of this ApplicationCreateParameters.
        :param oauth2_require_post_response: The oauth2_require_post_response of this ApplicationCreateParameters.
        :param optional_claims: The optional_claims of this ApplicationCreateParameters.
        :param org_restrictions: The org_restrictions of this ApplicationCreateParameters.
        :param password_credentials: The password_credentials of this ApplicationCreateParameters.
        :param pre_authorized_applications: The pre_authorized_applications of this ApplicationCreateParameters.
        :param public_client: The public_client of this ApplicationCreateParameters.
        :param publisher_domain: The publisher_domain of this ApplicationCreateParameters.
        :param reply_urls: The reply_urls of this ApplicationCreateParameters.
        :param required_resource_access: The required_resource_access of this ApplicationCreateParameters.
        :param saml_metadata_url: The saml_metadata_url of this ApplicationCreateParameters.
        :param sign_in_audience: The sign_in_audience of this ApplicationCreateParameters.
        :param www_homepage: The www_homepage of this ApplicationCreateParameters.
        """
        self.openapi_types = {
            'display_name': str,
            'identifier_uris': List[str],
            'allow_guests_sign_in': bool,
            'allow_passthrough_users': bool,
            'app_logo_url': str,
            'app_permissions': List[str],
            'app_roles': List[AppRole],
            'available_to_other_tenants': bool,
            'error_url': str,
            'group_membership_claims': GroupMembershipClaims,
            'homepage': str,
            'informational_urls': InformationalUrl,
            'is_device_only_auth_supported': bool,
            'key_credentials': List[KeyCredential],
            'known_client_applications': List[str],
            'logout_url': str,
            'oauth2_allow_implicit_flow': bool,
            'oauth2_allow_url_path_matching': bool,
            'oauth2_permissions': List[OAuth2Permission],
            'oauth2_require_post_response': bool,
            'optional_claims': OptionalClaims,
            'org_restrictions': List[str],
            'password_credentials': List[PasswordCredential],
            'pre_authorized_applications': List[PreAuthorizedApplication],
            'public_client': bool,
            'publisher_domain': str,
            'reply_urls': List[str],
            'required_resource_access': List[RequiredResourceAccess],
            'saml_metadata_url': str,
            'sign_in_audience': str,
            'www_homepage': str
        }

        self.attribute_map = {
            'display_name': 'displayName',
            'identifier_uris': 'identifierUris',
            'allow_guests_sign_in': 'allowGuestsSignIn',
            'allow_passthrough_users': 'allowPassthroughUsers',
            'app_logo_url': 'appLogoUrl',
            'app_permissions': 'appPermissions',
            'app_roles': 'appRoles',
            'available_to_other_tenants': 'availableToOtherTenants',
            'error_url': 'errorUrl',
            'group_membership_claims': 'groupMembershipClaims',
            'homepage': 'homepage',
            'informational_urls': 'informationalUrls',
            'is_device_only_auth_supported': 'isDeviceOnlyAuthSupported',
            'key_credentials': 'keyCredentials',
            'known_client_applications': 'knownClientApplications',
            'logout_url': 'logoutUrl',
            'oauth2_allow_implicit_flow': 'oauth2AllowImplicitFlow',
            'oauth2_allow_url_path_matching': 'oauth2AllowUrlPathMatching',
            'oauth2_permissions': 'oauth2Permissions',
            'oauth2_require_post_response': 'oauth2RequirePostResponse',
            'optional_claims': 'optionalClaims',
            'org_restrictions': 'orgRestrictions',
            'password_credentials': 'passwordCredentials',
            'pre_authorized_applications': 'preAuthorizedApplications',
            'public_client': 'publicClient',
            'publisher_domain': 'publisherDomain',
            'reply_urls': 'replyUrls',
            'required_resource_access': 'requiredResourceAccess',
            'saml_metadata_url': 'samlMetadataUrl',
            'sign_in_audience': 'signInAudience',
            'www_homepage': 'wwwHomepage'
        }

        self._display_name = display_name
        self._identifier_uris = identifier_uris
        self._allow_guests_sign_in = allow_guests_sign_in
        self._allow_passthrough_users = allow_passthrough_users
        self._app_logo_url = app_logo_url
        self._app_permissions = app_permissions
        self._app_roles = app_roles
        self._available_to_other_tenants = available_to_other_tenants
        self._error_url = error_url
        self._group_membership_claims = group_membership_claims
        self._homepage = homepage
        self._informational_urls = informational_urls
        self._is_device_only_auth_supported = is_device_only_auth_supported
        self._key_credentials = key_credentials
        self._known_client_applications = known_client_applications
        self._logout_url = logout_url
        self._oauth2_allow_implicit_flow = oauth2_allow_implicit_flow
        self._oauth2_allow_url_path_matching = oauth2_allow_url_path_matching
        self._oauth2_permissions = oauth2_permissions
        self._oauth2_require_post_response = oauth2_require_post_response
        self._optional_claims = optional_claims
        self._org_restrictions = org_restrictions
        self._password_credentials = password_credentials
        self._pre_authorized_applications = pre_authorized_applications
        self._public_client = public_client
        self._publisher_domain = publisher_domain
        self._reply_urls = reply_urls
        self._required_resource_access = required_resource_access
        self._saml_metadata_url = saml_metadata_url
        self._sign_in_audience = sign_in_audience
        self._www_homepage = www_homepage

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ApplicationCreateParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ApplicationCreateParameters of this ApplicationCreateParameters.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def display_name(self):
        """Gets the display_name of this ApplicationCreateParameters.

        The display name of the application.

        :return: The display_name of this ApplicationCreateParameters.
        :rtype: str
        """
        return self._display_name

    @display_name.setter
    def display_name(self, display_name):
        """Sets the display_name of this ApplicationCreateParameters.

        The display name of the application.

        :param display_name: The display_name of this ApplicationCreateParameters.
        :type display_name: str
        """
        if display_name is None:
            raise ValueError("Invalid value for `display_name`, must not be `None`")

        self._display_name = display_name

    @property
    def identifier_uris(self):
        """Gets the identifier_uris of this ApplicationCreateParameters.

        A collection of URIs for the application.

        :return: The identifier_uris of this ApplicationCreateParameters.
        :rtype: List[str]
        """
        return self._identifier_uris

    @identifier_uris.setter
    def identifier_uris(self, identifier_uris):
        """Sets the identifier_uris of this ApplicationCreateParameters.

        A collection of URIs for the application.

        :param identifier_uris: The identifier_uris of this ApplicationCreateParameters.
        :type identifier_uris: List[str]
        """

        self._identifier_uris = identifier_uris

    @property
    def allow_guests_sign_in(self):
        """Gets the allow_guests_sign_in of this ApplicationCreateParameters.

        A property on the application to indicate if the application accepts other IDPs or not or partially accepts.

        :return: The allow_guests_sign_in of this ApplicationCreateParameters.
        :rtype: bool
        """
        return self._allow_guests_sign_in

    @allow_guests_sign_in.setter
    def allow_guests_sign_in(self, allow_guests_sign_in):
        """Sets the allow_guests_sign_in of this ApplicationCreateParameters.

        A property on the application to indicate if the application accepts other IDPs or not or partially accepts.

        :param allow_guests_sign_in: The allow_guests_sign_in of this ApplicationCreateParameters.
        :type allow_guests_sign_in: bool
        """

        self._allow_guests_sign_in = allow_guests_sign_in

    @property
    def allow_passthrough_users(self):
        """Gets the allow_passthrough_users of this ApplicationCreateParameters.

        Indicates that the application supports pass through users who have no presence in the resource tenant.

        :return: The allow_passthrough_users of this ApplicationCreateParameters.
        :rtype: bool
        """
        return self._allow_passthrough_users

    @allow_passthrough_users.setter
    def allow_passthrough_users(self, allow_passthrough_users):
        """Sets the allow_passthrough_users of this ApplicationCreateParameters.

        Indicates that the application supports pass through users who have no presence in the resource tenant.

        :param allow_passthrough_users: The allow_passthrough_users of this ApplicationCreateParameters.
        :type allow_passthrough_users: bool
        """

        self._allow_passthrough_users = allow_passthrough_users

    @property
    def app_logo_url(self):
        """Gets the app_logo_url of this ApplicationCreateParameters.

        The url for the application logo image stored in a CDN.

        :return: The app_logo_url of this ApplicationCreateParameters.
        :rtype: str
        """
        return self._app_logo_url

    @app_logo_url.setter
    def app_logo_url(self, app_logo_url):
        """Sets the app_logo_url of this ApplicationCreateParameters.

        The url for the application logo image stored in a CDN.

        :param app_logo_url: The app_logo_url of this ApplicationCreateParameters.
        :type app_logo_url: str
        """

        self._app_logo_url = app_logo_url

    @property
    def app_permissions(self):
        """Gets the app_permissions of this ApplicationCreateParameters.

        The application permissions.

        :return: The app_permissions of this ApplicationCreateParameters.
        :rtype: List[str]
        """
        return self._app_permissions

    @app_permissions.setter
    def app_permissions(self, app_permissions):
        """Sets the app_permissions of this ApplicationCreateParameters.

        The application permissions.

        :param app_permissions: The app_permissions of this ApplicationCreateParameters.
        :type app_permissions: List[str]
        """

        self._app_permissions = app_permissions

    @property
    def app_roles(self):
        """Gets the app_roles of this ApplicationCreateParameters.

        The collection of application roles that an application may declare. These roles can be assigned to users, groups or service principals.

        :return: The app_roles of this ApplicationCreateParameters.
        :rtype: List[AppRole]
        """
        return self._app_roles

    @app_roles.setter
    def app_roles(self, app_roles):
        """Sets the app_roles of this ApplicationCreateParameters.

        The collection of application roles that an application may declare. These roles can be assigned to users, groups or service principals.

        :param app_roles: The app_roles of this ApplicationCreateParameters.
        :type app_roles: List[AppRole]
        """

        self._app_roles = app_roles

    @property
    def available_to_other_tenants(self):
        """Gets the available_to_other_tenants of this ApplicationCreateParameters.

        Whether the application is available to other tenants.

        :return: The available_to_other_tenants of this ApplicationCreateParameters.
        :rtype: bool
        """
        return self._available_to_other_tenants

    @available_to_other_tenants.setter
    def available_to_other_tenants(self, available_to_other_tenants):
        """Sets the available_to_other_tenants of this ApplicationCreateParameters.

        Whether the application is available to other tenants.

        :param available_to_other_tenants: The available_to_other_tenants of this ApplicationCreateParameters.
        :type available_to_other_tenants: bool
        """

        self._available_to_other_tenants = available_to_other_tenants

    @property
    def error_url(self):
        """Gets the error_url of this ApplicationCreateParameters.

        A URL provided by the author of the application to report errors when using the application.

        :return: The error_url of this ApplicationCreateParameters.
        :rtype: str
        """
        return self._error_url

    @error_url.setter
    def error_url(self, error_url):
        """Sets the error_url of this ApplicationCreateParameters.

        A URL provided by the author of the application to report errors when using the application.

        :param error_url: The error_url of this ApplicationCreateParameters.
        :type error_url: str
        """

        self._error_url = error_url

    @property
    def group_membership_claims(self):
        """Gets the group_membership_claims of this ApplicationCreateParameters.


        :return: The group_membership_claims of this ApplicationCreateParameters.
        :rtype: GroupMembershipClaims
        """
        return self._group_membership_claims

    @group_membership_claims.setter
    def group_membership_claims(self, group_membership_claims):
        """Sets the group_membership_claims of this ApplicationCreateParameters.


        :param group_membership_claims: The group_membership_claims of this ApplicationCreateParameters.
        :type group_membership_claims: GroupMembershipClaims
        """

        self._group_membership_claims = group_membership_claims

    @property
    def homepage(self):
        """Gets the homepage of this ApplicationCreateParameters.

        The home page of the application.

        :return: The homepage of this ApplicationCreateParameters.
        :rtype: str
        """
        return self._homepage

    @homepage.setter
    def homepage(self, homepage):
        """Sets the homepage of this ApplicationCreateParameters.

        The home page of the application.

        :param homepage: The homepage of this ApplicationCreateParameters.
        :type homepage: str
        """

        self._homepage = homepage

    @property
    def informational_urls(self):
        """Gets the informational_urls of this ApplicationCreateParameters.


        :return: The informational_urls of this ApplicationCreateParameters.
        :rtype: InformationalUrl
        """
        return self._informational_urls

    @informational_urls.setter
    def informational_urls(self, informational_urls):
        """Sets the informational_urls of this ApplicationCreateParameters.


        :param informational_urls: The informational_urls of this ApplicationCreateParameters.
        :type informational_urls: InformationalUrl
        """

        self._informational_urls = informational_urls

    @property
    def is_device_only_auth_supported(self):
        """Gets the is_device_only_auth_supported of this ApplicationCreateParameters.

        Specifies whether this application supports device authentication without a user. The default is false.

        :return: The is_device_only_auth_supported of this ApplicationCreateParameters.
        :rtype: bool
        """
        return self._is_device_only_auth_supported

    @is_device_only_auth_supported.setter
    def is_device_only_auth_supported(self, is_device_only_auth_supported):
        """Sets the is_device_only_auth_supported of this ApplicationCreateParameters.

        Specifies whether this application supports device authentication without a user. The default is false.

        :param is_device_only_auth_supported: The is_device_only_auth_supported of this ApplicationCreateParameters.
        :type is_device_only_auth_supported: bool
        """

        self._is_device_only_auth_supported = is_device_only_auth_supported

    @property
    def key_credentials(self):
        """Gets the key_credentials of this ApplicationCreateParameters.

        A collection of KeyCredential objects.

        :return: The key_credentials of this ApplicationCreateParameters.
        :rtype: List[KeyCredential]
        """
        return self._key_credentials

    @key_credentials.setter
    def key_credentials(self, key_credentials):
        """Sets the key_credentials of this ApplicationCreateParameters.

        A collection of KeyCredential objects.

        :param key_credentials: The key_credentials of this ApplicationCreateParameters.
        :type key_credentials: List[KeyCredential]
        """

        self._key_credentials = key_credentials

    @property
    def known_client_applications(self):
        """Gets the known_client_applications of this ApplicationCreateParameters.

        Client applications that are tied to this resource application. Consent to any of the known client applications will result in implicit consent to the resource application through a combined consent dialog (showing the OAuth permission scopes required by the client and the resource).

        :return: The known_client_applications of this ApplicationCreateParameters.
        :rtype: List[str]
        """
        return self._known_client_applications

    @known_client_applications.setter
    def known_client_applications(self, known_client_applications):
        """Sets the known_client_applications of this ApplicationCreateParameters.

        Client applications that are tied to this resource application. Consent to any of the known client applications will result in implicit consent to the resource application through a combined consent dialog (showing the OAuth permission scopes required by the client and the resource).

        :param known_client_applications: The known_client_applications of this ApplicationCreateParameters.
        :type known_client_applications: List[str]
        """

        self._known_client_applications = known_client_applications

    @property
    def logout_url(self):
        """Gets the logout_url of this ApplicationCreateParameters.

        the url of the logout page

        :return: The logout_url of this ApplicationCreateParameters.
        :rtype: str
        """
        return self._logout_url

    @logout_url.setter
    def logout_url(self, logout_url):
        """Sets the logout_url of this ApplicationCreateParameters.

        the url of the logout page

        :param logout_url: The logout_url of this ApplicationCreateParameters.
        :type logout_url: str
        """

        self._logout_url = logout_url

    @property
    def oauth2_allow_implicit_flow(self):
        """Gets the oauth2_allow_implicit_flow of this ApplicationCreateParameters.

        Whether to allow implicit grant flow for OAuth2

        :return: The oauth2_allow_implicit_flow of this ApplicationCreateParameters.
        :rtype: bool
        """
        return self._oauth2_allow_implicit_flow

    @oauth2_allow_implicit_flow.setter
    def oauth2_allow_implicit_flow(self, oauth2_allow_implicit_flow):
        """Sets the oauth2_allow_implicit_flow of this ApplicationCreateParameters.

        Whether to allow implicit grant flow for OAuth2

        :param oauth2_allow_implicit_flow: The oauth2_allow_implicit_flow of this ApplicationCreateParameters.
        :type oauth2_allow_implicit_flow: bool
        """

        self._oauth2_allow_implicit_flow = oauth2_allow_implicit_flow

    @property
    def oauth2_allow_url_path_matching(self):
        """Gets the oauth2_allow_url_path_matching of this ApplicationCreateParameters.

        Specifies whether during a token Request Azure AD will allow path matching of the redirect URI against the applications collection of replyURLs. The default is false.

        :return: The oauth2_allow_url_path_matching of this ApplicationCreateParameters.
        :rtype: bool
        """
        return self._oauth2_allow_url_path_matching

    @oauth2_allow_url_path_matching.setter
    def oauth2_allow_url_path_matching(self, oauth2_allow_url_path_matching):
        """Sets the oauth2_allow_url_path_matching of this ApplicationCreateParameters.

        Specifies whether during a token Request Azure AD will allow path matching of the redirect URI against the applications collection of replyURLs. The default is false.

        :param oauth2_allow_url_path_matching: The oauth2_allow_url_path_matching of this ApplicationCreateParameters.
        :type oauth2_allow_url_path_matching: bool
        """

        self._oauth2_allow_url_path_matching = oauth2_allow_url_path_matching

    @property
    def oauth2_permissions(self):
        """Gets the oauth2_permissions of this ApplicationCreateParameters.

        The collection of OAuth 2.0 permission scopes that the web API (resource) application exposes to client applications. These permission scopes may be granted to client applications during consent.

        :return: The oauth2_permissions of this ApplicationCreateParameters.
        :rtype: List[OAuth2Permission]
        """
        return self._oauth2_permissions

    @oauth2_permissions.setter
    def oauth2_permissions(self, oauth2_permissions):
        """Sets the oauth2_permissions of this ApplicationCreateParameters.

        The collection of OAuth 2.0 permission scopes that the web API (resource) application exposes to client applications. These permission scopes may be granted to client applications during consent.

        :param oauth2_permissions: The oauth2_permissions of this ApplicationCreateParameters.
        :type oauth2_permissions: List[OAuth2Permission]
        """

        self._oauth2_permissions = oauth2_permissions

    @property
    def oauth2_require_post_response(self):
        """Gets the oauth2_require_post_response of this ApplicationCreateParameters.

        Specifies whether, as part of OAuth 2.0 token requests, Azure AD will allow POST requests, as opposed to GET requests. The default is false, which specifies that only GET requests will be allowed.

        :return: The oauth2_require_post_response of this ApplicationCreateParameters.
        :rtype: bool
        """
        return self._oauth2_require_post_response

    @oauth2_require_post_response.setter
    def oauth2_require_post_response(self, oauth2_require_post_response):
        """Sets the oauth2_require_post_response of this ApplicationCreateParameters.

        Specifies whether, as part of OAuth 2.0 token requests, Azure AD will allow POST requests, as opposed to GET requests. The default is false, which specifies that only GET requests will be allowed.

        :param oauth2_require_post_response: The oauth2_require_post_response of this ApplicationCreateParameters.
        :type oauth2_require_post_response: bool
        """

        self._oauth2_require_post_response = oauth2_require_post_response

    @property
    def optional_claims(self):
        """Gets the optional_claims of this ApplicationCreateParameters.


        :return: The optional_claims of this ApplicationCreateParameters.
        :rtype: OptionalClaims
        """
        return self._optional_claims

    @optional_claims.setter
    def optional_claims(self, optional_claims):
        """Sets the optional_claims of this ApplicationCreateParameters.


        :param optional_claims: The optional_claims of this ApplicationCreateParameters.
        :type optional_claims: OptionalClaims
        """

        self._optional_claims = optional_claims

    @property
    def org_restrictions(self):
        """Gets the org_restrictions of this ApplicationCreateParameters.

        A list of tenants allowed to access application.

        :return: The org_restrictions of this ApplicationCreateParameters.
        :rtype: List[str]
        """
        return self._org_restrictions

    @org_restrictions.setter
    def org_restrictions(self, org_restrictions):
        """Sets the org_restrictions of this ApplicationCreateParameters.

        A list of tenants allowed to access application.

        :param org_restrictions: The org_restrictions of this ApplicationCreateParameters.
        :type org_restrictions: List[str]
        """

        self._org_restrictions = org_restrictions

    @property
    def password_credentials(self):
        """Gets the password_credentials of this ApplicationCreateParameters.

        A collection of PasswordCredential objects

        :return: The password_credentials of this ApplicationCreateParameters.
        :rtype: List[PasswordCredential]
        """
        return self._password_credentials

    @password_credentials.setter
    def password_credentials(self, password_credentials):
        """Sets the password_credentials of this ApplicationCreateParameters.

        A collection of PasswordCredential objects

        :param password_credentials: The password_credentials of this ApplicationCreateParameters.
        :type password_credentials: List[PasswordCredential]
        """

        self._password_credentials = password_credentials

    @property
    def pre_authorized_applications(self):
        """Gets the pre_authorized_applications of this ApplicationCreateParameters.

        list of pre-authorized applications.

        :return: The pre_authorized_applications of this ApplicationCreateParameters.
        :rtype: List[PreAuthorizedApplication]
        """
        return self._pre_authorized_applications

    @pre_authorized_applications.setter
    def pre_authorized_applications(self, pre_authorized_applications):
        """Sets the pre_authorized_applications of this ApplicationCreateParameters.

        list of pre-authorized applications.

        :param pre_authorized_applications: The pre_authorized_applications of this ApplicationCreateParameters.
        :type pre_authorized_applications: List[PreAuthorizedApplication]
        """

        self._pre_authorized_applications = pre_authorized_applications

    @property
    def public_client(self):
        """Gets the public_client of this ApplicationCreateParameters.

        Specifies whether this application is a public client (such as an installed application running on a mobile device). Default is false.

        :return: The public_client of this ApplicationCreateParameters.
        :rtype: bool
        """
        return self._public_client

    @public_client.setter
    def public_client(self, public_client):
        """Sets the public_client of this ApplicationCreateParameters.

        Specifies whether this application is a public client (such as an installed application running on a mobile device). Default is false.

        :param public_client: The public_client of this ApplicationCreateParameters.
        :type public_client: bool
        """

        self._public_client = public_client

    @property
    def publisher_domain(self):
        """Gets the publisher_domain of this ApplicationCreateParameters.

        Reliable domain which can be used to identify an application.

        :return: The publisher_domain of this ApplicationCreateParameters.
        :rtype: str
        """
        return self._publisher_domain

    @publisher_domain.setter
    def publisher_domain(self, publisher_domain):
        """Sets the publisher_domain of this ApplicationCreateParameters.

        Reliable domain which can be used to identify an application.

        :param publisher_domain: The publisher_domain of this ApplicationCreateParameters.
        :type publisher_domain: str
        """

        self._publisher_domain = publisher_domain

    @property
    def reply_urls(self):
        """Gets the reply_urls of this ApplicationCreateParameters.

        A collection of reply URLs for the application.

        :return: The reply_urls of this ApplicationCreateParameters.
        :rtype: List[str]
        """
        return self._reply_urls

    @reply_urls.setter
    def reply_urls(self, reply_urls):
        """Sets the reply_urls of this ApplicationCreateParameters.

        A collection of reply URLs for the application.

        :param reply_urls: The reply_urls of this ApplicationCreateParameters.
        :type reply_urls: List[str]
        """

        self._reply_urls = reply_urls

    @property
    def required_resource_access(self):
        """Gets the required_resource_access of this ApplicationCreateParameters.

        Specifies resources that this application requires access to and the set of OAuth permission scopes and application roles that it needs under each of those resources. This pre-configuration of required resource access drives the consent experience.

        :return: The required_resource_access of this ApplicationCreateParameters.
        :rtype: List[RequiredResourceAccess]
        """
        return self._required_resource_access

    @required_resource_access.setter
    def required_resource_access(self, required_resource_access):
        """Sets the required_resource_access of this ApplicationCreateParameters.

        Specifies resources that this application requires access to and the set of OAuth permission scopes and application roles that it needs under each of those resources. This pre-configuration of required resource access drives the consent experience.

        :param required_resource_access: The required_resource_access of this ApplicationCreateParameters.
        :type required_resource_access: List[RequiredResourceAccess]
        """

        self._required_resource_access = required_resource_access

    @property
    def saml_metadata_url(self):
        """Gets the saml_metadata_url of this ApplicationCreateParameters.

        The URL to the SAML metadata for the application.

        :return: The saml_metadata_url of this ApplicationCreateParameters.
        :rtype: str
        """
        return self._saml_metadata_url

    @saml_metadata_url.setter
    def saml_metadata_url(self, saml_metadata_url):
        """Sets the saml_metadata_url of this ApplicationCreateParameters.

        The URL to the SAML metadata for the application.

        :param saml_metadata_url: The saml_metadata_url of this ApplicationCreateParameters.
        :type saml_metadata_url: str
        """

        self._saml_metadata_url = saml_metadata_url

    @property
    def sign_in_audience(self):
        """Gets the sign_in_audience of this ApplicationCreateParameters.

        Audience for signing in to the application (AzureADMyOrganization, AzureADAllOrganizations, AzureADAndMicrosoftAccounts).

        :return: The sign_in_audience of this ApplicationCreateParameters.
        :rtype: str
        """
        return self._sign_in_audience

    @sign_in_audience.setter
    def sign_in_audience(self, sign_in_audience):
        """Sets the sign_in_audience of this ApplicationCreateParameters.

        Audience for signing in to the application (AzureADMyOrganization, AzureADAllOrganizations, AzureADAndMicrosoftAccounts).

        :param sign_in_audience: The sign_in_audience of this ApplicationCreateParameters.
        :type sign_in_audience: str
        """

        self._sign_in_audience = sign_in_audience

    @property
    def www_homepage(self):
        """Gets the www_homepage of this ApplicationCreateParameters.

        The primary Web page.

        :return: The www_homepage of this ApplicationCreateParameters.
        :rtype: str
        """
        return self._www_homepage

    @www_homepage.setter
    def www_homepage(self, www_homepage):
        """Sets the www_homepage of this ApplicationCreateParameters.

        The primary Web page.

        :param www_homepage: The www_homepage of this ApplicationCreateParameters.
        :type www_homepage: str
        """

        self._www_homepage = www_homepage
