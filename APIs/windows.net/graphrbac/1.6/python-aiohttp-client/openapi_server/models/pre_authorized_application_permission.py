# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PreAuthorizedApplicationPermission(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, access_grants: List[str]=None, direct_access_grant: bool=None):
        """PreAuthorizedApplicationPermission - a model defined in OpenAPI

        :param access_grants: The access_grants of this PreAuthorizedApplicationPermission.
        :param direct_access_grant: The direct_access_grant of this PreAuthorizedApplicationPermission.
        """
        self.openapi_types = {
            'access_grants': List[str],
            'direct_access_grant': bool
        }

        self.attribute_map = {
            'access_grants': 'accessGrants',
            'direct_access_grant': 'directAccessGrant'
        }

        self._access_grants = access_grants
        self._direct_access_grant = direct_access_grant

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PreAuthorizedApplicationPermission':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PreAuthorizedApplicationPermission of this PreAuthorizedApplicationPermission.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_grants(self):
        """Gets the access_grants of this PreAuthorizedApplicationPermission.

        The list of permissions.

        :return: The access_grants of this PreAuthorizedApplicationPermission.
        :rtype: List[str]
        """
        return self._access_grants

    @access_grants.setter
    def access_grants(self, access_grants):
        """Sets the access_grants of this PreAuthorizedApplicationPermission.

        The list of permissions.

        :param access_grants: The access_grants of this PreAuthorizedApplicationPermission.
        :type access_grants: List[str]
        """

        self._access_grants = access_grants

    @property
    def direct_access_grant(self):
        """Gets the direct_access_grant of this PreAuthorizedApplicationPermission.

        Indicates whether the permission set is DirectAccess or impersonation.

        :return: The direct_access_grant of this PreAuthorizedApplicationPermission.
        :rtype: bool
        """
        return self._direct_access_grant

    @direct_access_grant.setter
    def direct_access_grant(self, direct_access_grant):
        """Sets the direct_access_grant of this PreAuthorizedApplicationPermission.

        Indicates whether the permission set is DirectAccess or impersonation.

        :param direct_access_grant: The direct_access_grant of this PreAuthorizedApplicationPermission.
        :type direct_access_grant: bool
        """

        self._direct_access_grant = direct_access_grant
