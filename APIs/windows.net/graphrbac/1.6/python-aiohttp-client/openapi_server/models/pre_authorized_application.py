# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pre_authorized_application_extension import PreAuthorizedApplicationExtension
from openapi_server.models.pre_authorized_application_permission import PreAuthorizedApplicationPermission
from openapi_server import util


class PreAuthorizedApplication(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_id: str=None, extensions: List[PreAuthorizedApplicationExtension]=None, permissions: List[PreAuthorizedApplicationPermission]=None):
        """PreAuthorizedApplication - a model defined in OpenAPI

        :param app_id: The app_id of this PreAuthorizedApplication.
        :param extensions: The extensions of this PreAuthorizedApplication.
        :param permissions: The permissions of this PreAuthorizedApplication.
        """
        self.openapi_types = {
            'app_id': str,
            'extensions': List[PreAuthorizedApplicationExtension],
            'permissions': List[PreAuthorizedApplicationPermission]
        }

        self.attribute_map = {
            'app_id': 'appId',
            'extensions': 'extensions',
            'permissions': 'permissions'
        }

        self._app_id = app_id
        self._extensions = extensions
        self._permissions = permissions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PreAuthorizedApplication':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PreAuthorizedApplication of this PreAuthorizedApplication.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_id(self):
        """Gets the app_id of this PreAuthorizedApplication.

        Represents the application id.

        :return: The app_id of this PreAuthorizedApplication.
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this PreAuthorizedApplication.

        Represents the application id.

        :param app_id: The app_id of this PreAuthorizedApplication.
        :type app_id: str
        """

        self._app_id = app_id

    @property
    def extensions(self):
        """Gets the extensions of this PreAuthorizedApplication.

        Collection of extensions from the resource application.

        :return: The extensions of this PreAuthorizedApplication.
        :rtype: List[PreAuthorizedApplicationExtension]
        """
        return self._extensions

    @extensions.setter
    def extensions(self, extensions):
        """Sets the extensions of this PreAuthorizedApplication.

        Collection of extensions from the resource application.

        :param extensions: The extensions of this PreAuthorizedApplication.
        :type extensions: List[PreAuthorizedApplicationExtension]
        """

        self._extensions = extensions

    @property
    def permissions(self):
        """Gets the permissions of this PreAuthorizedApplication.

        Collection of required app permissions/entitlements from the resource application.

        :return: The permissions of this PreAuthorizedApplication.
        :rtype: List[PreAuthorizedApplicationPermission]
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this PreAuthorizedApplication.

        Collection of required app permissions/entitlements from the resource application.

        :param permissions: The permissions of this PreAuthorizedApplication.
        :type permissions: List[PreAuthorizedApplicationPermission]
        """

        self._permissions = permissions
