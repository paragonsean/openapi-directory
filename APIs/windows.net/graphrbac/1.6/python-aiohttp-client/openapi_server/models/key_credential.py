# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class KeyCredential(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_key_identifier: str=None, end_date: datetime=None, key_id: str=None, start_date: datetime=None, type: str=None, usage: str=None, value: str=None):
        """KeyCredential - a model defined in OpenAPI

        :param custom_key_identifier: The custom_key_identifier of this KeyCredential.
        :param end_date: The end_date of this KeyCredential.
        :param key_id: The key_id of this KeyCredential.
        :param start_date: The start_date of this KeyCredential.
        :param type: The type of this KeyCredential.
        :param usage: The usage of this KeyCredential.
        :param value: The value of this KeyCredential.
        """
        self.openapi_types = {
            'custom_key_identifier': str,
            'end_date': datetime,
            'key_id': str,
            'start_date': datetime,
            'type': str,
            'usage': str,
            'value': str
        }

        self.attribute_map = {
            'custom_key_identifier': 'customKeyIdentifier',
            'end_date': 'endDate',
            'key_id': 'keyId',
            'start_date': 'startDate',
            'type': 'type',
            'usage': 'usage',
            'value': 'value'
        }

        self._custom_key_identifier = custom_key_identifier
        self._end_date = end_date
        self._key_id = key_id
        self._start_date = start_date
        self._type = type
        self._usage = usage
        self._value = value

    @classmethod
    def from_dict(cls, dikt: dict) -> 'KeyCredential':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The KeyCredential of this KeyCredential.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_key_identifier(self):
        """Gets the custom_key_identifier of this KeyCredential.

        Custom Key Identifier

        :return: The custom_key_identifier of this KeyCredential.
        :rtype: str
        """
        return self._custom_key_identifier

    @custom_key_identifier.setter
    def custom_key_identifier(self, custom_key_identifier):
        """Sets the custom_key_identifier of this KeyCredential.

        Custom Key Identifier

        :param custom_key_identifier: The custom_key_identifier of this KeyCredential.
        :type custom_key_identifier: str
        """

        self._custom_key_identifier = custom_key_identifier

    @property
    def end_date(self):
        """Gets the end_date of this KeyCredential.

        End date.

        :return: The end_date of this KeyCredential.
        :rtype: datetime
        """
        return self._end_date

    @end_date.setter
    def end_date(self, end_date):
        """Sets the end_date of this KeyCredential.

        End date.

        :param end_date: The end_date of this KeyCredential.
        :type end_date: datetime
        """

        self._end_date = end_date

    @property
    def key_id(self):
        """Gets the key_id of this KeyCredential.

        Key ID.

        :return: The key_id of this KeyCredential.
        :rtype: str
        """
        return self._key_id

    @key_id.setter
    def key_id(self, key_id):
        """Sets the key_id of this KeyCredential.

        Key ID.

        :param key_id: The key_id of this KeyCredential.
        :type key_id: str
        """

        self._key_id = key_id

    @property
    def start_date(self):
        """Gets the start_date of this KeyCredential.

        Start date.

        :return: The start_date of this KeyCredential.
        :rtype: datetime
        """
        return self._start_date

    @start_date.setter
    def start_date(self, start_date):
        """Sets the start_date of this KeyCredential.

        Start date.

        :param start_date: The start_date of this KeyCredential.
        :type start_date: datetime
        """

        self._start_date = start_date

    @property
    def type(self):
        """Gets the type of this KeyCredential.

        Type. Acceptable values are 'AsymmetricX509Cert' and 'Symmetric'.

        :return: The type of this KeyCredential.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this KeyCredential.

        Type. Acceptable values are 'AsymmetricX509Cert' and 'Symmetric'.

        :param type: The type of this KeyCredential.
        :type type: str
        """

        self._type = type

    @property
    def usage(self):
        """Gets the usage of this KeyCredential.

        Usage. Acceptable values are 'Verify' and 'Sign'.

        :return: The usage of this KeyCredential.
        :rtype: str
        """
        return self._usage

    @usage.setter
    def usage(self, usage):
        """Sets the usage of this KeyCredential.

        Usage. Acceptable values are 'Verify' and 'Sign'.

        :param usage: The usage of this KeyCredential.
        :type usage: str
        """

        self._usage = usage

    @property
    def value(self):
        """Gets the value of this KeyCredential.

        Key value.

        :return: The value of this KeyCredential.
        :rtype: str
        """
        return self._value

    @value.setter
    def value(self, value):
        """Sets the value of this KeyCredential.

        Key value.

        :param value: The value of this KeyCredential.
        :type value: str
        """

        self._value = value
