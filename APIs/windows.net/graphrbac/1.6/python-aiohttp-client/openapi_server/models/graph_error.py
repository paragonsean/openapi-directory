# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.odata_error import OdataError
from openapi_server import util


class GraphError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, odata_error: OdataError=None):
        """GraphError - a model defined in OpenAPI

        :param odata_error: The odata_error of this GraphError.
        """
        self.openapi_types = {
            'odata_error': OdataError
        }

        self.attribute_map = {
            'odata_error': 'odata.error'
        }

        self._odata_error = odata_error

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GraphError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GraphError of this GraphError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def odata_error(self):
        """Gets the odata_error of this GraphError.


        :return: The odata_error of this GraphError.
        :rtype: OdataError
        """
        return self._odata_error

    @odata_error.setter
    def odata_error(self, odata_error):
        """Sets the odata_error of this GraphError.


        :param odata_error: The odata_error of this GraphError.
        :type odata_error: OdataError
        """

        self._odata_error = odata_error
