/**
 * GraphRbacManagementClient
 * The Graph RBAC Management Client
 *
 * The version of the OpenAPI document: 1.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GraphRbacManagementClient);
  }
}(this, function(expect, GraphRbacManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GraphRbacManagementClient.Application();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Application', function() {
    it('should create an instance of Application', function() {
      // uncomment below and update the code to test Application
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be.a(GraphRbacManagementClient.Application);
    });

    it('should have the property allowGuestsSignIn (base name: "allowGuestsSignIn")', function() {
      // uncomment below and update the code to test the property allowGuestsSignIn
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property allowPassthroughUsers (base name: "allowPassthroughUsers")', function() {
      // uncomment below and update the code to test the property allowPassthroughUsers
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property appId (base name: "appId")', function() {
      // uncomment below and update the code to test the property appId
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property appLogoUrl (base name: "appLogoUrl")', function() {
      // uncomment below and update the code to test the property appLogoUrl
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property appPermissions (base name: "appPermissions")', function() {
      // uncomment below and update the code to test the property appPermissions
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property appRoles (base name: "appRoles")', function() {
      // uncomment below and update the code to test the property appRoles
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property availableToOtherTenants (base name: "availableToOtherTenants")', function() {
      // uncomment below and update the code to test the property availableToOtherTenants
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property errorUrl (base name: "errorUrl")', function() {
      // uncomment below and update the code to test the property errorUrl
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property groupMembershipClaims (base name: "groupMembershipClaims")', function() {
      // uncomment below and update the code to test the property groupMembershipClaims
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property homepage (base name: "homepage")', function() {
      // uncomment below and update the code to test the property homepage
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property identifierUris (base name: "identifierUris")', function() {
      // uncomment below and update the code to test the property identifierUris
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property informationalUrls (base name: "informationalUrls")', function() {
      // uncomment below and update the code to test the property informationalUrls
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property isDeviceOnlyAuthSupported (base name: "isDeviceOnlyAuthSupported")', function() {
      // uncomment below and update the code to test the property isDeviceOnlyAuthSupported
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property keyCredentials (base name: "keyCredentials")', function() {
      // uncomment below and update the code to test the property keyCredentials
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property knownClientApplications (base name: "knownClientApplications")', function() {
      // uncomment below and update the code to test the property knownClientApplications
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property logoutUrl (base name: "logoutUrl")', function() {
      // uncomment below and update the code to test the property logoutUrl
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property oauth2AllowImplicitFlow (base name: "oauth2AllowImplicitFlow")', function() {
      // uncomment below and update the code to test the property oauth2AllowImplicitFlow
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property oauth2AllowUrlPathMatching (base name: "oauth2AllowUrlPathMatching")', function() {
      // uncomment below and update the code to test the property oauth2AllowUrlPathMatching
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property oauth2Permissions (base name: "oauth2Permissions")', function() {
      // uncomment below and update the code to test the property oauth2Permissions
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property oauth2RequirePostResponse (base name: "oauth2RequirePostResponse")', function() {
      // uncomment below and update the code to test the property oauth2RequirePostResponse
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property optionalClaims (base name: "optionalClaims")', function() {
      // uncomment below and update the code to test the property optionalClaims
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property orgRestrictions (base name: "orgRestrictions")', function() {
      // uncomment below and update the code to test the property orgRestrictions
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property passwordCredentials (base name: "passwordCredentials")', function() {
      // uncomment below and update the code to test the property passwordCredentials
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property preAuthorizedApplications (base name: "preAuthorizedApplications")', function() {
      // uncomment below and update the code to test the property preAuthorizedApplications
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property publicClient (base name: "publicClient")', function() {
      // uncomment below and update the code to test the property publicClient
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property publisherDomain (base name: "publisherDomain")', function() {
      // uncomment below and update the code to test the property publisherDomain
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property replyUrls (base name: "replyUrls")', function() {
      // uncomment below and update the code to test the property replyUrls
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property requiredResourceAccess (base name: "requiredResourceAccess")', function() {
      // uncomment below and update the code to test the property requiredResourceAccess
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property samlMetadataUrl (base name: "samlMetadataUrl")', function() {
      // uncomment below and update the code to test the property samlMetadataUrl
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property signInAudience (base name: "signInAudience")', function() {
      // uncomment below and update the code to test the property signInAudience
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

    it('should have the property wwwHomepage (base name: "wwwHomepage")', function() {
      // uncomment below and update the code to test the property wwwHomepage
      //var instance = new GraphRbacManagementClient.Application();
      //expect(instance).to.be();
    });

  });

}));
