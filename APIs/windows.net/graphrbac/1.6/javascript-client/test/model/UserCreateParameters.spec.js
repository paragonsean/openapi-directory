/**
 * GraphRbacManagementClient
 * The Graph RBAC Management Client
 *
 * The version of the OpenAPI document: 1.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.GraphRbacManagementClient);
  }
}(this, function(expect, GraphRbacManagementClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new GraphRbacManagementClient.UserCreateParameters();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UserCreateParameters', function() {
    it('should create an instance of UserCreateParameters', function() {
      // uncomment below and update the code to test UserCreateParameters
      //var instance = new GraphRbacManagementClient.UserCreateParameters();
      //expect(instance).to.be.a(GraphRbacManagementClient.UserCreateParameters);
    });

    it('should have the property accountEnabled (base name: "accountEnabled")', function() {
      // uncomment below and update the code to test the property accountEnabled
      //var instance = new GraphRbacManagementClient.UserCreateParameters();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instance = new GraphRbacManagementClient.UserCreateParameters();
      //expect(instance).to.be();
    });

    it('should have the property mail (base name: "mail")', function() {
      // uncomment below and update the code to test the property mail
      //var instance = new GraphRbacManagementClient.UserCreateParameters();
      //expect(instance).to.be();
    });

    it('should have the property mailNickname (base name: "mailNickname")', function() {
      // uncomment below and update the code to test the property mailNickname
      //var instance = new GraphRbacManagementClient.UserCreateParameters();
      //expect(instance).to.be();
    });

    it('should have the property passwordProfile (base name: "passwordProfile")', function() {
      // uncomment below and update the code to test the property passwordProfile
      //var instance = new GraphRbacManagementClient.UserCreateParameters();
      //expect(instance).to.be();
    });

    it('should have the property userPrincipalName (base name: "userPrincipalName")', function() {
      // uncomment below and update the code to test the property userPrincipalName
      //var instance = new GraphRbacManagementClient.UserCreateParameters();
      //expect(instance).to.be();
    });

    it('should have the property givenName (base name: "givenName")', function() {
      // uncomment below and update the code to test the property givenName
      //var instance = new GraphRbacManagementClient.UserCreateParameters();
      //expect(instance).to.be();
    });

    it('should have the property immutableId (base name: "immutableId")', function() {
      // uncomment below and update the code to test the property immutableId
      //var instance = new GraphRbacManagementClient.UserCreateParameters();
      //expect(instance).to.be();
    });

    it('should have the property surname (base name: "surname")', function() {
      // uncomment below and update the code to test the property surname
      //var instance = new GraphRbacManagementClient.UserCreateParameters();
      //expect(instance).to.be();
    });

    it('should have the property usageLocation (base name: "usageLocation")', function() {
      // uncomment below and update the code to test the property usageLocation
      //var instance = new GraphRbacManagementClient.UserCreateParameters();
      //expect(instance).to.be();
    });

    it('should have the property userType (base name: "userType")', function() {
      // uncomment below and update the code to test the property userType
      //var instance = new GraphRbacManagementClient.UserCreateParameters();
      //expect(instance).to.be();
    });

  });

}));
