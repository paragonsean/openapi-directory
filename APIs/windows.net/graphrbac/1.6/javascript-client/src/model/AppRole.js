/**
 * GraphRbacManagementClient
 * The Graph RBAC Management Client
 *
 * The version of the OpenAPI document: 1.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AppRole model module.
 * @module model/AppRole
 * @version 1.6
 */
class AppRole {
    /**
     * Constructs a new <code>AppRole</code>.
     * @alias module:model/AppRole
     */
    constructor() { 
        
        AppRole.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AppRole</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AppRole} obj Optional instance to populate.
     * @return {module:model/AppRole} The populated <code>AppRole</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AppRole();

            if (data.hasOwnProperty('allowedMemberTypes')) {
                obj['allowedMemberTypes'] = ApiClient.convertToType(data['allowedMemberTypes'], ['String']);
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('displayName')) {
                obj['displayName'] = ApiClient.convertToType(data['displayName'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('isEnabled')) {
                obj['isEnabled'] = ApiClient.convertToType(data['isEnabled'], 'Boolean');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AppRole</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AppRole</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['allowedMemberTypes'])) {
            throw new Error("Expected the field `allowedMemberTypes` to be an array in the JSON data but got " + data['allowedMemberTypes']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['displayName'] && !(typeof data['displayName'] === 'string' || data['displayName'] instanceof String)) {
            throw new Error("Expected the field `displayName` to be a primitive type in the JSON string but got " + data['displayName']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * Specifies whether this app role definition can be assigned to users and groups by setting to 'User', or to other applications (that are accessing this application in daemon service scenarios) by setting to 'Application', or to both. 
 * @member {Array.<String>} allowedMemberTypes
 */
AppRole.prototype['allowedMemberTypes'] = undefined;

/**
 * Permission help text that appears in the admin app assignment and consent experiences.
 * @member {String} description
 */
AppRole.prototype['description'] = undefined;

/**
 * Display name for the permission that appears in the admin consent and app assignment experiences.
 * @member {String} displayName
 */
AppRole.prototype['displayName'] = undefined;

/**
 * Unique role identifier inside the appRoles collection.
 * @member {String} id
 */
AppRole.prototype['id'] = undefined;

/**
 * When creating or updating a role definition, this must be set to true (which is the default). To delete a role, this must first be set to false. At that point, in a subsequent call, this role may be removed.
 * @member {Boolean} isEnabled
 */
AppRole.prototype['isEnabled'] = undefined;

/**
 * Specifies the value of the roles claim that the application should expect in the authentication and access tokens.
 * @member {String} value
 */
AppRole.prototype['value'] = undefined;






export default AppRole;

