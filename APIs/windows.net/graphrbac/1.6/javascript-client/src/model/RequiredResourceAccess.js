/**
 * GraphRbacManagementClient
 * The Graph RBAC Management Client
 *
 * The version of the OpenAPI document: 1.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import ResourceAccess from './ResourceAccess';

/**
 * The RequiredResourceAccess model module.
 * @module model/RequiredResourceAccess
 * @version 1.6
 */
class RequiredResourceAccess {
    /**
     * Constructs a new <code>RequiredResourceAccess</code>.
     * Specifies the set of OAuth 2.0 permission scopes and app roles under the specified resource that an application requires access to. The specified OAuth 2.0 permission scopes may be requested by client applications (through the requiredResourceAccess collection) when calling a resource application. The requiredResourceAccess property of the Application entity is a collection of RequiredResourceAccess.
     * @alias module:model/RequiredResourceAccess
     * @extends Object
     * @param resourceAccess {Array.<module:model/ResourceAccess>} The list of OAuth2.0 permission scopes and app roles that the application requires from the specified resource.
     */
    constructor(resourceAccess) { 
        
        RequiredResourceAccess.initialize(this, resourceAccess);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, resourceAccess) { 
        obj['resourceAccess'] = resourceAccess;
    }

    /**
     * Constructs a <code>RequiredResourceAccess</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RequiredResourceAccess} obj Optional instance to populate.
     * @return {module:model/RequiredResourceAccess} The populated <code>RequiredResourceAccess</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RequiredResourceAccess();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('resourceAccess')) {
                obj['resourceAccess'] = ApiClient.convertToType(data['resourceAccess'], [ResourceAccess]);
            }
            if (data.hasOwnProperty('resourceAppId')) {
                obj['resourceAppId'] = ApiClient.convertToType(data['resourceAppId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RequiredResourceAccess</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RequiredResourceAccess</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RequiredResourceAccess.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['resourceAccess'])) {
            throw new Error("Expected the field `resourceAccess` to be an array in the JSON data but got " + data['resourceAccess']);
        }
        // ensure the json data is a string
        if (data['resourceAppId'] && !(typeof data['resourceAppId'] === 'string' || data['resourceAppId'] instanceof String)) {
            throw new Error("Expected the field `resourceAppId` to be a primitive type in the JSON string but got " + data['resourceAppId']);
        }

        return true;
    }


}

RequiredResourceAccess.RequiredProperties = ["resourceAccess"];

/**
 * The list of OAuth2.0 permission scopes and app roles that the application requires from the specified resource.
 * @member {Array.<module:model/ResourceAccess>} resourceAccess
 */
RequiredResourceAccess.prototype['resourceAccess'] = undefined;

/**
 * The unique identifier for the resource that the application requires access to. This should be equal to the appId declared on the target resource application.
 * @member {String} resourceAppId
 */
RequiredResourceAccess.prototype['resourceAppId'] = undefined;






export default RequiredResourceAccess;

