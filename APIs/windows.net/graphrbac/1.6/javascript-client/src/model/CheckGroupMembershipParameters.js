/**
 * GraphRbacManagementClient
 * The Graph RBAC Management Client
 *
 * The version of the OpenAPI document: 1.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CheckGroupMembershipParameters model module.
 * @module model/CheckGroupMembershipParameters
 * @version 1.6
 */
class CheckGroupMembershipParameters {
    /**
     * Constructs a new <code>CheckGroupMembershipParameters</code>.
     * Request parameters for IsMemberOf API call.
     * @alias module:model/CheckGroupMembershipParameters
     * @extends Object
     * @param groupId {String} The object ID of the group to check.
     * @param memberId {String} The object ID of the contact, group, user, or service principal to check for membership in the specified group.
     */
    constructor(groupId, memberId) { 
        
        CheckGroupMembershipParameters.initialize(this, groupId, memberId);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, groupId, memberId) { 
        obj['groupId'] = groupId;
        obj['memberId'] = memberId;
    }

    /**
     * Constructs a <code>CheckGroupMembershipParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CheckGroupMembershipParameters} obj Optional instance to populate.
     * @return {module:model/CheckGroupMembershipParameters} The populated <code>CheckGroupMembershipParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CheckGroupMembershipParameters();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('groupId')) {
                obj['groupId'] = ApiClient.convertToType(data['groupId'], 'String');
            }
            if (data.hasOwnProperty('memberId')) {
                obj['memberId'] = ApiClient.convertToType(data['memberId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CheckGroupMembershipParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CheckGroupMembershipParameters</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CheckGroupMembershipParameters.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['groupId'] && !(typeof data['groupId'] === 'string' || data['groupId'] instanceof String)) {
            throw new Error("Expected the field `groupId` to be a primitive type in the JSON string but got " + data['groupId']);
        }
        // ensure the json data is a string
        if (data['memberId'] && !(typeof data['memberId'] === 'string' || data['memberId'] instanceof String)) {
            throw new Error("Expected the field `memberId` to be a primitive type in the JSON string but got " + data['memberId']);
        }

        return true;
    }


}

CheckGroupMembershipParameters.RequiredProperties = ["groupId", "memberId"];

/**
 * The object ID of the group to check.
 * @member {String} groupId
 */
CheckGroupMembershipParameters.prototype['groupId'] = undefined;

/**
 * The object ID of the contact, group, user, or service principal to check for membership in the specified group.
 * @member {String} memberId
 */
CheckGroupMembershipParameters.prototype['memberId'] = undefined;






export default CheckGroupMembershipParameters;

