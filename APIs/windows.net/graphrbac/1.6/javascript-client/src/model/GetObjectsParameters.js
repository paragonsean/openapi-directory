/**
 * GraphRbacManagementClient
 * The Graph RBAC Management Client
 *
 * The version of the OpenAPI document: 1.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetObjectsParameters model module.
 * @module model/GetObjectsParameters
 * @version 1.6
 */
class GetObjectsParameters {
    /**
     * Constructs a new <code>GetObjectsParameters</code>.
     * Request parameters for the GetObjectsByObjectIds API.
     * @alias module:model/GetObjectsParameters
     * @extends Object
     */
    constructor() { 
        
        GetObjectsParameters.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetObjectsParameters</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetObjectsParameters} obj Optional instance to populate.
     * @return {module:model/GetObjectsParameters} The populated <code>GetObjectsParameters</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetObjectsParameters();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('includeDirectoryObjectReferences')) {
                obj['includeDirectoryObjectReferences'] = ApiClient.convertToType(data['includeDirectoryObjectReferences'], 'Boolean');
            }
            if (data.hasOwnProperty('objectIds')) {
                obj['objectIds'] = ApiClient.convertToType(data['objectIds'], ['String']);
            }
            if (data.hasOwnProperty('types')) {
                obj['types'] = ApiClient.convertToType(data['types'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetObjectsParameters</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetObjectsParameters</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['objectIds'])) {
            throw new Error("Expected the field `objectIds` to be an array in the JSON data but got " + data['objectIds']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['types'])) {
            throw new Error("Expected the field `types` to be an array in the JSON data but got " + data['types']);
        }

        return true;
    }


}



/**
 * If true, also searches for object IDs in the partner tenant.
 * @member {Boolean} includeDirectoryObjectReferences
 */
GetObjectsParameters.prototype['includeDirectoryObjectReferences'] = undefined;

/**
 * The requested object IDs.
 * @member {Array.<String>} objectIds
 */
GetObjectsParameters.prototype['objectIds'] = undefined;

/**
 * The requested object types.
 * @member {Array.<String>} types
 */
GetObjectsParameters.prototype['types'] = undefined;






export default GetObjectsParameters;

