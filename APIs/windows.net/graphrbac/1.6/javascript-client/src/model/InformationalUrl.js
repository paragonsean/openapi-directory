/**
 * GraphRbacManagementClient
 * The Graph RBAC Management Client
 *
 * The version of the OpenAPI document: 1.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InformationalUrl model module.
 * @module model/InformationalUrl
 * @version 1.6
 */
class InformationalUrl {
    /**
     * Constructs a new <code>InformationalUrl</code>.
     * Represents a group of URIs that provide terms of service, marketing, support and privacy policy information about an application. The default value for each string is null.
     * @alias module:model/InformationalUrl
     */
    constructor() { 
        
        InformationalUrl.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>InformationalUrl</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InformationalUrl} obj Optional instance to populate.
     * @return {module:model/InformationalUrl} The populated <code>InformationalUrl</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InformationalUrl();

            if (data.hasOwnProperty('marketing')) {
                obj['marketing'] = ApiClient.convertToType(data['marketing'], 'String');
            }
            if (data.hasOwnProperty('privacy')) {
                obj['privacy'] = ApiClient.convertToType(data['privacy'], 'String');
            }
            if (data.hasOwnProperty('support')) {
                obj['support'] = ApiClient.convertToType(data['support'], 'String');
            }
            if (data.hasOwnProperty('termsOfService')) {
                obj['termsOfService'] = ApiClient.convertToType(data['termsOfService'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InformationalUrl</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InformationalUrl</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['marketing'] && !(typeof data['marketing'] === 'string' || data['marketing'] instanceof String)) {
            throw new Error("Expected the field `marketing` to be a primitive type in the JSON string but got " + data['marketing']);
        }
        // ensure the json data is a string
        if (data['privacy'] && !(typeof data['privacy'] === 'string' || data['privacy'] instanceof String)) {
            throw new Error("Expected the field `privacy` to be a primitive type in the JSON string but got " + data['privacy']);
        }
        // ensure the json data is a string
        if (data['support'] && !(typeof data['support'] === 'string' || data['support'] instanceof String)) {
            throw new Error("Expected the field `support` to be a primitive type in the JSON string but got " + data['support']);
        }
        // ensure the json data is a string
        if (data['termsOfService'] && !(typeof data['termsOfService'] === 'string' || data['termsOfService'] instanceof String)) {
            throw new Error("Expected the field `termsOfService` to be a primitive type in the JSON string but got " + data['termsOfService']);
        }

        return true;
    }


}



/**
 * The marketing URI
 * @member {String} marketing
 */
InformationalUrl.prototype['marketing'] = undefined;

/**
 * The privacy policy URI
 * @member {String} privacy
 */
InformationalUrl.prototype['privacy'] = undefined;

/**
 * The support URI
 * @member {String} support
 */
InformationalUrl.prototype['support'] = undefined;

/**
 * The terms of service URI
 * @member {String} termsOfService
 */
InformationalUrl.prototype['termsOfService'] = undefined;






export default InformationalUrl;

