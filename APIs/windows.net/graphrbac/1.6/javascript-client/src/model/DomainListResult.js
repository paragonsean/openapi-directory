/**
 * GraphRbacManagementClient
 * The Graph RBAC Management Client
 *
 * The version of the OpenAPI document: 1.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Domain from './Domain';

/**
 * The DomainListResult model module.
 * @module model/DomainListResult
 * @version 1.6
 */
class DomainListResult {
    /**
     * Constructs a new <code>DomainListResult</code>.
     * Server response for Get tenant domains API call.
     * @alias module:model/DomainListResult
     */
    constructor() { 
        
        DomainListResult.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>DomainListResult</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DomainListResult} obj Optional instance to populate.
     * @return {module:model/DomainListResult} The populated <code>DomainListResult</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DomainListResult();

            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], [Domain]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DomainListResult</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DomainListResult</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['value'])) {
            throw new Error("Expected the field `value` to be an array in the JSON data but got " + data['value']);
        }

        return true;
    }


}



/**
 * the list of domains.
 * @member {Array.<module:model/Domain>} value
 */
DomainListResult.prototype['value'] = undefined;






export default DomainListResult;

