/**
 * GraphRbacManagementClient
 * The Graph RBAC Management Client
 *
 * The version of the OpenAPI document: 1.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DirectoryObject model module.
 * @module model/DirectoryObject
 * @version 1.6
 */
class DirectoryObject {
    /**
     * Constructs a new <code>DirectoryObject</code>.
     * Represents an Azure Active Directory object.
     * @alias module:model/DirectoryObject
     * @extends Object
     * @param objectType {String} The object type.
     */
    constructor(objectType) { 
        
        DirectoryObject.initialize(this, objectType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, objectType) { 
        obj['objectType'] = objectType;
    }

    /**
     * Constructs a <code>DirectoryObject</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DirectoryObject} obj Optional instance to populate.
     * @return {module:model/DirectoryObject} The populated <code>DirectoryObject</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DirectoryObject();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('deletionTimestamp')) {
                obj['deletionTimestamp'] = ApiClient.convertToType(data['deletionTimestamp'], 'Date');
            }
            if (data.hasOwnProperty('objectId')) {
                obj['objectId'] = ApiClient.convertToType(data['objectId'], 'String');
            }
            if (data.hasOwnProperty('objectType')) {
                obj['objectType'] = ApiClient.convertToType(data['objectType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DirectoryObject</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DirectoryObject</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DirectoryObject.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['objectId'] && !(typeof data['objectId'] === 'string' || data['objectId'] instanceof String)) {
            throw new Error("Expected the field `objectId` to be a primitive type in the JSON string but got " + data['objectId']);
        }
        // ensure the json data is a string
        if (data['objectType'] && !(typeof data['objectType'] === 'string' || data['objectType'] instanceof String)) {
            throw new Error("Expected the field `objectType` to be a primitive type in the JSON string but got " + data['objectType']);
        }

        return true;
    }


}

DirectoryObject.RequiredProperties = ["objectType"];

/**
 * The time at which the directory object was deleted.
 * @member {Date} deletionTimestamp
 */
DirectoryObject.prototype['deletionTimestamp'] = undefined;

/**
 * The object ID.
 * @member {String} objectId
 */
DirectoryObject.prototype['objectId'] = undefined;

/**
 * The object type.
 * @member {String} objectType
 */
DirectoryObject.prototype['objectType'] = undefined;






export default DirectoryObject;

