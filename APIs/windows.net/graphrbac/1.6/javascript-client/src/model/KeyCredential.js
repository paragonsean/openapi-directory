/**
 * GraphRbacManagementClient
 * The Graph RBAC Management Client
 *
 * The version of the OpenAPI document: 1.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The KeyCredential model module.
 * @module model/KeyCredential
 * @version 1.6
 */
class KeyCredential {
    /**
     * Constructs a new <code>KeyCredential</code>.
     * Active Directory Key Credential information.
     * @alias module:model/KeyCredential
     * @extends Object
     */
    constructor() { 
        
        KeyCredential.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>KeyCredential</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/KeyCredential} obj Optional instance to populate.
     * @return {module:model/KeyCredential} The populated <code>KeyCredential</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new KeyCredential();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('customKeyIdentifier')) {
                obj['customKeyIdentifier'] = ApiClient.convertToType(data['customKeyIdentifier'], 'String');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
            if (data.hasOwnProperty('keyId')) {
                obj['keyId'] = ApiClient.convertToType(data['keyId'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('usage')) {
                obj['usage'] = ApiClient.convertToType(data['usage'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>KeyCredential</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>KeyCredential</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['customKeyIdentifier'] && !(typeof data['customKeyIdentifier'] === 'string' || data['customKeyIdentifier'] instanceof String)) {
            throw new Error("Expected the field `customKeyIdentifier` to be a primitive type in the JSON string but got " + data['customKeyIdentifier']);
        }
        // ensure the json data is a string
        if (data['keyId'] && !(typeof data['keyId'] === 'string' || data['keyId'] instanceof String)) {
            throw new Error("Expected the field `keyId` to be a primitive type in the JSON string but got " + data['keyId']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['usage'] && !(typeof data['usage'] === 'string' || data['usage'] instanceof String)) {
            throw new Error("Expected the field `usage` to be a primitive type in the JSON string but got " + data['usage']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * Custom Key Identifier
 * @member {String} customKeyIdentifier
 */
KeyCredential.prototype['customKeyIdentifier'] = undefined;

/**
 * End date.
 * @member {Date} endDate
 */
KeyCredential.prototype['endDate'] = undefined;

/**
 * Key ID.
 * @member {String} keyId
 */
KeyCredential.prototype['keyId'] = undefined;

/**
 * Start date.
 * @member {Date} startDate
 */
KeyCredential.prototype['startDate'] = undefined;

/**
 * Type. Acceptable values are 'AsymmetricX509Cert' and 'Symmetric'.
 * @member {String} type
 */
KeyCredential.prototype['type'] = undefined;

/**
 * Usage. Acceptable values are 'Verify' and 'Sign'.
 * @member {String} usage
 */
KeyCredential.prototype['usage'] = undefined;

/**
 * Key value.
 * @member {String} value
 */
KeyCredential.prototype['value'] = undefined;






export default KeyCredential;

