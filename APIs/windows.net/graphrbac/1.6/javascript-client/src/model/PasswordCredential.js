/**
 * GraphRbacManagementClient
 * The Graph RBAC Management Client
 *
 * The version of the OpenAPI document: 1.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PasswordCredential model module.
 * @module model/PasswordCredential
 * @version 1.6
 */
class PasswordCredential {
    /**
     * Constructs a new <code>PasswordCredential</code>.
     * Active Directory Password Credential information.
     * @alias module:model/PasswordCredential
     * @extends Object
     */
    constructor() { 
        
        PasswordCredential.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PasswordCredential</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PasswordCredential} obj Optional instance to populate.
     * @return {module:model/PasswordCredential} The populated <code>PasswordCredential</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PasswordCredential();

            ApiClient.constructFromObject(data, obj, 'Object');
            

            if (data.hasOwnProperty('customKeyIdentifier')) {
                obj['customKeyIdentifier'] = ApiClient.convertToType(data['customKeyIdentifier'], 'Blob');
            }
            if (data.hasOwnProperty('endDate')) {
                obj['endDate'] = ApiClient.convertToType(data['endDate'], 'Date');
            }
            if (data.hasOwnProperty('keyId')) {
                obj['keyId'] = ApiClient.convertToType(data['keyId'], 'String');
            }
            if (data.hasOwnProperty('startDate')) {
                obj['startDate'] = ApiClient.convertToType(data['startDate'], 'Date');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PasswordCredential</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PasswordCredential</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['keyId'] && !(typeof data['keyId'] === 'string' || data['keyId'] instanceof String)) {
            throw new Error("Expected the field `keyId` to be a primitive type in the JSON string but got " + data['keyId']);
        }
        // ensure the json data is a string
        if (data['value'] && !(typeof data['value'] === 'string' || data['value'] instanceof String)) {
            throw new Error("Expected the field `value` to be a primitive type in the JSON string but got " + data['value']);
        }

        return true;
    }


}



/**
 * Custom Key Identifier
 * @member {Blob} customKeyIdentifier
 */
PasswordCredential.prototype['customKeyIdentifier'] = undefined;

/**
 * End date.
 * @member {Date} endDate
 */
PasswordCredential.prototype['endDate'] = undefined;

/**
 * Key ID.
 * @member {String} keyId
 */
PasswordCredential.prototype['keyId'] = undefined;

/**
 * Start date.
 * @member {Date} startDate
 */
PasswordCredential.prototype['startDate'] = undefined;

/**
 * Key value.
 * @member {String} value
 */
PasswordCredential.prototype['value'] = undefined;






export default PasswordCredential;

