/**
 * GraphRbacManagementClient
 * The Graph RBAC Management Client
 *
 * The version of the OpenAPI document: 1.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import OAuth2PermissionGrantListResult from '../model/OAuth2PermissionGrantListResult';

/**
* OAuth2PermissionGrantList service.
* @module api/OAuth2PermissionGrantListApi
* @version 1.6
*/
export default class OAuth2PermissionGrantListApi {

    /**
    * Constructs a new OAuth2PermissionGrantListApi. 
    * @alias module:api/OAuth2PermissionGrantListApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the oAuth2PermissionGrantList operation.
     * @callback module:api/OAuth2PermissionGrantListApi~oAuth2PermissionGrantListCallback
     * @param {String} error Error message, if any.
     * @param {module:model/OAuth2PermissionGrantListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Queries OAuth2 permissions grants for the relevant SP ObjectId of an app.
     * @param {String} apiVersion Client API version.
     * @param {String} tenantID The tenant ID.
     * @param {Object} opts Optional parameters
     * @param {String} [filter] This is the Service Principal ObjectId associated with the app
     * @param {module:api/OAuth2PermissionGrantListApi~oAuth2PermissionGrantListCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/OAuth2PermissionGrantListResult}
     */
    oAuth2PermissionGrantList(apiVersion, tenantID, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling oAuth2PermissionGrantList");
      }
      // verify the required parameter 'tenantID' is set
      if (tenantID === undefined || tenantID === null) {
        throw new Error("Missing the required parameter 'tenantID' when calling oAuth2PermissionGrantList");
      }

      let pathParams = {
        'tenantID': tenantID
      };
      let queryParams = {
        '$filter': opts['filter'],
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = OAuth2PermissionGrantListResult;
      return this.apiClient.callApi(
        '/{tenantID}/oauth2PermissionGrants', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
