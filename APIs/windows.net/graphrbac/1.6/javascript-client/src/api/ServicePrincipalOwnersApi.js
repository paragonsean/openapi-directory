/**
 * GraphRbacManagementClient
 * The Graph RBAC Management Client
 *
 * The version of the OpenAPI document: 1.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AddOwnerParameters from '../model/AddOwnerParameters';
import DirectoryObjectListResult from '../model/DirectoryObjectListResult';
import GraphError from '../model/GraphError';

/**
* ServicePrincipalOwners service.
* @module api/ServicePrincipalOwnersApi
* @version 1.6
*/
export default class ServicePrincipalOwnersApi {

    /**
    * Constructs a new ServicePrincipalOwnersApi. 
    * @alias module:api/ServicePrincipalOwnersApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the servicePrincipalsAddOwner operation.
     * @callback module:api/ServicePrincipalOwnersApi~servicePrincipalsAddOwnerCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add an owner to a service principal.
     * @param {String} objectId The object ID of the service principal to which to add the owner.
     * @param {String} apiVersion Client API version.
     * @param {String} tenantID The tenant ID.
     * @param {module:model/AddOwnerParameters} addOwnerParameters The URL of the owner object, such as https://graph.windows.net/0b1f9851-1bf0-433f-aec3-cb9272f093dc/directoryObjects/f260bbc4-c254-447b-94cf-293b5ec434dd.
     * @param {module:api/ServicePrincipalOwnersApi~servicePrincipalsAddOwnerCallback} callback The callback function, accepting three arguments: error, data, response
     */
    servicePrincipalsAddOwner(objectId, apiVersion, tenantID, addOwnerParameters, callback) {
      let postBody = addOwnerParameters;
      // verify the required parameter 'objectId' is set
      if (objectId === undefined || objectId === null) {
        throw new Error("Missing the required parameter 'objectId' when calling servicePrincipalsAddOwner");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling servicePrincipalsAddOwner");
      }
      // verify the required parameter 'tenantID' is set
      if (tenantID === undefined || tenantID === null) {
        throw new Error("Missing the required parameter 'tenantID' when calling servicePrincipalsAddOwner");
      }
      // verify the required parameter 'addOwnerParameters' is set
      if (addOwnerParameters === undefined || addOwnerParameters === null) {
        throw new Error("Missing the required parameter 'addOwnerParameters' when calling servicePrincipalsAddOwner");
      }

      let pathParams = {
        'objectId': objectId,
        'tenantID': tenantID
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = ['application/json', 'text/json'];
      let accepts = ['application/json', 'text/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/{tenantID}/servicePrincipals/{objectId}/$links/owners', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicePrincipalsListOwners operation.
     * @callback module:api/ServicePrincipalOwnersApi~servicePrincipalsListOwnersCallback
     * @param {String} error Error message, if any.
     * @param {module:model/DirectoryObjectListResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Directory objects that are owners of this service principal.
     * The owners are a set of non-admin users who are allowed to modify this object.
     * @param {String} objectId The object ID of the service principal for which to get owners.
     * @param {String} apiVersion Client API version.
     * @param {String} tenantID The tenant ID.
     * @param {module:api/ServicePrincipalOwnersApi~servicePrincipalsListOwnersCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/DirectoryObjectListResult}
     */
    servicePrincipalsListOwners(objectId, apiVersion, tenantID, callback) {
      let postBody = null;
      // verify the required parameter 'objectId' is set
      if (objectId === undefined || objectId === null) {
        throw new Error("Missing the required parameter 'objectId' when calling servicePrincipalsListOwners");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling servicePrincipalsListOwners");
      }
      // verify the required parameter 'tenantID' is set
      if (tenantID === undefined || tenantID === null) {
        throw new Error("Missing the required parameter 'tenantID' when calling servicePrincipalsListOwners");
      }

      let pathParams = {
        'objectId': objectId,
        'tenantID': tenantID
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = DirectoryObjectListResult;
      return this.apiClient.callApi(
        '/{tenantID}/servicePrincipals/{objectId}/owners', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the servicePrincipalsRemoveOwner operation.
     * @callback module:api/ServicePrincipalOwnersApi~servicePrincipalsRemoveOwnerCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove a member from owners.
     * @param {String} objectId The object ID of the service principal from which to remove the owner.
     * @param {String} ownerObjectId Owner object id
     * @param {String} apiVersion Client API version.
     * @param {String} tenantID The tenant ID.
     * @param {module:api/ServicePrincipalOwnersApi~servicePrincipalsRemoveOwnerCallback} callback The callback function, accepting three arguments: error, data, response
     */
    servicePrincipalsRemoveOwner(objectId, ownerObjectId, apiVersion, tenantID, callback) {
      let postBody = null;
      // verify the required parameter 'objectId' is set
      if (objectId === undefined || objectId === null) {
        throw new Error("Missing the required parameter 'objectId' when calling servicePrincipalsRemoveOwner");
      }
      // verify the required parameter 'ownerObjectId' is set
      if (ownerObjectId === undefined || ownerObjectId === null) {
        throw new Error("Missing the required parameter 'ownerObjectId' when calling servicePrincipalsRemoveOwner");
      }
      // verify the required parameter 'apiVersion' is set
      if (apiVersion === undefined || apiVersion === null) {
        throw new Error("Missing the required parameter 'apiVersion' when calling servicePrincipalsRemoveOwner");
      }
      // verify the required parameter 'tenantID' is set
      if (tenantID === undefined || tenantID === null) {
        throw new Error("Missing the required parameter 'tenantID' when calling servicePrincipalsRemoveOwner");
      }

      let pathParams = {
        'objectId': objectId,
        'ownerObjectId': ownerObjectId,
        'tenantID': tenantID
      };
      let queryParams = {
        'api-version': apiVersion
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['azure_auth'];
      let contentTypes = [];
      let accepts = ['application/json', 'text/json'];
      let returnType = null;
      return this.apiClient.callApi(
        '/{tenantID}/servicePrincipals/{objectId}/$links/owners/{ownerObjectId}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
