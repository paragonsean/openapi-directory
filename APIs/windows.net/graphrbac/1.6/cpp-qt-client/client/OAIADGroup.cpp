/**
 * GraphRbacManagementClient
 * The Graph RBAC Management Client
 *
 * The version of the OpenAPI document: 1.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIADGroup.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIADGroup::OAIADGroup(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIADGroup::OAIADGroup() {
    this->initializeModel();
}

OAIADGroup::~OAIADGroup() {}

void OAIADGroup::initializeModel() {

    m_display_name_isSet = false;
    m_display_name_isValid = false;

    m_mail_isSet = false;
    m_mail_isValid = false;

    m_mail_enabled_isSet = false;
    m_mail_enabled_isValid = false;

    m_mail_nickname_isSet = false;
    m_mail_nickname_isValid = false;

    m_security_enabled_isSet = false;
    m_security_enabled_isValid = false;

    m_deletion_timestamp_isSet = false;
    m_deletion_timestamp_isValid = false;

    m_object_id_isSet = false;
    m_object_id_isValid = false;

    m_object_type_isSet = false;
    m_object_type_isValid = false;
}

void OAIADGroup::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIADGroup::fromJsonObject(QJsonObject json) {

    m_display_name_isValid = ::OpenAPI::fromJsonValue(m_display_name, json[QString("displayName")]);
    m_display_name_isSet = !json[QString("displayName")].isNull() && m_display_name_isValid;

    m_mail_isValid = ::OpenAPI::fromJsonValue(m_mail, json[QString("mail")]);
    m_mail_isSet = !json[QString("mail")].isNull() && m_mail_isValid;

    m_mail_enabled_isValid = ::OpenAPI::fromJsonValue(m_mail_enabled, json[QString("mailEnabled")]);
    m_mail_enabled_isSet = !json[QString("mailEnabled")].isNull() && m_mail_enabled_isValid;

    m_mail_nickname_isValid = ::OpenAPI::fromJsonValue(m_mail_nickname, json[QString("mailNickname")]);
    m_mail_nickname_isSet = !json[QString("mailNickname")].isNull() && m_mail_nickname_isValid;

    m_security_enabled_isValid = ::OpenAPI::fromJsonValue(m_security_enabled, json[QString("securityEnabled")]);
    m_security_enabled_isSet = !json[QString("securityEnabled")].isNull() && m_security_enabled_isValid;

    m_deletion_timestamp_isValid = ::OpenAPI::fromJsonValue(m_deletion_timestamp, json[QString("deletionTimestamp")]);
    m_deletion_timestamp_isSet = !json[QString("deletionTimestamp")].isNull() && m_deletion_timestamp_isValid;

    m_object_id_isValid = ::OpenAPI::fromJsonValue(m_object_id, json[QString("objectId")]);
    m_object_id_isSet = !json[QString("objectId")].isNull() && m_object_id_isValid;

    m_object_type_isValid = ::OpenAPI::fromJsonValue(m_object_type, json[QString("objectType")]);
    m_object_type_isSet = !json[QString("objectType")].isNull() && m_object_type_isValid;
}

QString OAIADGroup::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIADGroup::asJsonObject() const {
    QJsonObject obj;
    if (m_display_name_isSet) {
        obj.insert(QString("displayName"), ::OpenAPI::toJsonValue(m_display_name));
    }
    if (m_mail_isSet) {
        obj.insert(QString("mail"), ::OpenAPI::toJsonValue(m_mail));
    }
    if (m_mail_enabled_isSet) {
        obj.insert(QString("mailEnabled"), ::OpenAPI::toJsonValue(m_mail_enabled));
    }
    if (m_mail_nickname_isSet) {
        obj.insert(QString("mailNickname"), ::OpenAPI::toJsonValue(m_mail_nickname));
    }
    if (m_security_enabled_isSet) {
        obj.insert(QString("securityEnabled"), ::OpenAPI::toJsonValue(m_security_enabled));
    }
    if (m_deletion_timestamp_isSet) {
        obj.insert(QString("deletionTimestamp"), ::OpenAPI::toJsonValue(m_deletion_timestamp));
    }
    if (m_object_id_isSet) {
        obj.insert(QString("objectId"), ::OpenAPI::toJsonValue(m_object_id));
    }
    if (m_object_type_isSet) {
        obj.insert(QString("objectType"), ::OpenAPI::toJsonValue(m_object_type));
    }
    return obj;
}

QString OAIADGroup::getDisplayName() const {
    return m_display_name;
}
void OAIADGroup::setDisplayName(const QString &display_name) {
    m_display_name = display_name;
    m_display_name_isSet = true;
}

bool OAIADGroup::is_display_name_Set() const{
    return m_display_name_isSet;
}

bool OAIADGroup::is_display_name_Valid() const{
    return m_display_name_isValid;
}

QString OAIADGroup::getMail() const {
    return m_mail;
}
void OAIADGroup::setMail(const QString &mail) {
    m_mail = mail;
    m_mail_isSet = true;
}

bool OAIADGroup::is_mail_Set() const{
    return m_mail_isSet;
}

bool OAIADGroup::is_mail_Valid() const{
    return m_mail_isValid;
}

bool OAIADGroup::isMailEnabled() const {
    return m_mail_enabled;
}
void OAIADGroup::setMailEnabled(const bool &mail_enabled) {
    m_mail_enabled = mail_enabled;
    m_mail_enabled_isSet = true;
}

bool OAIADGroup::is_mail_enabled_Set() const{
    return m_mail_enabled_isSet;
}

bool OAIADGroup::is_mail_enabled_Valid() const{
    return m_mail_enabled_isValid;
}

QString OAIADGroup::getMailNickname() const {
    return m_mail_nickname;
}
void OAIADGroup::setMailNickname(const QString &mail_nickname) {
    m_mail_nickname = mail_nickname;
    m_mail_nickname_isSet = true;
}

bool OAIADGroup::is_mail_nickname_Set() const{
    return m_mail_nickname_isSet;
}

bool OAIADGroup::is_mail_nickname_Valid() const{
    return m_mail_nickname_isValid;
}

bool OAIADGroup::isSecurityEnabled() const {
    return m_security_enabled;
}
void OAIADGroup::setSecurityEnabled(const bool &security_enabled) {
    m_security_enabled = security_enabled;
    m_security_enabled_isSet = true;
}

bool OAIADGroup::is_security_enabled_Set() const{
    return m_security_enabled_isSet;
}

bool OAIADGroup::is_security_enabled_Valid() const{
    return m_security_enabled_isValid;
}

QDateTime OAIADGroup::getDeletionTimestamp() const {
    return m_deletion_timestamp;
}
void OAIADGroup::setDeletionTimestamp(const QDateTime &deletion_timestamp) {
    m_deletion_timestamp = deletion_timestamp;
    m_deletion_timestamp_isSet = true;
}

bool OAIADGroup::is_deletion_timestamp_Set() const{
    return m_deletion_timestamp_isSet;
}

bool OAIADGroup::is_deletion_timestamp_Valid() const{
    return m_deletion_timestamp_isValid;
}

QString OAIADGroup::getObjectId() const {
    return m_object_id;
}
void OAIADGroup::setObjectId(const QString &object_id) {
    m_object_id = object_id;
    m_object_id_isSet = true;
}

bool OAIADGroup::is_object_id_Set() const{
    return m_object_id_isSet;
}

bool OAIADGroup::is_object_id_Valid() const{
    return m_object_id_isValid;
}

QString OAIADGroup::getObjectType() const {
    return m_object_type;
}
void OAIADGroup::setObjectType(const QString &object_type) {
    m_object_type = object_type;
    m_object_type_isSet = true;
}

bool OAIADGroup::is_object_type_Set() const{
    return m_object_type_isSet;
}

bool OAIADGroup::is_object_type_Valid() const{
    return m_object_type_isValid;
}

bool OAIADGroup::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_display_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mail_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mail_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mail_nickname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_security_enabled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_deletion_timestamp_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_object_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIADGroup::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_object_type_isValid && true;
}

} // namespace OpenAPI
