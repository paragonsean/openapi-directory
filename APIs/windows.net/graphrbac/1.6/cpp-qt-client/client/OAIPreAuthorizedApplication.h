/**
 * GraphRbacManagementClient
 * The Graph RBAC Management Client
 *
 * The version of the OpenAPI document: 1.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPreAuthorizedApplication.h
 *
 * Contains information about pre authorized client application.
 */

#ifndef OAIPreAuthorizedApplication_H
#define OAIPreAuthorizedApplication_H

#include <QJsonObject>

#include "OAIPreAuthorizedApplicationExtension.h"
#include "OAIPreAuthorizedApplicationPermission.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIPreAuthorizedApplicationExtension;
class OAIPreAuthorizedApplicationPermission;

class OAIPreAuthorizedApplication : public OAIObject {
public:
    OAIPreAuthorizedApplication();
    OAIPreAuthorizedApplication(QString json);
    ~OAIPreAuthorizedApplication() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppId() const;
    void setAppId(const QString &app_id);
    bool is_app_id_Set() const;
    bool is_app_id_Valid() const;

    QList<OAIPreAuthorizedApplicationExtension> getExtensions() const;
    void setExtensions(const QList<OAIPreAuthorizedApplicationExtension> &extensions);
    bool is_extensions_Set() const;
    bool is_extensions_Valid() const;

    QList<OAIPreAuthorizedApplicationPermission> getPermissions() const;
    void setPermissions(const QList<OAIPreAuthorizedApplicationPermission> &permissions);
    bool is_permissions_Set() const;
    bool is_permissions_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_id;
    bool m_app_id_isSet;
    bool m_app_id_isValid;

    QList<OAIPreAuthorizedApplicationExtension> m_extensions;
    bool m_extensions_isSet;
    bool m_extensions_isValid;

    QList<OAIPreAuthorizedApplicationPermission> m_permissions;
    bool m_permissions_isSet;
    bool m_permissions_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPreAuthorizedApplication)

#endif // OAIPreAuthorizedApplication_H
