/**
 * GraphRbacManagementClient
 * The Graph RBAC Management Client
 *
 * The version of the OpenAPI document: 1.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOAuth2Permission.h
 *
 * Represents an OAuth 2.0 delegated permission scope. The specified OAuth 2.0 delegated permission scopes may be requested by client applications (through the requiredResourceAccess collection on the Application object) when calling a resource application. The oauth2Permissions property of the ServicePrincipal entity and of the Application entity is a collection of OAuth2Permission.
 */

#ifndef OAIOAuth2Permission_H
#define OAIOAuth2Permission_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIOAuth2Permission : public OAIObject {
public:
    OAIOAuth2Permission();
    OAIOAuth2Permission(QString json);
    ~OAIOAuth2Permission() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdminConsentDescription() const;
    void setAdminConsentDescription(const QString &admin_consent_description);
    bool is_admin_consent_description_Set() const;
    bool is_admin_consent_description_Valid() const;

    QString getAdminConsentDisplayName() const;
    void setAdminConsentDisplayName(const QString &admin_consent_display_name);
    bool is_admin_consent_display_name_Set() const;
    bool is_admin_consent_display_name_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsEnabled() const;
    void setIsEnabled(const bool &is_enabled);
    bool is_is_enabled_Set() const;
    bool is_is_enabled_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUserConsentDescription() const;
    void setUserConsentDescription(const QString &user_consent_description);
    bool is_user_consent_description_Set() const;
    bool is_user_consent_description_Valid() const;

    QString getUserConsentDisplayName() const;
    void setUserConsentDisplayName(const QString &user_consent_display_name);
    bool is_user_consent_display_name_Set() const;
    bool is_user_consent_display_name_Valid() const;

    QString getValue() const;
    void setValue(const QString &value);
    bool is_value_Set() const;
    bool is_value_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_admin_consent_description;
    bool m_admin_consent_description_isSet;
    bool m_admin_consent_description_isValid;

    QString m_admin_consent_display_name;
    bool m_admin_consent_display_name_isSet;
    bool m_admin_consent_display_name_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_enabled;
    bool m_is_enabled_isSet;
    bool m_is_enabled_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_user_consent_description;
    bool m_user_consent_description_isSet;
    bool m_user_consent_description_isValid;

    QString m_user_consent_display_name;
    bool m_user_consent_display_name_isSet;
    bool m_user_consent_display_name_isValid;

    QString m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOAuth2Permission)

#endif // OAIOAuth2Permission_H
