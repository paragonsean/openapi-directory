/**
 * GraphRbacManagementClient
 * The Graph RBAC Management Client
 *
 * The version of the OpenAPI document: 1.6
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGraphError.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGraphError::OAIGraphError(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGraphError::OAIGraphError() {
    this->initializeModel();
}

OAIGraphError::~OAIGraphError() {}

void OAIGraphError::initializeModel() {

    m_odata_error_isSet = false;
    m_odata_error_isValid = false;
}

void OAIGraphError::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGraphError::fromJsonObject(QJsonObject json) {

    m_odata_error_isValid = ::OpenAPI::fromJsonValue(m_odata_error, json[QString("odata.error")]);
    m_odata_error_isSet = !json[QString("odata.error")].isNull() && m_odata_error_isValid;
}

QString OAIGraphError::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGraphError::asJsonObject() const {
    QJsonObject obj;
    if (m_odata_error.isSet()) {
        obj.insert(QString("odata.error"), ::OpenAPI::toJsonValue(m_odata_error));
    }
    return obj;
}

OAIOdataError OAIGraphError::getOdataError() const {
    return m_odata_error;
}
void OAIGraphError::setOdataError(const OAIOdataError &odata_error) {
    m_odata_error = odata_error;
    m_odata_error_isSet = true;
}

bool OAIGraphError::is_odata_error_Set() const{
    return m_odata_error_isSet;
}

bool OAIGraphError::is_odata_error_Valid() const{
    return m_odata_error_isValid;
}

bool OAIGraphError::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_odata_error.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGraphError::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
