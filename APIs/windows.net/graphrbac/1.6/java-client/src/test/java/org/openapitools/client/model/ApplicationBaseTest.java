/*
 * GraphRbacManagementClient
 * The Graph RBAC Management Client
 *
 * The version of the OpenAPI document: 1.6
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AppRole;
import org.openapitools.client.model.GroupMembershipClaims;
import org.openapitools.client.model.InformationalUrl;
import org.openapitools.client.model.KeyCredential;
import org.openapitools.client.model.OAuth2Permission;
import org.openapitools.client.model.OptionalClaims;
import org.openapitools.client.model.PasswordCredential;
import org.openapitools.client.model.PreAuthorizedApplication;
import org.openapitools.client.model.RequiredResourceAccess;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ApplicationBase
 */
public class ApplicationBaseTest {
    private final ApplicationBase model = new ApplicationBase();

    /**
     * Model tests for ApplicationBase
     */
    @Test
    public void testApplicationBase() {
        // TODO: test ApplicationBase
    }

    /**
     * Test the property 'allowGuestsSignIn'
     */
    @Test
    public void allowGuestsSignInTest() {
        // TODO: test allowGuestsSignIn
    }

    /**
     * Test the property 'allowPassthroughUsers'
     */
    @Test
    public void allowPassthroughUsersTest() {
        // TODO: test allowPassthroughUsers
    }

    /**
     * Test the property 'appLogoUrl'
     */
    @Test
    public void appLogoUrlTest() {
        // TODO: test appLogoUrl
    }

    /**
     * Test the property 'appPermissions'
     */
    @Test
    public void appPermissionsTest() {
        // TODO: test appPermissions
    }

    /**
     * Test the property 'appRoles'
     */
    @Test
    public void appRolesTest() {
        // TODO: test appRoles
    }

    /**
     * Test the property 'availableToOtherTenants'
     */
    @Test
    public void availableToOtherTenantsTest() {
        // TODO: test availableToOtherTenants
    }

    /**
     * Test the property 'errorUrl'
     */
    @Test
    public void errorUrlTest() {
        // TODO: test errorUrl
    }

    /**
     * Test the property 'groupMembershipClaims'
     */
    @Test
    public void groupMembershipClaimsTest() {
        // TODO: test groupMembershipClaims
    }

    /**
     * Test the property 'homepage'
     */
    @Test
    public void homepageTest() {
        // TODO: test homepage
    }

    /**
     * Test the property 'informationalUrls'
     */
    @Test
    public void informationalUrlsTest() {
        // TODO: test informationalUrls
    }

    /**
     * Test the property 'isDeviceOnlyAuthSupported'
     */
    @Test
    public void isDeviceOnlyAuthSupportedTest() {
        // TODO: test isDeviceOnlyAuthSupported
    }

    /**
     * Test the property 'keyCredentials'
     */
    @Test
    public void keyCredentialsTest() {
        // TODO: test keyCredentials
    }

    /**
     * Test the property 'knownClientApplications'
     */
    @Test
    public void knownClientApplicationsTest() {
        // TODO: test knownClientApplications
    }

    /**
     * Test the property 'logoutUrl'
     */
    @Test
    public void logoutUrlTest() {
        // TODO: test logoutUrl
    }

    /**
     * Test the property 'oauth2AllowImplicitFlow'
     */
    @Test
    public void oauth2AllowImplicitFlowTest() {
        // TODO: test oauth2AllowImplicitFlow
    }

    /**
     * Test the property 'oauth2AllowUrlPathMatching'
     */
    @Test
    public void oauth2AllowUrlPathMatchingTest() {
        // TODO: test oauth2AllowUrlPathMatching
    }

    /**
     * Test the property 'oauth2Permissions'
     */
    @Test
    public void oauth2PermissionsTest() {
        // TODO: test oauth2Permissions
    }

    /**
     * Test the property 'oauth2RequirePostResponse'
     */
    @Test
    public void oauth2RequirePostResponseTest() {
        // TODO: test oauth2RequirePostResponse
    }

    /**
     * Test the property 'optionalClaims'
     */
    @Test
    public void optionalClaimsTest() {
        // TODO: test optionalClaims
    }

    /**
     * Test the property 'orgRestrictions'
     */
    @Test
    public void orgRestrictionsTest() {
        // TODO: test orgRestrictions
    }

    /**
     * Test the property 'passwordCredentials'
     */
    @Test
    public void passwordCredentialsTest() {
        // TODO: test passwordCredentials
    }

    /**
     * Test the property 'preAuthorizedApplications'
     */
    @Test
    public void preAuthorizedApplicationsTest() {
        // TODO: test preAuthorizedApplications
    }

    /**
     * Test the property 'publicClient'
     */
    @Test
    public void publicClientTest() {
        // TODO: test publicClient
    }

    /**
     * Test the property 'publisherDomain'
     */
    @Test
    public void publisherDomainTest() {
        // TODO: test publisherDomain
    }

    /**
     * Test the property 'replyUrls'
     */
    @Test
    public void replyUrlsTest() {
        // TODO: test replyUrls
    }

    /**
     * Test the property 'requiredResourceAccess'
     */
    @Test
    public void requiredResourceAccessTest() {
        // TODO: test requiredResourceAccess
    }

    /**
     * Test the property 'samlMetadataUrl'
     */
    @Test
    public void samlMetadataUrlTest() {
        // TODO: test samlMetadataUrl
    }

    /**
     * Test the property 'signInAudience'
     */
    @Test
    public void signInAudienceTest() {
        // TODO: test signInAudience
    }

    /**
     * Test the property 'wwwHomepage'
     */
    @Test
    public void wwwHomepageTest() {
        // TODO: test wwwHomepage
    }

}
