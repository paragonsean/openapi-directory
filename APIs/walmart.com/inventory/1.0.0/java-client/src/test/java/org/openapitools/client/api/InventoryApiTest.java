/*
 * Inventory Management
 * Maintaining up-to-date inventory for your items on Walmart.com ensures a great experience for your customers and greater sales opportunities for you.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import java.io.File;
import org.openapitools.client.model.GetInventory200Response;
import org.openapitools.client.model.GetMultiNodeInventoryForAllSkuAndAllShipNodes200Response;
import org.openapitools.client.model.GetMultiNodeInventoryForSkuAndAllShipnodes200Response;
import org.openapitools.client.model.GetWFSInventory200Response;
import org.openapitools.client.model.UpdateBulkInventory200Response;
import org.openapitools.client.model.UpdateMultiNodeInventory200Response;
import org.openapitools.client.model.UpdateMultiNodeInventoryRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for InventoryApi
 */
@Disabled
public class InventoryApiTest {

    private final InventoryApi api = new InventoryApi();

    /**
     * Inventory
     *
     * You can use this API to get the inventory for a given item.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInventoryTest() throws ApiException {
        String sku = null;
        String WM_SEC_ACCESS_TOKEN = null;
        String WM_QOS_CORRELATION_ID = null;
        String WM_SVC_NAME = null;
        String shipNode = null;
        String WM_CONSUMER_CHANNEL_TYPE = null;
        GetInventory200Response response = api.getInventory(sku, WM_SEC_ACCESS_TOKEN, WM_QOS_CORRELATION_ID, WM_SVC_NAME, shipNode, WM_CONSUMER_CHANNEL_TYPE);
        // TODO: test validations
    }

    /**
     * Multiple Item Inventory for All Ship Nodes
     *
     * This API will retrieve the inventory count for all of a seller&#39;s items across all ship nodes by item to ship node mapping. Inventory can be zero or non-zero. Please note that NextCursor value changes and it needs to be passed on from the previous call to next call.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMultiNodeInventoryForAllSkuAndAllShipNodesTest() throws ApiException {
        String WM_SEC_ACCESS_TOKEN = null;
        String WM_QOS_CORRELATION_ID = null;
        String WM_SVC_NAME = null;
        String limit = null;
        String nextCursor = null;
        String WM_CONSUMER_CHANNEL_TYPE = null;
        GetMultiNodeInventoryForAllSkuAndAllShipNodes200Response response = api.getMultiNodeInventoryForAllSkuAndAllShipNodes(WM_SEC_ACCESS_TOKEN, WM_QOS_CORRELATION_ID, WM_SVC_NAME, limit, nextCursor, WM_CONSUMER_CHANNEL_TYPE);
        // TODO: test validations
    }

    /**
     * Single Item Inventory by Ship Node
     *
     * This API will retrieve the inventory count for an item across all ship nodes or one specific ship node. You can specify the ship node for which you want to fetch the inventory
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getMultiNodeInventoryForSkuAndAllShipnodesTest() throws ApiException {
        String sku = null;
        String WM_SEC_ACCESS_TOKEN = null;
        String WM_QOS_CORRELATION_ID = null;
        String WM_SVC_NAME = null;
        String shipNode = null;
        String WM_CONSUMER_CHANNEL_TYPE = null;
        GetMultiNodeInventoryForSkuAndAllShipnodes200Response response = api.getMultiNodeInventoryForSkuAndAllShipnodes(sku, WM_SEC_ACCESS_TOKEN, WM_QOS_CORRELATION_ID, WM_SVC_NAME, shipNode, WM_CONSUMER_CHANNEL_TYPE);
        // TODO: test validations
    }

    /**
     * WFS Inventory
     *
     * You can use this API to get the current Available to Sell inventory quantities for all WFS items in your catalog. You can also query specific SKUs or filter to only items updated after a specific date in order to reduce the response size.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWFSInventoryTest() throws ApiException {
        String WM_SEC_ACCESS_TOKEN = null;
        String WM_QOS_CORRELATION_ID = null;
        String WM_SVC_NAME = null;
        String sku = null;
        String fromModifiedDate = null;
        String toModifiedDate = null;
        String limit = null;
        String offset = null;
        String WM_CONSUMER_CHANNEL_TYPE = null;
        GetWFSInventory200Response response = api.getWFSInventory(WM_SEC_ACCESS_TOKEN, WM_QOS_CORRELATION_ID, WM_SVC_NAME, sku, fromModifiedDate, toModifiedDate, limit, offset, WM_CONSUMER_CHANNEL_TYPE);
        // TODO: test validations
    }

    /**
     * Bulk Item Inventory Update
     *
     * Updates inventory for items in bulk.  Seller Can either use feed type \&quot;inventory\&quot; or \&quot;MP_INVENTORY\&quot;  * Inventory spec 1.4 feed type: inventory  * Inventory spec 1.5 feed type: MP_INVENTORY   Please Note: Multi Node Inventory Update Feed (feedType&#x3D;MP_INVENTORY) only supports JSON Request and Responses. Refer to \&quot;MultiNode_Bulk_Inventory_Update_Request.json\&quot; for the corresponding request sample    Refer to the &lt;a href&#x3D;\&quot;https://developer.walmart.com/doc/us/us-mp/us-mp-inventory/\&quot;&gt;guide section&lt;/a&gt; for more detailed guide around each of the feed types    Refer to the throttling limits before uploading the Feed Files.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateBulkInventoryTest() throws ApiException {
        String feedType = null;
        String WM_SEC_ACCESS_TOKEN = null;
        String WM_QOS_CORRELATION_ID = null;
        String WM_SVC_NAME = null;
        File _file = null;
        String shipNode = null;
        String WM_CONSUMER_CHANNEL_TYPE = null;
        UpdateBulkInventory200Response response = api.updateBulkInventory(feedType, WM_SEC_ACCESS_TOKEN, WM_QOS_CORRELATION_ID, WM_SVC_NAME, _file, shipNode, WM_CONSUMER_CHANNEL_TYPE);
        // TODO: test validations
    }

    /**
     * Update inventory
     *
     * Updates the inventory for a given item.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateInventoryForAnItemTest() throws ApiException {
        String sku = null;
        String WM_SEC_ACCESS_TOKEN = null;
        String WM_QOS_CORRELATION_ID = null;
        String WM_SVC_NAME = null;
        GetInventory200Response getInventory200Response = null;
        String shipNode = null;
        String WM_CONSUMER_CHANNEL_TYPE = null;
        GetInventory200Response response = api.updateInventoryForAnItem(sku, WM_SEC_ACCESS_TOKEN, WM_QOS_CORRELATION_ID, WM_SVC_NAME, getInventory200Response, shipNode, WM_CONSUMER_CHANNEL_TYPE);
        // TODO: test validations
    }

    /**
     * Update Item Inventory per Ship Node
     *
     * This API will update the inventory for an item across one or more fulfillment centers, known as ship nodes.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateMultiNodeInventoryTest() throws ApiException {
        String sku = null;
        String WM_SEC_ACCESS_TOKEN = null;
        String WM_QOS_CORRELATION_ID = null;
        String WM_SVC_NAME = null;
        UpdateMultiNodeInventoryRequest updateMultiNodeInventoryRequest = null;
        String WM_CONSUMER_CHANNEL_TYPE = null;
        UpdateMultiNodeInventory200Response response = api.updateMultiNodeInventory(sku, WM_SEC_ACCESS_TOKEN, WM_QOS_CORRELATION_ID, WM_SVC_NAME, updateMultiNodeInventoryRequest, WM_CONSUMER_CHANNEL_TYPE);
        // TODO: test validations
    }

}
