# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_multi_node_inventory_for_all_sku_and_all_ship_nodes200_response_elements_inventories_inner_nodes_inner_avail_to_sell_qty import GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerAvailToSellQty
from openapi_server.models.get_multi_node_inventory_for_all_sku_and_all_ship_nodes200_response_elements_inventories_inner_nodes_inner_input_qty import GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerInputQty
from openapi_server.models.get_multi_node_inventory_for_all_sku_and_all_ship_nodes200_response_elements_inventories_inner_nodes_inner_reserved_qty import GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerReservedQty
from openapi_server import util


class GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, avail_to_sell_qty: GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerAvailToSellQty=None, input_qty: GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerInputQty=None, reserved_qty: GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerReservedQty=None, ship_node: str=None):
        """GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner - a model defined in OpenAPI

        :param avail_to_sell_qty: The avail_to_sell_qty of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.
        :param input_qty: The input_qty of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.
        :param reserved_qty: The reserved_qty of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.
        :param ship_node: The ship_node of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.
        """
        self.openapi_types = {
            'avail_to_sell_qty': GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerAvailToSellQty,
            'input_qty': GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerInputQty,
            'reserved_qty': GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerReservedQty,
            'ship_node': str
        }

        self.attribute_map = {
            'avail_to_sell_qty': 'availToSellQty',
            'input_qty': 'inputQty',
            'reserved_qty': 'reservedQty',
            'ship_node': 'shipNode'
        }

        self._avail_to_sell_qty = avail_to_sell_qty
        self._input_qty = input_qty
        self._reserved_qty = reserved_qty
        self._ship_node = ship_node

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def avail_to_sell_qty(self):
        """Gets the avail_to_sell_qty of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.


        :return: The avail_to_sell_qty of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.
        :rtype: GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerAvailToSellQty
        """
        return self._avail_to_sell_qty

    @avail_to_sell_qty.setter
    def avail_to_sell_qty(self, avail_to_sell_qty):
        """Sets the avail_to_sell_qty of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.


        :param avail_to_sell_qty: The avail_to_sell_qty of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.
        :type avail_to_sell_qty: GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerAvailToSellQty
        """

        self._avail_to_sell_qty = avail_to_sell_qty

    @property
    def input_qty(self):
        """Gets the input_qty of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.


        :return: The input_qty of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.
        :rtype: GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerInputQty
        """
        return self._input_qty

    @input_qty.setter
    def input_qty(self, input_qty):
        """Sets the input_qty of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.


        :param input_qty: The input_qty of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.
        :type input_qty: GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerInputQty
        """

        self._input_qty = input_qty

    @property
    def reserved_qty(self):
        """Gets the reserved_qty of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.


        :return: The reserved_qty of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.
        :rtype: GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerReservedQty
        """
        return self._reserved_qty

    @reserved_qty.setter
    def reserved_qty(self, reserved_qty):
        """Sets the reserved_qty of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.


        :param reserved_qty: The reserved_qty of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.
        :type reserved_qty: GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerReservedQty
        """

        self._reserved_qty = reserved_qty

    @property
    def ship_node(self):
        """Gets the ship_node of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.

        ShipNode Id of the ship node for which the inventory is requested

        :return: The ship_node of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.
        :rtype: str
        """
        return self._ship_node

    @ship_node.setter
    def ship_node(self, ship_node):
        """Sets the ship_node of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.

        ShipNode Id of the ship node for which the inventory is requested

        :param ship_node: The ship_node of this GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInner.
        :type ship_node: str
        """

        self._ship_node = ship_node
