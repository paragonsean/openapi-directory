# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_multi_node_inventory_for_all_sku_and_all_ship_nodes200_response_elements_inventories_inner import GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInner
from openapi_server import util


class Elements(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inventories: List[GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInner]=None):
        """Elements - a model defined in OpenAPI

        :param inventories: The inventories of this Elements.
        """
        self.openapi_types = {
            'inventories': List[GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInner]
        }

        self.attribute_map = {
            'inventories': 'inventories'
        }

        self._inventories = inventories

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Elements':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Elements of this Elements.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inventories(self):
        """Gets the inventories of this Elements.


        :return: The inventories of this Elements.
        :rtype: List[GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInner]
        """
        return self._inventories

    @inventories.setter
    def inventories(self, inventories):
        """Sets the inventories of this Elements.


        :param inventories: The inventories of this Elements.
        :type inventories: List[GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInner]
        """

        self._inventories = inventories
