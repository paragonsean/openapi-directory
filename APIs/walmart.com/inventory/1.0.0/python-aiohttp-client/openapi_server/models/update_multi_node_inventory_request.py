# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_multi_node_inventory_request_inventories import UpdateMultiNodeInventoryRequestInventories
from openapi_server import util


class UpdateMultiNodeInventoryRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inventories: UpdateMultiNodeInventoryRequestInventories=None):
        """UpdateMultiNodeInventoryRequest - a model defined in OpenAPI

        :param inventories: The inventories of this UpdateMultiNodeInventoryRequest.
        """
        self.openapi_types = {
            'inventories': UpdateMultiNodeInventoryRequestInventories
        }

        self.attribute_map = {
            'inventories': 'inventories'
        }

        self._inventories = inventories

    @classmethod
    def from_dict(cls, dikt: dict) -> 'UpdateMultiNodeInventoryRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The updateMultiNodeInventory_request of this UpdateMultiNodeInventoryRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inventories(self):
        """Gets the inventories of this UpdateMultiNodeInventoryRequest.


        :return: The inventories of this UpdateMultiNodeInventoryRequest.
        :rtype: UpdateMultiNodeInventoryRequestInventories
        """
        return self._inventories

    @inventories.setter
    def inventories(self, inventories):
        """Sets the inventories of this UpdateMultiNodeInventoryRequest.


        :param inventories: The inventories of this UpdateMultiNodeInventoryRequest.
        :type inventories: UpdateMultiNodeInventoryRequestInventories
        """
        if inventories is None:
            raise ValueError("Invalid value for `inventories`, must not be `None`")

        self._inventories = inventories
