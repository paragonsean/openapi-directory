# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.update_multi_node_inventory200_response_nodes_inner import UpdateMultiNodeInventory200ResponseNodesInner
from openapi_server import util


class MultiNodeInventoryUpdateResponseDTO(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, nodes: List[UpdateMultiNodeInventory200ResponseNodesInner]=None, sku: str=None):
        """MultiNodeInventoryUpdateResponseDTO - a model defined in OpenAPI

        :param nodes: The nodes of this MultiNodeInventoryUpdateResponseDTO.
        :param sku: The sku of this MultiNodeInventoryUpdateResponseDTO.
        """
        self.openapi_types = {
            'nodes': List[UpdateMultiNodeInventory200ResponseNodesInner],
            'sku': str
        }

        self.attribute_map = {
            'nodes': 'nodes',
            'sku': 'sku'
        }

        self._nodes = nodes
        self._sku = sku

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MultiNodeInventoryUpdateResponseDTO':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MultiNodeInventoryUpdateResponseDTO of this MultiNodeInventoryUpdateResponseDTO.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nodes(self):
        """Gets the nodes of this MultiNodeInventoryUpdateResponseDTO.


        :return: The nodes of this MultiNodeInventoryUpdateResponseDTO.
        :rtype: List[UpdateMultiNodeInventory200ResponseNodesInner]
        """
        return self._nodes

    @nodes.setter
    def nodes(self, nodes):
        """Sets the nodes of this MultiNodeInventoryUpdateResponseDTO.


        :param nodes: The nodes of this MultiNodeInventoryUpdateResponseDTO.
        :type nodes: List[UpdateMultiNodeInventory200ResponseNodesInner]
        """

        self._nodes = nodes

    @property
    def sku(self):
        """Gets the sku of this MultiNodeInventoryUpdateResponseDTO.

        An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item.

        :return: The sku of this MultiNodeInventoryUpdateResponseDTO.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this MultiNodeInventoryUpdateResponseDTO.

        An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item.

        :param sku: The sku of this MultiNodeInventoryUpdateResponseDTO.
        :type sku: str
        """

        self._sku = sku
