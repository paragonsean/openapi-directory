openapi: 3.0.1
info:
  contact:
    x-twitter: Walmart
  description: Maintaining up-to-date inventory for your items on Walmart.com ensures
    a great experience for your customers and greater sales opportunities for you.
  title: Inventory Management
  version: 1.0.0
  x-apisguru-categories:
  - ecommerce
  x-logo:
    url: https://twitter.com/Walmart/profile_image?size=original
  x-origin:
  - format: openapi
    url: https://developer.walmart.com/api/detail
    version: "3.0"
  x-providerName: walmart.com
  x-serviceName: inventory
servers:
- description: Production URL
  url: https://marketplace.walmartapis.com
- description: Sandbox URL
  url: https://sandbox.walmartapis.com
security:
- {}
paths:
  /v3/feeds:
    post:
      description: "Updates inventory for items in bulk. \nSeller Can either use feed\
        \ type \"inventory\" or \"MP_INVENTORY\" \n* Inventory spec 1.4 feed type:\
        \ inventory \n* Inventory spec 1.5 feed type: MP_INVENTORY \n\nPlease Note:\
        \ Multi Node Inventory Update Feed (feedType=MP_INVENTORY) only supports JSON\
        \ Request and Responses. Refer to \"MultiNode_Bulk_Inventory_Update_Request.json\"\
        \ for the corresponding request sample \n \nRefer to the <a href=\"https://developer.walmart.com/doc/us/us-mp/us-mp-inventory/\"\
        >guide section</a> for more detailed guide around each of the feed types \n\
        \n Refer to the throttling limits before uploading the Feed Files."
      operationId: update_bulk_inventory
      parameters:
      - description: The feed Type
        explode: true
        in: query
        name: feedType
        required: true
        schema:
          enum:
          - inventory
          - MP_INVENTORY
          type: string
        style: form
      - description: The shipNode for which the inventory is to be updated. Not required
          in case of Multi Node Inventory Update Feed (feedType=MP_INVENTORY)
        explode: true
        in: query
        name: shipNode
        required: false
        schema:
          type: string
        style: form
      - description: The access token retrieved in the Token API call
        example: eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM.....
        explode: false
        in: header
        name: WM_SEC.ACCESS_TOKEN
        required: true
        schema:
          type: string
        style: simple
      - description: A unique ID to track the consumer request by channel. Use the
          Consumer Channel Type received during onboarding
        explode: false
        in: header
        name: WM_CONSUMER.CHANNEL.TYPE
        required: false
        schema:
          type: string
        style: simple
      - description: A unique ID which identifies each API call and used to track
          and debug issues; use a random generated GUID for this ID
        example: b3261d2d-028a-4ef7-8602-633c23200af6
        explode: false
        in: header
        name: WM_QOS.CORRELATION_ID
        required: true
        schema:
          type: string
        style: simple
      - description: Walmart Service Name
        example: Walmart Service Name
        explode: false
        in: header
        name: WM_SVC.NAME
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          multipart/form-data:
            examples:
              MultiNode_Bulk_Inventory_Update_Request:
                value:
                  inventory:
                  - shipNodes:
                    - quantity:
                        amount: 100
                        unit: EACH
                      shipNode: "10000003527"
                    sku: "190086893939"
                  - shipNodes:
                    - quantity:
                        amount: 21
                        unit: EACH
                      shipNode: "10000003527"
                    sku: 685387364107_SS4_01
                  - shipNodes:
                    - quantity:
                        amount: 13
                        unit: EACH
                      shipNode: "10000003527"
                    - quantity:
                        amount: 12
                        unit: EACH
                      shipNode: "1000000352"
                    sku: 5700521553133_toolsnonwfs_2
                  inventoryHeader:
                    version: "1.5"
              json1:
                value:
                  Inventory:
                  - quantity:
                      amount: 10
                      unit: EACH
                    sku: test1
                  - quantity:
                      amount: 20
                      unit: EACH
                    sku: "894728"
                  InventoryHeader:
                    version: "1.4"
              xml1:
                value: |
                  <InventoryFeed xmlns="http://walmart.com/">
                      <InventoryHeader>
                          <version>1.5</version>
                      </InventoryHeader>
                      <inventory>
                          <sku>test1</sku>
                          <quantity>
                              <unit>EACH</unit>
                              <amount>10</amount>
                          </quantity>
                      </inventory>
                      <inventory>
                          <sku>894728</sku>
                          <quantity>
                              <unit>EACH</unit>
                              <amount>20</amount>
                          </quantity>
                      </inventory>
                  </InventoryFeed>
            schema:
              $ref: '#/components/schemas/updateBulkInventory_request'
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              example:
                feedId: FFE538D9B25A4000AD2A067ACEDCF4C4@AUoBAQA
              schema:
                $ref: '#/components/schemas/updateBulkInventory_200_response'
            application/xml:
              example: |-
                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                <ns2:FeedAcknowledgement xmlns:ns2="http://walmart.com/">
                    <ns2:feedId>884C20C71B7E42FAA41FABFA52596A62@AUoBAQA</ns2:feedId>
                </ns2:FeedAcknowledgement>
              schema:
                $ref: '#/components/schemas/updateBulkInventory_200_response'
          description: Successful Operation
      summary: Bulk Item Inventory Update
      tags:
      - Inventory
      x-openapi-router-controller: openapi_server.controllers.inventory_controller
      x-codegen-request-body-name: body
  /v3/fulfillment/inventory:
    get:
      description: You can use this API to get the current Available to Sell inventory
        quantities for all WFS items in your catalog. You can also query specific
        SKUs or filter to only items updated after a specific date in order to reduce
        the response size.
      operationId: get_wfs_inventory
      parameters:
      - description: "An arbitrary alphanumeric unique ID, specified by the seller,\
          \ which identifies each item. This will be used by the seller in the XSD\
          \ file to refer to each item. Special characters in the sku needing encoding\
          \ are: ':', '/', '?', '#', '[', ']', '@', '!', '$', '&', \"'\", '(', ')',\
          \ '*', '+', ',', ';', '=', ‘ ’ as well as '%' itself if it's a part of sku.\
          \ Make sure to encode space with %20. Other characters don't need to be\
          \ encoded."
        explode: true
        in: query
        name: sku
        required: false
        schema:
          type: string
        style: form
      - description: last inventory modified date - starting range.
        explode: true
        in: query
        name: fromModifiedDate
        required: false
        schema:
          type: string
        style: form
      - description: last inventory modified date - starting range.
        explode: true
        in: query
        name: toModifiedDate
        required: false
        schema:
          type: string
        style: form
      - description: Number of Sku to be returned. Cannot be larger than 300.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: Offset is the number of records you wish to skip before selecting
          records.
        explode: true
        in: query
        name: offset
        required: false
        schema:
          default: "0"
          type: string
        style: form
      - description: The access token retrieved in the Token API call
        example: eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM.....
        explode: false
        in: header
        name: WM_SEC.ACCESS_TOKEN
        required: true
        schema:
          type: string
        style: simple
      - description: A unique ID to track the consumer request by channel. Use the
          Consumer Channel Type received during onboarding
        explode: false
        in: header
        name: WM_CONSUMER.CHANNEL.TYPE
        required: false
        schema:
          type: string
        style: simple
      - description: A unique ID which identifies each API call and used to track
          and debug issues; use a random generated GUID for this ID
        example: b3261d2d-028a-4ef7-8602-633c23200af6
        explode: false
        in: header
        name: WM_QOS.CORRELATION_ID
        required: true
        schema:
          type: string
        style: simple
      - description: Walmart Service Name
        example: Walmart Service Name
        explode: false
        in: header
        name: WM_SVC.NAME
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/getWFSInventory_200_response'
          description: Successful Operation
      summary: WFS Inventory
      tags:
      - Inventory
      x-openapi-router-controller: openapi_server.controllers.inventory_controller
  /v3/inventories:
    get:
      description: This API will retrieve the inventory count for all of a seller's
        items across all ship nodes by item to ship node mapping. Inventory can be
        zero or non-zero. Please note that NextCursor value changes and it needs to
        be passed on from the previous call to next call.
      operationId: get_multi_node_inventory_for_all_sku_and_all_ship_nodes
      parameters:
      - description: The number of items returned. Cannot be more than 50.
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: "10"
          type: string
        style: form
      - description: String returned from initial API call to indicate pagination.
          Specify nextCursor value to retrieve the next 50 items.
        explode: true
        in: query
        name: nextCursor
        required: false
        schema:
          type: string
        style: form
      - description: The access token retrieved in the Token API call
        example: eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM.....
        explode: false
        in: header
        name: WM_SEC.ACCESS_TOKEN
        required: true
        schema:
          type: string
        style: simple
      - description: A unique ID to track the consumer request by channel. Use the
          Consumer Channel Type received during onboarding
        explode: false
        in: header
        name: WM_CONSUMER.CHANNEL.TYPE
        required: false
        schema:
          type: string
        style: simple
      - description: A unique ID which identifies each API call and used to track
          and debug issues; use a random generated GUID for this ID
        example: b3261d2d-028a-4ef7-8602-633c23200af6
        explode: false
        in: header
        name: WM_QOS.CORRELATION_ID
        required: true
        schema:
          type: string
        style: simple
      - description: Walmart Service Name
        example: Walmart Service Name
        explode: false
        in: header
        name: WM_SVC.NAME
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                elements:
                  inventories:
                  - nodes:
                    - availToSellQty:
                        amount: 93
                        unit: EACH
                      inputQty:
                        amount: 93
                        unit: EACH
                      reservedQty:
                        amount: 0
                        unit: EACH
                      shipNode: "361451354333223041"
                    - availToSellQty:
                        amount: 433
                        unit: EACH
                      inputQty:
                        amount: 436
                        unit: EACH
                      reservedQty:
                        amount: 3
                        unit: EACH
                      shipNode: "100009"
                    sku: AI-IGH4-5509
                  - nodes:
                    - availToSellQty:
                        amount: 0
                        unit: EACH
                      inputQty:
                        amount: 5
                        unit: EACH
                      reservedQty:
                        amount: 5
                        unit: EACH
                      shipNode: "100009"
                    sku: "06397309545443"
                meta:
                  nextCursor: NTVmZjIxOWEtZjRkMy00MGIwLThkOGYtYzFkNzI1NGZlYmQxIDEw
                  totalCount: 123
              schema:
                $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response'
          description: Successful Operation
      summary: Multiple Item Inventory for All Ship Nodes
      tags:
      - Inventory
      x-openapi-router-controller: openapi_server.controllers.inventory_controller
  /v3/inventories/{sku}:
    get:
      description: This API will retrieve the inventory count for an item across all
        ship nodes or one specific ship node. You can specify the ship node for which
        you want to fetch the inventory
      operationId: get_multi_node_inventory_for_sku_and_all_shipnodes
      parameters:
      - description: "An arbitrary alphanumeric unique ID, specified by the seller,\
          \ which identifies each item. This will be used by the seller in the XSD\
          \ file to refer to each item. Special characters in the sku needing encoding\
          \ are: ':', '/', '?', '#', '[', ']', '@', '!', '$', '&', \"'\", '(', ')',\
          \ '*', '+', ',', ';', '=', ‘ ’ as well as '%' itself if it's a part of sku.\
          \ Make sure to encode space with %20. Other characters don't need to be\
          \ encoded."
        explode: false
        in: path
        name: sku
        required: true
        schema:
          type: string
        style: simple
      - description: ShipNode Id of the ship node for which the inventory is requested
        explode: true
        in: query
        name: shipNode
        required: false
        schema:
          type: string
        style: form
      - description: The access token retrieved in the Token API call
        example: eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM.....
        explode: false
        in: header
        name: WM_SEC.ACCESS_TOKEN
        required: true
        schema:
          type: string
        style: simple
      - description: A unique ID to track the consumer request by channel. Use the
          Consumer Channel Type received during onboarding
        explode: false
        in: header
        name: WM_CONSUMER.CHANNEL.TYPE
        required: false
        schema:
          type: string
        style: simple
      - description: A unique ID which identifies each API call and used to track
          and debug issues; use a random generated GUID for this ID
        example: b3261d2d-028a-4ef7-8602-633c23200af6
        explode: false
        in: header
        name: WM_QOS.CORRELATION_ID
        required: true
        schema:
          type: string
        style: simple
      - description: Walmart Service Name
        example: Walmart Service Name
        explode: false
        in: header
        name: WM_SVC.NAME
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                nodes:
                - availToSellQty:
                    amount: 3
                    unit: EACH
                  inputQty:
                    amount: 5
                    unit: EACH
                  reservedQty:
                    amount: 2
                    unit: EACH
                  shipNode: "100009"
                sku: AR-CTIX-0092
              schema:
                $ref: '#/components/schemas/getMultiNodeInventoryForSkuAndAllShipnodes_200_response'
          description: Successful Operation
      summary: Single Item Inventory by Ship Node
      tags:
      - Inventory
      x-openapi-router-controller: openapi_server.controllers.inventory_controller
    put:
      description: "This API will update the inventory for an item across one or more\
        \ fulfillment centers, known as ship nodes."
      operationId: update_multi_node_inventory
      parameters:
      - description: "An arbitrary alphanumeric unique ID, specified by the seller,\
          \ which identifies each item. This will be used by the seller in the XSD\
          \ file to refer to each item. Special characters in the sku needing encoding\
          \ are: ':', '/', '?', '#', '[', ']', '@', '!', '$', '&', \"'\", '(', ')',\
          \ '*', '+', ',', ';', '=', ‘ ’ as well as '%' itself if it's a part of sku.\
          \ Make sure to encode space with %20. Other characters don't need to be\
          \ encoded."
        explode: false
        in: path
        name: sku
        required: true
        schema:
          type: string
        style: simple
      - description: The access token retrieved in the Token API call
        example: eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM.....
        explode: false
        in: header
        name: WM_SEC.ACCESS_TOKEN
        required: true
        schema:
          type: string
        style: simple
      - description: A unique ID to track the consumer request by channel. Use the
          Consumer Channel Type received during onboarding
        explode: false
        in: header
        name: WM_CONSUMER.CHANNEL.TYPE
        required: false
        schema:
          type: string
        style: simple
      - description: A unique ID which identifies each API call and used to track
          and debug issues; use a random generated GUID for this ID
        example: b3261d2d-028a-4ef7-8602-633c23200af6
        explode: false
        in: header
        name: WM_QOS.CORRELATION_ID
        required: true
        schema:
          type: string
        style: simple
      - description: Walmart Service Name
        example: Walmart Service Name
        explode: false
        in: header
        name: WM_SVC.NAME
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              inventories:
                nodes:
                - inputQty:
                    amount: 88
                    unit: EACH
                  shipNode: "1000005050"
                - inputQty:
                    amount: 55
                    unit: EACH
                  shipNode: "79897837271126017"
            schema:
              $ref: '#/components/schemas/updateMultiNodeInventory_request'
        description: Request fields
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              example:
                nodes:
                - shipNode: "1000005050"
                  status: Success
                - shipNode: "79897837271126017"
                  status: Success
                sku: 00757642886669_test_01
              schema:
                $ref: '#/components/schemas/updateMultiNodeInventory_200_response'
          description: Successful Operation
      summary: Update Item Inventory per Ship Node
      tags:
      - Inventory
      x-openapi-router-controller: openapi_server.controllers.inventory_controller
      x-codegen-request-body-name: body
  /v3/inventory:
    get:
      description: You can use this API to get the inventory for a given item.
      operationId: get_inventory
      parameters:
      - description: "An arbitrary alphanumeric unique ID, specified by the seller,\
          \ which identifies each item. This will be used by the seller in the XSD\
          \ file to refer to each item. Special characters in the sku needing encoding\
          \ are: ':', '/', '?', '#', '[', ']', '@', '!', '$', '&', \"'\", '(', ')',\
          \ '*', '+', ',', ';', '=', ‘ ’, '{', '}' as well as '%' itself if it's a\
          \ part of sku. Make sure to encode space with %20. Other characters don't\
          \ need to be encoded."
        explode: true
        in: query
        name: sku
        required: true
        schema:
          type: string
        style: form
      - description: The shipNode for which the inventory is requested
        explode: true
        in: query
        name: shipNode
        required: false
        schema:
          type: string
        style: form
      - description: The access token retrieved in the Token API call
        example: eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM.....
        explode: false
        in: header
        name: WM_SEC.ACCESS_TOKEN
        required: true
        schema:
          type: string
        style: simple
      - description: A unique ID to track the consumer request by channel. Use the
          Consumer Channel Type received during onboarding
        explode: false
        in: header
        name: WM_CONSUMER.CHANNEL.TYPE
        required: false
        schema:
          type: string
        style: simple
      - description: A unique ID which identifies each API call and used to track
          and debug issues; use a random generated GUID for this ID
        example: b3261d2d-028a-4ef7-8602-633c23200af6
        explode: false
        in: header
        name: WM_QOS.CORRELATION_ID
        required: true
        schema:
          type: string
        style: simple
      - description: Walmart Service Name
        example: Walmart Service Name
        explode: false
        in: header
        name: WM_SVC.NAME
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                quantity:
                  amount: 10
                  unit: EACH
                sku: 97964_KFTest
              schema:
                $ref: '#/components/schemas/getInventory_200_response'
            application/xml:
              example: |-
                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                <inventory xmlns="http://walmart.com/">
                    <sku>97964_KFTest</sku>
                    <quantity>
                        <unit>EACH</unit>
                        <amount>10</amount>
                    </quantity>
                </inventory>
              schema:
                $ref: '#/components/schemas/getInventory_200_response'
          description: Successful Operation
      summary: Inventory
      tags:
      - Inventory
      x-openapi-router-controller: openapi_server.controllers.inventory_controller
    put:
      description: Updates the inventory for a given item.
      operationId: update_inventory_for_an_item
      parameters:
      - description: "An arbitrary alphanumeric unique ID, specified by the seller,\
          \ which identifies each item. This will be used by the seller in the XSD\
          \ file to refer to each item. Special characters in the sku needing encoding\
          \ are: ':', '/', '?', '#', '[', ']', '@', '!', '$', '&', \"'\", '(', ')',\
          \ '*', '+', ',', ';', '=', ‘ ’, '{', '}' as well as '%' itself if it's a\
          \ part of sku. Make sure to encode space with %20. Other characters don't\
          \ need to be encoded."
        explode: true
        in: query
        name: sku
        required: true
        schema:
          type: string
        style: form
      - description: The shipNode for which the inventory is to be updated.
        explode: true
        in: query
        name: shipNode
        required: false
        schema:
          type: string
        style: form
      - description: The access token retrieved in the Token API call
        example: eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM.....
        explode: false
        in: header
        name: WM_SEC.ACCESS_TOKEN
        required: true
        schema:
          type: string
        style: simple
      - description: A unique ID to track the consumer request by channel. Use the
          Consumer Channel Type received during onboarding
        explode: false
        in: header
        name: WM_CONSUMER.CHANNEL.TYPE
        required: false
        schema:
          type: string
        style: simple
      - description: A unique ID which identifies each API call and used to track
          and debug issues; use a random generated GUID for this ID
        example: b3261d2d-028a-4ef7-8602-633c23200af6
        explode: false
        in: header
        name: WM_QOS.CORRELATION_ID
        required: true
        schema:
          type: string
        style: simple
      - description: Walmart Service Name
        example: Walmart Service Name
        explode: false
        in: header
        name: WM_SVC.NAME
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            example:
              quantity:
                amount: 10
                unit: EACH
              sku: 97964_KFTest
            schema:
              $ref: '#/components/schemas/getInventory_200_response'
          application/xml:
            example: |-
              <?xml version="1.0" encoding="UTF-8"?>
              <inventory xmlns="http://walmart.com/">
                  <sku>97964_KFTest</sku>
                  <quantity>
                      <unit>EACH</unit>
                      <amount>3</amount>
                  </quantity>
              </inventory>
            schema:
              $ref: '#/components/schemas/getInventory_200_response'
        description: File fields
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              example:
                quantity:
                  amount: 10
                  unit: EACH
                sku: 97964_KFTest
              schema:
                $ref: '#/components/schemas/getInventory_200_response'
            application/xml:
              example: |-
                <?xml version="1.0" encoding="UTF-8" standalone="yes"?>
                <inventory xmlns="http://walmart.com/">
                    <sku>97964_KFTest</sku>
                    <quantity>
                        <unit>EACH</unit>
                        <amount>3</amount>
                    </quantity>
                </inventory>
              schema:
                $ref: '#/components/schemas/getInventory_200_response'
          description: Successful Operation
      summary: Update inventory
      tags:
      - Inventory
      x-openapi-router-controller: openapi_server.controllers.inventory_controller
      x-codegen-request-body-name: body
components:
  parameters:
    accept:
      description: "Only supported Media Type : application/json"
      example: application/json
      explode: false
      in: header
      name: Accept
      required: true
      schema:
        type: string
      style: simple
    accessToken:
      description: The access token retrieved in the Token API call
      example: eyJraWQiOiIzZjVhYTFmNS1hYWE5LTQzM.....
      explode: false
      in: header
      name: WM_SEC.ACCESS_TOKEN
      required: true
      schema:
        type: string
      style: simple
    authorization:
      description: Basic authorization header. Base 64 encodes the Client ID and Client
        Secret retrieved in step two of the integration steps.
      example: Basic YzcyOTFjNmItNzI5MC00....
      explode: false
      in: header
      name: Authorization
      required: true
      schema:
        type: string
      style: simple
    channelType:
      description: A unique ID to track the consumer request by channel. Use the Consumer
        Channel Type received during onboarding
      explode: false
      in: header
      name: WM_CONSUMER.CHANNEL.TYPE
      required: false
      schema:
        type: string
      style: simple
    content-type:
      description: "Only supported Media Type : application/json"
      example: application/json
      explode: false
      in: header
      name: Content-Type
      required: true
      schema:
        type: string
      style: simple
    correlationId:
      description: A unique ID which identifies each API call and used to track and
        debug issues; use a random generated GUID for this ID
      example: b3261d2d-028a-4ef7-8602-633c23200af6
      explode: false
      in: header
      name: WM_QOS.CORRELATION_ID
      required: true
      schema:
        type: string
      style: simple
    svcName:
      description: Walmart Service Name
      example: Walmart Service Name
      explode: false
      in: header
      name: WM_SVC.NAME
      required: true
      schema:
        type: string
      style: simple
  schemas:
    AvailToSellQty:
      description: Quantity of an item that is available to be allocated to orders
      properties:
        amount:
          description: Inventory Count
          type: number
        unit:
          description: "The unit of measurement. Example: 'EACH'"
          enum:
          - EACH
          type: string
      required:
      - amount
      - unit
      type: object
    Cause:
      properties:
        code:
          type: string
        description:
          type: string
        field:
          type: string
        type:
          type: string
      type: object
      xml:
        name: Cause
    Elements:
      properties:
        inventories:
          items:
            $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner'
          type: array
      type: object
    Error:
      properties:
        category:
          enum:
          - APPLICATION
          - SYSTEM
          - REQUEST
          - DATA
          type: string
        causes:
          items:
            $ref: '#/components/schemas/getMultiNodeInventoryForSkuAndAllShipnodes_200_response_nodes_inner_errors_inner_causes_inner'
          type: array
          xml:
            wrapped: true
        code:
          type: string
        description:
          type: string
        errorIdentifiers:
          additionalProperties:
            type: object
          type: object
        field:
          type: string
        info:
          type: string
        severity:
          enum:
          - INFO
          - WARN
          - ERROR
          type: string
      required:
      - code
      type: object
      xml:
        name: Error
    FeedId:
      properties:
        additionalAttributes:
          nullable: true
          type: object
        errors:
          nullable: true
          type: object
        feedId:
          description: "A unique ID, returned from the Bulk Upload API, used for tracking\
            \ the feed file"
          type: string
      type: object
    GetAllInventoriesDTO:
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner'
          type: array
        sku:
          description: "An arbitrary alphanumeric unique ID, specified by the seller,\
            \ which identifies each item."
          type: string
      type: object
    GetAllInventoriesNodeDTO:
      properties:
        availToSellQty:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_availToSellQty'
        inputQty:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty'
        reservedQty:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_reservedQty'
        shipNode:
          description: ShipNode Id of the ship node for which the inventory is requested
          type: string
      type: object
    Headers:
      properties:
        limit:
          description: Information about the quantity in inventory
          format: int32
          type: integer
        offset:
          description: Offset is the number of records you wish to skip before selecting
            results.
          format: int32
          type: integer
        totalCount:
          description: Total number of results for query.
          format: int32
          type: integer
      type: object
    InputQty:
      description: Quantity of an item that is input by the seller
      properties:
        amount:
          description: Inventory Count
          type: number
        unit:
          description: "The unit of measurement. Example: 'EACH'"
          enum:
          - EACH
          type: string
      required:
      - amount
      - unit
      type: object
    InventoriesDTO:
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/getMultiNodeInventoryForSkuAndAllShipnodes_200_response_nodes_inner'
          type: array
        sku:
          description: "An arbitrary alphanumeric unique ID, specified by the seller,\
            \ which identifies each item."
          type: string
      type: object
    Inventory:
      properties:
        quantity:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_reservedQty'
        sku:
          description: A seller-provided Product ID. Response will have decoded value.
          type: string
      required:
      - quantity
      - sku
      type: object
      xml:
        name: inventory
    InventoryWFS:
      properties:
        shipNodes:
          items:
            $ref: '#/components/schemas/getWFSInventory_200_response_payload_inventory_inner_shipNodes_inner'
          type: array
        sku:
          description: "An arbitrary alphanumeric unique ID, specified by the seller,\
            \ which identifies each item."
          type: string
      type: object
    Meta:
      properties:
        nextCursor:
          description: Used for pagination to fetch the next set of items.
          type: string
        totalCount:
          description: "Total number of Skus of the Seller. Example: '235'"
          type: number
      type: object
      xml:
        name: meta
    MultiNodeInventoryFetchResponseDTO:
      properties:
        elements:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements'
        meta:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_meta'
      type: object
    MultiNodeInventoryUpdateRequestDTO:
      properties:
        inventories:
          $ref: '#/components/schemas/updateMultiNodeInventory_request_inventories'
      required:
      - inventories
      type: object
    MultiNodeInventoryUpdateResponseDTO:
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/updateMultiNodeInventory_200_response_nodes_inner'
          type: array
        sku:
          description: "An arbitrary alphanumeric unique ID, specified by the seller,\
            \ which identifies each item."
          type: string
      type: object
    NodeDTO:
      properties:
        availToSellQty:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_availToSellQty'
        errors:
          items:
            $ref: '#/components/schemas/getMultiNodeInventoryForSkuAndAllShipnodes_200_response_nodes_inner_errors_inner'
          type: array
        inputQty:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty'
        reservedQty:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_reservedQty'
        shipNode:
          description: ShipNode Id of the ship node for which the inventory is requested
          type: string
      type: object
    Payload:
      properties:
        inventory:
          items:
            $ref: '#/components/schemas/getWFSInventory_200_response_payload_inventory_inner'
          type: array
      type: object
    ReservedQty:
      description: Quantity that has been ordered by the customers but not yet shipped
      properties:
        amount:
          description: Inventory Count
          type: number
        unit:
          description: "The unit of measurement. Example: 'EACH'"
          enum:
          - EACH
          type: string
      required:
      - amount
      - unit
      type: object
    ShipNodes:
      properties:
        availToSellQty:
          description: The available quantity is the quantity of an item that is available
            to be allocated to orders.
          format: int32
          type: integer
        modifiedDate:
          description: Last changes date for the item.
          type: string
        onHandQty:
          description: "The on-hand balance is the quantity of active inventory stored\
            \ at the warehouse.Active inventory is defined as the usable amount of\
            \ an item that is in the warehouse.Inventory is active if it is not damaged,\
            \ expired or being inspected."
          format: int32
          type: integer
        shipNodeType:
          description: "Identifies fulfillment aspect of invetory. Walmart, seller\
            \ or 3PL fulfilled. Possible value is 'WFSFulfilled'. In later phase we\
            \ will also add seller fulfilled inventory."
          type: string
      type: object
    SupplyQuantity:
      description: Quantity that has been ordered by the customers but not yet shipped
      properties:
        amount:
          description: Inventory Count
          type: number
        unit:
          description: "The unit of measurement. Example: 'EACH'"
          enum:
          - EACH
          type: string
      required:
      - amount
      - unit
      type: object
    UpdateInventoriesRequestDTO:
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/updateMultiNodeInventory_request_inventories_nodes_inner'
          type: array
      required:
      - nodes
      type: object
    UpdateInventoriesRequestNodeDTO:
      properties:
        inputQty:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_reservedQty'
        shipNode:
          description: ShipNode Id of the ship node for which the inventory is requested
          type: string
      required:
      - inputQty
      - shipNode
      type: object
    UpdateInventoriesResponseNodeDTO:
      properties:
        errors:
          description: Node Update Error description.
          items:
            $ref: '#/components/schemas/getMultiNodeInventoryForSkuAndAllShipnodes_200_response_nodes_inner_errors_inner'
          type: array
        shipNode:
          description: ShipNode Id of the ship node for which the inventory is requested
          type: string
        status:
          description: "Node Update status. Example: 'Success'"
          type: string
      type: object
    WfsInventoryDTO:
      properties:
        headers:
          $ref: '#/components/schemas/getWFSInventory_200_response_headers'
        payload:
          $ref: '#/components/schemas/getWFSInventory_200_response_payload'
      type: object
    updateBulkInventory_request:
      properties:
        file:
          description: Feed file to upload
          format: binary
          type: string
      required:
      - file
      type: object
    updateBulkInventory_200_response:
      example:
        feedId: feedId
        errors: "{}"
        additionalAttributes: "{}"
      properties:
        additionalAttributes:
          nullable: true
          title: additionalAttributes
          type: object
        errors:
          nullable: true
          title: errors
          type: object
        feedId:
          description: "A unique ID, returned from the Bulk Upload API, used for tracking\
            \ the feed file"
          title: feedId
          type: string
      title: updateBulkInventory_200_response
      type: object
    getWFSInventory_200_response_headers:
      example:
        offset: 6
        limit: 0
        totalCount: 1
      properties:
        limit:
          description: Information about the quantity in inventory
          format: int32
          title: limit
          type: integer
        offset:
          description: Offset is the number of records you wish to skip before selecting
            results.
          format: int32
          title: offset
          type: integer
        totalCount:
          description: Total number of results for query.
          format: int32
          title: totalCount
          type: integer
      title: getWFSInventory_200_response_headers
      type: object
    getWFSInventory_200_response_payload_inventory_inner_shipNodes_inner:
      example:
        modifiedDate: modifiedDate
        onHandQty: 5
        shipNodeType: shipNodeType
        availToSellQty: 5
      properties:
        availToSellQty:
          description: The available quantity is the quantity of an item that is available
            to be allocated to orders.
          format: int32
          title: availToSellQty
          type: integer
        modifiedDate:
          description: Last changes date for the item.
          title: modifiedDate
          type: string
        onHandQty:
          description: "The on-hand balance is the quantity of active inventory stored\
            \ at the warehouse.Active inventory is defined as the usable amount of\
            \ an item that is in the warehouse.Inventory is active if it is not damaged,\
            \ expired or being inspected."
          format: int32
          title: onHandQty
          type: integer
        shipNodeType:
          description: "Identifies fulfillment aspect of invetory. Walmart, seller\
            \ or 3PL fulfilled. Possible value is 'WFSFulfilled'. In later phase we\
            \ will also add seller fulfilled inventory."
          title: shipNodeType
          type: string
      title: getWFSInventory_200_response_payload_inventory_inner_shipNodes_inner
      type: object
    getWFSInventory_200_response_payload_inventory_inner:
      example:
        shipNodes:
        - modifiedDate: modifiedDate
          onHandQty: 5
          shipNodeType: shipNodeType
          availToSellQty: 5
        - modifiedDate: modifiedDate
          onHandQty: 5
          shipNodeType: shipNodeType
          availToSellQty: 5
        sku: sku
      properties:
        shipNodes:
          items:
            $ref: '#/components/schemas/getWFSInventory_200_response_payload_inventory_inner_shipNodes_inner'
          title: shipNodes
          type: array
        sku:
          description: "An arbitrary alphanumeric unique ID, specified by the seller,\
            \ which identifies each item."
          title: sku
          type: string
      title: getWFSInventory_200_response_payload_inventory_inner
      type: object
    getWFSInventory_200_response_payload:
      example:
        inventory:
        - shipNodes:
          - modifiedDate: modifiedDate
            onHandQty: 5
            shipNodeType: shipNodeType
            availToSellQty: 5
          - modifiedDate: modifiedDate
            onHandQty: 5
            shipNodeType: shipNodeType
            availToSellQty: 5
          sku: sku
        - shipNodes:
          - modifiedDate: modifiedDate
            onHandQty: 5
            shipNodeType: shipNodeType
            availToSellQty: 5
          - modifiedDate: modifiedDate
            onHandQty: 5
            shipNodeType: shipNodeType
            availToSellQty: 5
          sku: sku
      properties:
        inventory:
          items:
            $ref: '#/components/schemas/getWFSInventory_200_response_payload_inventory_inner'
          title: inventory
          type: array
      title: getWFSInventory_200_response_payload
      type: object
    getWFSInventory_200_response:
      example:
        headers:
          offset: 6
          limit: 0
          totalCount: 1
        payload:
          inventory:
          - shipNodes:
            - modifiedDate: modifiedDate
              onHandQty: 5
              shipNodeType: shipNodeType
              availToSellQty: 5
            - modifiedDate: modifiedDate
              onHandQty: 5
              shipNodeType: shipNodeType
              availToSellQty: 5
            sku: sku
          - shipNodes:
            - modifiedDate: modifiedDate
              onHandQty: 5
              shipNodeType: shipNodeType
              availToSellQty: 5
            - modifiedDate: modifiedDate
              onHandQty: 5
              shipNodeType: shipNodeType
              availToSellQty: 5
            sku: sku
      properties:
        headers:
          $ref: '#/components/schemas/getWFSInventory_200_response_headers'
        payload:
          $ref: '#/components/schemas/getWFSInventory_200_response_payload'
      title: getWFSInventory_200_response
      type: object
    getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_availToSellQty:
      description: Quantity of an item that is available to be allocated to orders
      example:
        amount: 0.8008281904610115
        unit: EACH
      properties:
        amount:
          description: Inventory Count
          title: amount
          type: number
        unit:
          description: "The unit of measurement. Example: 'EACH'"
          enum:
          - EACH
          title: unit
          type: string
      required:
      - amount
      - unit
      title: getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_availToSellQty
      type: object
    getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty:
      description: Quantity of an item that is input by the seller
      example:
        amount: 6.027456183070403
        unit: EACH
      properties:
        amount:
          description: Inventory Count
          title: amount
          type: number
        unit:
          description: "The unit of measurement. Example: 'EACH'"
          enum:
          - EACH
          title: unit
          type: string
      required:
      - amount
      - unit
      title: getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty
      type: object
    getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_reservedQty:
      description: Quantity that has been ordered by the customers but not yet shipped
      example:
        amount: 1.4658129805029452
        unit: EACH
      properties:
        amount:
          description: Inventory Count
          title: amount
          type: number
        unit:
          description: "The unit of measurement. Example: 'EACH'"
          enum:
          - EACH
          title: unit
          type: string
      required:
      - amount
      - unit
      title: getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_reservedQty
      type: object
    getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner:
      example:
        inputQty:
          amount: 6.027456183070403
          unit: EACH
        shipNode: shipNode
        reservedQty:
          amount: 1.4658129805029452
          unit: EACH
        availToSellQty:
          amount: 0.8008281904610115
          unit: EACH
      properties:
        availToSellQty:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_availToSellQty'
        inputQty:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty'
        reservedQty:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_reservedQty'
        shipNode:
          description: ShipNode Id of the ship node for which the inventory is requested
          title: shipNode
          type: string
      title: getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner
      type: object
    getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner:
      example:
        nodes:
        - inputQty:
            amount: 6.027456183070403
            unit: EACH
          shipNode: shipNode
          reservedQty:
            amount: 1.4658129805029452
            unit: EACH
          availToSellQty:
            amount: 0.8008281904610115
            unit: EACH
        - inputQty:
            amount: 6.027456183070403
            unit: EACH
          shipNode: shipNode
          reservedQty:
            amount: 1.4658129805029452
            unit: EACH
          availToSellQty:
            amount: 0.8008281904610115
            unit: EACH
        sku: sku
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner'
          title: nodes
          type: array
        sku:
          description: "An arbitrary alphanumeric unique ID, specified by the seller,\
            \ which identifies each item."
          title: sku
          type: string
      title: getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner
      type: object
    getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements:
      example:
        inventories:
        - nodes:
          - inputQty:
              amount: 6.027456183070403
              unit: EACH
            shipNode: shipNode
            reservedQty:
              amount: 1.4658129805029452
              unit: EACH
            availToSellQty:
              amount: 0.8008281904610115
              unit: EACH
          - inputQty:
              amount: 6.027456183070403
              unit: EACH
            shipNode: shipNode
            reservedQty:
              amount: 1.4658129805029452
              unit: EACH
            availToSellQty:
              amount: 0.8008281904610115
              unit: EACH
          sku: sku
        - nodes:
          - inputQty:
              amount: 6.027456183070403
              unit: EACH
            shipNode: shipNode
            reservedQty:
              amount: 1.4658129805029452
              unit: EACH
            availToSellQty:
              amount: 0.8008281904610115
              unit: EACH
          - inputQty:
              amount: 6.027456183070403
              unit: EACH
            shipNode: shipNode
            reservedQty:
              amount: 1.4658129805029452
              unit: EACH
            availToSellQty:
              amount: 0.8008281904610115
              unit: EACH
          sku: sku
      properties:
        inventories:
          items:
            $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner'
          title: inventories
          type: array
      title: getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements
      type: object
    getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_meta:
      example:
        nextCursor: nextCursor
        totalCount: 5.962133916683182
      properties:
        nextCursor:
          description: Used for pagination to fetch the next set of items.
          title: nextCursor
          type: string
        totalCount:
          description: "Total number of Skus of the Seller. Example: '235'"
          title: totalCount
          type: number
      title: getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_meta
      type: object
      xml:
        name: meta
    getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response:
      example:
        meta:
          nextCursor: nextCursor
          totalCount: 5.962133916683182
        elements:
          inventories:
          - nodes:
            - inputQty:
                amount: 6.027456183070403
                unit: EACH
              shipNode: shipNode
              reservedQty:
                amount: 1.4658129805029452
                unit: EACH
              availToSellQty:
                amount: 0.8008281904610115
                unit: EACH
            - inputQty:
                amount: 6.027456183070403
                unit: EACH
              shipNode: shipNode
              reservedQty:
                amount: 1.4658129805029452
                unit: EACH
              availToSellQty:
                amount: 0.8008281904610115
                unit: EACH
            sku: sku
          - nodes:
            - inputQty:
                amount: 6.027456183070403
                unit: EACH
              shipNode: shipNode
              reservedQty:
                amount: 1.4658129805029452
                unit: EACH
              availToSellQty:
                amount: 0.8008281904610115
                unit: EACH
            - inputQty:
                amount: 6.027456183070403
                unit: EACH
              shipNode: shipNode
              reservedQty:
                amount: 1.4658129805029452
                unit: EACH
              availToSellQty:
                amount: 0.8008281904610115
                unit: EACH
            sku: sku
      properties:
        elements:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements'
        meta:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_meta'
      title: getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response
      type: object
    getMultiNodeInventoryForSkuAndAllShipnodes_200_response_nodes_inner_errors_inner_causes_inner:
      example:
        code: code
        field: field
        description: description
        type: type
      properties:
        code:
          title: code
          type: string
        description:
          title: description
          type: string
        field:
          title: field
          type: string
        type:
          title: type
          type: string
      title: getMultiNodeInventoryForSkuAndAllShipnodes_200_response_nodes_inner_errors_inner_causes_inner
      type: object
      xml:
        name: Cause
    getMultiNodeInventoryForSkuAndAllShipnodes_200_response_nodes_inner_errors_inner:
      example:
        severity: INFO
        code: code
        field: field
        errorIdentifiers:
          key: "{}"
        causes:
        - code: code
          field: field
          description: description
          type: type
        - code: code
          field: field
          description: description
          type: type
        description: description
        category: APPLICATION
        info: info
      properties:
        category:
          enum:
          - APPLICATION
          - SYSTEM
          - REQUEST
          - DATA
          title: category
          type: string
        causes:
          items:
            $ref: '#/components/schemas/getMultiNodeInventoryForSkuAndAllShipnodes_200_response_nodes_inner_errors_inner_causes_inner'
          title: causes
          type: array
          xml:
            wrapped: true
        code:
          title: code
          type: string
        description:
          title: description
          type: string
        errorIdentifiers:
          additionalProperties:
            type: object
          title: errorIdentifiers
          type: object
        field:
          title: field
          type: string
        info:
          title: info
          type: string
        severity:
          enum:
          - INFO
          - WARN
          - ERROR
          title: severity
          type: string
      required:
      - code
      title: getMultiNodeInventoryForSkuAndAllShipnodes_200_response_nodes_inner_errors_inner
      type: object
      xml:
        name: Error
    getMultiNodeInventoryForSkuAndAllShipnodes_200_response_nodes_inner:
      example:
        inputQty:
          amount: 6.027456183070403
          unit: EACH
        shipNode: shipNode
        reservedQty:
          amount: 1.4658129805029452
          unit: EACH
        availToSellQty:
          amount: 0.8008281904610115
          unit: EACH
        errors:
        - severity: INFO
          code: code
          field: field
          errorIdentifiers:
            key: "{}"
          causes:
          - code: code
            field: field
            description: description
            type: type
          - code: code
            field: field
            description: description
            type: type
          description: description
          category: APPLICATION
          info: info
        - severity: INFO
          code: code
          field: field
          errorIdentifiers:
            key: "{}"
          causes:
          - code: code
            field: field
            description: description
            type: type
          - code: code
            field: field
            description: description
            type: type
          description: description
          category: APPLICATION
          info: info
      properties:
        availToSellQty:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_availToSellQty'
        errors:
          items:
            $ref: '#/components/schemas/getMultiNodeInventoryForSkuAndAllShipnodes_200_response_nodes_inner_errors_inner'
          title: errors
          type: array
        inputQty:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty'
        reservedQty:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_reservedQty'
        shipNode:
          description: ShipNode Id of the ship node for which the inventory is requested
          title: shipNode
          type: string
      title: getMultiNodeInventoryForSkuAndAllShipnodes_200_response_nodes_inner
      type: object
    getMultiNodeInventoryForSkuAndAllShipnodes_200_response:
      example:
        nodes:
        - inputQty:
            amount: 6.027456183070403
            unit: EACH
          shipNode: shipNode
          reservedQty:
            amount: 1.4658129805029452
            unit: EACH
          availToSellQty:
            amount: 0.8008281904610115
            unit: EACH
          errors:
          - severity: INFO
            code: code
            field: field
            errorIdentifiers:
              key: "{}"
            causes:
            - code: code
              field: field
              description: description
              type: type
            - code: code
              field: field
              description: description
              type: type
            description: description
            category: APPLICATION
            info: info
          - severity: INFO
            code: code
            field: field
            errorIdentifiers:
              key: "{}"
            causes:
            - code: code
              field: field
              description: description
              type: type
            - code: code
              field: field
              description: description
              type: type
            description: description
            category: APPLICATION
            info: info
        - inputQty:
            amount: 6.027456183070403
            unit: EACH
          shipNode: shipNode
          reservedQty:
            amount: 1.4658129805029452
            unit: EACH
          availToSellQty:
            amount: 0.8008281904610115
            unit: EACH
          errors:
          - severity: INFO
            code: code
            field: field
            errorIdentifiers:
              key: "{}"
            causes:
            - code: code
              field: field
              description: description
              type: type
            - code: code
              field: field
              description: description
              type: type
            description: description
            category: APPLICATION
            info: info
          - severity: INFO
            code: code
            field: field
            errorIdentifiers:
              key: "{}"
            causes:
            - code: code
              field: field
              description: description
              type: type
            - code: code
              field: field
              description: description
              type: type
            description: description
            category: APPLICATION
            info: info
        sku: sku
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/getMultiNodeInventoryForSkuAndAllShipnodes_200_response_nodes_inner'
          title: nodes
          type: array
        sku:
          description: "An arbitrary alphanumeric unique ID, specified by the seller,\
            \ which identifies each item."
          title: sku
          type: string
      title: getMultiNodeInventoryForSkuAndAllShipnodes_200_response
      type: object
    updateMultiNodeInventory_request_inventories_nodes_inner:
      properties:
        inputQty:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_reservedQty'
        shipNode:
          description: ShipNode Id of the ship node for which the inventory is requested
          title: shipNode
          type: string
      required:
      - inputQty
      - shipNode
      title: updateMultiNodeInventory_request_inventories_nodes_inner
      type: object
    updateMultiNodeInventory_request_inventories:
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/updateMultiNodeInventory_request_inventories_nodes_inner'
          title: nodes
          type: array
      required:
      - nodes
      title: updateMultiNodeInventory_request_inventories
      type: object
    updateMultiNodeInventory_request:
      properties:
        inventories:
          $ref: '#/components/schemas/updateMultiNodeInventory_request_inventories'
      required:
      - inventories
      title: updateMultiNodeInventory_request
      type: object
    updateMultiNodeInventory_200_response_nodes_inner:
      example:
        shipNode: shipNode
        errors:
        - severity: INFO
          code: code
          field: field
          errorIdentifiers:
            key: "{}"
          causes:
          - code: code
            field: field
            description: description
            type: type
          - code: code
            field: field
            description: description
            type: type
          description: description
          category: APPLICATION
          info: info
        - severity: INFO
          code: code
          field: field
          errorIdentifiers:
            key: "{}"
          causes:
          - code: code
            field: field
            description: description
            type: type
          - code: code
            field: field
            description: description
            type: type
          description: description
          category: APPLICATION
          info: info
        status: status
      properties:
        errors:
          description: Node Update Error description.
          items:
            $ref: '#/components/schemas/getMultiNodeInventoryForSkuAndAllShipnodes_200_response_nodes_inner_errors_inner'
          title: errors
          type: array
        shipNode:
          description: ShipNode Id of the ship node for which the inventory is requested
          title: shipNode
          type: string
        status:
          description: "Node Update status. Example: 'Success'"
          title: status
          type: string
      title: updateMultiNodeInventory_200_response_nodes_inner
      type: object
    updateMultiNodeInventory_200_response:
      example:
        nodes:
        - shipNode: shipNode
          errors:
          - severity: INFO
            code: code
            field: field
            errorIdentifiers:
              key: "{}"
            causes:
            - code: code
              field: field
              description: description
              type: type
            - code: code
              field: field
              description: description
              type: type
            description: description
            category: APPLICATION
            info: info
          - severity: INFO
            code: code
            field: field
            errorIdentifiers:
              key: "{}"
            causes:
            - code: code
              field: field
              description: description
              type: type
            - code: code
              field: field
              description: description
              type: type
            description: description
            category: APPLICATION
            info: info
          status: status
        - shipNode: shipNode
          errors:
          - severity: INFO
            code: code
            field: field
            errorIdentifiers:
              key: "{}"
            causes:
            - code: code
              field: field
              description: description
              type: type
            - code: code
              field: field
              description: description
              type: type
            description: description
            category: APPLICATION
            info: info
          - severity: INFO
            code: code
            field: field
            errorIdentifiers:
              key: "{}"
            causes:
            - code: code
              field: field
              description: description
              type: type
            - code: code
              field: field
              description: description
              type: type
            description: description
            category: APPLICATION
            info: info
          status: status
        sku: sku
      properties:
        nodes:
          items:
            $ref: '#/components/schemas/updateMultiNodeInventory_200_response_nodes_inner'
          title: nodes
          type: array
        sku:
          description: "An arbitrary alphanumeric unique ID, specified by the seller,\
            \ which identifies each item."
          title: sku
          type: string
      title: updateMultiNodeInventory_200_response
      type: object
    getInventory_200_response:
      example:
        quantity:
          amount: 1.4658129805029452
          unit: EACH
        sku: sku
      properties:
        quantity:
          $ref: '#/components/schemas/getMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_reservedQty'
        sku:
          description: A seller-provided Product ID. Response will have decoded value.
          title: sku
          type: string
      required:
      - quantity
      - sku
      title: getInventory_200_response
      type: object
      xml:
        name: inventory
