/**
 * Inventory Management
 * Maintaining up-to-date inventory for your items on Walmart.com ensures a great experience for your customers and greater sales opportunities for you.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetWFSInventory_200_response_payload.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetWFSInventory_200_response_payload::OAIGetWFSInventory_200_response_payload(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetWFSInventory_200_response_payload::OAIGetWFSInventory_200_response_payload() {
    this->initializeModel();
}

OAIGetWFSInventory_200_response_payload::~OAIGetWFSInventory_200_response_payload() {}

void OAIGetWFSInventory_200_response_payload::initializeModel() {

    m_inventory_isSet = false;
    m_inventory_isValid = false;
}

void OAIGetWFSInventory_200_response_payload::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetWFSInventory_200_response_payload::fromJsonObject(QJsonObject json) {

    m_inventory_isValid = ::OpenAPI::fromJsonValue(m_inventory, json[QString("inventory")]);
    m_inventory_isSet = !json[QString("inventory")].isNull() && m_inventory_isValid;
}

QString OAIGetWFSInventory_200_response_payload::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetWFSInventory_200_response_payload::asJsonObject() const {
    QJsonObject obj;
    if (m_inventory.size() > 0) {
        obj.insert(QString("inventory"), ::OpenAPI::toJsonValue(m_inventory));
    }
    return obj;
}

QList<OAIGetWFSInventory_200_response_payload_inventory_inner> OAIGetWFSInventory_200_response_payload::getInventory() const {
    return m_inventory;
}
void OAIGetWFSInventory_200_response_payload::setInventory(const QList<OAIGetWFSInventory_200_response_payload_inventory_inner> &inventory) {
    m_inventory = inventory;
    m_inventory_isSet = true;
}

bool OAIGetWFSInventory_200_response_payload::is_inventory_Set() const{
    return m_inventory_isSet;
}

bool OAIGetWFSInventory_200_response_payload::is_inventory_Valid() const{
    return m_inventory_isValid;
}

bool OAIGetWFSInventory_200_response_payload::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_inventory.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetWFSInventory_200_response_payload::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
