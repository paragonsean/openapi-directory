/**
 * Inventory Management
 * Maintaining up-to-date inventory for your items on Walmart.com ensures a great experience for your customers and greater sales opportunities for you.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetInventory_200_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetInventory_200_response::OAIGetInventory_200_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetInventory_200_response::OAIGetInventory_200_response() {
    this->initializeModel();
}

OAIGetInventory_200_response::~OAIGetInventory_200_response() {}

void OAIGetInventory_200_response::initializeModel() {

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_sku_isSet = false;
    m_sku_isValid = false;
}

void OAIGetInventory_200_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetInventory_200_response::fromJsonObject(QJsonObject json) {

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_sku_isValid = ::OpenAPI::fromJsonValue(m_sku, json[QString("sku")]);
    m_sku_isSet = !json[QString("sku")].isNull() && m_sku_isValid;
}

QString OAIGetInventory_200_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetInventory_200_response::asJsonObject() const {
    QJsonObject obj;
    if (m_quantity.isSet()) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_sku_isSet) {
        obj.insert(QString("sku"), ::OpenAPI::toJsonValue(m_sku));
    }
    return obj;
}

OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_reservedQty OAIGetInventory_200_response::getQuantity() const {
    return m_quantity;
}
void OAIGetInventory_200_response::setQuantity(const OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_reservedQty &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIGetInventory_200_response::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIGetInventory_200_response::is_quantity_Valid() const{
    return m_quantity_isValid;
}

QString OAIGetInventory_200_response::getSku() const {
    return m_sku;
}
void OAIGetInventory_200_response::setSku(const QString &sku) {
    m_sku = sku;
    m_sku_isSet = true;
}

bool OAIGetInventory_200_response::is_sku_Set() const{
    return m_sku_isSet;
}

bool OAIGetInventory_200_response::is_sku_Valid() const{
    return m_sku_isValid;
}

bool OAIGetInventory_200_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_quantity.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_sku_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetInventory_200_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_quantity_isValid && m_sku_isValid && true;
}

} // namespace OpenAPI
