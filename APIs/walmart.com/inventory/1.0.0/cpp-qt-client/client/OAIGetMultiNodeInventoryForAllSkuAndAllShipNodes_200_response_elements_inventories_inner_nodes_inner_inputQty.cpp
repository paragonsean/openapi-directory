/**
 * Inventory Management
 * Maintaining up-to-date inventory for your items on Walmart.com ensures a great experience for your customers and greater sales opportunities for you.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty::OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty::OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty() {
    this->initializeModel();
}

OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty::~OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty() {}

void OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_unit_isSet = false;
    m_unit_isValid = false;
}

void OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_unit_isValid = ::OpenAPI::fromJsonValue(m_unit, json[QString("unit")]);
    m_unit_isSet = !json[QString("unit")].isNull() && m_unit_isValid;
}

QString OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_unit_isSet) {
        obj.insert(QString("unit"), ::OpenAPI::toJsonValue(m_unit));
    }
    return obj;
}

double OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty::getAmount() const {
    return m_amount;
}
void OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty::setAmount(const double &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty::is_amount_Valid() const{
    return m_amount_isValid;
}

QString OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty::getUnit() const {
    return m_unit;
}
void OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty::setUnit(const QString &unit) {
    m_unit = unit;
    m_unit_isSet = true;
}

bool OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty::is_unit_Set() const{
    return m_unit_isSet;
}

bool OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty::is_unit_Valid() const{
    return m_unit_isValid;
}

bool OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unit_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_isValid && m_unit_isValid && true;
}

} // namespace OpenAPI
