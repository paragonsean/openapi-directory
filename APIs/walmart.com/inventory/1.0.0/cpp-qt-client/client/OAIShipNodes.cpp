/**
 * Inventory Management
 * Maintaining up-to-date inventory for your items on Walmart.com ensures a great experience for your customers and greater sales opportunities for you.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIShipNodes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIShipNodes::OAIShipNodes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIShipNodes::OAIShipNodes() {
    this->initializeModel();
}

OAIShipNodes::~OAIShipNodes() {}

void OAIShipNodes::initializeModel() {

    m_avail_to_sell_qty_isSet = false;
    m_avail_to_sell_qty_isValid = false;

    m_modified_date_isSet = false;
    m_modified_date_isValid = false;

    m_on_hand_qty_isSet = false;
    m_on_hand_qty_isValid = false;

    m_ship_node_type_isSet = false;
    m_ship_node_type_isValid = false;
}

void OAIShipNodes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIShipNodes::fromJsonObject(QJsonObject json) {

    m_avail_to_sell_qty_isValid = ::OpenAPI::fromJsonValue(m_avail_to_sell_qty, json[QString("availToSellQty")]);
    m_avail_to_sell_qty_isSet = !json[QString("availToSellQty")].isNull() && m_avail_to_sell_qty_isValid;

    m_modified_date_isValid = ::OpenAPI::fromJsonValue(m_modified_date, json[QString("modifiedDate")]);
    m_modified_date_isSet = !json[QString("modifiedDate")].isNull() && m_modified_date_isValid;

    m_on_hand_qty_isValid = ::OpenAPI::fromJsonValue(m_on_hand_qty, json[QString("onHandQty")]);
    m_on_hand_qty_isSet = !json[QString("onHandQty")].isNull() && m_on_hand_qty_isValid;

    m_ship_node_type_isValid = ::OpenAPI::fromJsonValue(m_ship_node_type, json[QString("shipNodeType")]);
    m_ship_node_type_isSet = !json[QString("shipNodeType")].isNull() && m_ship_node_type_isValid;
}

QString OAIShipNodes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIShipNodes::asJsonObject() const {
    QJsonObject obj;
    if (m_avail_to_sell_qty_isSet) {
        obj.insert(QString("availToSellQty"), ::OpenAPI::toJsonValue(m_avail_to_sell_qty));
    }
    if (m_modified_date_isSet) {
        obj.insert(QString("modifiedDate"), ::OpenAPI::toJsonValue(m_modified_date));
    }
    if (m_on_hand_qty_isSet) {
        obj.insert(QString("onHandQty"), ::OpenAPI::toJsonValue(m_on_hand_qty));
    }
    if (m_ship_node_type_isSet) {
        obj.insert(QString("shipNodeType"), ::OpenAPI::toJsonValue(m_ship_node_type));
    }
    return obj;
}

qint32 OAIShipNodes::getAvailToSellQty() const {
    return m_avail_to_sell_qty;
}
void OAIShipNodes::setAvailToSellQty(const qint32 &avail_to_sell_qty) {
    m_avail_to_sell_qty = avail_to_sell_qty;
    m_avail_to_sell_qty_isSet = true;
}

bool OAIShipNodes::is_avail_to_sell_qty_Set() const{
    return m_avail_to_sell_qty_isSet;
}

bool OAIShipNodes::is_avail_to_sell_qty_Valid() const{
    return m_avail_to_sell_qty_isValid;
}

QString OAIShipNodes::getModifiedDate() const {
    return m_modified_date;
}
void OAIShipNodes::setModifiedDate(const QString &modified_date) {
    m_modified_date = modified_date;
    m_modified_date_isSet = true;
}

bool OAIShipNodes::is_modified_date_Set() const{
    return m_modified_date_isSet;
}

bool OAIShipNodes::is_modified_date_Valid() const{
    return m_modified_date_isValid;
}

qint32 OAIShipNodes::getOnHandQty() const {
    return m_on_hand_qty;
}
void OAIShipNodes::setOnHandQty(const qint32 &on_hand_qty) {
    m_on_hand_qty = on_hand_qty;
    m_on_hand_qty_isSet = true;
}

bool OAIShipNodes::is_on_hand_qty_Set() const{
    return m_on_hand_qty_isSet;
}

bool OAIShipNodes::is_on_hand_qty_Valid() const{
    return m_on_hand_qty_isValid;
}

QString OAIShipNodes::getShipNodeType() const {
    return m_ship_node_type;
}
void OAIShipNodes::setShipNodeType(const QString &ship_node_type) {
    m_ship_node_type = ship_node_type;
    m_ship_node_type_isSet = true;
}

bool OAIShipNodes::is_ship_node_type_Set() const{
    return m_ship_node_type_isSet;
}

bool OAIShipNodes::is_ship_node_type_Valid() const{
    return m_ship_node_type_isValid;
}

bool OAIShipNodes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_avail_to_sell_qty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_on_hand_qty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ship_node_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIShipNodes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
