/**
 * Inventory Management
 * Maintaining up-to-date inventory for your items on Walmart.com ensures a great experience for your customers and greater sales opportunities for you.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetAllInventoriesNodeDTO.h
 *
 * 
 */

#ifndef OAIGetAllInventoriesNodeDTO_H
#define OAIGetAllInventoriesNodeDTO_H

#include <QJsonObject>

#include "OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_availToSellQty.h"
#include "OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty.h"
#include "OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_reservedQty.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_availToSellQty;
class OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty;
class OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_reservedQty;

class OAIGetAllInventoriesNodeDTO : public OAIObject {
public:
    OAIGetAllInventoriesNodeDTO();
    OAIGetAllInventoriesNodeDTO(QString json);
    ~OAIGetAllInventoriesNodeDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_availToSellQty getAvailToSellQty() const;
    void setAvailToSellQty(const OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_availToSellQty &avail_to_sell_qty);
    bool is_avail_to_sell_qty_Set() const;
    bool is_avail_to_sell_qty_Valid() const;

    OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty getInputQty() const;
    void setInputQty(const OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty &input_qty);
    bool is_input_qty_Set() const;
    bool is_input_qty_Valid() const;

    OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_reservedQty getReservedQty() const;
    void setReservedQty(const OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_reservedQty &reserved_qty);
    bool is_reserved_qty_Set() const;
    bool is_reserved_qty_Valid() const;

    QString getShipNode() const;
    void setShipNode(const QString &ship_node);
    bool is_ship_node_Set() const;
    bool is_ship_node_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_availToSellQty m_avail_to_sell_qty;
    bool m_avail_to_sell_qty_isSet;
    bool m_avail_to_sell_qty_isValid;

    OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_inputQty m_input_qty;
    bool m_input_qty_isSet;
    bool m_input_qty_isValid;

    OAIGetMultiNodeInventoryForAllSkuAndAllShipNodes_200_response_elements_inventories_inner_nodes_inner_reservedQty m_reserved_qty;
    bool m_reserved_qty_isSet;
    bool m_reserved_qty_isValid;

    QString m_ship_node;
    bool m_ship_node_isSet;
    bool m_ship_node_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetAllInventoriesNodeDTO)

#endif // OAIGetAllInventoriesNodeDTO_H
