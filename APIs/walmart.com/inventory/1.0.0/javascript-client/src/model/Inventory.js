/**
 * Inventory Management
 * Maintaining up-to-date inventory for your items on Walmart.com ensures a great experience for your customers and greater sales opportunities for you.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerReservedQty from './GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerReservedQty';

/**
 * The Inventory model module.
 * @module model/Inventory
 * @version 1.0.0
 */
class Inventory {
    /**
     * Constructs a new <code>Inventory</code>.
     * @alias module:model/Inventory
     * @param quantity {module:model/GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerReservedQty} 
     * @param sku {String} A seller-provided Product ID. Response will have decoded value.
     */
    constructor(quantity, sku) { 
        
        Inventory.initialize(this, quantity, sku);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, quantity, sku) { 
        obj['quantity'] = quantity;
        obj['sku'] = sku;
    }

    /**
     * Constructs a <code>Inventory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Inventory} obj Optional instance to populate.
     * @return {module:model/Inventory} The populated <code>Inventory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Inventory();

            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerReservedQty.constructFromObject(data['quantity']);
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Inventory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Inventory</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Inventory.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `quantity`
        if (data['quantity']) { // data not null
          GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerReservedQty.validateJSON(data['quantity']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }

        return true;
    }


}

Inventory.RequiredProperties = ["quantity", "sku"];

/**
 * @member {module:model/GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerReservedQty} quantity
 */
Inventory.prototype['quantity'] = undefined;

/**
 * A seller-provided Product ID. Response will have decoded value.
 * @member {String} sku
 */
Inventory.prototype['sku'] = undefined;






export default Inventory;

