/**
 * Inventory Management
 * Maintaining up-to-date inventory for your items on Walmart.com ensures a great experience for your customers and greater sales opportunities for you.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import UpdateMultiNodeInventoryRequestInventories from './UpdateMultiNodeInventoryRequestInventories';

/**
 * The UpdateMultiNodeInventoryRequest model module.
 * @module model/UpdateMultiNodeInventoryRequest
 * @version 1.0.0
 */
class UpdateMultiNodeInventoryRequest {
    /**
     * Constructs a new <code>UpdateMultiNodeInventoryRequest</code>.
     * @alias module:model/UpdateMultiNodeInventoryRequest
     * @param inventories {module:model/UpdateMultiNodeInventoryRequestInventories} 
     */
    constructor(inventories) { 
        
        UpdateMultiNodeInventoryRequest.initialize(this, inventories);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, inventories) { 
        obj['inventories'] = inventories;
    }

    /**
     * Constructs a <code>UpdateMultiNodeInventoryRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateMultiNodeInventoryRequest} obj Optional instance to populate.
     * @return {module:model/UpdateMultiNodeInventoryRequest} The populated <code>UpdateMultiNodeInventoryRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateMultiNodeInventoryRequest();

            if (data.hasOwnProperty('inventories')) {
                obj['inventories'] = UpdateMultiNodeInventoryRequestInventories.constructFromObject(data['inventories']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateMultiNodeInventoryRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateMultiNodeInventoryRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateMultiNodeInventoryRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `inventories`
        if (data['inventories']) { // data not null
          UpdateMultiNodeInventoryRequestInventories.validateJSON(data['inventories']);
        }

        return true;
    }


}

UpdateMultiNodeInventoryRequest.RequiredProperties = ["inventories"];

/**
 * @member {module:model/UpdateMultiNodeInventoryRequestInventories} inventories
 */
UpdateMultiNodeInventoryRequest.prototype['inventories'] = undefined;






export default UpdateMultiNodeInventoryRequest;

