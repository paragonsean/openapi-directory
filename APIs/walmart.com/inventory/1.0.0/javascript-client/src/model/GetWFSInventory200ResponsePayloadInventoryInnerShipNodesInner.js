/**
 * Inventory Management
 * Maintaining up-to-date inventory for your items on Walmart.com ensures a great experience for your customers and greater sales opportunities for you.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GetWFSInventory200ResponsePayloadInventoryInnerShipNodesInner model module.
 * @module model/GetWFSInventory200ResponsePayloadInventoryInnerShipNodesInner
 * @version 1.0.0
 */
class GetWFSInventory200ResponsePayloadInventoryInnerShipNodesInner {
    /**
     * Constructs a new <code>GetWFSInventory200ResponsePayloadInventoryInnerShipNodesInner</code>.
     * @alias module:model/GetWFSInventory200ResponsePayloadInventoryInnerShipNodesInner
     */
    constructor() { 
        
        GetWFSInventory200ResponsePayloadInventoryInnerShipNodesInner.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetWFSInventory200ResponsePayloadInventoryInnerShipNodesInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetWFSInventory200ResponsePayloadInventoryInnerShipNodesInner} obj Optional instance to populate.
     * @return {module:model/GetWFSInventory200ResponsePayloadInventoryInnerShipNodesInner} The populated <code>GetWFSInventory200ResponsePayloadInventoryInnerShipNodesInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetWFSInventory200ResponsePayloadInventoryInnerShipNodesInner();

            if (data.hasOwnProperty('availToSellQty')) {
                obj['availToSellQty'] = ApiClient.convertToType(data['availToSellQty'], 'Number');
            }
            if (data.hasOwnProperty('modifiedDate')) {
                obj['modifiedDate'] = ApiClient.convertToType(data['modifiedDate'], 'String');
            }
            if (data.hasOwnProperty('onHandQty')) {
                obj['onHandQty'] = ApiClient.convertToType(data['onHandQty'], 'Number');
            }
            if (data.hasOwnProperty('shipNodeType')) {
                obj['shipNodeType'] = ApiClient.convertToType(data['shipNodeType'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetWFSInventory200ResponsePayloadInventoryInnerShipNodesInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetWFSInventory200ResponsePayloadInventoryInnerShipNodesInner</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['modifiedDate'] && !(typeof data['modifiedDate'] === 'string' || data['modifiedDate'] instanceof String)) {
            throw new Error("Expected the field `modifiedDate` to be a primitive type in the JSON string but got " + data['modifiedDate']);
        }
        // ensure the json data is a string
        if (data['shipNodeType'] && !(typeof data['shipNodeType'] === 'string' || data['shipNodeType'] instanceof String)) {
            throw new Error("Expected the field `shipNodeType` to be a primitive type in the JSON string but got " + data['shipNodeType']);
        }

        return true;
    }


}



/**
 * The available quantity is the quantity of an item that is available to be allocated to orders.
 * @member {Number} availToSellQty
 */
GetWFSInventory200ResponsePayloadInventoryInnerShipNodesInner.prototype['availToSellQty'] = undefined;

/**
 * Last changes date for the item.
 * @member {String} modifiedDate
 */
GetWFSInventory200ResponsePayloadInventoryInnerShipNodesInner.prototype['modifiedDate'] = undefined;

/**
 * The on-hand balance is the quantity of active inventory stored at the warehouse.Active inventory is defined as the usable amount of an item that is in the warehouse.Inventory is active if it is not damaged, expired or being inspected.
 * @member {Number} onHandQty
 */
GetWFSInventory200ResponsePayloadInventoryInnerShipNodesInner.prototype['onHandQty'] = undefined;

/**
 * Identifies fulfillment aspect of invetory. Walmart, seller or 3PL fulfilled. Possible value is 'WFSFulfilled'. In later phase we will also add seller fulfilled inventory.
 * @member {String} shipNodeType
 */
GetWFSInventory200ResponsePayloadInventoryInnerShipNodesInner.prototype['shipNodeType'] = undefined;






export default GetWFSInventory200ResponsePayloadInventoryInnerShipNodesInner;

