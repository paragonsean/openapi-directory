/**
 * Inventory Management
 * Maintaining up-to-date inventory for your items on Walmart.com ensures a great experience for your customers and greater sales opportunities for you.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerAvailToSellQty from './GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerAvailToSellQty';
import GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerInputQty from './GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerInputQty';
import GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerReservedQty from './GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerReservedQty';

/**
 * The GetAllInventoriesNodeDTO model module.
 * @module model/GetAllInventoriesNodeDTO
 * @version 1.0.0
 */
class GetAllInventoriesNodeDTO {
    /**
     * Constructs a new <code>GetAllInventoriesNodeDTO</code>.
     * @alias module:model/GetAllInventoriesNodeDTO
     */
    constructor() { 
        
        GetAllInventoriesNodeDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>GetAllInventoriesNodeDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GetAllInventoriesNodeDTO} obj Optional instance to populate.
     * @return {module:model/GetAllInventoriesNodeDTO} The populated <code>GetAllInventoriesNodeDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GetAllInventoriesNodeDTO();

            if (data.hasOwnProperty('availToSellQty')) {
                obj['availToSellQty'] = GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerAvailToSellQty.constructFromObject(data['availToSellQty']);
            }
            if (data.hasOwnProperty('inputQty')) {
                obj['inputQty'] = GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerInputQty.constructFromObject(data['inputQty']);
            }
            if (data.hasOwnProperty('reservedQty')) {
                obj['reservedQty'] = GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerReservedQty.constructFromObject(data['reservedQty']);
            }
            if (data.hasOwnProperty('shipNode')) {
                obj['shipNode'] = ApiClient.convertToType(data['shipNode'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GetAllInventoriesNodeDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GetAllInventoriesNodeDTO</code>.
     */
    static validateJSON(data) {
        // validate the optional field `availToSellQty`
        if (data['availToSellQty']) { // data not null
          GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerAvailToSellQty.validateJSON(data['availToSellQty']);
        }
        // validate the optional field `inputQty`
        if (data['inputQty']) { // data not null
          GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerInputQty.validateJSON(data['inputQty']);
        }
        // validate the optional field `reservedQty`
        if (data['reservedQty']) { // data not null
          GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerReservedQty.validateJSON(data['reservedQty']);
        }
        // ensure the json data is a string
        if (data['shipNode'] && !(typeof data['shipNode'] === 'string' || data['shipNode'] instanceof String)) {
            throw new Error("Expected the field `shipNode` to be a primitive type in the JSON string but got " + data['shipNode']);
        }

        return true;
    }


}



/**
 * @member {module:model/GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerAvailToSellQty} availToSellQty
 */
GetAllInventoriesNodeDTO.prototype['availToSellQty'] = undefined;

/**
 * @member {module:model/GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerInputQty} inputQty
 */
GetAllInventoriesNodeDTO.prototype['inputQty'] = undefined;

/**
 * @member {module:model/GetMultiNodeInventoryForAllSkuAndAllShipNodes200ResponseElementsInventoriesInnerNodesInnerReservedQty} reservedQty
 */
GetAllInventoriesNodeDTO.prototype['reservedQty'] = undefined;

/**
 * ShipNode Id of the ship node for which the inventory is requested
 * @member {String} shipNode
 */
GetAllInventoriesNodeDTO.prototype['shipNode'] = undefined;






export default GetAllInventoriesNodeDTO;

