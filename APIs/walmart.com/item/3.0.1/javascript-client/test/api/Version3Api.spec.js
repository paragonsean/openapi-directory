/**
 * Item API
 * Please make sure you use the correct version of the APIs for your use case. To find out the appropriate version, go to the API Docs  drop down on the menu.
 *
 * The version of the OpenAPI document: 3.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.ItemApi);
  }
}(this, function(expect, ItemApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new ItemApi.Version3Api();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Version3Api', function() {
    describe('v3doPostMultiPart', function() {
      it('should call v3doPostMultiPart successfully', function(done) {
        //uncomment below and update the code to test v3doPostMultiPart
        //instance.v3doPostMultiPart(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v3getAllItemsStatus', function() {
      it('should call v3getAllItemsStatus successfully', function(done) {
        //uncomment below and update the code to test v3getAllItemsStatus
        //instance.v3getAllItemsStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('v3getFeedItemStatus', function() {
      it('should call v3getFeedItemStatus successfully', function(done) {
        //uncomment below and update the code to test v3getFeedItemStatus
        //instance.v3getFeedItemStatus(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
