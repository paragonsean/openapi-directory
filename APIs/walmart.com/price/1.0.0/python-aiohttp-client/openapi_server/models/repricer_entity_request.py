# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_strategies200_response_strategy_collections_inner_strategies_inner import GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner
from openapi_server import util


class RepricerEntityRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, enable_repricer_for_promotion: bool=None, enabled: bool=None, repricer_strategy: str=None, strategies: List[GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner]=None):
        """RepricerEntityRequest - a model defined in OpenAPI

        :param enable_repricer_for_promotion: The enable_repricer_for_promotion of this RepricerEntityRequest.
        :param enabled: The enabled of this RepricerEntityRequest.
        :param repricer_strategy: The repricer_strategy of this RepricerEntityRequest.
        :param strategies: The strategies of this RepricerEntityRequest.
        """
        self.openapi_types = {
            'enable_repricer_for_promotion': bool,
            'enabled': bool,
            'repricer_strategy': str,
            'strategies': List[GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner]
        }

        self.attribute_map = {
            'enable_repricer_for_promotion': 'enableRepricerForPromotion',
            'enabled': 'enabled',
            'repricer_strategy': 'repricerStrategy',
            'strategies': 'strategies'
        }

        self._enable_repricer_for_promotion = enable_repricer_for_promotion
        self._enabled = enabled
        self._repricer_strategy = repricer_strategy
        self._strategies = strategies

    @classmethod
    def from_dict(cls, dikt: dict) -> 'RepricerEntityRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The RepricerEntityRequest of this RepricerEntityRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def enable_repricer_for_promotion(self):
        """Gets the enable_repricer_for_promotion of this RepricerEntityRequest.

        Status of item on promotions to be enable on repricer

        :return: The enable_repricer_for_promotion of this RepricerEntityRequest.
        :rtype: bool
        """
        return self._enable_repricer_for_promotion

    @enable_repricer_for_promotion.setter
    def enable_repricer_for_promotion(self, enable_repricer_for_promotion):
        """Sets the enable_repricer_for_promotion of this RepricerEntityRequest.

        Status of item on promotions to be enable on repricer

        :param enable_repricer_for_promotion: The enable_repricer_for_promotion of this RepricerEntityRequest.
        :type enable_repricer_for_promotion: bool
        """

        self._enable_repricer_for_promotion = enable_repricer_for_promotion

    @property
    def enabled(self):
        """Gets the enabled of this RepricerEntityRequest.

        Status of the Strategy Collection

        :return: The enabled of this RepricerEntityRequest.
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this RepricerEntityRequest.

        Status of the Strategy Collection

        :param enabled: The enabled of this RepricerEntityRequest.
        :type enabled: bool
        """

        self._enabled = enabled

    @property
    def repricer_strategy(self):
        """Gets the repricer_strategy of this RepricerEntityRequest.

        Name of the Strategy Collection

        :return: The repricer_strategy of this RepricerEntityRequest.
        :rtype: str
        """
        return self._repricer_strategy

    @repricer_strategy.setter
    def repricer_strategy(self, repricer_strategy):
        """Sets the repricer_strategy of this RepricerEntityRequest.

        Name of the Strategy Collection

        :param repricer_strategy: The repricer_strategy of this RepricerEntityRequest.
        :type repricer_strategy: str
        """

        self._repricer_strategy = repricer_strategy

    @property
    def strategies(self):
        """Gets the strategies of this RepricerEntityRequest.

        Strategies

        :return: The strategies of this RepricerEntityRequest.
        :rtype: List[GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner]
        """
        return self._strategies

    @strategies.setter
    def strategies(self, strategies):
        """Sets the strategies of this RepricerEntityRequest.

        Strategies

        :param strategies: The strategies of this RepricerEntityRequest.
        :type strategies: List[GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner]
        """

        self._strategies = strategies
