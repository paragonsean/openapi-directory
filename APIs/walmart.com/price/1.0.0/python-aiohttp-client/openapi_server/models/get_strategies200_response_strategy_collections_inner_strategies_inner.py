# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adjustment_type: str=None, adjustment_value: float=None, strategy_type: str=None):
        """GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner - a model defined in OpenAPI

        :param adjustment_type: The adjustment_type of this GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner.
        :param adjustment_value: The adjustment_value of this GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner.
        :param strategy_type: The strategy_type of this GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner.
        """
        self.openapi_types = {
            'adjustment_type': str,
            'adjustment_value': float,
            'strategy_type': str
        }

        self.attribute_map = {
            'adjustment_type': 'adjustmentType',
            'adjustment_value': 'adjustmentValue',
            'strategy_type': 'strategyType'
        }

        self._adjustment_type = adjustment_type
        self._adjustment_value = adjustment_value
        self._strategy_type = strategy_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getStrategies_200_response_strategyCollections_inner_strategies_inner of this GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adjustment_type(self):
        """Gets the adjustment_type of this GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner.


        :return: The adjustment_type of this GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner.
        :rtype: str
        """
        return self._adjustment_type

    @adjustment_type.setter
    def adjustment_type(self, adjustment_type):
        """Sets the adjustment_type of this GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner.


        :param adjustment_type: The adjustment_type of this GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner.
        :type adjustment_type: str
        """
        allowed_values = ["UNIT", "PERCENTAGE"]  # noqa: E501
        if adjustment_type not in allowed_values:
            raise ValueError(
                "Invalid value for `adjustment_type` ({0}), must be one of {1}"
                .format(adjustment_type, allowed_values)
            )

        self._adjustment_type = adjustment_type

    @property
    def adjustment_value(self):
        """Gets the adjustment_value of this GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner.


        :return: The adjustment_value of this GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner.
        :rtype: float
        """
        return self._adjustment_value

    @adjustment_value.setter
    def adjustment_value(self, adjustment_value):
        """Sets the adjustment_value of this GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner.


        :param adjustment_value: The adjustment_value of this GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner.
        :type adjustment_value: float
        """

        self._adjustment_value = adjustment_value

    @property
    def strategy_type(self):
        """Gets the strategy_type of this GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner.


        :return: The strategy_type of this GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner.
        :rtype: str
        """
        return self._strategy_type

    @strategy_type.setter
    def strategy_type(self, strategy_type):
        """Sets the strategy_type of this GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner.


        :param strategy_type: The strategy_type of this GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner.
        :type strategy_type: str
        """
        allowed_values = ["Buy Box Price", "External Price", "Competitive Price"]  # noqa: E501
        if strategy_type not in allowed_values:
            raise ValueError(
                "Invalid value for `strategy_type` ({0}), must be one of {1}"
                .format(strategy_type, allowed_values)
            )

        self._strategy_type = strategy_type
