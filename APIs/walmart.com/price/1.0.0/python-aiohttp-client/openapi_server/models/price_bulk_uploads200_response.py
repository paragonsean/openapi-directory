# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PriceBulkUploads200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_attributes: object=None, errors: object=None, feed_id: str=None):
        """PriceBulkUploads200Response - a model defined in OpenAPI

        :param additional_attributes: The additional_attributes of this PriceBulkUploads200Response.
        :param errors: The errors of this PriceBulkUploads200Response.
        :param feed_id: The feed_id of this PriceBulkUploads200Response.
        """
        self.openapi_types = {
            'additional_attributes': object,
            'errors': object,
            'feed_id': str
        }

        self.attribute_map = {
            'additional_attributes': 'additionalAttributes',
            'errors': 'errors',
            'feed_id': 'feedId'
        }

        self._additional_attributes = additional_attributes
        self._errors = errors
        self._feed_id = feed_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PriceBulkUploads200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The priceBulkUploads_200_response of this PriceBulkUploads200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_attributes(self):
        """Gets the additional_attributes of this PriceBulkUploads200Response.


        :return: The additional_attributes of this PriceBulkUploads200Response.
        :rtype: object
        """
        return self._additional_attributes

    @additional_attributes.setter
    def additional_attributes(self, additional_attributes):
        """Sets the additional_attributes of this PriceBulkUploads200Response.


        :param additional_attributes: The additional_attributes of this PriceBulkUploads200Response.
        :type additional_attributes: object
        """

        self._additional_attributes = additional_attributes

    @property
    def errors(self):
        """Gets the errors of this PriceBulkUploads200Response.


        :return: The errors of this PriceBulkUploads200Response.
        :rtype: object
        """
        return self._errors

    @errors.setter
    def errors(self, errors):
        """Sets the errors of this PriceBulkUploads200Response.


        :param errors: The errors of this PriceBulkUploads200Response.
        :type errors: object
        """

        self._errors = errors

    @property
    def feed_id(self):
        """Gets the feed_id of this PriceBulkUploads200Response.

        A unique ID, returned from the Bulk Upload API, used for tracking the feed file

        :return: The feed_id of this PriceBulkUploads200Response.
        :rtype: str
        """
        return self._feed_id

    @feed_id.setter
    def feed_id(self, feed_id):
        """Sets the feed_id of this PriceBulkUploads200Response.

        A unique ID, returned from the Bulk Upload API, used for tracking the feed file

        :param feed_id: The feed_id of this PriceBulkUploads200Response.
        :type feed_id: str
        """

        self._feed_id = feed_id
