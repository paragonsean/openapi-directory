# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetRepricerFeedRequestItemInnerStrategy(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, maximum_seller_allowed_price: float=None, minimum_seller_allowed_price: float=None, repricer_strategy: str=None, sku: str=None):
        """GetRepricerFeedRequestItemInnerStrategy - a model defined in OpenAPI

        :param maximum_seller_allowed_price: The maximum_seller_allowed_price of this GetRepricerFeedRequestItemInnerStrategy.
        :param minimum_seller_allowed_price: The minimum_seller_allowed_price of this GetRepricerFeedRequestItemInnerStrategy.
        :param repricer_strategy: The repricer_strategy of this GetRepricerFeedRequestItemInnerStrategy.
        :param sku: The sku of this GetRepricerFeedRequestItemInnerStrategy.
        """
        self.openapi_types = {
            'maximum_seller_allowed_price': float,
            'minimum_seller_allowed_price': float,
            'repricer_strategy': str,
            'sku': str
        }

        self.attribute_map = {
            'maximum_seller_allowed_price': 'maximumSellerAllowedPrice',
            'minimum_seller_allowed_price': 'minimumSellerAllowedPrice',
            'repricer_strategy': 'repricerStrategy',
            'sku': 'sku'
        }

        self._maximum_seller_allowed_price = maximum_seller_allowed_price
        self._minimum_seller_allowed_price = minimum_seller_allowed_price
        self._repricer_strategy = repricer_strategy
        self._sku = sku

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetRepricerFeedRequestItemInnerStrategy':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The getRepricerFeed_request_Item_inner_Strategy of this GetRepricerFeedRequestItemInnerStrategy.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def maximum_seller_allowed_price(self):
        """Gets the maximum_seller_allowed_price of this GetRepricerFeedRequestItemInnerStrategy.


        :return: The maximum_seller_allowed_price of this GetRepricerFeedRequestItemInnerStrategy.
        :rtype: float
        """
        return self._maximum_seller_allowed_price

    @maximum_seller_allowed_price.setter
    def maximum_seller_allowed_price(self, maximum_seller_allowed_price):
        """Sets the maximum_seller_allowed_price of this GetRepricerFeedRequestItemInnerStrategy.


        :param maximum_seller_allowed_price: The maximum_seller_allowed_price of this GetRepricerFeedRequestItemInnerStrategy.
        :type maximum_seller_allowed_price: float
        """

        self._maximum_seller_allowed_price = maximum_seller_allowed_price

    @property
    def minimum_seller_allowed_price(self):
        """Gets the minimum_seller_allowed_price of this GetRepricerFeedRequestItemInnerStrategy.


        :return: The minimum_seller_allowed_price of this GetRepricerFeedRequestItemInnerStrategy.
        :rtype: float
        """
        return self._minimum_seller_allowed_price

    @minimum_seller_allowed_price.setter
    def minimum_seller_allowed_price(self, minimum_seller_allowed_price):
        """Sets the minimum_seller_allowed_price of this GetRepricerFeedRequestItemInnerStrategy.


        :param minimum_seller_allowed_price: The minimum_seller_allowed_price of this GetRepricerFeedRequestItemInnerStrategy.
        :type minimum_seller_allowed_price: float
        """

        self._minimum_seller_allowed_price = minimum_seller_allowed_price

    @property
    def repricer_strategy(self):
        """Gets the repricer_strategy of this GetRepricerFeedRequestItemInnerStrategy.


        :return: The repricer_strategy of this GetRepricerFeedRequestItemInnerStrategy.
        :rtype: str
        """
        return self._repricer_strategy

    @repricer_strategy.setter
    def repricer_strategy(self, repricer_strategy):
        """Sets the repricer_strategy of this GetRepricerFeedRequestItemInnerStrategy.


        :param repricer_strategy: The repricer_strategy of this GetRepricerFeedRequestItemInnerStrategy.
        :type repricer_strategy: str
        """

        self._repricer_strategy = repricer_strategy

    @property
    def sku(self):
        """Gets the sku of this GetRepricerFeedRequestItemInnerStrategy.


        :return: The sku of this GetRepricerFeedRequestItemInnerStrategy.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this GetRepricerFeedRequestItemInnerStrategy.


        :param sku: The sku of this GetRepricerFeedRequestItemInnerStrategy.
        :type sku: str
        """

        self._sku = sku
