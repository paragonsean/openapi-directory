/**
 * Price Management
 * The price is a fundamental building block for your listing on Walmart.com. You can use the price management APIs to set up and manage the price for a given item
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FeedItemsHeaderRequestDTO model module.
 * @module model/FeedItemsHeaderRequestDTO
 * @version 1.0.0
 */
class FeedItemsHeaderRequestDTO {
    /**
     * Constructs a new <code>FeedItemsHeaderRequestDTO</code>.
     * @alias module:model/FeedItemsHeaderRequestDTO
     */
    constructor() { 
        
        FeedItemsHeaderRequestDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FeedItemsHeaderRequestDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FeedItemsHeaderRequestDTO} obj Optional instance to populate.
     * @return {module:model/FeedItemsHeaderRequestDTO} The populated <code>FeedItemsHeaderRequestDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FeedItemsHeaderRequestDTO();

            if (data.hasOwnProperty('locale')) {
                obj['locale'] = ApiClient.convertToType(data['locale'], 'String');
            }
            if (data.hasOwnProperty('mart')) {
                obj['mart'] = ApiClient.convertToType(data['mart'], 'String');
            }
            if (data.hasOwnProperty('processMode')) {
                obj['processMode'] = ApiClient.convertToType(data['processMode'], 'String');
            }
            if (data.hasOwnProperty('sellingChannel')) {
                obj['sellingChannel'] = ApiClient.convertToType(data['sellingChannel'], 'String');
            }
            if (data.hasOwnProperty('subset')) {
                obj['subset'] = ApiClient.convertToType(data['subset'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FeedItemsHeaderRequestDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FeedItemsHeaderRequestDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['locale'] && !(typeof data['locale'] === 'string' || data['locale'] instanceof String)) {
            throw new Error("Expected the field `locale` to be a primitive type in the JSON string but got " + data['locale']);
        }
        // ensure the json data is a string
        if (data['mart'] && !(typeof data['mart'] === 'string' || data['mart'] instanceof String)) {
            throw new Error("Expected the field `mart` to be a primitive type in the JSON string but got " + data['mart']);
        }
        // ensure the json data is a string
        if (data['processMode'] && !(typeof data['processMode'] === 'string' || data['processMode'] instanceof String)) {
            throw new Error("Expected the field `processMode` to be a primitive type in the JSON string but got " + data['processMode']);
        }
        // ensure the json data is a string
        if (data['sellingChannel'] && !(typeof data['sellingChannel'] === 'string' || data['sellingChannel'] instanceof String)) {
            throw new Error("Expected the field `sellingChannel` to be a primitive type in the JSON string but got " + data['sellingChannel']);
        }
        // ensure the json data is a string
        if (data['subset'] && !(typeof data['subset'] === 'string' || data['subset'] instanceof String)) {
            throw new Error("Expected the field `subset` to be a primitive type in the JSON string but got " + data['subset']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }

        return true;
    }


}



/**
 * @member {String} locale
 */
FeedItemsHeaderRequestDTO.prototype['locale'] = undefined;

/**
 * @member {String} mart
 */
FeedItemsHeaderRequestDTO.prototype['mart'] = undefined;

/**
 * @member {String} processMode
 */
FeedItemsHeaderRequestDTO.prototype['processMode'] = undefined;

/**
 * @member {String} sellingChannel
 */
FeedItemsHeaderRequestDTO.prototype['sellingChannel'] = undefined;

/**
 * @member {String} subset
 */
FeedItemsHeaderRequestDTO.prototype['subset'] = undefined;

/**
 * @member {String} version
 */
FeedItemsHeaderRequestDTO.prototype['version'] = undefined;






export default FeedItemsHeaderRequestDTO;

