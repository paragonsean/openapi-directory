/**
 * Price Management
 * The price is a fundamental building block for your listing on Walmart.com. You can use the price management APIs to set up and manage the price for a given item
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner from './GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner';

/**
 * The RepricerEntityGetResponse model module.
 * @module model/RepricerEntityGetResponse
 * @version 1.0.0
 */
class RepricerEntityGetResponse {
    /**
     * Constructs a new <code>RepricerEntityGetResponse</code>.
     * @alias module:model/RepricerEntityGetResponse
     */
    constructor() { 
        
        RepricerEntityGetResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RepricerEntityGetResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RepricerEntityGetResponse} obj Optional instance to populate.
     * @return {module:model/RepricerEntityGetResponse} The populated <code>RepricerEntityGetResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RepricerEntityGetResponse();

            if (data.hasOwnProperty('assignedCount')) {
                obj['assignedCount'] = ApiClient.convertToType(data['assignedCount'], 'Number');
            }
            if (data.hasOwnProperty('enableRepricerForPromotion')) {
                obj['enableRepricerForPromotion'] = ApiClient.convertToType(data['enableRepricerForPromotion'], 'Boolean');
            }
            if (data.hasOwnProperty('enabled')) {
                obj['enabled'] = ApiClient.convertToType(data['enabled'], 'Boolean');
            }
            if (data.hasOwnProperty('repricerStrategy')) {
                obj['repricerStrategy'] = ApiClient.convertToType(data['repricerStrategy'], 'String');
            }
            if (data.hasOwnProperty('strategies')) {
                obj['strategies'] = ApiClient.convertToType(data['strategies'], [GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner]);
            }
            if (data.hasOwnProperty('strategyCollectionId')) {
                obj['strategyCollectionId'] = ApiClient.convertToType(data['strategyCollectionId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RepricerEntityGetResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RepricerEntityGetResponse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['repricerStrategy'] && !(typeof data['repricerStrategy'] === 'string' || data['repricerStrategy'] instanceof String)) {
            throw new Error("Expected the field `repricerStrategy` to be a primitive type in the JSON string but got " + data['repricerStrategy']);
        }
        if (data['strategies']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['strategies'])) {
                throw new Error("Expected the field `strategies` to be an array in the JSON data but got " + data['strategies']);
            }
            // validate the optional field `strategies` (array)
            for (const item of data['strategies']) {
                GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['strategyCollectionId'] && !(typeof data['strategyCollectionId'] === 'string' || data['strategyCollectionId'] instanceof String)) {
            throw new Error("Expected the field `strategyCollectionId` to be a primitive type in the JSON string but got " + data['strategyCollectionId']);
        }

        return true;
    }


}



/**
 * @member {Number} assignedCount
 */
RepricerEntityGetResponse.prototype['assignedCount'] = undefined;

/**
 * @member {Boolean} enableRepricerForPromotion
 */
RepricerEntityGetResponse.prototype['enableRepricerForPromotion'] = undefined;

/**
 * @member {Boolean} enabled
 */
RepricerEntityGetResponse.prototype['enabled'] = undefined;

/**
 * @member {String} repricerStrategy
 */
RepricerEntityGetResponse.prototype['repricerStrategy'] = undefined;

/**
 * @member {Array.<module:model/GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner>} strategies
 */
RepricerEntityGetResponse.prototype['strategies'] = undefined;

/**
 * @member {String} strategyCollectionId
 */
RepricerEntityGetResponse.prototype['strategyCollectionId'] = undefined;






export default RepricerEntityGetResponse;

