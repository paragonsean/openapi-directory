/**
 * Price Management
 * The price is a fundamental building block for your listing on Walmart.com. You can use the price management APIs to set up and manage the price for a given item
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The FeedItemsRequestDTO model module.
 * @module model/FeedItemsRequestDTO
 * @version 1.0.0
 */
class FeedItemsRequestDTO {
    /**
     * Constructs a new <code>FeedItemsRequestDTO</code>.
     * @alias module:model/FeedItemsRequestDTO
     */
    constructor() { 
        
        FeedItemsRequestDTO.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>FeedItemsRequestDTO</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/FeedItemsRequestDTO} obj Optional instance to populate.
     * @return {module:model/FeedItemsRequestDTO} The populated <code>FeedItemsRequestDTO</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new FeedItemsRequestDTO();

            if (data.hasOwnProperty('maximumSellerAllowedPrice')) {
                obj['maximumSellerAllowedPrice'] = ApiClient.convertToType(data['maximumSellerAllowedPrice'], 'Number');
            }
            if (data.hasOwnProperty('minimumSellerAllowedPrice')) {
                obj['minimumSellerAllowedPrice'] = ApiClient.convertToType(data['minimumSellerAllowedPrice'], 'Number');
            }
            if (data.hasOwnProperty('repricerStrategy')) {
                obj['repricerStrategy'] = ApiClient.convertToType(data['repricerStrategy'], 'String');
            }
            if (data.hasOwnProperty('sku')) {
                obj['sku'] = ApiClient.convertToType(data['sku'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>FeedItemsRequestDTO</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>FeedItemsRequestDTO</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['repricerStrategy'] && !(typeof data['repricerStrategy'] === 'string' || data['repricerStrategy'] instanceof String)) {
            throw new Error("Expected the field `repricerStrategy` to be a primitive type in the JSON string but got " + data['repricerStrategy']);
        }
        // ensure the json data is a string
        if (data['sku'] && !(typeof data['sku'] === 'string' || data['sku'] instanceof String)) {
            throw new Error("Expected the field `sku` to be a primitive type in the JSON string but got " + data['sku']);
        }

        return true;
    }


}



/**
 * @member {Number} maximumSellerAllowedPrice
 */
FeedItemsRequestDTO.prototype['maximumSellerAllowedPrice'] = undefined;

/**
 * @member {Number} minimumSellerAllowedPrice
 */
FeedItemsRequestDTO.prototype['minimumSellerAllowedPrice'] = undefined;

/**
 * @member {String} repricerStrategy
 */
FeedItemsRequestDTO.prototype['repricerStrategy'] = undefined;

/**
 * @member {String} sku
 */
FeedItemsRequestDTO.prototype['sku'] = undefined;






export default FeedItemsRequestDTO;

