/*
 * Price Management
 * The price is a fundamental building block for your listing on Walmart.com. You can use the price management APIs to set up and manage the price for a given item
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * GetStrategies200ResponseStrategyCollectionsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:22:24.889522-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class GetStrategies200ResponseStrategyCollectionsInner {
  public static final String SERIALIZED_NAME_ASSIGNED_COUNT = "assignedCount";
  @SerializedName(SERIALIZED_NAME_ASSIGNED_COUNT)
  private Integer assignedCount;

  public static final String SERIALIZED_NAME_ENABLE_REPRICER_FOR_PROMOTION = "enableRepricerForPromotion";
  @SerializedName(SERIALIZED_NAME_ENABLE_REPRICER_FOR_PROMOTION)
  private Boolean enableRepricerForPromotion;

  public static final String SERIALIZED_NAME_ENABLED = "enabled";
  @SerializedName(SERIALIZED_NAME_ENABLED)
  private Boolean enabled;

  public static final String SERIALIZED_NAME_REPRICER_STRATEGY = "repricerStrategy";
  @SerializedName(SERIALIZED_NAME_REPRICER_STRATEGY)
  private String repricerStrategy;

  public static final String SERIALIZED_NAME_STRATEGIES = "strategies";
  @SerializedName(SERIALIZED_NAME_STRATEGIES)
  private List<GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner> strategies = new ArrayList<>();

  public static final String SERIALIZED_NAME_STRATEGY_COLLECTION_ID = "strategyCollectionId";
  @SerializedName(SERIALIZED_NAME_STRATEGY_COLLECTION_ID)
  private String strategyCollectionId;

  public GetStrategies200ResponseStrategyCollectionsInner() {
  }

  public GetStrategies200ResponseStrategyCollectionsInner assignedCount(Integer assignedCount) {
    this.assignedCount = assignedCount;
    return this;
  }

  /**
   * Get assignedCount
   * @return assignedCount
   */
  @javax.annotation.Nullable
  public Integer getAssignedCount() {
    return assignedCount;
  }

  public void setAssignedCount(Integer assignedCount) {
    this.assignedCount = assignedCount;
  }


  public GetStrategies200ResponseStrategyCollectionsInner enableRepricerForPromotion(Boolean enableRepricerForPromotion) {
    this.enableRepricerForPromotion = enableRepricerForPromotion;
    return this;
  }

  /**
   * Get enableRepricerForPromotion
   * @return enableRepricerForPromotion
   */
  @javax.annotation.Nullable
  public Boolean getEnableRepricerForPromotion() {
    return enableRepricerForPromotion;
  }

  public void setEnableRepricerForPromotion(Boolean enableRepricerForPromotion) {
    this.enableRepricerForPromotion = enableRepricerForPromotion;
  }


  public GetStrategies200ResponseStrategyCollectionsInner enabled(Boolean enabled) {
    this.enabled = enabled;
    return this;
  }

  /**
   * Get enabled
   * @return enabled
   */
  @javax.annotation.Nullable
  public Boolean getEnabled() {
    return enabled;
  }

  public void setEnabled(Boolean enabled) {
    this.enabled = enabled;
  }


  public GetStrategies200ResponseStrategyCollectionsInner repricerStrategy(String repricerStrategy) {
    this.repricerStrategy = repricerStrategy;
    return this;
  }

  /**
   * Get repricerStrategy
   * @return repricerStrategy
   */
  @javax.annotation.Nullable
  public String getRepricerStrategy() {
    return repricerStrategy;
  }

  public void setRepricerStrategy(String repricerStrategy) {
    this.repricerStrategy = repricerStrategy;
  }


  public GetStrategies200ResponseStrategyCollectionsInner strategies(List<GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner> strategies) {
    this.strategies = strategies;
    return this;
  }

  public GetStrategies200ResponseStrategyCollectionsInner addStrategiesItem(GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner strategiesItem) {
    if (this.strategies == null) {
      this.strategies = new ArrayList<>();
    }
    this.strategies.add(strategiesItem);
    return this;
  }

  /**
   * Get strategies
   * @return strategies
   */
  @javax.annotation.Nullable
  public List<GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner> getStrategies() {
    return strategies;
  }

  public void setStrategies(List<GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner> strategies) {
    this.strategies = strategies;
  }


  public GetStrategies200ResponseStrategyCollectionsInner strategyCollectionId(String strategyCollectionId) {
    this.strategyCollectionId = strategyCollectionId;
    return this;
  }

  /**
   * Get strategyCollectionId
   * @return strategyCollectionId
   */
  @javax.annotation.Nullable
  public String getStrategyCollectionId() {
    return strategyCollectionId;
  }

  public void setStrategyCollectionId(String strategyCollectionId) {
    this.strategyCollectionId = strategyCollectionId;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetStrategies200ResponseStrategyCollectionsInner getStrategies200ResponseStrategyCollectionsInner = (GetStrategies200ResponseStrategyCollectionsInner) o;
    return Objects.equals(this.assignedCount, getStrategies200ResponseStrategyCollectionsInner.assignedCount) &&
        Objects.equals(this.enableRepricerForPromotion, getStrategies200ResponseStrategyCollectionsInner.enableRepricerForPromotion) &&
        Objects.equals(this.enabled, getStrategies200ResponseStrategyCollectionsInner.enabled) &&
        Objects.equals(this.repricerStrategy, getStrategies200ResponseStrategyCollectionsInner.repricerStrategy) &&
        Objects.equals(this.strategies, getStrategies200ResponseStrategyCollectionsInner.strategies) &&
        Objects.equals(this.strategyCollectionId, getStrategies200ResponseStrategyCollectionsInner.strategyCollectionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(assignedCount, enableRepricerForPromotion, enabled, repricerStrategy, strategies, strategyCollectionId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetStrategies200ResponseStrategyCollectionsInner {\n");
    sb.append("    assignedCount: ").append(toIndentedString(assignedCount)).append("\n");
    sb.append("    enableRepricerForPromotion: ").append(toIndentedString(enableRepricerForPromotion)).append("\n");
    sb.append("    enabled: ").append(toIndentedString(enabled)).append("\n");
    sb.append("    repricerStrategy: ").append(toIndentedString(repricerStrategy)).append("\n");
    sb.append("    strategies: ").append(toIndentedString(strategies)).append("\n");
    sb.append("    strategyCollectionId: ").append(toIndentedString(strategyCollectionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("assignedCount");
    openapiFields.add("enableRepricerForPromotion");
    openapiFields.add("enabled");
    openapiFields.add("repricerStrategy");
    openapiFields.add("strategies");
    openapiFields.add("strategyCollectionId");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to GetStrategies200ResponseStrategyCollectionsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!GetStrategies200ResponseStrategyCollectionsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in GetStrategies200ResponseStrategyCollectionsInner is not found in the empty JSON string", GetStrategies200ResponseStrategyCollectionsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!GetStrategies200ResponseStrategyCollectionsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `GetStrategies200ResponseStrategyCollectionsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("repricerStrategy") != null && !jsonObj.get("repricerStrategy").isJsonNull()) && !jsonObj.get("repricerStrategy").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `repricerStrategy` to be a primitive type in the JSON string but got `%s`", jsonObj.get("repricerStrategy").toString()));
      }
      if (jsonObj.get("strategies") != null && !jsonObj.get("strategies").isJsonNull()) {
        JsonArray jsonArraystrategies = jsonObj.getAsJsonArray("strategies");
        if (jsonArraystrategies != null) {
          // ensure the json data is an array
          if (!jsonObj.get("strategies").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `strategies` to be an array in the JSON string but got `%s`", jsonObj.get("strategies").toString()));
          }

          // validate the optional field `strategies` (array)
          for (int i = 0; i < jsonArraystrategies.size(); i++) {
            GetStrategies200ResponseStrategyCollectionsInnerStrategiesInner.validateJsonElement(jsonArraystrategies.get(i));
          };
        }
      }
      if ((jsonObj.get("strategyCollectionId") != null && !jsonObj.get("strategyCollectionId").isJsonNull()) && !jsonObj.get("strategyCollectionId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `strategyCollectionId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("strategyCollectionId").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!GetStrategies200ResponseStrategyCollectionsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'GetStrategies200ResponseStrategyCollectionsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<GetStrategies200ResponseStrategyCollectionsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(GetStrategies200ResponseStrategyCollectionsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<GetStrategies200ResponseStrategyCollectionsInner>() {
           @Override
           public void write(JsonWriter out, GetStrategies200ResponseStrategyCollectionsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public GetStrategies200ResponseStrategyCollectionsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of GetStrategies200ResponseStrategyCollectionsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of GetStrategies200ResponseStrategyCollectionsInner
   * @throws IOException if the JSON string is invalid with respect to GetStrategies200ResponseStrategyCollectionsInner
   */
  public static GetStrategies200ResponseStrategyCollectionsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, GetStrategies200ResponseStrategyCollectionsInner.class);
  }

  /**
   * Convert an instance of GetStrategies200ResponseStrategyCollectionsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

