/**
 * Price Management
 * The price is a fundamental building block for your listing on Walmart.com. You can use the price management APIs to set up and manage the price for a given item
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIPricing.h
 *
 * 
 */

#ifndef OAIPricing_H
#define OAIPricing_H

#include <QJsonObject>

#include "OAIUpdatePrice_request_pricing_inner_comparisonPrice.h"
#include "OAIUpdatePrice_request_pricing_inner_currentPrice.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIUpdatePrice_request_pricing_inner_comparisonPrice;
class OAIUpdatePrice_request_pricing_inner_currentPrice;

class OAIPricing : public OAIObject {
public:
    OAIPricing();
    OAIPricing(QString json);
    ~OAIPricing() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIUpdatePrice_request_pricing_inner_comparisonPrice getComparisonPrice() const;
    void setComparisonPrice(const OAIUpdatePrice_request_pricing_inner_comparisonPrice &comparison_price);
    bool is_comparison_price_Set() const;
    bool is_comparison_price_Valid() const;

    QString getComparisonPriceType() const;
    void setComparisonPriceType(const QString &comparison_price_type);
    bool is_comparison_price_type_Set() const;
    bool is_comparison_price_type_Valid() const;

    OAIUpdatePrice_request_pricing_inner_currentPrice getCurrentPrice() const;
    void setCurrentPrice(const OAIUpdatePrice_request_pricing_inner_currentPrice &current_price);
    bool is_current_price_Set() const;
    bool is_current_price_Valid() const;

    QString getCurrentPriceType() const;
    void setCurrentPriceType(const QString &current_price_type);
    bool is_current_price_type_Set() const;
    bool is_current_price_type_Valid() const;

    QDateTime getEffectiveDate() const;
    void setEffectiveDate(const QDateTime &effective_date);
    bool is_effective_date_Set() const;
    bool is_effective_date_Valid() const;

    QDateTime getExpirationDate() const;
    void setExpirationDate(const QDateTime &expiration_date);
    bool is_expiration_date_Set() const;
    bool is_expiration_date_Valid() const;

    QString getPriceDisplayCodes() const;
    void setPriceDisplayCodes(const QString &price_display_codes);
    bool is_price_display_codes_Set() const;
    bool is_price_display_codes_Valid() const;

    QString getProcessMode() const;
    void setProcessMode(const QString &process_mode);
    bool is_process_mode_Set() const;
    bool is_process_mode_Valid() const;

    QString getPromoId() const;
    void setPromoId(const QString &promo_id);
    bool is_promo_id_Set() const;
    bool is_promo_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIUpdatePrice_request_pricing_inner_comparisonPrice m_comparison_price;
    bool m_comparison_price_isSet;
    bool m_comparison_price_isValid;

    QString m_comparison_price_type;
    bool m_comparison_price_type_isSet;
    bool m_comparison_price_type_isValid;

    OAIUpdatePrice_request_pricing_inner_currentPrice m_current_price;
    bool m_current_price_isSet;
    bool m_current_price_isValid;

    QString m_current_price_type;
    bool m_current_price_type_isSet;
    bool m_current_price_type_isValid;

    QDateTime m_effective_date;
    bool m_effective_date_isSet;
    bool m_effective_date_isValid;

    QDateTime m_expiration_date;
    bool m_expiration_date_isSet;
    bool m_expiration_date_isValid;

    QString m_price_display_codes;
    bool m_price_display_codes_isSet;
    bool m_price_display_codes_isValid;

    QString m_process_mode;
    bool m_process_mode_isSet;
    bool m_process_mode_isValid;

    QString m_promo_id;
    bool m_promo_id_isSet;
    bool m_promo_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIPricing)

#endif // OAIPricing_H
