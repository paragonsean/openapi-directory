/**
 * Price Management
 * The price is a fundamental building block for your listing on Walmart.com. You can use the price management APIs to set up and manage the price for a given item
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFeedItemsRequestDTO.h
 *
 * 
 */

#ifndef OAIFeedItemsRequestDTO_H
#define OAIFeedItemsRequestDTO_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIFeedItemsRequestDTO : public OAIObject {
public:
    OAIFeedItemsRequestDTO();
    OAIFeedItemsRequestDTO(QString json);
    ~OAIFeedItemsRequestDTO() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getMaximumSellerAllowedPrice() const;
    void setMaximumSellerAllowedPrice(const double &maximum_seller_allowed_price);
    bool is_maximum_seller_allowed_price_Set() const;
    bool is_maximum_seller_allowed_price_Valid() const;

    double getMinimumSellerAllowedPrice() const;
    void setMinimumSellerAllowedPrice(const double &minimum_seller_allowed_price);
    bool is_minimum_seller_allowed_price_Set() const;
    bool is_minimum_seller_allowed_price_Valid() const;

    QString getRepricerStrategy() const;
    void setRepricerStrategy(const QString &repricer_strategy);
    bool is_repricer_strategy_Set() const;
    bool is_repricer_strategy_Valid() const;

    QString getSku() const;
    void setSku(const QString &sku);
    bool is_sku_Set() const;
    bool is_sku_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_maximum_seller_allowed_price;
    bool m_maximum_seller_allowed_price_isSet;
    bool m_maximum_seller_allowed_price_isValid;

    double m_minimum_seller_allowed_price;
    bool m_minimum_seller_allowed_price_isSet;
    bool m_minimum_seller_allowed_price_isValid;

    QString m_repricer_strategy;
    bool m_repricer_strategy_isSet;
    bool m_repricer_strategy_isValid;

    QString m_sku;
    bool m_sku_isSet;
    bool m_sku_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFeedItemsRequestDTO)

#endif // OAIFeedItemsRequestDTO_H
