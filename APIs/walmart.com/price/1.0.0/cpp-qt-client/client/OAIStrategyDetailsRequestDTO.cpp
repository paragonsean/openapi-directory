/**
 * Price Management
 * The price is a fundamental building block for your listing on Walmart.com. You can use the price management APIs to set up and manage the price for a given item
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIStrategyDetailsRequestDTO.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIStrategyDetailsRequestDTO::OAIStrategyDetailsRequestDTO(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIStrategyDetailsRequestDTO::OAIStrategyDetailsRequestDTO() {
    this->initializeModel();
}

OAIStrategyDetailsRequestDTO::~OAIStrategyDetailsRequestDTO() {}

void OAIStrategyDetailsRequestDTO::initializeModel() {

    m_strategy_isSet = false;
    m_strategy_isValid = false;
}

void OAIStrategyDetailsRequestDTO::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIStrategyDetailsRequestDTO::fromJsonObject(QJsonObject json) {

    m_strategy_isValid = ::OpenAPI::fromJsonValue(m_strategy, json[QString("Strategy")]);
    m_strategy_isSet = !json[QString("Strategy")].isNull() && m_strategy_isValid;
}

QString OAIStrategyDetailsRequestDTO::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIStrategyDetailsRequestDTO::asJsonObject() const {
    QJsonObject obj;
    if (m_strategy.isSet()) {
        obj.insert(QString("Strategy"), ::OpenAPI::toJsonValue(m_strategy));
    }
    return obj;
}

OAIGetRepricerFeed_request_Item_inner_Strategy OAIStrategyDetailsRequestDTO::getStrategy() const {
    return m_strategy;
}
void OAIStrategyDetailsRequestDTO::setStrategy(const OAIGetRepricerFeed_request_Item_inner_Strategy &strategy) {
    m_strategy = strategy;
    m_strategy_isSet = true;
}

bool OAIStrategyDetailsRequestDTO::is_strategy_Set() const{
    return m_strategy_isSet;
}

bool OAIStrategyDetailsRequestDTO::is_strategy_Valid() const{
    return m_strategy_isValid;
}

bool OAIStrategyDetailsRequestDTO::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_strategy.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIStrategyDetailsRequestDTO::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
