/**
 * Price Management
 * The price is a fundamental building block for your listing on Walmart.com. You can use the price management APIs to set up and manage the price for a given item
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIGetRepricerFeed_request_ItemFeedHeader.h
 *
 * 
 */

#ifndef OAIGetRepricerFeed_request_ItemFeedHeader_H
#define OAIGetRepricerFeed_request_ItemFeedHeader_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIGetRepricerFeed_request_ItemFeedHeader : public OAIObject {
public:
    OAIGetRepricerFeed_request_ItemFeedHeader();
    OAIGetRepricerFeed_request_ItemFeedHeader(QString json);
    ~OAIGetRepricerFeed_request_ItemFeedHeader() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getLocale() const;
    void setLocale(const QString &locale);
    bool is_locale_Set() const;
    bool is_locale_Valid() const;

    QString getMart() const;
    void setMart(const QString &mart);
    bool is_mart_Set() const;
    bool is_mart_Valid() const;

    QString getProcessMode() const;
    void setProcessMode(const QString &process_mode);
    bool is_process_mode_Set() const;
    bool is_process_mode_Valid() const;

    QString getSellingChannel() const;
    void setSellingChannel(const QString &selling_channel);
    bool is_selling_channel_Set() const;
    bool is_selling_channel_Valid() const;

    QString getSubset() const;
    void setSubset(const QString &subset);
    bool is_subset_Set() const;
    bool is_subset_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_locale;
    bool m_locale_isSet;
    bool m_locale_isValid;

    QString m_mart;
    bool m_mart_isSet;
    bool m_mart_isValid;

    QString m_process_mode;
    bool m_process_mode_isSet;
    bool m_process_mode_isValid;

    QString m_selling_channel;
    bool m_selling_channel_isSet;
    bool m_selling_channel_isValid;

    QString m_subset;
    bool m_subset_isSet;
    bool m_subset_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIGetRepricerFeed_request_ItemFeedHeader)

#endif // OAIGetRepricerFeed_request_ItemFeedHeader_H
