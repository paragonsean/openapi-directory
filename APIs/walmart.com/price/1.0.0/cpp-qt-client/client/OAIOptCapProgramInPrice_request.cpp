/**
 * Price Management
 * The price is a fundamental building block for your listing on Walmart.com. You can use the price management APIs to set up and manage the price for a given item
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOptCapProgramInPrice_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOptCapProgramInPrice_request::OAIOptCapProgramInPrice_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOptCapProgramInPrice_request::OAIOptCapProgramInPrice_request() {
    this->initializeModel();
}

OAIOptCapProgramInPrice_request::~OAIOptCapProgramInPrice_request() {}

void OAIOptCapProgramInPrice_request::initializeModel() {

    m_subsidy_enrolled_isSet = false;
    m_subsidy_enrolled_isValid = false;

    m_subsidy_preference_isSet = false;
    m_subsidy_preference_isValid = false;
}

void OAIOptCapProgramInPrice_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOptCapProgramInPrice_request::fromJsonObject(QJsonObject json) {

    m_subsidy_enrolled_isValid = ::OpenAPI::fromJsonValue(m_subsidy_enrolled, json[QString("subsidyEnrolled")]);
    m_subsidy_enrolled_isSet = !json[QString("subsidyEnrolled")].isNull() && m_subsidy_enrolled_isValid;

    m_subsidy_preference_isValid = ::OpenAPI::fromJsonValue(m_subsidy_preference, json[QString("subsidyPreference")]);
    m_subsidy_preference_isSet = !json[QString("subsidyPreference")].isNull() && m_subsidy_preference_isValid;
}

QString OAIOptCapProgramInPrice_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOptCapProgramInPrice_request::asJsonObject() const {
    QJsonObject obj;
    if (m_subsidy_enrolled_isSet) {
        obj.insert(QString("subsidyEnrolled"), ::OpenAPI::toJsonValue(m_subsidy_enrolled));
    }
    if (m_subsidy_preference_isSet) {
        obj.insert(QString("subsidyPreference"), ::OpenAPI::toJsonValue(m_subsidy_preference));
    }
    return obj;
}

bool OAIOptCapProgramInPrice_request::isSubsidyEnrolled() const {
    return m_subsidy_enrolled;
}
void OAIOptCapProgramInPrice_request::setSubsidyEnrolled(const bool &subsidy_enrolled) {
    m_subsidy_enrolled = subsidy_enrolled;
    m_subsidy_enrolled_isSet = true;
}

bool OAIOptCapProgramInPrice_request::is_subsidy_enrolled_Set() const{
    return m_subsidy_enrolled_isSet;
}

bool OAIOptCapProgramInPrice_request::is_subsidy_enrolled_Valid() const{
    return m_subsidy_enrolled_isValid;
}

bool OAIOptCapProgramInPrice_request::isSubsidyPreference() const {
    return m_subsidy_preference;
}
void OAIOptCapProgramInPrice_request::setSubsidyPreference(const bool &subsidy_preference) {
    m_subsidy_preference = subsidy_preference;
    m_subsidy_preference_isSet = true;
}

bool OAIOptCapProgramInPrice_request::is_subsidy_preference_Set() const{
    return m_subsidy_preference_isSet;
}

bool OAIOptCapProgramInPrice_request::is_subsidy_preference_Valid() const{
    return m_subsidy_preference_isValid;
}

bool OAIOptCapProgramInPrice_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_subsidy_enrolled_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subsidy_preference_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOptCapProgramInPrice_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
