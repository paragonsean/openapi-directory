/**
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management described using OpenAPI.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: cti_support@etsi.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAppD.h
 *
 * 
 */

#ifndef OAIAppD_H
#define OAIAppD_H

#include <QJsonObject>

#include "OAIAppExternalCpd.h"
#include "OAIDNSRuleDescriptor.h"
#include "OAIFeatureDependency.h"
#include "OAILatencyDescriptor.h"
#include "OAIServiceDependency.h"
#include "OAIServiceDescriptor.h"
#include "OAITrafficRuleDescriptor.h"
#include "OAITransportDependency.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDNSRuleDescriptor;
class OAIAppExternalCpd;
class OAIFeatureDependency;
class OAILatencyDescriptor;
class OAIServiceDependency;
class OAIServiceDescriptor;
class OAITrafficRuleDescriptor;
class OAITransportDependency;

class OAIAppD : public OAIObject {
public:
    OAIAppD();
    OAIAppD(QString json);
    ~OAIAppD() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppDid() const;
    void setAppDid(const QString &app_did);
    bool is_app_did_Set() const;
    bool is_app_did_Valid() const;

    QList<OAIDNSRuleDescriptor> getAppDnsRule() const;
    void setAppDnsRule(const QList<OAIDNSRuleDescriptor> &app_dns_rule);
    bool is_app_dns_rule_Set() const;
    bool is_app_dns_rule_Valid() const;

    QString getAppDVersion() const;
    void setAppDVersion(const QString &app_d_version);
    bool is_app_d_version_Set() const;
    bool is_app_d_version_Valid() const;

    QString getAppDescription() const;
    void setAppDescription(const QString &app_description);
    bool is_app_description_Set() const;
    bool is_app_description_Valid() const;

    QList<OAIAppExternalCpd> getAppExtCpd() const;
    void setAppExtCpd(const QList<OAIAppExternalCpd> &app_ext_cpd);
    bool is_app_ext_cpd_Set() const;
    bool is_app_ext_cpd_Valid() const;

    QList<OAIFeatureDependency> getAppFeatureOptional() const;
    void setAppFeatureOptional(const QList<OAIFeatureDependency> &app_feature_optional);
    bool is_app_feature_optional_Set() const;
    bool is_app_feature_optional_Valid() const;

    QList<OAIFeatureDependency> getAppFeatureRequired() const;
    void setAppFeatureRequired(const QList<OAIFeatureDependency> &app_feature_required);
    bool is_app_feature_required_Set() const;
    bool is_app_feature_required_Valid() const;

    QString getAppInfoName() const;
    void setAppInfoName(const QString &app_info_name);
    bool is_app_info_name_Set() const;
    bool is_app_info_name_Valid() const;

    OAILatencyDescriptor getAppLatency() const;
    void setAppLatency(const OAILatencyDescriptor &app_latency);
    bool is_app_latency_Set() const;
    bool is_app_latency_Valid() const;

    QString getAppName() const;
    void setAppName(const QString &app_name);
    bool is_app_name_Set() const;
    bool is_app_name_Valid() const;

    QString getAppProvider() const;
    void setAppProvider(const QString &app_provider);
    bool is_app_provider_Set() const;
    bool is_app_provider_Valid() const;

    QList<OAIServiceDependency> getAppServiceOptional() const;
    void setAppServiceOptional(const QList<OAIServiceDependency> &app_service_optional);
    bool is_app_service_optional_Set() const;
    bool is_app_service_optional_Valid() const;

    QList<OAIServiceDescriptor> getAppServiceProduced() const;
    void setAppServiceProduced(const QList<OAIServiceDescriptor> &app_service_produced);
    bool is_app_service_produced_Set() const;
    bool is_app_service_produced_Valid() const;

    QList<OAIServiceDependency> getAppServiceRequired() const;
    void setAppServiceRequired(const QList<OAIServiceDependency> &app_service_required);
    bool is_app_service_required_Set() const;
    bool is_app_service_required_Valid() const;

    QString getAppSoftVersion() const;
    void setAppSoftVersion(const QString &app_soft_version);
    bool is_app_soft_version_Set() const;
    bool is_app_soft_version_Valid() const;

    QList<OAITrafficRuleDescriptor> getAppTrafficRule() const;
    void setAppTrafficRule(const QList<OAITrafficRuleDescriptor> &app_traffic_rule);
    bool is_app_traffic_rule_Set() const;
    bool is_app_traffic_rule_Valid() const;

    QString getChangeAppInstanceStateOpConfig() const;
    void setChangeAppInstanceStateOpConfig(const QString &change_app_instance_state_op_config);
    bool is_change_app_instance_state_op_config_Set() const;
    bool is_change_app_instance_state_op_config_Valid() const;

    QList<QString> getMecVersion() const;
    void setMecVersion(const QList<QString> &mec_version);
    bool is_mec_version_Set() const;
    bool is_mec_version_Valid() const;

    QString getSwImageDescriptor() const;
    void setSwImageDescriptor(const QString &sw_image_descriptor);
    bool is_sw_image_descriptor_Set() const;
    bool is_sw_image_descriptor_Valid() const;

    QString getTerminateAppInstanceOpConfig() const;
    void setTerminateAppInstanceOpConfig(const QString &terminate_app_instance_op_config);
    bool is_terminate_app_instance_op_config_Set() const;
    bool is_terminate_app_instance_op_config_Valid() const;

    QList<OAITransportDependency> getTransportDependencies() const;
    void setTransportDependencies(const QList<OAITransportDependency> &transport_dependencies);
    bool is_transport_dependencies_Set() const;
    bool is_transport_dependencies_Valid() const;

    QString getVirtualComputeDescriptor() const;
    void setVirtualComputeDescriptor(const QString &virtual_compute_descriptor);
    bool is_virtual_compute_descriptor_Set() const;
    bool is_virtual_compute_descriptor_Valid() const;

    QList<QString> getVirtualStorageDescriptor() const;
    void setVirtualStorageDescriptor(const QList<QString> &virtual_storage_descriptor);
    bool is_virtual_storage_descriptor_Set() const;
    bool is_virtual_storage_descriptor_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_app_did;
    bool m_app_did_isSet;
    bool m_app_did_isValid;

    QList<OAIDNSRuleDescriptor> m_app_dns_rule;
    bool m_app_dns_rule_isSet;
    bool m_app_dns_rule_isValid;

    QString m_app_d_version;
    bool m_app_d_version_isSet;
    bool m_app_d_version_isValid;

    QString m_app_description;
    bool m_app_description_isSet;
    bool m_app_description_isValid;

    QList<OAIAppExternalCpd> m_app_ext_cpd;
    bool m_app_ext_cpd_isSet;
    bool m_app_ext_cpd_isValid;

    QList<OAIFeatureDependency> m_app_feature_optional;
    bool m_app_feature_optional_isSet;
    bool m_app_feature_optional_isValid;

    QList<OAIFeatureDependency> m_app_feature_required;
    bool m_app_feature_required_isSet;
    bool m_app_feature_required_isValid;

    QString m_app_info_name;
    bool m_app_info_name_isSet;
    bool m_app_info_name_isValid;

    OAILatencyDescriptor m_app_latency;
    bool m_app_latency_isSet;
    bool m_app_latency_isValid;

    QString m_app_name;
    bool m_app_name_isSet;
    bool m_app_name_isValid;

    QString m_app_provider;
    bool m_app_provider_isSet;
    bool m_app_provider_isValid;

    QList<OAIServiceDependency> m_app_service_optional;
    bool m_app_service_optional_isSet;
    bool m_app_service_optional_isValid;

    QList<OAIServiceDescriptor> m_app_service_produced;
    bool m_app_service_produced_isSet;
    bool m_app_service_produced_isValid;

    QList<OAIServiceDependency> m_app_service_required;
    bool m_app_service_required_isSet;
    bool m_app_service_required_isValid;

    QString m_app_soft_version;
    bool m_app_soft_version_isSet;
    bool m_app_soft_version_isValid;

    QList<OAITrafficRuleDescriptor> m_app_traffic_rule;
    bool m_app_traffic_rule_isSet;
    bool m_app_traffic_rule_isValid;

    QString m_change_app_instance_state_op_config;
    bool m_change_app_instance_state_op_config_isSet;
    bool m_change_app_instance_state_op_config_isValid;

    QList<QString> m_mec_version;
    bool m_mec_version_isSet;
    bool m_mec_version_isValid;

    QString m_sw_image_descriptor;
    bool m_sw_image_descriptor_isSet;
    bool m_sw_image_descriptor_isValid;

    QString m_terminate_app_instance_op_config;
    bool m_terminate_app_instance_op_config_isSet;
    bool m_terminate_app_instance_op_config_isValid;

    QList<OAITransportDependency> m_transport_dependencies;
    bool m_transport_dependencies_isSet;
    bool m_transport_dependencies_isValid;

    QString m_virtual_compute_descriptor;
    bool m_virtual_compute_descriptor_isSet;
    bool m_virtual_compute_descriptor_isValid;

    QList<QString> m_virtual_storage_descriptor;
    bool m_virtual_storage_descriptor_isSet;
    bool m_virtual_storage_descriptor_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAppD)

#endif // OAIAppD_H
