/**
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management described using OpenAPI.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: cti_support@etsi.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIServiceDescriptor.h
 *
 * &#39;The ServiceDescriptor data type describes a MEC service produced by a service-providing MEC application.&#39;
 */

#ifndef OAIServiceDescriptor_H
#define OAIServiceDescriptor_H

#include <QJsonObject>

#include "OAITransportsSupported.h"
#include <QJsonValue>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITransportsSupported;

class OAIServiceDescriptor : public OAIObject {
public:
    OAIServiceDescriptor();
    OAIServiceDescriptor(QString json);
    ~OAIServiceDescriptor() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QJsonValue getSerCategory() const;
    void setSerCategory(const QJsonValue &ser_category);
    bool is_ser_category_Set() const;
    bool is_ser_category_Valid() const;

    QString getSerName() const;
    void setSerName(const QString &ser_name);
    bool is_ser_name_Set() const;
    bool is_ser_name_Valid() const;

    OAITransportsSupported getTransportsSupported() const;
    void setTransportsSupported(const OAITransportsSupported &transports_supported);
    bool is_transports_supported_Set() const;
    bool is_transports_supported_Valid() const;

    QString getVersion() const;
    void setVersion(const QString &version);
    bool is_version_Set() const;
    bool is_version_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QJsonValue m_ser_category;
    bool m_ser_category_isSet;
    bool m_ser_category_isValid;

    QString m_ser_name;
    bool m_ser_name_isSet;
    bool m_ser_name_isValid;

    OAITransportsSupported m_transports_supported;
    bool m_transports_supported_isSet;
    bool m_transports_supported_isValid;

    QString m_version;
    bool m_version_isSet;
    bool m_version_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIServiceDescriptor)

#endif // OAIServiceDescriptor_H
