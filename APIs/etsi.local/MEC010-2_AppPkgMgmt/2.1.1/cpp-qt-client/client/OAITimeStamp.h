/**
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management described using OpenAPI.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: cti_support@etsi.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITimeStamp.h
 *
 * 
 */

#ifndef OAITimeStamp_H
#define OAITimeStamp_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAITimeStamp : public OAIObject {
public:
    OAITimeStamp();
    OAITimeStamp(QString json);
    ~OAITimeStamp() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getNanoSeconds() const;
    void setNanoSeconds(const qint32 &nano_seconds);
    bool is_nano_seconds_Set() const;
    bool is_nano_seconds_Valid() const;

    qint32 getSeconds() const;
    void setSeconds(const qint32 &seconds);
    bool is_seconds_Set() const;
    bool is_seconds_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_nano_seconds;
    bool m_nano_seconds_isSet;
    bool m_nano_seconds_isValid;

    qint32 m_seconds;
    bool m_seconds_isSet;
    bool m_seconds_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITimeStamp)

#endif // OAITimeStamp_H
