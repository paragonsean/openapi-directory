/**
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management described using OpenAPI.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: cti_support@etsi.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAppPkgNotification.h
 *
 * &#39;This data type represents an application package management notification for informing the subscribers about onboarding application package resources. The notification is triggered when a new application package is onboarded&#39;
 */

#ifndef OAIAppPkgNotification_H
#define OAIAppPkgNotification_H

#include <QJsonObject>

#include "OAIAppPkgNotification_links.h"
#include "OAIAppPkg_NotificationType.h"
#include "OAITimeStamp.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAppPkgNotification_links;
class OAITimeStamp;

class OAIAppPkgNotification : public OAIObject {
public:
    OAIAppPkgNotification();
    OAIAppPkgNotification(QString json);
    ~OAIAppPkgNotification() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAppPkgNotification_links getLinks() const;
    void setLinks(const OAIAppPkgNotification_links &_links);
    bool is__links_Set() const;
    bool is__links_Valid() const;

    QString getAppDid() const;
    void setAppDid(const QString &app_did);
    bool is_app_did_Set() const;
    bool is_app_did_Valid() const;

    QString getAppPkgId() const;
    void setAppPkgId(const QString &app_pkg_id);
    bool is_app_pkg_id_Set() const;
    bool is_app_pkg_id_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIAppPkg_NotificationType getNotificationType() const;
    void setNotificationType(const OAIAppPkg_NotificationType &notification_type);
    bool is_notification_type_Set() const;
    bool is_notification_type_Valid() const;

    QString getOperationalState() const;
    void setOperationalState(const QString &operational_state);
    bool is_operational_state_Set() const;
    bool is_operational_state_Valid() const;

    QString getSubscriptionId() const;
    void setSubscriptionId(const QString &subscription_id);
    bool is_subscription_id_Set() const;
    bool is_subscription_id_Valid() const;

    OAITimeStamp getTimeStamp() const;
    void setTimeStamp(const OAITimeStamp &time_stamp);
    bool is_time_stamp_Set() const;
    bool is_time_stamp_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAppPkgNotification_links m__links;
    bool m__links_isSet;
    bool m__links_isValid;

    QString m_app_did;
    bool m_app_did_isSet;
    bool m_app_did_isValid;

    QString m_app_pkg_id;
    bool m_app_pkg_id_isSet;
    bool m_app_pkg_id_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIAppPkg_NotificationType m_notification_type;
    bool m_notification_type_isSet;
    bool m_notification_type_isValid;

    QString m_operational_state;
    bool m_operational_state_isSet;
    bool m_operational_state_isValid;

    QString m_subscription_id;
    bool m_subscription_id_isSet;
    bool m_subscription_id_isValid;

    OAITimeStamp m_time_stamp;
    bool m_time_stamp_isSet;
    bool m_time_stamp_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAppPkgNotification)

#endif // OAIAppPkgNotification_H
