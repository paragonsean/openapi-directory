/**
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management described using OpenAPI.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: cti_support@etsi.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIAppPkgInfo.h
 *
 * &#39;The data type AppPkgInfo represents the parameters for an application package resource&#39;
 */

#ifndef OAIAppPkgInfo_H
#define OAIAppPkgInfo_H

#include <QJsonObject>

#include "OAIAppPkgInfo_links.h"
#include "OAIAppPkg_OperationalState.h"
#include "OAIChecksum.h"
#include "OAIOnboardingState.h"
#include "OAIUsageState.h"
#include <QJsonValue>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAppPkgInfo_links;
class OAIChecksum;

class OAIAppPkgInfo : public OAIObject {
public:
    OAIAppPkgInfo();
    OAIAppPkgInfo(QString json);
    ~OAIAppPkgInfo() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAppPkgInfo_links getLinks() const;
    void setLinks(const OAIAppPkgInfo_links &_links);
    bool is__links_Set() const;
    bool is__links_Valid() const;

    QJsonValue getAdditionalArtifacts() const;
    void setAdditionalArtifacts(const QJsonValue &additional_artifacts);
    bool is_additional_artifacts_Set() const;
    bool is_additional_artifacts_Valid() const;

    QString getAppDid() const;
    void setAppDid(const QString &app_did);
    bool is_app_did_Set() const;
    bool is_app_did_Valid() const;

    QString getAppDVersion() const;
    void setAppDVersion(const QString &app_d_version);
    bool is_app_d_version_Set() const;
    bool is_app_d_version_Valid() const;

    QString getAppName() const;
    void setAppName(const QString &app_name);
    bool is_app_name_Set() const;
    bool is_app_name_Valid() const;

    QString getAppProvider() const;
    void setAppProvider(const QString &app_provider);
    bool is_app_provider_Set() const;
    bool is_app_provider_Valid() const;

    QString getAppSoftwareVersion() const;
    void setAppSoftwareVersion(const QString &app_software_version);
    bool is_app_software_version_Set() const;
    bool is_app_software_version_Valid() const;

    OAIChecksum getChecksum() const;
    void setChecksum(const OAIChecksum &checksum);
    bool is_checksum_Set() const;
    bool is_checksum_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    OAIOnboardingState getOnboardingState() const;
    void setOnboardingState(const OAIOnboardingState &onboarding_state);
    bool is_onboarding_state_Set() const;
    bool is_onboarding_state_Valid() const;

    OAIAppPkg_OperationalState getOperationalState() const;
    void setOperationalState(const OAIAppPkg_OperationalState &operational_state);
    bool is_operational_state_Set() const;
    bool is_operational_state_Valid() const;

    QJsonValue getSoftwareImages() const;
    void setSoftwareImages(const QJsonValue &software_images);
    bool is_software_images_Set() const;
    bool is_software_images_Valid() const;

    OAIUsageState getUsageState() const;
    void setUsageState(const OAIUsageState &usage_state);
    bool is_usage_state_Set() const;
    bool is_usage_state_Valid() const;

    QMap<QString, QJsonValue> getUserDefinedData() const;
    void setUserDefinedData(const QMap<QString, QJsonValue> &user_defined_data);
    bool is_user_defined_data_Set() const;
    bool is_user_defined_data_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAppPkgInfo_links m__links;
    bool m__links_isSet;
    bool m__links_isValid;

    QJsonValue m_additional_artifacts;
    bool m_additional_artifacts_isSet;
    bool m_additional_artifacts_isValid;

    QString m_app_did;
    bool m_app_did_isSet;
    bool m_app_did_isValid;

    QString m_app_d_version;
    bool m_app_d_version_isSet;
    bool m_app_d_version_isValid;

    QString m_app_name;
    bool m_app_name_isSet;
    bool m_app_name_isValid;

    QString m_app_provider;
    bool m_app_provider_isSet;
    bool m_app_provider_isValid;

    QString m_app_software_version;
    bool m_app_software_version_isSet;
    bool m_app_software_version_isValid;

    OAIChecksum m_checksum;
    bool m_checksum_isSet;
    bool m_checksum_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    OAIOnboardingState m_onboarding_state;
    bool m_onboarding_state_isSet;
    bool m_onboarding_state_isValid;

    OAIAppPkg_OperationalState m_operational_state;
    bool m_operational_state_isSet;
    bool m_operational_state_isValid;

    QJsonValue m_software_images;
    bool m_software_images_isSet;
    bool m_software_images_isValid;

    OAIUsageState m_usage_state;
    bool m_usage_state_isSet;
    bool m_usage_state_isValid;

    QMap<QString, QJsonValue> m_user_defined_data;
    bool m_user_defined_data_isSet;
    bool m_user_defined_data_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIAppPkgInfo)

#endif // OAIAppPkgInfo_H
