/**
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management described using OpenAPI.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: cti_support@etsi.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement);
  }
}(this, function(expect, EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('AppD', function() {
    it('should create an instance of AppD', function() {
      // uncomment below and update the code to test AppD
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be.a(EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD);
    });

    it('should have the property appDId (base name: "appDId")', function() {
      // uncomment below and update the code to test the property appDId
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property appDNSRule (base name: "appDNSRule")', function() {
      // uncomment below and update the code to test the property appDNSRule
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property appDVersion (base name: "appDVersion")', function() {
      // uncomment below and update the code to test the property appDVersion
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property appDescription (base name: "appDescription")', function() {
      // uncomment below and update the code to test the property appDescription
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property appExtCpd (base name: "appExtCpd")', function() {
      // uncomment below and update the code to test the property appExtCpd
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property appFeatureOptional (base name: "appFeatureOptional")', function() {
      // uncomment below and update the code to test the property appFeatureOptional
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property appFeatureRequired (base name: "appFeatureRequired")', function() {
      // uncomment below and update the code to test the property appFeatureRequired
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property appInfoName (base name: "appInfoName")', function() {
      // uncomment below and update the code to test the property appInfoName
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property appLatency (base name: "appLatency")', function() {
      // uncomment below and update the code to test the property appLatency
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property appName (base name: "appName")', function() {
      // uncomment below and update the code to test the property appName
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property appProvider (base name: "appProvider")', function() {
      // uncomment below and update the code to test the property appProvider
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property appServiceOptional (base name: "appServiceOptional")', function() {
      // uncomment below and update the code to test the property appServiceOptional
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property appServiceProduced (base name: "appServiceProduced")', function() {
      // uncomment below and update the code to test the property appServiceProduced
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property appServiceRequired (base name: "appServiceRequired")', function() {
      // uncomment below and update the code to test the property appServiceRequired
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property appSoftVersion (base name: "appSoftVersion")', function() {
      // uncomment below and update the code to test the property appSoftVersion
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property appTrafficRule (base name: "appTrafficRule")', function() {
      // uncomment below and update the code to test the property appTrafficRule
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property changeAppInstanceStateOpConfig (base name: "changeAppInstanceStateOpConfig")', function() {
      // uncomment below and update the code to test the property changeAppInstanceStateOpConfig
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property mecVersion (base name: "mecVersion")', function() {
      // uncomment below and update the code to test the property mecVersion
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property swImageDescriptor (base name: "swImageDescriptor")', function() {
      // uncomment below and update the code to test the property swImageDescriptor
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property terminateAppInstanceOpConfig (base name: "terminateAppInstanceOpConfig")', function() {
      // uncomment below and update the code to test the property terminateAppInstanceOpConfig
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property transportDependencies (base name: "transportDependencies")', function() {
      // uncomment below and update the code to test the property transportDependencies
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property virtualComputeDescriptor (base name: "virtualComputeDescriptor")', function() {
      // uncomment below and update the code to test the property virtualComputeDescriptor
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

    it('should have the property virtualStorageDescriptor (base name: "virtualStorageDescriptor")', function() {
      // uncomment below and update the code to test the property virtualStorageDescriptor
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.AppD();
      //expect(instance).to.be();
    });

  });

}));
