/**
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management described using OpenAPI.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: cti_support@etsi.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement);
  }
}(this, function(expect, EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficRuleDescriptor();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TrafficRuleDescriptor', function() {
    it('should create an instance of TrafficRuleDescriptor', function() {
      // uncomment below and update the code to test TrafficRuleDescriptor
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficRuleDescriptor();
      //expect(instance).to.be.a(EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficRuleDescriptor);
    });

    it('should have the property action (base name: "action")', function() {
      // uncomment below and update the code to test the property action
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficRuleDescriptor();
      //expect(instance).to.be();
    });

    it('should have the property dstInterface (base name: "dstInterface")', function() {
      // uncomment below and update the code to test the property dstInterface
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficRuleDescriptor();
      //expect(instance).to.be();
    });

    it('should have the property filterType (base name: "filterType")', function() {
      // uncomment below and update the code to test the property filterType
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficRuleDescriptor();
      //expect(instance).to.be();
    });

    it('should have the property priority (base name: "priority")', function() {
      // uncomment below and update the code to test the property priority
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficRuleDescriptor();
      //expect(instance).to.be();
    });

    it('should have the property trafficFilter (base name: "trafficFilter")', function() {
      // uncomment below and update the code to test the property trafficFilter
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficRuleDescriptor();
      //expect(instance).to.be();
    });

    it('should have the property trafficRuleId (base name: "trafficRuleId")', function() {
      // uncomment below and update the code to test the property trafficRuleId
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficRuleDescriptor();
      //expect(instance).to.be();
    });

  });

}));
