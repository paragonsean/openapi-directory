/**
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management described using OpenAPI.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: cti_support@etsi.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement);
  }
}(this, function(expect, EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficFilter();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TrafficFilter', function() {
    it('should create an instance of TrafficFilter', function() {
      // uncomment below and update the code to test TrafficFilter
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficFilter();
      //expect(instance).to.be.a(EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficFilter);
    });

    it('should have the property dSCP (base name: "dSCP")', function() {
      // uncomment below and update the code to test the property dSCP
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficFilter();
      //expect(instance).to.be();
    });

    it('should have the property dstAddress (base name: "dstAddress")', function() {
      // uncomment below and update the code to test the property dstAddress
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficFilter();
      //expect(instance).to.be();
    });

    it('should have the property dstPort (base name: "dstPort")', function() {
      // uncomment below and update the code to test the property dstPort
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficFilter();
      //expect(instance).to.be();
    });

    it('should have the property dstTunnelPort (base name: "dstTunnelPort")', function() {
      // uncomment below and update the code to test the property dstTunnelPort
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficFilter();
      //expect(instance).to.be();
    });

    it('should have the property protocol (base name: "protocol")', function() {
      // uncomment below and update the code to test the property protocol
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficFilter();
      //expect(instance).to.be();
    });

    it('should have the property qCI (base name: "qCI")', function() {
      // uncomment below and update the code to test the property qCI
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficFilter();
      //expect(instance).to.be();
    });

    it('should have the property srcAddress (base name: "srcAddress")', function() {
      // uncomment below and update the code to test the property srcAddress
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficFilter();
      //expect(instance).to.be();
    });

    it('should have the property srcPort (base name: "srcPort")', function() {
      // uncomment below and update the code to test the property srcPort
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficFilter();
      //expect(instance).to.be();
    });

    it('should have the property srcTunnelAddress (base name: "srcTunnelAddress")', function() {
      // uncomment below and update the code to test the property srcTunnelAddress
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficFilter();
      //expect(instance).to.be();
    });

    it('should have the property srcTunnelPort (base name: "srcTunnelPort")', function() {
      // uncomment below and update the code to test the property srcTunnelPort
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficFilter();
      //expect(instance).to.be();
    });

    it('should have the property tC (base name: "tC")', function() {
      // uncomment below and update the code to test the property tC
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficFilter();
      //expect(instance).to.be();
    });

    it('should have the property tag (base name: "tag")', function() {
      // uncomment below and update the code to test the property tag
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficFilter();
      //expect(instance).to.be();
    });

    it('should have the property tgtTunnelAddress (base name: "tgtTunnelAddress")', function() {
      // uncomment below and update the code to test the property tgtTunnelAddress
      //var instance = new EtsiGsMec0102Part2ApplicationLifecycleRulesAndRequirementsManagement.TrafficFilter();
      //expect(instance).to.be();
    });

  });

}));
