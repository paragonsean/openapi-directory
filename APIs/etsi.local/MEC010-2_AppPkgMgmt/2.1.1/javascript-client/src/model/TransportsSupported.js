/**
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management described using OpenAPI.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: cti_support@etsi.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TransportDescriptor from './TransportDescriptor';

/**
 * The TransportsSupported model module.
 * @module model/TransportsSupported
 * @version 2.1.1
 */
class TransportsSupported {
    /**
     * Constructs a new <code>TransportsSupported</code>.
     * &#39;Indicates transports and serialization formats supported made available to the service-consuming application. Defaults to REST + JSON if absent.&#39;
     * @alias module:model/TransportsSupported
     */
    constructor() { 
        
        TransportsSupported.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TransportsSupported</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransportsSupported} obj Optional instance to populate.
     * @return {module:model/TransportsSupported} The populated <code>TransportsSupported</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransportsSupported();

            if (data.hasOwnProperty('serializers')) {
                obj['serializers'] = ApiClient.convertToType(data['serializers'], ['String']);
            }
            if (data.hasOwnProperty('transport')) {
                obj['transport'] = TransportDescriptor.constructFromObject(data['transport']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransportsSupported</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransportsSupported</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['serializers'])) {
            throw new Error("Expected the field `serializers` to be an array in the JSON data but got " + data['serializers']);
        }
        // validate the optional field `transport`
        if (data['transport']) { // data not null
          TransportDescriptor.validateJSON(data['transport']);
        }

        return true;
    }


}



/**
 * 'Information about the serializers in this binding, as defined in the SerializerTypes type in ETSI GS MEC 011 '
 * @member {Array.<String>} serializers
 */
TransportsSupported.prototype['serializers'] = undefined;

/**
 * @member {module:model/TransportDescriptor} transport
 */
TransportsSupported.prototype['transport'] = undefined;






export default TransportsSupported;

