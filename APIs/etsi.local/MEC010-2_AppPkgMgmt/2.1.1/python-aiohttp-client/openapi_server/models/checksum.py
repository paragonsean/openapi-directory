# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Checksum(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, algorithm: str=None, hash: str=None):
        """Checksum - a model defined in OpenAPI

        :param algorithm: The algorithm of this Checksum.
        :param hash: The hash of this Checksum.
        """
        self.openapi_types = {
            'algorithm': str,
            'hash': str
        }

        self.attribute_map = {
            'algorithm': 'algorithm',
            'hash': 'hash'
        }

        self._algorithm = algorithm
        self._hash = hash

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Checksum':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Checksum of this Checksum.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def algorithm(self):
        """Gets the algorithm of this Checksum.

         Name of the algorithm used to generate the checksum,  as defined in ETSI GS NFV-SOL 004. For example, SHA-256, SHA-512.

        :return: The algorithm of this Checksum.
        :rtype: str
        """
        return self._algorithm

    @algorithm.setter
    def algorithm(self, algorithm):
        """Sets the algorithm of this Checksum.

         Name of the algorithm used to generate the checksum,  as defined in ETSI GS NFV-SOL 004. For example, SHA-256, SHA-512.

        :param algorithm: The algorithm of this Checksum.
        :type algorithm: str
        """
        if algorithm is None:
            raise ValueError("Invalid value for `algorithm`, must not be `None`")

        self._algorithm = algorithm

    @property
    def hash(self):
        """Gets the hash of this Checksum.

        'String 1 The hexadecimal value of the checksum'

        :return: The hash of this Checksum.
        :rtype: str
        """
        return self._hash

    @hash.setter
    def hash(self, hash):
        """Sets the hash of this Checksum.

        'String 1 The hexadecimal value of the checksum'

        :param hash: The hash of this Checksum.
        :type hash: str
        """
        if hash is None:
            raise ValueError("Invalid value for `hash`, must not be `None`")

        self._hash = hash
