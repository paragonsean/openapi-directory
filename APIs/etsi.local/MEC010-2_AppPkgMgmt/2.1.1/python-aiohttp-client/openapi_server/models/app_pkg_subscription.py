# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.subsctiption_type_app_pkg import SubsctiptionTypeAppPkg
from openapi_server import util


class AppPkgSubscription(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, app_pkg_filter: List[str]=None, callback_uri: str=None, subsctiption_type: SubsctiptionTypeAppPkg=None):
        """AppPkgSubscription - a model defined in OpenAPI

        :param app_pkg_filter: The app_pkg_filter of this AppPkgSubscription.
        :param callback_uri: The callback_uri of this AppPkgSubscription.
        :param subsctiption_type: The subsctiption_type of this AppPkgSubscription.
        """
        self.openapi_types = {
            'app_pkg_filter': List[str],
            'callback_uri': str,
            'subsctiption_type': SubsctiptionTypeAppPkg
        }

        self.attribute_map = {
            'app_pkg_filter': 'appPkgFilter',
            'callback_uri': 'callbackUri',
            'subsctiption_type': 'subsctiptionType'
        }

        self._app_pkg_filter = app_pkg_filter
        self._callback_uri = callback_uri
        self._subsctiption_type = subsctiption_type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppPkgSubscription':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppPkgSubscription of this AppPkgSubscription.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def app_pkg_filter(self):
        """Gets the app_pkg_filter of this AppPkgSubscription.


        :return: The app_pkg_filter of this AppPkgSubscription.
        :rtype: List[str]
        """
        return self._app_pkg_filter

    @app_pkg_filter.setter
    def app_pkg_filter(self, app_pkg_filter):
        """Sets the app_pkg_filter of this AppPkgSubscription.


        :param app_pkg_filter: The app_pkg_filter of this AppPkgSubscription.
        :type app_pkg_filter: List[str]
        """

        self._app_pkg_filter = app_pkg_filter

    @property
    def callback_uri(self):
        """Gets the callback_uri of this AppPkgSubscription.

        The URI of the endpoint for the notification to be sent to.

        :return: The callback_uri of this AppPkgSubscription.
        :rtype: str
        """
        return self._callback_uri

    @callback_uri.setter
    def callback_uri(self, callback_uri):
        """Sets the callback_uri of this AppPkgSubscription.

        The URI of the endpoint for the notification to be sent to.

        :param callback_uri: The callback_uri of this AppPkgSubscription.
        :type callback_uri: str
        """
        if callback_uri is None:
            raise ValueError("Invalid value for `callback_uri`, must not be `None`")

        self._callback_uri = callback_uri

    @property
    def subsctiption_type(self):
        """Gets the subsctiption_type of this AppPkgSubscription.


        :return: The subsctiption_type of this AppPkgSubscription.
        :rtype: SubsctiptionTypeAppPkg
        """
        return self._subsctiption_type

    @subsctiption_type.setter
    def subsctiption_type(self, subsctiption_type):
        """Sets the subsctiption_type of this AppPkgSubscription.


        :param subsctiption_type: The subsctiption_type of this AppPkgSubscription.
        :type subsctiption_type: SubsctiptionTypeAppPkg
        """
        if subsctiption_type is None:
            raise ValueError("Invalid value for `subsctiption_type`, must not be `None`")

        self._subsctiption_type = subsctiption_type
