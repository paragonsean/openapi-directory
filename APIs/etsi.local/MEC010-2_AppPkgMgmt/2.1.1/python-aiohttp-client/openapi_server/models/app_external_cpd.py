# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppExternalCpd(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inherited_attributes: object=None, virtual_network_interface_requirements: List[str]=None):
        """AppExternalCpd - a model defined in OpenAPI

        :param inherited_attributes: The inherited_attributes of this AppExternalCpd.
        :param virtual_network_interface_requirements: The virtual_network_interface_requirements of this AppExternalCpd.
        """
        self.openapi_types = {
            'inherited_attributes': object,
            'virtual_network_interface_requirements': List[str]
        }

        self.attribute_map = {
            'inherited_attributes': 'inherited_attributes',
            'virtual_network_interface_requirements': 'virtualNetworkInterfaceRequirements'
        }

        self._inherited_attributes = inherited_attributes
        self._virtual_network_interface_requirements = virtual_network_interface_requirements

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppExternalCpd':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppExternalCpd of this AppExternalCpd.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inherited_attributes(self):
        """Gets the inherited_attributes of this AppExternalCpd.

        All attributes inherited from Cpd.

        :return: The inherited_attributes of this AppExternalCpd.
        :rtype: object
        """
        return self._inherited_attributes

    @inherited_attributes.setter
    def inherited_attributes(self, inherited_attributes):
        """Sets the inherited_attributes of this AppExternalCpd.

        All attributes inherited from Cpd.

        :param inherited_attributes: The inherited_attributes of this AppExternalCpd.
        :type inherited_attributes: object
        """
        if inherited_attributes is None:
            raise ValueError("Invalid value for `inherited_attributes`, must not be `None`")

        self._inherited_attributes = inherited_attributes

    @property
    def virtual_network_interface_requirements(self):
        """Gets the virtual_network_interface_requirements of this AppExternalCpd.

        Specifies requirements on a virtual network interface realizing the CPs instantiated from this CPD.

        :return: The virtual_network_interface_requirements of this AppExternalCpd.
        :rtype: List[str]
        """
        return self._virtual_network_interface_requirements

    @virtual_network_interface_requirements.setter
    def virtual_network_interface_requirements(self, virtual_network_interface_requirements):
        """Sets the virtual_network_interface_requirements of this AppExternalCpd.

        Specifies requirements on a virtual network interface realizing the CPs instantiated from this CPD.

        :param virtual_network_interface_requirements: The virtual_network_interface_requirements of this AppExternalCpd.
        :type virtual_network_interface_requirements: List[str]
        """
        if virtual_network_interface_requirements is not None and len(virtual_network_interface_requirements) < 0:
            raise ValueError("Invalid value for `virtual_network_interface_requirements`, number of items must be greater than or equal to `0`")

        self._virtual_network_interface_requirements = virtual_network_interface_requirements
