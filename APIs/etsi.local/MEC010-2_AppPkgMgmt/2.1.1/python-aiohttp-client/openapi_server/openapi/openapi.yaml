openapi: 3.0.0
info:
  contact:
    email: cti_support@etsi.org
    name: ETSI Forge
    url: https://forge.etsi.org/rep/mec/gs010-2-app-pkg-lcm-api
  description: "ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements\
    \ management described using OpenAPI."
  license:
    name: BSD-3-Clause
    url: https://forge.etsi.org/legal-matters
  title: "ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements\
    \ management"
  version: 2.1.1
  x-apisguru-categories:
  - telecom
  x-origin:
  - format: openapi
    url: https://forge.etsi.org/rep/mec/gs010-2-app-pkg-lcm-api/raw/v2.1.1/MEC010-2_AppPkgMgmt.yaml
    version: "3.0"
  x-providerName: etsi.local
  x-serviceName: MEC010-2_AppPkgMgmt
externalDocs:
  description: "ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements\
    \ management, v2.1.1"
  url: https://www.etsi.org/deliver/etsi_gs/MEC/001_099/01002/02.01.01_60/gs_MEC01002v020101p.pdf
servers:
- url: http://etsi.local
- url: https://localhost/app_pkgm/v1
tags:
- description: App Package management
  name: app-pkgm
- description: App Package management notifications
  name: app-pkgm-notifications
paths:
  /app_packages:
    get:
      description: queries information relating to on-boarded application packages
        in the MEO
      operationId: app_packages_get
      parameters:
      - description: Attribute-based filtering parameters according to ETSI GS MEC
          009
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Include all complex attributes in the response.
        explode: true
        in: query
        name: all_fields
        required: false
        schema:
          type: string
        style: form
      - description: Complex attributes of AppPkgInfo to be included into the response
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: Complex attributes of AppPkgInfo to be excluded from the response.
        explode: true
        in: query
        name: exclude_fields
        required: false
        schema:
          type: string
        style: form
      - description: Indicates to exclude the following complex attributes of AppPkgInfo
          from the response.
        explode: true
        in: query
        name: exclude_default
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppPkgInfo'
                type: array
          description: Contains a representation of the application package resource
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Queries information relating to on-boarded application packages in
        the MEO
      tags:
      - app-pkgm
      x-openapi-router-controller: openapi_server.controllers.app_pkgm_controller
    post:
      description: Create a resource for on-boarding an application package to a MEO
      operationId: app_packages_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAppPkg'
        description: Resource to be created
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/AppPkgInfo'
                type: array
          description: Successful response for resource creation
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Create a resource for on-boarding an application package to a MEO
      tags:
      - app-pkgm
      x-openapi-router-controller: openapi_server.controllers.app_pkgm_controller
      x-codegen-request-body-name: body
  /app_packages/{appPkgId}:
    delete:
      description: Deletes an individual application package resources
      operationId: app_package_delete
      parameters:
      - description: Identifier of an individual application package resource
        explode: false
        in: path
        name: appPkgId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Deletes an individual application package resources
      tags:
      - app-pkgm
      x-openapi-router-controller: openapi_server.controllers.app_pkgm_controller
    get:
      description: Queries the information related to individual application package
        resources
      operationId: app_package_get
      parameters:
      - description: Identifier of an individual application package resource
        explode: false
        in: path
        name: appPkgId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppPkgInfo'
          description: Contains a representation of the application package resource
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Queries the information related to individual application package resources
      tags:
      - app-pkgm
      x-openapi-router-controller: openapi_server.controllers.app_pkgm_controller
    patch:
      description: Updates the operational state of an individual application package
        resources
      operationId: app_package_patch
      parameters:
      - description: Identifier of an individual application package resource
        explode: false
        in: path
        name: appPkgId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppPkgInfoModifications'
        description: Operational state to be set
        required: true
        x-body-name: body
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppPkgInfoModifications'
          description: Shows that the operation has been completed successfully
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Conflict : The operation cannot be executed currently, due\
            \ to a conflict with the state of the resource"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Updates the operational state of an individual application package
        resource
      tags:
      - app-pkgm
      x-openapi-router-controller: openapi_server.controllers.app_pkgm_controller
      x-codegen-request-body-name: body
  /app_packages/{appPkgId}/appd:
    get:
      description: Reads the content of the AppD of on-boarded individual application
        package resources.
      operationId: app_pkg_id_get
      parameters:
      - description: Identifier of an on-boarded individual application package
        explode: false
        in: path
        name: appPkgId
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute-based filtering parameters according to ETSI GS MEC
          009
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Include all complex attributes in the response.
        explode: true
        in: query
        name: all_fields
        required: false
        schema:
          type: string
        style: form
      - description: Complex attributes of AppPkgInfo to be included into the response
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: Complex attributes of AppPkgInfo to be excluded from the response.
        explode: true
        in: query
        name: exclude_fields
        required: false
        schema:
          type: string
        style: form
      - description: Indicates to exclude the following complex attributes of AppPkgInfo
          from the response.
        explode: true
        in: query
        name: exclude_default
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/zip:
              schema:
                $ref: '#/components/schemas/AppD'
            text/plain:
              schema:
                $ref: '#/components/schemas/AppD'
          description: Content of the AppD is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Reads the content of the AppD of on-boarded individual application
        package resources.
      tags:
      - app-pkgm
      x-openapi-router-controller: openapi_server.controllers.app_pkgm_controller
  /app_packages/{appPkgId}/package_content:
    get:
      description: Fetch the onboarded application package content identified by appPkgId
        or appDId.
      operationId: app_pkg_get
      parameters:
      - description: Identifier of an on-boarded individual application package
        explode: false
        in: path
        name: appPkgId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payload body shall contain a copy of the file representing
            the AppD or a ZIP file that contains the file or multiple files representing
            the AppD.
        "206":
          description: Partial content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "416":
          description: Range Not Satisfiable .
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Fetch the onboarded application package content identified by appPkgId
        or appDId.
      tags:
      - app-pkgm
      x-openapi-router-controller: openapi_server.controllers.app_pkgm_controller
    put:
      description: Uploads the content of application package.
      operationId: app_pkg_put
      parameters:
      - description: Identifier of an on-boarded individual application package
        explode: false
        in: path
        name: appPkgId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/zip:
            schema:
              format: binary
              type: string
        x-body-name: body
      responses:
        "202":
          description: "The application package has been accepted for uploading, but\
            \ the processing has not been completed."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Conflict : The operation cannot be executed currently, due\
            \ to a conflict with the state of the resource"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Uploads the content of application package.
      tags:
      - app-pkgm
      x-openapi-router-controller: openapi_server.controllers.app_pkgm_controller
      x-codegen-request-body-name: body
  /onboarded_app_packages/{appDId}/appd:
    get:
      description: Reads the content of the AppD of on-boarded individual application
        package resources.
      operationId: app_dget
      parameters:
      - description: Identifier of an application descriptor
        explode: false
        in: path
        name: appDId
        required: true
        schema:
          type: string
        style: simple
      - description: Attribute-based filtering parameters according to ETSI GS MEC
          009
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: Include all complex attributes in the response.
        explode: true
        in: query
        name: all_fields
        required: false
        schema:
          type: string
        style: form
      - description: Complex attributes of AppPkgInfo to be included into the response
        explode: true
        in: query
        name: fields
        required: false
        schema:
          type: string
        style: form
      - description: Complex attributes of AppPkgInfo to be excluded from the response.
        explode: true
        in: query
        name: exclude_fields
        required: false
        schema:
          type: string
        style: form
      - description: Indicates to exclude the following complex attributes of AppPkgInfo
          from the response.
        explode: true
        in: query
        name: exclude_default
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            application/zip:
              schema:
                $ref: '#/components/schemas/AppD'
            text/plain:
              schema:
                $ref: '#/components/schemas/AppD'
          description: Content of the AppD is returned.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Reads the content of the AppD of on-boarded individual application
        package resources.
      tags:
      - app-pkgm
      x-openapi-router-controller: openapi_server.controllers.app_pkgm_controller
  /onboarded_app_packages/{appDId}/package_content:
    get:
      description: Fetch the onboarded application package content identified by appPkgId
        or appDId.
      operationId: app_did_get
      parameters:
      - description: Identifier of an application descriptor
        explode: false
        in: path
        name: appDId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: The payload body shall contain a copy of the file representing
            the AppD or a ZIP file that contains the file or multiple files representing
            the AppD.
        "206":
          description: Partial content
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "416":
          description: Range Not Satisfiable .
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Fetch the onboarded application package content identified by appPkgId
        or appDId.
      tags:
      - app-pkgm
      x-openapi-router-controller: openapi_server.controllers.app_pkgm_controller
    put:
      description: Uploads the content of application package.
      operationId: app_did_put
      parameters:
      - description: Identifier of an application descriptor
        explode: false
        in: path
        name: appDId
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        content:
          application/zip:
            schema:
              format: binary
              type: string
        x-body-name: body
      responses:
        "202":
          description: "The application package has been accepted for uploading, but\
            \ the processing has not been completed."
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Conflict : The operation cannot be executed currently, due\
            \ to a conflict with the state of the resource"
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Uploads the content of application package.
      tags:
      - app-pkgm
      x-openapi-router-controller: openapi_server.controllers.app_pkgm_controller
      x-codegen-request-body-name: body
  /subscriptions:
    get:
      description: used to retrieve the information of subscriptions to individual
        application package resource in MEO package
      operationId: subscriptions_get
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppPkgSubscriptionLinkList'
          description: List of zero or more subscriptions
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: used to retrieve the information of subscriptions to individual application
        package resource in MEO
      tags:
      - app-pkgm
      x-openapi-router-controller: openapi_server.controllers.app_pkgm_controller
    post:
      callbacks:
        notification:
          '{$request.body#/subscription.href}':
            post:
              description: ' The notification is triggered when a new application
                package is onboarded'
              operationId: notificationPOST
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/AppPkgNotification'
                description: Subscription notification
                required: true
              responses:
                "204":
                  description: No Content
              summary: Callback POST used to send a notification
              x-callback-request: true
      description: Subscribe to notifications about on-boarding an application package
      operationId: subscriptions_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppPkgSubscription'
        description: The input parameters of subscribe operation to notifications
        required: true
        x-body-name: body
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppPkgSubscriptionInfo'
          description: Successful response for created subscription
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Subscribe to notifications about on-boarding an application package
      tags:
      - app-pkgm
      x-openapi-router-controller: openapi_server.controllers.app_pkgm_controller
      x-codegen-request-body-name: body
  /subscriptions/{subscriptionId}:
    delete:
      description: Deletes the individual subscription to notifications about application
        package changes in MEO.
      operationId: individual_subscription_delete
      parameters:
      - description: Identifier of an individual subscription to notifications about
          application package changes
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: No Content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Deletes the individual subscription to notifications about application
        package changes in MEO.
      tags:
      - app-pkgm
      x-openapi-router-controller: openapi_server.controllers.app_pkgm_controller
    get:
      description: Used to represent an individual subscription to notifications about
        application package changes.
      operationId: individual_subscription_get
      parameters:
      - description: Identifier of an individual subscription to notifications about
          application package changes
        explode: false
        in: path
        name: subscriptionId
        required: true
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppPkgSubscriptionInfo'
          description: Representation of the resource.
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "406":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Used to represent an individual subscription to notifications about
        application package changes.
      tags:
      - app-pkgm
      x-openapi-router-controller: openapi_server.controllers.app_pkgm_controller
  /user_defined_notification:
    post:
      description: Registers a notification endpoint to notify application package
        operations
      operationId: app_pkg_notification_post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppPkgNotification'
        description: Notification endpoint to be created
        required: true
        x-body-name: body
      responses:
        "204":
          description: No Content
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Unauthorized :  used when the client did not submit credentials."
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
        "429":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
          description: "Too Many Requests : used when a rate limiter has triggered."
      summary: Registers a notification endpoint to notify application package operations
      tags:
      - app-pkgm-notifications
      x-openapi-router-controller: openapi_server.controllers.app_pkgm_notifications_controller
      x-codegen-request-body-name: body
components:
  responses:
    "204":
      description: No Content
    "206":
      description: Partial content
    "400":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "Bad Request : used to indicate that incorrect parameters were\
        \ passed to the request."
    "401":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "Unauthorized :  used when the client did not submit credentials."
    "403":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "Forbidden :  operation is not allowed given the current status\
        \ of the resource."
    "404":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "Not Found :  used when a client provided a URI that cannot be\
        \ mapped to a valid resource URI."
    "406":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "Not Acceptable : used to indicate that the server cannot provide\
        \ the any of the content formats supported by the client."
    "409":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "Conflict : The operation cannot be executed currently, due to\
        \ a conflict with the state of the resource"
    "412":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "Precondition failed :  used when a condition has failed during\
        \ conditional requests, e.g. when using ETags to avoid write conflicts when\
        \ using PUT"
    "414":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "URI Too Long : used to indicate that the server is refusing to\
        \ process the request because the request URI is longer than the server is\
        \ willing or able to process."
    "415":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "Unsupported Media Type :  used to indicate that the server or\
        \ the client does not support the content type of the entity body."
    "416":
      description: Range Not Satisfiable .
    "422":
      content:
        application/json:
          example:
            application/problem+json:
              problemDetails:
                detail: The target area for the request is considered too large
                instance: /meAppClient.example.com/77777/msgs/abc
                status: "422"
                title: Too many targets
                type: https://meAppServer.example.com/rni/v2/probs/too-many targets
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "Unprocessable Entity : used to indicate that the server understands\
        \ the content type of the request entity and that the syntax of the request\
        \ entity is correct but that the server is unable to process the contained\
        \ instructions. This error condition can occur if an JSON request body is\
        \ syntactically correct but semantically incorrect, for example if the target\
        \ area for the request is considered too large. This error condition can also\
        \ occur if the capabilities required by the request are not supported."
    "429":
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
      description: "Too Many Requests : used when a rate limiter has triggered."
    AppPkgContent.200:
      description: The payload body shall contain a copy of the file representing
        the AppD or a ZIP file that contains the file or multiple files representing
        the AppD.
  schemas:
    Action:
      description: "'Identifies the action of the MEC host data plane, when a packet\
        \ matches the trafficFilter.'"
      enum:
      - DROP
      - FORWARD_DECAPSULATED
      - FORWARD_AS_IS
      - PASSTHROUGH
      - DUPLICATED_DECAPSULATED
      - DUPLICATE_AS_IS
      title: Action
      type: string
    Algorithm:
      description: " Name of the algorithm used to generate the checksum,  as defined\
        \ in ETSI GS NFV-SOL 004. For example, SHA-256, SHA-512."
      title: Algorithm
      type: string
    AppD:
      properties:
        appDId:
          description: Identifier of this MEC application descriptor. This attribute
            shall be globally unique. See note 1.
          title: appDId
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        appDNSRule:
          description: Describes DNS rules the MEC application requires.
          items:
            $ref: '#/components/schemas/DNSRuleDescriptor'
          minItems: 0
          title: appDNSRule
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: DNSRuleDescriptor
        appDVersion:
          description: Identifies the version of the application descriptor.
          title: appDVersion
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        appDescription:
          description: Human readable description of the MEC application.
          title: appDescription
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        appExtCpd:
          description: Describes external interface(s) exposed by this MEC application.
          items:
            $ref: '#/components/schemas/AppExternalCpd'
          minItems: 0
          title: appExtCpd
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: AppExternalCpd
        appFeatureOptional:
          description: Describes features a MEC application may use if available.
          items:
            $ref: '#/components/schemas/FeatureDependency'
          minItems: 0
          title: appFeatureOptional
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: FeatureDependency
        appFeatureRequired:
          description: Describes features a MEC application requires to run.
          items:
            $ref: '#/components/schemas/FeatureDependency'
          minItems: 0
          title: appFeatureRequired
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: FeatureDependency
        appInfoName:
          description: Human readable name for the MEC application.
          title: appInfoName
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        appLatency:
          $ref: '#/components/schemas/LatencyDescriptor'
        appName:
          description: Name to identify the MEC application.
          title: appName
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        appProvider:
          description: Provider of the application and of the AppD.
          title: appProvider
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        appServiceOptional:
          description: Describes services a MEC application may use if available.
          items:
            $ref: '#/components/schemas/ServiceDependency'
          minItems: 0
          title: appServiceOptional
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: ServiceDependency
        appServiceProduced:
          description: Describes services a MEC application is able to produce to
            the platform or other MEC applications. Only relevant for service-producing
            apps.
          items:
            $ref: '#/components/schemas/ServiceDescriptor'
          minItems: 0
          title: appServiceProduced
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: ServiceDescriptor
        appServiceRequired:
          description: Describes services a MEC application requires to run.
          items:
            $ref: '#/components/schemas/ServiceDependency'
          minItems: 0
          title: appServiceRequired
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: ServiceDependency
        appSoftVersion:
          description: Identifies the version of software of the MEC application.
          title: appSoftVersion
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        appTrafficRule:
          description: Describes traffic rules the MEC application requires.
          items:
            $ref: '#/components/schemas/TrafficRuleDescriptor'
          minItems: 0
          title: appTrafficRule
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: TrafficRuleDescriptor
        changeAppInstanceStateOpConfig:
          description: NFV
          title: changeAppInstanceStateOpConfig
          type: string
        mecVersion:
          description: Identifies version(s) of MEC system compatible with the MEC
            application described in this version of the AppD.
          items:
            type: string
          minItems: 1
          title: mecVersion
          type: array
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: String
        swImageDescriptor:
          description: Ref NFV
          title: swImageDescriptor
          type: string
        terminateAppInstanceOpConfig:
          description: NFV
          title: terminateAppInstanceOpConfig
          type: string
          x-etsi-ref: 6.2.2.9
        transportDependencies:
          description: "Transports, if any, that this application requires to be provided\
            \ by the platform. These transports will be used by the application to\
            \ deliver services provided by this application. Only relevant for service-producing\
            \ apps. See note 2."
          items:
            $ref: '#/components/schemas/TransportDependency'
          minItems: 0
          title: transportDependencies
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: TransportDependency
        virtualComputeDescriptor:
          description: Ref NFV
          title: virtualComputeDescriptor
          type: string
        virtualStorageDescriptor:
          description: Defines descriptors of virtual storage resources to be used
            by the MEC application.
          items:
            $ref: '#/components/schemas/VirtualStorageDescriptor'
          minItems: 0
          title: virtualStorageDescriptor
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: VirtualStorageDescriptor
      required:
      - appDId
      - appDVersion
      - appDescription
      - appName
      - appProvider
      - appSoftVersion
      - mecVersion
      - swImageDescriptor
      - virtualComputeDescriptor
      title: AppD
      type: object
      x-etsi-notes: "NOTE 1:\tThe appDId shall be used as the unique identifier of\
        \ the application package that contains this AppD.\nNOTE 2:\tThis attribute\
        \ indicates groups of transport bindings which a service-producing MEC application\
        \ requires to be supported by the platform in order to be able to produce\
        \ its services. At least one of the indicated groups needs to be supported\
        \ to fulfil the requirements."
      x-etsi-ref: 6.2.1.2
    AppDId:
      description: Identifier of this MEC application descriptor. This attribute shall
        be globally unique.
      title: appDId
      type: string
    AppDVersion:
      description: Identifies the version of the application descriptor.
      title: appDVersion
      type: string
    AppExternalCpd:
      properties:
        inherited_attributes:
          description: All attributes inherited from Cpd.
          title: inherited_attributes
          type: object
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: inherited_attributes
        virtualNetworkInterfaceRequirements:
          description: Specifies requirements on a virtual network interface realizing
            the CPs instantiated from this CPD.
          items:
            $ref: '#/components/schemas/VirtualNetworkInterfaceRequirements'
          minItems: 0
          title: virtualNetworkInterfaceRequirements
          type: array
          x-etsi-mec-cardinality: 0..N
      required:
      - inherited_attributes
      title: AppExternalCpd
      type: object
      x-etsi-ref: 6.2.1.6
    AppName:
      description: Name to identify the MEC application.
      title: appName
      type: string
    AppPkg.NotificationType:
      description: Discriminator for the different notification types
      enum:
      - AppPackageOnBoarded
      - AppPacakgeEnabled
      - AppPacakgeDisabled
      - AppPackageDeleted
      title: AppPkg.NotificationType
      type: string
    AppPkg.OperationalState:
      description: "Operational state of the onboarded application package: Ã¢â‚¬Â\
        ¢ENABLED: the application package can be used for instantiation of new application\
        \ instances. Ã¢â‚¬Â¢DISABLED: the application package cannot be used for further\
        \ application instantiation requests."
      enum:
      - ENABLED
      - DISABLED
      title: AppPkg.OperationalState
      type: string
    AppPkg.SubscriptionType:
      description: Subscribed notification type.
      enum:
      - AppPackageOnBoarding
      - AppPacakgeOperationChange
      - AppPackageDeletion
      title: AppPkg.SubscriptionType
      type: string
    AppPkgArtifactInfo:
      description: Additional information of application package artifacts that are
        not application software images. Type is TBD
      title: additionalArtifacts
    AppPkgFilter:
      description: The attribute-based filter is to filter application packages on
        which the query applies.
      title: AppPkgFilter
      type: string
    AppPkgId:
      description: Identifier of the onboarded application package.
      title: id
      type: string
    AppPkgInfo:
      description: '''The data type AppPkgInfo represents the parameters for an application
        package resource'''
      example:
        appDVersion: appDVersion
        _links:
          self:
            href: https://openapi-generator.tech
          appPkgContent:
            href: https://openapi-generator.tech
          appD:
            href: https://openapi-generator.tech
        appName: appName
        appProvider: appProvider
        additionalArtifacts: ""
        usageState: IN_USE
        checksum:
          hash: hash
          algorithm: algorithm
        softwareImages: ""
        appDId: appDId
        appSoftwareVersion: appSoftwareVersion
        id: id
        operationalState: ENABLED
        onboardingState: CREATED
        userDefinedData:
          key: ""
      properties:
        _links:
          $ref: '#/components/schemas/AppPkgInfo.links'
        additionalArtifacts:
          description: Additional information of application package artifacts that
            are not application software images. Type is TBD
          title: additionalArtifacts
        appDId:
          description: Identifier of this MEC application descriptor. This attribute
            shall be globally unique.
          title: appDId
          type: string
        appDVersion:
          description: Identifies the version of the application descriptor.
          title: appDVersion
          type: string
        appName:
          description: Name to identify the MEC application.
          title: appName
          type: string
        appProvider:
          description: Provider of the application and of the AppD.
          title: appProvider
          type: string
        appSoftwareVersion:
          description: Software version of the application. This is updated when there
            is any change to the software in the onboarded application package.
          title: appSoftwareVersion
          type: string
        checksum:
          $ref: '#/components/schemas/Checksum'
        id:
          description: Identifier of the onboarded application package.
          title: id
          type: string
        onboardingState:
          $ref: '#/components/schemas/OnboardingState'
        operationalState:
          $ref: '#/components/schemas/AppPkg.OperationalState'
        softwareImages:
          description: Information of application software image in application package.
            Type is TBD
          title: softwareImages
        usageState:
          $ref: '#/components/schemas/UsageState'
        userDefinedData:
          additionalProperties: true
          description: "'This data type represents a list of key-value pairs. The\
            \ order of the pairs in the list is not significant. In JSON, a set of\
            \ key-value pairs is represented as an object. It shall comply with the\
            \ provisions defined in clause 4 of IETF RFC 8259'"
          title: userDefinedData
          type: object
      required:
      - _links
      - appDId
      - appDVersion
      - appName
      - appSoftwareVersion
      - checksum
      - id
      - onboardingState
      - operationalState
      - softwareImages
      - usageState
      title: AppPkgInfo
      type: object
    AppPkgInfo.links:
      description: Links to resources related to this resource.
      example:
        self:
          href: https://openapi-generator.tech
        appPkgContent:
          href: https://openapi-generator.tech
        appD:
          href: https://openapi-generator.tech
      properties:
        appD:
          $ref: '#/components/schemas/LinkType'
        appPkgContent:
          $ref: '#/components/schemas/LinkType'
        self:
          $ref: '#/components/schemas/LinkType'
      required:
      - appD
      - appPkgContent
      - self
      title: AppPkgInfo.links
      type: object
    AppPkgInfoModifications:
      description: '''The data type represents the operational state for an application
        package resource'''
      example:
        operationState: DISABLED
      properties:
        operationState:
          enum:
          - DISABLED
          - ENABLED
          title: operationState
          type: string
      required:
      - operationState
      title: AppPkgInfoModifications
      type: object
    AppPkgNotification:
      description: '''This data type represents an application package management
        notification for informing the subscribers about onboarding application package
        resources. The notification is triggered when a new application package is
        onboarded'''
      example:
        timeStamp:
          seconds: 6
          nanoSeconds: 0
        appPkgId: appPkgId
        _links:
          subscription:
            href: https://openapi-generator.tech
        appDId: appDId
        id: id
        notificationType: AppPackageOnBoarded
        operationalState: DISABLED
        subscriptionId: subscriptionId
      properties:
        _links:
          $ref: '#/components/schemas/AppPkgNotification.links'
        appDId:
          description: Identifier of this MEC application descriptor. This attribute
            shall be globally unique.
          title: appDId
          type: string
        appPkgId:
          description: Identifier of the onboarded application package.
          title: id
          type: string
        id:
          description: ''''''
          title: id
          type: string
        notificationType:
          $ref: '#/components/schemas/AppPkg.NotificationType'
        operationalState:
          enum:
          - DISABLED
          - ENABLED
          title: operationalState
          type: string
        subscriptionId:
          description: Identifier of the subscription related to this notification.
          title: subscriptionId
          type: string
        timeStamp:
          $ref: '#/components/schemas/TimeStamp'
      required:
      - _links
      - appDId
      - appPkgId
      - id
      - notificationType
      - operationalState
      - subscriptionId
      - timeStamp
      title: AppPkgNotification
      type: object
    AppPkgNotification.Id:
      description: ''''''
      title: id
      type: string
    AppPkgNotification.links:
      description: Links to resources related to this resource.
      example:
        subscription:
          href: https://openapi-generator.tech
      properties:
        subscription:
          $ref: '#/components/schemas/LinkType'
      required:
      - subscription
      title: AppPkgNotification.links
      type: object
    AppPkgSWImageInfo:
      description: Information of application software image in application package.
        Type is TBD
      title: softwareImages
    AppPkgSubscription:
      description: "'The data type represents the input parameters of \"subscription\
        \ operation\" to notification of application package management for the onboarding,\
        \ or operational state change of application package.'"
      example:
        subsctiptionType: AppPackageOnBoarding
        callbackUri: https://openapi-generator.tech
        appPkgFilter:
        - null
        - null
      properties:
        appPkgFilter:
          items:
            $ref: '#/components/schemas/AppPkgFilter'
          title: appPkgFilter
          type: array
        callbackUri:
          description: The URI of the endpoint for the notification to be sent to.
          format: uri
          title: callbackUri
          type: string
        subsctiptionType:
          $ref: '#/components/schemas/SubsctiptionType.AppPkg'
      required:
      - callbackUri
      - subsctiptionType
      title: AppPkgSubscription
      type: object
    AppPkgSubscriptionInfo:
      description: "'The data type represents a subscription to notification of application\
        \ package management for the onboarding, or operational state change of application\
        \ package'"
      example:
        _links:
          self:
            href: https://openapi-generator.tech
        subscriptionType: AppPackageOnBoarding
        callbackUri: https://openapi-generator.tech
        id: id
      properties:
        _links:
          $ref: '#/components/schemas/AppPkgSubscriptionInfo.links'
        callbackUri:
          description: The URI of the endpoint for the notification to be sent to.
          format: uri
          title: callbackUri
          type: string
        id:
          description: ''''''
          title: id
          type: string
        subscriptionType:
          $ref: '#/components/schemas/AppPkg.SubscriptionType'
      required:
      - _links
      - callbackUri
      - id
      - subscriptionType
      title: AppPkgSubscriptionInfo
      type: object
    AppPkgSubscriptionInfo.Id:
      description: ''''''
      title: id
      type: string
    AppPkgSubscriptionInfo.links:
      description: Links to resources related to this resource.
      example:
        self:
          href: https://openapi-generator.tech
      properties:
        self:
          $ref: '#/components/schemas/LinkType'
      required:
      - self
      title: AppPkgSubscriptionInfo.links
      type: object
    AppPkgSubscriptionLinkList:
      description: '''The data type represents a subscription link list of notification
        on application package management'''
      example:
        _links:
          subscriptions:
          - subsctiptionType: AppPackageOnBoarding
            href: https://openapi-generator.tech
          - subsctiptionType: AppPackageOnBoarding
            href: https://openapi-generator.tech
          self:
            href: https://openapi-generator.tech
      properties:
        _links:
          $ref: '#/components/schemas/AppPkgSubscriptionLinkList.links'
      required:
      - _links
      title: AppPkgSubscriptionLinkList
      type: object
    AppPkgSubscriptionLinkList.links:
      description: Links to resources related to this resource.
      example:
        subscriptions:
        - subsctiptionType: AppPackageOnBoarding
          href: https://openapi-generator.tech
        - subsctiptionType: AppPackageOnBoarding
          href: https://openapi-generator.tech
        self:
          href: https://openapi-generator.tech
      properties:
        self:
          $ref: '#/components/schemas/LinkType'
        subscriptions:
          items:
            $ref: '#/components/schemas/Subscriptions.AppPkgSubscription'
          title: subscriptions
          type: array
      required:
      - self
      title: AppPkgSubscriptionLinkList.links
      type: object
    AppProvider:
      description: Provider of the application and of the AppD.
      title: appProvider
      type: string
    AppSoftwareVersion:
      description: Software version of the application. This is updated when there
        is any change to the software in the onboarded application package.
      title: appSoftwareVersion
      type: string
    CallbackUri:
      description: The URI of the endpoint for the notification to be sent to.
      format: uri
      title: callbackUri
      type: string
    CategoryRef:
      description: See MEC011
      title: CategoryRef
    ChangeAppInstanceStateOpConfig:
      description: NFV
      title: changeAppInstanceStateOpConfig
      type: string
    Checksum:
      description: ""
      example:
        hash: hash
        algorithm: algorithm
      properties:
        algorithm:
          description: " Name of the algorithm used to generate the checksum,  as\
            \ defined in ETSI GS NFV-SOL 004. For example, SHA-256, SHA-512."
          title: Algorithm
          type: string
        hash:
          description: '''String 1 The hexadecimal value of the checksum'''
          title: Hash
          type: string
      required:
      - algorithm
      - hash
      title: Checksum
      type: object
    CreateAppPkg:
      example:
        appPkgPath: appPkgPath
        appPkgName: appPkgName
        checksum:
          hash: hash
          algorithm: algorithm
        appProvider: appProvider
        appPkgVersion: appPkgVersion
        userDefinedData:
          key: ""
      properties:
        appPkgName:
          description: Name of the application package to be onboarded.
          title: appPkgName
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        appPkgPath:
          title: appPkgPath
          type: string
        appPkgVersion:
          description: |-
            Version of the application package to be onboarded.
            The appPkgName with appPkgVersion can be used to uniquely identify the application package.
          title: appPkgVersion
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        appProvider:
          description: The provider's name of the application package to be onboarded.
          title: appProvider
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        checksum:
          $ref: '#/components/schemas/Checksum'
        userDefinedData:
          additionalProperties: true
          description: "'This data type represents a list of key-value pairs. The\
            \ order of the pairs in the list is not significant. In JSON, a set of\
            \ key-value pairs is represented as an object. It shall comply with the\
            \ provisions defined in clause 4 of IETF RFC 8259'"
          title: userDefinedData
          type: object
      required:
      - appPkgName
      - appPkgPath
      - appPkgVersion
      - checksum
      title: CreateAppPkg
      type: object
      x-etsi-notes: "NOTE:\tIt is for further study how to convey appPkgPath, and\
        \ align with ETSI GS NFV-SOL 005 [i.7]."
      x-etsi-ref: 6.2.3.2
    DNSRuleDescriptor:
      properties:
        dnsRuleId:
          description: Identifies the DNS Rule
          title: dnsRuleId
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        domainName:
          description: FQDN of the DNS rule
          title: domainName
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        ipAddress:
          description: IP address given by the DNS rule
          title: ipAddress
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        ipAddressType:
          $ref: '#/components/schemas/IpAddressType'
        ttl:
          description: Time-to-live value
          title: ttl
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Int
      required:
      - dnsRuleId
      - domainName
      - ipAddress
      - ipAddressType
      title: DNSRuleDescriptor
      type: object
      x-etsi-ref: 6.2.1.13
    FeatureDependency:
      properties:
        featureName:
          description: "The name of the feature, for example, UserApps, UEIdentity,\
            \ etc."
          title: featureName
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        version:
          description: The version of the feature.
          title: version
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
      required:
      - featureName
      - version
      title: FeatureDependency
      type: object
      x-etsi-ref: 6.2.1.8
    FilterType:
      description: "Definition of filter type: per FLOW or PACKET"
      enum:
      - FLOW
      - PACKET
      title: FilterType
      type: string
    Hash:
      description: '''String 1 The hexadecimal value of the checksum'''
      title: Hash
      type: string
    Href:
      description: The URI referring to the subscription.
      format: uri
      title: Href
      type: string
    InterfaceDescriptor:
      properties:
        dstIPAddress:
          description: "If the interface type is IP, the destination address identifies\
            \ the IP address of the destination. Only used for dstInterface."
          title: dstIPAddress
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        dstMACAddress:
          description: "If the interface type is MAC, the destination address identifies\
            \ the MAC address of the destination. Only used for dstInterface."
          title: dstMACAddress
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        interfaceType:
          $ref: '#/components/schemas/InterfaceType'
        srcMACAddress:
          description: "If the interface type is MAC, the source address identifies\
            \ the MAC address of the interface."
          title: srcMACAddress
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        tunnelInfo:
          $ref: '#/components/schemas/TunnelInfo'
      required:
      - interfaceType
      title: InterfaceDescriptor
      type: object
      x-etsi-ref: 6.2.1.11
    InterfaceType:
      description: Type of interface.
      enum:
      - TUNNEL
      - MAC
      - IP
      title: InterfaceType
      type: string
    IpAddressType:
      description: Specifies the IP address type
      enum:
      - IP_V6
      - IP_V4
      title: IpAddressType
      type: string
    KeyValuePairs:
      additionalProperties: true
      description: "'This data type represents a list of key-value pairs. The order\
        \ of the pairs in the list is not significant. In JSON, a set of key-value\
        \ pairs is represented as an object. It shall comply with the provisions defined\
        \ in clause 4 of IETF RFC 8259'"
      title: userDefinedData
      type: object
    LatencyDescriptor:
      properties:
        maxLatency:
          description: The value of the maximum latency in nano seconds tolerated
            by the MEC application. See note.
          format: Uint32
          title: maxLatency
          type: integer
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Uint32
      required:
      - maxLatency
      title: LatencyDescriptor
      type: object
      x-etsi-notes: "NOTE:\tThe latency is considered to be the one way end-to-end\
        \ latency between the client application (e.g. in a device) and the service\
        \ (i.e. the MEC Application instance)."
      x-etsi-ref: 6.2.1.14
    LinkType:
      example:
        href: https://openapi-generator.tech
      properties:
        href:
          description: URI referring to a resource
          format: uri
          title: href
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: URI
      required:
      - href
      title: LinkType
      type: object
      x-etsi-ref: 6.5.2
    Not_specified:
      title: Not_specified
      type: string
    OnboardingState:
      description: Onboarding state of application package
      enum:
      - CREATED
      - UPLOADING
      - PROCESSING
      - ONBOARDED
      format: enum
      title: OnboardingState
      type: string
    ProblemDetails:
      example:
        instance: https://openapi-generator.tech
        detail: detail
        title: title
        type: https://openapi-generator.tech
        status: 0
      properties:
        detail:
          description: A human-readable explanation specific to this occurrence of
            the problem
          title: detail
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        instance:
          description: A URI reference that identifies the specific occurrence of
            the problem
          format: uri
          title: instance
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: URI
        status:
          description: The HTTP status code for this occurrence of the problem
          format: uint32
          title: status
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Uint32
        title:
          description: "A short, human-readable summary of the problem type"
          title: title
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        type:
          description: A URI reference according to IETF RFC 3986 that identifies
            the problem type
          format: uri
          title: type
          type: string
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: URI
      title: ProblemDetails
      type: object
    SecurityInfo:
      description: See MEC011
      title: SecurityInfo
    SerName:
      description: "The name of the service, for example, RNIS, LocationService, etc."
      title: SerName
      type: string
    SerVersion:
      description: The version of the service.
      title: SerVersion
      type: string
    SerializerTypes:
      title: SerializerTypes
      type: string
    Serializers:
      description: "'Information about the serializers in this binding, as defined\
        \ in the SerializerTypes type in ETSI GS MEC 011 '"
      items:
        $ref: '#/components/schemas/SerializerTypes'
      minItems: 1
      title: Serializers
      type: array
    ServiceDependency:
      properties:
        requestedPermissions:
          description: |-
            Requested permissions regarding the access of the application to the service. See clause 8.2 of ETSI GS MEC 009 [4].
            The format of this attribute is left for the data model design stage.
          items:
            $ref: '#/components/schemas/Not_specified'
          minItems: 0
          title: requestedPermissions
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: Not_specified
        serCategory:
          description: See MEC011
          title: CategoryRef
        serName:
          description: "The name of the service, for example, RNIS, LocationService,\
            \ etc."
          title: serName
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        serTransportDependencies:
          description: Indicates transport and serialization format dependencies of
            consuming the service. Defaults to REST + JSON if absent. See note.
          items:
            $ref: '#/components/schemas/TransportDependency'
          minItems: 0
          title: serTransportDependencies
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: TransportDependency
        version:
          description: The version of the service.
          title: version
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
      required:
      - serName
      - version
      title: ServiceDependency
      type: object
      x-etsi-notes: "NOTE:\tThis attribute indicates groups of transport bindings\
        \ that a service-consuming MEC application supports for the consumption of\
        \ the MEC service defined by this ServiceDependency structure. If at least\
        \ one of the indicated groups is supported by the service it may be consumed\
        \ by the application."
      x-etsi-ref: 6.2.1.17
    ServiceDescriptor:
      description: '''The ServiceDescriptor data type describes a MEC service produced
        by a service-providing MEC application.'''
      properties:
        serCategory:
          description: See MEC011
          title: CategoryRef
        serName:
          description: "The name of the service, for example, RNIS, LocationService,\
            \ etc."
          title: SerName
          type: string
        transportsSupported:
          $ref: '#/components/schemas/TransportsSupported'
        version:
          description: The version of the service.
          title: SerVersion
          type: string
      required:
      - serName
      - version
      title: ServiceDescriptor
      type: object
    SubscriptionId:
      description: Identifier of the subscription related to this notification.
      title: subscriptionId
      type: string
    Subscriptions.AppPkgSubscription:
      description: "'The data type represents the input parameters of \"subscription\
        \ operation\" to notification of application package management for the onboarding,\
        \ or operational state change of application package.'"
      example:
        subsctiptionType: AppPackageOnBoarding
        href: https://openapi-generator.tech
      properties:
        href:
          description: The URI referring to the subscription.
          format: uri
          title: Href
          type: string
        subsctiptionType:
          $ref: '#/components/schemas/SubsctiptionType.AppPkg'
      required:
      - href
      - subsctiptionType
      title: Subscriptions.AppPkgSubscription
      type: object
    SubsctiptionType.AppPkg:
      description: '''Subscribed notification type'''
      enum:
      - AppPackageOnBoarding
      - AppPacakgeOperationChange
      - AppPackageDeletion
      title: SubsctiptionType.AppPkg
      type: string
    SwImageDescriptor:
      description: Ref NFV
      title: swImageDescriptor
      type: string
    TerminateAppInstanceOpConfig:
      description: NFV
      title: terminateAppInstanceOpConfig
      type: string
      x-etsi-ref: 6.2.2.9
    TimeStamp:
      example:
        seconds: 6
        nanoSeconds: 0
      properties:
        nanoSeconds:
          description: "The nanoseconds part of the Time. Time is defined as Unix-time\
            \ since January 1, 1970, 00:00:00 UTC."
          format: Uint32
          title: nanoSeconds
          type: integer
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Uint32
        seconds:
          description: "The seconds part of the Time. Time is defined as Unix-time\
            \ since January\_1, 1970, 00:00:00 UTC."
          format: Uint32
          title: seconds
          type: integer
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Uint32
      required:
      - nanoSeconds
      - seconds
      title: TimeStamp
      type: object
      x-etsi-ref: 6.2.5.4
    TrafficFilter:
      properties:
        dSCP:
          description: Used to match all IPv4 packets that have the same DSCP.
          title: dSCP
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Int
        dstAddress:
          description: "A IP address or a range of IP addresses.For IPv4, the IP address\
            \ could be an IP address plus mask, or an individual IP address, or a\
            \ range of IP addresses.For IPv6, the IP address could be an IP prefix,\
            \ or a range of IP prefixes."
          items:
            type: string
          minItems: 0
          title: dstAddress
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: String
        dstPort:
          description: A port or a range of ports.
          items:
            type: string
          minItems: 0
          title: dstPort
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: String
        dstTunnelPort:
          description: Used for GTP tunnel based traffic rule.
          items:
            type: string
          minItems: 0
          title: dstTunnelPort
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: String
        protocol:
          description: Specify the protocol of the traffic filter.
          items:
            type: string
          minItems: 0
          title: protocol
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: String
        qCI:
          description: Used to match all packets that have the same QCI.
          title: qCI
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Int
        srcAddress:
          description: "An IP address or a range of IP addresses.For IPv4, the IP\
            \ address could be an IP address plus mask, or an individual IP address,\
            \ or a range of IP addresses.For IPv6, the IP address could be an IP prefix,\
            \ or a range of IP prefixes."
          items:
            type: string
          minItems: 0
          title: srcAddress
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: String
        srcPort:
          description: A port or a range of ports.
          items:
            type: string
          minItems: 0
          title: srcPort
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: String
        srcTunnelAddress:
          description: Used for GTP tunnel based traffic rule.
          items:
            type: string
          minItems: 0
          title: srcTunnelAddress
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: String
        srcTunnelPort:
          description: Used for GTP tunnel based traffic rule.
          items:
            type: string
          minItems: 0
          title: srcTunnelPort
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: String
        tC:
          description: Used to match all IPv6 packets that have the same TC.
          title: tC
          type: integer
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Int
        tag:
          description: Used for tag based traffic rule.
          items:
            type: string
          minItems: 0
          title: tag
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: String
        tgtTunnelAddress:
          description: Used for GTP tunnel based traffic rule.
          items:
            type: string
          minItems: 0
          title: tgtTunnelAddress
          type: array
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: String
      title: TrafficFilter
      type: object
      x-etsi-ref: 6.2.1.10
    TrafficRuleDescriptor:
      properties:
        action:
          $ref: '#/components/schemas/Action'
        dstInterface:
          items:
            $ref: '#/components/schemas/InterfaceDescriptor'
          maxItems: 2
          minItems: 0
          title: dstInterface
          type: array
        filterType:
          $ref: '#/components/schemas/FilterType'
        priority:
          description: "Priority of this traffic rule. If traffic rule conflicts,\
            \ the one with higher priority take precedence."
          title: priority
          type: integer
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Int
        trafficFilter:
          description: The filter used to identify specific flow/packets that need
            to be handled by the MEC host.
          items:
            $ref: '#/components/schemas/TrafficFilter'
          minItems: 1
          title: trafficFilter
          type: array
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: TrafficFilter
        trafficRuleId:
          description: Identifies the traffic rule.
          title: trafficRuleId
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
      required:
      - action
      - filterType
      - priority
      - trafficFilter
      - trafficRuleId
      title: TrafficRuleDescriptor
      type: object
      x-etsi-ref: 6.2.1.9
    TransportDependency:
      properties:
        labels:
          description: Set of labels that allow to define groups of transport bindings.
            The mechanism of the grouping is defined below this table.
          items:
            type: string
          minItems: 1
          title: labels
          type: array
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: String
        serializers:
          description: "Information about the serializers in this transport binding,\
            \ as defined in the SerializerTypes type in ETSI GS MEC 011 [i.4]. Support\
            \ for at least one of the entries is required in conjunction with the\
            \ transport."
          items:
            $ref: '#/components/schemas/SerializerTypes'
          minItems: 1
          title: serializers
          type: array
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: SerializerTypes
        transport:
          $ref: '#/components/schemas/TransportDescriptor'
      required:
      - labels
      - serializers
      - transport
      title: TransportDependency
      type: object
      x-etsi-ref: 6.2.1.18
    TransportDescriptor:
      properties:
        protocol:
          description: The name of the protocol used. Shall be set to HTTP for a REST
            API.
          title: protocol
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        security:
          description: See MEC011
          title: SecurityInfo
        type:
          title: TransportTypes
          type: string
        version:
          description: The version of the protocol used.
          title: version
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
      required:
      - protocol
      - security
      - type
      - version
      title: TransportDescriptor
      type: object
      x-etsi-ref: 6.2.1.19
    TransportTypes:
      title: TransportTypes
      type: string
    TransportsSupported:
      description: '''Indicates transports and serialization formats supported made
        available to the service-consuming application. Defaults to REST + JSON if
        absent.'''
      properties:
        serializers:
          description: "'Information about the serializers in this binding, as defined\
            \ in the SerializerTypes type in ETSI GS MEC 011 '"
          items:
            $ref: '#/components/schemas/SerializerTypes'
          minItems: 1
          title: Serializers
          type: array
        transport:
          $ref: '#/components/schemas/TransportDescriptor'
      required:
      - featureName
      - version
      title: TransportsSupported
      type: object
    TunnelInfo:
      properties:
        tunnelDstAddress:
          description: Destination address of the tunnel.
          title: tunnelDstAddress
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        tunnelSpecificData:
          title: Not_specified
          type: string
        tunnelSrcAddress:
          description: Source address of the tunnel.
          title: tunnelSrcAddress
          type: string
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        tunnelType:
          $ref: '#/components/schemas/TunnelType'
      required:
      - tunnelDstAddress
      - tunnelSrcAddress
      - tunnelType
      title: TunnelInfo
      type: object
      x-etsi-ref: 6.2.1.12
    TunnelType:
      description: Type of tunnel.
      enum:
      - GTP-U
      - GRE
      title: TunnelType
      type: string
    URI:
      title: appPkgPath
      type: string
    UsageState:
      description: Usage state of the onboarded instance of the application package
      enum:
      - IN_USE
      - NOT_IN_USE
      format: enum
      title: UsageState
      type: string
    VirtualComputeDescription:
      description: Ref NFV
      title: virtualComputeDescriptor
      type: string
    VirtualNetworkInterfaceRequirements:
      title: VirtualNetworkInterfaceRequirements
      type: string
    VirtualStorageDescriptor:
      description: Ref NFV
      title: VirtualStorageDescriptor
      type: string
