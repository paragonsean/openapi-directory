/*
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management
 * ETSI GS MEC 010-2 - Part 2: Application lifecycle, rules and requirements management described using OpenAPI.
 *
 * The version of the OpenAPI document: 2.1.1
 * Contact: cti_support@etsi.org
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.client.model.AppExternalCpd;
import org.openapitools.client.model.DNSRuleDescriptor;
import org.openapitools.client.model.FeatureDependency;
import org.openapitools.client.model.LatencyDescriptor;
import org.openapitools.client.model.ServiceDependency;
import org.openapitools.client.model.ServiceDescriptor;
import org.openapitools.client.model.TrafficRuleDescriptor;
import org.openapitools.client.model.TransportDependency;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AppD
 */
public class AppDTest {
    private final AppD model = new AppD();

    /**
     * Model tests for AppD
     */
    @Test
    public void testAppD() {
        // TODO: test AppD
    }

    /**
     * Test the property 'appDId'
     */
    @Test
    public void appDIdTest() {
        // TODO: test appDId
    }

    /**
     * Test the property 'appDNSRule'
     */
    @Test
    public void appDNSRuleTest() {
        // TODO: test appDNSRule
    }

    /**
     * Test the property 'appDVersion'
     */
    @Test
    public void appDVersionTest() {
        // TODO: test appDVersion
    }

    /**
     * Test the property 'appDescription'
     */
    @Test
    public void appDescriptionTest() {
        // TODO: test appDescription
    }

    /**
     * Test the property 'appExtCpd'
     */
    @Test
    public void appExtCpdTest() {
        // TODO: test appExtCpd
    }

    /**
     * Test the property 'appFeatureOptional'
     */
    @Test
    public void appFeatureOptionalTest() {
        // TODO: test appFeatureOptional
    }

    /**
     * Test the property 'appFeatureRequired'
     */
    @Test
    public void appFeatureRequiredTest() {
        // TODO: test appFeatureRequired
    }

    /**
     * Test the property 'appInfoName'
     */
    @Test
    public void appInfoNameTest() {
        // TODO: test appInfoName
    }

    /**
     * Test the property 'appLatency'
     */
    @Test
    public void appLatencyTest() {
        // TODO: test appLatency
    }

    /**
     * Test the property 'appName'
     */
    @Test
    public void appNameTest() {
        // TODO: test appName
    }

    /**
     * Test the property 'appProvider'
     */
    @Test
    public void appProviderTest() {
        // TODO: test appProvider
    }

    /**
     * Test the property 'appServiceOptional'
     */
    @Test
    public void appServiceOptionalTest() {
        // TODO: test appServiceOptional
    }

    /**
     * Test the property 'appServiceProduced'
     */
    @Test
    public void appServiceProducedTest() {
        // TODO: test appServiceProduced
    }

    /**
     * Test the property 'appServiceRequired'
     */
    @Test
    public void appServiceRequiredTest() {
        // TODO: test appServiceRequired
    }

    /**
     * Test the property 'appSoftVersion'
     */
    @Test
    public void appSoftVersionTest() {
        // TODO: test appSoftVersion
    }

    /**
     * Test the property 'appTrafficRule'
     */
    @Test
    public void appTrafficRuleTest() {
        // TODO: test appTrafficRule
    }

    /**
     * Test the property 'changeAppInstanceStateOpConfig'
     */
    @Test
    public void changeAppInstanceStateOpConfigTest() {
        // TODO: test changeAppInstanceStateOpConfig
    }

    /**
     * Test the property 'mecVersion'
     */
    @Test
    public void mecVersionTest() {
        // TODO: test mecVersion
    }

    /**
     * Test the property 'swImageDescriptor'
     */
    @Test
    public void swImageDescriptorTest() {
        // TODO: test swImageDescriptor
    }

    /**
     * Test the property 'terminateAppInstanceOpConfig'
     */
    @Test
    public void terminateAppInstanceOpConfigTest() {
        // TODO: test terminateAppInstanceOpConfig
    }

    /**
     * Test the property 'transportDependencies'
     */
    @Test
    public void transportDependenciesTest() {
        // TODO: test transportDependencies
    }

    /**
     * Test the property 'virtualComputeDescriptor'
     */
    @Test
    public void virtualComputeDescriptorTest() {
        // TODO: test virtualComputeDescriptor
    }

    /**
     * Test the property 'virtualStorageDescriptor'
     */
    @Test
    public void virtualStorageDescriptorTest() {
        // TODO: test virtualStorageDescriptor
    }

}
