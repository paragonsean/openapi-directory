/**
 * Qualtrics API
 * Work with Qualtrics surveys, distributions and response events
 *
 * The version of the OpenAPI document: 0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICreateDistributionLinks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICreateDistributionLinks::OAICreateDistributionLinks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICreateDistributionLinks::OAICreateDistributionLinks() {
    this->initializeModel();
}

OAICreateDistributionLinks::~OAICreateDistributionLinks() {}

void OAICreateDistributionLinks::initializeModel() {

    m_action_isSet = false;
    m_action_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_expiration_date_isSet = false;
    m_expiration_date_isValid = false;

    m_link_type_isSet = false;
    m_link_type_isValid = false;

    m_mailing_list_id_isSet = false;
    m_mailing_list_id_isValid = false;

    m_survey_id_isSet = false;
    m_survey_id_isValid = false;
}

void OAICreateDistributionLinks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICreateDistributionLinks::fromJsonObject(QJsonObject json) {

    m_action_isValid = ::OpenAPI::fromJsonValue(m_action, json[QString("action")]);
    m_action_isSet = !json[QString("action")].isNull() && m_action_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_expiration_date_isValid = ::OpenAPI::fromJsonValue(m_expiration_date, json[QString("expirationDate")]);
    m_expiration_date_isSet = !json[QString("expirationDate")].isNull() && m_expiration_date_isValid;

    m_link_type_isValid = ::OpenAPI::fromJsonValue(m_link_type, json[QString("linkType")]);
    m_link_type_isSet = !json[QString("linkType")].isNull() && m_link_type_isValid;

    m_mailing_list_id_isValid = ::OpenAPI::fromJsonValue(m_mailing_list_id, json[QString("mailingListId")]);
    m_mailing_list_id_isSet = !json[QString("mailingListId")].isNull() && m_mailing_list_id_isValid;

    m_survey_id_isValid = ::OpenAPI::fromJsonValue(m_survey_id, json[QString("surveyId")]);
    m_survey_id_isSet = !json[QString("surveyId")].isNull() && m_survey_id_isValid;
}

QString OAICreateDistributionLinks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICreateDistributionLinks::asJsonObject() const {
    QJsonObject obj;
    if (m_action_isSet) {
        obj.insert(QString("action"), ::OpenAPI::toJsonValue(m_action));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_expiration_date_isSet) {
        obj.insert(QString("expirationDate"), ::OpenAPI::toJsonValue(m_expiration_date));
    }
    if (m_link_type_isSet) {
        obj.insert(QString("linkType"), ::OpenAPI::toJsonValue(m_link_type));
    }
    if (m_mailing_list_id_isSet) {
        obj.insert(QString("mailingListId"), ::OpenAPI::toJsonValue(m_mailing_list_id));
    }
    if (m_survey_id_isSet) {
        obj.insert(QString("surveyId"), ::OpenAPI::toJsonValue(m_survey_id));
    }
    return obj;
}

QString OAICreateDistributionLinks::getAction() const {
    return m_action;
}
void OAICreateDistributionLinks::setAction(const QString &action) {
    m_action = action;
    m_action_isSet = true;
}

bool OAICreateDistributionLinks::is_action_Set() const{
    return m_action_isSet;
}

bool OAICreateDistributionLinks::is_action_Valid() const{
    return m_action_isValid;
}

QString OAICreateDistributionLinks::getDescription() const {
    return m_description;
}
void OAICreateDistributionLinks::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAICreateDistributionLinks::is_description_Set() const{
    return m_description_isSet;
}

bool OAICreateDistributionLinks::is_description_Valid() const{
    return m_description_isValid;
}

QString OAICreateDistributionLinks::getExpirationDate() const {
    return m_expiration_date;
}
void OAICreateDistributionLinks::setExpirationDate(const QString &expiration_date) {
    m_expiration_date = expiration_date;
    m_expiration_date_isSet = true;
}

bool OAICreateDistributionLinks::is_expiration_date_Set() const{
    return m_expiration_date_isSet;
}

bool OAICreateDistributionLinks::is_expiration_date_Valid() const{
    return m_expiration_date_isValid;
}

QString OAICreateDistributionLinks::getLinkType() const {
    return m_link_type;
}
void OAICreateDistributionLinks::setLinkType(const QString &link_type) {
    m_link_type = link_type;
    m_link_type_isSet = true;
}

bool OAICreateDistributionLinks::is_link_type_Set() const{
    return m_link_type_isSet;
}

bool OAICreateDistributionLinks::is_link_type_Valid() const{
    return m_link_type_isValid;
}

QString OAICreateDistributionLinks::getMailingListId() const {
    return m_mailing_list_id;
}
void OAICreateDistributionLinks::setMailingListId(const QString &mailing_list_id) {
    m_mailing_list_id = mailing_list_id;
    m_mailing_list_id_isSet = true;
}

bool OAICreateDistributionLinks::is_mailing_list_id_Set() const{
    return m_mailing_list_id_isSet;
}

bool OAICreateDistributionLinks::is_mailing_list_id_Valid() const{
    return m_mailing_list_id_isValid;
}

QString OAICreateDistributionLinks::getSurveyId() const {
    return m_survey_id;
}
void OAICreateDistributionLinks::setSurveyId(const QString &survey_id) {
    m_survey_id = survey_id;
    m_survey_id_isSet = true;
}

bool OAICreateDistributionLinks::is_survey_id_Set() const{
    return m_survey_id_isSet;
}

bool OAICreateDistributionLinks::is_survey_id_Valid() const{
    return m_survey_id_isValid;
}

bool OAICreateDistributionLinks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_action_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiration_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_mailing_list_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_survey_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICreateDistributionLinks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
