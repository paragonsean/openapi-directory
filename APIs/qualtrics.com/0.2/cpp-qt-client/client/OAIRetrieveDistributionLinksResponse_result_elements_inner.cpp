/**
 * Qualtrics API
 * Work with Qualtrics surveys, distributions and response events
 *
 * The version of the OpenAPI document: 0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIRetrieveDistributionLinksResponse_result_elements_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIRetrieveDistributionLinksResponse_result_elements_inner::OAIRetrieveDistributionLinksResponse_result_elements_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIRetrieveDistributionLinksResponse_result_elements_inner::OAIRetrieveDistributionLinksResponse_result_elements_inner() {
    this->initializeModel();
}

OAIRetrieveDistributionLinksResponse_result_elements_inner::~OAIRetrieveDistributionLinksResponse_result_elements_inner() {}

void OAIRetrieveDistributionLinksResponse_result_elements_inner::initializeModel() {

    m_contact_id_isSet = false;
    m_contact_id_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_exceeded_contact_frequency_isSet = false;
    m_exceeded_contact_frequency_isValid = false;

    m_external_data_reference_isSet = false;
    m_external_data_reference_isValid = false;

    m_first_name_isSet = false;
    m_first_name_isValid = false;

    m_last_name_isSet = false;
    m_last_name_isValid = false;

    m_link_isSet = false;
    m_link_isValid = false;

    m_link_expiration_isSet = false;
    m_link_expiration_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_transaction_id_isSet = false;
    m_transaction_id_isValid = false;

    m_unsubscribed_isSet = false;
    m_unsubscribed_isValid = false;
}

void OAIRetrieveDistributionLinksResponse_result_elements_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIRetrieveDistributionLinksResponse_result_elements_inner::fromJsonObject(QJsonObject json) {

    m_contact_id_isValid = ::OpenAPI::fromJsonValue(m_contact_id, json[QString("contactId")]);
    m_contact_id_isSet = !json[QString("contactId")].isNull() && m_contact_id_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_exceeded_contact_frequency_isValid = ::OpenAPI::fromJsonValue(m_exceeded_contact_frequency, json[QString("exceededContactFrequency")]);
    m_exceeded_contact_frequency_isSet = !json[QString("exceededContactFrequency")].isNull() && m_exceeded_contact_frequency_isValid;

    m_external_data_reference_isValid = ::OpenAPI::fromJsonValue(m_external_data_reference, json[QString("externalDataReference")]);
    m_external_data_reference_isSet = !json[QString("externalDataReference")].isNull() && m_external_data_reference_isValid;

    m_first_name_isValid = ::OpenAPI::fromJsonValue(m_first_name, json[QString("firstName")]);
    m_first_name_isSet = !json[QString("firstName")].isNull() && m_first_name_isValid;

    m_last_name_isValid = ::OpenAPI::fromJsonValue(m_last_name, json[QString("lastName")]);
    m_last_name_isSet = !json[QString("lastName")].isNull() && m_last_name_isValid;

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("link")]);
    m_link_isSet = !json[QString("link")].isNull() && m_link_isValid;

    m_link_expiration_isValid = ::OpenAPI::fromJsonValue(m_link_expiration, json[QString("linkExpiration")]);
    m_link_expiration_isSet = !json[QString("linkExpiration")].isNull() && m_link_expiration_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_transaction_id_isValid = ::OpenAPI::fromJsonValue(m_transaction_id, json[QString("transactionId")]);
    m_transaction_id_isSet = !json[QString("transactionId")].isNull() && m_transaction_id_isValid;

    m_unsubscribed_isValid = ::OpenAPI::fromJsonValue(m_unsubscribed, json[QString("unsubscribed")]);
    m_unsubscribed_isSet = !json[QString("unsubscribed")].isNull() && m_unsubscribed_isValid;
}

QString OAIRetrieveDistributionLinksResponse_result_elements_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIRetrieveDistributionLinksResponse_result_elements_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_contact_id_isSet) {
        obj.insert(QString("contactId"), ::OpenAPI::toJsonValue(m_contact_id));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_exceeded_contact_frequency_isSet) {
        obj.insert(QString("exceededContactFrequency"), ::OpenAPI::toJsonValue(m_exceeded_contact_frequency));
    }
    if (m_external_data_reference_isSet) {
        obj.insert(QString("externalDataReference"), ::OpenAPI::toJsonValue(m_external_data_reference));
    }
    if (m_first_name_isSet) {
        obj.insert(QString("firstName"), ::OpenAPI::toJsonValue(m_first_name));
    }
    if (m_last_name_isSet) {
        obj.insert(QString("lastName"), ::OpenAPI::toJsonValue(m_last_name));
    }
    if (m_link_isSet) {
        obj.insert(QString("link"), ::OpenAPI::toJsonValue(m_link));
    }
    if (m_link_expiration_isSet) {
        obj.insert(QString("linkExpiration"), ::OpenAPI::toJsonValue(m_link_expiration));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_transaction_id_isSet) {
        obj.insert(QString("transactionId"), ::OpenAPI::toJsonValue(m_transaction_id));
    }
    if (m_unsubscribed_isSet) {
        obj.insert(QString("unsubscribed"), ::OpenAPI::toJsonValue(m_unsubscribed));
    }
    return obj;
}

QString OAIRetrieveDistributionLinksResponse_result_elements_inner::getContactId() const {
    return m_contact_id;
}
void OAIRetrieveDistributionLinksResponse_result_elements_inner::setContactId(const QString &contact_id) {
    m_contact_id = contact_id;
    m_contact_id_isSet = true;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_contact_id_Set() const{
    return m_contact_id_isSet;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_contact_id_Valid() const{
    return m_contact_id_isValid;
}

QString OAIRetrieveDistributionLinksResponse_result_elements_inner::getEmail() const {
    return m_email;
}
void OAIRetrieveDistributionLinksResponse_result_elements_inner::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_email_Set() const{
    return m_email_isSet;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_email_Valid() const{
    return m_email_isValid;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::isExceededContactFrequency() const {
    return m_exceeded_contact_frequency;
}
void OAIRetrieveDistributionLinksResponse_result_elements_inner::setExceededContactFrequency(const bool &exceeded_contact_frequency) {
    m_exceeded_contact_frequency = exceeded_contact_frequency;
    m_exceeded_contact_frequency_isSet = true;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_exceeded_contact_frequency_Set() const{
    return m_exceeded_contact_frequency_isSet;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_exceeded_contact_frequency_Valid() const{
    return m_exceeded_contact_frequency_isValid;
}

QJsonValue OAIRetrieveDistributionLinksResponse_result_elements_inner::getExternalDataReference() const {
    return m_external_data_reference;
}
void OAIRetrieveDistributionLinksResponse_result_elements_inner::setExternalDataReference(const QJsonValue &external_data_reference) {
    m_external_data_reference = external_data_reference;
    m_external_data_reference_isSet = true;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_external_data_reference_Set() const{
    return m_external_data_reference_isSet;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_external_data_reference_Valid() const{
    return m_external_data_reference_isValid;
}

QString OAIRetrieveDistributionLinksResponse_result_elements_inner::getFirstName() const {
    return m_first_name;
}
void OAIRetrieveDistributionLinksResponse_result_elements_inner::setFirstName(const QString &first_name) {
    m_first_name = first_name;
    m_first_name_isSet = true;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_first_name_Set() const{
    return m_first_name_isSet;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_first_name_Valid() const{
    return m_first_name_isValid;
}

QString OAIRetrieveDistributionLinksResponse_result_elements_inner::getLastName() const {
    return m_last_name;
}
void OAIRetrieveDistributionLinksResponse_result_elements_inner::setLastName(const QString &last_name) {
    m_last_name = last_name;
    m_last_name_isSet = true;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_last_name_Set() const{
    return m_last_name_isSet;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_last_name_Valid() const{
    return m_last_name_isValid;
}

QString OAIRetrieveDistributionLinksResponse_result_elements_inner::getLink() const {
    return m_link;
}
void OAIRetrieveDistributionLinksResponse_result_elements_inner::setLink(const QString &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_link_Set() const{
    return m_link_isSet;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_link_Valid() const{
    return m_link_isValid;
}

QString OAIRetrieveDistributionLinksResponse_result_elements_inner::getLinkExpiration() const {
    return m_link_expiration;
}
void OAIRetrieveDistributionLinksResponse_result_elements_inner::setLinkExpiration(const QString &link_expiration) {
    m_link_expiration = link_expiration;
    m_link_expiration_isSet = true;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_link_expiration_Set() const{
    return m_link_expiration_isSet;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_link_expiration_Valid() const{
    return m_link_expiration_isValid;
}

QString OAIRetrieveDistributionLinksResponse_result_elements_inner::getStatus() const {
    return m_status;
}
void OAIRetrieveDistributionLinksResponse_result_elements_inner::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_status_Set() const{
    return m_status_isSet;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_status_Valid() const{
    return m_status_isValid;
}

QJsonValue OAIRetrieveDistributionLinksResponse_result_elements_inner::getTransactionId() const {
    return m_transaction_id;
}
void OAIRetrieveDistributionLinksResponse_result_elements_inner::setTransactionId(const QJsonValue &transaction_id) {
    m_transaction_id = transaction_id;
    m_transaction_id_isSet = true;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_transaction_id_Set() const{
    return m_transaction_id_isSet;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_transaction_id_Valid() const{
    return m_transaction_id_isValid;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::isUnsubscribed() const {
    return m_unsubscribed;
}
void OAIRetrieveDistributionLinksResponse_result_elements_inner::setUnsubscribed(const bool &unsubscribed) {
    m_unsubscribed = unsubscribed;
    m_unsubscribed_isSet = true;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_unsubscribed_Set() const{
    return m_unsubscribed_isSet;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::is_unsubscribed_Valid() const{
    return m_unsubscribed_isValid;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_contact_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exceeded_contact_frequency_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_external_data_reference_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_first_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_last_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_expiration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_transaction_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_unsubscribed_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIRetrieveDistributionLinksResponse_result_elements_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_contact_id_isValid && m_email_isValid && m_exceeded_contact_frequency_isValid && m_external_data_reference_isValid && m_first_name_isValid && m_last_name_isValid && m_link_isValid && m_link_expiration_isValid && m_status_isValid && m_transaction_id_isValid && m_unsubscribed_isValid && true;
}

} // namespace OpenAPI
