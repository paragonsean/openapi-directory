/**
 * Qualtrics API
 * Work with Qualtrics surveys, distributions and response events
 *
 * The version of the OpenAPI document: 0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDistributionsResponse_result_elements_inner.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDistributionsResponse_result_elements_inner::OAIDistributionsResponse_result_elements_inner(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDistributionsResponse_result_elements_inner::OAIDistributionsResponse_result_elements_inner() {
    this->initializeModel();
}

OAIDistributionsResponse_result_elements_inner::~OAIDistributionsResponse_result_elements_inner() {}

void OAIDistributionsResponse_result_elements_inner::initializeModel() {

    m_created_date_isSet = false;
    m_created_date_isValid = false;

    m_custom_headers_isSet = false;
    m_custom_headers_isValid = false;

    m_embedded_data_isSet = false;
    m_embedded_data_isValid = false;

    m_headers_isSet = false;
    m_headers_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_modified_date_isSet = false;
    m_modified_date_isValid = false;

    m_organization_id_isSet = false;
    m_organization_id_isValid = false;

    m_owner_id_isSet = false;
    m_owner_id_isValid = false;

    m_parent_distribution_id_isSet = false;
    m_parent_distribution_id_isValid = false;

    m_recipients_isSet = false;
    m_recipients_isValid = false;

    m_request_status_isSet = false;
    m_request_status_isValid = false;

    m_request_type_isSet = false;
    m_request_type_isValid = false;

    m_send_date_isSet = false;
    m_send_date_isValid = false;

    m_stats_isSet = false;
    m_stats_isValid = false;

    m_survey_link_isSet = false;
    m_survey_link_isValid = false;
}

void OAIDistributionsResponse_result_elements_inner::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDistributionsResponse_result_elements_inner::fromJsonObject(QJsonObject json) {

    m_created_date_isValid = ::OpenAPI::fromJsonValue(m_created_date, json[QString("createdDate")]);
    m_created_date_isSet = !json[QString("createdDate")].isNull() && m_created_date_isValid;

    m_custom_headers_isValid = ::OpenAPI::fromJsonValue(m_custom_headers, json[QString("customHeaders")]);
    m_custom_headers_isSet = !json[QString("customHeaders")].isNull() && m_custom_headers_isValid;

    m_embedded_data_isValid = ::OpenAPI::fromJsonValue(m_embedded_data, json[QString("embeddedData")]);
    m_embedded_data_isSet = !json[QString("embeddedData")].isNull() && m_embedded_data_isValid;

    m_headers_isValid = ::OpenAPI::fromJsonValue(m_headers, json[QString("headers")]);
    m_headers_isSet = !json[QString("headers")].isNull() && m_headers_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_modified_date_isValid = ::OpenAPI::fromJsonValue(m_modified_date, json[QString("modifiedDate")]);
    m_modified_date_isSet = !json[QString("modifiedDate")].isNull() && m_modified_date_isValid;

    m_organization_id_isValid = ::OpenAPI::fromJsonValue(m_organization_id, json[QString("organizationId")]);
    m_organization_id_isSet = !json[QString("organizationId")].isNull() && m_organization_id_isValid;

    m_owner_id_isValid = ::OpenAPI::fromJsonValue(m_owner_id, json[QString("ownerId")]);
    m_owner_id_isSet = !json[QString("ownerId")].isNull() && m_owner_id_isValid;

    m_parent_distribution_id_isValid = ::OpenAPI::fromJsonValue(m_parent_distribution_id, json[QString("parentDistributionId")]);
    m_parent_distribution_id_isSet = !json[QString("parentDistributionId")].isNull() && m_parent_distribution_id_isValid;

    m_recipients_isValid = ::OpenAPI::fromJsonValue(m_recipients, json[QString("recipients")]);
    m_recipients_isSet = !json[QString("recipients")].isNull() && m_recipients_isValid;

    m_request_status_isValid = ::OpenAPI::fromJsonValue(m_request_status, json[QString("requestStatus")]);
    m_request_status_isSet = !json[QString("requestStatus")].isNull() && m_request_status_isValid;

    m_request_type_isValid = ::OpenAPI::fromJsonValue(m_request_type, json[QString("requestType")]);
    m_request_type_isSet = !json[QString("requestType")].isNull() && m_request_type_isValid;

    m_send_date_isValid = ::OpenAPI::fromJsonValue(m_send_date, json[QString("sendDate")]);
    m_send_date_isSet = !json[QString("sendDate")].isNull() && m_send_date_isValid;

    m_stats_isValid = ::OpenAPI::fromJsonValue(m_stats, json[QString("stats")]);
    m_stats_isSet = !json[QString("stats")].isNull() && m_stats_isValid;

    m_survey_link_isValid = ::OpenAPI::fromJsonValue(m_survey_link, json[QString("surveyLink")]);
    m_survey_link_isSet = !json[QString("surveyLink")].isNull() && m_survey_link_isValid;
}

QString OAIDistributionsResponse_result_elements_inner::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDistributionsResponse_result_elements_inner::asJsonObject() const {
    QJsonObject obj;
    if (m_created_date_isSet) {
        obj.insert(QString("createdDate"), ::OpenAPI::toJsonValue(m_created_date));
    }
    if (m_custom_headers_isSet) {
        obj.insert(QString("customHeaders"), ::OpenAPI::toJsonValue(m_custom_headers));
    }
    if (m_embedded_data_isSet) {
        obj.insert(QString("embeddedData"), ::OpenAPI::toJsonValue(m_embedded_data));
    }
    if (m_headers.isSet()) {
        obj.insert(QString("headers"), ::OpenAPI::toJsonValue(m_headers));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_message.isSet()) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_modified_date_isSet) {
        obj.insert(QString("modifiedDate"), ::OpenAPI::toJsonValue(m_modified_date));
    }
    if (m_organization_id_isSet) {
        obj.insert(QString("organizationId"), ::OpenAPI::toJsonValue(m_organization_id));
    }
    if (m_owner_id_isSet) {
        obj.insert(QString("ownerId"), ::OpenAPI::toJsonValue(m_owner_id));
    }
    if (m_parent_distribution_id_isSet) {
        obj.insert(QString("parentDistributionId"), ::OpenAPI::toJsonValue(m_parent_distribution_id));
    }
    if (m_recipients.isSet()) {
        obj.insert(QString("recipients"), ::OpenAPI::toJsonValue(m_recipients));
    }
    if (m_request_status_isSet) {
        obj.insert(QString("requestStatus"), ::OpenAPI::toJsonValue(m_request_status));
    }
    if (m_request_type_isSet) {
        obj.insert(QString("requestType"), ::OpenAPI::toJsonValue(m_request_type));
    }
    if (m_send_date_isSet) {
        obj.insert(QString("sendDate"), ::OpenAPI::toJsonValue(m_send_date));
    }
    if (m_stats.isSet()) {
        obj.insert(QString("stats"), ::OpenAPI::toJsonValue(m_stats));
    }
    if (m_survey_link.isSet()) {
        obj.insert(QString("surveyLink"), ::OpenAPI::toJsonValue(m_survey_link));
    }
    return obj;
}

QString OAIDistributionsResponse_result_elements_inner::getCreatedDate() const {
    return m_created_date;
}
void OAIDistributionsResponse_result_elements_inner::setCreatedDate(const QString &created_date) {
    m_created_date = created_date;
    m_created_date_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner::is_created_date_Set() const{
    return m_created_date_isSet;
}

bool OAIDistributionsResponse_result_elements_inner::is_created_date_Valid() const{
    return m_created_date_isValid;
}

OAIObject OAIDistributionsResponse_result_elements_inner::getCustomHeaders() const {
    return m_custom_headers;
}
void OAIDistributionsResponse_result_elements_inner::setCustomHeaders(const OAIObject &custom_headers) {
    m_custom_headers = custom_headers;
    m_custom_headers_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner::is_custom_headers_Set() const{
    return m_custom_headers_isSet;
}

bool OAIDistributionsResponse_result_elements_inner::is_custom_headers_Valid() const{
    return m_custom_headers_isValid;
}

QJsonValue OAIDistributionsResponse_result_elements_inner::getEmbeddedData() const {
    return m_embedded_data;
}
void OAIDistributionsResponse_result_elements_inner::setEmbeddedData(const QJsonValue &embedded_data) {
    m_embedded_data = embedded_data;
    m_embedded_data_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner::is_embedded_data_Set() const{
    return m_embedded_data_isSet;
}

bool OAIDistributionsResponse_result_elements_inner::is_embedded_data_Valid() const{
    return m_embedded_data_isValid;
}

OAIDistributionsResponse_result_elements_inner_headers OAIDistributionsResponse_result_elements_inner::getHeaders() const {
    return m_headers;
}
void OAIDistributionsResponse_result_elements_inner::setHeaders(const OAIDistributionsResponse_result_elements_inner_headers &headers) {
    m_headers = headers;
    m_headers_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner::is_headers_Set() const{
    return m_headers_isSet;
}

bool OAIDistributionsResponse_result_elements_inner::is_headers_Valid() const{
    return m_headers_isValid;
}

QString OAIDistributionsResponse_result_elements_inner::getId() const {
    return m_id;
}
void OAIDistributionsResponse_result_elements_inner::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner::is_id_Set() const{
    return m_id_isSet;
}

bool OAIDistributionsResponse_result_elements_inner::is_id_Valid() const{
    return m_id_isValid;
}

OAIDistributionsResponse_result_elements_inner_message OAIDistributionsResponse_result_elements_inner::getMessage() const {
    return m_message;
}
void OAIDistributionsResponse_result_elements_inner::setMessage(const OAIDistributionsResponse_result_elements_inner_message &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner::is_message_Set() const{
    return m_message_isSet;
}

bool OAIDistributionsResponse_result_elements_inner::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIDistributionsResponse_result_elements_inner::getModifiedDate() const {
    return m_modified_date;
}
void OAIDistributionsResponse_result_elements_inner::setModifiedDate(const QString &modified_date) {
    m_modified_date = modified_date;
    m_modified_date_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner::is_modified_date_Set() const{
    return m_modified_date_isSet;
}

bool OAIDistributionsResponse_result_elements_inner::is_modified_date_Valid() const{
    return m_modified_date_isValid;
}

QString OAIDistributionsResponse_result_elements_inner::getOrganizationId() const {
    return m_organization_id;
}
void OAIDistributionsResponse_result_elements_inner::setOrganizationId(const QString &organization_id) {
    m_organization_id = organization_id;
    m_organization_id_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner::is_organization_id_Set() const{
    return m_organization_id_isSet;
}

bool OAIDistributionsResponse_result_elements_inner::is_organization_id_Valid() const{
    return m_organization_id_isValid;
}

QString OAIDistributionsResponse_result_elements_inner::getOwnerId() const {
    return m_owner_id;
}
void OAIDistributionsResponse_result_elements_inner::setOwnerId(const QString &owner_id) {
    m_owner_id = owner_id;
    m_owner_id_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner::is_owner_id_Set() const{
    return m_owner_id_isSet;
}

bool OAIDistributionsResponse_result_elements_inner::is_owner_id_Valid() const{
    return m_owner_id_isValid;
}

QJsonValue OAIDistributionsResponse_result_elements_inner::getParentDistributionId() const {
    return m_parent_distribution_id;
}
void OAIDistributionsResponse_result_elements_inner::setParentDistributionId(const QJsonValue &parent_distribution_id) {
    m_parent_distribution_id = parent_distribution_id;
    m_parent_distribution_id_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner::is_parent_distribution_id_Set() const{
    return m_parent_distribution_id_isSet;
}

bool OAIDistributionsResponse_result_elements_inner::is_parent_distribution_id_Valid() const{
    return m_parent_distribution_id_isValid;
}

OAIDistributionsResponse_result_elements_inner_recipients OAIDistributionsResponse_result_elements_inner::getRecipients() const {
    return m_recipients;
}
void OAIDistributionsResponse_result_elements_inner::setRecipients(const OAIDistributionsResponse_result_elements_inner_recipients &recipients) {
    m_recipients = recipients;
    m_recipients_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner::is_recipients_Set() const{
    return m_recipients_isSet;
}

bool OAIDistributionsResponse_result_elements_inner::is_recipients_Valid() const{
    return m_recipients_isValid;
}

QString OAIDistributionsResponse_result_elements_inner::getRequestStatus() const {
    return m_request_status;
}
void OAIDistributionsResponse_result_elements_inner::setRequestStatus(const QString &request_status) {
    m_request_status = request_status;
    m_request_status_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner::is_request_status_Set() const{
    return m_request_status_isSet;
}

bool OAIDistributionsResponse_result_elements_inner::is_request_status_Valid() const{
    return m_request_status_isValid;
}

QString OAIDistributionsResponse_result_elements_inner::getRequestType() const {
    return m_request_type;
}
void OAIDistributionsResponse_result_elements_inner::setRequestType(const QString &request_type) {
    m_request_type = request_type;
    m_request_type_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner::is_request_type_Set() const{
    return m_request_type_isSet;
}

bool OAIDistributionsResponse_result_elements_inner::is_request_type_Valid() const{
    return m_request_type_isValid;
}

QString OAIDistributionsResponse_result_elements_inner::getSendDate() const {
    return m_send_date;
}
void OAIDistributionsResponse_result_elements_inner::setSendDate(const QString &send_date) {
    m_send_date = send_date;
    m_send_date_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner::is_send_date_Set() const{
    return m_send_date_isSet;
}

bool OAIDistributionsResponse_result_elements_inner::is_send_date_Valid() const{
    return m_send_date_isValid;
}

OAIDistributionsResponse_result_elements_inner_stats OAIDistributionsResponse_result_elements_inner::getStats() const {
    return m_stats;
}
void OAIDistributionsResponse_result_elements_inner::setStats(const OAIDistributionsResponse_result_elements_inner_stats &stats) {
    m_stats = stats;
    m_stats_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner::is_stats_Set() const{
    return m_stats_isSet;
}

bool OAIDistributionsResponse_result_elements_inner::is_stats_Valid() const{
    return m_stats_isValid;
}

OAIDistributionsResponse_result_elements_inner_surveyLink OAIDistributionsResponse_result_elements_inner::getSurveyLink() const {
    return m_survey_link;
}
void OAIDistributionsResponse_result_elements_inner::setSurveyLink(const OAIDistributionsResponse_result_elements_inner_surveyLink &survey_link) {
    m_survey_link = survey_link;
    m_survey_link_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner::is_survey_link_Set() const{
    return m_survey_link_isSet;
}

bool OAIDistributionsResponse_result_elements_inner::is_survey_link_Valid() const{
    return m_survey_link_isValid;
}

bool OAIDistributionsResponse_result_elements_inner::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_headers_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_embedded_data_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_headers.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_modified_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_organization_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_owner_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_distribution_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipients.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_request_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_send_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_stats.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_survey_link.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDistributionsResponse_result_elements_inner::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_created_date_isValid && m_custom_headers_isValid && m_embedded_data_isValid && m_headers_isValid && m_id_isValid && m_message_isValid && m_modified_date_isValid && m_organization_id_isValid && m_owner_id_isValid && m_parent_distribution_id_isValid && m_recipients_isValid && m_request_status_isValid && m_request_type_isValid && m_send_date_isValid && m_stats_isValid && m_survey_link_isValid && true;
}

} // namespace OpenAPI
