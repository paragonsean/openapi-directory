/**
 * Qualtrics API
 * Work with Qualtrics surveys, distributions and response events
 *
 * The version of the OpenAPI document: 0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDistributionsResponse_result_elements_inner_surveyLink.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDistributionsResponse_result_elements_inner_surveyLink::OAIDistributionsResponse_result_elements_inner_surveyLink(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDistributionsResponse_result_elements_inner_surveyLink::OAIDistributionsResponse_result_elements_inner_surveyLink() {
    this->initializeModel();
}

OAIDistributionsResponse_result_elements_inner_surveyLink::~OAIDistributionsResponse_result_elements_inner_surveyLink() {}

void OAIDistributionsResponse_result_elements_inner_surveyLink::initializeModel() {

    m_expiration_date_isSet = false;
    m_expiration_date_isValid = false;

    m_link_type_isSet = false;
    m_link_type_isValid = false;

    m_survey_id_isSet = false;
    m_survey_id_isValid = false;
}

void OAIDistributionsResponse_result_elements_inner_surveyLink::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDistributionsResponse_result_elements_inner_surveyLink::fromJsonObject(QJsonObject json) {

    m_expiration_date_isValid = ::OpenAPI::fromJsonValue(m_expiration_date, json[QString("expirationDate")]);
    m_expiration_date_isSet = !json[QString("expirationDate")].isNull() && m_expiration_date_isValid;

    m_link_type_isValid = ::OpenAPI::fromJsonValue(m_link_type, json[QString("linkType")]);
    m_link_type_isSet = !json[QString("linkType")].isNull() && m_link_type_isValid;

    m_survey_id_isValid = ::OpenAPI::fromJsonValue(m_survey_id, json[QString("surveyId")]);
    m_survey_id_isSet = !json[QString("surveyId")].isNull() && m_survey_id_isValid;
}

QString OAIDistributionsResponse_result_elements_inner_surveyLink::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDistributionsResponse_result_elements_inner_surveyLink::asJsonObject() const {
    QJsonObject obj;
    if (m_expiration_date_isSet) {
        obj.insert(QString("expirationDate"), ::OpenAPI::toJsonValue(m_expiration_date));
    }
    if (m_link_type_isSet) {
        obj.insert(QString("linkType"), ::OpenAPI::toJsonValue(m_link_type));
    }
    if (m_survey_id_isSet) {
        obj.insert(QString("surveyId"), ::OpenAPI::toJsonValue(m_survey_id));
    }
    return obj;
}

QString OAIDistributionsResponse_result_elements_inner_surveyLink::getExpirationDate() const {
    return m_expiration_date;
}
void OAIDistributionsResponse_result_elements_inner_surveyLink::setExpirationDate(const QString &expiration_date) {
    m_expiration_date = expiration_date;
    m_expiration_date_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner_surveyLink::is_expiration_date_Set() const{
    return m_expiration_date_isSet;
}

bool OAIDistributionsResponse_result_elements_inner_surveyLink::is_expiration_date_Valid() const{
    return m_expiration_date_isValid;
}

QString OAIDistributionsResponse_result_elements_inner_surveyLink::getLinkType() const {
    return m_link_type;
}
void OAIDistributionsResponse_result_elements_inner_surveyLink::setLinkType(const QString &link_type) {
    m_link_type = link_type;
    m_link_type_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner_surveyLink::is_link_type_Set() const{
    return m_link_type_isSet;
}

bool OAIDistributionsResponse_result_elements_inner_surveyLink::is_link_type_Valid() const{
    return m_link_type_isValid;
}

QString OAIDistributionsResponse_result_elements_inner_surveyLink::getSurveyId() const {
    return m_survey_id;
}
void OAIDistributionsResponse_result_elements_inner_surveyLink::setSurveyId(const QString &survey_id) {
    m_survey_id = survey_id;
    m_survey_id_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner_surveyLink::is_survey_id_Set() const{
    return m_survey_id_isSet;
}

bool OAIDistributionsResponse_result_elements_inner_surveyLink::is_survey_id_Valid() const{
    return m_survey_id_isValid;
}

bool OAIDistributionsResponse_result_elements_inner_surveyLink::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_expiration_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_survey_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDistributionsResponse_result_elements_inner_surveyLink::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
