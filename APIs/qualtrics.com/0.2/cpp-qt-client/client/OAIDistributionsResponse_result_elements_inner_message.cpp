/**
 * Qualtrics API
 * Work with Qualtrics surveys, distributions and response events
 *
 * The version of the OpenAPI document: 0.2
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDistributionsResponse_result_elements_inner_message.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDistributionsResponse_result_elements_inner_message::OAIDistributionsResponse_result_elements_inner_message(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDistributionsResponse_result_elements_inner_message::OAIDistributionsResponse_result_elements_inner_message() {
    this->initializeModel();
}

OAIDistributionsResponse_result_elements_inner_message::~OAIDistributionsResponse_result_elements_inner_message() {}

void OAIDistributionsResponse_result_elements_inner_message::initializeModel() {

    m_library_id_isSet = false;
    m_library_id_isValid = false;

    m_message_id_isSet = false;
    m_message_id_isValid = false;

    m_message_text_isSet = false;
    m_message_text_isValid = false;
}

void OAIDistributionsResponse_result_elements_inner_message::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDistributionsResponse_result_elements_inner_message::fromJsonObject(QJsonObject json) {

    m_library_id_isValid = ::OpenAPI::fromJsonValue(m_library_id, json[QString("libraryId")]);
    m_library_id_isSet = !json[QString("libraryId")].isNull() && m_library_id_isValid;

    m_message_id_isValid = ::OpenAPI::fromJsonValue(m_message_id, json[QString("messageId")]);
    m_message_id_isSet = !json[QString("messageId")].isNull() && m_message_id_isValid;

    m_message_text_isValid = ::OpenAPI::fromJsonValue(m_message_text, json[QString("messageText")]);
    m_message_text_isSet = !json[QString("messageText")].isNull() && m_message_text_isValid;
}

QString OAIDistributionsResponse_result_elements_inner_message::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDistributionsResponse_result_elements_inner_message::asJsonObject() const {
    QJsonObject obj;
    if (m_library_id_isSet) {
        obj.insert(QString("libraryId"), ::OpenAPI::toJsonValue(m_library_id));
    }
    if (m_message_id_isSet) {
        obj.insert(QString("messageId"), ::OpenAPI::toJsonValue(m_message_id));
    }
    if (m_message_text_isSet) {
        obj.insert(QString("messageText"), ::OpenAPI::toJsonValue(m_message_text));
    }
    return obj;
}

QJsonValue OAIDistributionsResponse_result_elements_inner_message::getLibraryId() const {
    return m_library_id;
}
void OAIDistributionsResponse_result_elements_inner_message::setLibraryId(const QJsonValue &library_id) {
    m_library_id = library_id;
    m_library_id_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner_message::is_library_id_Set() const{
    return m_library_id_isSet;
}

bool OAIDistributionsResponse_result_elements_inner_message::is_library_id_Valid() const{
    return m_library_id_isValid;
}

QJsonValue OAIDistributionsResponse_result_elements_inner_message::getMessageId() const {
    return m_message_id;
}
void OAIDistributionsResponse_result_elements_inner_message::setMessageId(const QJsonValue &message_id) {
    m_message_id = message_id;
    m_message_id_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner_message::is_message_id_Set() const{
    return m_message_id_isSet;
}

bool OAIDistributionsResponse_result_elements_inner_message::is_message_id_Valid() const{
    return m_message_id_isValid;
}

QJsonValue OAIDistributionsResponse_result_elements_inner_message::getMessageText() const {
    return m_message_text;
}
void OAIDistributionsResponse_result_elements_inner_message::setMessageText(const QJsonValue &message_text) {
    m_message_text = message_text;
    m_message_text_isSet = true;
}

bool OAIDistributionsResponse_result_elements_inner_message::is_message_text_Set() const{
    return m_message_text_isSet;
}

bool OAIDistributionsResponse_result_elements_inner_message::is_message_text_Valid() const{
    return m_message_text_isValid;
}

bool OAIDistributionsResponse_result_elements_inner_message::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_library_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDistributionsResponse_result_elements_inner_message::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
