# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.distributions_response_result_elements_inner_headers import DistributionsResponseResultElementsInnerHeaders
from openapi_server.models.distributions_response_result_elements_inner_message import DistributionsResponseResultElementsInnerMessage
from openapi_server.models.distributions_response_result_elements_inner_recipients import DistributionsResponseResultElementsInnerRecipients
from openapi_server.models.distributions_response_result_elements_inner_stats import DistributionsResponseResultElementsInnerStats
from openapi_server.models.distributions_response_result_elements_inner_survey_link import DistributionsResponseResultElementsInnerSurveyLink
from openapi_server import util


class DistributionsResponseResultElementsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_date: str=None, custom_headers: object=None, embedded_data: object=None, headers: DistributionsResponseResultElementsInnerHeaders=None, id: str=None, message: DistributionsResponseResultElementsInnerMessage=None, modified_date: str=None, organization_id: str=None, owner_id: str=None, parent_distribution_id: object=None, recipients: DistributionsResponseResultElementsInnerRecipients=None, request_status: str=None, request_type: str=None, send_date: str=None, stats: DistributionsResponseResultElementsInnerStats=None, survey_link: DistributionsResponseResultElementsInnerSurveyLink=None):
        """DistributionsResponseResultElementsInner - a model defined in OpenAPI

        :param created_date: The created_date of this DistributionsResponseResultElementsInner.
        :param custom_headers: The custom_headers of this DistributionsResponseResultElementsInner.
        :param embedded_data: The embedded_data of this DistributionsResponseResultElementsInner.
        :param headers: The headers of this DistributionsResponseResultElementsInner.
        :param id: The id of this DistributionsResponseResultElementsInner.
        :param message: The message of this DistributionsResponseResultElementsInner.
        :param modified_date: The modified_date of this DistributionsResponseResultElementsInner.
        :param organization_id: The organization_id of this DistributionsResponseResultElementsInner.
        :param owner_id: The owner_id of this DistributionsResponseResultElementsInner.
        :param parent_distribution_id: The parent_distribution_id of this DistributionsResponseResultElementsInner.
        :param recipients: The recipients of this DistributionsResponseResultElementsInner.
        :param request_status: The request_status of this DistributionsResponseResultElementsInner.
        :param request_type: The request_type of this DistributionsResponseResultElementsInner.
        :param send_date: The send_date of this DistributionsResponseResultElementsInner.
        :param stats: The stats of this DistributionsResponseResultElementsInner.
        :param survey_link: The survey_link of this DistributionsResponseResultElementsInner.
        """
        self.openapi_types = {
            'created_date': str,
            'custom_headers': object,
            'embedded_data': object,
            'headers': DistributionsResponseResultElementsInnerHeaders,
            'id': str,
            'message': DistributionsResponseResultElementsInnerMessage,
            'modified_date': str,
            'organization_id': str,
            'owner_id': str,
            'parent_distribution_id': object,
            'recipients': DistributionsResponseResultElementsInnerRecipients,
            'request_status': str,
            'request_type': str,
            'send_date': str,
            'stats': DistributionsResponseResultElementsInnerStats,
            'survey_link': DistributionsResponseResultElementsInnerSurveyLink
        }

        self.attribute_map = {
            'created_date': 'createdDate',
            'custom_headers': 'customHeaders',
            'embedded_data': 'embeddedData',
            'headers': 'headers',
            'id': 'id',
            'message': 'message',
            'modified_date': 'modifiedDate',
            'organization_id': 'organizationId',
            'owner_id': 'ownerId',
            'parent_distribution_id': 'parentDistributionId',
            'recipients': 'recipients',
            'request_status': 'requestStatus',
            'request_type': 'requestType',
            'send_date': 'sendDate',
            'stats': 'stats',
            'survey_link': 'surveyLink'
        }

        self._created_date = created_date
        self._custom_headers = custom_headers
        self._embedded_data = embedded_data
        self._headers = headers
        self._id = id
        self._message = message
        self._modified_date = modified_date
        self._organization_id = organization_id
        self._owner_id = owner_id
        self._parent_distribution_id = parent_distribution_id
        self._recipients = recipients
        self._request_status = request_status
        self._request_type = request_type
        self._send_date = send_date
        self._stats = stats
        self._survey_link = survey_link

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DistributionsResponseResultElementsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DistributionsResponse_result_elements_inner of this DistributionsResponseResultElementsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_date(self):
        """Gets the created_date of this DistributionsResponseResultElementsInner.


        :return: The created_date of this DistributionsResponseResultElementsInner.
        :rtype: str
        """
        return self._created_date

    @created_date.setter
    def created_date(self, created_date):
        """Sets the created_date of this DistributionsResponseResultElementsInner.


        :param created_date: The created_date of this DistributionsResponseResultElementsInner.
        :type created_date: str
        """
        if created_date is None:
            raise ValueError("Invalid value for `created_date`, must not be `None`")

        self._created_date = created_date

    @property
    def custom_headers(self):
        """Gets the custom_headers of this DistributionsResponseResultElementsInner.


        :return: The custom_headers of this DistributionsResponseResultElementsInner.
        :rtype: object
        """
        return self._custom_headers

    @custom_headers.setter
    def custom_headers(self, custom_headers):
        """Sets the custom_headers of this DistributionsResponseResultElementsInner.


        :param custom_headers: The custom_headers of this DistributionsResponseResultElementsInner.
        :type custom_headers: object
        """
        if custom_headers is None:
            raise ValueError("Invalid value for `custom_headers`, must not be `None`")

        self._custom_headers = custom_headers

    @property
    def embedded_data(self):
        """Gets the embedded_data of this DistributionsResponseResultElementsInner.


        :return: The embedded_data of this DistributionsResponseResultElementsInner.
        :rtype: object
        """
        return self._embedded_data

    @embedded_data.setter
    def embedded_data(self, embedded_data):
        """Sets the embedded_data of this DistributionsResponseResultElementsInner.


        :param embedded_data: The embedded_data of this DistributionsResponseResultElementsInner.
        :type embedded_data: object
        """
        if embedded_data is None:
            raise ValueError("Invalid value for `embedded_data`, must not be `None`")

        self._embedded_data = embedded_data

    @property
    def headers(self):
        """Gets the headers of this DistributionsResponseResultElementsInner.


        :return: The headers of this DistributionsResponseResultElementsInner.
        :rtype: DistributionsResponseResultElementsInnerHeaders
        """
        return self._headers

    @headers.setter
    def headers(self, headers):
        """Sets the headers of this DistributionsResponseResultElementsInner.


        :param headers: The headers of this DistributionsResponseResultElementsInner.
        :type headers: DistributionsResponseResultElementsInnerHeaders
        """
        if headers is None:
            raise ValueError("Invalid value for `headers`, must not be `None`")

        self._headers = headers

    @property
    def id(self):
        """Gets the id of this DistributionsResponseResultElementsInner.


        :return: The id of this DistributionsResponseResultElementsInner.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DistributionsResponseResultElementsInner.


        :param id: The id of this DistributionsResponseResultElementsInner.
        :type id: str
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def message(self):
        """Gets the message of this DistributionsResponseResultElementsInner.


        :return: The message of this DistributionsResponseResultElementsInner.
        :rtype: DistributionsResponseResultElementsInnerMessage
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this DistributionsResponseResultElementsInner.


        :param message: The message of this DistributionsResponseResultElementsInner.
        :type message: DistributionsResponseResultElementsInnerMessage
        """
        if message is None:
            raise ValueError("Invalid value for `message`, must not be `None`")

        self._message = message

    @property
    def modified_date(self):
        """Gets the modified_date of this DistributionsResponseResultElementsInner.


        :return: The modified_date of this DistributionsResponseResultElementsInner.
        :rtype: str
        """
        return self._modified_date

    @modified_date.setter
    def modified_date(self, modified_date):
        """Sets the modified_date of this DistributionsResponseResultElementsInner.


        :param modified_date: The modified_date of this DistributionsResponseResultElementsInner.
        :type modified_date: str
        """
        if modified_date is None:
            raise ValueError("Invalid value for `modified_date`, must not be `None`")

        self._modified_date = modified_date

    @property
    def organization_id(self):
        """Gets the organization_id of this DistributionsResponseResultElementsInner.


        :return: The organization_id of this DistributionsResponseResultElementsInner.
        :rtype: str
        """
        return self._organization_id

    @organization_id.setter
    def organization_id(self, organization_id):
        """Sets the organization_id of this DistributionsResponseResultElementsInner.


        :param organization_id: The organization_id of this DistributionsResponseResultElementsInner.
        :type organization_id: str
        """
        if organization_id is None:
            raise ValueError("Invalid value for `organization_id`, must not be `None`")

        self._organization_id = organization_id

    @property
    def owner_id(self):
        """Gets the owner_id of this DistributionsResponseResultElementsInner.


        :return: The owner_id of this DistributionsResponseResultElementsInner.
        :rtype: str
        """
        return self._owner_id

    @owner_id.setter
    def owner_id(self, owner_id):
        """Sets the owner_id of this DistributionsResponseResultElementsInner.


        :param owner_id: The owner_id of this DistributionsResponseResultElementsInner.
        :type owner_id: str
        """
        if owner_id is None:
            raise ValueError("Invalid value for `owner_id`, must not be `None`")

        self._owner_id = owner_id

    @property
    def parent_distribution_id(self):
        """Gets the parent_distribution_id of this DistributionsResponseResultElementsInner.


        :return: The parent_distribution_id of this DistributionsResponseResultElementsInner.
        :rtype: object
        """
        return self._parent_distribution_id

    @parent_distribution_id.setter
    def parent_distribution_id(self, parent_distribution_id):
        """Sets the parent_distribution_id of this DistributionsResponseResultElementsInner.


        :param parent_distribution_id: The parent_distribution_id of this DistributionsResponseResultElementsInner.
        :type parent_distribution_id: object
        """
        if parent_distribution_id is None:
            raise ValueError("Invalid value for `parent_distribution_id`, must not be `None`")

        self._parent_distribution_id = parent_distribution_id

    @property
    def recipients(self):
        """Gets the recipients of this DistributionsResponseResultElementsInner.


        :return: The recipients of this DistributionsResponseResultElementsInner.
        :rtype: DistributionsResponseResultElementsInnerRecipients
        """
        return self._recipients

    @recipients.setter
    def recipients(self, recipients):
        """Sets the recipients of this DistributionsResponseResultElementsInner.


        :param recipients: The recipients of this DistributionsResponseResultElementsInner.
        :type recipients: DistributionsResponseResultElementsInnerRecipients
        """
        if recipients is None:
            raise ValueError("Invalid value for `recipients`, must not be `None`")

        self._recipients = recipients

    @property
    def request_status(self):
        """Gets the request_status of this DistributionsResponseResultElementsInner.


        :return: The request_status of this DistributionsResponseResultElementsInner.
        :rtype: str
        """
        return self._request_status

    @request_status.setter
    def request_status(self, request_status):
        """Sets the request_status of this DistributionsResponseResultElementsInner.


        :param request_status: The request_status of this DistributionsResponseResultElementsInner.
        :type request_status: str
        """
        if request_status is None:
            raise ValueError("Invalid value for `request_status`, must not be `None`")

        self._request_status = request_status

    @property
    def request_type(self):
        """Gets the request_type of this DistributionsResponseResultElementsInner.


        :return: The request_type of this DistributionsResponseResultElementsInner.
        :rtype: str
        """
        return self._request_type

    @request_type.setter
    def request_type(self, request_type):
        """Sets the request_type of this DistributionsResponseResultElementsInner.


        :param request_type: The request_type of this DistributionsResponseResultElementsInner.
        :type request_type: str
        """
        if request_type is None:
            raise ValueError("Invalid value for `request_type`, must not be `None`")

        self._request_type = request_type

    @property
    def send_date(self):
        """Gets the send_date of this DistributionsResponseResultElementsInner.


        :return: The send_date of this DistributionsResponseResultElementsInner.
        :rtype: str
        """
        return self._send_date

    @send_date.setter
    def send_date(self, send_date):
        """Sets the send_date of this DistributionsResponseResultElementsInner.


        :param send_date: The send_date of this DistributionsResponseResultElementsInner.
        :type send_date: str
        """
        if send_date is None:
            raise ValueError("Invalid value for `send_date`, must not be `None`")

        self._send_date = send_date

    @property
    def stats(self):
        """Gets the stats of this DistributionsResponseResultElementsInner.


        :return: The stats of this DistributionsResponseResultElementsInner.
        :rtype: DistributionsResponseResultElementsInnerStats
        """
        return self._stats

    @stats.setter
    def stats(self, stats):
        """Sets the stats of this DistributionsResponseResultElementsInner.


        :param stats: The stats of this DistributionsResponseResultElementsInner.
        :type stats: DistributionsResponseResultElementsInnerStats
        """
        if stats is None:
            raise ValueError("Invalid value for `stats`, must not be `None`")

        self._stats = stats

    @property
    def survey_link(self):
        """Gets the survey_link of this DistributionsResponseResultElementsInner.


        :return: The survey_link of this DistributionsResponseResultElementsInner.
        :rtype: DistributionsResponseResultElementsInnerSurveyLink
        """
        return self._survey_link

    @survey_link.setter
    def survey_link(self, survey_link):
        """Sets the survey_link of this DistributionsResponseResultElementsInner.


        :param survey_link: The survey_link of this DistributionsResponseResultElementsInner.
        :type survey_link: DistributionsResponseResultElementsInnerSurveyLink
        """
        if survey_link is None:
            raise ValueError("Invalid value for `survey_link`, must not be `None`")

        self._survey_link = survey_link
