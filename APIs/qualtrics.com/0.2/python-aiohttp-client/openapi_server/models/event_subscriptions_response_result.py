# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.event_subscriptions_response_result_meta import EventSubscriptionsResponseResultMeta
from openapi_server.models.event_subscriptions_response_result_result import EventSubscriptionsResponseResultResult
from openapi_server import util


class EventSubscriptionsResponseResult(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, meta: EventSubscriptionsResponseResultMeta=None, result: EventSubscriptionsResponseResultResult=None):
        """EventSubscriptionsResponseResult - a model defined in OpenAPI

        :param meta: The meta of this EventSubscriptionsResponseResult.
        :param result: The result of this EventSubscriptionsResponseResult.
        """
        self.openapi_types = {
            'meta': EventSubscriptionsResponseResultMeta,
            'result': EventSubscriptionsResponseResultResult
        }

        self.attribute_map = {
            'meta': 'meta',
            'result': 'result'
        }

        self._meta = meta
        self._result = result

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EventSubscriptionsResponseResult':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The EventSubscriptionsResponse_result of this EventSubscriptionsResponseResult.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def meta(self):
        """Gets the meta of this EventSubscriptionsResponseResult.


        :return: The meta of this EventSubscriptionsResponseResult.
        :rtype: EventSubscriptionsResponseResultMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this EventSubscriptionsResponseResult.


        :param meta: The meta of this EventSubscriptionsResponseResult.
        :type meta: EventSubscriptionsResponseResultMeta
        """

        self._meta = meta

    @property
    def result(self):
        """Gets the result of this EventSubscriptionsResponseResult.


        :return: The result of this EventSubscriptionsResponseResult.
        :rtype: EventSubscriptionsResponseResultResult
        """
        return self._result

    @result.setter
    def result(self, result):
        """Sets the result of this EventSubscriptionsResponseResult.


        :param result: The result of this EventSubscriptionsResponseResult.
        :type result: EventSubscriptionsResponseResultResult
        """

        self._result = result
