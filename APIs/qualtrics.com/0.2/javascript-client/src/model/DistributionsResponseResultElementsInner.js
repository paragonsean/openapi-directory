/**
 * Qualtrics API
 * Work with Qualtrics surveys, distributions and response events
 *
 * The version of the OpenAPI document: 0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DistributionsResponseResultElementsInnerHeaders from './DistributionsResponseResultElementsInnerHeaders';
import DistributionsResponseResultElementsInnerMessage from './DistributionsResponseResultElementsInnerMessage';
import DistributionsResponseResultElementsInnerRecipients from './DistributionsResponseResultElementsInnerRecipients';
import DistributionsResponseResultElementsInnerStats from './DistributionsResponseResultElementsInnerStats';
import DistributionsResponseResultElementsInnerSurveyLink from './DistributionsResponseResultElementsInnerSurveyLink';

/**
 * The DistributionsResponseResultElementsInner model module.
 * @module model/DistributionsResponseResultElementsInner
 * @version 0.2
 */
class DistributionsResponseResultElementsInner {
    /**
     * Constructs a new <code>DistributionsResponseResultElementsInner</code>.
     * @alias module:model/DistributionsResponseResultElementsInner
     * @param createdDate {String} 
     * @param customHeaders {Object} 
     * @param embeddedData {Object} 
     * @param headers {module:model/DistributionsResponseResultElementsInnerHeaders} 
     * @param id {String} 
     * @param message {module:model/DistributionsResponseResultElementsInnerMessage} 
     * @param modifiedDate {String} 
     * @param organizationId {String} 
     * @param ownerId {String} 
     * @param parentDistributionId {Object} 
     * @param recipients {module:model/DistributionsResponseResultElementsInnerRecipients} 
     * @param requestStatus {String} 
     * @param requestType {String} 
     * @param sendDate {String} 
     * @param stats {module:model/DistributionsResponseResultElementsInnerStats} 
     * @param surveyLink {module:model/DistributionsResponseResultElementsInnerSurveyLink} 
     */
    constructor(createdDate, customHeaders, embeddedData, headers, id, message, modifiedDate, organizationId, ownerId, parentDistributionId, recipients, requestStatus, requestType, sendDate, stats, surveyLink) { 
        
        DistributionsResponseResultElementsInner.initialize(this, createdDate, customHeaders, embeddedData, headers, id, message, modifiedDate, organizationId, ownerId, parentDistributionId, recipients, requestStatus, requestType, sendDate, stats, surveyLink);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, createdDate, customHeaders, embeddedData, headers, id, message, modifiedDate, organizationId, ownerId, parentDistributionId, recipients, requestStatus, requestType, sendDate, stats, surveyLink) { 
        obj['createdDate'] = createdDate;
        obj['customHeaders'] = customHeaders;
        obj['embeddedData'] = embeddedData;
        obj['headers'] = headers;
        obj['id'] = id;
        obj['message'] = message;
        obj['modifiedDate'] = modifiedDate;
        obj['organizationId'] = organizationId;
        obj['ownerId'] = ownerId;
        obj['parentDistributionId'] = parentDistributionId;
        obj['recipients'] = recipients;
        obj['requestStatus'] = requestStatus;
        obj['requestType'] = requestType;
        obj['sendDate'] = sendDate;
        obj['stats'] = stats;
        obj['surveyLink'] = surveyLink;
    }

    /**
     * Constructs a <code>DistributionsResponseResultElementsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DistributionsResponseResultElementsInner} obj Optional instance to populate.
     * @return {module:model/DistributionsResponseResultElementsInner} The populated <code>DistributionsResponseResultElementsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DistributionsResponseResultElementsInner();

            if (data.hasOwnProperty('createdDate')) {
                obj['createdDate'] = ApiClient.convertToType(data['createdDate'], 'String');
            }
            if (data.hasOwnProperty('customHeaders')) {
                obj['customHeaders'] = ApiClient.convertToType(data['customHeaders'], Object);
            }
            if (data.hasOwnProperty('embeddedData')) {
                obj['embeddedData'] = ApiClient.convertToType(data['embeddedData'], Object);
            }
            if (data.hasOwnProperty('headers')) {
                obj['headers'] = DistributionsResponseResultElementsInnerHeaders.constructFromObject(data['headers']);
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('message')) {
                obj['message'] = DistributionsResponseResultElementsInnerMessage.constructFromObject(data['message']);
            }
            if (data.hasOwnProperty('modifiedDate')) {
                obj['modifiedDate'] = ApiClient.convertToType(data['modifiedDate'], 'String');
            }
            if (data.hasOwnProperty('organizationId')) {
                obj['organizationId'] = ApiClient.convertToType(data['organizationId'], 'String');
            }
            if (data.hasOwnProperty('ownerId')) {
                obj['ownerId'] = ApiClient.convertToType(data['ownerId'], 'String');
            }
            if (data.hasOwnProperty('parentDistributionId')) {
                obj['parentDistributionId'] = ApiClient.convertToType(data['parentDistributionId'], Object);
            }
            if (data.hasOwnProperty('recipients')) {
                obj['recipients'] = DistributionsResponseResultElementsInnerRecipients.constructFromObject(data['recipients']);
            }
            if (data.hasOwnProperty('requestStatus')) {
                obj['requestStatus'] = ApiClient.convertToType(data['requestStatus'], 'String');
            }
            if (data.hasOwnProperty('requestType')) {
                obj['requestType'] = ApiClient.convertToType(data['requestType'], 'String');
            }
            if (data.hasOwnProperty('sendDate')) {
                obj['sendDate'] = ApiClient.convertToType(data['sendDate'], 'String');
            }
            if (data.hasOwnProperty('stats')) {
                obj['stats'] = DistributionsResponseResultElementsInnerStats.constructFromObject(data['stats']);
            }
            if (data.hasOwnProperty('surveyLink')) {
                obj['surveyLink'] = DistributionsResponseResultElementsInnerSurveyLink.constructFromObject(data['surveyLink']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DistributionsResponseResultElementsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DistributionsResponseResultElementsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DistributionsResponseResultElementsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['createdDate'] && !(typeof data['createdDate'] === 'string' || data['createdDate'] instanceof String)) {
            throw new Error("Expected the field `createdDate` to be a primitive type in the JSON string but got " + data['createdDate']);
        }
        // validate the optional field `headers`
        if (data['headers']) { // data not null
          DistributionsResponseResultElementsInnerHeaders.validateJSON(data['headers']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // validate the optional field `message`
        if (data['message']) { // data not null
          DistributionsResponseResultElementsInnerMessage.validateJSON(data['message']);
        }
        // ensure the json data is a string
        if (data['modifiedDate'] && !(typeof data['modifiedDate'] === 'string' || data['modifiedDate'] instanceof String)) {
            throw new Error("Expected the field `modifiedDate` to be a primitive type in the JSON string but got " + data['modifiedDate']);
        }
        // ensure the json data is a string
        if (data['organizationId'] && !(typeof data['organizationId'] === 'string' || data['organizationId'] instanceof String)) {
            throw new Error("Expected the field `organizationId` to be a primitive type in the JSON string but got " + data['organizationId']);
        }
        // ensure the json data is a string
        if (data['ownerId'] && !(typeof data['ownerId'] === 'string' || data['ownerId'] instanceof String)) {
            throw new Error("Expected the field `ownerId` to be a primitive type in the JSON string but got " + data['ownerId']);
        }
        // validate the optional field `recipients`
        if (data['recipients']) { // data not null
          DistributionsResponseResultElementsInnerRecipients.validateJSON(data['recipients']);
        }
        // ensure the json data is a string
        if (data['requestStatus'] && !(typeof data['requestStatus'] === 'string' || data['requestStatus'] instanceof String)) {
            throw new Error("Expected the field `requestStatus` to be a primitive type in the JSON string but got " + data['requestStatus']);
        }
        // ensure the json data is a string
        if (data['requestType'] && !(typeof data['requestType'] === 'string' || data['requestType'] instanceof String)) {
            throw new Error("Expected the field `requestType` to be a primitive type in the JSON string but got " + data['requestType']);
        }
        // ensure the json data is a string
        if (data['sendDate'] && !(typeof data['sendDate'] === 'string' || data['sendDate'] instanceof String)) {
            throw new Error("Expected the field `sendDate` to be a primitive type in the JSON string but got " + data['sendDate']);
        }
        // validate the optional field `stats`
        if (data['stats']) { // data not null
          DistributionsResponseResultElementsInnerStats.validateJSON(data['stats']);
        }
        // validate the optional field `surveyLink`
        if (data['surveyLink']) { // data not null
          DistributionsResponseResultElementsInnerSurveyLink.validateJSON(data['surveyLink']);
        }

        return true;
    }


}

DistributionsResponseResultElementsInner.RequiredProperties = ["createdDate", "customHeaders", "embeddedData", "headers", "id", "message", "modifiedDate", "organizationId", "ownerId", "parentDistributionId", "recipients", "requestStatus", "requestType", "sendDate", "stats", "surveyLink"];

/**
 * @member {String} createdDate
 */
DistributionsResponseResultElementsInner.prototype['createdDate'] = undefined;

/**
 * @member {Object} customHeaders
 */
DistributionsResponseResultElementsInner.prototype['customHeaders'] = undefined;

/**
 * @member {Object} embeddedData
 */
DistributionsResponseResultElementsInner.prototype['embeddedData'] = undefined;

/**
 * @member {module:model/DistributionsResponseResultElementsInnerHeaders} headers
 */
DistributionsResponseResultElementsInner.prototype['headers'] = undefined;

/**
 * @member {String} id
 */
DistributionsResponseResultElementsInner.prototype['id'] = undefined;

/**
 * @member {module:model/DistributionsResponseResultElementsInnerMessage} message
 */
DistributionsResponseResultElementsInner.prototype['message'] = undefined;

/**
 * @member {String} modifiedDate
 */
DistributionsResponseResultElementsInner.prototype['modifiedDate'] = undefined;

/**
 * @member {String} organizationId
 */
DistributionsResponseResultElementsInner.prototype['organizationId'] = undefined;

/**
 * @member {String} ownerId
 */
DistributionsResponseResultElementsInner.prototype['ownerId'] = undefined;

/**
 * @member {Object} parentDistributionId
 */
DistributionsResponseResultElementsInner.prototype['parentDistributionId'] = undefined;

/**
 * @member {module:model/DistributionsResponseResultElementsInnerRecipients} recipients
 */
DistributionsResponseResultElementsInner.prototype['recipients'] = undefined;

/**
 * @member {String} requestStatus
 */
DistributionsResponseResultElementsInner.prototype['requestStatus'] = undefined;

/**
 * @member {String} requestType
 */
DistributionsResponseResultElementsInner.prototype['requestType'] = undefined;

/**
 * @member {String} sendDate
 */
DistributionsResponseResultElementsInner.prototype['sendDate'] = undefined;

/**
 * @member {module:model/DistributionsResponseResultElementsInnerStats} stats
 */
DistributionsResponseResultElementsInner.prototype['stats'] = undefined;

/**
 * @member {module:model/DistributionsResponseResultElementsInnerSurveyLink} surveyLink
 */
DistributionsResponseResultElementsInner.prototype['surveyLink'] = undefined;






export default DistributionsResponseResultElementsInner;

