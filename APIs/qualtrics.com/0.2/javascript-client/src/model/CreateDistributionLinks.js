/**
 * Qualtrics API
 * Work with Qualtrics surveys, distributions and response events
 *
 * The version of the OpenAPI document: 0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CreateDistributionLinks model module.
 * @module model/CreateDistributionLinks
 * @version 0.2
 */
class CreateDistributionLinks {
    /**
     * Constructs a new <code>CreateDistributionLinks</code>.
     * @alias module:model/CreateDistributionLinks
     */
    constructor() { 
        
        CreateDistributionLinks.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
        obj['action'] = 'CreateDistribution';
    }

    /**
     * Constructs a <code>CreateDistributionLinks</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CreateDistributionLinks} obj Optional instance to populate.
     * @return {module:model/CreateDistributionLinks} The populated <code>CreateDistributionLinks</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CreateDistributionLinks();

            if (data.hasOwnProperty('action')) {
                obj['action'] = ApiClient.convertToType(data['action'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('expirationDate')) {
                obj['expirationDate'] = ApiClient.convertToType(data['expirationDate'], 'String');
            }
            if (data.hasOwnProperty('linkType')) {
                obj['linkType'] = ApiClient.convertToType(data['linkType'], 'String');
            }
            if (data.hasOwnProperty('mailingListId')) {
                obj['mailingListId'] = ApiClient.convertToType(data['mailingListId'], 'String');
            }
            if (data.hasOwnProperty('surveyId')) {
                obj['surveyId'] = ApiClient.convertToType(data['surveyId'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CreateDistributionLinks</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CreateDistributionLinks</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['action'] && !(typeof data['action'] === 'string' || data['action'] instanceof String)) {
            throw new Error("Expected the field `action` to be a primitive type in the JSON string but got " + data['action']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['expirationDate'] && !(typeof data['expirationDate'] === 'string' || data['expirationDate'] instanceof String)) {
            throw new Error("Expected the field `expirationDate` to be a primitive type in the JSON string but got " + data['expirationDate']);
        }
        // ensure the json data is a string
        if (data['linkType'] && !(typeof data['linkType'] === 'string' || data['linkType'] instanceof String)) {
            throw new Error("Expected the field `linkType` to be a primitive type in the JSON string but got " + data['linkType']);
        }
        // ensure the json data is a string
        if (data['mailingListId'] && !(typeof data['mailingListId'] === 'string' || data['mailingListId'] instanceof String)) {
            throw new Error("Expected the field `mailingListId` to be a primitive type in the JSON string but got " + data['mailingListId']);
        }
        // ensure the json data is a string
        if (data['surveyId'] && !(typeof data['surveyId'] === 'string' || data['surveyId'] instanceof String)) {
            throw new Error("Expected the field `surveyId` to be a primitive type in the JSON string but got " + data['surveyId']);
        }

        return true;
    }


}



/**
 * @member {String} action
 * @default 'CreateDistribution'
 */
CreateDistributionLinks.prototype['action'] = 'CreateDistribution';

/**
 * @member {String} description
 */
CreateDistributionLinks.prototype['description'] = undefined;

/**
 * @member {String} expirationDate
 */
CreateDistributionLinks.prototype['expirationDate'] = undefined;

/**
 * @member {String} linkType
 */
CreateDistributionLinks.prototype['linkType'] = undefined;

/**
 * @member {String} mailingListId
 */
CreateDistributionLinks.prototype['mailingListId'] = undefined;

/**
 * @member {String} surveyId
 */
CreateDistributionLinks.prototype['surveyId'] = undefined;






export default CreateDistributionLinks;

