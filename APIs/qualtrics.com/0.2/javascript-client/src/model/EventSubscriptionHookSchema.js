/**
 * Qualtrics API
 * Work with Qualtrics surveys, distributions and response events
 *
 * The version of the OpenAPI document: 0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import EventSubscriptionHookSchemaFormdataInner from './EventSubscriptionHookSchemaFormdataInner';

/**
 * The EventSubscriptionHookSchema model module.
 * @module model/EventSubscriptionHookSchema
 * @version 0.2
 */
class EventSubscriptionHookSchema {
    /**
     * Constructs a new <code>EventSubscriptionHookSchema</code>.
     * @alias module:model/EventSubscriptionHookSchema
     * @param content {String} 
     * @param contentType {String} 
     */
    constructor(content, contentType) { 
        
        EventSubscriptionHookSchema.initialize(this, content, contentType);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, content, contentType) { 
        obj['$content'] = content || 'x';
        obj['$content-type'] = contentType || 'application/x-www-form-urlencoded';
    }

    /**
     * Constructs a <code>EventSubscriptionHookSchema</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/EventSubscriptionHookSchema} obj Optional instance to populate.
     * @return {module:model/EventSubscriptionHookSchema} The populated <code>EventSubscriptionHookSchema</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new EventSubscriptionHookSchema();

            if (data.hasOwnProperty('$content')) {
                obj['$content'] = ApiClient.convertToType(data['$content'], 'String');
            }
            if (data.hasOwnProperty('$content-type')) {
                obj['$content-type'] = ApiClient.convertToType(data['$content-type'], 'String');
            }
            if (data.hasOwnProperty('$formdata')) {
                obj['$formdata'] = ApiClient.convertToType(data['$formdata'], [EventSubscriptionHookSchemaFormdataInner]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>EventSubscriptionHookSchema</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>EventSubscriptionHookSchema</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of EventSubscriptionHookSchema.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['$content'] && !(typeof data['$content'] === 'string' || data['$content'] instanceof String)) {
            throw new Error("Expected the field `$content` to be a primitive type in the JSON string but got " + data['$content']);
        }
        // ensure the json data is a string
        if (data['$content-type'] && !(typeof data['$content-type'] === 'string' || data['$content-type'] instanceof String)) {
            throw new Error("Expected the field `$content-type` to be a primitive type in the JSON string but got " + data['$content-type']);
        }
        if (data['$formdata']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['$formdata'])) {
                throw new Error("Expected the field `$formdata` to be an array in the JSON data but got " + data['$formdata']);
            }
            // validate the optional field `$formdata` (array)
            for (const item of data['$formdata']) {
                EventSubscriptionHookSchemaFormdataInner.validateJSON(item);
            };
        }

        return true;
    }


}

EventSubscriptionHookSchema.RequiredProperties = ["$content", "$content-type"];

/**
 * @member {String} $content
 * @default 'x'
 */
EventSubscriptionHookSchema.prototype['$content'] = 'x';

/**
 * @member {String} $content-type
 * @default 'application/x-www-form-urlencoded'
 */
EventSubscriptionHookSchema.prototype['$content-type'] = 'application/x-www-form-urlencoded';

/**
 * @member {Array.<module:model/EventSubscriptionHookSchemaFormdataInner>} $formdata
 */
EventSubscriptionHookSchema.prototype['$formdata'] = undefined;






export default EventSubscriptionHookSchema;

