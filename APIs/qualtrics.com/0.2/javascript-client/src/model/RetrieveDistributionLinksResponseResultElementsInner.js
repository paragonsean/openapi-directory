/**
 * Qualtrics API
 * Work with Qualtrics surveys, distributions and response events
 *
 * The version of the OpenAPI document: 0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RetrieveDistributionLinksResponseResultElementsInner model module.
 * @module model/RetrieveDistributionLinksResponseResultElementsInner
 * @version 0.2
 */
class RetrieveDistributionLinksResponseResultElementsInner {
    /**
     * Constructs a new <code>RetrieveDistributionLinksResponseResultElementsInner</code>.
     * @alias module:model/RetrieveDistributionLinksResponseResultElementsInner
     * @param contactId {String} 
     * @param email {String} 
     * @param exceededContactFrequency {Boolean} 
     * @param externalDataReference {Object} 
     * @param firstName {String} 
     * @param lastName {String} 
     * @param link {String} 
     * @param linkExpiration {String} 
     * @param status {String} 
     * @param transactionId {Object} 
     * @param unsubscribed {Boolean} 
     */
    constructor(contactId, email, exceededContactFrequency, externalDataReference, firstName, lastName, link, linkExpiration, status, transactionId, unsubscribed) { 
        
        RetrieveDistributionLinksResponseResultElementsInner.initialize(this, contactId, email, exceededContactFrequency, externalDataReference, firstName, lastName, link, linkExpiration, status, transactionId, unsubscribed);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, contactId, email, exceededContactFrequency, externalDataReference, firstName, lastName, link, linkExpiration, status, transactionId, unsubscribed) { 
        obj['contactId'] = contactId;
        obj['email'] = email;
        obj['exceededContactFrequency'] = exceededContactFrequency;
        obj['externalDataReference'] = externalDataReference;
        obj['firstName'] = firstName;
        obj['lastName'] = lastName;
        obj['link'] = link;
        obj['linkExpiration'] = linkExpiration;
        obj['status'] = status;
        obj['transactionId'] = transactionId;
        obj['unsubscribed'] = unsubscribed;
    }

    /**
     * Constructs a <code>RetrieveDistributionLinksResponseResultElementsInner</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RetrieveDistributionLinksResponseResultElementsInner} obj Optional instance to populate.
     * @return {module:model/RetrieveDistributionLinksResponseResultElementsInner} The populated <code>RetrieveDistributionLinksResponseResultElementsInner</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RetrieveDistributionLinksResponseResultElementsInner();

            if (data.hasOwnProperty('contactId')) {
                obj['contactId'] = ApiClient.convertToType(data['contactId'], 'String');
            }
            if (data.hasOwnProperty('email')) {
                obj['email'] = ApiClient.convertToType(data['email'], 'String');
            }
            if (data.hasOwnProperty('exceededContactFrequency')) {
                obj['exceededContactFrequency'] = ApiClient.convertToType(data['exceededContactFrequency'], 'Boolean');
            }
            if (data.hasOwnProperty('externalDataReference')) {
                obj['externalDataReference'] = ApiClient.convertToType(data['externalDataReference'], Object);
            }
            if (data.hasOwnProperty('firstName')) {
                obj['firstName'] = ApiClient.convertToType(data['firstName'], 'String');
            }
            if (data.hasOwnProperty('lastName')) {
                obj['lastName'] = ApiClient.convertToType(data['lastName'], 'String');
            }
            if (data.hasOwnProperty('link')) {
                obj['link'] = ApiClient.convertToType(data['link'], 'String');
            }
            if (data.hasOwnProperty('linkExpiration')) {
                obj['linkExpiration'] = ApiClient.convertToType(data['linkExpiration'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('transactionId')) {
                obj['transactionId'] = ApiClient.convertToType(data['transactionId'], Object);
            }
            if (data.hasOwnProperty('unsubscribed')) {
                obj['unsubscribed'] = ApiClient.convertToType(data['unsubscribed'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RetrieveDistributionLinksResponseResultElementsInner</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RetrieveDistributionLinksResponseResultElementsInner</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RetrieveDistributionLinksResponseResultElementsInner.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['contactId'] && !(typeof data['contactId'] === 'string' || data['contactId'] instanceof String)) {
            throw new Error("Expected the field `contactId` to be a primitive type in the JSON string but got " + data['contactId']);
        }
        // ensure the json data is a string
        if (data['email'] && !(typeof data['email'] === 'string' || data['email'] instanceof String)) {
            throw new Error("Expected the field `email` to be a primitive type in the JSON string but got " + data['email']);
        }
        // ensure the json data is a string
        if (data['firstName'] && !(typeof data['firstName'] === 'string' || data['firstName'] instanceof String)) {
            throw new Error("Expected the field `firstName` to be a primitive type in the JSON string but got " + data['firstName']);
        }
        // ensure the json data is a string
        if (data['lastName'] && !(typeof data['lastName'] === 'string' || data['lastName'] instanceof String)) {
            throw new Error("Expected the field `lastName` to be a primitive type in the JSON string but got " + data['lastName']);
        }
        // ensure the json data is a string
        if (data['link'] && !(typeof data['link'] === 'string' || data['link'] instanceof String)) {
            throw new Error("Expected the field `link` to be a primitive type in the JSON string but got " + data['link']);
        }
        // ensure the json data is a string
        if (data['linkExpiration'] && !(typeof data['linkExpiration'] === 'string' || data['linkExpiration'] instanceof String)) {
            throw new Error("Expected the field `linkExpiration` to be a primitive type in the JSON string but got " + data['linkExpiration']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

RetrieveDistributionLinksResponseResultElementsInner.RequiredProperties = ["contactId", "email", "exceededContactFrequency", "externalDataReference", "firstName", "lastName", "link", "linkExpiration", "status", "transactionId", "unsubscribed"];

/**
 * @member {String} contactId
 */
RetrieveDistributionLinksResponseResultElementsInner.prototype['contactId'] = undefined;

/**
 * @member {String} email
 */
RetrieveDistributionLinksResponseResultElementsInner.prototype['email'] = undefined;

/**
 * @member {Boolean} exceededContactFrequency
 */
RetrieveDistributionLinksResponseResultElementsInner.prototype['exceededContactFrequency'] = undefined;

/**
 * @member {Object} externalDataReference
 */
RetrieveDistributionLinksResponseResultElementsInner.prototype['externalDataReference'] = undefined;

/**
 * @member {String} firstName
 */
RetrieveDistributionLinksResponseResultElementsInner.prototype['firstName'] = undefined;

/**
 * @member {String} lastName
 */
RetrieveDistributionLinksResponseResultElementsInner.prototype['lastName'] = undefined;

/**
 * @member {String} link
 */
RetrieveDistributionLinksResponseResultElementsInner.prototype['link'] = undefined;

/**
 * @member {String} linkExpiration
 */
RetrieveDistributionLinksResponseResultElementsInner.prototype['linkExpiration'] = undefined;

/**
 * @member {String} status
 */
RetrieveDistributionLinksResponseResultElementsInner.prototype['status'] = undefined;

/**
 * @member {Object} transactionId
 */
RetrieveDistributionLinksResponseResultElementsInner.prototype['transactionId'] = undefined;

/**
 * @member {Boolean} unsubscribed
 */
RetrieveDistributionLinksResponseResultElementsInner.prototype['unsubscribed'] = undefined;






export default RetrieveDistributionLinksResponseResultElementsInner;

