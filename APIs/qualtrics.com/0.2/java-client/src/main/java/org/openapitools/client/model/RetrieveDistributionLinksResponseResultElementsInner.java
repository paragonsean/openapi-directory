/*
 * Qualtrics API
 * Work with Qualtrics surveys, distributions and response events
 *
 * The version of the OpenAPI document: 0.2
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * RetrieveDistributionLinksResponseResultElementsInner
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T11:23:42.420677-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class RetrieveDistributionLinksResponseResultElementsInner {
  public static final String SERIALIZED_NAME_CONTACT_ID = "contactId";
  @SerializedName(SERIALIZED_NAME_CONTACT_ID)
  private String contactId;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public static final String SERIALIZED_NAME_EXCEEDED_CONTACT_FREQUENCY = "exceededContactFrequency";
  @SerializedName(SERIALIZED_NAME_EXCEEDED_CONTACT_FREQUENCY)
  private Boolean exceededContactFrequency;

  public static final String SERIALIZED_NAME_EXTERNAL_DATA_REFERENCE = "externalDataReference";
  @SerializedName(SERIALIZED_NAME_EXTERNAL_DATA_REFERENCE)
  private Object externalDataReference = null;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_LINK = "link";
  @SerializedName(SERIALIZED_NAME_LINK)
  private String link;

  public static final String SERIALIZED_NAME_LINK_EXPIRATION = "linkExpiration";
  @SerializedName(SERIALIZED_NAME_LINK_EXPIRATION)
  private String linkExpiration;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_TRANSACTION_ID = "transactionId";
  @SerializedName(SERIALIZED_NAME_TRANSACTION_ID)
  private Object transactionId = null;

  public static final String SERIALIZED_NAME_UNSUBSCRIBED = "unsubscribed";
  @SerializedName(SERIALIZED_NAME_UNSUBSCRIBED)
  private Boolean unsubscribed;

  public RetrieveDistributionLinksResponseResultElementsInner() {
  }

  public RetrieveDistributionLinksResponseResultElementsInner contactId(String contactId) {
    this.contactId = contactId;
    return this;
  }

  /**
   * Get contactId
   * @return contactId
   */
  @javax.annotation.Nonnull
  public String getContactId() {
    return contactId;
  }

  public void setContactId(String contactId) {
    this.contactId = contactId;
  }


  public RetrieveDistributionLinksResponseResultElementsInner email(String email) {
    this.email = email;
    return this;
  }

  /**
   * Get email
   * @return email
   */
  @javax.annotation.Nonnull
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  public RetrieveDistributionLinksResponseResultElementsInner exceededContactFrequency(Boolean exceededContactFrequency) {
    this.exceededContactFrequency = exceededContactFrequency;
    return this;
  }

  /**
   * Get exceededContactFrequency
   * @return exceededContactFrequency
   */
  @javax.annotation.Nonnull
  public Boolean getExceededContactFrequency() {
    return exceededContactFrequency;
  }

  public void setExceededContactFrequency(Boolean exceededContactFrequency) {
    this.exceededContactFrequency = exceededContactFrequency;
  }


  public RetrieveDistributionLinksResponseResultElementsInner externalDataReference(Object externalDataReference) {
    this.externalDataReference = externalDataReference;
    return this;
  }

  /**
   * Get externalDataReference
   * @return externalDataReference
   */
  @javax.annotation.Nullable
  public Object getExternalDataReference() {
    return externalDataReference;
  }

  public void setExternalDataReference(Object externalDataReference) {
    this.externalDataReference = externalDataReference;
  }


  public RetrieveDistributionLinksResponseResultElementsInner firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

  /**
   * Get firstName
   * @return firstName
   */
  @javax.annotation.Nonnull
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }


  public RetrieveDistributionLinksResponseResultElementsInner lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  /**
   * Get lastName
   * @return lastName
   */
  @javax.annotation.Nonnull
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }


  public RetrieveDistributionLinksResponseResultElementsInner link(String link) {
    this.link = link;
    return this;
  }

  /**
   * Get link
   * @return link
   */
  @javax.annotation.Nonnull
  public String getLink() {
    return link;
  }

  public void setLink(String link) {
    this.link = link;
  }


  public RetrieveDistributionLinksResponseResultElementsInner linkExpiration(String linkExpiration) {
    this.linkExpiration = linkExpiration;
    return this;
  }

  /**
   * Get linkExpiration
   * @return linkExpiration
   */
  @javax.annotation.Nonnull
  public String getLinkExpiration() {
    return linkExpiration;
  }

  public void setLinkExpiration(String linkExpiration) {
    this.linkExpiration = linkExpiration;
  }


  public RetrieveDistributionLinksResponseResultElementsInner status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nonnull
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }


  public RetrieveDistributionLinksResponseResultElementsInner transactionId(Object transactionId) {
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Get transactionId
   * @return transactionId
   */
  @javax.annotation.Nullable
  public Object getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(Object transactionId) {
    this.transactionId = transactionId;
  }


  public RetrieveDistributionLinksResponseResultElementsInner unsubscribed(Boolean unsubscribed) {
    this.unsubscribed = unsubscribed;
    return this;
  }

  /**
   * Get unsubscribed
   * @return unsubscribed
   */
  @javax.annotation.Nonnull
  public Boolean getUnsubscribed() {
    return unsubscribed;
  }

  public void setUnsubscribed(Boolean unsubscribed) {
    this.unsubscribed = unsubscribed;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RetrieveDistributionLinksResponseResultElementsInner retrieveDistributionLinksResponseResultElementsInner = (RetrieveDistributionLinksResponseResultElementsInner) o;
    return Objects.equals(this.contactId, retrieveDistributionLinksResponseResultElementsInner.contactId) &&
        Objects.equals(this.email, retrieveDistributionLinksResponseResultElementsInner.email) &&
        Objects.equals(this.exceededContactFrequency, retrieveDistributionLinksResponseResultElementsInner.exceededContactFrequency) &&
        Objects.equals(this.externalDataReference, retrieveDistributionLinksResponseResultElementsInner.externalDataReference) &&
        Objects.equals(this.firstName, retrieveDistributionLinksResponseResultElementsInner.firstName) &&
        Objects.equals(this.lastName, retrieveDistributionLinksResponseResultElementsInner.lastName) &&
        Objects.equals(this.link, retrieveDistributionLinksResponseResultElementsInner.link) &&
        Objects.equals(this.linkExpiration, retrieveDistributionLinksResponseResultElementsInner.linkExpiration) &&
        Objects.equals(this.status, retrieveDistributionLinksResponseResultElementsInner.status) &&
        Objects.equals(this.transactionId, retrieveDistributionLinksResponseResultElementsInner.transactionId) &&
        Objects.equals(this.unsubscribed, retrieveDistributionLinksResponseResultElementsInner.unsubscribed);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contactId, email, exceededContactFrequency, externalDataReference, firstName, lastName, link, linkExpiration, status, transactionId, unsubscribed);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RetrieveDistributionLinksResponseResultElementsInner {\n");
    sb.append("    contactId: ").append(toIndentedString(contactId)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    exceededContactFrequency: ").append(toIndentedString(exceededContactFrequency)).append("\n");
    sb.append("    externalDataReference: ").append(toIndentedString(externalDataReference)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    link: ").append(toIndentedString(link)).append("\n");
    sb.append("    linkExpiration: ").append(toIndentedString(linkExpiration)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    unsubscribed: ").append(toIndentedString(unsubscribed)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("contactId");
    openapiFields.add("email");
    openapiFields.add("exceededContactFrequency");
    openapiFields.add("externalDataReference");
    openapiFields.add("firstName");
    openapiFields.add("lastName");
    openapiFields.add("link");
    openapiFields.add("linkExpiration");
    openapiFields.add("status");
    openapiFields.add("transactionId");
    openapiFields.add("unsubscribed");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("contactId");
    openapiRequiredFields.add("email");
    openapiRequiredFields.add("exceededContactFrequency");
    openapiRequiredFields.add("externalDataReference");
    openapiRequiredFields.add("firstName");
    openapiRequiredFields.add("lastName");
    openapiRequiredFields.add("link");
    openapiRequiredFields.add("linkExpiration");
    openapiRequiredFields.add("status");
    openapiRequiredFields.add("transactionId");
    openapiRequiredFields.add("unsubscribed");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to RetrieveDistributionLinksResponseResultElementsInner
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!RetrieveDistributionLinksResponseResultElementsInner.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in RetrieveDistributionLinksResponseResultElementsInner is not found in the empty JSON string", RetrieveDistributionLinksResponseResultElementsInner.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!RetrieveDistributionLinksResponseResultElementsInner.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `RetrieveDistributionLinksResponseResultElementsInner` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : RetrieveDistributionLinksResponseResultElementsInner.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if (!jsonObj.get("contactId").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `contactId` to be a primitive type in the JSON string but got `%s`", jsonObj.get("contactId").toString()));
      }
      if (!jsonObj.get("email").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `email` to be a primitive type in the JSON string but got `%s`", jsonObj.get("email").toString()));
      }
      if (!jsonObj.get("firstName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `firstName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("firstName").toString()));
      }
      if (!jsonObj.get("lastName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `lastName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("lastName").toString()));
      }
      if (!jsonObj.get("link").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `link` to be a primitive type in the JSON string but got `%s`", jsonObj.get("link").toString()));
      }
      if (!jsonObj.get("linkExpiration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `linkExpiration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("linkExpiration").toString()));
      }
      if (!jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RetrieveDistributionLinksResponseResultElementsInner.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RetrieveDistributionLinksResponseResultElementsInner' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RetrieveDistributionLinksResponseResultElementsInner> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RetrieveDistributionLinksResponseResultElementsInner.class));

       return (TypeAdapter<T>) new TypeAdapter<RetrieveDistributionLinksResponseResultElementsInner>() {
           @Override
           public void write(JsonWriter out, RetrieveDistributionLinksResponseResultElementsInner value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RetrieveDistributionLinksResponseResultElementsInner read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of RetrieveDistributionLinksResponseResultElementsInner given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of RetrieveDistributionLinksResponseResultElementsInner
   * @throws IOException if the JSON string is invalid with respect to RetrieveDistributionLinksResponseResultElementsInner
   */
  public static RetrieveDistributionLinksResponseResultElementsInner fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RetrieveDistributionLinksResponseResultElementsInner.class);
  }

  /**
   * Convert an instance of RetrieveDistributionLinksResponseResultElementsInner to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

