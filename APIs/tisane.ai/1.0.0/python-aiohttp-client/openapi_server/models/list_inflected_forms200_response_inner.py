# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_inflected_forms200_response_inner_features_inner import ListInflectedForms200ResponseInnerFeaturesInner
from openapi_server import util


class ListInflectedForms200ResponseInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, features: List[ListInflectedForms200ResponseInnerFeaturesInner]=None, is_lemma: bool=None, text: str=None):
        """ListInflectedForms200ResponseInner - a model defined in OpenAPI

        :param features: The features of this ListInflectedForms200ResponseInner.
        :param is_lemma: The is_lemma of this ListInflectedForms200ResponseInner.
        :param text: The text of this ListInflectedForms200ResponseInner.
        """
        self.openapi_types = {
            'features': List[ListInflectedForms200ResponseInnerFeaturesInner],
            'is_lemma': bool,
            'text': str
        }

        self.attribute_map = {
            'features': 'features',
            'is_lemma': 'isLemma',
            'text': 'text'
        }

        self._features = features
        self._is_lemma = is_lemma
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListInflectedForms200ResponseInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The listInflectedForms_200_response_inner of this ListInflectedForms200ResponseInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def features(self):
        """Gets the features of this ListInflectedForms200ResponseInner.


        :return: The features of this ListInflectedForms200ResponseInner.
        :rtype: List[ListInflectedForms200ResponseInnerFeaturesInner]
        """
        return self._features

    @features.setter
    def features(self, features):
        """Sets the features of this ListInflectedForms200ResponseInner.


        :param features: The features of this ListInflectedForms200ResponseInner.
        :type features: List[ListInflectedForms200ResponseInnerFeaturesInner]
        """

        self._features = features

    @property
    def is_lemma(self):
        """Gets the is_lemma of this ListInflectedForms200ResponseInner.


        :return: The is_lemma of this ListInflectedForms200ResponseInner.
        :rtype: bool
        """
        return self._is_lemma

    @is_lemma.setter
    def is_lemma(self, is_lemma):
        """Sets the is_lemma of this ListInflectedForms200ResponseInner.


        :param is_lemma: The is_lemma of this ListInflectedForms200ResponseInner.
        :type is_lemma: bool
        """

        self._is_lemma = is_lemma

    @property
    def text(self):
        """Gets the text of this ListInflectedForms200ResponseInner.


        :return: The text of this ListInflectedForms200ResponseInner.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this ListInflectedForms200ResponseInner.


        :param text: The text of this ListInflectedForms200ResponseInner.
        :type text: str
        """

        self._text = text
