# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.variation_evidence import VariationEvidence
from openapi_server.models.variation_xref import VariationXref
from openapi_server import util


class VariationAssociation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, evidences: List[VariationEvidence]=None, name: str=None, xrefs: List[VariationXref]=None):
        """VariationAssociation - a model defined in OpenAPI

        :param description: The description of this VariationAssociation.
        :param evidences: The evidences of this VariationAssociation.
        :param name: The name of this VariationAssociation.
        :param xrefs: The xrefs of this VariationAssociation.
        """
        self.openapi_types = {
            'description': str,
            'evidences': List[VariationEvidence],
            'name': str,
            'xrefs': List[VariationXref]
        }

        self.attribute_map = {
            'description': 'description',
            'evidences': 'evidences',
            'name': 'name',
            'xrefs': 'xrefs'
        }

        self._description = description
        self._evidences = evidences
        self._name = name
        self._xrefs = xrefs

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VariationAssociation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VariationAssociation of this VariationAssociation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this VariationAssociation.


        :return: The description of this VariationAssociation.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this VariationAssociation.


        :param description: The description of this VariationAssociation.
        :type description: str
        """

        self._description = description

    @property
    def evidences(self):
        """Gets the evidences of this VariationAssociation.


        :return: The evidences of this VariationAssociation.
        :rtype: List[VariationEvidence]
        """
        return self._evidences

    @evidences.setter
    def evidences(self, evidences):
        """Sets the evidences of this VariationAssociation.


        :param evidences: The evidences of this VariationAssociation.
        :type evidences: List[VariationEvidence]
        """

        self._evidences = evidences

    @property
    def name(self):
        """Gets the name of this VariationAssociation.


        :return: The name of this VariationAssociation.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this VariationAssociation.


        :param name: The name of this VariationAssociation.
        :type name: str
        """

        self._name = name

    @property
    def xrefs(self):
        """Gets the xrefs of this VariationAssociation.


        :return: The xrefs of this VariationAssociation.
        :rtype: List[VariationXref]
        """
        return self._xrefs

    @xrefs.setter
    def xrefs(self, xrefs):
        """Sets the xrefs of this VariationAssociation.


        :param xrefs: The xrefs of this VariationAssociation.
        :type xrefs: List[VariationXref]
        """

        self._xrefs = xrefs
