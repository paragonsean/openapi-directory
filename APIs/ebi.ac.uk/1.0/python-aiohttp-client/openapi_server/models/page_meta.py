# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PageMeta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_elements: int=None, current_page: int=None, limit: int=None, total_elements: int=None, total_pages: int=None):
        """PageMeta - a model defined in OpenAPI

        :param current_elements: The current_elements of this PageMeta.
        :param current_page: The current_page of this PageMeta.
        :param limit: The limit of this PageMeta.
        :param total_elements: The total_elements of this PageMeta.
        :param total_pages: The total_pages of this PageMeta.
        """
        self.openapi_types = {
            'current_elements': int,
            'current_page': int,
            'limit': int,
            'total_elements': int,
            'total_pages': int
        }

        self.attribute_map = {
            'current_elements': 'currentElements',
            'current_page': 'currentPage',
            'limit': 'limit',
            'total_elements': 'totalElements',
            'total_pages': 'totalPages'
        }

        self._current_elements = current_elements
        self._current_page = current_page
        self._limit = limit
        self._total_elements = total_elements
        self._total_pages = total_pages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PageMeta':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PageMeta of this PageMeta.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_elements(self):
        """Gets the current_elements of this PageMeta.


        :return: The current_elements of this PageMeta.
        :rtype: int
        """
        return self._current_elements

    @current_elements.setter
    def current_elements(self, current_elements):
        """Sets the current_elements of this PageMeta.


        :param current_elements: The current_elements of this PageMeta.
        :type current_elements: int
        """

        self._current_elements = current_elements

    @property
    def current_page(self):
        """Gets the current_page of this PageMeta.


        :return: The current_page of this PageMeta.
        :rtype: int
        """
        return self._current_page

    @current_page.setter
    def current_page(self, current_page):
        """Sets the current_page of this PageMeta.


        :param current_page: The current_page of this PageMeta.
        :type current_page: int
        """

        self._current_page = current_page

    @property
    def limit(self):
        """Gets the limit of this PageMeta.


        :return: The limit of this PageMeta.
        :rtype: int
        """
        return self._limit

    @limit.setter
    def limit(self, limit):
        """Sets the limit of this PageMeta.


        :param limit: The limit of this PageMeta.
        :type limit: int
        """

        self._limit = limit

    @property
    def total_elements(self):
        """Gets the total_elements of this PageMeta.


        :return: The total_elements of this PageMeta.
        :rtype: int
        """
        return self._total_elements

    @total_elements.setter
    def total_elements(self, total_elements):
        """Sets the total_elements of this PageMeta.


        :param total_elements: The total_elements of this PageMeta.
        :type total_elements: int
        """

        self._total_elements = total_elements

    @property
    def total_pages(self):
        """Gets the total_pages of this PageMeta.


        :return: The total_pages of this PageMeta.
        :rtype: int
        """
        return self._total_pages

    @total_pages.setter
    def total_pages(self, total_pages):
        """Sets the total_pages of this PageMeta.


        :param total_pages: The total_pages of this PageMeta.
        :type total_pages: int
        """

        self._total_pages = total_pages
