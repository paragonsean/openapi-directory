# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.page_meta import PageMeta
from openapi_server.models.protein import Protein
from openapi_server import util


class Proteins(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, page_meta: PageMeta=None, proteins: List[Protein]=None):
        """Proteins - a model defined in OpenAPI

        :param page_meta: The page_meta of this Proteins.
        :param proteins: The proteins of this Proteins.
        """
        self.openapi_types = {
            'page_meta': PageMeta,
            'proteins': List[Protein]
        }

        self.attribute_map = {
            'page_meta': 'pageMeta',
            'proteins': 'proteins'
        }

        self._page_meta = page_meta
        self._proteins = proteins

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Proteins':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Proteins of this Proteins.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def page_meta(self):
        """Gets the page_meta of this Proteins.


        :return: The page_meta of this Proteins.
        :rtype: PageMeta
        """
        return self._page_meta

    @page_meta.setter
    def page_meta(self, page_meta):
        """Sets the page_meta of this Proteins.


        :param page_meta: The page_meta of this Proteins.
        :type page_meta: PageMeta
        """

        self._page_meta = page_meta

    @property
    def proteins(self):
        """Gets the proteins of this Proteins.


        :return: The proteins of this Proteins.
        :rtype: List[Protein]
        """
        return self._proteins

    @proteins.setter
    def proteins(self, proteins):
        """Sets the proteins of this Proteins.


        :param proteins: The proteins of this Proteins.
        :type proteins: List[Protein]
        """

        self._proteins = proteins
