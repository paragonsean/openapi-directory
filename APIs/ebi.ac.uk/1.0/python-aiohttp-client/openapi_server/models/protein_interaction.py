# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ProteinInteraction(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, interaction_type: str=None, interactors: List[str]=None):
        """ProteinInteraction - a model defined in OpenAPI

        :param id: The id of this ProteinInteraction.
        :param interaction_type: The interaction_type of this ProteinInteraction.
        :param interactors: The interactors of this ProteinInteraction.
        """
        self.openapi_types = {
            'id': str,
            'interaction_type': str,
            'interactors': List[str]
        }

        self.attribute_map = {
            'id': 'id',
            'interaction_type': 'interaction_type',
            'interactors': 'interactors'
        }

        self._id = id
        self._interaction_type = interaction_type
        self._interactors = interactors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProteinInteraction':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ProteinInteraction of this ProteinInteraction.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this ProteinInteraction.


        :return: The id of this ProteinInteraction.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ProteinInteraction.


        :param id: The id of this ProteinInteraction.
        :type id: str
        """

        self._id = id

    @property
    def interaction_type(self):
        """Gets the interaction_type of this ProteinInteraction.


        :return: The interaction_type of this ProteinInteraction.
        :rtype: str
        """
        return self._interaction_type

    @interaction_type.setter
    def interaction_type(self, interaction_type):
        """Sets the interaction_type of this ProteinInteraction.


        :param interaction_type: The interaction_type of this ProteinInteraction.
        :type interaction_type: str
        """

        self._interaction_type = interaction_type

    @property
    def interactors(self):
        """Gets the interactors of this ProteinInteraction.


        :return: The interactors of this ProteinInteraction.
        :rtype: List[str]
        """
        return self._interactors

    @interactors.setter
    def interactors(self, interactors):
        """Sets the interactors of this ProteinInteraction.


        :param interactors: The interactors of this ProteinInteraction.
        :type interactors: List[str]
        """

        self._interactors = interactors
