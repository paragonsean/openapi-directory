# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Pfam(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entry_name: str=None, id: str=None):
        """Pfam - a model defined in OpenAPI

        :param entry_name: The entry_name of this Pfam.
        :param id: The id of this Pfam.
        """
        self.openapi_types = {
            'entry_name': str,
            'id': str
        }

        self.attribute_map = {
            'entry_name': 'entryName',
            'id': 'id'
        }

        self._entry_name = entry_name
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Pfam':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Pfam of this Pfam.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entry_name(self):
        """Gets the entry_name of this Pfam.


        :return: The entry_name of this Pfam.
        :rtype: str
        """
        return self._entry_name

    @entry_name.setter
    def entry_name(self, entry_name):
        """Sets the entry_name of this Pfam.


        :param entry_name: The entry_name of this Pfam.
        :type entry_name: str
        """

        self._entry_name = entry_name

    @property
    def id(self):
        """Gets the id of this Pfam.


        :return: The id of this Pfam.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Pfam.


        :param id: The id of this Pfam.
        :type id: str
        """

        self._id = id
