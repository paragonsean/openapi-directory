# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.crossbar_target import CrossbarTarget
from openapi_server.models.page_meta import PageMeta
from openapi_server import util


class Targets(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, page_meta: PageMeta=None, targets: List[CrossbarTarget]=None):
        """Targets - a model defined in OpenAPI

        :param page_meta: The page_meta of this Targets.
        :param targets: The targets of this Targets.
        """
        self.openapi_types = {
            'page_meta': PageMeta,
            'targets': List[CrossbarTarget]
        }

        self.attribute_map = {
            'page_meta': 'pageMeta',
            'targets': 'targets'
        }

        self._page_meta = page_meta
        self._targets = targets

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Targets':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Targets of this Targets.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def page_meta(self):
        """Gets the page_meta of this Targets.


        :return: The page_meta of this Targets.
        :rtype: PageMeta
        """
        return self._page_meta

    @page_meta.setter
    def page_meta(self, page_meta):
        """Sets the page_meta of this Targets.


        :param page_meta: The page_meta of this Targets.
        :type page_meta: PageMeta
        """

        self._page_meta = page_meta

    @property
    def targets(self):
        """Gets the targets of this Targets.


        :return: The targets of this Targets.
        :rtype: List[CrossbarTarget]
        """
        return self._targets

    @targets.setter
    def targets(self, targets):
        """Sets the targets of this Targets.


        :param targets: The targets of this Targets.
        :type targets: List[CrossbarTarget]
        """

        self._targets = targets
