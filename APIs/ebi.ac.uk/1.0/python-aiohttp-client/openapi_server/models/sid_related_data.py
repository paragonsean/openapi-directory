# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.assay_data import AssayData
from openapi_server import util


class SidRelatedData(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assay_data: List[AssayData]=None, assay_pubchem_id: int=None, outcome: str=None, sid: int=None, standard_relation: str=None):
        """SidRelatedData - a model defined in OpenAPI

        :param assay_data: The assay_data of this SidRelatedData.
        :param assay_pubchem_id: The assay_pubchem_id of this SidRelatedData.
        :param outcome: The outcome of this SidRelatedData.
        :param sid: The sid of this SidRelatedData.
        :param standard_relation: The standard_relation of this SidRelatedData.
        """
        self.openapi_types = {
            'assay_data': List[AssayData],
            'assay_pubchem_id': int,
            'outcome': str,
            'sid': int,
            'standard_relation': str
        }

        self.attribute_map = {
            'assay_data': 'assay_data',
            'assay_pubchem_id': 'assay_pubchem_id',
            'outcome': 'outcome',
            'sid': 'sid',
            'standard_relation': 'standard_relation'
        }

        self._assay_data = assay_data
        self._assay_pubchem_id = assay_pubchem_id
        self._outcome = outcome
        self._sid = sid
        self._standard_relation = standard_relation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SidRelatedData':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SidRelatedData of this SidRelatedData.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assay_data(self):
        """Gets the assay_data of this SidRelatedData.


        :return: The assay_data of this SidRelatedData.
        :rtype: List[AssayData]
        """
        return self._assay_data

    @assay_data.setter
    def assay_data(self, assay_data):
        """Sets the assay_data of this SidRelatedData.


        :param assay_data: The assay_data of this SidRelatedData.
        :type assay_data: List[AssayData]
        """

        self._assay_data = assay_data

    @property
    def assay_pubchem_id(self):
        """Gets the assay_pubchem_id of this SidRelatedData.


        :return: The assay_pubchem_id of this SidRelatedData.
        :rtype: int
        """
        return self._assay_pubchem_id

    @assay_pubchem_id.setter
    def assay_pubchem_id(self, assay_pubchem_id):
        """Sets the assay_pubchem_id of this SidRelatedData.


        :param assay_pubchem_id: The assay_pubchem_id of this SidRelatedData.
        :type assay_pubchem_id: int
        """

        self._assay_pubchem_id = assay_pubchem_id

    @property
    def outcome(self):
        """Gets the outcome of this SidRelatedData.


        :return: The outcome of this SidRelatedData.
        :rtype: str
        """
        return self._outcome

    @outcome.setter
    def outcome(self, outcome):
        """Sets the outcome of this SidRelatedData.


        :param outcome: The outcome of this SidRelatedData.
        :type outcome: str
        """

        self._outcome = outcome

    @property
    def sid(self):
        """Gets the sid of this SidRelatedData.


        :return: The sid of this SidRelatedData.
        :rtype: int
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this SidRelatedData.


        :param sid: The sid of this SidRelatedData.
        :type sid: int
        """

        self._sid = sid

    @property
    def standard_relation(self):
        """Gets the standard_relation of this SidRelatedData.


        :return: The standard_relation of this SidRelatedData.
        :rtype: str
        """
        return self._standard_relation

    @standard_relation.setter
    def standard_relation(self, standard_relation):
        """Sets the standard_relation of this SidRelatedData.


        :param standard_relation: The standard_relation of this SidRelatedData.
        :type standard_relation: str
        """

        self._standard_relation = standard_relation
