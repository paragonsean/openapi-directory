# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Reactome(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, pathway_name: str=None):
        """Reactome - a model defined in OpenAPI

        :param id: The id of this Reactome.
        :param pathway_name: The pathway_name of this Reactome.
        """
        self.openapi_types = {
            'id': str,
            'pathway_name': str
        }

        self.attribute_map = {
            'id': 'id',
            'pathway_name': 'pathwayName'
        }

        self._id = id
        self._pathway_name = pathway_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Reactome':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Reactome of this Reactome.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Reactome.


        :return: The id of this Reactome.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Reactome.


        :param id: The id of this Reactome.
        :type id: str
        """

        self._id = id

    @property
    def pathway_name(self):
        """Gets the pathway_name of this Reactome.


        :return: The pathway_name of this Reactome.
        :rtype: str
        """
        return self._pathway_name

    @pathway_name.setter
    def pathway_name(self, pathway_name):
        """Sets the pathway_name of this Reactome.


        :param pathway_name: The pathway_name of this Reactome.
        :type pathway_name: str
        """

        self._pathway_name = pathway_name
