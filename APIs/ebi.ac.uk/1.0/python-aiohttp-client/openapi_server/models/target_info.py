# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TargetInfo(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ncbi_protein_id: int=None, target_chembl_id: str=None, uniprot_accession: str=None):
        """TargetInfo - a model defined in OpenAPI

        :param ncbi_protein_id: The ncbi_protein_id of this TargetInfo.
        :param target_chembl_id: The target_chembl_id of this TargetInfo.
        :param uniprot_accession: The uniprot_accession of this TargetInfo.
        """
        self.openapi_types = {
            'ncbi_protein_id': int,
            'target_chembl_id': str,
            'uniprot_accession': str
        }

        self.attribute_map = {
            'ncbi_protein_id': 'ncbi_protein_id',
            'target_chembl_id': 'target_chembl_id',
            'uniprot_accession': 'uniprot_accession'
        }

        self._ncbi_protein_id = ncbi_protein_id
        self._target_chembl_id = target_chembl_id
        self._uniprot_accession = uniprot_accession

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TargetInfo':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The TargetInfo of this TargetInfo.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ncbi_protein_id(self):
        """Gets the ncbi_protein_id of this TargetInfo.


        :return: The ncbi_protein_id of this TargetInfo.
        :rtype: int
        """
        return self._ncbi_protein_id

    @ncbi_protein_id.setter
    def ncbi_protein_id(self, ncbi_protein_id):
        """Sets the ncbi_protein_id of this TargetInfo.


        :param ncbi_protein_id: The ncbi_protein_id of this TargetInfo.
        :type ncbi_protein_id: int
        """

        self._ncbi_protein_id = ncbi_protein_id

    @property
    def target_chembl_id(self):
        """Gets the target_chembl_id of this TargetInfo.


        :return: The target_chembl_id of this TargetInfo.
        :rtype: str
        """
        return self._target_chembl_id

    @target_chembl_id.setter
    def target_chembl_id(self, target_chembl_id):
        """Sets the target_chembl_id of this TargetInfo.


        :param target_chembl_id: The target_chembl_id of this TargetInfo.
        :type target_chembl_id: str
        """

        self._target_chembl_id = target_chembl_id

    @property
    def uniprot_accession(self):
        """Gets the uniprot_accession of this TargetInfo.


        :return: The uniprot_accession of this TargetInfo.
        :rtype: str
        """
        return self._uniprot_accession

    @uniprot_accession.setter
    def uniprot_accession(self, uniprot_accession):
        """Sets the uniprot_accession of this TargetInfo.


        :param uniprot_accession: The uniprot_accession of this TargetInfo.
        :type uniprot_accession: str
        """

        self._uniprot_accession = uniprot_accession
