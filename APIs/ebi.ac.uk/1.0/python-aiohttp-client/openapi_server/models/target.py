# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Target(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accessions: List[str]=None, action: List[str]=None, id: str=None, name: str=None, organism: str=None):
        """Target - a model defined in OpenAPI

        :param accessions: The accessions of this Target.
        :param action: The action of this Target.
        :param id: The id of this Target.
        :param name: The name of this Target.
        :param organism: The organism of this Target.
        """
        self.openapi_types = {
            'accessions': List[str],
            'action': List[str],
            'id': str,
            'name': str,
            'organism': str
        }

        self.attribute_map = {
            'accessions': 'accessions',
            'action': 'action',
            'id': 'id',
            'name': 'name',
            'organism': 'organism'
        }

        self._accessions = accessions
        self._action = action
        self._id = id
        self._name = name
        self._organism = organism

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Target':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Target of this Target.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accessions(self):
        """Gets the accessions of this Target.


        :return: The accessions of this Target.
        :rtype: List[str]
        """
        return self._accessions

    @accessions.setter
    def accessions(self, accessions):
        """Sets the accessions of this Target.


        :param accessions: The accessions of this Target.
        :type accessions: List[str]
        """

        self._accessions = accessions

    @property
    def action(self):
        """Gets the action of this Target.


        :return: The action of this Target.
        :rtype: List[str]
        """
        return self._action

    @action.setter
    def action(self, action):
        """Sets the action of this Target.


        :param action: The action of this Target.
        :type action: List[str]
        """

        self._action = action

    @property
    def id(self):
        """Gets the id of this Target.


        :return: The id of this Target.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Target.


        :param id: The id of this Target.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this Target.


        :return: The name of this Target.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Target.


        :param name: The name of this Target.
        :type name: str
        """

        self._name = name

    @property
    def organism(self):
        """Gets the organism of this Target.


        :return: The organism of this Target.
        :rtype: str
        """
        return self._organism

    @organism.setter
    def organism(self, organism):
        """Sets the organism of this Target.


        :param organism: The organism of this Target.
        :type organism: str
        """

        self._organism = organism
