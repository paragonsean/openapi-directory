# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FeaturePosition(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ceil: int=None, floor: int=None, uncertain: bool=None, unparsed: str=None):
        """FeaturePosition - a model defined in OpenAPI

        :param ceil: The ceil of this FeaturePosition.
        :param floor: The floor of this FeaturePosition.
        :param uncertain: The uncertain of this FeaturePosition.
        :param unparsed: The unparsed of this FeaturePosition.
        """
        self.openapi_types = {
            'ceil': int,
            'floor': int,
            'uncertain': bool,
            'unparsed': str
        }

        self.attribute_map = {
            'ceil': 'ceil',
            'floor': 'floor',
            'uncertain': 'uncertain',
            'unparsed': 'unparsed'
        }

        self._ceil = ceil
        self._floor = floor
        self._uncertain = uncertain
        self._unparsed = unparsed

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FeaturePosition':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FeaturePosition of this FeaturePosition.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ceil(self):
        """Gets the ceil of this FeaturePosition.


        :return: The ceil of this FeaturePosition.
        :rtype: int
        """
        return self._ceil

    @ceil.setter
    def ceil(self, ceil):
        """Sets the ceil of this FeaturePosition.


        :param ceil: The ceil of this FeaturePosition.
        :type ceil: int
        """

        self._ceil = ceil

    @property
    def floor(self):
        """Gets the floor of this FeaturePosition.


        :return: The floor of this FeaturePosition.
        :rtype: int
        """
        return self._floor

    @floor.setter
    def floor(self, floor):
        """Sets the floor of this FeaturePosition.


        :param floor: The floor of this FeaturePosition.
        :type floor: int
        """

        self._floor = floor

    @property
    def uncertain(self):
        """Gets the uncertain of this FeaturePosition.


        :return: The uncertain of this FeaturePosition.
        :rtype: bool
        """
        return self._uncertain

    @uncertain.setter
    def uncertain(self, uncertain):
        """Sets the uncertain of this FeaturePosition.


        :param uncertain: The uncertain of this FeaturePosition.
        :type uncertain: bool
        """

        self._uncertain = uncertain

    @property
    def unparsed(self):
        """Gets the unparsed of this FeaturePosition.


        :return: The unparsed of this FeaturePosition.
        :rtype: str
        """
        return self._unparsed

    @unparsed.setter
    def unparsed(self, unparsed):
        """Sets the unparsed of this FeaturePosition.


        :param unparsed: The unparsed of this FeaturePosition.
        :type unparsed: str
        """

        self._unparsed = unparsed
