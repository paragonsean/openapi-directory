# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Substance(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, chembl_cmpd_xref: str=None, cids: List[int]=None, sid: int=None):
        """Substance - a model defined in OpenAPI

        :param chembl_cmpd_xref: The chembl_cmpd_xref of this Substance.
        :param cids: The cids of this Substance.
        :param sid: The sid of this Substance.
        """
        self.openapi_types = {
            'chembl_cmpd_xref': str,
            'cids': List[int],
            'sid': int
        }

        self.attribute_map = {
            'chembl_cmpd_xref': 'chembl_cmpd_xref',
            'cids': 'cids',
            'sid': 'sid'
        }

        self._chembl_cmpd_xref = chembl_cmpd_xref
        self._cids = cids
        self._sid = sid

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Substance':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Substance of this Substance.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def chembl_cmpd_xref(self):
        """Gets the chembl_cmpd_xref of this Substance.


        :return: The chembl_cmpd_xref of this Substance.
        :rtype: str
        """
        return self._chembl_cmpd_xref

    @chembl_cmpd_xref.setter
    def chembl_cmpd_xref(self, chembl_cmpd_xref):
        """Sets the chembl_cmpd_xref of this Substance.


        :param chembl_cmpd_xref: The chembl_cmpd_xref of this Substance.
        :type chembl_cmpd_xref: str
        """

        self._chembl_cmpd_xref = chembl_cmpd_xref

    @property
    def cids(self):
        """Gets the cids of this Substance.


        :return: The cids of this Substance.
        :rtype: List[int]
        """
        return self._cids

    @cids.setter
    def cids(self, cids):
        """Sets the cids of this Substance.


        :param cids: The cids of this Substance.
        :type cids: List[int]
        """

        self._cids = cids

    @property
    def sid(self):
        """Gets the sid of this Substance.


        :return: The sid of this Substance.
        :rtype: int
        """
        return self._sid

    @sid.setter
    def sid(self, sid):
        """Sets the sid of this Substance.


        :param sid: The sid of this Substance.
        :type sid: int
        """

        self._sid = sid
