# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.feature_position import FeaturePosition
from openapi_server import util


class CrossbarFeature(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, begin: FeaturePosition=None, category: str=None, description: str=None, end: FeaturePosition=None, ft_id: str=None, type: str=None):
        """CrossbarFeature - a model defined in OpenAPI

        :param begin: The begin of this CrossbarFeature.
        :param category: The category of this CrossbarFeature.
        :param description: The description of this CrossbarFeature.
        :param end: The end of this CrossbarFeature.
        :param ft_id: The ft_id of this CrossbarFeature.
        :param type: The type of this CrossbarFeature.
        """
        self.openapi_types = {
            'begin': FeaturePosition,
            'category': str,
            'description': str,
            'end': FeaturePosition,
            'ft_id': str,
            'type': str
        }

        self.attribute_map = {
            'begin': 'begin',
            'category': 'category',
            'description': 'description',
            'end': 'end',
            'ft_id': 'ftId',
            'type': 'type'
        }

        self._begin = begin
        self._category = category
        self._description = description
        self._end = end
        self._ft_id = ft_id
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CrossbarFeature':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CrossbarFeature of this CrossbarFeature.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def begin(self):
        """Gets the begin of this CrossbarFeature.


        :return: The begin of this CrossbarFeature.
        :rtype: FeaturePosition
        """
        return self._begin

    @begin.setter
    def begin(self, begin):
        """Sets the begin of this CrossbarFeature.


        :param begin: The begin of this CrossbarFeature.
        :type begin: FeaturePosition
        """

        self._begin = begin

    @property
    def category(self):
        """Gets the category of this CrossbarFeature.


        :return: The category of this CrossbarFeature.
        :rtype: str
        """
        return self._category

    @category.setter
    def category(self, category):
        """Sets the category of this CrossbarFeature.


        :param category: The category of this CrossbarFeature.
        :type category: str
        """

        self._category = category

    @property
    def description(self):
        """Gets the description of this CrossbarFeature.


        :return: The description of this CrossbarFeature.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this CrossbarFeature.


        :param description: The description of this CrossbarFeature.
        :type description: str
        """

        self._description = description

    @property
    def end(self):
        """Gets the end of this CrossbarFeature.


        :return: The end of this CrossbarFeature.
        :rtype: FeaturePosition
        """
        return self._end

    @end.setter
    def end(self, end):
        """Sets the end of this CrossbarFeature.


        :param end: The end of this CrossbarFeature.
        :type end: FeaturePosition
        """

        self._end = end

    @property
    def ft_id(self):
        """Gets the ft_id of this CrossbarFeature.


        :return: The ft_id of this CrossbarFeature.
        :rtype: str
        """
        return self._ft_id

    @ft_id.setter
    def ft_id(self, ft_id):
        """Sets the ft_id of this CrossbarFeature.


        :param ft_id: The ft_id of this CrossbarFeature.
        :type ft_id: str
        """

        self._ft_id = ft_id

    @property
    def type(self):
        """Gets the type of this CrossbarFeature.


        :return: The type of this CrossbarFeature.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this CrossbarFeature.


        :param type: The type of this CrossbarFeature.
        :type type: str
        """

        self._type = type
