# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Activity(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assay_chembl_id: str=None, data_validity_comment: str=None, molecule_chembl_id: str=None, pchembl_value: float=None, standard_flag: bool=None, standard_relation: str=None, standard_units: str=None, standard_value: float=None, target_chembl_id: str=None):
        """Activity - a model defined in OpenAPI

        :param assay_chembl_id: The assay_chembl_id of this Activity.
        :param data_validity_comment: The data_validity_comment of this Activity.
        :param molecule_chembl_id: The molecule_chembl_id of this Activity.
        :param pchembl_value: The pchembl_value of this Activity.
        :param standard_flag: The standard_flag of this Activity.
        :param standard_relation: The standard_relation of this Activity.
        :param standard_units: The standard_units of this Activity.
        :param standard_value: The standard_value of this Activity.
        :param target_chembl_id: The target_chembl_id of this Activity.
        """
        self.openapi_types = {
            'assay_chembl_id': str,
            'data_validity_comment': str,
            'molecule_chembl_id': str,
            'pchembl_value': float,
            'standard_flag': bool,
            'standard_relation': str,
            'standard_units': str,
            'standard_value': float,
            'target_chembl_id': str
        }

        self.attribute_map = {
            'assay_chembl_id': 'assay_chembl_id',
            'data_validity_comment': 'data_validity_comment',
            'molecule_chembl_id': 'molecule_chembl_id',
            'pchembl_value': 'pchembl_value',
            'standard_flag': 'standard_flag',
            'standard_relation': 'standard_relation',
            'standard_units': 'standard_units',
            'standard_value': 'standard_value',
            'target_chembl_id': 'target_chembl_id'
        }

        self._assay_chembl_id = assay_chembl_id
        self._data_validity_comment = data_validity_comment
        self._molecule_chembl_id = molecule_chembl_id
        self._pchembl_value = pchembl_value
        self._standard_flag = standard_flag
        self._standard_relation = standard_relation
        self._standard_units = standard_units
        self._standard_value = standard_value
        self._target_chembl_id = target_chembl_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Activity':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Activity of this Activity.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assay_chembl_id(self):
        """Gets the assay_chembl_id of this Activity.


        :return: The assay_chembl_id of this Activity.
        :rtype: str
        """
        return self._assay_chembl_id

    @assay_chembl_id.setter
    def assay_chembl_id(self, assay_chembl_id):
        """Sets the assay_chembl_id of this Activity.


        :param assay_chembl_id: The assay_chembl_id of this Activity.
        :type assay_chembl_id: str
        """

        self._assay_chembl_id = assay_chembl_id

    @property
    def data_validity_comment(self):
        """Gets the data_validity_comment of this Activity.


        :return: The data_validity_comment of this Activity.
        :rtype: str
        """
        return self._data_validity_comment

    @data_validity_comment.setter
    def data_validity_comment(self, data_validity_comment):
        """Sets the data_validity_comment of this Activity.


        :param data_validity_comment: The data_validity_comment of this Activity.
        :type data_validity_comment: str
        """

        self._data_validity_comment = data_validity_comment

    @property
    def molecule_chembl_id(self):
        """Gets the molecule_chembl_id of this Activity.


        :return: The molecule_chembl_id of this Activity.
        :rtype: str
        """
        return self._molecule_chembl_id

    @molecule_chembl_id.setter
    def molecule_chembl_id(self, molecule_chembl_id):
        """Sets the molecule_chembl_id of this Activity.


        :param molecule_chembl_id: The molecule_chembl_id of this Activity.
        :type molecule_chembl_id: str
        """

        self._molecule_chembl_id = molecule_chembl_id

    @property
    def pchembl_value(self):
        """Gets the pchembl_value of this Activity.


        :return: The pchembl_value of this Activity.
        :rtype: float
        """
        return self._pchembl_value

    @pchembl_value.setter
    def pchembl_value(self, pchembl_value):
        """Sets the pchembl_value of this Activity.


        :param pchembl_value: The pchembl_value of this Activity.
        :type pchembl_value: float
        """

        self._pchembl_value = pchembl_value

    @property
    def standard_flag(self):
        """Gets the standard_flag of this Activity.


        :return: The standard_flag of this Activity.
        :rtype: bool
        """
        return self._standard_flag

    @standard_flag.setter
    def standard_flag(self, standard_flag):
        """Sets the standard_flag of this Activity.


        :param standard_flag: The standard_flag of this Activity.
        :type standard_flag: bool
        """

        self._standard_flag = standard_flag

    @property
    def standard_relation(self):
        """Gets the standard_relation of this Activity.


        :return: The standard_relation of this Activity.
        :rtype: str
        """
        return self._standard_relation

    @standard_relation.setter
    def standard_relation(self, standard_relation):
        """Sets the standard_relation of this Activity.


        :param standard_relation: The standard_relation of this Activity.
        :type standard_relation: str
        """

        self._standard_relation = standard_relation

    @property
    def standard_units(self):
        """Gets the standard_units of this Activity.


        :return: The standard_units of this Activity.
        :rtype: str
        """
        return self._standard_units

    @standard_units.setter
    def standard_units(self, standard_units):
        """Sets the standard_units of this Activity.


        :param standard_units: The standard_units of this Activity.
        :type standard_units: str
        """

        self._standard_units = standard_units

    @property
    def standard_value(self):
        """Gets the standard_value of this Activity.


        :return: The standard_value of this Activity.
        :rtype: float
        """
        return self._standard_value

    @standard_value.setter
    def standard_value(self, standard_value):
        """Sets the standard_value of this Activity.


        :param standard_value: The standard_value of this Activity.
        :type standard_value: float
        """

        self._standard_value = standard_value

    @property
    def target_chembl_id(self):
        """Gets the target_chembl_id of this Activity.


        :return: The target_chembl_id of this Activity.
        :rtype: str
        """
        return self._target_chembl_id

    @target_chembl_id.setter
    def target_chembl_id(self, target_chembl_id):
        """Sets the target_chembl_id of this Activity.


        :param target_chembl_id: The target_chembl_id of this Activity.
        :type target_chembl_id: str
        """

        self._target_chembl_id = target_chembl_id
