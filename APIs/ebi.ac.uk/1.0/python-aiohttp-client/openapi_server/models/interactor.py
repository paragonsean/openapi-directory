# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Interactor(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, accession: str=None, gene: str=None):
        """Interactor - a model defined in OpenAPI

        :param accession: The accession of this Interactor.
        :param gene: The gene of this Interactor.
        """
        self.openapi_types = {
            'accession': str,
            'gene': str
        }

        self.attribute_map = {
            'accession': 'accession',
            'gene': 'gene'
        }

        self._accession = accession
        self._gene = gene

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Interactor':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Interactor of this Interactor.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def accession(self):
        """Gets the accession of this Interactor.


        :return: The accession of this Interactor.
        :rtype: str
        """
        return self._accession

    @accession.setter
    def accession(self, accession):
        """Sets the accession of this Interactor.


        :param accession: The accession of this Interactor.
        :type accession: str
        """

        self._accession = accession

    @property
    def gene(self):
        """Gets the gene of this Interactor.


        :return: The gene of this Interactor.
        :rtype: str
        """
        return self._gene

    @gene.setter
    def gene(self, gene):
        """Sets the gene of this Interactor.


        :param gene: The gene of this Interactor.
        :type gene: str
        """

        self._gene = gene
