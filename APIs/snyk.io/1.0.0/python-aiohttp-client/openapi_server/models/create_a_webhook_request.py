# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CreateAWebhookRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, secret: str=None, url: str=None):
        """CreateAWebhookRequest - a model defined in OpenAPI

        :param secret: The secret of this CreateAWebhookRequest.
        :param url: The url of this CreateAWebhookRequest.
        """
        self.openapi_types = {
            'secret': str,
            'url': str
        }

        self.attribute_map = {
            'secret': 'secret',
            'url': 'url'
        }

        self._secret = secret
        self._url = url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CreateAWebhookRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Create_a_webhook_request of this CreateAWebhookRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def secret(self):
        """Gets the secret of this CreateAWebhookRequest.

        This is a password you create, that Snyk uses to sign our transports to you, so you be sure the notification is authentic. Your `secret` should: Be a random string with high entropy; Not be used for anything else; Only known to Snyk and your webhook transport consuming code;

        :return: The secret of this CreateAWebhookRequest.
        :rtype: str
        """
        return self._secret

    @secret.setter
    def secret(self, secret):
        """Sets the secret of this CreateAWebhookRequest.

        This is a password you create, that Snyk uses to sign our transports to you, so you be sure the notification is authentic. Your `secret` should: Be a random string with high entropy; Not be used for anything else; Only known to Snyk and your webhook transport consuming code;

        :param secret: The secret of this CreateAWebhookRequest.
        :type secret: str
        """

        self._secret = secret

    @property
    def url(self):
        """Gets the url of this CreateAWebhookRequest.

        Webhooks can only be configured for URLs using the `https` protocol. `http` is not allowed.

        :return: The url of this CreateAWebhookRequest.
        :rtype: str
        """
        return self._url

    @url.setter
    def url(self, url):
        """Sets the url of this CreateAWebhookRequest.

        Webhooks can only be configured for URLs using the `https` protocol. `http` is not allowed.

        :param url: The url of this CreateAWebhookRequest.
        :type url: str
        """

        self._url = url
