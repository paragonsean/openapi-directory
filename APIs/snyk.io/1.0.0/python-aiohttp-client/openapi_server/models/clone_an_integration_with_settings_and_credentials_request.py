# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CloneAnIntegrationWithSettingsAndCredentialsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, destination_org_public_id: str=None):
        """CloneAnIntegrationWithSettingsAndCredentialsRequest - a model defined in OpenAPI

        :param destination_org_public_id: The destination_org_public_id of this CloneAnIntegrationWithSettingsAndCredentialsRequest.
        """
        self.openapi_types = {
            'destination_org_public_id': str
        }

        self.attribute_map = {
            'destination_org_public_id': 'destinationOrgPublicId'
        }

        self._destination_org_public_id = destination_org_public_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CloneAnIntegrationWithSettingsAndCredentialsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Clone_an_integration__with_settings_and_credentials__request of this CloneAnIntegrationWithSettingsAndCredentialsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def destination_org_public_id(self):
        """Gets the destination_org_public_id of this CloneAnIntegrationWithSettingsAndCredentialsRequest.

        The organization public ID. The `API_KEY` must have access to this organization.

        :return: The destination_org_public_id of this CloneAnIntegrationWithSettingsAndCredentialsRequest.
        :rtype: str
        """
        return self._destination_org_public_id

    @destination_org_public_id.setter
    def destination_org_public_id(self, destination_org_public_id):
        """Sets the destination_org_public_id of this CloneAnIntegrationWithSettingsAndCredentialsRequest.

        The organization public ID. The `API_KEY` must have access to this organization.

        :param destination_org_public_id: The destination_org_public_id of this CloneAnIntegrationWithSettingsAndCredentialsRequest.
        :type destination_org_public_id: str
        """
        if destination_org_public_id is None:
            raise ValueError("Invalid value for `destination_org_public_id`, must not be `None`")

        self._destination_org_public_id = destination_org_public_id
