# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.semver_object import SemverObject
from openapi_server import util


class Vulnerability(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cvssv3: str=None, alternative_ids: object=None, creation_time: str=None, credit: object=None, cvss_score: float=None, description: str=None, disclosure_time: str=None, exploit_maturity: str=None, _from: object=None, functions: List[object]=None, identifiers: object=None, is_patchable: bool=None, is_pinnable: bool=None, is_upgradable: bool=None, language: str=None, modification_time: str=None, package_manager_npm: str=None, package_name: str=None, patches: List[object]=None, publication_time: str=None, semver: SemverObject=None, severity: str=None, title: str=None, upgrade_path: object=None):
        """Vulnerability - a model defined in OpenAPI

        :param cvssv3: The cvssv3 of this Vulnerability.
        :param alternative_ids: The alternative_ids of this Vulnerability.
        :param creation_time: The creation_time of this Vulnerability.
        :param credit: The credit of this Vulnerability.
        :param cvss_score: The cvss_score of this Vulnerability.
        :param description: The description of this Vulnerability.
        :param disclosure_time: The disclosure_time of this Vulnerability.
        :param exploit_maturity: The exploit_maturity of this Vulnerability.
        :param _from: The _from of this Vulnerability.
        :param functions: The functions of this Vulnerability.
        :param identifiers: The identifiers of this Vulnerability.
        :param is_patchable: The is_patchable of this Vulnerability.
        :param is_pinnable: The is_pinnable of this Vulnerability.
        :param is_upgradable: The is_upgradable of this Vulnerability.
        :param language: The language of this Vulnerability.
        :param modification_time: The modification_time of this Vulnerability.
        :param package_manager_npm: The package_manager_npm of this Vulnerability.
        :param package_name: The package_name of this Vulnerability.
        :param patches: The patches of this Vulnerability.
        :param publication_time: The publication_time of this Vulnerability.
        :param semver: The semver of this Vulnerability.
        :param severity: The severity of this Vulnerability.
        :param title: The title of this Vulnerability.
        :param upgrade_path: The upgrade_path of this Vulnerability.
        """
        self.openapi_types = {
            'cvssv3': str,
            'alternative_ids': object,
            'creation_time': str,
            'credit': object,
            'cvss_score': float,
            'description': str,
            'disclosure_time': str,
            'exploit_maturity': str,
            '_from': object,
            'functions': List[object],
            'identifiers': object,
            'is_patchable': bool,
            'is_pinnable': bool,
            'is_upgradable': bool,
            'language': str,
            'modification_time': str,
            'package_manager_npm': str,
            'package_name': str,
            'patches': List[object],
            'publication_time': str,
            'semver': SemverObject,
            'severity': str,
            'title': str,
            'upgrade_path': object
        }

        self.attribute_map = {
            'cvssv3': 'CVSSv3',
            'alternative_ids': 'alternativeIds',
            'creation_time': 'creationTime',
            'credit': 'credit',
            'cvss_score': 'cvssScore',
            'description': 'description',
            'disclosure_time': 'disclosureTime',
            'exploit_maturity': 'exploitMaturity',
            '_from': 'from',
            'functions': 'functions',
            'identifiers': 'identifiers',
            'is_patchable': 'isPatchable',
            'is_pinnable': 'isPinnable',
            'is_upgradable': 'isUpgradable',
            'language': 'language',
            'modification_time': 'modificationTime',
            'package_manager_npm': 'packageManager &#x60;npm&#x60;',
            'package_name': 'packageName',
            'patches': 'patches',
            'publication_time': 'publicationTime',
            'semver': 'semver',
            'severity': 'severity',
            'title': 'title',
            'upgrade_path': 'upgradePath'
        }

        self._cvssv3 = cvssv3
        self._alternative_ids = alternative_ids
        self._creation_time = creation_time
        self._credit = credit
        self._cvss_score = cvss_score
        self._description = description
        self._disclosure_time = disclosure_time
        self._exploit_maturity = exploit_maturity
        self.__from = _from
        self._functions = functions
        self._identifiers = identifiers
        self._is_patchable = is_patchable
        self._is_pinnable = is_pinnable
        self._is_upgradable = is_upgradable
        self._language = language
        self._modification_time = modification_time
        self._package_manager_npm = package_manager_npm
        self._package_name = package_name
        self._patches = patches
        self._publication_time = publication_time
        self._semver = semver
        self._severity = severity
        self._title = title
        self._upgrade_path = upgrade_path

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Vulnerability':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Vulnerability of this Vulnerability.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cvssv3(self):
        """Gets the cvssv3 of this Vulnerability.

        Common Vulnerability Scoring System (CVSS) provides a way to capture the principal characteristics of a vulnerability, and produce a numerical score reflecting its severity, as well as a textual representation of that score.

        :return: The cvssv3 of this Vulnerability.
        :rtype: str
        """
        return self._cvssv3

    @cvssv3.setter
    def cvssv3(self, cvssv3):
        """Sets the cvssv3 of this Vulnerability.

        Common Vulnerability Scoring System (CVSS) provides a way to capture the principal characteristics of a vulnerability, and produce a numerical score reflecting its severity, as well as a textual representation of that score.

        :param cvssv3: The cvssv3 of this Vulnerability.
        :type cvssv3: str
        """

        self._cvssv3 = cvssv3

    @property
    def alternative_ids(self):
        """Gets the alternative_ids of this Vulnerability.


        :return: The alternative_ids of this Vulnerability.
        :rtype: object
        """
        return self._alternative_ids

    @alternative_ids.setter
    def alternative_ids(self, alternative_ids):
        """Sets the alternative_ids of this Vulnerability.


        :param alternative_ids: The alternative_ids of this Vulnerability.
        :type alternative_ids: object
        """

        self._alternative_ids = alternative_ids

    @property
    def creation_time(self):
        """Gets the creation_time of this Vulnerability.


        :return: The creation_time of this Vulnerability.
        :rtype: str
        """
        return self._creation_time

    @creation_time.setter
    def creation_time(self, creation_time):
        """Sets the creation_time of this Vulnerability.


        :param creation_time: The creation_time of this Vulnerability.
        :type creation_time: str
        """

        self._creation_time = creation_time

    @property
    def credit(self):
        """Gets the credit of this Vulnerability.

        The reporter of the vulnerability

        :return: The credit of this Vulnerability.
        :rtype: object
        """
        return self._credit

    @credit.setter
    def credit(self, credit):
        """Sets the credit of this Vulnerability.

        The reporter of the vulnerability

        :param credit: The credit of this Vulnerability.
        :type credit: object
        """

        self._credit = credit

    @property
    def cvss_score(self):
        """Gets the cvss_score of this Vulnerability.

        CVSS Score.

        :return: The cvss_score of this Vulnerability.
        :rtype: float
        """
        return self._cvss_score

    @cvss_score.setter
    def cvss_score(self, cvss_score):
        """Sets the cvss_score of this Vulnerability.

        CVSS Score.

        :param cvss_score: The cvss_score of this Vulnerability.
        :type cvss_score: float
        """

        self._cvss_score = cvss_score

    @property
    def description(self):
        """Gets the description of this Vulnerability.

        The description of the vulnerability

        :return: The description of this Vulnerability.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this Vulnerability.

        The description of the vulnerability

        :param description: The description of this Vulnerability.
        :type description: str
        """

        self._description = description

    @property
    def disclosure_time(self):
        """Gets the disclosure_time of this Vulnerability.


        :return: The disclosure_time of this Vulnerability.
        :rtype: str
        """
        return self._disclosure_time

    @disclosure_time.setter
    def disclosure_time(self, disclosure_time):
        """Sets the disclosure_time of this Vulnerability.


        :param disclosure_time: The disclosure_time of this Vulnerability.
        :type disclosure_time: str
        """

        self._disclosure_time = disclosure_time

    @property
    def exploit_maturity(self):
        """Gets the exploit_maturity of this Vulnerability.

        Snyk exploit maturity for this issue. One of: `mature`, `proof-of-concept`, `no-known-exploit` or `no-data`.

        :return: The exploit_maturity of this Vulnerability.
        :rtype: str
        """
        return self._exploit_maturity

    @exploit_maturity.setter
    def exploit_maturity(self, exploit_maturity):
        """Sets the exploit_maturity of this Vulnerability.

        Snyk exploit maturity for this issue. One of: `mature`, `proof-of-concept`, `no-known-exploit` or `no-data`.

        :param exploit_maturity: The exploit_maturity of this Vulnerability.
        :type exploit_maturity: str
        """

        self._exploit_maturity = exploit_maturity

    @property
    def _from(self):
        """Gets the _from of this Vulnerability.

        Paths from which the vulnerable package is required in the code base.

        :return: The _from of this Vulnerability.
        :rtype: object
        """
        return self.__from

    @_from.setter
    def _from(self, _from):
        """Sets the _from of this Vulnerability.

        Paths from which the vulnerable package is required in the code base.

        :param _from: The _from of this Vulnerability.
        :type _from: object
        """

        self.__from = _from

    @property
    def functions(self):
        """Gets the functions of this Vulnerability.

        List of vulnerable functions inside the vulnerable packages.

        :return: The functions of this Vulnerability.
        :rtype: List[object]
        """
        return self._functions

    @functions.setter
    def functions(self, functions):
        """Sets the functions of this Vulnerability.

        List of vulnerable functions inside the vulnerable packages.

        :param functions: The functions of this Vulnerability.
        :type functions: List[object]
        """

        self._functions = functions

    @property
    def identifiers(self):
        """Gets the identifiers of this Vulnerability.

        Additional identifiers for this issue (CVE, CWE, etc).

        :return: The identifiers of this Vulnerability.
        :rtype: object
        """
        return self._identifiers

    @identifiers.setter
    def identifiers(self, identifiers):
        """Sets the identifiers of this Vulnerability.

        Additional identifiers for this issue (CVE, CWE, etc).

        :param identifiers: The identifiers of this Vulnerability.
        :type identifiers: object
        """

        self._identifiers = identifiers

    @property
    def is_patchable(self):
        """Gets the is_patchable of this Vulnerability.

        Is a patch by Snyk available to fix this vulnerability?

        :return: The is_patchable of this Vulnerability.
        :rtype: bool
        """
        return self._is_patchable

    @is_patchable.setter
    def is_patchable(self, is_patchable):
        """Sets the is_patchable of this Vulnerability.

        Is a patch by Snyk available to fix this vulnerability?

        :param is_patchable: The is_patchable of this Vulnerability.
        :type is_patchable: bool
        """

        self._is_patchable = is_patchable

    @property
    def is_pinnable(self):
        """Gets the is_pinnable of this Vulnerability.

        Will pinning this package to a newer version fix the vulnerability?

        :return: The is_pinnable of this Vulnerability.
        :rtype: bool
        """
        return self._is_pinnable

    @is_pinnable.setter
    def is_pinnable(self, is_pinnable):
        """Sets the is_pinnable of this Vulnerability.

        Will pinning this package to a newer version fix the vulnerability?

        :param is_pinnable: The is_pinnable of this Vulnerability.
        :type is_pinnable: bool
        """

        self._is_pinnable = is_pinnable

    @property
    def is_upgradable(self):
        """Gets the is_upgradable of this Vulnerability.

        Will upgrading a top-level dependency fix the vulnerability?

        :return: The is_upgradable of this Vulnerability.
        :rtype: bool
        """
        return self._is_upgradable

    @is_upgradable.setter
    def is_upgradable(self, is_upgradable):
        """Sets the is_upgradable of this Vulnerability.

        Will upgrading a top-level dependency fix the vulnerability?

        :param is_upgradable: The is_upgradable of this Vulnerability.
        :type is_upgradable: bool
        """

        self._is_upgradable = is_upgradable

    @property
    def language(self):
        """Gets the language of this Vulnerability.

        The programming language for this package.

        :return: The language of this Vulnerability.
        :rtype: str
        """
        return self._language

    @language.setter
    def language(self, language):
        """Sets the language of this Vulnerability.

        The programming language for this package.

        :param language: The language of this Vulnerability.
        :type language: str
        """

        self._language = language

    @property
    def modification_time(self):
        """Gets the modification_time of this Vulnerability.


        :return: The modification_time of this Vulnerability.
        :rtype: str
        """
        return self._modification_time

    @modification_time.setter
    def modification_time(self, modification_time):
        """Sets the modification_time of this Vulnerability.


        :param modification_time: The modification_time of this Vulnerability.
        :type modification_time: str
        """

        self._modification_time = modification_time

    @property
    def package_manager_npm(self):
        """Gets the package_manager_npm of this Vulnerability.


        :return: The package_manager_npm of this Vulnerability.
        :rtype: str
        """
        return self._package_manager_npm

    @package_manager_npm.setter
    def package_manager_npm(self, package_manager_npm):
        """Sets the package_manager_npm of this Vulnerability.


        :param package_manager_npm: The package_manager_npm of this Vulnerability.
        :type package_manager_npm: str
        """

        self._package_manager_npm = package_manager_npm

    @property
    def package_name(self):
        """Gets the package_name of this Vulnerability.

        The name of the vulnerable package.

        :return: The package_name of this Vulnerability.
        :rtype: str
        """
        return self._package_name

    @package_name.setter
    def package_name(self, package_name):
        """Sets the package_name of this Vulnerability.

        The name of the vulnerable package.

        :param package_name: The package_name of this Vulnerability.
        :type package_name: str
        """

        self._package_name = package_name

    @property
    def patches(self):
        """Gets the patches of this Vulnerability.

        Patches to fix this issue, by Snyk.

        :return: The patches of this Vulnerability.
        :rtype: List[object]
        """
        return self._patches

    @patches.setter
    def patches(self, patches):
        """Sets the patches of this Vulnerability.

        Patches to fix this issue, by Snyk.

        :param patches: The patches of this Vulnerability.
        :type patches: List[object]
        """

        self._patches = patches

    @property
    def publication_time(self):
        """Gets the publication_time of this Vulnerability.


        :return: The publication_time of this Vulnerability.
        :rtype: str
        """
        return self._publication_time

    @publication_time.setter
    def publication_time(self, publication_time):
        """Sets the publication_time of this Vulnerability.


        :param publication_time: The publication_time of this Vulnerability.
        :type publication_time: str
        """

        self._publication_time = publication_time

    @property
    def semver(self):
        """Gets the semver of this Vulnerability.


        :return: The semver of this Vulnerability.
        :rtype: SemverObject
        """
        return self._semver

    @semver.setter
    def semver(self, semver):
        """Sets the semver of this Vulnerability.


        :param semver: The semver of this Vulnerability.
        :type semver: SemverObject
        """

        self._semver = semver

    @property
    def severity(self):
        """Gets the severity of this Vulnerability.

        Snyk severity for this issue. One of: `critical`, `medium`, `high`, `medium` or `low`.

        :return: The severity of this Vulnerability.
        :rtype: str
        """
        return self._severity

    @severity.setter
    def severity(self, severity):
        """Sets the severity of this Vulnerability.

        Snyk severity for this issue. One of: `critical`, `medium`, `high`, `medium` or `low`.

        :param severity: The severity of this Vulnerability.
        :type severity: str
        """

        self._severity = severity

    @property
    def title(self):
        """Gets the title of this Vulnerability.

        The title of the vulnerability

        :return: The title of this Vulnerability.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this Vulnerability.

        The title of the vulnerability

        :param title: The title of this Vulnerability.
        :type title: str
        """

        self._title = title

    @property
    def upgrade_path(self):
        """Gets the upgrade_path of this Vulnerability.


        :return: The upgrade_path of this Vulnerability.
        :rtype: object
        """
        return self._upgrade_path

    @upgrade_path.setter
    def upgrade_path(self, upgrade_path):
        """Sets the upgrade_path of this Vulnerability.


        :param upgrade_path: The upgrade_path of this Vulnerability.
        :type upgrade_path: object
        """

        self._upgrade_path = upgrade_path
