# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.test_gradle_file_request_files_target import TestGradleFileRequestFilesTarget
from openapi_server import util


class TestGradleFileRequestFiles(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, target: TestGradleFileRequestFilesTarget=None):
        """TestGradleFileRequestFiles - a model defined in OpenAPI

        :param target: The target of this TestGradleFileRequestFiles.
        """
        self.openapi_types = {
            'target': TestGradleFileRequestFilesTarget
        }

        self.attribute_map = {
            'target': 'target'
        }

        self._target = target

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestGradleFileRequestFiles':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Test_gradle_file_request_files of this TestGradleFileRequestFiles.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def target(self):
        """Gets the target of this TestGradleFileRequestFiles.


        :return: The target of this TestGradleFileRequestFiles.
        :rtype: TestGradleFileRequestFilesTarget
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this TestGradleFileRequestFiles.


        :param target: The target of this TestGradleFileRequestFiles.
        :type target: TestGradleFileRequestFilesTarget
        """
        if target is None:
            raise ValueError("Invalid value for `target`, must not be `None`")

        self._target = target
