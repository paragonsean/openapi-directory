# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListAllAggregatedIssues200ResponseIssuesInnerPriority(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, factors: List[object]=None, score: float=None):
        """ListAllAggregatedIssues200ResponseIssuesInnerPriority - a model defined in OpenAPI

        :param factors: The factors of this ListAllAggregatedIssues200ResponseIssuesInnerPriority.
        :param score: The score of this ListAllAggregatedIssues200ResponseIssuesInnerPriority.
        """
        self.openapi_types = {
            'factors': List[object],
            'score': float
        }

        self.attribute_map = {
            'factors': 'factors',
            'score': 'score'
        }

        self._factors = factors
        self._score = score

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListAllAggregatedIssues200ResponseIssuesInnerPriority':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The List_all_Aggregated_issues_200_response_issues_inner_priority of this ListAllAggregatedIssues200ResponseIssuesInnerPriority.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def factors(self):
        """Gets the factors of this ListAllAggregatedIssues200ResponseIssuesInnerPriority.

        The list of factors that contributed to the priority of the issue

        :return: The factors of this ListAllAggregatedIssues200ResponseIssuesInnerPriority.
        :rtype: List[object]
        """
        return self._factors

    @factors.setter
    def factors(self, factors):
        """Sets the factors of this ListAllAggregatedIssues200ResponseIssuesInnerPriority.

        The list of factors that contributed to the priority of the issue

        :param factors: The factors of this ListAllAggregatedIssues200ResponseIssuesInnerPriority.
        :type factors: List[object]
        """

        self._factors = factors

    @property
    def score(self):
        """Gets the score of this ListAllAggregatedIssues200ResponseIssuesInnerPriority.

        The priority score of the issue

        :return: The score of this ListAllAggregatedIssues200ResponseIssuesInnerPriority.
        :rtype: float
        """
        return self._score

    @score.setter
    def score(self, score):
        """Sets the score of this ListAllAggregatedIssues200ResponseIssuesInnerPriority.

        The priority score of the issue

        :param score: The score of this ListAllAggregatedIssues200ResponseIssuesInnerPriority.
        :type score: float
        """

        self._score = score
