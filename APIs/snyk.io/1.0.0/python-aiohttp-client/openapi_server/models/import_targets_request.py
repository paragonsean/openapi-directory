# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.import_targets_request_any_of import ImportTargetsRequestAnyOf
from openapi_server.models.import_targets_request_any_of1 import ImportTargetsRequestAnyOf1
from openapi_server.models.import_targets_request_any_of2 import ImportTargetsRequestAnyOf2
from openapi_server.models.import_targets_request_any_of3 import ImportTargetsRequestAnyOf3
from openapi_server.models.import_targets_request_any_of4 import ImportTargetsRequestAnyOf4
from openapi_server.models.import_targets_request_any_of5 import ImportTargetsRequestAnyOf5
from openapi_server.models.import_targets_request_any_of6 import ImportTargetsRequestAnyOf6
from openapi_server.models.import_targets_request_any_of7 import ImportTargetsRequestAnyOf7
from openapi_server.models.import_targets_request_any_of8 import ImportTargetsRequestAnyOf8
from openapi_server.models.import_targets_request_any_of9 import ImportTargetsRequestAnyOf9
from openapi_server.models.import_targets_request_any_of9_target import ImportTargetsRequestAnyOf9Target
from openapi_server import util


class ImportTargetsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, exclusion_globs: str=None, files: List[object]=None, target: ImportTargetsRequestAnyOf9Target=None):
        """ImportTargetsRequest - a model defined in OpenAPI

        :param exclusion_globs: The exclusion_globs of this ImportTargetsRequest.
        :param files: The files of this ImportTargetsRequest.
        :param target: The target of this ImportTargetsRequest.
        """
        self.openapi_types = {
            'exclusion_globs': str,
            'files': List[object],
            'target': ImportTargetsRequestAnyOf9Target
        }

        self.attribute_map = {
            'exclusion_globs': 'exclusionGlobs',
            'files': 'files',
            'target': 'target'
        }

        self._exclusion_globs = exclusion_globs
        self._files = files
        self._target = target

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImportTargetsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Import_targets_request of this ImportTargetsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def exclusion_globs(self):
        """Gets the exclusion_globs of this ImportTargetsRequest.

        a comma-separated list of up to 10 folder names to exclude from scanning. If not specified, it will default to \"fixtures, tests, \\_\\_tests\\_\\_, node_modules\". If an empty string is provided - no folders will be excluded. This attribute is only respected with Open Source and Container scan targets.

        :return: The exclusion_globs of this ImportTargetsRequest.
        :rtype: str
        """
        return self._exclusion_globs

    @exclusion_globs.setter
    def exclusion_globs(self, exclusion_globs):
        """Sets the exclusion_globs of this ImportTargetsRequest.

        a comma-separated list of up to 10 folder names to exclude from scanning. If not specified, it will default to \"fixtures, tests, \\_\\_tests\\_\\_, node_modules\". If an empty string is provided - no folders will be excluded. This attribute is only respected with Open Source and Container scan targets.

        :param exclusion_globs: The exclusion_globs of this ImportTargetsRequest.
        :type exclusion_globs: str
        """

        self._exclusion_globs = exclusion_globs

    @property
    def files(self):
        """Gets the files of this ImportTargetsRequest.

        an array of file objects

        :return: The files of this ImportTargetsRequest.
        :rtype: List[object]
        """
        return self._files

    @files.setter
    def files(self, files):
        """Sets the files of this ImportTargetsRequest.

        an array of file objects

        :param files: The files of this ImportTargetsRequest.
        :type files: List[object]
        """

        self._files = files

    @property
    def target(self):
        """Gets the target of this ImportTargetsRequest.


        :return: The target of this ImportTargetsRequest.
        :rtype: ImportTargetsRequestAnyOf9Target
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this ImportTargetsRequest.


        :param target: The target of this ImportTargetsRequest.
        :type target: ImportTargetsRequestAnyOf9Target
        """

        self._target = target
