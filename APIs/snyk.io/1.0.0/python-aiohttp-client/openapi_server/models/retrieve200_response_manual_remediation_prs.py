# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Retrieve200ResponseManualRemediationPrs(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, use_patch_remediation: bool=None):
        """Retrieve200ResponseManualRemediationPrs - a model defined in OpenAPI

        :param use_patch_remediation: The use_patch_remediation of this Retrieve200ResponseManualRemediationPrs.
        """
        self.openapi_types = {
            'use_patch_remediation': bool
        }

        self.attribute_map = {
            'use_patch_remediation': 'usePatchRemediation'
        }

        self._use_patch_remediation = use_patch_remediation

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Retrieve200ResponseManualRemediationPrs':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Retrieve_200_response_manualRemediationPrs of this Retrieve200ResponseManualRemediationPrs.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def use_patch_remediation(self):
        """Gets the use_patch_remediation of this Retrieve200ResponseManualRemediationPrs.

        If true, allows using patched remediation

        :return: The use_patch_remediation of this Retrieve200ResponseManualRemediationPrs.
        :rtype: bool
        """
        return self._use_patch_remediation

    @use_patch_remediation.setter
    def use_patch_remediation(self, use_patch_remediation):
        """Sets the use_patch_remediation of this Retrieve200ResponseManualRemediationPrs.

        If true, allows using patched remediation

        :param use_patch_remediation: The use_patch_remediation of this Retrieve200ResponseManualRemediationPrs.
        :type use_patch_remediation: bool
        """

        self._use_patch_remediation = use_patch_remediation
