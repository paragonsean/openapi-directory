# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_all_aggregated_issues_request_filters import ListAllAggregatedIssuesRequestFilters
from openapi_server import util


class ListAllAggregatedIssuesRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filters: ListAllAggregatedIssuesRequestFilters=None, include_description: bool=None, include_introduced_through: bool=None):
        """ListAllAggregatedIssuesRequest - a model defined in OpenAPI

        :param filters: The filters of this ListAllAggregatedIssuesRequest.
        :param include_description: The include_description of this ListAllAggregatedIssuesRequest.
        :param include_introduced_through: The include_introduced_through of this ListAllAggregatedIssuesRequest.
        """
        self.openapi_types = {
            'filters': ListAllAggregatedIssuesRequestFilters,
            'include_description': bool,
            'include_introduced_through': bool
        }

        self.attribute_map = {
            'filters': 'filters',
            'include_description': 'includeDescription',
            'include_introduced_through': 'includeIntroducedThrough'
        }

        self._filters = filters
        self._include_description = include_description
        self._include_introduced_through = include_introduced_through

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListAllAggregatedIssuesRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The List_all_Aggregated_issues_request of this ListAllAggregatedIssuesRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filters(self):
        """Gets the filters of this ListAllAggregatedIssuesRequest.


        :return: The filters of this ListAllAggregatedIssuesRequest.
        :rtype: ListAllAggregatedIssuesRequestFilters
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """Sets the filters of this ListAllAggregatedIssuesRequest.


        :param filters: The filters of this ListAllAggregatedIssuesRequest.
        :type filters: ListAllAggregatedIssuesRequestFilters
        """

        self._filters = filters

    @property
    def include_description(self):
        """Gets the include_description of this ListAllAggregatedIssuesRequest.

        If set to `true`, Include issue's description, if set to `false` (by default), it won't (Non-IaC projects only)

        :return: The include_description of this ListAllAggregatedIssuesRequest.
        :rtype: bool
        """
        return self._include_description

    @include_description.setter
    def include_description(self, include_description):
        """Sets the include_description of this ListAllAggregatedIssuesRequest.

        If set to `true`, Include issue's description, if set to `false` (by default), it won't (Non-IaC projects only)

        :param include_description: The include_description of this ListAllAggregatedIssuesRequest.
        :type include_description: bool
        """

        self._include_description = include_description

    @property
    def include_introduced_through(self):
        """Gets the include_introduced_through of this ListAllAggregatedIssuesRequest.

        If set to `true`, Include issue's introducedThrough, if set to `false` (by default), it won't. It's for container only projects (Non-IaC projects only)

        :return: The include_introduced_through of this ListAllAggregatedIssuesRequest.
        :rtype: bool
        """
        return self._include_introduced_through

    @include_introduced_through.setter
    def include_introduced_through(self, include_introduced_through):
        """Sets the include_introduced_through of this ListAllAggregatedIssuesRequest.

        If set to `true`, Include issue's introducedThrough, if set to `false` (by default), it won't. It's for container only projects (Non-IaC projects only)

        :param include_introduced_through: The include_introduced_through of this ListAllAggregatedIssuesRequest.
        :type include_introduced_through: bool
        """

        self._include_introduced_through = include_introduced_through
