# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FunctionId(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, class_name: str=None, file_path: str=None, function_name: str=None):
        """FunctionId - a model defined in OpenAPI

        :param class_name: The class_name of this FunctionId.
        :param file_path: The file_path of this FunctionId.
        :param function_name: The function_name of this FunctionId.
        """
        self.openapi_types = {
            'class_name': str,
            'file_path': str,
            'function_name': str
        }

        self.attribute_map = {
            'class_name': 'className?',
            'file_path': 'filePath?',
            'function_name': 'functionName'
        }

        self._class_name = class_name
        self._file_path = file_path
        self._function_name = function_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FunctionId':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FunctionId of this FunctionId.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def class_name(self):
        """Gets the class_name of this FunctionId.

        Class name (Java only).

        :return: The class_name of this FunctionId.
        :rtype: str
        """
        return self._class_name

    @class_name.setter
    def class_name(self, class_name):
        """Sets the class_name of this FunctionId.

        Class name (Java only).

        :param class_name: The class_name of this FunctionId.
        :type class_name: str
        """

        self._class_name = class_name

    @property
    def file_path(self):
        """Gets the file_path of this FunctionId.

        Path to file (Javascript only).

        :return: The file_path of this FunctionId.
        :rtype: str
        """
        return self._file_path

    @file_path.setter
    def file_path(self, file_path):
        """Sets the file_path of this FunctionId.

        Path to file (Javascript only).

        :param file_path: The file_path of this FunctionId.
        :type file_path: str
        """

        self._file_path = file_path

    @property
    def function_name(self):
        """Gets the function_name of this FunctionId.

        Function name.

        :return: The function_name of this FunctionId.
        :rtype: str
        """
        return self._function_name

    @function_name.setter
    def function_name(self, function_name):
        """Sets the function_name of this FunctionId.

        Function name.

        :param function_name: The function_name of this FunctionId.
        :type function_name: str
        """

        self._function_name = function_name
