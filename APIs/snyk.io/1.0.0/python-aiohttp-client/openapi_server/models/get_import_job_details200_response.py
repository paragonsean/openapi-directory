# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetImportJobDetails200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created: str=None, id: str=None, logs: List[object]=None, status: str=None):
        """GetImportJobDetails200Response - a model defined in OpenAPI

        :param created: The created of this GetImportJobDetails200Response.
        :param id: The id of this GetImportJobDetails200Response.
        :param logs: The logs of this GetImportJobDetails200Response.
        :param status: The status of this GetImportJobDetails200Response.
        """
        self.openapi_types = {
            'created': str,
            'id': str,
            'logs': List[object],
            'status': str
        }

        self.attribute_map = {
            'created': 'created',
            'id': 'id',
            'logs': 'logs',
            'status': 'status'
        }

        self._created = created
        self._id = id
        self._logs = logs
        self._status = status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetImportJobDetails200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Get_import_job_details_200_response of this GetImportJobDetails200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created(self):
        """Gets the created of this GetImportJobDetails200Response.

        the time when an import job was created represented as a [UTC (ISO-8601)](https://tools.ietf.org/html/rfc3339) string

        :return: The created of this GetImportJobDetails200Response.
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this GetImportJobDetails200Response.

        the time when an import job was created represented as a [UTC (ISO-8601)](https://tools.ietf.org/html/rfc3339) string

        :param created: The created of this GetImportJobDetails200Response.
        :type created: str
        """

        self._created = created

    @property
    def id(self):
        """Gets the id of this GetImportJobDetails200Response.

        A uuid representing the job's id

        :return: The id of this GetImportJobDetails200Response.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this GetImportJobDetails200Response.

        A uuid representing the job's id

        :param id: The id of this GetImportJobDetails200Response.
        :type id: str
        """

        self._id = id

    @property
    def logs(self):
        """Gets the logs of this GetImportJobDetails200Response.

        all organizations imported by the job

        :return: The logs of this GetImportJobDetails200Response.
        :rtype: List[object]
        """
        return self._logs

    @logs.setter
    def logs(self, logs):
        """Sets the logs of this GetImportJobDetails200Response.

        all organizations imported by the job

        :param logs: The logs of this GetImportJobDetails200Response.
        :type logs: List[object]
        """

        self._logs = logs

    @property
    def status(self):
        """Gets the status of this GetImportJobDetails200Response.

        a string representing the status of a job.  One of: pending, failed, aborted or complete.

        :return: The status of this GetImportJobDetails200Response.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this GetImportJobDetails200Response.

        a string representing the status of a job.  One of: pending, failed, aborted or complete.

        :param status: The status of this GetImportJobDetails200Response.
        :type status: str
        """

        self._status = status
