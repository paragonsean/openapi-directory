# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetIssueCounts400ResponseError(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, inner_errors: List[object]=None, name: str=None):
        """GetIssueCounts400ResponseError - a model defined in OpenAPI

        :param inner_errors: The inner_errors of this GetIssueCounts400ResponseError.
        :param name: The name of this GetIssueCounts400ResponseError.
        """
        self.openapi_types = {
            'inner_errors': List[object],
            'name': str
        }

        self.attribute_map = {
            'inner_errors': 'innerErrors',
            'name': 'name'
        }

        self._inner_errors = inner_errors
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetIssueCounts400ResponseError':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Get_issue_counts_400_response_error of this GetIssueCounts400ResponseError.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def inner_errors(self):
        """Gets the inner_errors of this GetIssueCounts400ResponseError.

        A list of additional reasons why the error occurred

        :return: The inner_errors of this GetIssueCounts400ResponseError.
        :rtype: List[object]
        """
        return self._inner_errors

    @inner_errors.setter
    def inner_errors(self, inner_errors):
        """Sets the inner_errors of this GetIssueCounts400ResponseError.

        A list of additional reasons why the error occurred

        :param inner_errors: The inner_errors of this GetIssueCounts400ResponseError.
        :type inner_errors: List[object]
        """

        self._inner_errors = inner_errors

    @property
    def name(self):
        """Gets the name of this GetIssueCounts400ResponseError.

        A descriptive message of the error

        :return: The name of this GetIssueCounts400ResponseError.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this GetIssueCounts400ResponseError.

        A descriptive message of the error

        :param name: The name of this GetIssueCounts400ResponseError.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name
