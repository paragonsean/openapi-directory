# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ListAllAggregatedIssues200ResponseIssuesInnerLinks(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, paths: str=None):
        """ListAllAggregatedIssues200ResponseIssuesInnerLinks - a model defined in OpenAPI

        :param paths: The paths of this ListAllAggregatedIssues200ResponseIssuesInnerLinks.
        """
        self.openapi_types = {
            'paths': str
        }

        self.attribute_map = {
            'paths': 'paths'
        }

        self._paths = paths

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ListAllAggregatedIssues200ResponseIssuesInnerLinks':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The List_all_Aggregated_issues_200_response_issues_inner_links of this ListAllAggregatedIssues200ResponseIssuesInnerLinks.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def paths(self):
        """Gets the paths of this ListAllAggregatedIssues200ResponseIssuesInnerLinks.

        The URL for the dependency paths that introduce this issue

        :return: The paths of this ListAllAggregatedIssues200ResponseIssuesInnerLinks.
        :rtype: str
        """
        return self._paths

    @paths.setter
    def paths(self, paths):
        """Sets the paths of this ListAllAggregatedIssues200ResponseIssuesInnerLinks.

        The URL for the dependency paths that introduce this issue

        :param paths: The paths of this ListAllAggregatedIssues200ResponseIssuesInnerLinks.
        :type paths: str
        """

        self._paths = paths
