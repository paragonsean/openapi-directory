# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.test_maven_file_request_files_target import TestMavenFileRequestFilesTarget
from openapi_server import util


class TestMavenFileRequestFiles(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional: List[object]=None, target: TestMavenFileRequestFilesTarget=None):
        """TestMavenFileRequestFiles - a model defined in OpenAPI

        :param additional: The additional of this TestMavenFileRequestFiles.
        :param target: The target of this TestMavenFileRequestFiles.
        """
        self.openapi_types = {
            'additional': List[object],
            'target': TestMavenFileRequestFilesTarget
        }

        self.attribute_map = {
            'additional': 'additional',
            'target': 'target'
        }

        self._additional = additional
        self._target = target

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TestMavenFileRequestFiles':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Test_maven_file_request_files of this TestMavenFileRequestFiles.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional(self):
        """Gets the additional of this TestMavenFileRequestFiles.

        additional manifest files (if needed), encoded according the the \"encoding\" field.

        :return: The additional of this TestMavenFileRequestFiles.
        :rtype: List[object]
        """
        return self._additional

    @additional.setter
    def additional(self, additional):
        """Sets the additional of this TestMavenFileRequestFiles.

        additional manifest files (if needed), encoded according the the \"encoding\" field.

        :param additional: The additional of this TestMavenFileRequestFiles.
        :type additional: List[object]
        """

        self._additional = additional

    @property
    def target(self):
        """Gets the target of this TestMavenFileRequestFiles.


        :return: The target of this TestMavenFileRequestFiles.
        :rtype: TestMavenFileRequestFilesTarget
        """
        return self._target

    @target.setter
    def target(self, target):
        """Sets the target of this TestMavenFileRequestFiles.


        :param target: The target of this TestMavenFileRequestFiles.
        :type target: TestMavenFileRequestFilesTarget
        """
        if target is None:
            raise ValueError("Invalid value for `target`, must not be `None`")

        self._target = target
