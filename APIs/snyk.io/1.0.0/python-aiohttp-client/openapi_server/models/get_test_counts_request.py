# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.get_test_counts_request_filters import GetTestCountsRequestFilters
from openapi_server import util


class GetTestCountsRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, filters: GetTestCountsRequestFilters=None):
        """GetTestCountsRequest - a model defined in OpenAPI

        :param filters: The filters of this GetTestCountsRequest.
        """
        self.openapi_types = {
            'filters': GetTestCountsRequestFilters
        }

        self.attribute_map = {
            'filters': 'filters'
        }

        self._filters = filters

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetTestCountsRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Get_test_counts_request of this GetTestCountsRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def filters(self):
        """Gets the filters of this GetTestCountsRequest.


        :return: The filters of this GetTestCountsRequest.
        :rtype: GetTestCountsRequestFilters
        """
        return self._filters

    @filters.setter
    def filters(self, filters):
        """Sets the filters of this GetTestCountsRequest.


        :param filters: The filters of this GetTestCountsRequest.
        :type filters: GetTestCountsRequestFilters
        """

        self._filters = filters
