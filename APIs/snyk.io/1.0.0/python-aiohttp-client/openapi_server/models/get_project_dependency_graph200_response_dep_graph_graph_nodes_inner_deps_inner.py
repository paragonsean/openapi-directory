# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GetProjectDependencyGraph200ResponseDepGraphGraphNodesInnerDepsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, node_id: str=None):
        """GetProjectDependencyGraph200ResponseDepGraphGraphNodesInnerDepsInner - a model defined in OpenAPI

        :param node_id: The node_id of this GetProjectDependencyGraph200ResponseDepGraphGraphNodesInnerDepsInner.
        """
        self.openapi_types = {
            'node_id': str
        }

        self.attribute_map = {
            'node_id': 'nodeId'
        }

        self._node_id = node_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetProjectDependencyGraph200ResponseDepGraphGraphNodesInnerDepsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Get_Project_dependency_graph_200_response_depGraph_graph_nodes_inner_deps_inner of this GetProjectDependencyGraph200ResponseDepGraphGraphNodesInnerDepsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def node_id(self):
        """Gets the node_id of this GetProjectDependencyGraph200ResponseDepGraphGraphNodesInnerDepsInner.

        The id of the node

        :return: The node_id of this GetProjectDependencyGraph200ResponseDepGraphGraphNodesInnerDepsInner.
        :rtype: str
        """
        return self._node_id

    @node_id.setter
    def node_id(self, node_id):
        """Sets the node_id of this GetProjectDependencyGraph200ResponseDepGraphGraphNodesInnerDepsInner.

        The id of the node

        :param node_id: The node_id of this GetProjectDependencyGraph200ResponseDepGraphGraphNodesInnerDepsInner.
        :type node_id: str
        """
        if node_id is None:
            raise ValueError("Invalid value for `node_id`, must not be `None`")

        self._node_id = node_id
