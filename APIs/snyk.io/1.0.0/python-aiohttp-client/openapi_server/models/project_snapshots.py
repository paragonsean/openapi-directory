# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.list_all_project_snapshots200_response_snapshots_inner import ListAllProjectSnapshots200ResponseSnapshotsInner
from openapi_server import util


class ProjectSnapshots(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, snapshots: List[ListAllProjectSnapshots200ResponseSnapshotsInner]=None, total: float=None):
        """ProjectSnapshots - a model defined in OpenAPI

        :param snapshots: The snapshots of this ProjectSnapshots.
        :param total: The total of this ProjectSnapshots.
        """
        self.openapi_types = {
            'snapshots': List[ListAllProjectSnapshots200ResponseSnapshotsInner],
            'total': float
        }

        self.attribute_map = {
            'snapshots': 'snapshots',
            'total': 'total'
        }

        self._snapshots = snapshots
        self._total = total

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ProjectSnapshots':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Project_snapshots of this ProjectSnapshots.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def snapshots(self):
        """Gets the snapshots of this ProjectSnapshots.

        A list of the project's snapshots, ordered according to date (latest first).

        :return: The snapshots of this ProjectSnapshots.
        :rtype: List[ListAllProjectSnapshots200ResponseSnapshotsInner]
        """
        return self._snapshots

    @snapshots.setter
    def snapshots(self, snapshots):
        """Sets the snapshots of this ProjectSnapshots.

        A list of the project's snapshots, ordered according to date (latest first).

        :param snapshots: The snapshots of this ProjectSnapshots.
        :type snapshots: List[ListAllProjectSnapshots200ResponseSnapshotsInner]
        """

        self._snapshots = snapshots

    @property
    def total(self):
        """Gets the total of this ProjectSnapshots.

        The total number of results

        :return: The total of this ProjectSnapshots.
        :rtype: float
        """
        return self._total

    @total.setter
    def total(self, total):
        """Sets the total of this ProjectSnapshots.

        The total number of results

        :param total: The total of this ProjectSnapshots.
        :type total: float
        """

        self._total = total
