/*
 * Veteran Confirmation
 * The Deprecated Veteran Confirmation API allows you to confirm Veteran status for a given person. This can be useful for offering Veterans discounts or other benefits.  The API will only return “Confirmed” or “Not Confirmed”.  ## Quickstart Guide ### 1. Get Access Credentials Get started by filling out the form on the [Apply for VA Lighthouse Developer Access](https://developer.va.gov/apply) page.  After submitting a request, you will receive your credentials for using the API in the Development environment, which allows you to try it out with mock data before moving to the Production environment.  ### 2. Test the API In the endpoint documentation below, we've provided a curl command builder for trying out the API before implementation with your app. Use [Test User](https://github.com/department-of-veterans-affairs/vets-api-clients/blob/master/test_accounts/confirmation_test_accounts.md) attributes to populate the request body.  ### 3. Build your app The base URI for the Veteran Confirmation API in the Sandbox environment is:  https://sandbox-api.va.gov/services/veteran_confirmation/v0  In this environment, use attributes from the list of [Test Users](https://github.com/department-of-veterans-affairs/vets-api-clients/blob/master/test_accounts/confirmation_test_accounts.md). Only Test Users can return a `\"confirmed\"` response.  Check out some of our [sample apps](https://github.com/department-of-veterans-affairs/vets-api-clients). Please visit our VA Lighthouse [Support portal](https://developer.va.gov/support) should you need further assistance.  ### 4. Show us a demo and get access to the Production environment After building your app, we ask that you give us a demo before we set you up with production credentials. Please see the [Path to Production](https://developer.va.gov/go-live) page for more details.  ## Authorization This API requires an API key in combination with identifiable information for the person being confirmed listed below. API requests are authorized through a symmetric API token provided in an HTTP header with name `apikey`. Including more information has a better chance of making a match and returning a Confirmed status. ### Required information: * First Name * Last Name * Date of Birth * Social Security Number  ### Optional information: * Middle Name * Gender  ## Reference ### Sandbox vs. Production Data APIs accessed via the Sandbox environment are using the same underlying logic as VA’s production APIs; only the underlying data store is different.  ### Master Veteran Index (MVI) The Master Veteran Index confirms a user's identity. In Production, several factors are considered to confirm identity. These include: a user’s first name, last name, date of birth and Social Security number. The MVI is mocked in the Sandbox environment. In this environment, the only factor used to confirm identity is the Social Security number.  ### Rate Limiting We implemented basic rate limiting of 60 requests per minute. If you exceed this quota, your request will return a 429 status code. You may petition for increased rate limits by emailing and requests will be decided on a case by case basis.  ### Raw Open API Spec https://api.va.gov/services/veteran_confirmation/docs/v0/api 
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.APIError;
import org.openapitools.client.model.AuthorizationError;
import org.openapitools.client.model.VeteranStatusConfirmation;
import org.openapitools.client.model.VeteranStatusRequest;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class VeteranConfirmationStatusApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public VeteranConfirmationStatusApi() {
        this(Configuration.getDefaultApiClient());
    }

    public VeteranConfirmationStatusApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for getVeteranStatus
     * @param veteranStatusRequest  (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Confirmation status successfully retrieved </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request - invalid or missing query parameters </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Missing API token </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Invalid API token </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> We encountered a temporary error. Check back in the future. </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call getVeteranStatusCall(VeteranStatusRequest veteranStatusRequest, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = veteranStatusRequest;

        // create path and map variables
        String localVarPath = "/status";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "apikey" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private okhttp3.Call getVeteranStatusValidateBeforeCall(VeteranStatusRequest veteranStatusRequest, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'veteranStatusRequest' is set
        if (veteranStatusRequest == null) {
            throw new ApiException("Missing the required parameter 'veteranStatusRequest' when calling getVeteranStatus(Async)");
        }

        return getVeteranStatusCall(veteranStatusRequest, _callback);

    }

    /**
     * Get confirmation about an individual&#39;s Veteran status according to the VA
     * 
     * @param veteranStatusRequest  (required)
     * @return VeteranStatusConfirmation
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Confirmation status successfully retrieved </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request - invalid or missing query parameters </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Missing API token </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Invalid API token </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> We encountered a temporary error. Check back in the future. </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public VeteranStatusConfirmation getVeteranStatus(VeteranStatusRequest veteranStatusRequest) throws ApiException {
        ApiResponse<VeteranStatusConfirmation> localVarResp = getVeteranStatusWithHttpInfo(veteranStatusRequest);
        return localVarResp.getData();
    }

    /**
     * Get confirmation about an individual&#39;s Veteran status according to the VA
     * 
     * @param veteranStatusRequest  (required)
     * @return ApiResponse&lt;VeteranStatusConfirmation&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Confirmation status successfully retrieved </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request - invalid or missing query parameters </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Missing API token </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Invalid API token </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> We encountered a temporary error. Check back in the future. </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ApiResponse<VeteranStatusConfirmation> getVeteranStatusWithHttpInfo(VeteranStatusRequest veteranStatusRequest) throws ApiException {
        okhttp3.Call localVarCall = getVeteranStatusValidateBeforeCall(veteranStatusRequest, null);
        Type localVarReturnType = new TypeToken<VeteranStatusConfirmation>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get confirmation about an individual&#39;s Veteran status according to the VA (asynchronously)
     * 
     * @param veteranStatusRequest  (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Confirmation status successfully retrieved </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> Bad request - invalid or missing query parameters </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Missing API token </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> Invalid API token </td><td>  -  </td></tr>
        <tr><td> 503 </td><td> We encountered a temporary error. Check back in the future. </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public okhttp3.Call getVeteranStatusAsync(VeteranStatusRequest veteranStatusRequest, final ApiCallback<VeteranStatusConfirmation> _callback) throws ApiException {

        okhttp3.Call localVarCall = getVeteranStatusValidateBeforeCall(veteranStatusRequest, _callback);
        Type localVarReturnType = new TypeToken<VeteranStatusConfirmation>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
