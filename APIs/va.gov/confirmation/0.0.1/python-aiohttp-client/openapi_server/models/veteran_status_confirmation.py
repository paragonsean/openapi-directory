# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class VeteranStatusConfirmation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, veteran_status: str=None):
        """VeteranStatusConfirmation - a model defined in OpenAPI

        :param veteran_status: The veteran_status of this VeteranStatusConfirmation.
        """
        self.openapi_types = {
            'veteran_status': str
        }

        self.attribute_map = {
            'veteran_status': 'veteran_status'
        }

        self._veteran_status = veteran_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'VeteranStatusConfirmation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The VeteranStatusConfirmation of this VeteranStatusConfirmation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def veteran_status(self):
        """Gets the veteran_status of this VeteranStatusConfirmation.

        Whether the system could confirm the Veteran status of an individual based on traits 

        :return: The veteran_status of this VeteranStatusConfirmation.
        :rtype: str
        """
        return self._veteran_status

    @veteran_status.setter
    def veteran_status(self, veteran_status):
        """Sets the veteran_status of this VeteranStatusConfirmation.

        Whether the system could confirm the Veteran status of an individual based on traits 

        :param veteran_status: The veteran_status of this VeteranStatusConfirmation.
        :type veteran_status: str
        """
        allowed_values = ["confirmed", "not confirmed"]  # noqa: E501
        if veteran_status not in allowed_values:
            raise ValueError(
                "Invalid value for `veteran_status` ({0}), must be one of {1}"
                .format(veteran_status, allowed_values)
            )

        self._veteran_status = veteran_status
