# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class NearbyAttributes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, max_time: int=None, min_time: int=None):
        """NearbyAttributes - a model defined in OpenAPI

        :param max_time: The max_time of this NearbyAttributes.
        :param min_time: The min_time of this NearbyAttributes.
        """
        self.openapi_types = {
            'max_time': int,
            'min_time': int
        }

        self.attribute_map = {
            'max_time': 'max_time',
            'min_time': 'min_time'
        }

        self._max_time = max_time
        self._min_time = min_time

    @classmethod
    def from_dict(cls, dikt: dict) -> 'NearbyAttributes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The NearbyAttributes of this NearbyAttributes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def max_time(self):
        """Gets the max_time of this NearbyAttributes.

        Maximum time to reach facility.

        :return: The max_time of this NearbyAttributes.
        :rtype: int
        """
        return self._max_time

    @max_time.setter
    def max_time(self, max_time):
        """Sets the max_time of this NearbyAttributes.

        Maximum time to reach facility.

        :param max_time: The max_time of this NearbyAttributes.
        :type max_time: int
        """
        if max_time is None:
            raise ValueError("Invalid value for `max_time`, must not be `None`")

        self._max_time = max_time

    @property
    def min_time(self):
        """Gets the min_time of this NearbyAttributes.

        Minimum time to reach facility.

        :return: The min_time of this NearbyAttributes.
        :rtype: int
        """
        return self._min_time

    @min_time.setter
    def min_time(self, min_time):
        """Sets the min_time of this NearbyAttributes.

        Minimum time to reach facility.

        :param min_time: The min_time of this NearbyAttributes.
        :type min_time: int
        """
        if min_time is None:
            raise ValueError("Invalid value for `min_time`, must not be `None`")

        self._min_time = min_time
