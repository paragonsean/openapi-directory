# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DetailedServiceAddress(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_line1: str=None, address_line2: str=None, building_name_number: str=None, city: str=None, clinic_name: str=None, country_code: str=None, state: str=None, wing_floor_or_room_number: str=None, zip_code: str=None):
        """DetailedServiceAddress - a model defined in OpenAPI

        :param address_line1: The address_line1 of this DetailedServiceAddress.
        :param address_line2: The address_line2 of this DetailedServiceAddress.
        :param building_name_number: The building_name_number of this DetailedServiceAddress.
        :param city: The city of this DetailedServiceAddress.
        :param clinic_name: The clinic_name of this DetailedServiceAddress.
        :param country_code: The country_code of this DetailedServiceAddress.
        :param state: The state of this DetailedServiceAddress.
        :param wing_floor_or_room_number: The wing_floor_or_room_number of this DetailedServiceAddress.
        :param zip_code: The zip_code of this DetailedServiceAddress.
        """
        self.openapi_types = {
            'address_line1': str,
            'address_line2': str,
            'building_name_number': str,
            'city': str,
            'clinic_name': str,
            'country_code': str,
            'state': str,
            'wing_floor_or_room_number': str,
            'zip_code': str
        }

        self.attribute_map = {
            'address_line1': 'address_line1',
            'address_line2': 'address_line2',
            'building_name_number': 'building_name_number',
            'city': 'city',
            'clinic_name': 'clinic_name',
            'country_code': 'country_code',
            'state': 'state',
            'wing_floor_or_room_number': 'wing_floor_or_room_number',
            'zip_code': 'zip_code'
        }

        self._address_line1 = address_line1
        self._address_line2 = address_line2
        self._building_name_number = building_name_number
        self._city = city
        self._clinic_name = clinic_name
        self._country_code = country_code
        self._state = state
        self._wing_floor_or_room_number = wing_floor_or_room_number
        self._zip_code = zip_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DetailedServiceAddress':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DetailedServiceAddress of this DetailedServiceAddress.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_line1(self):
        """Gets the address_line1 of this DetailedServiceAddress.

        Street name and number.

        :return: The address_line1 of this DetailedServiceAddress.
        :rtype: str
        """
        return self._address_line1

    @address_line1.setter
    def address_line1(self, address_line1):
        """Sets the address_line1 of this DetailedServiceAddress.

        Street name and number.

        :param address_line1: The address_line1 of this DetailedServiceAddress.
        :type address_line1: str
        """

        self._address_line1 = address_line1

    @property
    def address_line2(self):
        """Gets the address_line2 of this DetailedServiceAddress.

        Building number.

        :return: The address_line2 of this DetailedServiceAddress.
        :rtype: str
        """
        return self._address_line2

    @address_line2.setter
    def address_line2(self, address_line2):
        """Sets the address_line2 of this DetailedServiceAddress.

        Building number.

        :param address_line2: The address_line2 of this DetailedServiceAddress.
        :type address_line2: str
        """

        self._address_line2 = address_line2

    @property
    def building_name_number(self):
        """Gets the building_name_number of this DetailedServiceAddress.

        Building name and/or number of service.

        :return: The building_name_number of this DetailedServiceAddress.
        :rtype: str
        """
        return self._building_name_number

    @building_name_number.setter
    def building_name_number(self, building_name_number):
        """Sets the building_name_number of this DetailedServiceAddress.

        Building name and/or number of service.

        :param building_name_number: The building_name_number of this DetailedServiceAddress.
        :type building_name_number: str
        """

        self._building_name_number = building_name_number

    @property
    def city(self):
        """Gets the city of this DetailedServiceAddress.

        City name.

        :return: The city of this DetailedServiceAddress.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this DetailedServiceAddress.

        City name.

        :param city: The city of this DetailedServiceAddress.
        :type city: str
        """

        self._city = city

    @property
    def clinic_name(self):
        """Gets the clinic_name of this DetailedServiceAddress.

        Clinic name for service.

        :return: The clinic_name of this DetailedServiceAddress.
        :rtype: str
        """
        return self._clinic_name

    @clinic_name.setter
    def clinic_name(self, clinic_name):
        """Sets the clinic_name of this DetailedServiceAddress.

        Clinic name for service.

        :param clinic_name: The clinic_name of this DetailedServiceAddress.
        :type clinic_name: str
        """

        self._clinic_name = clinic_name

    @property
    def country_code(self):
        """Gets the country_code of this DetailedServiceAddress.

        Country code.

        :return: The country_code of this DetailedServiceAddress.
        :rtype: str
        """
        return self._country_code

    @country_code.setter
    def country_code(self, country_code):
        """Sets the country_code of this DetailedServiceAddress.

        Country code.

        :param country_code: The country_code of this DetailedServiceAddress.
        :type country_code: str
        """

        self._country_code = country_code

    @property
    def state(self):
        """Gets the state of this DetailedServiceAddress.

        State code.

        :return: The state of this DetailedServiceAddress.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this DetailedServiceAddress.

        State code.

        :param state: The state of this DetailedServiceAddress.
        :type state: str
        """

        self._state = state

    @property
    def wing_floor_or_room_number(self):
        """Gets the wing_floor_or_room_number of this DetailedServiceAddress.

        Wing, floor, or room number of service.

        :return: The wing_floor_or_room_number of this DetailedServiceAddress.
        :rtype: str
        """
        return self._wing_floor_or_room_number

    @wing_floor_or_room_number.setter
    def wing_floor_or_room_number(self, wing_floor_or_room_number):
        """Sets the wing_floor_or_room_number of this DetailedServiceAddress.

        Wing, floor, or room number of service.

        :param wing_floor_or_room_number: The wing_floor_or_room_number of this DetailedServiceAddress.
        :type wing_floor_or_room_number: str
        """

        self._wing_floor_or_room_number = wing_floor_or_room_number

    @property
    def zip_code(self):
        """Gets the zip_code of this DetailedServiceAddress.

        Postal (ZIP) code.

        :return: The zip_code of this DetailedServiceAddress.
        :rtype: str
        """
        return self._zip_code

    @zip_code.setter
    def zip_code(self, zip_code):
        """Sets the zip_code of this DetailedServiceAddress.

        Postal (ZIP) code.

        :param zip_code: The zip_code of this DetailedServiceAddress.
        :type zip_code: str
        """

        self._zip_code = zip_code
