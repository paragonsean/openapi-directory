# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Address(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_1: str=None, address_2: str=None, address_3: str=None, city: str=None, state: str=None, zip: str=None):
        """Address - a model defined in OpenAPI

        :param address_1: The address_1 of this Address.
        :param address_2: The address_2 of this Address.
        :param address_3: The address_3 of this Address.
        :param city: The city of this Address.
        :param state: The state of this Address.
        :param zip: The zip of this Address.
        """
        self.openapi_types = {
            'address_1': str,
            'address_2': str,
            'address_3': str,
            'city': str,
            'state': str,
            'zip': str
        }

        self.attribute_map = {
            'address_1': 'address_1',
            'address_2': 'address_2',
            'address_3': 'address_3',
            'city': 'city',
            'state': 'state',
            'zip': 'zip'
        }

        self._address_1 = address_1
        self._address_2 = address_2
        self._address_3 = address_3
        self._city = city
        self._state = state
        self._zip = zip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Address':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Address of this Address.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_1(self):
        """Gets the address_1 of this Address.

        Street name and number.

        :return: The address_1 of this Address.
        :rtype: str
        """
        return self._address_1

    @address_1.setter
    def address_1(self, address_1):
        """Sets the address_1 of this Address.

        Street name and number.

        :param address_1: The address_1 of this Address.
        :type address_1: str
        """

        self._address_1 = address_1

    @property
    def address_2(self):
        """Gets the address_2 of this Address.

        Second line of address if applicable (such as a building number).

        :return: The address_2 of this Address.
        :rtype: str
        """
        return self._address_2

    @address_2.setter
    def address_2(self, address_2):
        """Sets the address_2 of this Address.

        Second line of address if applicable (such as a building number).

        :param address_2: The address_2 of this Address.
        :type address_2: str
        """

        self._address_2 = address_2

    @property
    def address_3(self):
        """Gets the address_3 of this Address.

        Third line of address if applicable (such as a unit or suite number).

        :return: The address_3 of this Address.
        :rtype: str
        """
        return self._address_3

    @address_3.setter
    def address_3(self, address_3):
        """Sets the address_3 of this Address.

        Third line of address if applicable (such as a unit or suite number).

        :param address_3: The address_3 of this Address.
        :type address_3: str
        """

        self._address_3 = address_3

    @property
    def city(self):
        """Gets the city of this Address.

        City name.

        :return: The city of this Address.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this Address.

        City name.

        :param city: The city of this Address.
        :type city: str
        """

        self._city = city

    @property
    def state(self):
        """Gets the state of this Address.

        State code.

        :return: The state of this Address.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Address.

        State code.

        :param state: The state of this Address.
        :type state: str
        """

        self._state = state

    @property
    def zip(self):
        """Gets the zip of this Address.

        Postal (ZIP) code.

        :return: The zip of this Address.
        :rtype: str
        """
        return self._zip

    @zip.setter
    def zip(self, zip):
        """Sets the zip of this Address.

        Postal (ZIP) code.

        :param zip: The zip of this Address.
        :type zip: str
        """

        self._zip = zip
