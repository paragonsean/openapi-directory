# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Phone(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, after_hours: str=None, enrollment_coordinator: str=None, fax: str=None, health_connect: str=None, main: str=None, mental_health_clinic: str=None, patient_advocate: str=None, pharmacy: str=None):
        """Phone - a model defined in OpenAPI

        :param after_hours: The after_hours of this Phone.
        :param enrollment_coordinator: The enrollment_coordinator of this Phone.
        :param fax: The fax of this Phone.
        :param health_connect: The health_connect of this Phone.
        :param main: The main of this Phone.
        :param mental_health_clinic: The mental_health_clinic of this Phone.
        :param patient_advocate: The patient_advocate of this Phone.
        :param pharmacy: The pharmacy of this Phone.
        """
        self.openapi_types = {
            'after_hours': str,
            'enrollment_coordinator': str,
            'fax': str,
            'health_connect': str,
            'main': str,
            'mental_health_clinic': str,
            'patient_advocate': str,
            'pharmacy': str
        }

        self.attribute_map = {
            'after_hours': 'after_hours',
            'enrollment_coordinator': 'enrollment_coordinator',
            'fax': 'fax',
            'health_connect': 'health_connect',
            'main': 'main',
            'mental_health_clinic': 'mental_health_clinic',
            'patient_advocate': 'patient_advocate',
            'pharmacy': 'pharmacy'
        }

        self._after_hours = after_hours
        self._enrollment_coordinator = enrollment_coordinator
        self._fax = fax
        self._health_connect = health_connect
        self._main = main
        self._mental_health_clinic = mental_health_clinic
        self._patient_advocate = patient_advocate
        self._pharmacy = pharmacy

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Phone':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Phone of this Phone.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def after_hours(self):
        """Gets the after_hours of this Phone.

        Phone number that may be reached outside of operating hours for given facility.

        :return: The after_hours of this Phone.
        :rtype: str
        """
        return self._after_hours

    @after_hours.setter
    def after_hours(self, after_hours):
        """Sets the after_hours of this Phone.

        Phone number that may be reached outside of operating hours for given facility.

        :param after_hours: The after_hours of this Phone.
        :type after_hours: str
        """

        self._after_hours = after_hours

    @property
    def enrollment_coordinator(self):
        """Gets the enrollment_coordinator of this Phone.

        Phone number for enrollment coordinator for given facility.

        :return: The enrollment_coordinator of this Phone.
        :rtype: str
        """
        return self._enrollment_coordinator

    @enrollment_coordinator.setter
    def enrollment_coordinator(self, enrollment_coordinator):
        """Sets the enrollment_coordinator of this Phone.

        Phone number for enrollment coordinator for given facility.

        :param enrollment_coordinator: The enrollment_coordinator of this Phone.
        :type enrollment_coordinator: str
        """

        self._enrollment_coordinator = enrollment_coordinator

    @property
    def fax(self):
        """Gets the fax of this Phone.

        Phone number used for faxing to given facility.

        :return: The fax of this Phone.
        :rtype: str
        """
        return self._fax

    @fax.setter
    def fax(self, fax):
        """Sets the fax of this Phone.

        Phone number used for faxing to given facility.

        :param fax: The fax of this Phone.
        :type fax: str
        """

        self._fax = fax

    @property
    def health_connect(self):
        """Gets the health_connect of this Phone.

        Phone number for VA Health Connect.

        :return: The health_connect of this Phone.
        :rtype: str
        """
        return self._health_connect

    @health_connect.setter
    def health_connect(self, health_connect):
        """Sets the health_connect of this Phone.

        Phone number for VA Health Connect.

        :param health_connect: The health_connect of this Phone.
        :type health_connect: str
        """

        self._health_connect = health_connect

    @property
    def main(self):
        """Gets the main of this Phone.

        Phone number for given facility.

        :return: The main of this Phone.
        :rtype: str
        """
        return self._main

    @main.setter
    def main(self, main):
        """Sets the main of this Phone.

        Phone number for given facility.

        :param main: The main of this Phone.
        :type main: str
        """

        self._main = main

    @property
    def mental_health_clinic(self):
        """Gets the mental_health_clinic of this Phone.

        Phone number for mental health clinic for given facility.

        :return: The mental_health_clinic of this Phone.
        :rtype: str
        """
        return self._mental_health_clinic

    @mental_health_clinic.setter
    def mental_health_clinic(self, mental_health_clinic):
        """Sets the mental_health_clinic of this Phone.

        Phone number for mental health clinic for given facility.

        :param mental_health_clinic: The mental_health_clinic of this Phone.
        :type mental_health_clinic: str
        """

        self._mental_health_clinic = mental_health_clinic

    @property
    def patient_advocate(self):
        """Gets the patient_advocate of this Phone.

        Phone number for patient advocate for given facility.

        :return: The patient_advocate of this Phone.
        :rtype: str
        """
        return self._patient_advocate

    @patient_advocate.setter
    def patient_advocate(self, patient_advocate):
        """Sets the patient_advocate of this Phone.

        Phone number for patient advocate for given facility.

        :param patient_advocate: The patient_advocate of this Phone.
        :type patient_advocate: str
        """

        self._patient_advocate = patient_advocate

    @property
    def pharmacy(self):
        """Gets the pharmacy of this Phone.

        Phone number for pharmacy for given facility.

        :return: The pharmacy of this Phone.
        :rtype: str
        """
        return self._pharmacy

    @pharmacy.setter
    def pharmacy(self, pharmacy):
        """Sets the pharmacy of this Phone.

        Phone number for pharmacy for given facility.

        :param pharmacy: The pharmacy of this Phone.
        :type pharmacy: str
        """

        self._pharmacy = pharmacy
