# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.appointment_phone_number import AppointmentPhoneNumber
from openapi_server.models.detailed_service_location import DetailedServiceLocation
from openapi_server import util


class DetailedService(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, appointment_leadin: str=None, appointment_phones: List[AppointmentPhoneNumber]=None, description_facility: str=None, name: str=None, online_scheduling_available: str=None, path: str=None, referral_required: str=None, service_id: str=None, service_locations: List[DetailedServiceLocation]=None, walk_ins_accepted: str=None):
        """DetailedService - a model defined in OpenAPI

        :param appointment_leadin: The appointment_leadin of this DetailedService.
        :param appointment_phones: The appointment_phones of this DetailedService.
        :param description_facility: The description_facility of this DetailedService.
        :param name: The name of this DetailedService.
        :param online_scheduling_available: The online_scheduling_available of this DetailedService.
        :param path: The path of this DetailedService.
        :param referral_required: The referral_required of this DetailedService.
        :param service_id: The service_id of this DetailedService.
        :param service_locations: The service_locations of this DetailedService.
        :param walk_ins_accepted: The walk_ins_accepted of this DetailedService.
        """
        self.openapi_types = {
            'appointment_leadin': str,
            'appointment_phones': List[AppointmentPhoneNumber],
            'description_facility': str,
            'name': str,
            'online_scheduling_available': str,
            'path': str,
            'referral_required': str,
            'service_id': str,
            'service_locations': List[DetailedServiceLocation],
            'walk_ins_accepted': str
        }

        self.attribute_map = {
            'appointment_leadin': 'appointment_leadin',
            'appointment_phones': 'appointment_phones',
            'description_facility': 'description_facility',
            'name': 'name',
            'online_scheduling_available': 'online_scheduling_available',
            'path': 'path',
            'referral_required': 'referral_required',
            'service_id': 'service_id',
            'service_locations': 'service_locations',
            'walk_ins_accepted': 'walk_ins_accepted'
        }

        self._appointment_leadin = appointment_leadin
        self._appointment_phones = appointment_phones
        self._description_facility = description_facility
        self._name = name
        self._online_scheduling_available = online_scheduling_available
        self._path = path
        self._referral_required = referral_required
        self._service_id = service_id
        self._service_locations = service_locations
        self._walk_ins_accepted = walk_ins_accepted

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DetailedService':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DetailedService of this DetailedService.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def appointment_leadin(self):
        """Gets the appointment_leadin of this DetailedService.

        Additional appointment information. May contain html / string formatting characters.

        :return: The appointment_leadin of this DetailedService.
        :rtype: str
        """
        return self._appointment_leadin

    @appointment_leadin.setter
    def appointment_leadin(self, appointment_leadin):
        """Sets the appointment_leadin of this DetailedService.

        Additional appointment information. May contain html / string formatting characters.

        :param appointment_leadin: The appointment_leadin of this DetailedService.
        :type appointment_leadin: str
        """

        self._appointment_leadin = appointment_leadin

    @property
    def appointment_phones(self):
        """Gets the appointment_phones of this DetailedService.

        List of phone numbers related to scheduling appointments for this service.

        :return: The appointment_phones of this DetailedService.
        :rtype: List[AppointmentPhoneNumber]
        """
        return self._appointment_phones

    @appointment_phones.setter
    def appointment_phones(self, appointment_phones):
        """Sets the appointment_phones of this DetailedService.

        List of phone numbers related to scheduling appointments for this service.

        :param appointment_phones: The appointment_phones of this DetailedService.
        :type appointment_phones: List[AppointmentPhoneNumber]
        """

        self._appointment_phones = appointment_phones

    @property
    def description_facility(self):
        """Gets the description_facility of this DetailedService.

        Deprecated until further notice.

        :return: The description_facility of this DetailedService.
        :rtype: str
        """
        return self._description_facility

    @description_facility.setter
    def description_facility(self, description_facility):
        """Sets the description_facility of this DetailedService.

        Deprecated until further notice.

        :param description_facility: The description_facility of this DetailedService.
        :type description_facility: str
        """

        self._description_facility = description_facility

    @property
    def name(self):
        """Gets the name of this DetailedService.

        Service name.

        :return: The name of this DetailedService.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DetailedService.

        Service name.

        :param name: The name of this DetailedService.
        :type name: str
        """

        self._name = name

    @property
    def online_scheduling_available(self):
        """Gets the online_scheduling_available of this DetailedService.

        String detailing online scheduling availability.

        :return: The online_scheduling_available of this DetailedService.
        :rtype: str
        """
        return self._online_scheduling_available

    @online_scheduling_available.setter
    def online_scheduling_available(self, online_scheduling_available):
        """Sets the online_scheduling_available of this DetailedService.

        String detailing online scheduling availability.

        :param online_scheduling_available: The online_scheduling_available of this DetailedService.
        :type online_scheduling_available: str
        """

        self._online_scheduling_available = online_scheduling_available

    @property
    def path(self):
        """Gets the path of this DetailedService.

        URL to a page with additional details for this service within the associated facility's health care system.

        :return: The path of this DetailedService.
        :rtype: str
        """
        return self._path

    @path.setter
    def path(self, path):
        """Sets the path of this DetailedService.

        URL to a page with additional details for this service within the associated facility's health care system.

        :param path: The path of this DetailedService.
        :type path: str
        """

        self._path = path

    @property
    def referral_required(self):
        """Gets the referral_required of this DetailedService.

        String detailing if referrals are required for the service.

        :return: The referral_required of this DetailedService.
        :rtype: str
        """
        return self._referral_required

    @referral_required.setter
    def referral_required(self, referral_required):
        """Sets the referral_required of this DetailedService.

        String detailing if referrals are required for the service.

        :param referral_required: The referral_required of this DetailedService.
        :type referral_required: str
        """

        self._referral_required = referral_required

    @property
    def service_id(self):
        """Gets the service_id of this DetailedService.

        Service id.

        :return: The service_id of this DetailedService.
        :rtype: str
        """
        return self._service_id

    @service_id.setter
    def service_id(self, service_id):
        """Sets the service_id of this DetailedService.

        Service id.

        :param service_id: The service_id of this DetailedService.
        :type service_id: str
        """

        self._service_id = service_id

    @property
    def service_locations(self):
        """Gets the service_locations of this DetailedService.

        List of service locations.

        :return: The service_locations of this DetailedService.
        :rtype: List[DetailedServiceLocation]
        """
        return self._service_locations

    @service_locations.setter
    def service_locations(self, service_locations):
        """Sets the service_locations of this DetailedService.

        List of service locations.

        :param service_locations: The service_locations of this DetailedService.
        :type service_locations: List[DetailedServiceLocation]
        """

        self._service_locations = service_locations

    @property
    def walk_ins_accepted(self):
        """Gets the walk_ins_accepted of this DetailedService.

        String detailing if walk-ins are accepted for the service.

        :return: The walk_ins_accepted of this DetailedService.
        :rtype: str
        """
        return self._walk_ins_accepted

    @walk_ins_accepted.setter
    def walk_ins_accepted(self, walk_ins_accepted):
        """Sets the walk_ins_accepted of this DetailedService.

        String detailing if walk-ins are accepted for the service.

        :param walk_ins_accepted: The walk_ins_accepted of this DetailedService.
        :type walk_ins_accepted: str
        """

        self._walk_ins_accepted = walk_ins_accepted
