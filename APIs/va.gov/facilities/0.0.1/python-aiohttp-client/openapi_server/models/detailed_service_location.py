# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.appointment_phone_number import AppointmentPhoneNumber
from openapi_server.models.detailed_service_address import DetailedServiceAddress
from openapi_server.models.detailed_service_email_contact import DetailedServiceEmailContact
from openapi_server.models.detailed_service_hours import DetailedServiceHours
from openapi_server import util


class DetailedServiceLocation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_hours_info: str=None, appointment_phones: List[AppointmentPhoneNumber]=None, email_contacts: List[DetailedServiceEmailContact]=None, facility_service_hours: DetailedServiceHours=None, service_location_address: DetailedServiceAddress=None):
        """DetailedServiceLocation - a model defined in OpenAPI

        :param additional_hours_info: The additional_hours_info of this DetailedServiceLocation.
        :param appointment_phones: The appointment_phones of this DetailedServiceLocation.
        :param email_contacts: The email_contacts of this DetailedServiceLocation.
        :param facility_service_hours: The facility_service_hours of this DetailedServiceLocation.
        :param service_location_address: The service_location_address of this DetailedServiceLocation.
        """
        self.openapi_types = {
            'additional_hours_info': str,
            'appointment_phones': List[AppointmentPhoneNumber],
            'email_contacts': List[DetailedServiceEmailContact],
            'facility_service_hours': DetailedServiceHours,
            'service_location_address': DetailedServiceAddress
        }

        self.attribute_map = {
            'additional_hours_info': 'additional_hours_info',
            'appointment_phones': 'appointment_phones',
            'email_contacts': 'email_contacts',
            'facility_service_hours': 'facility_service_hours',
            'service_location_address': 'service_location_address'
        }

        self._additional_hours_info = additional_hours_info
        self._appointment_phones = appointment_phones
        self._email_contacts = email_contacts
        self._facility_service_hours = facility_service_hours
        self._service_location_address = service_location_address

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DetailedServiceLocation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DetailedServiceLocation of this DetailedServiceLocation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_hours_info(self):
        """Gets the additional_hours_info of this DetailedServiceLocation.

        Additional information related to service location hours.

        :return: The additional_hours_info of this DetailedServiceLocation.
        :rtype: str
        """
        return self._additional_hours_info

    @additional_hours_info.setter
    def additional_hours_info(self, additional_hours_info):
        """Sets the additional_hours_info of this DetailedServiceLocation.

        Additional information related to service location hours.

        :param additional_hours_info: The additional_hours_info of this DetailedServiceLocation.
        :type additional_hours_info: str
        """

        self._additional_hours_info = additional_hours_info

    @property
    def appointment_phones(self):
        """Gets the appointment_phones of this DetailedServiceLocation.

        List of appointment phone information.

        :return: The appointment_phones of this DetailedServiceLocation.
        :rtype: List[AppointmentPhoneNumber]
        """
        return self._appointment_phones

    @appointment_phones.setter
    def appointment_phones(self, appointment_phones):
        """Sets the appointment_phones of this DetailedServiceLocation.

        List of appointment phone information.

        :param appointment_phones: The appointment_phones of this DetailedServiceLocation.
        :type appointment_phones: List[AppointmentPhoneNumber]
        """

        self._appointment_phones = appointment_phones

    @property
    def email_contacts(self):
        """Gets the email_contacts of this DetailedServiceLocation.

        List of email contact information regarding facility services.

        :return: The email_contacts of this DetailedServiceLocation.
        :rtype: List[DetailedServiceEmailContact]
        """
        return self._email_contacts

    @email_contacts.setter
    def email_contacts(self, email_contacts):
        """Sets the email_contacts of this DetailedServiceLocation.

        List of email contact information regarding facility services.

        :param email_contacts: The email_contacts of this DetailedServiceLocation.
        :type email_contacts: List[DetailedServiceEmailContact]
        """

        self._email_contacts = email_contacts

    @property
    def facility_service_hours(self):
        """Gets the facility_service_hours of this DetailedServiceLocation.


        :return: The facility_service_hours of this DetailedServiceLocation.
        :rtype: DetailedServiceHours
        """
        return self._facility_service_hours

    @facility_service_hours.setter
    def facility_service_hours(self, facility_service_hours):
        """Sets the facility_service_hours of this DetailedServiceLocation.


        :param facility_service_hours: The facility_service_hours of this DetailedServiceLocation.
        :type facility_service_hours: DetailedServiceHours
        """

        self._facility_service_hours = facility_service_hours

    @property
    def service_location_address(self):
        """Gets the service_location_address of this DetailedServiceLocation.


        :return: The service_location_address of this DetailedServiceLocation.
        :rtype: DetailedServiceAddress
        """
        return self._service_location_address

    @service_location_address.setter
    def service_location_address(self, service_location_address):
        """Sets the service_location_address of this DetailedServiceLocation.


        :param service_location_address: The service_location_address of this DetailedServiceLocation.
        :type service_location_address: DetailedServiceAddress
        """

        self._service_location_address = service_location_address
