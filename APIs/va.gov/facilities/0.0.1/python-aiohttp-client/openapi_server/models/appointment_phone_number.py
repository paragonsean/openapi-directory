# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AppointmentPhoneNumber(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, extension: str=None, label: str=None, number: str=None, type: str=None):
        """AppointmentPhoneNumber - a model defined in OpenAPI

        :param extension: The extension of this AppointmentPhoneNumber.
        :param label: The label of this AppointmentPhoneNumber.
        :param number: The number of this AppointmentPhoneNumber.
        :param type: The type of this AppointmentPhoneNumber.
        """
        self.openapi_types = {
            'extension': str,
            'label': str,
            'number': str,
            'type': str
        }

        self.attribute_map = {
            'extension': 'extension',
            'label': 'label',
            'number': 'number',
            'type': 'type'
        }

        self._extension = extension
        self._label = label
        self._number = number
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AppointmentPhoneNumber':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AppointmentPhoneNumber of this AppointmentPhoneNumber.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def extension(self):
        """Gets the extension of this AppointmentPhoneNumber.

        Appointment phone number extension.

        :return: The extension of this AppointmentPhoneNumber.
        :rtype: str
        """
        return self._extension

    @extension.setter
    def extension(self, extension):
        """Sets the extension of this AppointmentPhoneNumber.

        Appointment phone number extension.

        :param extension: The extension of this AppointmentPhoneNumber.
        :type extension: str
        """

        self._extension = extension

    @property
    def label(self):
        """Gets the label of this AppointmentPhoneNumber.

        Appointment phone number label (e.g. 'Main phone', 'Appointment phone', etc).

        :return: The label of this AppointmentPhoneNumber.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this AppointmentPhoneNumber.

        Appointment phone number label (e.g. 'Main phone', 'Appointment phone', etc).

        :param label: The label of this AppointmentPhoneNumber.
        :type label: str
        """

        self._label = label

    @property
    def number(self):
        """Gets the number of this AppointmentPhoneNumber.

        Appointment phone number.

        :return: The number of this AppointmentPhoneNumber.
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this AppointmentPhoneNumber.

        Appointment phone number.

        :param number: The number of this AppointmentPhoneNumber.
        :type number: str
        """

        self._number = number

    @property
    def type(self):
        """Gets the type of this AppointmentPhoneNumber.

        Appointment contact number type (e.g. 'tel', 'fax', etc)

        :return: The type of this AppointmentPhoneNumber.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this AppointmentPhoneNumber.

        Appointment contact number type (e.g. 'tel', 'fax', etc)

        :param type: The type of this AppointmentPhoneNumber.
        :type type: str
        """

        self._type = type
