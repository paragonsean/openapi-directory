# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.supplemental_status import SupplementalStatus
from openapi_server import util


class OperatingStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, additional_info: str=None, code: str=None, supplemental_status: List[SupplementalStatus]=None):
        """OperatingStatus - a model defined in OpenAPI

        :param additional_info: The additional_info of this OperatingStatus.
        :param code: The code of this OperatingStatus.
        :param supplemental_status: The supplemental_status of this OperatingStatus.
        """
        self.openapi_types = {
            'additional_info': str,
            'code': str,
            'supplemental_status': List[SupplementalStatus]
        }

        self.attribute_map = {
            'additional_info': 'additional_info',
            'code': 'code',
            'supplemental_status': 'supplemental_status'
        }

        self._additional_info = additional_info
        self._code = code
        self._supplemental_status = supplemental_status

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OperatingStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OperatingStatus of this OperatingStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def additional_info(self):
        """Gets the additional_info of this OperatingStatus.

        Details of facility notices for visitors, such as messages about parking lot closures or floor visitation information.

        :return: The additional_info of this OperatingStatus.
        :rtype: str
        """
        return self._additional_info

    @additional_info.setter
    def additional_info(self, additional_info):
        """Sets the additional_info of this OperatingStatus.

        Details of facility notices for visitors, such as messages about parking lot closures or floor visitation information.

        :param additional_info: The additional_info of this OperatingStatus.
        :type additional_info: str
        """
        if additional_info is not None and len(additional_info) > 300:
            raise ValueError("Invalid value for `additional_info`, length must be less than or equal to `300`")
        if additional_info is not None and len(additional_info) < 0:
            raise ValueError("Invalid value for `additional_info`, length must be greater than or equal to `0`")

        self._additional_info = additional_info

    @property
    def code(self):
        """Gets the code of this OperatingStatus.

        Status codes indicate normal hours/services, limited hours/services, closed operations, or published facility notices for visitors.

        :return: The code of this OperatingStatus.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this OperatingStatus.

        Status codes indicate normal hours/services, limited hours/services, closed operations, or published facility notices for visitors.

        :param code: The code of this OperatingStatus.
        :type code: str
        """
        allowed_values = [None,"NORMAL", "NOTICE", "LIMITED", "CLOSED"]  # noqa: E501
        if code not in allowed_values:
            raise ValueError(
                "Invalid value for `code` ({0}), must be one of {1}"
                .format(code, allowed_values)
            )

        self._code = code

    @property
    def supplemental_status(self):
        """Gets the supplemental_status of this OperatingStatus.

        List of supplemental statuses for VA facility.

        :return: The supplemental_status of this OperatingStatus.
        :rtype: List[SupplementalStatus]
        """
        return self._supplemental_status

    @supplemental_status.setter
    def supplemental_status(self, supplemental_status):
        """Sets the supplemental_status of this OperatingStatus.

        List of supplemental statuses for VA facility.

        :param supplemental_status: The supplemental_status of this OperatingStatus.
        :type supplemental_status: List[SupplementalStatus]
        """

        self._supplemental_status = supplemental_status
