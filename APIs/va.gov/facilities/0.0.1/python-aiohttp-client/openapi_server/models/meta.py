# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Meta(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, band_version: str=None):
        """Meta - a model defined in OpenAPI

        :param band_version: The band_version of this Meta.
        """
        self.openapi_types = {
            'band_version': str
        }

        self.attribute_map = {
            'band_version': 'band_version'
        }

        self._band_version = band_version

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Meta':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Meta of this Meta.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def band_version(self):
        """Gets the band_version of this Meta.

        Version of the drive time band data set used to generate this response.

        :return: The band_version of this Meta.
        :rtype: str
        """
        return self._band_version

    @band_version.setter
    def band_version(self, band_version):
        """Sets the band_version of this Meta.

        Version of the drive time band data set used to generate this response.

        :param band_version: The band_version of this Meta.
        :type band_version: str
        """

        self._band_version = band_version
