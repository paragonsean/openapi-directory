/**
 * VA Facilities
 * ## Background  The VA Facilities API version 0 (v0) provides information about VA facilities, including locations, addresses, phone numbers, hours of operation, and available services.  This API gives information about several types of VA facilities: - Health facilities (vha) - Benefits facilities (vba) - Cemeteries (nca) - Vet Centers (vc)  ## Technical overview  For in-depth details on data sources for the Facilities API, [read our Facilities GitHub documentation](https://github.com/department-of-veterans-affairs/lighthouse-facilities#readme).  Health service and service availability data for v0 of this API are based on historical data.  - Historical data is returned for the previous 30 days. - Data is based on both pending and completed appointments for a service at a given facility.   ### Authentication and Authorization  VA Facilities is an open data API. Open data API requests are authorized through a symmetric API token that's provided in an HTTP header with the name 'apikey'.  ### Test data  Test data for the sandbox environment is only for testing the API and is not guaranteed to be up-to-date. After testing this API in sandbox, you can start the process of moving to production.  ### Facility ID formats  A facility ID has the format prefix_stationNumber. The prefix is nca, vc, vba, or vha. Cemeteries may be VA national cemeteries or non-national; non-national cemeteries have the station number prefixed with an s. There are no other constraints on the format. Some facility ID examples are: - Health: `vha_402GA` - Benefits: `vba_539GB` - National cemetery: `nca_063` - Non-national cemetery: `nca_s1082` - Vet Center: `vc_0872MVC`   ### Mobile facilities  The mobile health facilities move regularly within a region. If a facility comes back from this API with \"mobile\": \"true\", the latitude/longitude and address could be inaccurate. To get the exact current location, please call the mobile facility number listed.
 *
 * The version of the OpenAPI document: 0.0.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDetailedService.h
 *
 * Detailed information of a facility service.
 */

#ifndef OAIDetailedService_H
#define OAIDetailedService_H

#include <QJsonObject>

#include "OAIAppointmentPhoneNumber.h"
#include "OAIDetailedServiceLocation.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAppointmentPhoneNumber;
class OAIDetailedServiceLocation;

class OAIDetailedService : public OAIObject {
public:
    OAIDetailedService();
    OAIDetailedService(QString json);
    ~OAIDetailedService() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppointmentLeadin() const;
    void setAppointmentLeadin(const QString &appointment_leadin);
    bool is_appointment_leadin_Set() const;
    bool is_appointment_leadin_Valid() const;

    QList<OAIAppointmentPhoneNumber> getAppointmentPhones() const;
    void setAppointmentPhones(const QList<OAIAppointmentPhoneNumber> &appointment_phones);
    bool is_appointment_phones_Set() const;
    bool is_appointment_phones_Valid() const;

    QString getDescriptionFacility() const;
    void setDescriptionFacility(const QString &description_facility);
    bool is_description_facility_Set() const;
    bool is_description_facility_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QString getOnlineSchedulingAvailable() const;
    void setOnlineSchedulingAvailable(const QString &online_scheduling_available);
    bool is_online_scheduling_available_Set() const;
    bool is_online_scheduling_available_Valid() const;

    QString getPath() const;
    void setPath(const QString &path);
    bool is_path_Set() const;
    bool is_path_Valid() const;

    QString getReferralRequired() const;
    void setReferralRequired(const QString &referral_required);
    bool is_referral_required_Set() const;
    bool is_referral_required_Valid() const;

    QString getServiceId() const;
    void setServiceId(const QString &service_id);
    bool is_service_id_Set() const;
    bool is_service_id_Valid() const;

    QList<OAIDetailedServiceLocation> getServiceLocations() const;
    void setServiceLocations(const QList<OAIDetailedServiceLocation> &service_locations);
    bool is_service_locations_Set() const;
    bool is_service_locations_Valid() const;

    QString getWalkInsAccepted() const;
    void setWalkInsAccepted(const QString &walk_ins_accepted);
    bool is_walk_ins_accepted_Set() const;
    bool is_walk_ins_accepted_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_appointment_leadin;
    bool m_appointment_leadin_isSet;
    bool m_appointment_leadin_isValid;

    QList<OAIAppointmentPhoneNumber> m_appointment_phones;
    bool m_appointment_phones_isSet;
    bool m_appointment_phones_isValid;

    QString m_description_facility;
    bool m_description_facility_isSet;
    bool m_description_facility_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QString m_online_scheduling_available;
    bool m_online_scheduling_available_isSet;
    bool m_online_scheduling_available_isValid;

    QString m_path;
    bool m_path_isSet;
    bool m_path_isValid;

    QString m_referral_required;
    bool m_referral_required_isSet;
    bool m_referral_required_isValid;

    QString m_service_id;
    bool m_service_id_isSet;
    bool m_service_id_isValid;

    QList<OAIDetailedServiceLocation> m_service_locations;
    bool m_service_locations_isSet;
    bool m_service_locations_isValid;

    QString m_walk_ins_accepted;
    bool m_walk_ins_accepted_isSet;
    bool m_walk_ins_accepted_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDetailedService)

#endif // OAIDetailedService_H
