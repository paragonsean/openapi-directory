/**
 * VA Facilities
 * ## Background  The VA Facilities API version 0 (v0) provides information about VA facilities, including locations, addresses, phone numbers, hours of operation, and available services.  This API gives information about several types of VA facilities: - Health facilities (vha) - Benefits facilities (vba) - Cemeteries (nca) - Vet Centers (vc)  ## Technical overview  For in-depth details on data sources for the Facilities API, [read our Facilities GitHub documentation](https://github.com/department-of-veterans-affairs/lighthouse-facilities#readme).  Health service and service availability data for v0 of this API are based on historical data.  - Historical data is returned for the previous 30 days. - Data is based on both pending and completed appointments for a service at a given facility.   ### Authentication and Authorization  VA Facilities is an open data API. Open data API requests are authorized through a symmetric API token that's provided in an HTTP header with the name 'apikey'.  ### Test data  Test data for the sandbox environment is only for testing the API and is not guaranteed to be up-to-date. After testing this API in sandbox, you can start the process of moving to production.  ### Facility ID formats  A facility ID has the format prefix_stationNumber. The prefix is nca, vc, vba, or vha. Cemeteries may be VA national cemeteries or non-national; non-national cemeteries have the station number prefixed with an s. There are no other constraints on the format. Some facility ID examples are: - Health: `vha_402GA` - Benefits: `vba_539GB` - National cemetery: `nca_063` - Non-national cemetery: `nca_s1082` - Vet Center: `vc_0872MVC`   ### Mobile facilities  The mobile health facilities move regularly within a region. If a facility comes back from this API with \"mobile\": \"true\", the latitude/longitude and address could be inaccurate. To get the exact current location, please call the mobile facility number listed.
 *
 * The version of the OpenAPI document: 0.0.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Address from './model/Address';
import Addresses from './model/Addresses';
import ApiError from './model/ApiError';
import AppointmentPhoneNumber from './model/AppointmentPhoneNumber';
import DetailedService from './model/DetailedService';
import DetailedServiceAddress from './model/DetailedServiceAddress';
import DetailedServiceEmailContact from './model/DetailedServiceEmailContact';
import DetailedServiceHours from './model/DetailedServiceHours';
import DetailedServiceLocation from './model/DetailedServiceLocation';
import Distance from './model/Distance';
import ErrorMessage from './model/ErrorMessage';
import FacilitiesIdsResponse from './model/FacilitiesIdsResponse';
import FacilitiesMetadata from './model/FacilitiesMetadata';
import FacilitiesResponse from './model/FacilitiesResponse';
import Facility from './model/Facility';
import FacilityAttributes from './model/FacilityAttributes';
import FacilityReadResponse from './model/FacilityReadResponse';
import GenericError from './model/GenericError';
import GeoFacilitiesResponse from './model/GeoFacilitiesResponse';
import GeoFacility from './model/GeoFacility';
import GeoFacilityReadResponse from './model/GeoFacilityReadResponse';
import Geometry from './model/Geometry';
import Hours from './model/Hours';
import Meta from './model/Meta';
import Nearby from './model/Nearby';
import NearbyAttributes from './model/NearbyAttributes';
import NearbyResponse from './model/NearbyResponse';
import OperatingStatus from './model/OperatingStatus';
import PageLinks from './model/PageLinks';
import Pagination from './model/Pagination';
import PatientSatisfaction from './model/PatientSatisfaction';
import PatientWaitTime from './model/PatientWaitTime';
import Phone from './model/Phone';
import Properties from './model/Properties';
import Satisfaction from './model/Satisfaction';
import Services from './model/Services';
import SupplementalStatus from './model/SupplementalStatus';
import WaitTimes from './model/WaitTimes';
import FacilitiesApi from './api/FacilitiesApi';


/**
* ## Background  The VA Facilities API version 0 (v0) provides information about VA facilities, including locations, addresses, phone numbers, hours of operation, and available services.  This API gives information about several types of VA facilities: - Health facilities (vha) - Benefits facilities (vba) - Cemeteries (nca) - Vet Centers (vc)  ## Technical overview  For in-depth details on data sources for the Facilities API, [read our Facilities GitHub documentation](https://github.com/department-of-veterans-affairs/lighthouse-facilities#readme).  Health service and service availability data for v0 of this API are based on historical data.  - Historical data is returned for the previous 30 days. - Data is based on both pending and completed appointments for a service at a given facility.   ### Authentication and Authorization  VA Facilities is an open data API. Open data API requests are authorized through a symmetric API token that&#39;s provided in an HTTP header with the name &#39;apikey&#39;.  ### Test data  Test data for the sandbox environment is only for testing the API and is not guaranteed to be up-to-date. After testing this API in sandbox, you can start the process of moving to production.  ### Facility ID formats  A facility ID has the format prefix_stationNumber. The prefix is nca, vc, vba, or vha. Cemeteries may be VA national cemeteries or non-national; non-national cemeteries have the station number prefixed with an s. There are no other constraints on the format. Some facility ID examples are: - Health: &#x60;vha_402GA&#x60; - Benefits: &#x60;vba_539GB&#x60; - National cemetery: &#x60;nca_063&#x60; - Non-national cemetery: &#x60;nca_s1082&#x60; - Vet Center: &#x60;vc_0872MVC&#x60;   ### Mobile facilities  The mobile health facilities move regularly within a region. If a facility comes back from this API with \&quot;mobile\&quot;: \&quot;true\&quot;, the latitude/longitude and address could be inaccurate. To get the exact current location, please call the mobile facility number listed..<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var VaFacilities = require('index'); // See note below*.
* var xxxSvc = new VaFacilities.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new VaFacilities.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new VaFacilities.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new VaFacilities.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.0.1
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Address model constructor.
     * @property {module:model/Address}
     */
    Address,

    /**
     * The Addresses model constructor.
     * @property {module:model/Addresses}
     */
    Addresses,

    /**
     * The ApiError model constructor.
     * @property {module:model/ApiError}
     */
    ApiError,

    /**
     * The AppointmentPhoneNumber model constructor.
     * @property {module:model/AppointmentPhoneNumber}
     */
    AppointmentPhoneNumber,

    /**
     * The DetailedService model constructor.
     * @property {module:model/DetailedService}
     */
    DetailedService,

    /**
     * The DetailedServiceAddress model constructor.
     * @property {module:model/DetailedServiceAddress}
     */
    DetailedServiceAddress,

    /**
     * The DetailedServiceEmailContact model constructor.
     * @property {module:model/DetailedServiceEmailContact}
     */
    DetailedServiceEmailContact,

    /**
     * The DetailedServiceHours model constructor.
     * @property {module:model/DetailedServiceHours}
     */
    DetailedServiceHours,

    /**
     * The DetailedServiceLocation model constructor.
     * @property {module:model/DetailedServiceLocation}
     */
    DetailedServiceLocation,

    /**
     * The Distance model constructor.
     * @property {module:model/Distance}
     */
    Distance,

    /**
     * The ErrorMessage model constructor.
     * @property {module:model/ErrorMessage}
     */
    ErrorMessage,

    /**
     * The FacilitiesIdsResponse model constructor.
     * @property {module:model/FacilitiesIdsResponse}
     */
    FacilitiesIdsResponse,

    /**
     * The FacilitiesMetadata model constructor.
     * @property {module:model/FacilitiesMetadata}
     */
    FacilitiesMetadata,

    /**
     * The FacilitiesResponse model constructor.
     * @property {module:model/FacilitiesResponse}
     */
    FacilitiesResponse,

    /**
     * The Facility model constructor.
     * @property {module:model/Facility}
     */
    Facility,

    /**
     * The FacilityAttributes model constructor.
     * @property {module:model/FacilityAttributes}
     */
    FacilityAttributes,

    /**
     * The FacilityReadResponse model constructor.
     * @property {module:model/FacilityReadResponse}
     */
    FacilityReadResponse,

    /**
     * The GenericError model constructor.
     * @property {module:model/GenericError}
     */
    GenericError,

    /**
     * The GeoFacilitiesResponse model constructor.
     * @property {module:model/GeoFacilitiesResponse}
     */
    GeoFacilitiesResponse,

    /**
     * The GeoFacility model constructor.
     * @property {module:model/GeoFacility}
     */
    GeoFacility,

    /**
     * The GeoFacilityReadResponse model constructor.
     * @property {module:model/GeoFacilityReadResponse}
     */
    GeoFacilityReadResponse,

    /**
     * The Geometry model constructor.
     * @property {module:model/Geometry}
     */
    Geometry,

    /**
     * The Hours model constructor.
     * @property {module:model/Hours}
     */
    Hours,

    /**
     * The Meta model constructor.
     * @property {module:model/Meta}
     */
    Meta,

    /**
     * The Nearby model constructor.
     * @property {module:model/Nearby}
     */
    Nearby,

    /**
     * The NearbyAttributes model constructor.
     * @property {module:model/NearbyAttributes}
     */
    NearbyAttributes,

    /**
     * The NearbyResponse model constructor.
     * @property {module:model/NearbyResponse}
     */
    NearbyResponse,

    /**
     * The OperatingStatus model constructor.
     * @property {module:model/OperatingStatus}
     */
    OperatingStatus,

    /**
     * The PageLinks model constructor.
     * @property {module:model/PageLinks}
     */
    PageLinks,

    /**
     * The Pagination model constructor.
     * @property {module:model/Pagination}
     */
    Pagination,

    /**
     * The PatientSatisfaction model constructor.
     * @property {module:model/PatientSatisfaction}
     */
    PatientSatisfaction,

    /**
     * The PatientWaitTime model constructor.
     * @property {module:model/PatientWaitTime}
     */
    PatientWaitTime,

    /**
     * The Phone model constructor.
     * @property {module:model/Phone}
     */
    Phone,

    /**
     * The Properties model constructor.
     * @property {module:model/Properties}
     */
    Properties,

    /**
     * The Satisfaction model constructor.
     * @property {module:model/Satisfaction}
     */
    Satisfaction,

    /**
     * The Services model constructor.
     * @property {module:model/Services}
     */
    Services,

    /**
     * The SupplementalStatus model constructor.
     * @property {module:model/SupplementalStatus}
     */
    SupplementalStatus,

    /**
     * The WaitTimes model constructor.
     * @property {module:model/WaitTimes}
     */
    WaitTimes,

    /**
    * The FacilitiesApi service constructor.
    * @property {module:api/FacilitiesApi}
    */
    FacilitiesApi
};
