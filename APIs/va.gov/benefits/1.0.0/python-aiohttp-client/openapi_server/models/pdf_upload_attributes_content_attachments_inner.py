# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pdf_dimension_attributes import PdfDimensionAttributes
from openapi_server import util


class PdfUploadAttributesContentAttachmentsInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, dimensions: PdfDimensionAttributes=None, page_count: int=None):
        """PdfUploadAttributesContentAttachmentsInner - a model defined in OpenAPI

        :param dimensions: The dimensions of this PdfUploadAttributesContentAttachmentsInner.
        :param page_count: The page_count of this PdfUploadAttributesContentAttachmentsInner.
        """
        self.openapi_types = {
            'dimensions': PdfDimensionAttributes,
            'page_count': int
        }

        self.attribute_map = {
            'dimensions': 'dimensions',
            'page_count': 'page_count'
        }

        self._dimensions = dimensions
        self._page_count = page_count

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PdfUploadAttributesContentAttachmentsInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PdfUploadAttributes_content_attachments_inner of this PdfUploadAttributesContentAttachmentsInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def dimensions(self):
        """Gets the dimensions of this PdfUploadAttributesContentAttachmentsInner.


        :return: The dimensions of this PdfUploadAttributesContentAttachmentsInner.
        :rtype: PdfDimensionAttributes
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this PdfUploadAttributesContentAttachmentsInner.


        :param dimensions: The dimensions of this PdfUploadAttributesContentAttachmentsInner.
        :type dimensions: PdfDimensionAttributes
        """

        self._dimensions = dimensions

    @property
    def page_count(self):
        """Gets the page_count of this PdfUploadAttributesContentAttachmentsInner.

        The number of pages in this attachment

        :return: The page_count of this PdfUploadAttributesContentAttachmentsInner.
        :rtype: int
        """
        return self._page_count

    @page_count.setter
    def page_count(self, page_count):
        """Sets the page_count of this PdfUploadAttributesContentAttachmentsInner.

        The number of pages in this attachment

        :param page_count: The page_count of this PdfUploadAttributesContentAttachmentsInner.
        :type page_count: int
        """

        self._page_count = page_count
