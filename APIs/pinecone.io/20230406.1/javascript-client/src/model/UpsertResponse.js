/**
 * Pinecone API
 * Pinecone is a vector database. This is an unofficial, community-managed OpenAPI spec that (should) accurately model the Pinecone API. This project was developed independent of and is unaffiliated with Pinecone Systems. Users should switch to the official API spec, if and when Pinecone releases it.
 *
 * The version of the OpenAPI document: 20230406.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The UpsertResponse model module.
 * @module model/UpsertResponse
 * @version 20230406.1
 */
class UpsertResponse {
    /**
     * Constructs a new <code>UpsertResponse</code>.
     * @alias module:model/UpsertResponse
     */
    constructor() { 
        
        UpsertResponse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpsertResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpsertResponse} obj Optional instance to populate.
     * @return {module:model/UpsertResponse} The populated <code>UpsertResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpsertResponse();

            if (data.hasOwnProperty('upsertedCount')) {
                obj['upsertedCount'] = ApiClient.convertToType(data['upsertedCount'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpsertResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpsertResponse</code>.
     */
    static validateJSON(data) {

        return true;
    }


}



/**
 * @member {Number} upsertedCount
 */
UpsertResponse.prototype['upsertedCount'] = undefined;






export default UpsertResponse;

