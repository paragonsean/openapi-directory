/**
 * Pinecone API
 * Pinecone is a vector database. This is an unofficial, community-managed OpenAPI spec that (should) accurately model the Pinecone API. This project was developed independent of and is unaffiliated with Pinecone Systems. Users should switch to the official API spec, if and when Pinecone releases it.
 *
 * The version of the OpenAPI document: 20230406.1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.PineconeApi);
  }
}(this, function(expect, PineconeApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new PineconeApi.FetchResponse();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('FetchResponse', function() {
    it('should create an instance of FetchResponse', function() {
      // uncomment below and update the code to test FetchResponse
      //var instance = new PineconeApi.FetchResponse();
      //expect(instance).to.be.a(PineconeApi.FetchResponse);
    });

    it('should have the property namespace (base name: "namespace")', function() {
      // uncomment below and update the code to test the property namespace
      //var instance = new PineconeApi.FetchResponse();
      //expect(instance).to.be();
    });

    it('should have the property vectors (base name: "vectors")', function() {
      // uncomment below and update the code to test the property vectors
      //var instance = new PineconeApi.FetchResponse();
      //expect(instance).to.be();
    });

  });

}));
