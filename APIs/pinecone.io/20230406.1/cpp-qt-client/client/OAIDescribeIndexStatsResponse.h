/**
 * Pinecone API
 * Pinecone is a vector database. This is an unofficial, community-managed OpenAPI spec that (should) accurately model the Pinecone API. This project was developed independent of and is unaffiliated with Pinecone Systems. Users should switch to the official API spec, if and when Pinecone releases it.
 *
 * The version of the OpenAPI document: 20230406.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDescribeIndexStatsResponse.h
 *
 * 
 */

#ifndef OAIDescribeIndexStatsResponse_H
#define OAIDescribeIndexStatsResponse_H

#include <QJsonObject>

#include "OAIIndexNamespaceStats.h"
#include <QMap>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIIndexNamespaceStats;

class OAIDescribeIndexStatsResponse : public OAIObject {
public:
    OAIDescribeIndexStatsResponse();
    OAIDescribeIndexStatsResponse(QString json);
    ~OAIDescribeIndexStatsResponse() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getDimension() const;
    void setDimension(const qint32 &dimension);
    bool is_dimension_Set() const;
    bool is_dimension_Valid() const;

    float getIndexFullness() const;
    void setIndexFullness(const float &index_fullness);
    bool is_index_fullness_Set() const;
    bool is_index_fullness_Valid() const;

    QMap<QString, OAIIndexNamespaceStats> getNamespaces() const;
    void setNamespaces(const QMap<QString, OAIIndexNamespaceStats> &namespaces);
    bool is_namespaces_Set() const;
    bool is_namespaces_Valid() const;

    qint64 getTotalVectorCount() const;
    void setTotalVectorCount(const qint64 &total_vector_count);
    bool is_total_vector_count_Set() const;
    bool is_total_vector_count_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_dimension;
    bool m_dimension_isSet;
    bool m_dimension_isValid;

    float m_index_fullness;
    bool m_index_fullness_isSet;
    bool m_index_fullness_isValid;

    QMap<QString, OAIIndexNamespaceStats> m_namespaces;
    bool m_namespaces_isSet;
    bool m_namespaces_isValid;

    qint64 m_total_vector_count;
    bool m_total_vector_count_isSet;
    bool m_total_vector_count_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDescribeIndexStatsResponse)

#endif // OAIDescribeIndexStatsResponse_H
