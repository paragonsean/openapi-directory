/**
 * Pinecone API
 * Pinecone is a vector database. This is an unofficial, community-managed OpenAPI spec that (should) accurately model the Pinecone API. This project was developed independent of and is unaffiliated with Pinecone Systems. Users should switch to the official API spec, if and when Pinecone releases it.
 *
 * The version of the OpenAPI document: 20230406.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIUpsertResponse.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIUpsertResponse::OAIUpsertResponse(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIUpsertResponse::OAIUpsertResponse() {
    this->initializeModel();
}

OAIUpsertResponse::~OAIUpsertResponse() {}

void OAIUpsertResponse::initializeModel() {

    m_upserted_count_isSet = false;
    m_upserted_count_isValid = false;
}

void OAIUpsertResponse::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIUpsertResponse::fromJsonObject(QJsonObject json) {

    m_upserted_count_isValid = ::OpenAPI::fromJsonValue(m_upserted_count, json[QString("upsertedCount")]);
    m_upserted_count_isSet = !json[QString("upsertedCount")].isNull() && m_upserted_count_isValid;
}

QString OAIUpsertResponse::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIUpsertResponse::asJsonObject() const {
    QJsonObject obj;
    if (m_upserted_count_isSet) {
        obj.insert(QString("upsertedCount"), ::OpenAPI::toJsonValue(m_upserted_count));
    }
    return obj;
}

qint64 OAIUpsertResponse::getUpsertedCount() const {
    return m_upserted_count;
}
void OAIUpsertResponse::setUpsertedCount(const qint64 &upserted_count) {
    m_upserted_count = upserted_count;
    m_upserted_count_isSet = true;
}

bool OAIUpsertResponse::is_upserted_count_Set() const{
    return m_upserted_count_isSet;
}

bool OAIUpsertResponse::is_upserted_count_Valid() const{
    return m_upserted_count_isValid;
}

bool OAIUpsertResponse::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_upserted_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIUpsertResponse::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
