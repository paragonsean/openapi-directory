/**
 * Pinecone API
 * Pinecone is a vector database. This is an unofficial, community-managed OpenAPI spec that (should) accurately model the Pinecone API. This project was developed independent of and is unaffiliated with Pinecone Systems. Users should switch to the official API spec, if and when Pinecone releases it.
 *
 * The version of the OpenAPI document: 20230406.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIndexMetadataConfig.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIndexMetadataConfig::OAIIndexMetadataConfig(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIndexMetadataConfig::OAIIndexMetadataConfig() {
    this->initializeModel();
}

OAIIndexMetadataConfig::~OAIIndexMetadataConfig() {}

void OAIIndexMetadataConfig::initializeModel() {

    m_indexed_isSet = false;
    m_indexed_isValid = false;
}

void OAIIndexMetadataConfig::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIndexMetadataConfig::fromJsonObject(QJsonObject json) {

    m_indexed_isValid = ::OpenAPI::fromJsonValue(m_indexed, json[QString("indexed")]);
    m_indexed_isSet = !json[QString("indexed")].isNull() && m_indexed_isValid;
}

QString OAIIndexMetadataConfig::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIndexMetadataConfig::asJsonObject() const {
    QJsonObject obj;
    if (m_indexed.size() > 0) {
        obj.insert(QString("indexed"), ::OpenAPI::toJsonValue(m_indexed));
    }
    return obj;
}

QList<QString> OAIIndexMetadataConfig::getIndexed() const {
    return m_indexed;
}
void OAIIndexMetadataConfig::setIndexed(const QList<QString> &indexed) {
    m_indexed = indexed;
    m_indexed_isSet = true;
}

bool OAIIndexMetadataConfig::is_indexed_Set() const{
    return m_indexed_isSet;
}

bool OAIIndexMetadataConfig::is_indexed_Valid() const{
    return m_indexed_isValid;
}

bool OAIIndexMetadataConfig::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_indexed.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIndexMetadataConfig::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
