/**
 * Pinecone API
 * Pinecone is a vector database. This is an unofficial, community-managed OpenAPI spec that (should) accurately model the Pinecone API. This project was developed independent of and is unaffiliated with Pinecone Systems. Users should switch to the official API spec, if and when Pinecone releases it.
 *
 * The version of the OpenAPI document: 20230406.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDeleteRequest.h
 *
 * 
 */

#ifndef OAIDeleteRequest_H
#define OAIDeleteRequest_H

#include <QJsonObject>

#include <QJsonValue>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIDeleteRequest : public OAIObject {
public:
    OAIDeleteRequest();
    OAIDeleteRequest(QString json);
    ~OAIDeleteRequest() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isDeleteAll() const;
    void setDeleteAll(const bool &delete_all);
    bool is_delete_all_Set() const;
    bool is_delete_all_Valid() const;

    QMap<QString, QJsonValue> getFilter() const;
    void setFilter(const QMap<QString, QJsonValue> &filter);
    bool is_filter_Set() const;
    bool is_filter_Valid() const;

    QList<QString> getIds() const;
    void setIds(const QList<QString> &ids);
    bool is_ids_Set() const;
    bool is_ids_Valid() const;

    QString getRNamespace() const;
    void setRNamespace(const QString &r_namespace);
    bool is_r_namespace_Set() const;
    bool is_r_namespace_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_delete_all;
    bool m_delete_all_isSet;
    bool m_delete_all_isValid;

    QMap<QString, QJsonValue> m_filter;
    bool m_filter_isSet;
    bool m_filter_isValid;

    QList<QString> m_ids;
    bool m_ids_isSet;
    bool m_ids_isValid;

    QString m_r_namespace;
    bool m_r_namespace_isSet;
    bool m_r_namespace_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDeleteRequest)

#endif // OAIDeleteRequest_H
