/**
 * Pinecone API
 * Pinecone is a vector database. This is an unofficial, community-managed OpenAPI spec that (should) accurately model the Pinecone API. This project was developed independent of and is unaffiliated with Pinecone Systems. Users should switch to the official API spec, if and when Pinecone releases it.
 *
 * The version of the OpenAPI document: 20230406.1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIndexNamespaceStats.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIndexNamespaceStats::OAIIndexNamespaceStats(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIndexNamespaceStats::OAIIndexNamespaceStats() {
    this->initializeModel();
}

OAIIndexNamespaceStats::~OAIIndexNamespaceStats() {}

void OAIIndexNamespaceStats::initializeModel() {

    m_vector_count_isSet = false;
    m_vector_count_isValid = false;
}

void OAIIndexNamespaceStats::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIndexNamespaceStats::fromJsonObject(QJsonObject json) {

    m_vector_count_isValid = ::OpenAPI::fromJsonValue(m_vector_count, json[QString("vectorCount")]);
    m_vector_count_isSet = !json[QString("vectorCount")].isNull() && m_vector_count_isValid;
}

QString OAIIndexNamespaceStats::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIndexNamespaceStats::asJsonObject() const {
    QJsonObject obj;
    if (m_vector_count_isSet) {
        obj.insert(QString("vectorCount"), ::OpenAPI::toJsonValue(m_vector_count));
    }
    return obj;
}

qint64 OAIIndexNamespaceStats::getVectorCount() const {
    return m_vector_count;
}
void OAIIndexNamespaceStats::setVectorCount(const qint64 &vector_count) {
    m_vector_count = vector_count;
    m_vector_count_isSet = true;
}

bool OAIIndexNamespaceStats::is_vector_count_Set() const{
    return m_vector_count_isSet;
}

bool OAIIndexNamespaceStats::is_vector_count_Valid() const{
    return m_vector_count_isValid;
}

bool OAIIndexNamespaceStats::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_vector_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIndexNamespaceStats::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
