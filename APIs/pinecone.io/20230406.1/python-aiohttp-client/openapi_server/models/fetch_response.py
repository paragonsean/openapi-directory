# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class FetchResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, namespace: str=None, vectors: Dict[str, List[float]]=None):
        """FetchResponse - a model defined in OpenAPI

        :param namespace: The namespace of this FetchResponse.
        :param vectors: The vectors of this FetchResponse.
        """
        self.openapi_types = {
            'namespace': str,
            'vectors': Dict[str, List[float]]
        }

        self.attribute_map = {
            'namespace': 'namespace',
            'vectors': 'vectors'
        }

        self._namespace = namespace
        self._vectors = vectors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FetchResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FetchResponse of this FetchResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def namespace(self):
        """Gets the namespace of this FetchResponse.

        An index namespace name

        :return: The namespace of this FetchResponse.
        :rtype: str
        """
        return self._namespace

    @namespace.setter
    def namespace(self, namespace):
        """Sets the namespace of this FetchResponse.

        An index namespace name

        :param namespace: The namespace of this FetchResponse.
        :type namespace: str
        """

        self._namespace = namespace

    @property
    def vectors(self):
        """Gets the vectors of this FetchResponse.


        :return: The vectors of this FetchResponse.
        :rtype: Dict[str, List[float]]
        """
        return self._vectors

    @vectors.setter
    def vectors(self, vectors):
        """Sets the vectors of this FetchResponse.


        :param vectors: The vectors of this FetchResponse.
        :type vectors: Dict[str, List[float]]
        """

        self._vectors = vectors
