# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Environment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    US_MINUS_WEST1_MINUS_GCP = 'us-west1-gcp'
    US_MINUS_WEST4_MINUS_GCP = 'us-west4-gcp'
    US_MINUS_CENTRAL1_MINUS_GCP = 'us-central1-gcp'
    US_MINUS_EAST1_MINUS_GCP = 'us-east1-gcp'
    US_MINUS_EAST4_MINUS_GCP = 'us-east4-gcp'
    EU_MINUS_WEST1_MINUS_GCP = 'eu-west1-gcp'
    US_MINUS_EAST1_MINUS_AWS = 'us-east1-aws'

    def __init__(self):
        """Environment - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Environment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Environment of this Environment.
        """
        return util.deserialize_model(dikt, cls)
