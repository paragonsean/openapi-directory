# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.pod_type import PodType
from openapi_server import util


class IndexConfiguration(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, pod_type: PodType=None, replicas: int=1):
        """IndexConfiguration - a model defined in OpenAPI

        :param pod_type: The pod_type of this IndexConfiguration.
        :param replicas: The replicas of this IndexConfiguration.
        """
        self.openapi_types = {
            'pod_type': PodType,
            'replicas': int
        }

        self.attribute_map = {
            'pod_type': 'pod_type',
            'replicas': 'replicas'
        }

        self._pod_type = pod_type
        self._replicas = replicas

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IndexConfiguration':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IndexConfiguration of this IndexConfiguration.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def pod_type(self):
        """Gets the pod_type of this IndexConfiguration.


        :return: The pod_type of this IndexConfiguration.
        :rtype: PodType
        """
        return self._pod_type

    @pod_type.setter
    def pod_type(self, pod_type):
        """Sets the pod_type of this IndexConfiguration.


        :param pod_type: The pod_type of this IndexConfiguration.
        :type pod_type: PodType
        """

        self._pod_type = pod_type

    @property
    def replicas(self):
        """Gets the replicas of this IndexConfiguration.

        The desired number of replicas for the index.

        :return: The replicas of this IndexConfiguration.
        :rtype: int
        """
        return self._replicas

    @replicas.setter
    def replicas(self, replicas):
        """Sets the replicas of this IndexConfiguration.

        The desired number of replicas for the index.

        :param replicas: The replicas of this IndexConfiguration.
        :type replicas: int
        """
        if replicas is not None and replicas < 1:
            raise ValueError("Invalid value for `replicas`, must be a value greater than or equal to `1`")

        self._replicas = replicas
