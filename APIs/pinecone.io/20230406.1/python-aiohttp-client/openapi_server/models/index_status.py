# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.index_state import IndexState
from openapi_server import util


class IndexStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, host: str=None, port: int=None, ready: bool=None, state: IndexState=None):
        """IndexStatus - a model defined in OpenAPI

        :param host: The host of this IndexStatus.
        :param port: The port of this IndexStatus.
        :param ready: The ready of this IndexStatus.
        :param state: The state of this IndexStatus.
        """
        self.openapi_types = {
            'host': str,
            'port': int,
            'ready': bool,
            'state': IndexState
        }

        self.attribute_map = {
            'host': 'host',
            'port': 'port',
            'ready': 'ready',
            'state': 'state'
        }

        self._host = host
        self._port = port
        self._ready = ready
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IndexStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The IndexStatus of this IndexStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def host(self):
        """Gets the host of this IndexStatus.


        :return: The host of this IndexStatus.
        :rtype: str
        """
        return self._host

    @host.setter
    def host(self, host):
        """Sets the host of this IndexStatus.


        :param host: The host of this IndexStatus.
        :type host: str
        """

        self._host = host

    @property
    def port(self):
        """Gets the port of this IndexStatus.


        :return: The port of this IndexStatus.
        :rtype: int
        """
        return self._port

    @port.setter
    def port(self, port):
        """Sets the port of this IndexStatus.


        :param port: The port of this IndexStatus.
        :type port: int
        """

        self._port = port

    @property
    def ready(self):
        """Gets the ready of this IndexStatus.


        :return: The ready of this IndexStatus.
        :rtype: bool
        """
        return self._ready

    @ready.setter
    def ready(self, ready):
        """Sets the ready of this IndexStatus.


        :param ready: The ready of this IndexStatus.
        :type ready: bool
        """

        self._ready = ready

    @property
    def state(self):
        """Gets the state of this IndexStatus.


        :return: The state of this IndexStatus.
        :rtype: IndexState
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this IndexStatus.


        :param state: The state of this IndexStatus.
        :type state: IndexState
        """

        self._state = state
