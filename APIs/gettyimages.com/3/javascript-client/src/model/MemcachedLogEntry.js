/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import LogLevel from './LogLevel';

/**
 * The MemcachedLogEntry model module.
 * @module model/MemcachedLogEntry
 * @version 3
 */
class MemcachedLogEntry {
    /**
     * Constructs a new <code>MemcachedLogEntry</code>.
     * @alias module:model/MemcachedLogEntry
     */
    constructor() { 
        
        MemcachedLogEntry.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MemcachedLogEntry</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MemcachedLogEntry} obj Optional instance to populate.
     * @return {module:model/MemcachedLogEntry} The populated <code>MemcachedLogEntry</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MemcachedLogEntry();

            if (data.hasOwnProperty('ExceptionMessage')) {
                obj['ExceptionMessage'] = ApiClient.convertToType(data['ExceptionMessage'], 'String');
            }
            if (data.hasOwnProperty('LogLevel')) {
                obj['LogLevel'] = LogLevel.constructFromObject(data['LogLevel']);
            }
            if (data.hasOwnProperty('Message')) {
                obj['Message'] = ApiClient.convertToType(data['Message'], 'String');
            }
            if (data.hasOwnProperty('Time')) {
                obj['Time'] = ApiClient.convertToType(data['Time'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MemcachedLogEntry</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MemcachedLogEntry</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['ExceptionMessage'] && !(typeof data['ExceptionMessage'] === 'string' || data['ExceptionMessage'] instanceof String)) {
            throw new Error("Expected the field `ExceptionMessage` to be a primitive type in the JSON string but got " + data['ExceptionMessage']);
        }
        // ensure the json data is a string
        if (data['Message'] && !(typeof data['Message'] === 'string' || data['Message'] instanceof String)) {
            throw new Error("Expected the field `Message` to be a primitive type in the JSON string but got " + data['Message']);
        }

        return true;
    }


}



/**
 * @member {String} ExceptionMessage
 */
MemcachedLogEntry.prototype['ExceptionMessage'] = undefined;

/**
 * @member {module:model/LogLevel} LogLevel
 */
MemcachedLogEntry.prototype['LogLevel'] = undefined;

/**
 * @member {String} Message
 */
MemcachedLogEntry.prototype['Message'] = undefined;

/**
 * @member {Date} Time
 */
MemcachedLogEntry.prototype['Time'] = undefined;






export default MemcachedLogEntry;

