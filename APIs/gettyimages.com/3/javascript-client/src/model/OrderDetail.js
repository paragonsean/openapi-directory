/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import AssetIdFromOrder from './AssetIdFromOrder';
import OrderNotes from './OrderNotes';

/**
 * The OrderDetail model module.
 * @module model/OrderDetail
 * @version 3
 */
class OrderDetail {
    /**
     * Constructs a new <code>OrderDetail</code>.
     * @alias module:model/OrderDetail
     */
    constructor() { 
        
        OrderDetail.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>OrderDetail</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/OrderDetail} obj Optional instance to populate.
     * @return {module:model/OrderDetail} The populated <code>OrderDetail</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new OrderDetail();

            if (data.hasOwnProperty('assets')) {
                obj['assets'] = ApiClient.convertToType(data['assets'], [AssetIdFromOrder]);
            }
            if (data.hasOwnProperty('end_client')) {
                obj['end_client'] = ApiClient.convertToType(data['end_client'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('invoice_number')) {
                obj['invoice_number'] = ApiClient.convertToType(data['invoice_number'], 'String');
            }
            if (data.hasOwnProperty('notes')) {
                obj['notes'] = OrderNotes.constructFromObject(data['notes']);
            }
            if (data.hasOwnProperty('order_date')) {
                obj['order_date'] = ApiClient.convertToType(data['order_date'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>OrderDetail</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>OrderDetail</code>.
     */
    static validateJSON(data) {
        if (data['assets']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['assets'])) {
                throw new Error("Expected the field `assets` to be an array in the JSON data but got " + data['assets']);
            }
            // validate the optional field `assets` (array)
            for (const item of data['assets']) {
                AssetIdFromOrder.validateJSON(item);
            };
        }
        // ensure the json data is a string
        if (data['end_client'] && !(typeof data['end_client'] === 'string' || data['end_client'] instanceof String)) {
            throw new Error("Expected the field `end_client` to be a primitive type in the JSON string but got " + data['end_client']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['invoice_number'] && !(typeof data['invoice_number'] === 'string' || data['invoice_number'] instanceof String)) {
            throw new Error("Expected the field `invoice_number` to be a primitive type in the JSON string but got " + data['invoice_number']);
        }
        // validate the optional field `notes`
        if (data['notes']) { // data not null
          OrderNotes.validateJSON(data['notes']);
        }

        return true;
    }


}



/**
 * @member {Array.<module:model/AssetIdFromOrder>} assets
 */
OrderDetail.prototype['assets'] = undefined;

/**
 * @member {String} end_client
 */
OrderDetail.prototype['end_client'] = undefined;

/**
 * @member {String} id
 */
OrderDetail.prototype['id'] = undefined;

/**
 * @member {String} invoice_number
 */
OrderDetail.prototype['invoice_number'] = undefined;

/**
 * @member {module:model/OrderNotes} notes
 */
OrderDetail.prototype['notes'] = undefined;

/**
 * @member {Date} order_date
 */
OrderDetail.prototype['order_date'] = undefined;






export default OrderDetail;

