/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The CuratedSet model module.
 * @module model/CuratedSet
 * @version 3
 */
class CuratedSet {
    /**
     * Constructs a new <code>CuratedSet</code>.
     * @alias module:model/CuratedSet
     */
    constructor() { 
        
        CuratedSet.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>CuratedSet</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CuratedSet} obj Optional instance to populate.
     * @return {module:model/CuratedSet} The populated <code>CuratedSet</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CuratedSet();

            if (data.hasOwnProperty('assets')) {
                obj['assets'] = ApiClient.convertToType(data['assets'], ['String']);
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('date_last_updated')) {
                obj['date_last_updated'] = ApiClient.convertToType(data['date_last_updated'], 'Date');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('hero_image_uri')) {
                obj['hero_image_uri'] = ApiClient.convertToType(data['hero_image_uri'], 'String');
            }
            if (data.hasOwnProperty('keywords')) {
                obj['keywords'] = ApiClient.convertToType(data['keywords'], ['String']);
            }
            if (data.hasOwnProperty('set_id')) {
                obj['set_id'] = ApiClient.convertToType(data['set_id'], 'String');
            }
            if (data.hasOwnProperty('title')) {
                obj['title'] = ApiClient.convertToType(data['title'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CuratedSet</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CuratedSet</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['assets'])) {
            throw new Error("Expected the field `assets` to be an array in the JSON data but got " + data['assets']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['hero_image_uri'] && !(typeof data['hero_image_uri'] === 'string' || data['hero_image_uri'] instanceof String)) {
            throw new Error("Expected the field `hero_image_uri` to be a primitive type in the JSON string but got " + data['hero_image_uri']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['keywords'])) {
            throw new Error("Expected the field `keywords` to be an array in the JSON data but got " + data['keywords']);
        }
        // ensure the json data is a string
        if (data['set_id'] && !(typeof data['set_id'] === 'string' || data['set_id'] instanceof String)) {
            throw new Error("Expected the field `set_id` to be a primitive type in the JSON string but got " + data['set_id']);
        }
        // ensure the json data is a string
        if (data['title'] && !(typeof data['title'] === 'string' || data['title'] instanceof String)) {
            throw new Error("Expected the field `title` to be a primitive type in the JSON string but got " + data['title']);
        }

        return true;
    }


}



/**
 * @member {Array.<String>} assets
 */
CuratedSet.prototype['assets'] = undefined;

/**
 * @member {Date} date_created
 */
CuratedSet.prototype['date_created'] = undefined;

/**
 * @member {Date} date_last_updated
 */
CuratedSet.prototype['date_last_updated'] = undefined;

/**
 * @member {String} description
 */
CuratedSet.prototype['description'] = undefined;

/**
 * @member {String} hero_image_uri
 */
CuratedSet.prototype['hero_image_uri'] = undefined;

/**
 * @member {Array.<String>} keywords
 */
CuratedSet.prototype['keywords'] = undefined;

/**
 * @member {String} set_id
 */
CuratedSet.prototype['set_id'] = undefined;

/**
 * @member {String} title
 */
CuratedSet.prototype['title'] = undefined;






export default CuratedSet;

