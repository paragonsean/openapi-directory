/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Links model module.
 * @module model/Links
 * @version 3
 */
class Links {
    /**
     * Constructs a new <code>Links</code>.
     * @alias module:model/Links
     */
    constructor() { 
        
        Links.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Links</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Links} obj Optional instance to populate.
     * @return {module:model/Links} The populated <code>Links</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Links();

            if (data.hasOwnProperty('invitation')) {
                obj['invitation'] = ApiClient.convertToType(data['invitation'], 'String');
            }
            if (data.hasOwnProperty('share')) {
                obj['share'] = ApiClient.convertToType(data['share'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Links</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Links</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['invitation'] && !(typeof data['invitation'] === 'string' || data['invitation'] instanceof String)) {
            throw new Error("Expected the field `invitation` to be a primitive type in the JSON string but got " + data['invitation']);
        }
        // ensure the json data is a string
        if (data['share'] && !(typeof data['share'] === 'string' || data['share'] instanceof String)) {
            throw new Error("Expected the field `share` to be a primitive type in the JSON string but got " + data['share']);
        }

        return true;
    }


}



/**
 * @member {String} invitation
 */
Links.prototype['invitation'] = undefined;

/**
 * @member {String} share
 */
Links.prototype['share'] = undefined;






export default Links;

