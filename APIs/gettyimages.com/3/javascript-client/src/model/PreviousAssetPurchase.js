/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The PreviousAssetPurchase model module.
 * @module model/PreviousAssetPurchase
 * @version 3
 */
class PreviousAssetPurchase {
    /**
     * Constructs a new <code>PreviousAssetPurchase</code>.
     * @alias module:model/PreviousAssetPurchase
     */
    constructor() { 
        
        PreviousAssetPurchase.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>PreviousAssetPurchase</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/PreviousAssetPurchase} obj Optional instance to populate.
     * @return {module:model/PreviousAssetPurchase} The populated <code>PreviousAssetPurchase</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PreviousAssetPurchase();

            if (data.hasOwnProperty('asset_id')) {
                obj['asset_id'] = ApiClient.convertToType(data['asset_id'], 'String');
            }
            if (data.hasOwnProperty('asset_type')) {
                obj['asset_type'] = ApiClient.convertToType(data['asset_type'], 'String');
            }
            if (data.hasOwnProperty('date_purchased')) {
                obj['date_purchased'] = ApiClient.convertToType(data['date_purchased'], 'Date');
            }
            if (data.hasOwnProperty('download_uri')) {
                obj['download_uri'] = ApiClient.convertToType(data['download_uri'], 'String');
            }
            if (data.hasOwnProperty('file_size_in_bytes')) {
                obj['file_size_in_bytes'] = ApiClient.convertToType(data['file_size_in_bytes'], 'String');
            }
            if (data.hasOwnProperty('license_model')) {
                obj['license_model'] = ApiClient.convertToType(data['license_model'], 'String');
            }
            if (data.hasOwnProperty('order_id')) {
                obj['order_id'] = ApiClient.convertToType(data['order_id'], 'String');
            }
            if (data.hasOwnProperty('purchased_by')) {
                obj['purchased_by'] = ApiClient.convertToType(data['purchased_by'], 'String');
            }
            if (data.hasOwnProperty('size_name')) {
                obj['size_name'] = ApiClient.convertToType(data['size_name'], 'String');
            }
            if (data.hasOwnProperty('thumb_uri')) {
                obj['thumb_uri'] = ApiClient.convertToType(data['thumb_uri'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>PreviousAssetPurchase</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>PreviousAssetPurchase</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['asset_id'] && !(typeof data['asset_id'] === 'string' || data['asset_id'] instanceof String)) {
            throw new Error("Expected the field `asset_id` to be a primitive type in the JSON string but got " + data['asset_id']);
        }
        // ensure the json data is a string
        if (data['asset_type'] && !(typeof data['asset_type'] === 'string' || data['asset_type'] instanceof String)) {
            throw new Error("Expected the field `asset_type` to be a primitive type in the JSON string but got " + data['asset_type']);
        }
        // ensure the json data is a string
        if (data['download_uri'] && !(typeof data['download_uri'] === 'string' || data['download_uri'] instanceof String)) {
            throw new Error("Expected the field `download_uri` to be a primitive type in the JSON string but got " + data['download_uri']);
        }
        // ensure the json data is a string
        if (data['file_size_in_bytes'] && !(typeof data['file_size_in_bytes'] === 'string' || data['file_size_in_bytes'] instanceof String)) {
            throw new Error("Expected the field `file_size_in_bytes` to be a primitive type in the JSON string but got " + data['file_size_in_bytes']);
        }
        // ensure the json data is a string
        if (data['license_model'] && !(typeof data['license_model'] === 'string' || data['license_model'] instanceof String)) {
            throw new Error("Expected the field `license_model` to be a primitive type in the JSON string but got " + data['license_model']);
        }
        // ensure the json data is a string
        if (data['order_id'] && !(typeof data['order_id'] === 'string' || data['order_id'] instanceof String)) {
            throw new Error("Expected the field `order_id` to be a primitive type in the JSON string but got " + data['order_id']);
        }
        // ensure the json data is a string
        if (data['purchased_by'] && !(typeof data['purchased_by'] === 'string' || data['purchased_by'] instanceof String)) {
            throw new Error("Expected the field `purchased_by` to be a primitive type in the JSON string but got " + data['purchased_by']);
        }
        // ensure the json data is a string
        if (data['size_name'] && !(typeof data['size_name'] === 'string' || data['size_name'] instanceof String)) {
            throw new Error("Expected the field `size_name` to be a primitive type in the JSON string but got " + data['size_name']);
        }
        // ensure the json data is a string
        if (data['thumb_uri'] && !(typeof data['thumb_uri'] === 'string' || data['thumb_uri'] instanceof String)) {
            throw new Error("Expected the field `thumb_uri` to be a primitive type in the JSON string but got " + data['thumb_uri']);
        }

        return true;
    }


}



/**
 * @member {String} asset_id
 */
PreviousAssetPurchase.prototype['asset_id'] = undefined;

/**
 * @member {String} asset_type
 */
PreviousAssetPurchase.prototype['asset_type'] = undefined;

/**
 * @member {Date} date_purchased
 */
PreviousAssetPurchase.prototype['date_purchased'] = undefined;

/**
 * @member {String} download_uri
 */
PreviousAssetPurchase.prototype['download_uri'] = undefined;

/**
 * @member {String} file_size_in_bytes
 */
PreviousAssetPurchase.prototype['file_size_in_bytes'] = undefined;

/**
 * @member {String} license_model
 */
PreviousAssetPurchase.prototype['license_model'] = undefined;

/**
 * @member {String} order_id
 */
PreviousAssetPurchase.prototype['order_id'] = undefined;

/**
 * @member {String} purchased_by
 */
PreviousAssetPurchase.prototype['purchased_by'] = undefined;

/**
 * @member {String} size_name
 */
PreviousAssetPurchase.prototype['size_name'] = undefined;

/**
 * @member {String} thumb_uri
 */
PreviousAssetPurchase.prototype['thumb_uri'] = undefined;






export default PreviousAssetPurchase;

