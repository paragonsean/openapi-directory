/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AllowedUse model module.
 * @module model/AllowedUse
 * @version 3
 */
class AllowedUse {
    /**
     * Constructs a new <code>AllowedUse</code>.
     * @alias module:model/AllowedUse
     */
    constructor() { 
        
        AllowedUse.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>AllowedUse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AllowedUse} obj Optional instance to populate.
     * @return {module:model/AllowedUse} The populated <code>AllowedUse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AllowedUse();

            if (data.hasOwnProperty('how_can_i_use_it')) {
                obj['how_can_i_use_it'] = ApiClient.convertToType(data['how_can_i_use_it'], 'String');
            }
            if (data.hasOwnProperty('release_info')) {
                obj['release_info'] = ApiClient.convertToType(data['release_info'], 'String');
            }
            if (data.hasOwnProperty('usage_restrictions')) {
                obj['usage_restrictions'] = ApiClient.convertToType(data['usage_restrictions'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AllowedUse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AllowedUse</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['how_can_i_use_it'] && !(typeof data['how_can_i_use_it'] === 'string' || data['how_can_i_use_it'] instanceof String)) {
            throw new Error("Expected the field `how_can_i_use_it` to be a primitive type in the JSON string but got " + data['how_can_i_use_it']);
        }
        // ensure the json data is a string
        if (data['release_info'] && !(typeof data['release_info'] === 'string' || data['release_info'] instanceof String)) {
            throw new Error("Expected the field `release_info` to be a primitive type in the JSON string but got " + data['release_info']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['usage_restrictions'])) {
            throw new Error("Expected the field `usage_restrictions` to be an array in the JSON data but got " + data['usage_restrictions']);
        }

        return true;
    }


}



/**
 * Indicates how the asset can be used
 * @member {String} how_can_i_use_it
 */
AllowedUse.prototype['how_can_i_use_it'] = undefined;

/**
 * Indicates release status
 * @member {String} release_info
 */
AllowedUse.prototype['release_info'] = undefined;

/**
 * Indicates asset usage restriction, if any
 * @member {Array.<String>} usage_restrictions
 */
AllowedUse.prototype['usage_restrictions'] = undefined;






export default AllowedUse;

