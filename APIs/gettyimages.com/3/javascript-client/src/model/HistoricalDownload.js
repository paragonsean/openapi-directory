/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Dimensions from './Dimensions';
import DownloadDetails from './DownloadDetails';
import User from './User';

/**
 * The HistoricalDownload model module.
 * @module model/HistoricalDownload
 * @version 3
 */
class HistoricalDownload {
    /**
     * Constructs a new <code>HistoricalDownload</code>.
     * @alias module:model/HistoricalDownload
     */
    constructor() { 
        
        HistoricalDownload.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>HistoricalDownload</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HistoricalDownload} obj Optional instance to populate.
     * @return {module:model/HistoricalDownload} The populated <code>HistoricalDownload</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new HistoricalDownload();

            if (data.hasOwnProperty('agreement_name')) {
                obj['agreement_name'] = ApiClient.convertToType(data['agreement_name'], 'String');
            }
            if (data.hasOwnProperty('asset_type')) {
                obj['asset_type'] = ApiClient.convertToType(data['asset_type'], 'String');
            }
            if (data.hasOwnProperty('date_downloaded')) {
                obj['date_downloaded'] = ApiClient.convertToType(data['date_downloaded'], 'Date');
            }
            if (data.hasOwnProperty('dimensions')) {
                obj['dimensions'] = Dimensions.constructFromObject(data['dimensions']);
            }
            if (data.hasOwnProperty('download_details')) {
                obj['download_details'] = DownloadDetails.constructFromObject(data['download_details']);
            }
            if (data.hasOwnProperty('download_source')) {
                obj['download_source'] = ApiClient.convertToType(data['download_source'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('product_id')) {
                obj['product_id'] = ApiClient.convertToType(data['product_id'], 'Number');
            }
            if (data.hasOwnProperty('product_type')) {
                obj['product_type'] = ApiClient.convertToType(data['product_type'], 'String');
            }
            if (data.hasOwnProperty('size_name')) {
                obj['size_name'] = ApiClient.convertToType(data['size_name'], 'String');
            }
            if (data.hasOwnProperty('thumb_uri')) {
                obj['thumb_uri'] = ApiClient.convertToType(data['thumb_uri'], 'String');
            }
            if (data.hasOwnProperty('user')) {
                obj['user'] = User.constructFromObject(data['user']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HistoricalDownload</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HistoricalDownload</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['agreement_name'] && !(typeof data['agreement_name'] === 'string' || data['agreement_name'] instanceof String)) {
            throw new Error("Expected the field `agreement_name` to be a primitive type in the JSON string but got " + data['agreement_name']);
        }
        // ensure the json data is a string
        if (data['asset_type'] && !(typeof data['asset_type'] === 'string' || data['asset_type'] instanceof String)) {
            throw new Error("Expected the field `asset_type` to be a primitive type in the JSON string but got " + data['asset_type']);
        }
        // validate the optional field `dimensions`
        if (data['dimensions']) { // data not null
          Dimensions.validateJSON(data['dimensions']);
        }
        // validate the optional field `download_details`
        if (data['download_details']) { // data not null
          DownloadDetails.validateJSON(data['download_details']);
        }
        // ensure the json data is a string
        if (data['download_source'] && !(typeof data['download_source'] === 'string' || data['download_source'] instanceof String)) {
            throw new Error("Expected the field `download_source` to be a primitive type in the JSON string but got " + data['download_source']);
        }
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['product_type'] && !(typeof data['product_type'] === 'string' || data['product_type'] instanceof String)) {
            throw new Error("Expected the field `product_type` to be a primitive type in the JSON string but got " + data['product_type']);
        }
        // ensure the json data is a string
        if (data['size_name'] && !(typeof data['size_name'] === 'string' || data['size_name'] instanceof String)) {
            throw new Error("Expected the field `size_name` to be a primitive type in the JSON string but got " + data['size_name']);
        }
        // ensure the json data is a string
        if (data['thumb_uri'] && !(typeof data['thumb_uri'] === 'string' || data['thumb_uri'] instanceof String)) {
            throw new Error("Expected the field `thumb_uri` to be a primitive type in the JSON string but got " + data['thumb_uri']);
        }
        // validate the optional field `user`
        if (data['user']) { // data not null
          User.validateJSON(data['user']);
        }

        return true;
    }


}



/**
 * @member {String} agreement_name
 */
HistoricalDownload.prototype['agreement_name'] = undefined;

/**
 * @member {String} asset_type
 */
HistoricalDownload.prototype['asset_type'] = undefined;

/**
 * @member {Date} date_downloaded
 */
HistoricalDownload.prototype['date_downloaded'] = undefined;

/**
 * @member {module:model/Dimensions} dimensions
 */
HistoricalDownload.prototype['dimensions'] = undefined;

/**
 * @member {module:model/DownloadDetails} download_details
 */
HistoricalDownload.prototype['download_details'] = undefined;

/**
 * @member {String} download_source
 */
HistoricalDownload.prototype['download_source'] = undefined;

/**
 * @member {String} id
 */
HistoricalDownload.prototype['id'] = undefined;

/**
 * @member {Number} product_id
 */
HistoricalDownload.prototype['product_id'] = undefined;

/**
 * @member {String} product_type
 */
HistoricalDownload.prototype['product_type'] = undefined;

/**
 * @member {String} size_name
 */
HistoricalDownload.prototype['size_name'] = undefined;

/**
 * @member {String} thumb_uri
 */
HistoricalDownload.prototype['thumb_uri'] = undefined;

/**
 * @member {module:model/User} user
 */
HistoricalDownload.prototype['user'] = undefined;






export default HistoricalDownload;

