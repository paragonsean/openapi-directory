/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Collection model module.
 * @module model/Collection
 * @version 3
 */
class Collection {
    /**
     * Constructs a new <code>Collection</code>.
     * @alias module:model/Collection
     */
    constructor() { 
        
        Collection.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Collection</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Collection} obj Optional instance to populate.
     * @return {module:model/Collection} The populated <code>Collection</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Collection();

            if (data.hasOwnProperty('asset_family')) {
                obj['asset_family'] = ApiClient.convertToType(data['asset_family'], 'String');
            }
            if (data.hasOwnProperty('code')) {
                obj['code'] = ApiClient.convertToType(data['code'], 'String');
            }
            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('license_model')) {
                obj['license_model'] = ApiClient.convertToType(data['license_model'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('product_types')) {
                obj['product_types'] = ApiClient.convertToType(data['product_types'], ['String']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Collection</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Collection</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['asset_family'] && !(typeof data['asset_family'] === 'string' || data['asset_family'] instanceof String)) {
            throw new Error("Expected the field `asset_family` to be a primitive type in the JSON string but got " + data['asset_family']);
        }
        // ensure the json data is a string
        if (data['code'] && !(typeof data['code'] === 'string' || data['code'] instanceof String)) {
            throw new Error("Expected the field `code` to be a primitive type in the JSON string but got " + data['code']);
        }
        // ensure the json data is a string
        if (data['license_model'] && !(typeof data['license_model'] === 'string' || data['license_model'] instanceof String)) {
            throw new Error("Expected the field `license_model` to be a primitive type in the JSON string but got " + data['license_model']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['product_types'])) {
            throw new Error("Expected the field `product_types` to be an array in the JSON data but got " + data['product_types']);
        }

        return true;
    }


}



/**
 * @member {String} asset_family
 */
Collection.prototype['asset_family'] = undefined;

/**
 * @member {String} code
 */
Collection.prototype['code'] = undefined;

/**
 * @member {Number} id
 */
Collection.prototype['id'] = undefined;

/**
 * @member {String} license_model
 */
Collection.prototype['license_model'] = undefined;

/**
 * @member {String} name
 */
Collection.prototype['name'] = undefined;

/**
 * @member {Array.<String>} product_types
 */
Collection.prototype['product_types'] = undefined;






export default Collection;

