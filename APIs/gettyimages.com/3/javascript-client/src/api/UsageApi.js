/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ReportUsageBatchRequest from '../model/ReportUsageBatchRequest';
import ReportUsageBatchResponse from '../model/ReportUsageBatchResponse';

/**
* Usage service.
* @module api/UsageApi
* @version 3
*/
export default class UsageApi {

    /**
    * Constructs a new UsageApi. 
    * @alias module:api/UsageApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v3UsageBatchesIdPut operation.
     * @callback module:api/UsageApi~v3UsageBatchesIdPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ReportUsageBatchResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Report usage of assets via a batch format.
     * # Report Usage  Use this endpoint to report the usages of a set of assets. The count of assets submitted in a single batch to this endpoint is limited to 1000. Note that all asset Ids specified must be valid or the operation will fail causing no usages to be recorded. In this case, you will need to remove the invalid asset Ids from the query request and re-submit the query.  ##  Quickstart  You'll need an API key and a [Resource Owner Grant](http://developers.gettyimages.com/en/authorization-faq.html) access token to use this resource. Please see our [Getting Started](http://developers.gettyimages.com/en/getting-started.html) page for more information on how to sign up for an API key.   _Note_: Date of use can be in any unambiguous date format. 
     * @param {String} id Specifies a unique batch transaction id to identify the report.
     * @param {Object} opts Optional parameters
     * @param {module:model/ReportUsageBatchRequest} [reportUsageBatchRequest] Specifies up to 1000 sets of asset Id, usage count, and date of use to submit usages for.               Note that all asset Ids specified must be valid or the operation will fail causing no usages to be recorded.               All dates must be on or before this date and the format should be ISO 8601 (ex: YYYY-MM-DD), time is not needed.
     * @param {module:api/UsageApi~v3UsageBatchesIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ReportUsageBatchResponse}
     */
    v3UsageBatchesIdPut(id, opts, callback) {
      opts = opts || {};
      let postBody = opts['reportUsageBatchRequest'];
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling v3UsageBatchesIdPut");
      }

      let pathParams = {
        'id': id
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'OAuth2', 'OAuth2', 'OAuth2', 'Api-Key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ReportUsageBatchResponse;
      return this.apiClient.callApi(
        '/v3/usage-batches/{id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
