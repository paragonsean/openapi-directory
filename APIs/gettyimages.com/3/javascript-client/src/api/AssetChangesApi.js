/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AssetChanges from '../model/AssetChanges';
import Channel from '../model/Channel';

/**
* AssetChanges service.
* @module api/AssetChangesApi
* @version 3
*/
export default class AssetChangesApi {

    /**
    * Constructs a new AssetChangesApi. 
    * @alias module:api/AssetChangesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v3AssetChangesChangeSetsChangeSetIdDelete operation.
     * @callback module:api/AssetChangesApi~v3AssetChangesChangeSetsChangeSetIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Confirm asset change notifications.
     * # Delete Asset Changes  Confirm asset changes acknowledges receipt of asset changes (from the PUT asset-changes endpoint).  ##  Quickstart  You'll need an API key and an access token to use this resource.  Use the change_set_id from the PUT asset-changes/change-sets endpoint to confirm receipt of notifications. 
     * @param {Number} changeSetId Specify the change-set-id associated with a transaction resource whose receipt you want to confirm.
     * @param {module:api/AssetChangesApi~v3AssetChangesChangeSetsChangeSetIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    v3AssetChangesChangeSetsChangeSetIdDelete(changeSetId, callback) {
      let postBody = null;
      // verify the required parameter 'changeSetId' is set
      if (changeSetId === undefined || changeSetId === null) {
        throw new Error("Missing the required parameter 'changeSetId' when calling v3AssetChangesChangeSetsChangeSetIdDelete");
      }

      let pathParams = {
        'change-set-id': changeSetId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'OAuth2', 'OAuth2', 'OAuth2', 'Api-Key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v3/asset-changes/change-sets/{change-set-id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v3AssetChangesChangeSetsPut operation.
     * @callback module:api/AssetChangesApi~v3AssetChangesChangeSetsPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AssetChanges} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get asset change notifications.
     * # Asset Changes  Get notifications about new, updated or deleted assets for a specific channel.  ##  Quickstart  You'll need an API key and an access token to use this resource.   Maximum batch size is 2200.  Change-sets must be confirmed before a new batch of notifications can be retrieved from this endpoint. Use the DELETE asset-changes/change-sets/{change-set-id} endpoint to confirm reciept of these notifications.  Values returned for asset_type include Image, Film, and null. Values returned for asset_lifecycle include New, Update, and Delete.  Delete notifications may be provided for asset ids that have not previously been received as New or Update notifications. Delete notifications may return null for the asset_type.  If there are no notifications in the channel an empty response body will be returned.  Notifications older than 60 days will be removed from partner channels. 
     * @param {Object} opts Optional parameters
     * @param {Number} [channelId] Specifies the id of the channel for the asset data. Valid channel ids can be found in the results of the Get Partner Channel query.
     * @param {Number} [batchSize] Specifies the number of assets to return. The default is 2200; maximum is 2200.
     * @param {module:api/AssetChangesApi~v3AssetChangesChangeSetsPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AssetChanges}
     */
    v3AssetChangesChangeSetsPut(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'channel_id': opts['channelId'],
        'batch_size': opts['batchSize']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'OAuth2', 'OAuth2', 'OAuth2', 'Api-Key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = AssetChanges;
      return this.apiClient.callApi(
        '/v3/asset-changes/change-sets', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v3AssetChangesChannelsGet operation.
     * @callback module:api/AssetChangesApi~v3AssetChangesChannelsGetCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/Channel>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get a list of asset change notification channels.
     * # Get Partner Channels  Retrieves the channel data for the partner. This data can be used to populate the channel_id parameter in the Put Asset Changes query.  ##  Quickstart  You'll need an API key and an access token to use this resource.  Partners who have a channel that has been removed should contact their sales representative to be set up again.  
     * @param {module:api/AssetChangesApi~v3AssetChangesChannelsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/Channel>}
     */
    v3AssetChangesChannelsGet(callback) {
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'OAuth2', 'OAuth2', 'OAuth2', 'Api-Key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = [Channel];
      return this.apiClient.callApi(
        '/v3/asset-changes/channels', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
