/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AddBoardAssetsResult from '../model/AddBoardAssetsResult';
import BoardAsset from '../model/BoardAsset';
import BoardCreated from '../model/BoardCreated';
import BoardDetail from '../model/BoardDetail';
import BoardInfo from '../model/BoardInfo';
import BoardList from '../model/BoardList';
import BoardRelationship from '../model/BoardRelationship';
import BoardSortOrder from '../model/BoardSortOrder';
import CommentCreated from '../model/CommentCreated';
import CommentRequest from '../model/CommentRequest';
import CommentsList from '../model/CommentsList';

/**
* Boards service.
* @module api/BoardsApi
* @version 3
*/
export default class BoardsApi {

    /**
    * Constructs a new BoardsApi. 
    * @alias module:api/BoardsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v3BoardsBoardIdAssetsAssetIdDelete operation.
     * @callback module:api/BoardsApi~v3BoardsBoardIdAssetsAssetIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove an asset from a board
     * @param {String} boardId Specify the board to remove an asset from.
     * @param {String} assetId Specify the asset to remove from the board.
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage] Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only).
     * @param {module:api/BoardsApi~v3BoardsBoardIdAssetsAssetIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    v3BoardsBoardIdAssetsAssetIdDelete(boardId, assetId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'boardId' is set
      if (boardId === undefined || boardId === null) {
        throw new Error("Missing the required parameter 'boardId' when calling v3BoardsBoardIdAssetsAssetIdDelete");
      }
      // verify the required parameter 'assetId' is set
      if (assetId === undefined || assetId === null) {
        throw new Error("Missing the required parameter 'assetId' when calling v3BoardsBoardIdAssetsAssetIdDelete");
      }

      let pathParams = {
        'board_id': boardId,
        'asset_id': assetId
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'OAuth2', 'OAuth2', 'OAuth2', 'Api-Key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v3/boards/{board_id}/assets/{asset_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v3BoardsBoardIdAssetsAssetIdPut operation.
     * @callback module:api/BoardsApi~v3BoardsBoardIdAssetsAssetIdPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add an asset to a board
     * @param {String} boardId Specify the board to add an asset to.
     * @param {String} assetId Specify the asset to add to the board. If it is already in the board's asset collection, no action is taken.
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage] Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only).
     * @param {module:api/BoardsApi~v3BoardsBoardIdAssetsAssetIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    v3BoardsBoardIdAssetsAssetIdPut(boardId, assetId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'boardId' is set
      if (boardId === undefined || boardId === null) {
        throw new Error("Missing the required parameter 'boardId' when calling v3BoardsBoardIdAssetsAssetIdPut");
      }
      // verify the required parameter 'assetId' is set
      if (assetId === undefined || assetId === null) {
        throw new Error("Missing the required parameter 'assetId' when calling v3BoardsBoardIdAssetsAssetIdPut");
      }

      let pathParams = {
        'board_id': boardId,
        'asset_id': assetId
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'OAuth2', 'OAuth2', 'OAuth2', 'Api-Key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v3/boards/{board_id}/assets/{asset_id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v3BoardsBoardIdAssetsDelete operation.
     * @callback module:api/BoardsApi~v3BoardsBoardIdAssetsDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Remove assets from a board
     * @param {String} boardId Specify the board to remove assets from.
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage] Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only).
     * @param {Array.<String>} [assetIds] List the assets to be removed from the board.
     * @param {module:api/BoardsApi~v3BoardsBoardIdAssetsDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    v3BoardsBoardIdAssetsDelete(boardId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'boardId' is set
      if (boardId === undefined || boardId === null) {
        throw new Error("Missing the required parameter 'boardId' when calling v3BoardsBoardIdAssetsDelete");
      }

      let pathParams = {
        'board_id': boardId
      };
      let queryParams = {
        'asset_ids': this.apiClient.buildCollectionParam(opts['assetIds'], 'multi')
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'OAuth2', 'OAuth2', 'OAuth2', 'Api-Key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v3/boards/{board_id}/assets', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v3BoardsBoardIdAssetsPut operation.
     * @callback module:api/BoardsApi~v3BoardsBoardIdAssetsPutCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AddBoardAssetsResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add assets to a board
     * @param {String} boardId Specify the board to add assets to.
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage] Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only).
     * @param {Array.<module:model/BoardAsset>} [boardAsset] List assets to add to the board.
     * @param {module:api/BoardsApi~v3BoardsBoardIdAssetsPutCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AddBoardAssetsResult}
     */
    v3BoardsBoardIdAssetsPut(boardId, opts, callback) {
      opts = opts || {};
      let postBody = opts['boardAsset'];
      // verify the required parameter 'boardId' is set
      if (boardId === undefined || boardId === null) {
        throw new Error("Missing the required parameter 'boardId' when calling v3BoardsBoardIdAssetsPut");
      }

      let pathParams = {
        'board_id': boardId
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'OAuth2', 'OAuth2', 'OAuth2', 'Api-Key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AddBoardAssetsResult;
      return this.apiClient.callApi(
        '/v3/boards/{board_id}/assets', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v3BoardsBoardIdCommentsCommentIdDelete operation.
     * @callback module:api/BoardsApi~v3BoardsBoardIdCommentsCommentIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a comment from a board
     * @param {String} boardId Specify the board containing the comment to delete.
     * @param {String} commentId Specify the comment to delete.
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage] Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only).
     * @param {module:api/BoardsApi~v3BoardsBoardIdCommentsCommentIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    v3BoardsBoardIdCommentsCommentIdDelete(boardId, commentId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'boardId' is set
      if (boardId === undefined || boardId === null) {
        throw new Error("Missing the required parameter 'boardId' when calling v3BoardsBoardIdCommentsCommentIdDelete");
      }
      // verify the required parameter 'commentId' is set
      if (commentId === undefined || commentId === null) {
        throw new Error("Missing the required parameter 'commentId' when calling v3BoardsBoardIdCommentsCommentIdDelete");
      }

      let pathParams = {
        'board_id': boardId,
        'comment_id': commentId
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'OAuth2', 'OAuth2', 'OAuth2', 'Api-Key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v3/boards/{board_id}/comments/{comment_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v3BoardsBoardIdCommentsGet operation.
     * @callback module:api/BoardsApi~v3BoardsBoardIdCommentsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CommentsList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get comments from a board
     * @param {String} boardId Specify the board to retrieve comments from.
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage] Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only).
     * @param {module:api/BoardsApi~v3BoardsBoardIdCommentsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CommentsList}
     */
    v3BoardsBoardIdCommentsGet(boardId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'boardId' is set
      if (boardId === undefined || boardId === null) {
        throw new Error("Missing the required parameter 'boardId' when calling v3BoardsBoardIdCommentsGet");
      }

      let pathParams = {
        'board_id': boardId
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'OAuth2', 'OAuth2', 'OAuth2', 'Api-Key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = CommentsList;
      return this.apiClient.callApi(
        '/v3/boards/{board_id}/comments', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v3BoardsBoardIdCommentsPost operation.
     * @callback module:api/BoardsApi~v3BoardsBoardIdCommentsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/CommentCreated} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Add a comment to a board
     * @param {String} boardId Specify the board to add a comment to.
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage] Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only).
     * @param {module:model/CommentRequest} [commentRequest] Comment to be added to the board.
     * @param {module:api/BoardsApi~v3BoardsBoardIdCommentsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/CommentCreated}
     */
    v3BoardsBoardIdCommentsPost(boardId, opts, callback) {
      opts = opts || {};
      let postBody = opts['commentRequest'];
      // verify the required parameter 'boardId' is set
      if (boardId === undefined || boardId === null) {
        throw new Error("Missing the required parameter 'boardId' when calling v3BoardsBoardIdCommentsPost");
      }

      let pathParams = {
        'board_id': boardId
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'OAuth2', 'OAuth2', 'OAuth2', 'Api-Key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = CommentCreated;
      return this.apiClient.callApi(
        '/v3/boards/{board_id}/comments', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v3BoardsBoardIdDelete operation.
     * @callback module:api/BoardsApi~v3BoardsBoardIdDeleteCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Delete a board
     * @param {String} boardId Specify the board to delete.
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage] Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only).
     * @param {module:api/BoardsApi~v3BoardsBoardIdDeleteCallback} callback The callback function, accepting three arguments: error, data, response
     */
    v3BoardsBoardIdDelete(boardId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'boardId' is set
      if (boardId === undefined || boardId === null) {
        throw new Error("Missing the required parameter 'boardId' when calling v3BoardsBoardIdDelete");
      }

      let pathParams = {
        'board_id': boardId
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'OAuth2', 'OAuth2', 'OAuth2', 'Api-Key'];
      let contentTypes = [];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v3/boards/{board_id}', 'DELETE',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v3BoardsBoardIdGet operation.
     * @callback module:api/BoardsApi~v3BoardsBoardIdGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BoardDetail} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get assets and metadata for a specific board
     * @param {String} boardId Retrieve details for a specific board.
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage] Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only).
     * @param {module:api/BoardsApi~v3BoardsBoardIdGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BoardDetail}
     */
    v3BoardsBoardIdGet(boardId, opts, callback) {
      opts = opts || {};
      let postBody = null;
      // verify the required parameter 'boardId' is set
      if (boardId === undefined || boardId === null) {
        throw new Error("Missing the required parameter 'boardId' when calling v3BoardsBoardIdGet");
      }

      let pathParams = {
        'board_id': boardId
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'OAuth2', 'OAuth2', 'OAuth2', 'Api-Key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BoardDetail;
      return this.apiClient.callApi(
        '/v3/boards/{board_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v3BoardsBoardIdPut operation.
     * @callback module:api/BoardsApi~v3BoardsBoardIdPutCallback
     * @param {String} error Error message, if any.
     * @param data This operation does not return a value.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Update a board
     * @param {String} boardId Specify the board to update.
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage] Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only).
     * @param {module:model/BoardInfo} [boardInfo] Specify a new name and description for the board (name is required).
     * @param {module:api/BoardsApi~v3BoardsBoardIdPutCallback} callback The callback function, accepting three arguments: error, data, response
     */
    v3BoardsBoardIdPut(boardId, opts, callback) {
      opts = opts || {};
      let postBody = opts['boardInfo'];
      // verify the required parameter 'boardId' is set
      if (boardId === undefined || boardId === null) {
        throw new Error("Missing the required parameter 'boardId' when calling v3BoardsBoardIdPut");
      }

      let pathParams = {
        'board_id': boardId
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'OAuth2', 'OAuth2', 'OAuth2', 'Api-Key'];
      let contentTypes = ['application/json'];
      let accepts = [];
      let returnType = null;
      return this.apiClient.callApi(
        '/v3/boards/{board_id}', 'PUT',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v3BoardsGet operation.
     * @callback module:api/BoardsApi~v3BoardsGetCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BoardList} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get all boards that the user participates in
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage] Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only).
     * @param {Number} [page = 1)] Request results starting at a page number (default is 1).
     * @param {module:model/BoardRelationship} [boardRelationship] Search for boards the user owns or has been invited to as an editor.
     * @param {module:model/BoardSortOrder} [sortOrder] Sort the list of boards by last update date or name. Defaults to date_last_updated_descending.
     * @param {Number} [pageSize = 30)] Request number of boards to return in each page. (default is 30).
     * @param {module:api/BoardsApi~v3BoardsGetCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BoardList}
     */
    v3BoardsGet(opts, callback) {
      opts = opts || {};
      let postBody = null;

      let pathParams = {
      };
      let queryParams = {
        'page': opts['page'],
        'board_relationship': opts['boardRelationship'],
        'sort_order': opts['sortOrder'],
        'pageSize': opts['pageSize']
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'OAuth2', 'OAuth2', 'OAuth2', 'Api-Key'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = BoardList;
      return this.apiClient.callApi(
        '/v3/boards', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the v3BoardsPost operation.
     * @callback module:api/BoardsApi~v3BoardsPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/BoardCreated} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Create a new board
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage] Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only).
     * @param {module:model/BoardInfo} [boardInfo] Specify a name and description of the board to create (name is required).
     * @param {module:api/BoardsApi~v3BoardsPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/BoardCreated}
     */
    v3BoardsPost(opts, callback) {
      opts = opts || {};
      let postBody = opts['boardInfo'];

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'OAuth2', 'OAuth2', 'OAuth2', 'Api-Key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = BoardCreated;
      return this.apiClient.callApi(
        '/v3/boards', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
