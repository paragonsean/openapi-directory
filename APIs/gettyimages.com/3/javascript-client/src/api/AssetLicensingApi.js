/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import AcquireAssetLicensesRequest from '../model/AcquireAssetLicensesRequest';
import AssetLicensingResponse from '../model/AssetLicensingResponse';

/**
* AssetLicensing service.
* @module api/AssetLicensingApi
* @version 3
*/
export default class AssetLicensingApi {

    /**
    * Constructs a new AssetLicensingApi. 
    * @alias module:api/AssetLicensingApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the v3AssetLicensingAssetIdPost operation.
     * @callback module:api/AssetLicensingApi~v3AssetLicensingAssetIdPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/AssetLicensingResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Endpoint for acquiring extended licenses with iStock credits for an asset.
     * @param {String} assetId Getty Images assetId - examples 520621493, 112301284
     * @param {Object} opts Optional parameters
     * @param {String} [acceptLanguage] Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only).
     * @param {module:model/AcquireAssetLicensesRequest} [acquireAssetLicensesRequest] Structure that specifies an array of LicenseTypes (multiseat, unlimited, resale, indemnification) to acquire,              and whether or not to use Team Credits. Authenticated User must have access to Team Credits if UseTeamCredits is set to \"true\".
     * @param {module:api/AssetLicensingApi~v3AssetLicensingAssetIdPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/AssetLicensingResponse}
     */
    v3AssetLicensingAssetIdPost(assetId, opts, callback) {
      opts = opts || {};
      let postBody = opts['acquireAssetLicensesRequest'];
      // verify the required parameter 'assetId' is set
      if (assetId === undefined || assetId === null) {
        throw new Error("Missing the required parameter 'assetId' when calling v3AssetLicensingAssetIdPost");
      }

      let pathParams = {
        'assetId': assetId
      };
      let queryParams = {
      };
      let headerParams = {
        'Accept-Language': opts['acceptLanguage']
      };
      let formParams = {
      };

      let authNames = ['OAuth2', 'OAuth2', 'OAuth2', 'OAuth2', 'Api-Key'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = AssetLicensingResponse;
      return this.apiClient.callApi(
        '/v3/asset-licensing/{assetId}', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
