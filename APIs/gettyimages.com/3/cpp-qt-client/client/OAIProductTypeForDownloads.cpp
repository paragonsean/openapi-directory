/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductTypeForDownloads.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductTypeForDownloads::OAIProductTypeForDownloads(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductTypeForDownloads::OAIProductTypeForDownloads() {
    this->initializeModel();
}

OAIProductTypeForDownloads::~OAIProductTypeForDownloads() {}

void OAIProductTypeForDownloads::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIProductTypeForDownloads::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIProductTypeForDownloads::fromJson(QString jsonString) {
    
    if ( jsonString.compare("easyaccess", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProductTypeForDownloads::EASYACCESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("editorialsubscription", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProductTypeForDownloads::EDITORIALSUBSCRIPTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("imagepack", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProductTypeForDownloads::IMAGEPACK;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("premiumaccess", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProductTypeForDownloads::PREMIUMACCESS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("royaltyfreesubscription", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProductTypeForDownloads::ROYALTYFREESUBSCRIPTION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("creditpack", Qt::CaseInsensitive) == 0) {
        m_value = eOAIProductTypeForDownloads::CREDITPACK;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIProductTypeForDownloads::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIProductTypeForDownloads::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIProductTypeForDownloads::EASYACCESS:
            val = "easyaccess";
            break;
        case eOAIProductTypeForDownloads::EDITORIALSUBSCRIPTION:
            val = "editorialsubscription";
            break;
        case eOAIProductTypeForDownloads::IMAGEPACK:
            val = "imagepack";
            break;
        case eOAIProductTypeForDownloads::PREMIUMACCESS:
            val = "premiumaccess";
            break;
        case eOAIProductTypeForDownloads::ROYALTYFREESUBSCRIPTION:
            val = "royaltyfreesubscription";
            break;
        case eOAIProductTypeForDownloads::CREDITPACK:
            val = "creditpack";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIProductTypeForDownloads::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIProductTypeForDownloads::eOAIProductTypeForDownloads OAIProductTypeForDownloads::getValue() const {
    return m_value;
}

void OAIProductTypeForDownloads::setValue(const OAIProductTypeForDownloads::eOAIProductTypeForDownloads& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIProductTypeForDownloads::isSet() const {
    
    return m_value_isSet;
}

bool OAIProductTypeForDownloads::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
