/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVideoAspectRatioFilterType.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVideoAspectRatioFilterType::OAIVideoAspectRatioFilterType(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVideoAspectRatioFilterType::OAIVideoAspectRatioFilterType() {
    this->initializeModel();
}

OAIVideoAspectRatioFilterType::~OAIVideoAspectRatioFilterType() {}

void OAIVideoAspectRatioFilterType::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIVideoAspectRatioFilterType::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIVideoAspectRatioFilterType::fromJson(QString jsonString) {
    
    if ( jsonString.compare("969", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVideoAspectRatioFilterType::_969;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("556", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVideoAspectRatioFilterType::_556;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("184", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVideoAspectRatioFilterType::_184;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("243", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVideoAspectRatioFilterType::_243;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("245", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVideoAspectRatioFilterType::_245;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("121", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVideoAspectRatioFilterType::_121;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("1029", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVideoAspectRatioFilterType::_1029;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("557", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVideoAspectRatioFilterType::_557;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIVideoAspectRatioFilterType::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIVideoAspectRatioFilterType::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIVideoAspectRatioFilterType::_969:
            val = "969";
            break;
        case eOAIVideoAspectRatioFilterType::_556:
            val = "556";
            break;
        case eOAIVideoAspectRatioFilterType::_184:
            val = "184";
            break;
        case eOAIVideoAspectRatioFilterType::_243:
            val = "243";
            break;
        case eOAIVideoAspectRatioFilterType::_245:
            val = "245";
            break;
        case eOAIVideoAspectRatioFilterType::_121:
            val = "121";
            break;
        case eOAIVideoAspectRatioFilterType::_1029:
            val = "1029";
            break;
        case eOAIVideoAspectRatioFilterType::_557:
            val = "557";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIVideoAspectRatioFilterType::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIVideoAspectRatioFilterType::eOAIVideoAspectRatioFilterType OAIVideoAspectRatioFilterType::getValue() const {
    return m_value;
}

void OAIVideoAspectRatioFilterType::setValue(const OAIVideoAspectRatioFilterType::eOAIVideoAspectRatioFilterType& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIVideoAspectRatioFilterType::isSet() const {
    
    return m_value_isSet;
}

bool OAIVideoAspectRatioFilterType::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
