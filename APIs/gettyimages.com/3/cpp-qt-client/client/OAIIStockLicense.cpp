/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIIStockLicense.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIIStockLicense::OAIIStockLicense(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIIStockLicense::OAIIStockLicense() {
    this->initializeModel();
}

OAIIStockLicense::~OAIIStockLicense() {}

void OAIIStockLicense::initializeModel() {

    m_credits_isSet = false;
    m_credits_isValid = false;

    m_license_type_isSet = false;
    m_license_type_isValid = false;
}

void OAIIStockLicense::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIIStockLicense::fromJsonObject(QJsonObject json) {

    m_credits_isValid = ::OpenAPI::fromJsonValue(m_credits, json[QString("credits")]);
    m_credits_isSet = !json[QString("credits")].isNull() && m_credits_isValid;

    m_license_type_isValid = ::OpenAPI::fromJsonValue(m_license_type, json[QString("license_type")]);
    m_license_type_isSet = !json[QString("license_type")].isNull() && m_license_type_isValid;
}

QString OAIIStockLicense::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIIStockLicense::asJsonObject() const {
    QJsonObject obj;
    if (m_credits_isSet) {
        obj.insert(QString("credits"), ::OpenAPI::toJsonValue(m_credits));
    }
    if (m_license_type.isSet()) {
        obj.insert(QString("license_type"), ::OpenAPI::toJsonValue(m_license_type));
    }
    return obj;
}

qint32 OAIIStockLicense::getCredits() const {
    return m_credits;
}
void OAIIStockLicense::setCredits(const qint32 &credits) {
    m_credits = credits;
    m_credits_isSet = true;
}

bool OAIIStockLicense::is_credits_Set() const{
    return m_credits_isSet;
}

bool OAIIStockLicense::is_credits_Valid() const{
    return m_credits_isValid;
}

OAIAssetLicenseName OAIIStockLicense::getLicenseType() const {
    return m_license_type;
}
void OAIIStockLicense::setLicenseType(const OAIAssetLicenseName &license_type) {
    m_license_type = license_type;
    m_license_type_isSet = true;
}

bool OAIIStockLicense::is_license_type_Set() const{
    return m_license_type_isSet;
}

bool OAIIStockLicense::is_license_type_Valid() const{
    return m_license_type_isValid;
}

bool OAIIStockLicense::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_credits_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_license_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIIStockLicense::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
