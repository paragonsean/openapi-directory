/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReport_usage_batch_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReport_usage_batch_request::OAIReport_usage_batch_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReport_usage_batch_request::OAIReport_usage_batch_request() {
    this->initializeModel();
}

OAIReport_usage_batch_request::~OAIReport_usage_batch_request() {}

void OAIReport_usage_batch_request::initializeModel() {

    m_asset_usages_isSet = false;
    m_asset_usages_isValid = false;
}

void OAIReport_usage_batch_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReport_usage_batch_request::fromJsonObject(QJsonObject json) {

    m_asset_usages_isValid = ::OpenAPI::fromJsonValue(m_asset_usages, json[QString("asset_usages")]);
    m_asset_usages_isSet = !json[QString("asset_usages")].isNull() && m_asset_usages_isValid;
}

QString OAIReport_usage_batch_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReport_usage_batch_request::asJsonObject() const {
    QJsonObject obj;
    if (m_asset_usages.size() > 0) {
        obj.insert(QString("asset_usages"), ::OpenAPI::toJsonValue(m_asset_usages));
    }
    return obj;
}

QList<OAIAsset_usage> OAIReport_usage_batch_request::getAssetUsages() const {
    return m_asset_usages;
}
void OAIReport_usage_batch_request::setAssetUsages(const QList<OAIAsset_usage> &asset_usages) {
    m_asset_usages = asset_usages;
    m_asset_usages_isSet = true;
}

bool OAIReport_usage_batch_request::is_asset_usages_Set() const{
    return m_asset_usages_isSet;
}

bool OAIReport_usage_batch_request::is_asset_usages_Valid() const{
    return m_asset_usages_isValid;
}

bool OAIReport_usage_batch_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_asset_usages.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReport_usage_batch_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
