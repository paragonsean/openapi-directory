/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDownloadDetails.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDownloadDetails::OAIDownloadDetails(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDownloadDetails::OAIDownloadDetails() {
    this->initializeModel();
}

OAIDownloadDetails::~OAIDownloadDetails() {}

void OAIDownloadDetails::initializeModel() {

    m_download_notes_isSet = false;
    m_download_notes_isValid = false;

    m_project_code_isSet = false;
    m_project_code_isValid = false;
}

void OAIDownloadDetails::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDownloadDetails::fromJsonObject(QJsonObject json) {

    m_download_notes_isValid = ::OpenAPI::fromJsonValue(m_download_notes, json[QString("download_notes")]);
    m_download_notes_isSet = !json[QString("download_notes")].isNull() && m_download_notes_isValid;

    m_project_code_isValid = ::OpenAPI::fromJsonValue(m_project_code, json[QString("project_code")]);
    m_project_code_isSet = !json[QString("project_code")].isNull() && m_project_code_isValid;
}

QString OAIDownloadDetails::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDownloadDetails::asJsonObject() const {
    QJsonObject obj;
    if (m_download_notes_isSet) {
        obj.insert(QString("download_notes"), ::OpenAPI::toJsonValue(m_download_notes));
    }
    if (m_project_code_isSet) {
        obj.insert(QString("project_code"), ::OpenAPI::toJsonValue(m_project_code));
    }
    return obj;
}

QString OAIDownloadDetails::getDownloadNotes() const {
    return m_download_notes;
}
void OAIDownloadDetails::setDownloadNotes(const QString &download_notes) {
    m_download_notes = download_notes;
    m_download_notes_isSet = true;
}

bool OAIDownloadDetails::is_download_notes_Set() const{
    return m_download_notes_isSet;
}

bool OAIDownloadDetails::is_download_notes_Valid() const{
    return m_download_notes_isValid;
}

QString OAIDownloadDetails::getProjectCode() const {
    return m_project_code;
}
void OAIDownloadDetails::setProjectCode(const QString &project_code) {
    m_project_code = project_code;
    m_project_code_isSet = true;
}

bool OAIDownloadDetails::is_project_code_Set() const{
    return m_project_code_isSet;
}

bool OAIDownloadDetails::is_project_code_Valid() const{
    return m_project_code_isValid;
}

bool OAIDownloadDetails::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_download_notes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_code_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDownloadDetails::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
