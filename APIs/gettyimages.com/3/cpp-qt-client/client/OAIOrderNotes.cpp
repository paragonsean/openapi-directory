/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderNotes.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderNotes::OAIOrderNotes(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderNotes::OAIOrderNotes() {
    this->initializeModel();
}

OAIOrderNotes::~OAIOrderNotes() {}

void OAIOrderNotes::initializeModel() {

    m_licensee_name_isSet = false;
    m_licensee_name_isValid = false;

    m_ordered_by_isSet = false;
    m_ordered_by_isValid = false;

    m_project_title_isSet = false;
    m_project_title_isValid = false;

    m_purchase_order_number_isSet = false;
    m_purchase_order_number_isValid = false;
}

void OAIOrderNotes::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderNotes::fromJsonObject(QJsonObject json) {

    m_licensee_name_isValid = ::OpenAPI::fromJsonValue(m_licensee_name, json[QString("licensee_name")]);
    m_licensee_name_isSet = !json[QString("licensee_name")].isNull() && m_licensee_name_isValid;

    m_ordered_by_isValid = ::OpenAPI::fromJsonValue(m_ordered_by, json[QString("ordered_by")]);
    m_ordered_by_isSet = !json[QString("ordered_by")].isNull() && m_ordered_by_isValid;

    m_project_title_isValid = ::OpenAPI::fromJsonValue(m_project_title, json[QString("project_title")]);
    m_project_title_isSet = !json[QString("project_title")].isNull() && m_project_title_isValid;

    m_purchase_order_number_isValid = ::OpenAPI::fromJsonValue(m_purchase_order_number, json[QString("purchase_order_number")]);
    m_purchase_order_number_isSet = !json[QString("purchase_order_number")].isNull() && m_purchase_order_number_isValid;
}

QString OAIOrderNotes::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderNotes::asJsonObject() const {
    QJsonObject obj;
    if (m_licensee_name_isSet) {
        obj.insert(QString("licensee_name"), ::OpenAPI::toJsonValue(m_licensee_name));
    }
    if (m_ordered_by_isSet) {
        obj.insert(QString("ordered_by"), ::OpenAPI::toJsonValue(m_ordered_by));
    }
    if (m_project_title_isSet) {
        obj.insert(QString("project_title"), ::OpenAPI::toJsonValue(m_project_title));
    }
    if (m_purchase_order_number_isSet) {
        obj.insert(QString("purchase_order_number"), ::OpenAPI::toJsonValue(m_purchase_order_number));
    }
    return obj;
}

QString OAIOrderNotes::getLicenseeName() const {
    return m_licensee_name;
}
void OAIOrderNotes::setLicenseeName(const QString &licensee_name) {
    m_licensee_name = licensee_name;
    m_licensee_name_isSet = true;
}

bool OAIOrderNotes::is_licensee_name_Set() const{
    return m_licensee_name_isSet;
}

bool OAIOrderNotes::is_licensee_name_Valid() const{
    return m_licensee_name_isValid;
}

QString OAIOrderNotes::getOrderedBy() const {
    return m_ordered_by;
}
void OAIOrderNotes::setOrderedBy(const QString &ordered_by) {
    m_ordered_by = ordered_by;
    m_ordered_by_isSet = true;
}

bool OAIOrderNotes::is_ordered_by_Set() const{
    return m_ordered_by_isSet;
}

bool OAIOrderNotes::is_ordered_by_Valid() const{
    return m_ordered_by_isValid;
}

QString OAIOrderNotes::getProjectTitle() const {
    return m_project_title;
}
void OAIOrderNotes::setProjectTitle(const QString &project_title) {
    m_project_title = project_title;
    m_project_title_isSet = true;
}

bool OAIOrderNotes::is_project_title_Set() const{
    return m_project_title_isSet;
}

bool OAIOrderNotes::is_project_title_Valid() const{
    return m_project_title_isValid;
}

QString OAIOrderNotes::getPurchaseOrderNumber() const {
    return m_purchase_order_number;
}
void OAIOrderNotes::setPurchaseOrderNumber(const QString &purchase_order_number) {
    m_purchase_order_number = purchase_order_number;
    m_purchase_order_number_isSet = true;
}

bool OAIOrderNotes::is_purchase_order_number_Set() const{
    return m_purchase_order_number_isSet;
}

bool OAIOrderNotes::is_purchase_order_number_Valid() const{
    return m_purchase_order_number_isValid;
}

bool OAIOrderNotes::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_licensee_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_ordered_by_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_purchase_order_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderNotes::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
