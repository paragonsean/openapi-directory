/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIHistoricalDownload.h
 *
 * 
 */

#ifndef OAIHistoricalDownload_H
#define OAIHistoricalDownload_H

#include <QJsonObject>

#include "OAIDimensions.h"
#include "OAIDownloadDetails.h"
#include "OAIUser.h"
#include <QDateTime>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDimensions;
class OAIDownloadDetails;
class OAIUser;

class OAIHistoricalDownload : public OAIObject {
public:
    OAIHistoricalDownload();
    OAIHistoricalDownload(QString json);
    ~OAIHistoricalDownload() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAgreementName() const;
    void setAgreementName(const QString &agreement_name);
    bool is_agreement_name_Set() const;
    bool is_agreement_name_Valid() const;

    QString getAssetType() const;
    void setAssetType(const QString &asset_type);
    bool is_asset_type_Set() const;
    bool is_asset_type_Valid() const;

    QDateTime getDateDownloaded() const;
    void setDateDownloaded(const QDateTime &date_downloaded);
    bool is_date_downloaded_Set() const;
    bool is_date_downloaded_Valid() const;

    OAIDimensions getDimensions() const;
    void setDimensions(const OAIDimensions &dimensions);
    bool is_dimensions_Set() const;
    bool is_dimensions_Valid() const;

    OAIDownloadDetails getDownloadDetails() const;
    void setDownloadDetails(const OAIDownloadDetails &download_details);
    bool is_download_details_Set() const;
    bool is_download_details_Valid() const;

    QString getDownloadSource() const;
    void setDownloadSource(const QString &download_source);
    bool is_download_source_Set() const;
    bool is_download_source_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getProductId() const;
    void setProductId(const qint32 &product_id);
    bool is_product_id_Set() const;
    bool is_product_id_Valid() const;

    QString getProductType() const;
    void setProductType(const QString &product_type);
    bool is_product_type_Set() const;
    bool is_product_type_Valid() const;

    QString getSizeName() const;
    void setSizeName(const QString &size_name);
    bool is_size_name_Set() const;
    bool is_size_name_Valid() const;

    QString getThumbUri() const;
    void setThumbUri(const QString &thumb_uri);
    bool is_thumb_uri_Set() const;
    bool is_thumb_uri_Valid() const;

    OAIUser getUser() const;
    void setUser(const OAIUser &user);
    bool is_user_Set() const;
    bool is_user_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_agreement_name;
    bool m_agreement_name_isSet;
    bool m_agreement_name_isValid;

    QString m_asset_type;
    bool m_asset_type_isSet;
    bool m_asset_type_isValid;

    QDateTime m_date_downloaded;
    bool m_date_downloaded_isSet;
    bool m_date_downloaded_isValid;

    OAIDimensions m_dimensions;
    bool m_dimensions_isSet;
    bool m_dimensions_isValid;

    OAIDownloadDetails m_download_details;
    bool m_download_details_isSet;
    bool m_download_details_isValid;

    QString m_download_source;
    bool m_download_source_isSet;
    bool m_download_source_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_product_id;
    bool m_product_id_isSet;
    bool m_product_id_isValid;

    QString m_product_type;
    bool m_product_type_isSet;
    bool m_product_type_isValid;

    QString m_size_name;
    bool m_size_name_isSet;
    bool m_size_name_isValid;

    QString m_thumb_uri;
    bool m_thumb_uri_isSet;
    bool m_thumb_uri_isValid;

    OAIUser m_user;
    bool m_user_isSet;
    bool m_user_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIHistoricalDownload)

#endif // OAIHistoricalDownload_H
