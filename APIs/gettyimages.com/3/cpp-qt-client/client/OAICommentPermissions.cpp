/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICommentPermissions.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICommentPermissions::OAICommentPermissions(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICommentPermissions::OAICommentPermissions() {
    this->initializeModel();
}

OAICommentPermissions::~OAICommentPermissions() {}

void OAICommentPermissions::initializeModel() {

    m_can_delete_comment_isSet = false;
    m_can_delete_comment_isValid = false;
}

void OAICommentPermissions::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICommentPermissions::fromJsonObject(QJsonObject json) {

    m_can_delete_comment_isValid = ::OpenAPI::fromJsonValue(m_can_delete_comment, json[QString("can_delete_comment")]);
    m_can_delete_comment_isSet = !json[QString("can_delete_comment")].isNull() && m_can_delete_comment_isValid;
}

QString OAICommentPermissions::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICommentPermissions::asJsonObject() const {
    QJsonObject obj;
    if (m_can_delete_comment_isSet) {
        obj.insert(QString("can_delete_comment"), ::OpenAPI::toJsonValue(m_can_delete_comment));
    }
    return obj;
}

bool OAICommentPermissions::isCanDeleteComment() const {
    return m_can_delete_comment;
}
void OAICommentPermissions::setCanDeleteComment(const bool &can_delete_comment) {
    m_can_delete_comment = can_delete_comment;
    m_can_delete_comment_isSet = true;
}

bool OAICommentPermissions::is_can_delete_comment_Set() const{
    return m_can_delete_comment_isSet;
}

bool OAICommentPermissions::is_can_delete_comment_Valid() const{
    return m_can_delete_comment_isValid;
}

bool OAICommentPermissions::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_can_delete_comment_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICommentPermissions::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
