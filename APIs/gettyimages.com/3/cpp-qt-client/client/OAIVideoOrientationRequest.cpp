/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIVideoOrientationRequest.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIVideoOrientationRequest::OAIVideoOrientationRequest(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIVideoOrientationRequest::OAIVideoOrientationRequest() {
    this->initializeModel();
}

OAIVideoOrientationRequest::~OAIVideoOrientationRequest() {}

void OAIVideoOrientationRequest::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIVideoOrientationRequest::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIVideoOrientationRequest::fromJson(QString jsonString) {
    
    if ( jsonString.compare("horizontal", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVideoOrientationRequest::HORIZONTAL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("vertical", Qt::CaseInsensitive) == 0) {
        m_value = eOAIVideoOrientationRequest::VERTICAL;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIVideoOrientationRequest::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIVideoOrientationRequest::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIVideoOrientationRequest::HORIZONTAL:
            val = "horizontal";
            break;
        case eOAIVideoOrientationRequest::VERTICAL:
            val = "vertical";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIVideoOrientationRequest::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIVideoOrientationRequest::eOAIVideoOrientationRequest OAIVideoOrientationRequest::getValue() const {
    return m_value;
}

void OAIVideoOrientationRequest::setValue(const OAIVideoOrientationRequest::eOAIVideoOrientationRequest& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIVideoOrientationRequest::isSet() const {
    
    return m_value_isSet;
}

bool OAIVideoOrientationRequest::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
