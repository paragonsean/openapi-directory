/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAffiliateVideo.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAffiliateVideo::OAIAffiliateVideo(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAffiliateVideo::OAIAffiliateVideo() {
    this->initializeModel();
}

OAIAffiliateVideo::~OAIAffiliateVideo() {}

void OAIAffiliateVideo::initializeModel() {

    m_caption_isSet = false;
    m_caption_isValid = false;

    m_clip_length_isSet = false;
    m_clip_length_isValid = false;

    m_destination_url_isSet = false;
    m_destination_url_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_preview_urls_isSet = false;
    m_preview_urls_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;
}

void OAIAffiliateVideo::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAffiliateVideo::fromJsonObject(QJsonObject json) {

    m_caption_isValid = ::OpenAPI::fromJsonValue(m_caption, json[QString("caption")]);
    m_caption_isSet = !json[QString("caption")].isNull() && m_caption_isValid;

    m_clip_length_isValid = ::OpenAPI::fromJsonValue(m_clip_length, json[QString("clip_length")]);
    m_clip_length_isSet = !json[QString("clip_length")].isNull() && m_clip_length_isValid;

    m_destination_url_isValid = ::OpenAPI::fromJsonValue(m_destination_url, json[QString("destination_url")]);
    m_destination_url_isSet = !json[QString("destination_url")].isNull() && m_destination_url_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_preview_urls_isValid = ::OpenAPI::fromJsonValue(m_preview_urls, json[QString("preview_urls")]);
    m_preview_urls_isSet = !json[QString("preview_urls")].isNull() && m_preview_urls_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;
}

QString OAIAffiliateVideo::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAffiliateVideo::asJsonObject() const {
    QJsonObject obj;
    if (m_caption_isSet) {
        obj.insert(QString("caption"), ::OpenAPI::toJsonValue(m_caption));
    }
    if (m_clip_length_isSet) {
        obj.insert(QString("clip_length"), ::OpenAPI::toJsonValue(m_clip_length));
    }
    if (m_destination_url_isSet) {
        obj.insert(QString("destination_url"), ::OpenAPI::toJsonValue(m_destination_url));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_preview_urls.isSet()) {
        obj.insert(QString("preview_urls"), ::OpenAPI::toJsonValue(m_preview_urls));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    return obj;
}

QString OAIAffiliateVideo::getCaption() const {
    return m_caption;
}
void OAIAffiliateVideo::setCaption(const QString &caption) {
    m_caption = caption;
    m_caption_isSet = true;
}

bool OAIAffiliateVideo::is_caption_Set() const{
    return m_caption_isSet;
}

bool OAIAffiliateVideo::is_caption_Valid() const{
    return m_caption_isValid;
}

QString OAIAffiliateVideo::getClipLength() const {
    return m_clip_length;
}
void OAIAffiliateVideo::setClipLength(const QString &clip_length) {
    m_clip_length = clip_length;
    m_clip_length_isSet = true;
}

bool OAIAffiliateVideo::is_clip_length_Set() const{
    return m_clip_length_isSet;
}

bool OAIAffiliateVideo::is_clip_length_Valid() const{
    return m_clip_length_isValid;
}

QString OAIAffiliateVideo::getDestinationUrl() const {
    return m_destination_url;
}
void OAIAffiliateVideo::setDestinationUrl(const QString &destination_url) {
    m_destination_url = destination_url;
    m_destination_url_isSet = true;
}

bool OAIAffiliateVideo::is_destination_url_Set() const{
    return m_destination_url_isSet;
}

bool OAIAffiliateVideo::is_destination_url_Valid() const{
    return m_destination_url_isValid;
}

QString OAIAffiliateVideo::getId() const {
    return m_id;
}
void OAIAffiliateVideo::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIAffiliateVideo::is_id_Set() const{
    return m_id_isSet;
}

bool OAIAffiliateVideo::is_id_Valid() const{
    return m_id_isValid;
}

OAIAffiliateVideoUrls OAIAffiliateVideo::getPreviewUrls() const {
    return m_preview_urls;
}
void OAIAffiliateVideo::setPreviewUrls(const OAIAffiliateVideoUrls &preview_urls) {
    m_preview_urls = preview_urls;
    m_preview_urls_isSet = true;
}

bool OAIAffiliateVideo::is_preview_urls_Set() const{
    return m_preview_urls_isSet;
}

bool OAIAffiliateVideo::is_preview_urls_Valid() const{
    return m_preview_urls_isValid;
}

QString OAIAffiliateVideo::getTitle() const {
    return m_title;
}
void OAIAffiliateVideo::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAIAffiliateVideo::is_title_Set() const{
    return m_title_isSet;
}

bool OAIAffiliateVideo::is_title_Valid() const{
    return m_title_isValid;
}

bool OAIAffiliateVideo::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_caption_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_clip_length_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_destination_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_preview_urls.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAffiliateVideo::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
