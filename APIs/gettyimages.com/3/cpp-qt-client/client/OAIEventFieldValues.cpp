/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEventFieldValues.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEventFieldValues::OAIEventFieldValues(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEventFieldValues::OAIEventFieldValues() {
    this->initializeModel();
}

OAIEventFieldValues::~OAIEventFieldValues() {}

void OAIEventFieldValues::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIEventFieldValues::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIEventFieldValues::fromJson(QString jsonString) {
    
    if ( jsonString.compare("id", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEventFieldValues::ID;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("child_event_count", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEventFieldValues::CHILD_EVENT_COUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("editorial_segments", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEventFieldValues::EDITORIAL_SEGMENTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("hero_image", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEventFieldValues::HERO_IMAGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("image_count", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEventFieldValues::IMAGE_COUNT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("keywords", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEventFieldValues::KEYWORDS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("location", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEventFieldValues::LOCATION;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("name", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEventFieldValues::NAME;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("start_date", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEventFieldValues::START_DATE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("type", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEventFieldValues::TYPE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIEventFieldValues::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIEventFieldValues::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIEventFieldValues::ID:
            val = "id";
            break;
        case eOAIEventFieldValues::CHILD_EVENT_COUNT:
            val = "child_event_count";
            break;
        case eOAIEventFieldValues::EDITORIAL_SEGMENTS:
            val = "editorial_segments";
            break;
        case eOAIEventFieldValues::HERO_IMAGE:
            val = "hero_image";
            break;
        case eOAIEventFieldValues::IMAGE_COUNT:
            val = "image_count";
            break;
        case eOAIEventFieldValues::KEYWORDS:
            val = "keywords";
            break;
        case eOAIEventFieldValues::LOCATION:
            val = "location";
            break;
        case eOAIEventFieldValues::NAME:
            val = "name";
            break;
        case eOAIEventFieldValues::START_DATE:
            val = "start_date";
            break;
        case eOAIEventFieldValues::TYPE:
            val = "type";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIEventFieldValues::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIEventFieldValues::eOAIEventFieldValues OAIEventFieldValues::getValue() const {
    return m_value;
}

void OAIEventFieldValues::setValue(const OAIEventFieldValues::eOAIEventFieldValues& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIEventFieldValues::isSet() const {
    
    return m_value_isSet;
}

bool OAIEventFieldValues::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
