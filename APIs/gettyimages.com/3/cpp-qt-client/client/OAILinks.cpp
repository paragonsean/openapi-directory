/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAILinks.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAILinks::OAILinks(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAILinks::OAILinks() {
    this->initializeModel();
}

OAILinks::~OAILinks() {}

void OAILinks::initializeModel() {

    m_invitation_isSet = false;
    m_invitation_isValid = false;

    m_share_isSet = false;
    m_share_isValid = false;
}

void OAILinks::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAILinks::fromJsonObject(QJsonObject json) {

    m_invitation_isValid = ::OpenAPI::fromJsonValue(m_invitation, json[QString("invitation")]);
    m_invitation_isSet = !json[QString("invitation")].isNull() && m_invitation_isValid;

    m_share_isValid = ::OpenAPI::fromJsonValue(m_share, json[QString("share")]);
    m_share_isSet = !json[QString("share")].isNull() && m_share_isValid;
}

QString OAILinks::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAILinks::asJsonObject() const {
    QJsonObject obj;
    if (m_invitation_isSet) {
        obj.insert(QString("invitation"), ::OpenAPI::toJsonValue(m_invitation));
    }
    if (m_share_isSet) {
        obj.insert(QString("share"), ::OpenAPI::toJsonValue(m_share));
    }
    return obj;
}

QString OAILinks::getInvitation() const {
    return m_invitation;
}
void OAILinks::setInvitation(const QString &invitation) {
    m_invitation = invitation;
    m_invitation_isSet = true;
}

bool OAILinks::is_invitation_Set() const{
    return m_invitation_isSet;
}

bool OAILinks::is_invitation_Valid() const{
    return m_invitation_isValid;
}

QString OAILinks::getShare() const {
    return m_share;
}
void OAILinks::setShare(const QString &share) {
    m_share = share;
    m_share_isSet = true;
}

bool OAILinks::is_share_Set() const{
    return m_share_isSet;
}

bool OAILinks::is_share_Valid() const{
    return m_share_isValid;
}

bool OAILinks::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_invitation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_share_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAILinks::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
