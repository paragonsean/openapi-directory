/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDownloadRequirements.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDownloadRequirements::OAIDownloadRequirements(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDownloadRequirements::OAIDownloadRequirements() {
    this->initializeModel();
}

OAIDownloadRequirements::~OAIDownloadRequirements() {}

void OAIDownloadRequirements::initializeModel() {

    m_is_note_required_isSet = false;
    m_is_note_required_isValid = false;

    m_is_project_code_required_isSet = false;
    m_is_project_code_required_isValid = false;

    m_project_codes_isSet = false;
    m_project_codes_isValid = false;
}

void OAIDownloadRequirements::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDownloadRequirements::fromJsonObject(QJsonObject json) {

    m_is_note_required_isValid = ::OpenAPI::fromJsonValue(m_is_note_required, json[QString("is_note_required")]);
    m_is_note_required_isSet = !json[QString("is_note_required")].isNull() && m_is_note_required_isValid;

    m_is_project_code_required_isValid = ::OpenAPI::fromJsonValue(m_is_project_code_required, json[QString("is_project_code_required")]);
    m_is_project_code_required_isSet = !json[QString("is_project_code_required")].isNull() && m_is_project_code_required_isValid;

    m_project_codes_isValid = ::OpenAPI::fromJsonValue(m_project_codes, json[QString("project_codes")]);
    m_project_codes_isSet = !json[QString("project_codes")].isNull() && m_project_codes_isValid;
}

QString OAIDownloadRequirements::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDownloadRequirements::asJsonObject() const {
    QJsonObject obj;
    if (m_is_note_required_isSet) {
        obj.insert(QString("is_note_required"), ::OpenAPI::toJsonValue(m_is_note_required));
    }
    if (m_is_project_code_required_isSet) {
        obj.insert(QString("is_project_code_required"), ::OpenAPI::toJsonValue(m_is_project_code_required));
    }
    if (m_project_codes.size() > 0) {
        obj.insert(QString("project_codes"), ::OpenAPI::toJsonValue(m_project_codes));
    }
    return obj;
}

bool OAIDownloadRequirements::isIsNoteRequired() const {
    return m_is_note_required;
}
void OAIDownloadRequirements::setIsNoteRequired(const bool &is_note_required) {
    m_is_note_required = is_note_required;
    m_is_note_required_isSet = true;
}

bool OAIDownloadRequirements::is_is_note_required_Set() const{
    return m_is_note_required_isSet;
}

bool OAIDownloadRequirements::is_is_note_required_Valid() const{
    return m_is_note_required_isValid;
}

bool OAIDownloadRequirements::isIsProjectCodeRequired() const {
    return m_is_project_code_required;
}
void OAIDownloadRequirements::setIsProjectCodeRequired(const bool &is_project_code_required) {
    m_is_project_code_required = is_project_code_required;
    m_is_project_code_required_isSet = true;
}

bool OAIDownloadRequirements::is_is_project_code_required_Set() const{
    return m_is_project_code_required_isSet;
}

bool OAIDownloadRequirements::is_is_project_code_required_Valid() const{
    return m_is_project_code_required_isValid;
}

QList<QString> OAIDownloadRequirements::getProjectCodes() const {
    return m_project_codes;
}
void OAIDownloadRequirements::setProjectCodes(const QList<QString> &project_codes) {
    m_project_codes = project_codes;
    m_project_codes_isSet = true;
}

bool OAIDownloadRequirements::is_project_codes_Set() const{
    return m_project_codes_isSet;
}

bool OAIDownloadRequirements::is_project_codes_Valid() const{
    return m_project_codes_isValid;
}

bool OAIDownloadRequirements::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_note_required_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_project_code_required_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_project_codes.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDownloadRequirements::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
