/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIImageSearchItemCreative.h
 *
 * 
 */

#ifndef OAIImageSearchItemCreative_H
#define OAIImageSearchItemCreative_H

#include <QJsonObject>

#include "OAIAllowedUse.h"
#include "OAIDownload.h"
#include "OAIImageSearchItemDisplaySize.h"
#include "OAIKeyword.h"
#include "OAIMaxDimensions.h"
#include "OAIReferralDestination.h"
#include <QDateTime>
#include <QList>
#include <QMap>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAllowedUse;
class OAIImageSearchItemDisplaySize;
class OAIKeyword;
class OAIDownload;
class OAIMaxDimensions;
class OAIReferralDestination;

class OAIImageSearchItemCreative : public OAIObject {
public:
    OAIImageSearchItemCreative();
    OAIImageSearchItemCreative(QString json);
    ~OAIImageSearchItemCreative() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAllowedUse getAllowedUse() const;
    void setAllowedUse(const OAIAllowedUse &allowed_use);
    bool is_allowed_use_Set() const;
    bool is_allowed_use_Valid() const;

    QMap<QString, QString> getAlternativeIds() const;
    void setAlternativeIds(const QMap<QString, QString> &alternative_ids);
    bool is_alternative_ids_Set() const;
    bool is_alternative_ids_Valid() const;

    QString getArtist() const;
    void setArtist(const QString &artist);
    bool is_artist_Set() const;
    bool is_artist_Valid() const;

    QString getAssetFamily() const;
    void setAssetFamily(const QString &asset_family);
    bool is_asset_family_Set() const;
    bool is_asset_family_Valid() const;

    bool isCallForImage() const;
    void setCallForImage(const bool &call_for_image);
    bool is_call_for_image_Set() const;
    bool is_call_for_image_Valid() const;

    QString getCaption() const;
    void setCaption(const QString &caption);
    bool is_caption_Set() const;
    bool is_caption_Valid() const;

    QString getCollectionCode() const;
    void setCollectionCode(const QString &collection_code);
    bool is_collection_code_Set() const;
    bool is_collection_code_Valid() const;

    qint32 getCollectionId() const;
    void setCollectionId(const qint32 &collection_id);
    bool is_collection_id_Set() const;
    bool is_collection_id_Valid() const;

    QString getCollectionName() const;
    void setCollectionName(const QString &collection_name);
    bool is_collection_name_Set() const;
    bool is_collection_name_Valid() const;

    QString getColorType() const;
    void setColorType(const QString &color_type);
    bool is_color_type_Set() const;
    bool is_color_type_Valid() const;

    QString getCopyright() const;
    void setCopyright(const QString &copyright);
    bool is_copyright_Set() const;
    bool is_copyright_Valid() const;

    QDateTime getDateCameraShot() const;
    void setDateCameraShot(const QDateTime &date_camera_shot);
    bool is_date_camera_shot_Set() const;
    bool is_date_camera_shot_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QList<OAIImageSearchItemDisplaySize> getDisplaySizes() const;
    void setDisplaySizes(const QList<OAIImageSearchItemDisplaySize> &display_sizes);
    bool is_display_sizes_Set() const;
    bool is_display_sizes_Valid() const;

    QString getDownloadProduct() const;
    void setDownloadProduct(const QString &download_product);
    bool is_download_product_Set() const;
    bool is_download_product_Valid() const;

    QString getGraphicalStyle() const;
    void setGraphicalStyle(const QString &graphical_style);
    bool is_graphical_style_Set() const;
    bool is_graphical_style_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAIKeyword> getKeywords() const;
    void setKeywords(const QList<OAIKeyword> &keywords);
    bool is_keywords_Set() const;
    bool is_keywords_Valid() const;

    QList<OAIDownload> getLargestDownloads() const;
    void setLargestDownloads(const QList<OAIDownload> &largest_downloads);
    bool is_largest_downloads_Set() const;
    bool is_largest_downloads_Valid() const;

    QString getLicenseModel() const;
    void setLicenseModel(const QString &license_model);
    bool is_license_model_Set() const;
    bool is_license_model_Valid() const;

    OAIMaxDimensions getMaxDimensions() const;
    void setMaxDimensions(const OAIMaxDimensions &max_dimensions);
    bool is_max_dimensions_Set() const;
    bool is_max_dimensions_Valid() const;

    QString getOrientation() const;
    void setOrientation(const QString &orientation);
    bool is_orientation_Set() const;
    bool is_orientation_Valid() const;

    qint32 getQualityRank() const;
    void setQualityRank(const qint32 &quality_rank);
    bool is_quality_rank_Set() const;
    bool is_quality_rank_Valid() const;

    QList<OAIReferralDestination> getReferralDestinations() const;
    void setReferralDestinations(const QList<OAIReferralDestination> &referral_destinations);
    bool is_referral_destinations_Set() const;
    bool is_referral_destinations_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getUriOembed() const;
    void setUriOembed(const QString &uri_oembed);
    bool is_uri_oembed_Set() const;
    bool is_uri_oembed_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAllowedUse m_allowed_use;
    bool m_allowed_use_isSet;
    bool m_allowed_use_isValid;

    QMap<QString, QString> m_alternative_ids;
    bool m_alternative_ids_isSet;
    bool m_alternative_ids_isValid;

    QString m_artist;
    bool m_artist_isSet;
    bool m_artist_isValid;

    QString m_asset_family;
    bool m_asset_family_isSet;
    bool m_asset_family_isValid;

    bool m_call_for_image;
    bool m_call_for_image_isSet;
    bool m_call_for_image_isValid;

    QString m_caption;
    bool m_caption_isSet;
    bool m_caption_isValid;

    QString m_collection_code;
    bool m_collection_code_isSet;
    bool m_collection_code_isValid;

    qint32 m_collection_id;
    bool m_collection_id_isSet;
    bool m_collection_id_isValid;

    QString m_collection_name;
    bool m_collection_name_isSet;
    bool m_collection_name_isValid;

    QString m_color_type;
    bool m_color_type_isSet;
    bool m_color_type_isValid;

    QString m_copyright;
    bool m_copyright_isSet;
    bool m_copyright_isValid;

    QDateTime m_date_camera_shot;
    bool m_date_camera_shot_isSet;
    bool m_date_camera_shot_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QList<OAIImageSearchItemDisplaySize> m_display_sizes;
    bool m_display_sizes_isSet;
    bool m_display_sizes_isValid;

    QString m_download_product;
    bool m_download_product_isSet;
    bool m_download_product_isValid;

    QString m_graphical_style;
    bool m_graphical_style_isSet;
    bool m_graphical_style_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAIKeyword> m_keywords;
    bool m_keywords_isSet;
    bool m_keywords_isValid;

    QList<OAIDownload> m_largest_downloads;
    bool m_largest_downloads_isSet;
    bool m_largest_downloads_isValid;

    QString m_license_model;
    bool m_license_model_isSet;
    bool m_license_model_isValid;

    OAIMaxDimensions m_max_dimensions;
    bool m_max_dimensions_isSet;
    bool m_max_dimensions_isValid;

    QString m_orientation;
    bool m_orientation_isSet;
    bool m_orientation_isValid;

    qint32 m_quality_rank;
    bool m_quality_rank_isSet;
    bool m_quality_rank_isValid;

    QList<OAIReferralDestination> m_referral_destinations;
    bool m_referral_destinations_isSet;
    bool m_referral_destinations_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_uri_oembed;
    bool m_uri_oembed_isSet;
    bool m_uri_oembed_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIImageSearchItemCreative)

#endif // OAIImageSearchItemCreative_H
