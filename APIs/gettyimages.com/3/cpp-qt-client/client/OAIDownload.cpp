/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDownload.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDownload::OAIDownload(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDownload::OAIDownload() {
    this->initializeModel();
}

OAIDownload::~OAIDownload() {}

void OAIDownload::initializeModel() {

    m_agreement_name_isSet = false;
    m_agreement_name_isValid = false;

    m_product_id_isSet = false;
    m_product_id_isValid = false;

    m_product_type_isSet = false;
    m_product_type_isValid = false;

    m_uri_isSet = false;
    m_uri_isValid = false;
}

void OAIDownload::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDownload::fromJsonObject(QJsonObject json) {

    m_agreement_name_isValid = ::OpenAPI::fromJsonValue(m_agreement_name, json[QString("agreement_name")]);
    m_agreement_name_isSet = !json[QString("agreement_name")].isNull() && m_agreement_name_isValid;

    m_product_id_isValid = ::OpenAPI::fromJsonValue(m_product_id, json[QString("product_id")]);
    m_product_id_isSet = !json[QString("product_id")].isNull() && m_product_id_isValid;

    m_product_type_isValid = ::OpenAPI::fromJsonValue(m_product_type, json[QString("product_type")]);
    m_product_type_isSet = !json[QString("product_type")].isNull() && m_product_type_isValid;

    m_uri_isValid = ::OpenAPI::fromJsonValue(m_uri, json[QString("uri")]);
    m_uri_isSet = !json[QString("uri")].isNull() && m_uri_isValid;
}

QString OAIDownload::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDownload::asJsonObject() const {
    QJsonObject obj;
    if (m_agreement_name_isSet) {
        obj.insert(QString("agreement_name"), ::OpenAPI::toJsonValue(m_agreement_name));
    }
    if (m_product_id_isSet) {
        obj.insert(QString("product_id"), ::OpenAPI::toJsonValue(m_product_id));
    }
    if (m_product_type_isSet) {
        obj.insert(QString("product_type"), ::OpenAPI::toJsonValue(m_product_type));
    }
    if (m_uri_isSet) {
        obj.insert(QString("uri"), ::OpenAPI::toJsonValue(m_uri));
    }
    return obj;
}

QString OAIDownload::getAgreementName() const {
    return m_agreement_name;
}
void OAIDownload::setAgreementName(const QString &agreement_name) {
    m_agreement_name = agreement_name;
    m_agreement_name_isSet = true;
}

bool OAIDownload::is_agreement_name_Set() const{
    return m_agreement_name_isSet;
}

bool OAIDownload::is_agreement_name_Valid() const{
    return m_agreement_name_isValid;
}

QString OAIDownload::getProductId() const {
    return m_product_id;
}
void OAIDownload::setProductId(const QString &product_id) {
    m_product_id = product_id;
    m_product_id_isSet = true;
}

bool OAIDownload::is_product_id_Set() const{
    return m_product_id_isSet;
}

bool OAIDownload::is_product_id_Valid() const{
    return m_product_id_isValid;
}

QString OAIDownload::getProductType() const {
    return m_product_type;
}
void OAIDownload::setProductType(const QString &product_type) {
    m_product_type = product_type;
    m_product_type_isSet = true;
}

bool OAIDownload::is_product_type_Set() const{
    return m_product_type_isSet;
}

bool OAIDownload::is_product_type_Valid() const{
    return m_product_type_isValid;
}

QString OAIDownload::getUri() const {
    return m_uri;
}
void OAIDownload::setUri(const QString &uri) {
    m_uri = uri;
    m_uri_isSet = true;
}

bool OAIDownload::is_uri_Set() const{
    return m_uri_isSet;
}

bool OAIDownload::is_uri_Valid() const{
    return m_uri_isValid;
}

bool OAIDownload::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_agreement_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_product_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_uri_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDownload::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
