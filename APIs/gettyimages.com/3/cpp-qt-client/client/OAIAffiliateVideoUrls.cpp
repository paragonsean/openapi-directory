/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAffiliateVideoUrls.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAffiliateVideoUrls::OAIAffiliateVideoUrls(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAffiliateVideoUrls::OAIAffiliateVideoUrls() {
    this->initializeModel();
}

OAIAffiliateVideoUrls::~OAIAffiliateVideoUrls() {}

void OAIAffiliateVideoUrls::initializeModel() {

    m_large_motion_isSet = false;
    m_large_motion_isValid = false;

    m_large_still_isSet = false;
    m_large_still_isValid = false;

    m_medium_still_isSet = false;
    m_medium_still_isValid = false;

    m_small_motion_isSet = false;
    m_small_motion_isValid = false;

    m_small_still_isSet = false;
    m_small_still_isValid = false;
}

void OAIAffiliateVideoUrls::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAffiliateVideoUrls::fromJsonObject(QJsonObject json) {

    m_large_motion_isValid = ::OpenAPI::fromJsonValue(m_large_motion, json[QString("large_motion")]);
    m_large_motion_isSet = !json[QString("large_motion")].isNull() && m_large_motion_isValid;

    m_large_still_isValid = ::OpenAPI::fromJsonValue(m_large_still, json[QString("large_still")]);
    m_large_still_isSet = !json[QString("large_still")].isNull() && m_large_still_isValid;

    m_medium_still_isValid = ::OpenAPI::fromJsonValue(m_medium_still, json[QString("medium_still")]);
    m_medium_still_isSet = !json[QString("medium_still")].isNull() && m_medium_still_isValid;

    m_small_motion_isValid = ::OpenAPI::fromJsonValue(m_small_motion, json[QString("small_motion")]);
    m_small_motion_isSet = !json[QString("small_motion")].isNull() && m_small_motion_isValid;

    m_small_still_isValid = ::OpenAPI::fromJsonValue(m_small_still, json[QString("small_still")]);
    m_small_still_isSet = !json[QString("small_still")].isNull() && m_small_still_isValid;
}

QString OAIAffiliateVideoUrls::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAffiliateVideoUrls::asJsonObject() const {
    QJsonObject obj;
    if (m_large_motion_isSet) {
        obj.insert(QString("large_motion"), ::OpenAPI::toJsonValue(m_large_motion));
    }
    if (m_large_still_isSet) {
        obj.insert(QString("large_still"), ::OpenAPI::toJsonValue(m_large_still));
    }
    if (m_medium_still_isSet) {
        obj.insert(QString("medium_still"), ::OpenAPI::toJsonValue(m_medium_still));
    }
    if (m_small_motion_isSet) {
        obj.insert(QString("small_motion"), ::OpenAPI::toJsonValue(m_small_motion));
    }
    if (m_small_still_isSet) {
        obj.insert(QString("small_still"), ::OpenAPI::toJsonValue(m_small_still));
    }
    return obj;
}

QString OAIAffiliateVideoUrls::getLargeMotion() const {
    return m_large_motion;
}
void OAIAffiliateVideoUrls::setLargeMotion(const QString &large_motion) {
    m_large_motion = large_motion;
    m_large_motion_isSet = true;
}

bool OAIAffiliateVideoUrls::is_large_motion_Set() const{
    return m_large_motion_isSet;
}

bool OAIAffiliateVideoUrls::is_large_motion_Valid() const{
    return m_large_motion_isValid;
}

QString OAIAffiliateVideoUrls::getLargeStill() const {
    return m_large_still;
}
void OAIAffiliateVideoUrls::setLargeStill(const QString &large_still) {
    m_large_still = large_still;
    m_large_still_isSet = true;
}

bool OAIAffiliateVideoUrls::is_large_still_Set() const{
    return m_large_still_isSet;
}

bool OAIAffiliateVideoUrls::is_large_still_Valid() const{
    return m_large_still_isValid;
}

QString OAIAffiliateVideoUrls::getMediumStill() const {
    return m_medium_still;
}
void OAIAffiliateVideoUrls::setMediumStill(const QString &medium_still) {
    m_medium_still = medium_still;
    m_medium_still_isSet = true;
}

bool OAIAffiliateVideoUrls::is_medium_still_Set() const{
    return m_medium_still_isSet;
}

bool OAIAffiliateVideoUrls::is_medium_still_Valid() const{
    return m_medium_still_isValid;
}

QString OAIAffiliateVideoUrls::getSmallMotion() const {
    return m_small_motion;
}
void OAIAffiliateVideoUrls::setSmallMotion(const QString &small_motion) {
    m_small_motion = small_motion;
    m_small_motion_isSet = true;
}

bool OAIAffiliateVideoUrls::is_small_motion_Set() const{
    return m_small_motion_isSet;
}

bool OAIAffiliateVideoUrls::is_small_motion_Valid() const{
    return m_small_motion_isValid;
}

QString OAIAffiliateVideoUrls::getSmallStill() const {
    return m_small_still;
}
void OAIAffiliateVideoUrls::setSmallStill(const QString &small_still) {
    m_small_still = small_still;
    m_small_still_isSet = true;
}

bool OAIAffiliateVideoUrls::is_small_still_Set() const{
    return m_small_still_isSet;
}

bool OAIAffiliateVideoUrls::is_small_still_Valid() const{
    return m_small_still_isValid;
}

bool OAIAffiliateVideoUrls::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_large_motion_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_large_still_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_medium_still_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_small_motion_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_small_still_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAffiliateVideoUrls::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
