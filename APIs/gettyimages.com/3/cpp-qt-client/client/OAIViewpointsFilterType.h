/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIViewpointsFilterType.h
 *
 * 
 */

#ifndef OAIViewpointsFilterType_H
#define OAIViewpointsFilterType_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIViewpointsFilterType : public OAIEnum {
public:
    OAIViewpointsFilterType();
    OAIViewpointsFilterType(QString json);
    ~OAIViewpointsFilterType() override;

    QString asJson() const override;
    QJsonValue asJsonValue() const override;
    void fromJsonValue(QJsonValue json) override;
    void fromJson(QString jsonString) override;

    enum class eOAIViewpointsFilterType {
        INVALID_VALUE_OPENAPI_GENERATED = 0,
        LOCKDOWN, 
        PANNING, 
        TRACKING_SHOT, 
        AERIAL_VIEW, 
        HIGH_ANGLE_VIEW, 
        LOW_ANGLE_VIEW, 
        TILT, 
        POINT_OF_VIEW
    };
    OAIViewpointsFilterType::eOAIViewpointsFilterType getValue() const;
    void setValue(const OAIViewpointsFilterType::eOAIViewpointsFilterType& value);
    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    eOAIViewpointsFilterType m_value;
    bool m_value_isSet;
    bool m_value_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIViewpointsFilterType)

#endif // OAIViewpointsFilterType_H
