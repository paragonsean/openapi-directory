/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProduct.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProduct::OAIProduct(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProduct::OAIProduct() {
    this->initializeModel();
}

OAIProduct::~OAIProduct() {}

void OAIProduct::initializeModel() {

    m_agreement_name_isSet = false;
    m_agreement_name_isValid = false;

    m_application_website_isSet = false;
    m_application_website_isValid = false;

    m_credits_remaining_isSet = false;
    m_credits_remaining_isValid = false;

    m_download_limit_isSet = false;
    m_download_limit_isValid = false;

    m_download_limit_duration_isSet = false;
    m_download_limit_duration_isValid = false;

    m_download_limit_reset_utc_date_isSet = false;
    m_download_limit_reset_utc_date_isValid = false;

    m_download_requirements_isSet = false;
    m_download_requirements_isValid = false;

    m_downloads_remaining_isSet = false;
    m_downloads_remaining_isValid = false;

    m_expiration_utc_date_isSet = false;
    m_expiration_utc_date_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_imagepack_resolution_isSet = false;
    m_imagepack_resolution_isValid = false;

    m_name_isSet = false;
    m_name_isValid = false;

    m_overage_isSet = false;
    m_overage_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_team_credits_isSet = false;
    m_team_credits_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAIProduct::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProduct::fromJsonObject(QJsonObject json) {

    m_agreement_name_isValid = ::OpenAPI::fromJsonValue(m_agreement_name, json[QString("agreement_name")]);
    m_agreement_name_isSet = !json[QString("agreement_name")].isNull() && m_agreement_name_isValid;

    m_application_website_isValid = ::OpenAPI::fromJsonValue(m_application_website, json[QString("application_website")]);
    m_application_website_isSet = !json[QString("application_website")].isNull() && m_application_website_isValid;

    m_credits_remaining_isValid = ::OpenAPI::fromJsonValue(m_credits_remaining, json[QString("credits_remaining")]);
    m_credits_remaining_isSet = !json[QString("credits_remaining")].isNull() && m_credits_remaining_isValid;

    m_download_limit_isValid = ::OpenAPI::fromJsonValue(m_download_limit, json[QString("download_limit")]);
    m_download_limit_isSet = !json[QString("download_limit")].isNull() && m_download_limit_isValid;

    m_download_limit_duration_isValid = ::OpenAPI::fromJsonValue(m_download_limit_duration, json[QString("download_limit_duration")]);
    m_download_limit_duration_isSet = !json[QString("download_limit_duration")].isNull() && m_download_limit_duration_isValid;

    m_download_limit_reset_utc_date_isValid = ::OpenAPI::fromJsonValue(m_download_limit_reset_utc_date, json[QString("download_limit_reset_utc_date")]);
    m_download_limit_reset_utc_date_isSet = !json[QString("download_limit_reset_utc_date")].isNull() && m_download_limit_reset_utc_date_isValid;

    m_download_requirements_isValid = ::OpenAPI::fromJsonValue(m_download_requirements, json[QString("download_requirements")]);
    m_download_requirements_isSet = !json[QString("download_requirements")].isNull() && m_download_requirements_isValid;

    m_downloads_remaining_isValid = ::OpenAPI::fromJsonValue(m_downloads_remaining, json[QString("downloads_remaining")]);
    m_downloads_remaining_isSet = !json[QString("downloads_remaining")].isNull() && m_downloads_remaining_isValid;

    m_expiration_utc_date_isValid = ::OpenAPI::fromJsonValue(m_expiration_utc_date, json[QString("expiration_utc_date")]);
    m_expiration_utc_date_isSet = !json[QString("expiration_utc_date")].isNull() && m_expiration_utc_date_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_imagepack_resolution_isValid = ::OpenAPI::fromJsonValue(m_imagepack_resolution, json[QString("imagepack_resolution")]);
    m_imagepack_resolution_isSet = !json[QString("imagepack_resolution")].isNull() && m_imagepack_resolution_isValid;

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_overage_isValid = ::OpenAPI::fromJsonValue(m_overage, json[QString("overage")]);
    m_overage_isSet = !json[QString("overage")].isNull() && m_overage_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_team_credits_isValid = ::OpenAPI::fromJsonValue(m_team_credits, json[QString("team_credits")]);
    m_team_credits_isSet = !json[QString("team_credits")].isNull() && m_team_credits_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAIProduct::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProduct::asJsonObject() const {
    QJsonObject obj;
    if (m_agreement_name_isSet) {
        obj.insert(QString("agreement_name"), ::OpenAPI::toJsonValue(m_agreement_name));
    }
    if (m_application_website_isSet) {
        obj.insert(QString("application_website"), ::OpenAPI::toJsonValue(m_application_website));
    }
    if (m_credits_remaining_isSet) {
        obj.insert(QString("credits_remaining"), ::OpenAPI::toJsonValue(m_credits_remaining));
    }
    if (m_download_limit_isSet) {
        obj.insert(QString("download_limit"), ::OpenAPI::toJsonValue(m_download_limit));
    }
    if (m_download_limit_duration_isSet) {
        obj.insert(QString("download_limit_duration"), ::OpenAPI::toJsonValue(m_download_limit_duration));
    }
    if (m_download_limit_reset_utc_date_isSet) {
        obj.insert(QString("download_limit_reset_utc_date"), ::OpenAPI::toJsonValue(m_download_limit_reset_utc_date));
    }
    if (m_download_requirements.isSet()) {
        obj.insert(QString("download_requirements"), ::OpenAPI::toJsonValue(m_download_requirements));
    }
    if (m_downloads_remaining_isSet) {
        obj.insert(QString("downloads_remaining"), ::OpenAPI::toJsonValue(m_downloads_remaining));
    }
    if (m_expiration_utc_date_isSet) {
        obj.insert(QString("expiration_utc_date"), ::OpenAPI::toJsonValue(m_expiration_utc_date));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_imagepack_resolution_isSet) {
        obj.insert(QString("imagepack_resolution"), ::OpenAPI::toJsonValue(m_imagepack_resolution));
    }
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_overage.isSet()) {
        obj.insert(QString("overage"), ::OpenAPI::toJsonValue(m_overage));
    }
    if (m_status.isSet()) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_team_credits_isSet) {
        obj.insert(QString("team_credits"), ::OpenAPI::toJsonValue(m_team_credits));
    }
    if (m_type.isSet()) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QString OAIProduct::getAgreementName() const {
    return m_agreement_name;
}
void OAIProduct::setAgreementName(const QString &agreement_name) {
    m_agreement_name = agreement_name;
    m_agreement_name_isSet = true;
}

bool OAIProduct::is_agreement_name_Set() const{
    return m_agreement_name_isSet;
}

bool OAIProduct::is_agreement_name_Valid() const{
    return m_agreement_name_isValid;
}

QString OAIProduct::getApplicationWebsite() const {
    return m_application_website;
}
void OAIProduct::setApplicationWebsite(const QString &application_website) {
    m_application_website = application_website;
    m_application_website_isSet = true;
}

bool OAIProduct::is_application_website_Set() const{
    return m_application_website_isSet;
}

bool OAIProduct::is_application_website_Valid() const{
    return m_application_website_isValid;
}

qint32 OAIProduct::getCreditsRemaining() const {
    return m_credits_remaining;
}
void OAIProduct::setCreditsRemaining(const qint32 &credits_remaining) {
    m_credits_remaining = credits_remaining;
    m_credits_remaining_isSet = true;
}

bool OAIProduct::is_credits_remaining_Set() const{
    return m_credits_remaining_isSet;
}

bool OAIProduct::is_credits_remaining_Valid() const{
    return m_credits_remaining_isValid;
}

qint32 OAIProduct::getDownloadLimit() const {
    return m_download_limit;
}
void OAIProduct::setDownloadLimit(const qint32 &download_limit) {
    m_download_limit = download_limit;
    m_download_limit_isSet = true;
}

bool OAIProduct::is_download_limit_Set() const{
    return m_download_limit_isSet;
}

bool OAIProduct::is_download_limit_Valid() const{
    return m_download_limit_isValid;
}

QString OAIProduct::getDownloadLimitDuration() const {
    return m_download_limit_duration;
}
void OAIProduct::setDownloadLimitDuration(const QString &download_limit_duration) {
    m_download_limit_duration = download_limit_duration;
    m_download_limit_duration_isSet = true;
}

bool OAIProduct::is_download_limit_duration_Set() const{
    return m_download_limit_duration_isSet;
}

bool OAIProduct::is_download_limit_duration_Valid() const{
    return m_download_limit_duration_isValid;
}

QDateTime OAIProduct::getDownloadLimitResetUtcDate() const {
    return m_download_limit_reset_utc_date;
}
void OAIProduct::setDownloadLimitResetUtcDate(const QDateTime &download_limit_reset_utc_date) {
    m_download_limit_reset_utc_date = download_limit_reset_utc_date;
    m_download_limit_reset_utc_date_isSet = true;
}

bool OAIProduct::is_download_limit_reset_utc_date_Set() const{
    return m_download_limit_reset_utc_date_isSet;
}

bool OAIProduct::is_download_limit_reset_utc_date_Valid() const{
    return m_download_limit_reset_utc_date_isValid;
}

OAIDownloadRequirements OAIProduct::getDownloadRequirements() const {
    return m_download_requirements;
}
void OAIProduct::setDownloadRequirements(const OAIDownloadRequirements &download_requirements) {
    m_download_requirements = download_requirements;
    m_download_requirements_isSet = true;
}

bool OAIProduct::is_download_requirements_Set() const{
    return m_download_requirements_isSet;
}

bool OAIProduct::is_download_requirements_Valid() const{
    return m_download_requirements_isValid;
}

qint32 OAIProduct::getDownloadsRemaining() const {
    return m_downloads_remaining;
}
void OAIProduct::setDownloadsRemaining(const qint32 &downloads_remaining) {
    m_downloads_remaining = downloads_remaining;
    m_downloads_remaining_isSet = true;
}

bool OAIProduct::is_downloads_remaining_Set() const{
    return m_downloads_remaining_isSet;
}

bool OAIProduct::is_downloads_remaining_Valid() const{
    return m_downloads_remaining_isValid;
}

QDateTime OAIProduct::getExpirationUtcDate() const {
    return m_expiration_utc_date;
}
void OAIProduct::setExpirationUtcDate(const QDateTime &expiration_utc_date) {
    m_expiration_utc_date = expiration_utc_date;
    m_expiration_utc_date_isSet = true;
}

bool OAIProduct::is_expiration_utc_date_Set() const{
    return m_expiration_utc_date_isSet;
}

bool OAIProduct::is_expiration_utc_date_Valid() const{
    return m_expiration_utc_date_isValid;
}

qint32 OAIProduct::getId() const {
    return m_id;
}
void OAIProduct::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIProduct::is_id_Set() const{
    return m_id_isSet;
}

bool OAIProduct::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIProduct::getImagepackResolution() const {
    return m_imagepack_resolution;
}
void OAIProduct::setImagepackResolution(const QString &imagepack_resolution) {
    m_imagepack_resolution = imagepack_resolution;
    m_imagepack_resolution_isSet = true;
}

bool OAIProduct::is_imagepack_resolution_Set() const{
    return m_imagepack_resolution_isSet;
}

bool OAIProduct::is_imagepack_resolution_Valid() const{
    return m_imagepack_resolution_isValid;
}

QString OAIProduct::getName() const {
    return m_name;
}
void OAIProduct::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAIProduct::is_name_Set() const{
    return m_name_isSet;
}

bool OAIProduct::is_name_Valid() const{
    return m_name_isValid;
}

OAIOverageDetails OAIProduct::getOverage() const {
    return m_overage;
}
void OAIProduct::setOverage(const OAIOverageDetails &overage) {
    m_overage = overage;
    m_overage_isSet = true;
}

bool OAIProduct::is_overage_Set() const{
    return m_overage_isSet;
}

bool OAIProduct::is_overage_Valid() const{
    return m_overage_isValid;
}

OAIProductStatus OAIProduct::getStatus() const {
    return m_status;
}
void OAIProduct::setStatus(const OAIProductStatus &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIProduct::is_status_Set() const{
    return m_status_isSet;
}

bool OAIProduct::is_status_Valid() const{
    return m_status_isValid;
}

qint32 OAIProduct::getTeamCredits() const {
    return m_team_credits;
}
void OAIProduct::setTeamCredits(const qint32 &team_credits) {
    m_team_credits = team_credits;
    m_team_credits_isSet = true;
}

bool OAIProduct::is_team_credits_Set() const{
    return m_team_credits_isSet;
}

bool OAIProduct::is_team_credits_Valid() const{
    return m_team_credits_isValid;
}

OAIProductTypeResponse OAIProduct::getType() const {
    return m_type;
}
void OAIProduct::setType(const OAIProductTypeResponse &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIProduct::is_type_Set() const{
    return m_type_isSet;
}

bool OAIProduct::is_type_Valid() const{
    return m_type_isValid;
}

bool OAIProduct::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_agreement_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_application_website_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_credits_remaining_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_download_limit_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_download_limit_duration_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_download_limit_reset_utc_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_download_requirements.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_downloads_remaining_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_expiration_utc_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_imagepack_resolution_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_overage.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_team_credits_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProduct::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
