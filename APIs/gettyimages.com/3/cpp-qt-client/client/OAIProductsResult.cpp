/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIProductsResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIProductsResult::OAIProductsResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIProductsResult::OAIProductsResult() {
    this->initializeModel();
}

OAIProductsResult::~OAIProductsResult() {}

void OAIProductsResult::initializeModel() {

    m_products_isSet = false;
    m_products_isValid = false;
}

void OAIProductsResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIProductsResult::fromJsonObject(QJsonObject json) {

    m_products_isValid = ::OpenAPI::fromJsonValue(m_products, json[QString("products")]);
    m_products_isSet = !json[QString("products")].isNull() && m_products_isValid;
}

QString OAIProductsResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIProductsResult::asJsonObject() const {
    QJsonObject obj;
    if (m_products.size() > 0) {
        obj.insert(QString("products"), ::OpenAPI::toJsonValue(m_products));
    }
    return obj;
}

QList<OAIProduct> OAIProductsResult::getProducts() const {
    return m_products;
}
void OAIProductsResult::setProducts(const QList<OAIProduct> &products) {
    m_products = products;
    m_products_isSet = true;
}

bool OAIProductsResult::is_products_Set() const{
    return m_products_isSet;
}

bool OAIProductsResult::is_products_Valid() const{
    return m_products_isValid;
}

bool OAIProductsResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_products.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIProductsResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
