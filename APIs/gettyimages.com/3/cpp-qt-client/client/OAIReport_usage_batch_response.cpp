/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIReport_usage_batch_response.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIReport_usage_batch_response::OAIReport_usage_batch_response(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIReport_usage_batch_response::OAIReport_usage_batch_response() {
    this->initializeModel();
}

OAIReport_usage_batch_response::~OAIReport_usage_batch_response() {}

void OAIReport_usage_batch_response::initializeModel() {

    m_invalid_assets_isSet = false;
    m_invalid_assets_isValid = false;

    m_total_asset_usages_processed_isSet = false;
    m_total_asset_usages_processed_isValid = false;
}

void OAIReport_usage_batch_response::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIReport_usage_batch_response::fromJsonObject(QJsonObject json) {

    m_invalid_assets_isValid = ::OpenAPI::fromJsonValue(m_invalid_assets, json[QString("invalid_assets")]);
    m_invalid_assets_isSet = !json[QString("invalid_assets")].isNull() && m_invalid_assets_isValid;

    m_total_asset_usages_processed_isValid = ::OpenAPI::fromJsonValue(m_total_asset_usages_processed, json[QString("total_asset_usages_processed")]);
    m_total_asset_usages_processed_isSet = !json[QString("total_asset_usages_processed")].isNull() && m_total_asset_usages_processed_isValid;
}

QString OAIReport_usage_batch_response::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIReport_usage_batch_response::asJsonObject() const {
    QJsonObject obj;
    if (m_invalid_assets.size() > 0) {
        obj.insert(QString("invalid_assets"), ::OpenAPI::toJsonValue(m_invalid_assets));
    }
    if (m_total_asset_usages_processed_isSet) {
        obj.insert(QString("total_asset_usages_processed"), ::OpenAPI::toJsonValue(m_total_asset_usages_processed));
    }
    return obj;
}

QList<QString> OAIReport_usage_batch_response::getInvalidAssets() const {
    return m_invalid_assets;
}
void OAIReport_usage_batch_response::setInvalidAssets(const QList<QString> &invalid_assets) {
    m_invalid_assets = invalid_assets;
    m_invalid_assets_isSet = true;
}

bool OAIReport_usage_batch_response::is_invalid_assets_Set() const{
    return m_invalid_assets_isSet;
}

bool OAIReport_usage_batch_response::is_invalid_assets_Valid() const{
    return m_invalid_assets_isValid;
}

qint32 OAIReport_usage_batch_response::getTotalAssetUsagesProcessed() const {
    return m_total_asset_usages_processed;
}
void OAIReport_usage_batch_response::setTotalAssetUsagesProcessed(const qint32 &total_asset_usages_processed) {
    m_total_asset_usages_processed = total_asset_usages_processed;
    m_total_asset_usages_processed_isSet = true;
}

bool OAIReport_usage_batch_response::is_total_asset_usages_processed_Set() const{
    return m_total_asset_usages_processed_isSet;
}

bool OAIReport_usage_batch_response::is_total_asset_usages_processed_Valid() const{
    return m_total_asset_usages_processed_isValid;
}

bool OAIReport_usage_batch_response::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_invalid_assets.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_asset_usages_processed_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIReport_usage_batch_response::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
