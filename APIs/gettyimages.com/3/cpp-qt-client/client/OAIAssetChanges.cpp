/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssetChanges.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssetChanges::OAIAssetChanges(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssetChanges::OAIAssetChanges() {
    this->initializeModel();
}

OAIAssetChanges::~OAIAssetChanges() {}

void OAIAssetChanges::initializeModel() {

    m_change_set_id_isSet = false;
    m_change_set_id_isValid = false;

    m_changed_assets_isSet = false;
    m_changed_assets_isValid = false;
}

void OAIAssetChanges::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAssetChanges::fromJsonObject(QJsonObject json) {

    m_change_set_id_isValid = ::OpenAPI::fromJsonValue(m_change_set_id, json[QString("change_set_id")]);
    m_change_set_id_isSet = !json[QString("change_set_id")].isNull() && m_change_set_id_isValid;

    m_changed_assets_isValid = ::OpenAPI::fromJsonValue(m_changed_assets, json[QString("changed_assets")]);
    m_changed_assets_isSet = !json[QString("changed_assets")].isNull() && m_changed_assets_isValid;
}

QString OAIAssetChanges::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAssetChanges::asJsonObject() const {
    QJsonObject obj;
    if (m_change_set_id_isSet) {
        obj.insert(QString("change_set_id"), ::OpenAPI::toJsonValue(m_change_set_id));
    }
    if (m_changed_assets.size() > 0) {
        obj.insert(QString("changed_assets"), ::OpenAPI::toJsonValue(m_changed_assets));
    }
    return obj;
}

QString OAIAssetChanges::getChangeSetId() const {
    return m_change_set_id;
}
void OAIAssetChanges::setChangeSetId(const QString &change_set_id) {
    m_change_set_id = change_set_id;
    m_change_set_id_isSet = true;
}

bool OAIAssetChanges::is_change_set_id_Set() const{
    return m_change_set_id_isSet;
}

bool OAIAssetChanges::is_change_set_id_Valid() const{
    return m_change_set_id_isValid;
}

QList<OAIChangedAssetDetail> OAIAssetChanges::getChangedAssets() const {
    return m_changed_assets;
}
void OAIAssetChanges::setChangedAssets(const QList<OAIChangedAssetDetail> &changed_assets) {
    m_changed_assets = changed_assets;
    m_changed_assets_isSet = true;
}

bool OAIAssetChanges::is_changed_assets_Set() const{
    return m_changed_assets_isSet;
}

bool OAIAssetChanges::is_changed_assets_Valid() const{
    return m_changed_assets_isValid;
}

bool OAIAssetChanges::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_change_set_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_changed_assets.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAssetChanges::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
