/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITeeShirtSize.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITeeShirtSize::OAITeeShirtSize(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITeeShirtSize::OAITeeShirtSize() {
    this->initializeModel();
}

OAITeeShirtSize::~OAITeeShirtSize() {}

void OAITeeShirtSize::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAITeeShirtSize::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAITeeShirtSize::fromJson(QString jsonString) {
    
    if ( jsonString.compare("x_small", Qt::CaseInsensitive) == 0) {
        m_value = eOAITeeShirtSize::X_SMALL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("small", Qt::CaseInsensitive) == 0) {
        m_value = eOAITeeShirtSize::SMALL;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("medium", Qt::CaseInsensitive) == 0) {
        m_value = eOAITeeShirtSize::MEDIUM;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("large", Qt::CaseInsensitive) == 0) {
        m_value = eOAITeeShirtSize::LARGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("x_large", Qt::CaseInsensitive) == 0) {
        m_value = eOAITeeShirtSize::X_LARGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("xx_large", Qt::CaseInsensitive) == 0) {
        m_value = eOAITeeShirtSize::XX_LARGE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("vector", Qt::CaseInsensitive) == 0) {
        m_value = eOAITeeShirtSize::VECTOR;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAITeeShirtSize::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAITeeShirtSize::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAITeeShirtSize::X_SMALL:
            val = "x_small";
            break;
        case eOAITeeShirtSize::SMALL:
            val = "small";
            break;
        case eOAITeeShirtSize::MEDIUM:
            val = "medium";
            break;
        case eOAITeeShirtSize::LARGE:
            val = "large";
            break;
        case eOAITeeShirtSize::X_LARGE:
            val = "x_large";
            break;
        case eOAITeeShirtSize::XX_LARGE:
            val = "xx_large";
            break;
        case eOAITeeShirtSize::VECTOR:
            val = "vector";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAITeeShirtSize::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAITeeShirtSize::eOAITeeShirtSize OAITeeShirtSize::getValue() const {
    return m_value;
}

void OAITeeShirtSize::setValue(const OAITeeShirtSize::eOAITeeShirtSize& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAITeeShirtSize::isSet() const {
    
    return m_value_isSet;
}

bool OAITeeShirtSize::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
