/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBoardList.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBoardList::OAIBoardList(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBoardList::OAIBoardList() {
    this->initializeModel();
}

OAIBoardList::~OAIBoardList() {}

void OAIBoardList::initializeModel() {

    m_board_count_isSet = false;
    m_board_count_isValid = false;

    m_boards_isSet = false;
    m_boards_isValid = false;
}

void OAIBoardList::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIBoardList::fromJsonObject(QJsonObject json) {

    m_board_count_isValid = ::OpenAPI::fromJsonValue(m_board_count, json[QString("board_count")]);
    m_board_count_isSet = !json[QString("board_count")].isNull() && m_board_count_isValid;

    m_boards_isValid = ::OpenAPI::fromJsonValue(m_boards, json[QString("boards")]);
    m_boards_isSet = !json[QString("boards")].isNull() && m_boards_isValid;
}

QString OAIBoardList::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIBoardList::asJsonObject() const {
    QJsonObject obj;
    if (m_board_count_isSet) {
        obj.insert(QString("board_count"), ::OpenAPI::toJsonValue(m_board_count));
    }
    if (m_boards.size() > 0) {
        obj.insert(QString("boards"), ::OpenAPI::toJsonValue(m_boards));
    }
    return obj;
}

qint32 OAIBoardList::getBoardCount() const {
    return m_board_count;
}
void OAIBoardList::setBoardCount(const qint32 &board_count) {
    m_board_count = board_count;
    m_board_count_isSet = true;
}

bool OAIBoardList::is_board_count_Set() const{
    return m_board_count_isSet;
}

bool OAIBoardList::is_board_count_Valid() const{
    return m_board_count_isValid;
}

QList<OAIBoardListBoard> OAIBoardList::getBoards() const {
    return m_boards;
}
void OAIBoardList::setBoards(const QList<OAIBoardListBoard> &boards) {
    m_boards = boards;
    m_boards_isSet = true;
}

bool OAIBoardList::is_boards_Set() const{
    return m_boards_isSet;
}

bool OAIBoardList::is_boards_Valid() const{
    return m_boards_isValid;
}

bool OAIBoardList::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_board_count_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_boards.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIBoardList::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
