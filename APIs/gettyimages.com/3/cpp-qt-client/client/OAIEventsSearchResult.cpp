/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEventsSearchResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEventsSearchResult::OAIEventsSearchResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEventsSearchResult::OAIEventsSearchResult() {
    this->initializeModel();
}

OAIEventsSearchResult::~OAIEventsSearchResult() {}

void OAIEventsSearchResult::initializeModel() {

    m_events_isSet = false;
    m_events_isValid = false;

    m_result_count_isSet = false;
    m_result_count_isValid = false;
}

void OAIEventsSearchResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEventsSearchResult::fromJsonObject(QJsonObject json) {

    m_events_isValid = ::OpenAPI::fromJsonValue(m_events, json[QString("events")]);
    m_events_isSet = !json[QString("events")].isNull() && m_events_isValid;

    m_result_count_isValid = ::OpenAPI::fromJsonValue(m_result_count, json[QString("result_count")]);
    m_result_count_isSet = !json[QString("result_count")].isNull() && m_result_count_isValid;
}

QString OAIEventsSearchResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEventsSearchResult::asJsonObject() const {
    QJsonObject obj;
    if (m_events.size() > 0) {
        obj.insert(QString("events"), ::OpenAPI::toJsonValue(m_events));
    }
    if (m_result_count_isSet) {
        obj.insert(QString("result_count"), ::OpenAPI::toJsonValue(m_result_count));
    }
    return obj;
}

QList<OAIEvent> OAIEventsSearchResult::getEvents() const {
    return m_events;
}
void OAIEventsSearchResult::setEvents(const QList<OAIEvent> &events) {
    m_events = events;
    m_events_isSet = true;
}

bool OAIEventsSearchResult::is_events_Set() const{
    return m_events_isSet;
}

bool OAIEventsSearchResult::is_events_Valid() const{
    return m_events_isValid;
}

qint32 OAIEventsSearchResult::getResultCount() const {
    return m_result_count;
}
void OAIEventsSearchResult::setResultCount(const qint32 &result_count) {
    m_result_count = result_count;
    m_result_count_isSet = true;
}

bool OAIEventsSearchResult::is_result_count_Set() const{
    return m_result_count_isSet;
}

bool OAIEventsSearchResult::is_result_count_Valid() const{
    return m_result_count_isValid;
}

bool OAIEventsSearchResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_events.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_result_count_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEventsSearchResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
