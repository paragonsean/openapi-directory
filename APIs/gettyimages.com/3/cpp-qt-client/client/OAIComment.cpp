/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIComment.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIComment::OAIComment(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIComment::OAIComment() {
    this->initializeModel();
}

OAIComment::~OAIComment() {}

void OAIComment::initializeModel() {

    m_created_by_isSet = false;
    m_created_by_isValid = false;

    m_date_created_isSet = false;
    m_date_created_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_permissions_isSet = false;
    m_permissions_isValid = false;

    m_text_isSet = false;
    m_text_isValid = false;
}

void OAIComment::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIComment::fromJsonObject(QJsonObject json) {

    m_created_by_isValid = ::OpenAPI::fromJsonValue(m_created_by, json[QString("created_by")]);
    m_created_by_isSet = !json[QString("created_by")].isNull() && m_created_by_isValid;

    m_date_created_isValid = ::OpenAPI::fromJsonValue(m_date_created, json[QString("date_created")]);
    m_date_created_isSet = !json[QString("date_created")].isNull() && m_date_created_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_permissions_isValid = ::OpenAPI::fromJsonValue(m_permissions, json[QString("permissions")]);
    m_permissions_isSet = !json[QString("permissions")].isNull() && m_permissions_isValid;

    m_text_isValid = ::OpenAPI::fromJsonValue(m_text, json[QString("text")]);
    m_text_isSet = !json[QString("text")].isNull() && m_text_isValid;
}

QString OAIComment::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIComment::asJsonObject() const {
    QJsonObject obj;
    if (m_created_by.isSet()) {
        obj.insert(QString("created_by"), ::OpenAPI::toJsonValue(m_created_by));
    }
    if (m_date_created_isSet) {
        obj.insert(QString("date_created"), ::OpenAPI::toJsonValue(m_date_created));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_permissions.isSet()) {
        obj.insert(QString("permissions"), ::OpenAPI::toJsonValue(m_permissions));
    }
    if (m_text_isSet) {
        obj.insert(QString("text"), ::OpenAPI::toJsonValue(m_text));
    }
    return obj;
}

OAICollaborator OAIComment::getCreatedBy() const {
    return m_created_by;
}
void OAIComment::setCreatedBy(const OAICollaborator &created_by) {
    m_created_by = created_by;
    m_created_by_isSet = true;
}

bool OAIComment::is_created_by_Set() const{
    return m_created_by_isSet;
}

bool OAIComment::is_created_by_Valid() const{
    return m_created_by_isValid;
}

QDateTime OAIComment::getDateCreated() const {
    return m_date_created;
}
void OAIComment::setDateCreated(const QDateTime &date_created) {
    m_date_created = date_created;
    m_date_created_isSet = true;
}

bool OAIComment::is_date_created_Set() const{
    return m_date_created_isSet;
}

bool OAIComment::is_date_created_Valid() const{
    return m_date_created_isValid;
}

QString OAIComment::getId() const {
    return m_id;
}
void OAIComment::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIComment::is_id_Set() const{
    return m_id_isSet;
}

bool OAIComment::is_id_Valid() const{
    return m_id_isValid;
}

OAICommentPermissions OAIComment::getPermissions() const {
    return m_permissions;
}
void OAIComment::setPermissions(const OAICommentPermissions &permissions) {
    m_permissions = permissions;
    m_permissions_isSet = true;
}

bool OAIComment::is_permissions_Set() const{
    return m_permissions_isSet;
}

bool OAIComment::is_permissions_Valid() const{
    return m_permissions_isValid;
}

QString OAIComment::getText() const {
    return m_text;
}
void OAIComment::setText(const QString &text) {
    m_text = text;
    m_text_isSet = true;
}

bool OAIComment::is_text_Set() const{
    return m_text_isSet;
}

bool OAIComment::is_text_Valid() const{
    return m_text_isValid;
}

bool OAIComment::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_created_by.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_created_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_permissions.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_text_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIComment::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
