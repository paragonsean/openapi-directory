/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrderDetail.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrderDetail::OAIOrderDetail(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrderDetail::OAIOrderDetail() {
    this->initializeModel();
}

OAIOrderDetail::~OAIOrderDetail() {}

void OAIOrderDetail::initializeModel() {

    m_assets_isSet = false;
    m_assets_isValid = false;

    m_end_client_isSet = false;
    m_end_client_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_invoice_number_isSet = false;
    m_invoice_number_isValid = false;

    m_notes_isSet = false;
    m_notes_isValid = false;

    m_order_date_isSet = false;
    m_order_date_isValid = false;
}

void OAIOrderDetail::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrderDetail::fromJsonObject(QJsonObject json) {

    m_assets_isValid = ::OpenAPI::fromJsonValue(m_assets, json[QString("assets")]);
    m_assets_isSet = !json[QString("assets")].isNull() && m_assets_isValid;

    m_end_client_isValid = ::OpenAPI::fromJsonValue(m_end_client, json[QString("end_client")]);
    m_end_client_isSet = !json[QString("end_client")].isNull() && m_end_client_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_invoice_number_isValid = ::OpenAPI::fromJsonValue(m_invoice_number, json[QString("invoice_number")]);
    m_invoice_number_isSet = !json[QString("invoice_number")].isNull() && m_invoice_number_isValid;

    m_notes_isValid = ::OpenAPI::fromJsonValue(m_notes, json[QString("notes")]);
    m_notes_isSet = !json[QString("notes")].isNull() && m_notes_isValid;

    m_order_date_isValid = ::OpenAPI::fromJsonValue(m_order_date, json[QString("order_date")]);
    m_order_date_isSet = !json[QString("order_date")].isNull() && m_order_date_isValid;
}

QString OAIOrderDetail::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrderDetail::asJsonObject() const {
    QJsonObject obj;
    if (m_assets.size() > 0) {
        obj.insert(QString("assets"), ::OpenAPI::toJsonValue(m_assets));
    }
    if (m_end_client_isSet) {
        obj.insert(QString("end_client"), ::OpenAPI::toJsonValue(m_end_client));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_invoice_number_isSet) {
        obj.insert(QString("invoice_number"), ::OpenAPI::toJsonValue(m_invoice_number));
    }
    if (m_notes.isSet()) {
        obj.insert(QString("notes"), ::OpenAPI::toJsonValue(m_notes));
    }
    if (m_order_date_isSet) {
        obj.insert(QString("order_date"), ::OpenAPI::toJsonValue(m_order_date));
    }
    return obj;
}

QList<OAIAssetIdFromOrder> OAIOrderDetail::getAssets() const {
    return m_assets;
}
void OAIOrderDetail::setAssets(const QList<OAIAssetIdFromOrder> &assets) {
    m_assets = assets;
    m_assets_isSet = true;
}

bool OAIOrderDetail::is_assets_Set() const{
    return m_assets_isSet;
}

bool OAIOrderDetail::is_assets_Valid() const{
    return m_assets_isValid;
}

QString OAIOrderDetail::getEndClient() const {
    return m_end_client;
}
void OAIOrderDetail::setEndClient(const QString &end_client) {
    m_end_client = end_client;
    m_end_client_isSet = true;
}

bool OAIOrderDetail::is_end_client_Set() const{
    return m_end_client_isSet;
}

bool OAIOrderDetail::is_end_client_Valid() const{
    return m_end_client_isValid;
}

QString OAIOrderDetail::getId() const {
    return m_id;
}
void OAIOrderDetail::setId(const QString &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAIOrderDetail::is_id_Set() const{
    return m_id_isSet;
}

bool OAIOrderDetail::is_id_Valid() const{
    return m_id_isValid;
}

QString OAIOrderDetail::getInvoiceNumber() const {
    return m_invoice_number;
}
void OAIOrderDetail::setInvoiceNumber(const QString &invoice_number) {
    m_invoice_number = invoice_number;
    m_invoice_number_isSet = true;
}

bool OAIOrderDetail::is_invoice_number_Set() const{
    return m_invoice_number_isSet;
}

bool OAIOrderDetail::is_invoice_number_Valid() const{
    return m_invoice_number_isValid;
}

OAIOrderNotes OAIOrderDetail::getNotes() const {
    return m_notes;
}
void OAIOrderDetail::setNotes(const OAIOrderNotes &notes) {
    m_notes = notes;
    m_notes_isSet = true;
}

bool OAIOrderDetail::is_notes_Set() const{
    return m_notes_isSet;
}

bool OAIOrderDetail::is_notes_Valid() const{
    return m_notes_isValid;
}

QDateTime OAIOrderDetail::getOrderDate() const {
    return m_order_date;
}
void OAIOrderDetail::setOrderDate(const QDateTime &order_date) {
    m_order_date = order_date;
    m_order_date_isSet = true;
}

bool OAIOrderDetail::is_order_date_Set() const{
    return m_order_date_isSet;
}

bool OAIOrderDetail::is_order_date_Valid() const{
    return m_order_date_isValid;
}

bool OAIOrderDetail::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assets.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_end_client_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_date_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrderDetail::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
