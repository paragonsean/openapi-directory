/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIBlendedImageSortOrder.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIBlendedImageSortOrder::OAIBlendedImageSortOrder(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIBlendedImageSortOrder::OAIBlendedImageSortOrder() {
    this->initializeModel();
}

OAIBlendedImageSortOrder::~OAIBlendedImageSortOrder() {}

void OAIBlendedImageSortOrder::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIBlendedImageSortOrder::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIBlendedImageSortOrder::fromJson(QString jsonString) {
    
    if ( jsonString.compare("best_match", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBlendedImageSortOrder::BEST_MATCH;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("most_popular", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBlendedImageSortOrder::MOST_POPULAR;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("newest", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBlendedImageSortOrder::NEWEST;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("random", Qt::CaseInsensitive) == 0) {
        m_value = eOAIBlendedImageSortOrder::RANDOM;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIBlendedImageSortOrder::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIBlendedImageSortOrder::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIBlendedImageSortOrder::BEST_MATCH:
            val = "best_match";
            break;
        case eOAIBlendedImageSortOrder::MOST_POPULAR:
            val = "most_popular";
            break;
        case eOAIBlendedImageSortOrder::NEWEST:
            val = "newest";
            break;
        case eOAIBlendedImageSortOrder::RANDOM:
            val = "random";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIBlendedImageSortOrder::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIBlendedImageSortOrder::eOAIBlendedImageSortOrder OAIBlendedImageSortOrder::getValue() const {
    return m_value;
}

void OAIBlendedImageSortOrder::setValue(const OAIBlendedImageSortOrder::eOAIBlendedImageSortOrder& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIBlendedImageSortOrder::isSet() const {
    
    return m_value_isSet;
}

bool OAIBlendedImageSortOrder::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
