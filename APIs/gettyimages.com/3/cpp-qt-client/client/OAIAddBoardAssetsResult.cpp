/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAddBoardAssetsResult.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAddBoardAssetsResult::OAIAddBoardAssetsResult(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAddBoardAssetsResult::OAIAddBoardAssetsResult() {
    this->initializeModel();
}

OAIAddBoardAssetsResult::~OAIAddBoardAssetsResult() {}

void OAIAddBoardAssetsResult::initializeModel() {

    m_assets_added_isSet = false;
    m_assets_added_isValid = false;

    m_assets_not_added_isSet = false;
    m_assets_not_added_isValid = false;
}

void OAIAddBoardAssetsResult::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIAddBoardAssetsResult::fromJsonObject(QJsonObject json) {

    m_assets_added_isValid = ::OpenAPI::fromJsonValue(m_assets_added, json[QString("assets_added")]);
    m_assets_added_isSet = !json[QString("assets_added")].isNull() && m_assets_added_isValid;

    m_assets_not_added_isValid = ::OpenAPI::fromJsonValue(m_assets_not_added, json[QString("assets_not_added")]);
    m_assets_not_added_isSet = !json[QString("assets_not_added")].isNull() && m_assets_not_added_isValid;
}

QString OAIAddBoardAssetsResult::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIAddBoardAssetsResult::asJsonObject() const {
    QJsonObject obj;
    if (m_assets_added.size() > 0) {
        obj.insert(QString("assets_added"), ::OpenAPI::toJsonValue(m_assets_added));
    }
    if (m_assets_not_added.size() > 0) {
        obj.insert(QString("assets_not_added"), ::OpenAPI::toJsonValue(m_assets_not_added));
    }
    return obj;
}

QList<OAIBoardAsset> OAIAddBoardAssetsResult::getAssetsAdded() const {
    return m_assets_added;
}
void OAIAddBoardAssetsResult::setAssetsAdded(const QList<OAIBoardAsset> &assets_added) {
    m_assets_added = assets_added;
    m_assets_added_isSet = true;
}

bool OAIAddBoardAssetsResult::is_assets_added_Set() const{
    return m_assets_added_isSet;
}

bool OAIAddBoardAssetsResult::is_assets_added_Valid() const{
    return m_assets_added_isValid;
}

QList<QString> OAIAddBoardAssetsResult::getAssetsNotAdded() const {
    return m_assets_not_added;
}
void OAIAddBoardAssetsResult::setAssetsNotAdded(const QList<QString> &assets_not_added) {
    m_assets_not_added = assets_not_added;
    m_assets_not_added_isSet = true;
}

bool OAIAddBoardAssetsResult::is_assets_not_added_Set() const{
    return m_assets_not_added_isSet;
}

bool OAIAddBoardAssetsResult::is_assets_not_added_Valid() const{
    return m_assets_not_added_isValid;
}

bool OAIAddBoardAssetsResult::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_assets_added.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_assets_not_added.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIAddBoardAssetsResult::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
