/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBlendedVideoSearchItem.h
 *
 * 
 */

#ifndef OAIBlendedVideoSearchItem_H
#define OAIBlendedVideoSearchItem_H

#include <QJsonObject>

#include "OAIAllowedUse.h"
#include "OAIDownload.h"
#include "OAIIStockLicense.h"
#include "OAIKeyword.h"
#include "OAIReferralDestination.h"
#include "OAIVideoSearchItemDisplaySize.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAllowedUse;
class OAIVideoSearchItemDisplaySize;
class OAIIStockLicense;
class OAIKeyword;
class OAIDownload;
class OAIReferralDestination;

class OAIBlendedVideoSearchItem : public OAIObject {
public:
    OAIBlendedVideoSearchItem();
    OAIBlendedVideoSearchItem(QString json);
    ~OAIBlendedVideoSearchItem() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIAllowedUse getAllowedUse() const;
    void setAllowedUse(const OAIAllowedUse &allowed_use);
    bool is_allowed_use_Set() const;
    bool is_allowed_use_Valid() const;

    QString getArtist() const;
    void setArtist(const QString &artist);
    bool is_artist_Set() const;
    bool is_artist_Valid() const;

    QString getAssetFamily() const;
    void setAssetFamily(const QString &asset_family);
    bool is_asset_family_Set() const;
    bool is_asset_family_Valid() const;

    QString getCaption() const;
    void setCaption(const QString &caption);
    bool is_caption_Set() const;
    bool is_caption_Valid() const;

    QString getClipLength() const;
    void setClipLength(const QString &clip_length);
    bool is_clip_length_Set() const;
    bool is_clip_length_Valid() const;

    QString getCollectionCode() const;
    void setCollectionCode(const QString &collection_code);
    bool is_collection_code_Set() const;
    bool is_collection_code_Valid() const;

    qint32 getCollectionId() const;
    void setCollectionId(const qint32 &collection_id);
    bool is_collection_id_Set() const;
    bool is_collection_id_Valid() const;

    QString getCollectionName() const;
    void setCollectionName(const QString &collection_name);
    bool is_collection_name_Set() const;
    bool is_collection_name_Valid() const;

    QString getColorType() const;
    void setColorType(const QString &color_type);
    bool is_color_type_Set() const;
    bool is_color_type_Valid() const;

    QString getCopyright() const;
    void setCopyright(const QString &copyright);
    bool is_copyright_Set() const;
    bool is_copyright_Valid() const;

    QDateTime getDateCreated() const;
    void setDateCreated(const QDateTime &date_created);
    bool is_date_created_Set() const;
    bool is_date_created_Valid() const;

    QList<OAIVideoSearchItemDisplaySize> getDisplaySizes() const;
    void setDisplaySizes(const QList<OAIVideoSearchItemDisplaySize> &display_sizes);
    bool is_display_sizes_Set() const;
    bool is_display_sizes_Valid() const;

    QString getDownloadProduct() const;
    void setDownloadProduct(const QString &download_product);
    bool is_download_product_Set() const;
    bool is_download_product_Valid() const;

    QString getEra() const;
    void setEra(const QString &era);
    bool is_era_Set() const;
    bool is_era_Valid() const;

    QList<qint32> getEventIds() const;
    void setEventIds(const QList<qint32> &event_ids);
    bool is_event_ids_Set() const;
    bool is_event_ids_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAIIStockLicense> getIstockLicenses() const;
    void setIstockLicenses(const QList<OAIIStockLicense> &istock_licenses);
    bool is_istock_licenses_Set() const;
    bool is_istock_licenses_Valid() const;

    QList<OAIKeyword> getKeywords() const;
    void setKeywords(const QList<OAIKeyword> &keywords);
    bool is_keywords_Set() const;
    bool is_keywords_Valid() const;

    QList<OAIDownload> getLargestDownloads() const;
    void setLargestDownloads(const QList<OAIDownload> &largest_downloads);
    bool is_largest_downloads_Set() const;
    bool is_largest_downloads_Valid() const;

    QString getLicenseModel() const;
    void setLicenseModel(const QString &license_model);
    bool is_license_model_Set() const;
    bool is_license_model_Valid() const;

    QString getMasteredTo() const;
    void setMasteredTo(const QString &mastered_to);
    bool is_mastered_to_Set() const;
    bool is_mastered_to_Valid() const;

    QString getOriginallyShotOn() const;
    void setOriginallyShotOn(const QString &originally_shot_on);
    bool is_originally_shot_on_Set() const;
    bool is_originally_shot_on_Valid() const;

    QList<QString> getProductTypes() const;
    void setProductTypes(const QList<QString> &product_types);
    bool is_product_types_Set() const;
    bool is_product_types_Valid() const;

    QList<OAIReferralDestination> getReferralDestinations() const;
    void setReferralDestinations(const QList<OAIReferralDestination> &referral_destinations);
    bool is_referral_destinations_Set() const;
    bool is_referral_destinations_Valid() const;

    QString getShotSpeed() const;
    void setShotSpeed(const QString &shot_speed);
    bool is_shot_speed_Set() const;
    bool is_shot_speed_Valid() const;

    QString getSource() const;
    void setSource(const QString &source);
    bool is_source_Set() const;
    bool is_source_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIAllowedUse m_allowed_use;
    bool m_allowed_use_isSet;
    bool m_allowed_use_isValid;

    QString m_artist;
    bool m_artist_isSet;
    bool m_artist_isValid;

    QString m_asset_family;
    bool m_asset_family_isSet;
    bool m_asset_family_isValid;

    QString m_caption;
    bool m_caption_isSet;
    bool m_caption_isValid;

    QString m_clip_length;
    bool m_clip_length_isSet;
    bool m_clip_length_isValid;

    QString m_collection_code;
    bool m_collection_code_isSet;
    bool m_collection_code_isValid;

    qint32 m_collection_id;
    bool m_collection_id_isSet;
    bool m_collection_id_isValid;

    QString m_collection_name;
    bool m_collection_name_isSet;
    bool m_collection_name_isValid;

    QString m_color_type;
    bool m_color_type_isSet;
    bool m_color_type_isValid;

    QString m_copyright;
    bool m_copyright_isSet;
    bool m_copyright_isValid;

    QDateTime m_date_created;
    bool m_date_created_isSet;
    bool m_date_created_isValid;

    QList<OAIVideoSearchItemDisplaySize> m_display_sizes;
    bool m_display_sizes_isSet;
    bool m_display_sizes_isValid;

    QString m_download_product;
    bool m_download_product_isSet;
    bool m_download_product_isValid;

    QString m_era;
    bool m_era_isSet;
    bool m_era_isValid;

    QList<qint32> m_event_ids;
    bool m_event_ids_isSet;
    bool m_event_ids_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAIIStockLicense> m_istock_licenses;
    bool m_istock_licenses_isSet;
    bool m_istock_licenses_isValid;

    QList<OAIKeyword> m_keywords;
    bool m_keywords_isSet;
    bool m_keywords_isValid;

    QList<OAIDownload> m_largest_downloads;
    bool m_largest_downloads_isSet;
    bool m_largest_downloads_isValid;

    QString m_license_model;
    bool m_license_model_isSet;
    bool m_license_model_isValid;

    QString m_mastered_to;
    bool m_mastered_to_isSet;
    bool m_mastered_to_isValid;

    QString m_originally_shot_on;
    bool m_originally_shot_on_isSet;
    bool m_originally_shot_on_isValid;

    QList<QString> m_product_types;
    bool m_product_types_isSet;
    bool m_product_types_isValid;

    QList<OAIReferralDestination> m_referral_destinations;
    bool m_referral_destinations_isSet;
    bool m_referral_destinations_isValid;

    QString m_shot_speed;
    bool m_shot_speed_isSet;
    bool m_shot_speed_isValid;

    QString m_source;
    bool m_source_isSet;
    bool m_source_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBlendedVideoSearchItem)

#endif // OAIBlendedVideoSearchItem_H
