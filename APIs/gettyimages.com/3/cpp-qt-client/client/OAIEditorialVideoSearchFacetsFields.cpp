/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEditorialVideoSearchFacetsFields.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEditorialVideoSearchFacetsFields::OAIEditorialVideoSearchFacetsFields(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEditorialVideoSearchFacetsFields::OAIEditorialVideoSearchFacetsFields() {
    this->initializeModel();
}

OAIEditorialVideoSearchFacetsFields::~OAIEditorialVideoSearchFacetsFields() {}

void OAIEditorialVideoSearchFacetsFields::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIEditorialVideoSearchFacetsFields::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIEditorialVideoSearchFacetsFields::fromJson(QString jsonString) {
    
    if ( jsonString.compare("artists", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEditorialVideoSearchFacetsFields::ARTISTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("events", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEditorialVideoSearchFacetsFields::EVENTS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("locations", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEditorialVideoSearchFacetsFields::LOCATIONS;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("specific_people", Qt::CaseInsensitive) == 0) {
        m_value = eOAIEditorialVideoSearchFacetsFields::SPECIFIC_PEOPLE;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIEditorialVideoSearchFacetsFields::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIEditorialVideoSearchFacetsFields::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIEditorialVideoSearchFacetsFields::ARTISTS:
            val = "artists";
            break;
        case eOAIEditorialVideoSearchFacetsFields::EVENTS:
            val = "events";
            break;
        case eOAIEditorialVideoSearchFacetsFields::LOCATIONS:
            val = "locations";
            break;
        case eOAIEditorialVideoSearchFacetsFields::SPECIFIC_PEOPLE:
            val = "specific_people";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIEditorialVideoSearchFacetsFields::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIEditorialVideoSearchFacetsFields::eOAIEditorialVideoSearchFacetsFields OAIEditorialVideoSearchFacetsFields::getValue() const {
    return m_value;
}

void OAIEditorialVideoSearchFacetsFields::setValue(const OAIEditorialVideoSearchFacetsFields::eOAIEditorialVideoSearchFacetsFields& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIEditorialVideoSearchFacetsFields::isSet() const {
    
    return m_value_isSet;
}

bool OAIEditorialVideoSearchFacetsFields::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
