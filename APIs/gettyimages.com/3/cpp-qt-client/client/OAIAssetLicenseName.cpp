/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIAssetLicenseName.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIAssetLicenseName::OAIAssetLicenseName(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIAssetLicenseName::OAIAssetLicenseName() {
    this->initializeModel();
}

OAIAssetLicenseName::~OAIAssetLicenseName() {}

void OAIAssetLicenseName::initializeModel() {

    m_value_isSet = false;
    m_value_isValid = false;
    m_value = eOAIAssetLicenseName::INVALID_VALUE_OPENAPI_GENERATED;
}

void OAIAssetLicenseName::fromJson(QString jsonString) {
    
    if ( jsonString.compare("Standard", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetLicenseName::STANDARD;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Multiseat", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetLicenseName::MULTISEAT;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Unlimited", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetLicenseName::UNLIMITED;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Resale", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetLicenseName::RESALE;
        m_value_isSet = m_value_isValid = true;
    }
    else if ( jsonString.compare("Indemnification", Qt::CaseInsensitive) == 0) {
        m_value = eOAIAssetLicenseName::INDEMNIFICATION;
        m_value_isSet = m_value_isValid = true;
    }
}

void OAIAssetLicenseName::fromJsonValue(QJsonValue json) {
fromJson(json.toString());
}

QString OAIAssetLicenseName::asJson() const {
    
    QString val;
    switch (m_value){
        case eOAIAssetLicenseName::STANDARD:
            val = "Standard";
            break;
        case eOAIAssetLicenseName::MULTISEAT:
            val = "Multiseat";
            break;
        case eOAIAssetLicenseName::UNLIMITED:
            val = "Unlimited";
            break;
        case eOAIAssetLicenseName::RESALE:
            val = "Resale";
            break;
        case eOAIAssetLicenseName::INDEMNIFICATION:
            val = "Indemnification";
            break;
        default:
            break;
    }
    return val;
}

QJsonValue OAIAssetLicenseName::asJsonValue() const {
    
    return QJsonValue(asJson());
}


OAIAssetLicenseName::eOAIAssetLicenseName OAIAssetLicenseName::getValue() const {
    return m_value;
}

void OAIAssetLicenseName::setValue(const OAIAssetLicenseName::eOAIAssetLicenseName& value){
    m_value = value;
    m_value_isSet = true;
}
bool OAIAssetLicenseName::isSet() const {
    
    return m_value_isSet;
}

bool OAIAssetLicenseName::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_value_isValid;
}

} // namespace OpenAPI
