/**
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIEvent.h
 *
 * 
 */

#ifndef OAIEvent_H
#define OAIEvent_H

#include <QJsonObject>

#include "OAIHeroImage.h"
#include "OAILocationEvent.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIHeroImage;
class OAILocationEvent;

class OAIEvent : public OAIObject {
public:
    OAIEvent();
    OAIEvent(QString json);
    ~OAIEvent() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getChildEventCount() const;
    void setChildEventCount(const qint32 &child_event_count);
    bool is_child_event_count_Set() const;
    bool is_child_event_count_Valid() const;

    QList<QString> getEditorialSegments() const;
    void setEditorialSegments(const QList<QString> &editorial_segments);
    bool is_editorial_segments_Set() const;
    bool is_editorial_segments_Valid() const;

    OAIHeroImage getHeroImage() const;
    void setHeroImage(const OAIHeroImage &hero_image);
    bool is_hero_image_Set() const;
    bool is_hero_image_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    qint32 getImageCount() const;
    void setImageCount(const qint32 &image_count);
    bool is_image_count_Set() const;
    bool is_image_count_Valid() const;

    OAILocationEvent getLocation() const;
    void setLocation(const OAILocationEvent &location);
    bool is_location_Set() const;
    bool is_location_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    QDateTime getStartDate() const;
    void setStartDate(const QDateTime &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_child_event_count;
    bool m_child_event_count_isSet;
    bool m_child_event_count_isValid;

    QList<QString> m_editorial_segments;
    bool m_editorial_segments_isSet;
    bool m_editorial_segments_isValid;

    OAIHeroImage m_hero_image;
    bool m_hero_image_isSet;
    bool m_hero_image_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    qint32 m_image_count;
    bool m_image_count_isSet;
    bool m_image_count_isValid;

    OAILocationEvent m_location;
    bool m_location_isSet;
    bool m_location_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    QDateTime m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIEvent)

#endif // OAIEvent_H
