# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AllowedUse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, how_can_i_use_it: str=None, release_info: str=None, usage_restrictions: List[str]=None):
        """AllowedUse - a model defined in OpenAPI

        :param how_can_i_use_it: The how_can_i_use_it of this AllowedUse.
        :param release_info: The release_info of this AllowedUse.
        :param usage_restrictions: The usage_restrictions of this AllowedUse.
        """
        self.openapi_types = {
            'how_can_i_use_it': str,
            'release_info': str,
            'usage_restrictions': List[str]
        }

        self.attribute_map = {
            'how_can_i_use_it': 'how_can_i_use_it',
            'release_info': 'release_info',
            'usage_restrictions': 'usage_restrictions'
        }

        self._how_can_i_use_it = how_can_i_use_it
        self._release_info = release_info
        self._usage_restrictions = usage_restrictions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AllowedUse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AllowedUse of this AllowedUse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def how_can_i_use_it(self):
        """Gets the how_can_i_use_it of this AllowedUse.

        Indicates how the asset can be used

        :return: The how_can_i_use_it of this AllowedUse.
        :rtype: str
        """
        return self._how_can_i_use_it

    @how_can_i_use_it.setter
    def how_can_i_use_it(self, how_can_i_use_it):
        """Sets the how_can_i_use_it of this AllowedUse.

        Indicates how the asset can be used

        :param how_can_i_use_it: The how_can_i_use_it of this AllowedUse.
        :type how_can_i_use_it: str
        """

        self._how_can_i_use_it = how_can_i_use_it

    @property
    def release_info(self):
        """Gets the release_info of this AllowedUse.

        Indicates release status

        :return: The release_info of this AllowedUse.
        :rtype: str
        """
        return self._release_info

    @release_info.setter
    def release_info(self, release_info):
        """Sets the release_info of this AllowedUse.

        Indicates release status

        :param release_info: The release_info of this AllowedUse.
        :type release_info: str
        """

        self._release_info = release_info

    @property
    def usage_restrictions(self):
        """Gets the usage_restrictions of this AllowedUse.

        Indicates asset usage restriction, if any

        :return: The usage_restrictions of this AllowedUse.
        :rtype: List[str]
        """
        return self._usage_restrictions

    @usage_restrictions.setter
    def usage_restrictions(self, usage_restrictions):
        """Sets the usage_restrictions of this AllowedUse.

        Indicates asset usage restriction, if any

        :param usage_restrictions: The usage_restrictions of this AllowedUse.
        :type usage_restrictions: List[str]
        """

        self._usage_restrictions = usage_restrictions
