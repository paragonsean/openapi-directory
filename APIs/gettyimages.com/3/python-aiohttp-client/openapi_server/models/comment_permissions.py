# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CommentPermissions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, can_delete_comment: bool=None):
        """CommentPermissions - a model defined in OpenAPI

        :param can_delete_comment: The can_delete_comment of this CommentPermissions.
        """
        self.openapi_types = {
            'can_delete_comment': bool
        }

        self.attribute_map = {
            'can_delete_comment': 'can_delete_comment'
        }

        self._can_delete_comment = can_delete_comment

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommentPermissions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CommentPermissions of this CommentPermissions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def can_delete_comment(self):
        """Gets the can_delete_comment of this CommentPermissions.


        :return: The can_delete_comment of this CommentPermissions.
        :rtype: bool
        """
        return self._can_delete_comment

    @can_delete_comment.setter
    def can_delete_comment(self, can_delete_comment):
        """Sets the can_delete_comment of this CommentPermissions.


        :param can_delete_comment: The can_delete_comment of this CommentPermissions.
        :type can_delete_comment: bool
        """

        self._can_delete_comment = can_delete_comment
