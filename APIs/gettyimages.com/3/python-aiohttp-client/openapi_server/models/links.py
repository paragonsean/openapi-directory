# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Links(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, invitation: str=None, share: str=None):
        """Links - a model defined in OpenAPI

        :param invitation: The invitation of this Links.
        :param share: The share of this Links.
        """
        self.openapi_types = {
            'invitation': str,
            'share': str
        }

        self.attribute_map = {
            'invitation': 'invitation',
            'share': 'share'
        }

        self._invitation = invitation
        self._share = share

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Links':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Links of this Links.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def invitation(self):
        """Gets the invitation of this Links.


        :return: The invitation of this Links.
        :rtype: str
        """
        return self._invitation

    @invitation.setter
    def invitation(self, invitation):
        """Sets the invitation of this Links.


        :param invitation: The invitation of this Links.
        :type invitation: str
        """

        self._invitation = invitation

    @property
    def share(self):
        """Gets the share of this Links.


        :return: The share of this Links.
        :rtype: str
        """
        return self._share

    @share.setter
    def share(self, share):
        """Sets the share of this Links.


        :param share: The share of this Links.
        :type share: str
        """

        self._share = share
