# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class DownloadRequirements(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, is_note_required: bool=None, is_project_code_required: bool=None, project_codes: List[str]=None):
        """DownloadRequirements - a model defined in OpenAPI

        :param is_note_required: The is_note_required of this DownloadRequirements.
        :param is_project_code_required: The is_project_code_required of this DownloadRequirements.
        :param project_codes: The project_codes of this DownloadRequirements.
        """
        self.openapi_types = {
            'is_note_required': bool,
            'is_project_code_required': bool,
            'project_codes': List[str]
        }

        self.attribute_map = {
            'is_note_required': 'is_note_required',
            'is_project_code_required': 'is_project_code_required',
            'project_codes': 'project_codes'
        }

        self._is_note_required = is_note_required
        self._is_project_code_required = is_project_code_required
        self._project_codes = project_codes

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DownloadRequirements':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The DownloadRequirements of this DownloadRequirements.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def is_note_required(self):
        """Gets the is_note_required of this DownloadRequirements.


        :return: The is_note_required of this DownloadRequirements.
        :rtype: bool
        """
        return self._is_note_required

    @is_note_required.setter
    def is_note_required(self, is_note_required):
        """Sets the is_note_required of this DownloadRequirements.


        :param is_note_required: The is_note_required of this DownloadRequirements.
        :type is_note_required: bool
        """

        self._is_note_required = is_note_required

    @property
    def is_project_code_required(self):
        """Gets the is_project_code_required of this DownloadRequirements.


        :return: The is_project_code_required of this DownloadRequirements.
        :rtype: bool
        """
        return self._is_project_code_required

    @is_project_code_required.setter
    def is_project_code_required(self, is_project_code_required):
        """Sets the is_project_code_required of this DownloadRequirements.


        :param is_project_code_required: The is_project_code_required of this DownloadRequirements.
        :type is_project_code_required: bool
        """

        self._is_project_code_required = is_project_code_required

    @property
    def project_codes(self):
        """Gets the project_codes of this DownloadRequirements.


        :return: The project_codes of this DownloadRequirements.
        :rtype: List[str]
        """
        return self._project_codes

    @project_codes.setter
    def project_codes(self, project_codes):
        """Sets the project_codes of this DownloadRequirements.


        :param project_codes: The project_codes of this DownloadRequirements.
        :type project_codes: List[str]
        """

        self._project_codes = project_codes
