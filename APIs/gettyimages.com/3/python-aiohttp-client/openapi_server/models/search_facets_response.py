# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.artist import Artist
from openapi_server.models.entertainment import Entertainment
from openapi_server.models.facet_event import FacetEvent
from openapi_server.models.location import Location
from openapi_server.models.specific_people import SpecificPeople
from openapi_server import util


class SearchFacetsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, artists: List[Artist]=None, entertainment: List[Entertainment]=None, events: List[FacetEvent]=None, locations: List[Location]=None, specific_people: List[SpecificPeople]=None):
        """SearchFacetsResponse - a model defined in OpenAPI

        :param artists: The artists of this SearchFacetsResponse.
        :param entertainment: The entertainment of this SearchFacetsResponse.
        :param events: The events of this SearchFacetsResponse.
        :param locations: The locations of this SearchFacetsResponse.
        :param specific_people: The specific_people of this SearchFacetsResponse.
        """
        self.openapi_types = {
            'artists': List[Artist],
            'entertainment': List[Entertainment],
            'events': List[FacetEvent],
            'locations': List[Location],
            'specific_people': List[SpecificPeople]
        }

        self.attribute_map = {
            'artists': 'artists',
            'entertainment': 'entertainment',
            'events': 'events',
            'locations': 'locations',
            'specific_people': 'specific_people'
        }

        self._artists = artists
        self._entertainment = entertainment
        self._events = events
        self._locations = locations
        self._specific_people = specific_people

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SearchFacetsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SearchFacetsResponse of this SearchFacetsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def artists(self):
        """Gets the artists of this SearchFacetsResponse.


        :return: The artists of this SearchFacetsResponse.
        :rtype: List[Artist]
        """
        return self._artists

    @artists.setter
    def artists(self, artists):
        """Sets the artists of this SearchFacetsResponse.


        :param artists: The artists of this SearchFacetsResponse.
        :type artists: List[Artist]
        """

        self._artists = artists

    @property
    def entertainment(self):
        """Gets the entertainment of this SearchFacetsResponse.


        :return: The entertainment of this SearchFacetsResponse.
        :rtype: List[Entertainment]
        """
        return self._entertainment

    @entertainment.setter
    def entertainment(self, entertainment):
        """Sets the entertainment of this SearchFacetsResponse.


        :param entertainment: The entertainment of this SearchFacetsResponse.
        :type entertainment: List[Entertainment]
        """

        self._entertainment = entertainment

    @property
    def events(self):
        """Gets the events of this SearchFacetsResponse.


        :return: The events of this SearchFacetsResponse.
        :rtype: List[FacetEvent]
        """
        return self._events

    @events.setter
    def events(self, events):
        """Sets the events of this SearchFacetsResponse.


        :param events: The events of this SearchFacetsResponse.
        :type events: List[FacetEvent]
        """

        self._events = events

    @property
    def locations(self):
        """Gets the locations of this SearchFacetsResponse.


        :return: The locations of this SearchFacetsResponse.
        :rtype: List[Location]
        """
        return self._locations

    @locations.setter
    def locations(self, locations):
        """Sets the locations of this SearchFacetsResponse.


        :param locations: The locations of this SearchFacetsResponse.
        :type locations: List[Location]
        """

        self._locations = locations

    @property
    def specific_people(self):
        """Gets the specific_people of this SearchFacetsResponse.


        :return: The specific_people of this SearchFacetsResponse.
        :rtype: List[SpecificPeople]
        """
        return self._specific_people

    @specific_people.setter
    def specific_people(self, specific_people):
        """Sets the specific_people of this SearchFacetsResponse.


        :param specific_people: The specific_people of this SearchFacetsResponse.
        :type specific_people: List[SpecificPeople]
        """

        self._specific_people = specific_people
