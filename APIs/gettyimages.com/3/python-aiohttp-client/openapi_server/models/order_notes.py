# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class OrderNotes(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, licensee_name: str=None, ordered_by: str=None, project_title: str=None, purchase_order_number: str=None):
        """OrderNotes - a model defined in OpenAPI

        :param licensee_name: The licensee_name of this OrderNotes.
        :param ordered_by: The ordered_by of this OrderNotes.
        :param project_title: The project_title of this OrderNotes.
        :param purchase_order_number: The purchase_order_number of this OrderNotes.
        """
        self.openapi_types = {
            'licensee_name': str,
            'ordered_by': str,
            'project_title': str,
            'purchase_order_number': str
        }

        self.attribute_map = {
            'licensee_name': 'licensee_name',
            'ordered_by': 'ordered_by',
            'project_title': 'project_title',
            'purchase_order_number': 'purchase_order_number'
        }

        self._licensee_name = licensee_name
        self._ordered_by = ordered_by
        self._project_title = project_title
        self._purchase_order_number = purchase_order_number

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderNotes':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderNotes of this OrderNotes.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def licensee_name(self):
        """Gets the licensee_name of this OrderNotes.


        :return: The licensee_name of this OrderNotes.
        :rtype: str
        """
        return self._licensee_name

    @licensee_name.setter
    def licensee_name(self, licensee_name):
        """Sets the licensee_name of this OrderNotes.


        :param licensee_name: The licensee_name of this OrderNotes.
        :type licensee_name: str
        """

        self._licensee_name = licensee_name

    @property
    def ordered_by(self):
        """Gets the ordered_by of this OrderNotes.


        :return: The ordered_by of this OrderNotes.
        :rtype: str
        """
        return self._ordered_by

    @ordered_by.setter
    def ordered_by(self, ordered_by):
        """Sets the ordered_by of this OrderNotes.


        :param ordered_by: The ordered_by of this OrderNotes.
        :type ordered_by: str
        """

        self._ordered_by = ordered_by

    @property
    def project_title(self):
        """Gets the project_title of this OrderNotes.


        :return: The project_title of this OrderNotes.
        :rtype: str
        """
        return self._project_title

    @project_title.setter
    def project_title(self, project_title):
        """Sets the project_title of this OrderNotes.


        :param project_title: The project_title of this OrderNotes.
        :type project_title: str
        """

        self._project_title = project_title

    @property
    def purchase_order_number(self):
        """Gets the purchase_order_number of this OrderNotes.


        :return: The purchase_order_number of this OrderNotes.
        :rtype: str
        """
        return self._purchase_order_number

    @purchase_order_number.setter
    def purchase_order_number(self, purchase_order_number):
        """Sets the purchase_order_number of this OrderNotes.


        :param purchase_order_number: The purchase_order_number of this OrderNotes.
        :type purchase_order_number: str
        """

        self._purchase_order_number = purchase_order_number
