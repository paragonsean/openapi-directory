# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class CompositionsFilterType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ABSTRACT = 'abstract'
    CANDID = 'candid'
    CLOSE_UP = 'close_up'
    COPY_SPACE = 'copy_space'
    CUT_OUT = 'cut_out'
    FULL_FRAME = 'full_frame'
    FULL_LENGTH = 'full_length'
    HEADSHOT = 'headshot'
    LOOKING_AT_CAMERA = 'looking_at_camera'
    MACRO = 'macro'
    PORTRAIT = 'portrait'
    SPARSE = 'sparse'
    STILL_LIFE = 'still_life'
    THREE_QUARTER_LENGTH = 'three_quarter_length'
    WAIST_UP = 'waist_up'

    def __init__(self):
        """CompositionsFilterType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompositionsFilterType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CompositionsFilterType of this CompositionsFilterType.
        """
        return util.deserialize_model(dikt, cls)
