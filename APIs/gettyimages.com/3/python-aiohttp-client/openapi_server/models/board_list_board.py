# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asset import Asset
from openapi_server import util


class BoardListBoard(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_count: int=None, board_relationship: str=None, date_created: datetime=None, date_last_updated: datetime=None, description: str=None, hero_asset: Asset=None, id: str=None, name: str=None):
        """BoardListBoard - a model defined in OpenAPI

        :param asset_count: The asset_count of this BoardListBoard.
        :param board_relationship: The board_relationship of this BoardListBoard.
        :param date_created: The date_created of this BoardListBoard.
        :param date_last_updated: The date_last_updated of this BoardListBoard.
        :param description: The description of this BoardListBoard.
        :param hero_asset: The hero_asset of this BoardListBoard.
        :param id: The id of this BoardListBoard.
        :param name: The name of this BoardListBoard.
        """
        self.openapi_types = {
            'asset_count': int,
            'board_relationship': str,
            'date_created': datetime,
            'date_last_updated': datetime,
            'description': str,
            'hero_asset': Asset,
            'id': str,
            'name': str
        }

        self.attribute_map = {
            'asset_count': 'asset_count',
            'board_relationship': 'board_relationship',
            'date_created': 'date_created',
            'date_last_updated': 'date_last_updated',
            'description': 'description',
            'hero_asset': 'hero_asset',
            'id': 'id',
            'name': 'name'
        }

        self._asset_count = asset_count
        self._board_relationship = board_relationship
        self._date_created = date_created
        self._date_last_updated = date_last_updated
        self._description = description
        self._hero_asset = hero_asset
        self._id = id
        self._name = name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BoardListBoard':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BoardListBoard of this BoardListBoard.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_count(self):
        """Gets the asset_count of this BoardListBoard.


        :return: The asset_count of this BoardListBoard.
        :rtype: int
        """
        return self._asset_count

    @asset_count.setter
    def asset_count(self, asset_count):
        """Sets the asset_count of this BoardListBoard.


        :param asset_count: The asset_count of this BoardListBoard.
        :type asset_count: int
        """

        self._asset_count = asset_count

    @property
    def board_relationship(self):
        """Gets the board_relationship of this BoardListBoard.


        :return: The board_relationship of this BoardListBoard.
        :rtype: str
        """
        return self._board_relationship

    @board_relationship.setter
    def board_relationship(self, board_relationship):
        """Sets the board_relationship of this BoardListBoard.


        :param board_relationship: The board_relationship of this BoardListBoard.
        :type board_relationship: str
        """

        self._board_relationship = board_relationship

    @property
    def date_created(self):
        """Gets the date_created of this BoardListBoard.


        :return: The date_created of this BoardListBoard.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this BoardListBoard.


        :param date_created: The date_created of this BoardListBoard.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def date_last_updated(self):
        """Gets the date_last_updated of this BoardListBoard.


        :return: The date_last_updated of this BoardListBoard.
        :rtype: datetime
        """
        return self._date_last_updated

    @date_last_updated.setter
    def date_last_updated(self, date_last_updated):
        """Sets the date_last_updated of this BoardListBoard.


        :param date_last_updated: The date_last_updated of this BoardListBoard.
        :type date_last_updated: datetime
        """

        self._date_last_updated = date_last_updated

    @property
    def description(self):
        """Gets the description of this BoardListBoard.


        :return: The description of this BoardListBoard.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this BoardListBoard.


        :param description: The description of this BoardListBoard.
        :type description: str
        """

        self._description = description

    @property
    def hero_asset(self):
        """Gets the hero_asset of this BoardListBoard.


        :return: The hero_asset of this BoardListBoard.
        :rtype: Asset
        """
        return self._hero_asset

    @hero_asset.setter
    def hero_asset(self, hero_asset):
        """Sets the hero_asset of this BoardListBoard.


        :param hero_asset: The hero_asset of this BoardListBoard.
        :type hero_asset: Asset
        """

        self._hero_asset = hero_asset

    @property
    def id(self):
        """Gets the id of this BoardListBoard.


        :return: The id of this BoardListBoard.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this BoardListBoard.


        :param id: The id of this BoardListBoard.
        :type id: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this BoardListBoard.


        :return: The name of this BoardListBoard.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this BoardListBoard.


        :param name: The name of this BoardListBoard.
        :type name: str
        """

        self._name = name
