# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AffiliateVideoUrls(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, large_motion: str=None, large_still: str=None, medium_still: str=None, small_motion: str=None, small_still: str=None):
        """AffiliateVideoUrls - a model defined in OpenAPI

        :param large_motion: The large_motion of this AffiliateVideoUrls.
        :param large_still: The large_still of this AffiliateVideoUrls.
        :param medium_still: The medium_still of this AffiliateVideoUrls.
        :param small_motion: The small_motion of this AffiliateVideoUrls.
        :param small_still: The small_still of this AffiliateVideoUrls.
        """
        self.openapi_types = {
            'large_motion': str,
            'large_still': str,
            'medium_still': str,
            'small_motion': str,
            'small_still': str
        }

        self.attribute_map = {
            'large_motion': 'large_motion',
            'large_still': 'large_still',
            'medium_still': 'medium_still',
            'small_motion': 'small_motion',
            'small_still': 'small_still'
        }

        self._large_motion = large_motion
        self._large_still = large_still
        self._medium_still = medium_still
        self._small_motion = small_motion
        self._small_still = small_still

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AffiliateVideoUrls':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AffiliateVideoUrls of this AffiliateVideoUrls.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def large_motion(self):
        """Gets the large_motion of this AffiliateVideoUrls.


        :return: The large_motion of this AffiliateVideoUrls.
        :rtype: str
        """
        return self._large_motion

    @large_motion.setter
    def large_motion(self, large_motion):
        """Sets the large_motion of this AffiliateVideoUrls.


        :param large_motion: The large_motion of this AffiliateVideoUrls.
        :type large_motion: str
        """

        self._large_motion = large_motion

    @property
    def large_still(self):
        """Gets the large_still of this AffiliateVideoUrls.


        :return: The large_still of this AffiliateVideoUrls.
        :rtype: str
        """
        return self._large_still

    @large_still.setter
    def large_still(self, large_still):
        """Sets the large_still of this AffiliateVideoUrls.


        :param large_still: The large_still of this AffiliateVideoUrls.
        :type large_still: str
        """

        self._large_still = large_still

    @property
    def medium_still(self):
        """Gets the medium_still of this AffiliateVideoUrls.


        :return: The medium_still of this AffiliateVideoUrls.
        :rtype: str
        """
        return self._medium_still

    @medium_still.setter
    def medium_still(self, medium_still):
        """Sets the medium_still of this AffiliateVideoUrls.


        :param medium_still: The medium_still of this AffiliateVideoUrls.
        :type medium_still: str
        """

        self._medium_still = medium_still

    @property
    def small_motion(self):
        """Gets the small_motion of this AffiliateVideoUrls.


        :return: The small_motion of this AffiliateVideoUrls.
        :rtype: str
        """
        return self._small_motion

    @small_motion.setter
    def small_motion(self, small_motion):
        """Sets the small_motion of this AffiliateVideoUrls.


        :param small_motion: The small_motion of this AffiliateVideoUrls.
        :type small_motion: str
        """

        self._small_motion = small_motion

    @property
    def small_still(self):
        """Gets the small_still of this AffiliateVideoUrls.


        :return: The small_still of this AffiliateVideoUrls.
        :rtype: str
        """
        return self._small_still

    @small_still.setter
    def small_still(self, small_still):
        """Sets the small_still of this AffiliateVideoUrls.


        :param small_still: The small_still of this AffiliateVideoUrls.
        :type small_still: str
        """

        self._small_still = small_still
