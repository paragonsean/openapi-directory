# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asset_event import AssetEvent
from openapi_server import util


class GetSendEventsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_send_events: List[AssetEvent]=None, last_offset: datetime=None):
        """GetSendEventsResponse - a model defined in OpenAPI

        :param asset_send_events: The asset_send_events of this GetSendEventsResponse.
        :param last_offset: The last_offset of this GetSendEventsResponse.
        """
        self.openapi_types = {
            'asset_send_events': List[AssetEvent],
            'last_offset': datetime
        }

        self.attribute_map = {
            'asset_send_events': 'asset_send_events',
            'last_offset': 'last_offset'
        }

        self._asset_send_events = asset_send_events
        self._last_offset = last_offset

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetSendEventsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetSendEventsResponse of this GetSendEventsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_send_events(self):
        """Gets the asset_send_events of this GetSendEventsResponse.


        :return: The asset_send_events of this GetSendEventsResponse.
        :rtype: List[AssetEvent]
        """
        return self._asset_send_events

    @asset_send_events.setter
    def asset_send_events(self, asset_send_events):
        """Sets the asset_send_events of this GetSendEventsResponse.


        :param asset_send_events: The asset_send_events of this GetSendEventsResponse.
        :type asset_send_events: List[AssetEvent]
        """

        self._asset_send_events = asset_send_events

    @property
    def last_offset(self):
        """Gets the last_offset of this GetSendEventsResponse.


        :return: The last_offset of this GetSendEventsResponse.
        :rtype: datetime
        """
        return self._last_offset

    @last_offset.setter
    def last_offset(self, last_offset):
        """Sets the last_offset of this GetSendEventsResponse.


        :param last_offset: The last_offset of this GetSendEventsResponse.
        :type last_offset: datetime
        """

        self._last_offset = last_offset
