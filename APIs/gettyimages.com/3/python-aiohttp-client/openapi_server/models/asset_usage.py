# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssetUsage(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_id: str=None, quantity: int=None, usage_date: datetime=None):
        """AssetUsage - a model defined in OpenAPI

        :param asset_id: The asset_id of this AssetUsage.
        :param quantity: The quantity of this AssetUsage.
        :param usage_date: The usage_date of this AssetUsage.
        """
        self.openapi_types = {
            'asset_id': str,
            'quantity': int,
            'usage_date': datetime
        }

        self.attribute_map = {
            'asset_id': 'asset_id',
            'quantity': 'quantity',
            'usage_date': 'usage_date'
        }

        self._asset_id = asset_id
        self._quantity = quantity
        self._usage_date = usage_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssetUsage':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The asset_usage of this AssetUsage.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_id(self):
        """Gets the asset_id of this AssetUsage.

        Specifies the Id of the asset that was used.

        :return: The asset_id of this AssetUsage.
        :rtype: str
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this AssetUsage.

        Specifies the Id of the asset that was used.

        :param asset_id: The asset_id of this AssetUsage.
        :type asset_id: str
        """

        self._asset_id = asset_id

    @property
    def quantity(self):
        """Gets the quantity of this AssetUsage.

        Specifies the number of times the asset was used.

        :return: The quantity of this AssetUsage.
        :rtype: int
        """
        return self._quantity

    @quantity.setter
    def quantity(self, quantity):
        """Sets the quantity of this AssetUsage.

        Specifies the number of times the asset was used.

        :param quantity: The quantity of this AssetUsage.
        :type quantity: int
        """

        self._quantity = quantity

    @property
    def usage_date(self):
        """Gets the usage_date of this AssetUsage.

        Identifies the date the asset was used, in ISO 8601 format (e.g., YYYY-MM-DD), time is not needed.

        :return: The usage_date of this AssetUsage.
        :rtype: datetime
        """
        return self._usage_date

    @usage_date.setter
    def usage_date(self, usage_date):
        """Sets the usage_date of this AssetUsage.

        Identifies the date the asset was used, in ISO 8601 format (e.g., YYYY-MM-DD), time is not needed.

        :param usage_date: The usage_date of this AssetUsage.
        :type usage_date: datetime
        """

        self._usage_date = usage_date
