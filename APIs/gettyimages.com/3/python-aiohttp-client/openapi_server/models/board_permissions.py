# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BoardPermissions(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, can_add_assets: bool=None, can_delete_board: bool=None, can_invite_to_board: bool=None, can_remove_assets: bool=None, can_update_description: bool=None, can_update_name: bool=None):
        """BoardPermissions - a model defined in OpenAPI

        :param can_add_assets: The can_add_assets of this BoardPermissions.
        :param can_delete_board: The can_delete_board of this BoardPermissions.
        :param can_invite_to_board: The can_invite_to_board of this BoardPermissions.
        :param can_remove_assets: The can_remove_assets of this BoardPermissions.
        :param can_update_description: The can_update_description of this BoardPermissions.
        :param can_update_name: The can_update_name of this BoardPermissions.
        """
        self.openapi_types = {
            'can_add_assets': bool,
            'can_delete_board': bool,
            'can_invite_to_board': bool,
            'can_remove_assets': bool,
            'can_update_description': bool,
            'can_update_name': bool
        }

        self.attribute_map = {
            'can_add_assets': 'can_add_assets',
            'can_delete_board': 'can_delete_board',
            'can_invite_to_board': 'can_invite_to_board',
            'can_remove_assets': 'can_remove_assets',
            'can_update_description': 'can_update_description',
            'can_update_name': 'can_update_name'
        }

        self._can_add_assets = can_add_assets
        self._can_delete_board = can_delete_board
        self._can_invite_to_board = can_invite_to_board
        self._can_remove_assets = can_remove_assets
        self._can_update_description = can_update_description
        self._can_update_name = can_update_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BoardPermissions':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BoardPermissions of this BoardPermissions.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def can_add_assets(self):
        """Gets the can_add_assets of this BoardPermissions.


        :return: The can_add_assets of this BoardPermissions.
        :rtype: bool
        """
        return self._can_add_assets

    @can_add_assets.setter
    def can_add_assets(self, can_add_assets):
        """Sets the can_add_assets of this BoardPermissions.


        :param can_add_assets: The can_add_assets of this BoardPermissions.
        :type can_add_assets: bool
        """

        self._can_add_assets = can_add_assets

    @property
    def can_delete_board(self):
        """Gets the can_delete_board of this BoardPermissions.


        :return: The can_delete_board of this BoardPermissions.
        :rtype: bool
        """
        return self._can_delete_board

    @can_delete_board.setter
    def can_delete_board(self, can_delete_board):
        """Sets the can_delete_board of this BoardPermissions.


        :param can_delete_board: The can_delete_board of this BoardPermissions.
        :type can_delete_board: bool
        """

        self._can_delete_board = can_delete_board

    @property
    def can_invite_to_board(self):
        """Gets the can_invite_to_board of this BoardPermissions.


        :return: The can_invite_to_board of this BoardPermissions.
        :rtype: bool
        """
        return self._can_invite_to_board

    @can_invite_to_board.setter
    def can_invite_to_board(self, can_invite_to_board):
        """Sets the can_invite_to_board of this BoardPermissions.


        :param can_invite_to_board: The can_invite_to_board of this BoardPermissions.
        :type can_invite_to_board: bool
        """

        self._can_invite_to_board = can_invite_to_board

    @property
    def can_remove_assets(self):
        """Gets the can_remove_assets of this BoardPermissions.


        :return: The can_remove_assets of this BoardPermissions.
        :rtype: bool
        """
        return self._can_remove_assets

    @can_remove_assets.setter
    def can_remove_assets(self, can_remove_assets):
        """Sets the can_remove_assets of this BoardPermissions.


        :param can_remove_assets: The can_remove_assets of this BoardPermissions.
        :type can_remove_assets: bool
        """

        self._can_remove_assets = can_remove_assets

    @property
    def can_update_description(self):
        """Gets the can_update_description of this BoardPermissions.


        :return: The can_update_description of this BoardPermissions.
        :rtype: bool
        """
        return self._can_update_description

    @can_update_description.setter
    def can_update_description(self, can_update_description):
        """Sets the can_update_description of this BoardPermissions.


        :param can_update_description: The can_update_description of this BoardPermissions.
        :type can_update_description: bool
        """

        self._can_update_description = can_update_description

    @property
    def can_update_name(self):
        """Gets the can_update_name of this BoardPermissions.


        :return: The can_update_name of this BoardPermissions.
        :rtype: bool
        """
        return self._can_update_name

    @can_update_name.setter
    def can_update_name(self, can_update_name):
        """Sets the can_update_name of this BoardPermissions.


        :param can_update_name: The can_update_name of this BoardPermissions.
        :type can_update_name: bool
        """

        self._can_update_name = can_update_name
