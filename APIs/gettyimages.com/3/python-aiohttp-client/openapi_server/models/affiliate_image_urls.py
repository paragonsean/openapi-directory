# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AffiliateImageUrls(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, large: str=None, large_height: int=None, large_width: int=None, medium: str=None, medium_height: int=None, medium_width: int=None, small: str=None, small_height: int=None, small_width: int=None):
        """AffiliateImageUrls - a model defined in OpenAPI

        :param large: The large of this AffiliateImageUrls.
        :param large_height: The large_height of this AffiliateImageUrls.
        :param large_width: The large_width of this AffiliateImageUrls.
        :param medium: The medium of this AffiliateImageUrls.
        :param medium_height: The medium_height of this AffiliateImageUrls.
        :param medium_width: The medium_width of this AffiliateImageUrls.
        :param small: The small of this AffiliateImageUrls.
        :param small_height: The small_height of this AffiliateImageUrls.
        :param small_width: The small_width of this AffiliateImageUrls.
        """
        self.openapi_types = {
            'large': str,
            'large_height': int,
            'large_width': int,
            'medium': str,
            'medium_height': int,
            'medium_width': int,
            'small': str,
            'small_height': int,
            'small_width': int
        }

        self.attribute_map = {
            'large': 'large',
            'large_height': 'large_height',
            'large_width': 'large_width',
            'medium': 'medium',
            'medium_height': 'medium_height',
            'medium_width': 'medium_width',
            'small': 'small',
            'small_height': 'small_height',
            'small_width': 'small_width'
        }

        self._large = large
        self._large_height = large_height
        self._large_width = large_width
        self._medium = medium
        self._medium_height = medium_height
        self._medium_width = medium_width
        self._small = small
        self._small_height = small_height
        self._small_width = small_width

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AffiliateImageUrls':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AffiliateImageUrls of this AffiliateImageUrls.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def large(self):
        """Gets the large of this AffiliateImageUrls.


        :return: The large of this AffiliateImageUrls.
        :rtype: str
        """
        return self._large

    @large.setter
    def large(self, large):
        """Sets the large of this AffiliateImageUrls.


        :param large: The large of this AffiliateImageUrls.
        :type large: str
        """

        self._large = large

    @property
    def large_height(self):
        """Gets the large_height of this AffiliateImageUrls.


        :return: The large_height of this AffiliateImageUrls.
        :rtype: int
        """
        return self._large_height

    @large_height.setter
    def large_height(self, large_height):
        """Sets the large_height of this AffiliateImageUrls.


        :param large_height: The large_height of this AffiliateImageUrls.
        :type large_height: int
        """

        self._large_height = large_height

    @property
    def large_width(self):
        """Gets the large_width of this AffiliateImageUrls.


        :return: The large_width of this AffiliateImageUrls.
        :rtype: int
        """
        return self._large_width

    @large_width.setter
    def large_width(self, large_width):
        """Sets the large_width of this AffiliateImageUrls.


        :param large_width: The large_width of this AffiliateImageUrls.
        :type large_width: int
        """

        self._large_width = large_width

    @property
    def medium(self):
        """Gets the medium of this AffiliateImageUrls.


        :return: The medium of this AffiliateImageUrls.
        :rtype: str
        """
        return self._medium

    @medium.setter
    def medium(self, medium):
        """Sets the medium of this AffiliateImageUrls.


        :param medium: The medium of this AffiliateImageUrls.
        :type medium: str
        """

        self._medium = medium

    @property
    def medium_height(self):
        """Gets the medium_height of this AffiliateImageUrls.


        :return: The medium_height of this AffiliateImageUrls.
        :rtype: int
        """
        return self._medium_height

    @medium_height.setter
    def medium_height(self, medium_height):
        """Sets the medium_height of this AffiliateImageUrls.


        :param medium_height: The medium_height of this AffiliateImageUrls.
        :type medium_height: int
        """

        self._medium_height = medium_height

    @property
    def medium_width(self):
        """Gets the medium_width of this AffiliateImageUrls.


        :return: The medium_width of this AffiliateImageUrls.
        :rtype: int
        """
        return self._medium_width

    @medium_width.setter
    def medium_width(self, medium_width):
        """Sets the medium_width of this AffiliateImageUrls.


        :param medium_width: The medium_width of this AffiliateImageUrls.
        :type medium_width: int
        """

        self._medium_width = medium_width

    @property
    def small(self):
        """Gets the small of this AffiliateImageUrls.


        :return: The small of this AffiliateImageUrls.
        :rtype: str
        """
        return self._small

    @small.setter
    def small(self, small):
        """Sets the small of this AffiliateImageUrls.


        :param small: The small of this AffiliateImageUrls.
        :type small: str
        """

        self._small = small

    @property
    def small_height(self):
        """Gets the small_height of this AffiliateImageUrls.


        :return: The small_height of this AffiliateImageUrls.
        :rtype: int
        """
        return self._small_height

    @small_height.setter
    def small_height(self, small_height):
        """Sets the small_height of this AffiliateImageUrls.


        :param small_height: The small_height of this AffiliateImageUrls.
        :type small_height: int
        """

        self._small_height = small_height

    @property
    def small_width(self):
        """Gets the small_width of this AffiliateImageUrls.


        :return: The small_width of this AffiliateImageUrls.
        :rtype: int
        """
        return self._small_width

    @small_width.setter
    def small_width(self, small_width):
        """Sets the small_width of this AffiliateImageUrls.


        :param small_width: The small_width of this AffiliateImageUrls.
        :type small_width: int
        """

        self._small_width = small_width
