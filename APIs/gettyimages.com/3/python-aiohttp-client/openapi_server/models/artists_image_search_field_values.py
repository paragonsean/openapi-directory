# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ArtistsImageSearchFieldValues(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    ID = 'id'
    ALLOWED_USE = 'allowed_use'
    ALTERNATIVE_IDS = 'alternative_ids'
    ARTIST = 'artist'
    ASSET_FAMILY = 'asset_family'
    ASSET_TYPE = 'asset_type'
    CALL_FOR_IMAGE = 'call_for_image'
    CAPTION = 'caption'
    COLLECTION_ID = 'collection_id'
    COLLECTION_CODE = 'collection_code'
    COLLECTION_NAME = 'collection_name'
    COMP = 'comp'
    COPYRIGHT = 'copyright'
    DATE_CREATED = 'date_created'
    DATE_SUBMITTED = 'date_submitted'
    DETAIL_SET = 'detail_set'
    DISPLAY_SET = 'display_set'
    EDITORIAL_SEGMENTS = 'editorial_segments'
    EVENT_IDS = 'event_ids'
    GRAPHICAL_STYLE = 'graphical_style'
    KEYWORDS = 'keywords'
    LICENSE_MODEL = 'license_model'
    MAX_DIMENSIONS = 'max_dimensions'
    ORIENTATION = 'orientation'
    PREVIEW = 'preview'
    PRODUCT_TYPES = 'product_types'
    QUALITY_RANK = 'quality_rank'
    REFERRAL_DESTINATIONS = 'referral_destinations'
    SUMMARY_SET = 'summary_set'
    THUMB = 'thumb'
    TITLE = 'title'

    def __init__(self):
        """ArtistsImageSearchFieldValues - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ArtistsImageSearchFieldValues':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ArtistsImageSearchFieldValues of this ArtistsImageSearchFieldValues.
        """
        return util.deserialize_model(dikt, cls)
