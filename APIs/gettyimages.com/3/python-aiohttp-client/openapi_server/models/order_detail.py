# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asset_id_from_order import AssetIdFromOrder
from openapi_server.models.order_notes import OrderNotes
from openapi_server import util


class OrderDetail(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, assets: List[AssetIdFromOrder]=None, end_client: str=None, id: str=None, invoice_number: str=None, notes: OrderNotes=None, order_date: datetime=None):
        """OrderDetail - a model defined in OpenAPI

        :param assets: The assets of this OrderDetail.
        :param end_client: The end_client of this OrderDetail.
        :param id: The id of this OrderDetail.
        :param invoice_number: The invoice_number of this OrderDetail.
        :param notes: The notes of this OrderDetail.
        :param order_date: The order_date of this OrderDetail.
        """
        self.openapi_types = {
            'assets': List[AssetIdFromOrder],
            'end_client': str,
            'id': str,
            'invoice_number': str,
            'notes': OrderNotes,
            'order_date': datetime
        }

        self.attribute_map = {
            'assets': 'assets',
            'end_client': 'end_client',
            'id': 'id',
            'invoice_number': 'invoice_number',
            'notes': 'notes',
            'order_date': 'order_date'
        }

        self._assets = assets
        self._end_client = end_client
        self._id = id
        self._invoice_number = invoice_number
        self._notes = notes
        self._order_date = order_date

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderDetail':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderDetail of this OrderDetail.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def assets(self):
        """Gets the assets of this OrderDetail.


        :return: The assets of this OrderDetail.
        :rtype: List[AssetIdFromOrder]
        """
        return self._assets

    @assets.setter
    def assets(self, assets):
        """Sets the assets of this OrderDetail.


        :param assets: The assets of this OrderDetail.
        :type assets: List[AssetIdFromOrder]
        """

        self._assets = assets

    @property
    def end_client(self):
        """Gets the end_client of this OrderDetail.


        :return: The end_client of this OrderDetail.
        :rtype: str
        """
        return self._end_client

    @end_client.setter
    def end_client(self, end_client):
        """Sets the end_client of this OrderDetail.


        :param end_client: The end_client of this OrderDetail.
        :type end_client: str
        """

        self._end_client = end_client

    @property
    def id(self):
        """Gets the id of this OrderDetail.


        :return: The id of this OrderDetail.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this OrderDetail.


        :param id: The id of this OrderDetail.
        :type id: str
        """

        self._id = id

    @property
    def invoice_number(self):
        """Gets the invoice_number of this OrderDetail.


        :return: The invoice_number of this OrderDetail.
        :rtype: str
        """
        return self._invoice_number

    @invoice_number.setter
    def invoice_number(self, invoice_number):
        """Sets the invoice_number of this OrderDetail.


        :param invoice_number: The invoice_number of this OrderDetail.
        :type invoice_number: str
        """

        self._invoice_number = invoice_number

    @property
    def notes(self):
        """Gets the notes of this OrderDetail.


        :return: The notes of this OrderDetail.
        :rtype: OrderNotes
        """
        return self._notes

    @notes.setter
    def notes(self, notes):
        """Sets the notes of this OrderDetail.


        :param notes: The notes of this OrderDetail.
        :type notes: OrderNotes
        """

        self._notes = notes

    @property
    def order_date(self):
        """Gets the order_date of this OrderDetail.


        :return: The order_date of this OrderDetail.
        :rtype: datetime
        """
        return self._order_date

    @order_date.setter
    def order_date(self, order_date):
        """Sets the order_date of this OrderDetail.


        :param order_date: The order_date of this OrderDetail.
        :type order_date: datetime
        """

        self._order_date = order_date
