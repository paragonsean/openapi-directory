# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.collaborator import Collaborator
from openapi_server.models.comment_permissions import CommentPermissions
from openapi_server import util


class Comment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, created_by: Collaborator=None, date_created: datetime=None, id: str=None, permissions: CommentPermissions=None, text: str=None):
        """Comment - a model defined in OpenAPI

        :param created_by: The created_by of this Comment.
        :param date_created: The date_created of this Comment.
        :param id: The id of this Comment.
        :param permissions: The permissions of this Comment.
        :param text: The text of this Comment.
        """
        self.openapi_types = {
            'created_by': Collaborator,
            'date_created': datetime,
            'id': str,
            'permissions': CommentPermissions,
            'text': str
        }

        self.attribute_map = {
            'created_by': 'created_by',
            'date_created': 'date_created',
            'id': 'id',
            'permissions': 'permissions',
            'text': 'text'
        }

        self._created_by = created_by
        self._date_created = date_created
        self._id = id
        self._permissions = permissions
        self._text = text

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Comment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Comment of this Comment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def created_by(self):
        """Gets the created_by of this Comment.


        :return: The created_by of this Comment.
        :rtype: Collaborator
        """
        return self._created_by

    @created_by.setter
    def created_by(self, created_by):
        """Sets the created_by of this Comment.


        :param created_by: The created_by of this Comment.
        :type created_by: Collaborator
        """

        self._created_by = created_by

    @property
    def date_created(self):
        """Gets the date_created of this Comment.


        :return: The date_created of this Comment.
        :rtype: datetime
        """
        return self._date_created

    @date_created.setter
    def date_created(self, date_created):
        """Sets the date_created of this Comment.


        :param date_created: The date_created of this Comment.
        :type date_created: datetime
        """

        self._date_created = date_created

    @property
    def id(self):
        """Gets the id of this Comment.


        :return: The id of this Comment.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Comment.


        :param id: The id of this Comment.
        :type id: str
        """

        self._id = id

    @property
    def permissions(self):
        """Gets the permissions of this Comment.


        :return: The permissions of this Comment.
        :rtype: CommentPermissions
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this Comment.


        :param permissions: The permissions of this Comment.
        :type permissions: CommentPermissions
        """

        self._permissions = permissions

    @property
    def text(self):
        """Gets the text of this Comment.


        :return: The text of this Comment.
        :rtype: str
        """
        return self._text

    @text.setter
    def text(self, text):
        """Sets the text of this Comment.


        :param text: The text of this Comment.
        :type text: str
        """

        self._text = text
