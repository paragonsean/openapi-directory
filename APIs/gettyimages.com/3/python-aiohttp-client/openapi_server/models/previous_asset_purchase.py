# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class PreviousAssetPurchase(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_id: str=None, asset_type: str=None, date_purchased: datetime=None, download_uri: str=None, file_size_in_bytes: str=None, license_model: str=None, order_id: str=None, purchased_by: str=None, size_name: str=None, thumb_uri: str=None):
        """PreviousAssetPurchase - a model defined in OpenAPI

        :param asset_id: The asset_id of this PreviousAssetPurchase.
        :param asset_type: The asset_type of this PreviousAssetPurchase.
        :param date_purchased: The date_purchased of this PreviousAssetPurchase.
        :param download_uri: The download_uri of this PreviousAssetPurchase.
        :param file_size_in_bytes: The file_size_in_bytes of this PreviousAssetPurchase.
        :param license_model: The license_model of this PreviousAssetPurchase.
        :param order_id: The order_id of this PreviousAssetPurchase.
        :param purchased_by: The purchased_by of this PreviousAssetPurchase.
        :param size_name: The size_name of this PreviousAssetPurchase.
        :param thumb_uri: The thumb_uri of this PreviousAssetPurchase.
        """
        self.openapi_types = {
            'asset_id': str,
            'asset_type': str,
            'date_purchased': datetime,
            'download_uri': str,
            'file_size_in_bytes': str,
            'license_model': str,
            'order_id': str,
            'purchased_by': str,
            'size_name': str,
            'thumb_uri': str
        }

        self.attribute_map = {
            'asset_id': 'asset_id',
            'asset_type': 'asset_type',
            'date_purchased': 'date_purchased',
            'download_uri': 'download_uri',
            'file_size_in_bytes': 'file_size_in_bytes',
            'license_model': 'license_model',
            'order_id': 'order_id',
            'purchased_by': 'purchased_by',
            'size_name': 'size_name',
            'thumb_uri': 'thumb_uri'
        }

        self._asset_id = asset_id
        self._asset_type = asset_type
        self._date_purchased = date_purchased
        self._download_uri = download_uri
        self._file_size_in_bytes = file_size_in_bytes
        self._license_model = license_model
        self._order_id = order_id
        self._purchased_by = purchased_by
        self._size_name = size_name
        self._thumb_uri = thumb_uri

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PreviousAssetPurchase':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PreviousAssetPurchase of this PreviousAssetPurchase.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_id(self):
        """Gets the asset_id of this PreviousAssetPurchase.


        :return: The asset_id of this PreviousAssetPurchase.
        :rtype: str
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this PreviousAssetPurchase.


        :param asset_id: The asset_id of this PreviousAssetPurchase.
        :type asset_id: str
        """

        self._asset_id = asset_id

    @property
    def asset_type(self):
        """Gets the asset_type of this PreviousAssetPurchase.


        :return: The asset_type of this PreviousAssetPurchase.
        :rtype: str
        """
        return self._asset_type

    @asset_type.setter
    def asset_type(self, asset_type):
        """Sets the asset_type of this PreviousAssetPurchase.


        :param asset_type: The asset_type of this PreviousAssetPurchase.
        :type asset_type: str
        """

        self._asset_type = asset_type

    @property
    def date_purchased(self):
        """Gets the date_purchased of this PreviousAssetPurchase.


        :return: The date_purchased of this PreviousAssetPurchase.
        :rtype: datetime
        """
        return self._date_purchased

    @date_purchased.setter
    def date_purchased(self, date_purchased):
        """Sets the date_purchased of this PreviousAssetPurchase.


        :param date_purchased: The date_purchased of this PreviousAssetPurchase.
        :type date_purchased: datetime
        """

        self._date_purchased = date_purchased

    @property
    def download_uri(self):
        """Gets the download_uri of this PreviousAssetPurchase.


        :return: The download_uri of this PreviousAssetPurchase.
        :rtype: str
        """
        return self._download_uri

    @download_uri.setter
    def download_uri(self, download_uri):
        """Sets the download_uri of this PreviousAssetPurchase.


        :param download_uri: The download_uri of this PreviousAssetPurchase.
        :type download_uri: str
        """

        self._download_uri = download_uri

    @property
    def file_size_in_bytes(self):
        """Gets the file_size_in_bytes of this PreviousAssetPurchase.


        :return: The file_size_in_bytes of this PreviousAssetPurchase.
        :rtype: str
        """
        return self._file_size_in_bytes

    @file_size_in_bytes.setter
    def file_size_in_bytes(self, file_size_in_bytes):
        """Sets the file_size_in_bytes of this PreviousAssetPurchase.


        :param file_size_in_bytes: The file_size_in_bytes of this PreviousAssetPurchase.
        :type file_size_in_bytes: str
        """

        self._file_size_in_bytes = file_size_in_bytes

    @property
    def license_model(self):
        """Gets the license_model of this PreviousAssetPurchase.


        :return: The license_model of this PreviousAssetPurchase.
        :rtype: str
        """
        return self._license_model

    @license_model.setter
    def license_model(self, license_model):
        """Sets the license_model of this PreviousAssetPurchase.


        :param license_model: The license_model of this PreviousAssetPurchase.
        :type license_model: str
        """

        self._license_model = license_model

    @property
    def order_id(self):
        """Gets the order_id of this PreviousAssetPurchase.


        :return: The order_id of this PreviousAssetPurchase.
        :rtype: str
        """
        return self._order_id

    @order_id.setter
    def order_id(self, order_id):
        """Sets the order_id of this PreviousAssetPurchase.


        :param order_id: The order_id of this PreviousAssetPurchase.
        :type order_id: str
        """

        self._order_id = order_id

    @property
    def purchased_by(self):
        """Gets the purchased_by of this PreviousAssetPurchase.


        :return: The purchased_by of this PreviousAssetPurchase.
        :rtype: str
        """
        return self._purchased_by

    @purchased_by.setter
    def purchased_by(self, purchased_by):
        """Sets the purchased_by of this PreviousAssetPurchase.


        :param purchased_by: The purchased_by of this PreviousAssetPurchase.
        :type purchased_by: str
        """

        self._purchased_by = purchased_by

    @property
    def size_name(self):
        """Gets the size_name of this PreviousAssetPurchase.


        :return: The size_name of this PreviousAssetPurchase.
        :rtype: str
        """
        return self._size_name

    @size_name.setter
    def size_name(self, size_name):
        """Sets the size_name of this PreviousAssetPurchase.


        :param size_name: The size_name of this PreviousAssetPurchase.
        :type size_name: str
        """

        self._size_name = size_name

    @property
    def thumb_uri(self):
        """Gets the thumb_uri of this PreviousAssetPurchase.


        :return: The thumb_uri of this PreviousAssetPurchase.
        :rtype: str
        """
        return self._thumb_uri

    @thumb_uri.setter
    def thumb_uri(self, thumb_uri):
        """Sets the thumb_uri of this PreviousAssetPurchase.


        :param thumb_uri: The thumb_uri of this PreviousAssetPurchase.
        :type thumb_uri: str
        """

        self._thumb_uri = thumb_uri
