# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.dimensions import Dimensions
from openapi_server.models.download_details import DownloadDetails
from openapi_server.models.user import User
from openapi_server import util


class HistoricalDownload(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, agreement_name: str=None, asset_type: str=None, date_downloaded: datetime=None, dimensions: Dimensions=None, download_details: DownloadDetails=None, download_source: str=None, id: str=None, product_id: int=None, product_type: str=None, size_name: str=None, thumb_uri: str=None, user: User=None):
        """HistoricalDownload - a model defined in OpenAPI

        :param agreement_name: The agreement_name of this HistoricalDownload.
        :param asset_type: The asset_type of this HistoricalDownload.
        :param date_downloaded: The date_downloaded of this HistoricalDownload.
        :param dimensions: The dimensions of this HistoricalDownload.
        :param download_details: The download_details of this HistoricalDownload.
        :param download_source: The download_source of this HistoricalDownload.
        :param id: The id of this HistoricalDownload.
        :param product_id: The product_id of this HistoricalDownload.
        :param product_type: The product_type of this HistoricalDownload.
        :param size_name: The size_name of this HistoricalDownload.
        :param thumb_uri: The thumb_uri of this HistoricalDownload.
        :param user: The user of this HistoricalDownload.
        """
        self.openapi_types = {
            'agreement_name': str,
            'asset_type': str,
            'date_downloaded': datetime,
            'dimensions': Dimensions,
            'download_details': DownloadDetails,
            'download_source': str,
            'id': str,
            'product_id': int,
            'product_type': str,
            'size_name': str,
            'thumb_uri': str,
            'user': User
        }

        self.attribute_map = {
            'agreement_name': 'agreement_name',
            'asset_type': 'asset_type',
            'date_downloaded': 'date_downloaded',
            'dimensions': 'dimensions',
            'download_details': 'download_details',
            'download_source': 'download_source',
            'id': 'id',
            'product_id': 'product_id',
            'product_type': 'product_type',
            'size_name': 'size_name',
            'thumb_uri': 'thumb_uri',
            'user': 'user'
        }

        self._agreement_name = agreement_name
        self._asset_type = asset_type
        self._date_downloaded = date_downloaded
        self._dimensions = dimensions
        self._download_details = download_details
        self._download_source = download_source
        self._id = id
        self._product_id = product_id
        self._product_type = product_type
        self._size_name = size_name
        self._thumb_uri = thumb_uri
        self._user = user

    @classmethod
    def from_dict(cls, dikt: dict) -> 'HistoricalDownload':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The HistoricalDownload of this HistoricalDownload.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def agreement_name(self):
        """Gets the agreement_name of this HistoricalDownload.


        :return: The agreement_name of this HistoricalDownload.
        :rtype: str
        """
        return self._agreement_name

    @agreement_name.setter
    def agreement_name(self, agreement_name):
        """Sets the agreement_name of this HistoricalDownload.


        :param agreement_name: The agreement_name of this HistoricalDownload.
        :type agreement_name: str
        """

        self._agreement_name = agreement_name

    @property
    def asset_type(self):
        """Gets the asset_type of this HistoricalDownload.


        :return: The asset_type of this HistoricalDownload.
        :rtype: str
        """
        return self._asset_type

    @asset_type.setter
    def asset_type(self, asset_type):
        """Sets the asset_type of this HistoricalDownload.


        :param asset_type: The asset_type of this HistoricalDownload.
        :type asset_type: str
        """

        self._asset_type = asset_type

    @property
    def date_downloaded(self):
        """Gets the date_downloaded of this HistoricalDownload.


        :return: The date_downloaded of this HistoricalDownload.
        :rtype: datetime
        """
        return self._date_downloaded

    @date_downloaded.setter
    def date_downloaded(self, date_downloaded):
        """Sets the date_downloaded of this HistoricalDownload.


        :param date_downloaded: The date_downloaded of this HistoricalDownload.
        :type date_downloaded: datetime
        """

        self._date_downloaded = date_downloaded

    @property
    def dimensions(self):
        """Gets the dimensions of this HistoricalDownload.


        :return: The dimensions of this HistoricalDownload.
        :rtype: Dimensions
        """
        return self._dimensions

    @dimensions.setter
    def dimensions(self, dimensions):
        """Sets the dimensions of this HistoricalDownload.


        :param dimensions: The dimensions of this HistoricalDownload.
        :type dimensions: Dimensions
        """

        self._dimensions = dimensions

    @property
    def download_details(self):
        """Gets the download_details of this HistoricalDownload.


        :return: The download_details of this HistoricalDownload.
        :rtype: DownloadDetails
        """
        return self._download_details

    @download_details.setter
    def download_details(self, download_details):
        """Sets the download_details of this HistoricalDownload.


        :param download_details: The download_details of this HistoricalDownload.
        :type download_details: DownloadDetails
        """

        self._download_details = download_details

    @property
    def download_source(self):
        """Gets the download_source of this HistoricalDownload.


        :return: The download_source of this HistoricalDownload.
        :rtype: str
        """
        return self._download_source

    @download_source.setter
    def download_source(self, download_source):
        """Sets the download_source of this HistoricalDownload.


        :param download_source: The download_source of this HistoricalDownload.
        :type download_source: str
        """

        self._download_source = download_source

    @property
    def id(self):
        """Gets the id of this HistoricalDownload.


        :return: The id of this HistoricalDownload.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this HistoricalDownload.


        :param id: The id of this HistoricalDownload.
        :type id: str
        """

        self._id = id

    @property
    def product_id(self):
        """Gets the product_id of this HistoricalDownload.


        :return: The product_id of this HistoricalDownload.
        :rtype: int
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this HistoricalDownload.


        :param product_id: The product_id of this HistoricalDownload.
        :type product_id: int
        """

        self._product_id = product_id

    @property
    def product_type(self):
        """Gets the product_type of this HistoricalDownload.


        :return: The product_type of this HistoricalDownload.
        :rtype: str
        """
        return self._product_type

    @product_type.setter
    def product_type(self, product_type):
        """Sets the product_type of this HistoricalDownload.


        :param product_type: The product_type of this HistoricalDownload.
        :type product_type: str
        """

        self._product_type = product_type

    @property
    def size_name(self):
        """Gets the size_name of this HistoricalDownload.


        :return: The size_name of this HistoricalDownload.
        :rtype: str
        """
        return self._size_name

    @size_name.setter
    def size_name(self, size_name):
        """Sets the size_name of this HistoricalDownload.


        :param size_name: The size_name of this HistoricalDownload.
        :type size_name: str
        """

        self._size_name = size_name

    @property
    def thumb_uri(self):
        """Gets the thumb_uri of this HistoricalDownload.


        :return: The thumb_uri of this HistoricalDownload.
        :rtype: str
        """
        return self._thumb_uri

    @thumb_uri.setter
    def thumb_uri(self, thumb_uri):
        """Sets the thumb_uri of this HistoricalDownload.


        :param thumb_uri: The thumb_uri of this HistoricalDownload.
        :type thumb_uri: str
        """

        self._thumb_uri = thumb_uri

    @property
    def user(self):
        """Gets the user of this HistoricalDownload.


        :return: The user of this HistoricalDownload.
        :rtype: User
        """
        return self._user

    @user.setter
    def user(self, user):
        """Sets the user of this HistoricalDownload.


        :param user: The user of this HistoricalDownload.
        :type user: User
        """

        self._user = user
