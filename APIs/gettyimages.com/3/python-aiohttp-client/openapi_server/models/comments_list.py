# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.board_comment_permissions import BoardCommentPermissions
from openapi_server.models.comment import Comment
from openapi_server import util


class CommentsList(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, comments: List[Comment]=None, permissions: BoardCommentPermissions=None):
        """CommentsList - a model defined in OpenAPI

        :param comments: The comments of this CommentsList.
        :param permissions: The permissions of this CommentsList.
        """
        self.openapi_types = {
            'comments': List[Comment],
            'permissions': BoardCommentPermissions
        }

        self.attribute_map = {
            'comments': 'comments',
            'permissions': 'permissions'
        }

        self._comments = comments
        self._permissions = permissions

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CommentsList':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The CommentsList of this CommentsList.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def comments(self):
        """Gets the comments of this CommentsList.


        :return: The comments of this CommentsList.
        :rtype: List[Comment]
        """
        return self._comments

    @comments.setter
    def comments(self, comments):
        """Sets the comments of this CommentsList.


        :param comments: The comments of this CommentsList.
        :type comments: List[Comment]
        """

        self._comments = comments

    @property
    def permissions(self):
        """Gets the permissions of this CommentsList.


        :return: The permissions of this CommentsList.
        :rtype: BoardCommentPermissions
        """
        return self._permissions

    @permissions.setter
    def permissions(self, permissions):
        """Sets the permissions of this CommentsList.


        :param permissions: The permissions of this CommentsList.
        :type permissions: BoardCommentPermissions
        """

        self._permissions = permissions
