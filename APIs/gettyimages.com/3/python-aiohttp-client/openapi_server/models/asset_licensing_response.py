# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.extended_licenses import ExtendedLicenses
from openapi_server import util


class AssetLicensingResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acquired_licenses: List[ExtendedLicenses]=None, credits_used: int=None):
        """AssetLicensingResponse - a model defined in OpenAPI

        :param acquired_licenses: The acquired_licenses of this AssetLicensingResponse.
        :param credits_used: The credits_used of this AssetLicensingResponse.
        """
        self.openapi_types = {
            'acquired_licenses': List[ExtendedLicenses],
            'credits_used': int
        }

        self.attribute_map = {
            'acquired_licenses': 'acquired_licenses',
            'credits_used': 'credits_used'
        }

        self._acquired_licenses = acquired_licenses
        self._credits_used = credits_used

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssetLicensingResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssetLicensingResponse of this AssetLicensingResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acquired_licenses(self):
        """Gets the acquired_licenses of this AssetLicensingResponse.


        :return: The acquired_licenses of this AssetLicensingResponse.
        :rtype: List[ExtendedLicenses]
        """
        return self._acquired_licenses

    @acquired_licenses.setter
    def acquired_licenses(self, acquired_licenses):
        """Sets the acquired_licenses of this AssetLicensingResponse.


        :param acquired_licenses: The acquired_licenses of this AssetLicensingResponse.
        :type acquired_licenses: List[ExtendedLicenses]
        """

        self._acquired_licenses = acquired_licenses

    @property
    def credits_used(self):
        """Gets the credits_used of this AssetLicensingResponse.


        :return: The credits_used of this AssetLicensingResponse.
        :rtype: int
        """
        return self._credits_used

    @credits_used.setter
    def credits_used(self, credits_used):
        """Sets the credits_used of this AssetLicensingResponse.


        :param credits_used: The credits_used of this AssetLicensingResponse.
        :type credits_used: int
        """

        self._credits_used = credits_used
