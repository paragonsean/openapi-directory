# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AssetEvent(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_id: str=None, email_address: str=None, timestamp: datetime=None):
        """AssetEvent - a model defined in OpenAPI

        :param asset_id: The asset_id of this AssetEvent.
        :param email_address: The email_address of this AssetEvent.
        :param timestamp: The timestamp of this AssetEvent.
        """
        self.openapi_types = {
            'asset_id': str,
            'email_address': str,
            'timestamp': datetime
        }

        self.attribute_map = {
            'asset_id': 'asset_id',
            'email_address': 'email_address',
            'timestamp': 'timestamp'
        }

        self._asset_id = asset_id
        self._email_address = email_address
        self._timestamp = timestamp

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AssetEvent':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AssetEvent of this AssetEvent.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_id(self):
        """Gets the asset_id of this AssetEvent.


        :return: The asset_id of this AssetEvent.
        :rtype: str
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this AssetEvent.


        :param asset_id: The asset_id of this AssetEvent.
        :type asset_id: str
        """

        self._asset_id = asset_id

    @property
    def email_address(self):
        """Gets the email_address of this AssetEvent.


        :return: The email_address of this AssetEvent.
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this AssetEvent.


        :param email_address: The email_address of this AssetEvent.
        :type email_address: str
        """

        self._email_address = email_address

    @property
    def timestamp(self):
        """Gets the timestamp of this AssetEvent.


        :return: The timestamp of this AssetEvent.
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this AssetEvent.


        :param timestamp: The timestamp of this AssetEvent.
        :type timestamp: datetime
        """

        self._timestamp = timestamp
