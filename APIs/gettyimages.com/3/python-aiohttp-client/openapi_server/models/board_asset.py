# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class BoardAsset(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_id: str=None):
        """BoardAsset - a model defined in OpenAPI

        :param asset_id: The asset_id of this BoardAsset.
        """
        self.openapi_types = {
            'asset_id': str
        }

        self.attribute_map = {
            'asset_id': 'asset_id'
        }

        self._asset_id = asset_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BoardAsset':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The BoardAsset of this BoardAsset.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_id(self):
        """Gets the asset_id of this BoardAsset.


        :return: The asset_id of this BoardAsset.
        :rtype: str
        """
        return self._asset_id

    @asset_id.setter
    def asset_id(self, asset_id):
        """Sets the asset_id of this BoardAsset.


        :param asset_id: The asset_id of this BoardAsset.
        :type asset_id: str
        """
        if asset_id is None:
            raise ValueError("Invalid value for `asset_id`, must not be `None`")

        self._asset_id = asset_id
