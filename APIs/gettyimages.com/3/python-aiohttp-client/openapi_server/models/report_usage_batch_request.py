# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.asset_usage import AssetUsage
from openapi_server import util


class ReportUsageBatchRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, asset_usages: List[AssetUsage]=None):
        """ReportUsageBatchRequest - a model defined in OpenAPI

        :param asset_usages: The asset_usages of this ReportUsageBatchRequest.
        """
        self.openapi_types = {
            'asset_usages': List[AssetUsage]
        }

        self.attribute_map = {
            'asset_usages': 'asset_usages'
        }

        self._asset_usages = asset_usages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ReportUsageBatchRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The report_usage_batch_request of this ReportUsageBatchRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def asset_usages(self):
        """Gets the asset_usages of this ReportUsageBatchRequest.

        Identifies the list of asset id, usage count and date of usage combinations to record.

        :return: The asset_usages of this ReportUsageBatchRequest.
        :rtype: List[AssetUsage]
        """
        return self._asset_usages

    @asset_usages.setter
    def asset_usages(self, asset_usages):
        """Sets the asset_usages of this ReportUsageBatchRequest.

        Identifies the list of asset id, usage count and date of usage combinations to record.

        :param asset_usages: The asset_usages of this ReportUsageBatchRequest.
        :type asset_usages: List[AssetUsage]
        """

        self._asset_usages = asset_usages
