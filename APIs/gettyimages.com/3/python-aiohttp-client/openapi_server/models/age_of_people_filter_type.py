# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AgeOfPeopleFilterType(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    NEWBORN = 'newborn'
    BABY = 'baby'
    CHILD = 'child'
    TEENAGER = 'teenager'
    YOUNG_ADULT = 'young_adult'
    ADULT = 'adult'
    ADULTS_ONLY = 'adults_only'
    MATURE_ADULT = 'mature_adult'
    SENIOR_ADULT = 'senior_adult'
    ENUM_0_MINUS_1_MONTHS = '0-1_months'
    ENUM_2_MINUS_5_MONTHS = '2-5_months'
    ENUM_6_MINUS_11_MONTHS = '6-11_months'
    ENUM_12_MINUS_17_MONTHS = '12-17_months'
    ENUM_18_MINUS_23_MONTHS = '18-23_months'
    ENUM_2_MINUS_3_YEARS = '2-3_years'
    ENUM_4_MINUS_5_YEARS = '4-5_years'
    ENUM_6_MINUS_7_YEARS = '6-7_years'
    ENUM_8_MINUS_9_YEARS = '8-9_years'
    ENUM_10_MINUS_11_YEARS = '10-11_years'
    ENUM_12_MINUS_13_YEARS = '12-13_years'
    ENUM_14_MINUS_15_YEARS = '14-15_years'
    ENUM_16_MINUS_17_YEARS = '16-17_years'
    ENUM_18_MINUS_19_YEARS = '18-19_years'
    ENUM_20_MINUS_24_YEARS = '20-24_years'
    ENUM_20_MINUS_29_YEARS = '20-29_years'
    ENUM_25_MINUS_29_YEARS = '25-29_years'
    ENUM_30_MINUS_34_YEARS = '30-34_years'
    ENUM_30_MINUS_39_YEARS = '30-39_years'
    ENUM_35_MINUS_39_YEARS = '35-39_years'
    ENUM_40_MINUS_44_YEARS = '40-44_years'
    ENUM_40_MINUS_49_YEARS = '40-49_years'
    ENUM_45_MINUS_49_YEARS = '45-49_years'
    ENUM_50_MINUS_54_YEARS = '50-54_years'
    ENUM_50_MINUS_59_YEARS = '50-59_years'
    ENUM_55_MINUS_59_YEARS = '55-59_years'
    ENUM_60_MINUS_64_YEARS = '60-64_years'
    ENUM_60_MINUS_69_YEARS = '60-69_years'
    ENUM_65_MINUS_69_YEARS = '65-69_years'
    ENUM_70_MINUS_79_YEARS = '70-79_years'
    ENUM_80_MINUS_89_YEARS = '80-89_years'
    ENUM_90_PLUS_YEARS = '90_plus_years'
    ENUM_100_OVER = '100_over'

    def __init__(self):
        """AgeOfPeopleFilterType - a model defined in OpenAPI

        """
        self.openapi_types = {
        }

        self.attribute_map = {
        }

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AgeOfPeopleFilterType':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The AgeOfPeopleFilterType of this AgeOfPeopleFilterType.
        """
        return util.deserialize_model(dikt, cls)
