/*
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AgeOfPeopleFilterType;
import org.openapitools.client.model.BlendedImageSortOrder;
import org.openapitools.client.model.CollectionsFilterType;
import org.openapitools.client.model.CompositionsFilterType;
import org.openapitools.client.model.CreateImageSearchFacetsFields;
import org.openapitools.client.model.CreateVideoSearchFacetsFields;
import org.openapitools.client.model.CreativeImageSearchResults;
import org.openapitools.client.model.CreativeImageSortOrder;
import org.openapitools.client.model.CreativeImagesFieldValues;
import org.openapitools.client.model.CreativeVideoSearchResults;
import org.openapitools.client.model.CreativeVideoSortOrder;
import org.openapitools.client.model.CreativeVideosFieldValues;
import org.openapitools.client.model.EditorialGraphicalStyle;
import org.openapitools.client.model.EditorialImageSearchFacetsFields;
import org.openapitools.client.model.EditorialImageSearchResults;
import org.openapitools.client.model.EditorialImagesFieldValues;
import org.openapitools.client.model.EditorialSegmentContract;
import org.openapitools.client.model.EditorialVideoSearchFacetsFields;
import org.openapitools.client.model.EditorialVideoSearchResults;
import org.openapitools.client.model.EditorialVideoType;
import org.openapitools.client.model.EditorialVideosFieldValues;
import org.openapitools.client.model.EthnicityFilterType;
import org.openapitools.client.model.EventFieldValues;
import org.openapitools.client.model.EventSearchSortOrder;
import org.openapitools.client.model.EventsSearchResult;
import org.openapitools.client.model.GraphicalStyle;
import org.openapitools.client.model.GraphicalStylesFilterType;
import org.openapitools.client.model.ImageOrientationRequest;
import org.openapitools.client.model.ImageSearchItemSearchResults;
import org.openapitools.client.model.ImageTechniquesFilterType;
import org.openapitools.client.model.ImagesFieldValues;
import org.openapitools.client.model.LicenseModelVideoRequest;
import org.openapitools.client.model.NumberOfPeopleFilterType;
import java.time.OffsetDateTime;
import org.openapitools.client.model.ReleaseStatus;
import org.openapitools.client.model.SearchByImageResourceResults;
import org.openapitools.client.model.SearchFileType;
import org.openapitools.client.model.SortOrder;
import org.openapitools.client.model.TeeShirtSize;
import org.openapitools.client.model.VideoAspectRatioFilterType;
import org.openapitools.client.model.VideoFormatsRequest;
import org.openapitools.client.model.VideoFrameRates;
import org.openapitools.client.model.VideoOrientationRequest;
import org.openapitools.client.model.ViewpointsFilterType;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SearchApi
 */
@Disabled
public class SearchApiTest {

    private final SearchApi api = new SearchApi();

    /**
     * Upload image for use by the search creative images/videos operations
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3SearchByImageUploadsFileNamePutTest() throws ApiException {
        String fileName = null;
        byte[] body = null;
        api.v3SearchByImageUploadsFileNamePut(fileName, body);
        // TODO: test validations
    }

    /**
     * Search for events
     *
     * Use this endpoint to search Getty Images news, sports and entertainment events. Getty Images photographers and videographers cover editorially relevant events occurring around the world.  All images or video clips produced in association with an event, are assigned the same EventID. EventIDs are part of the meta-data returned in Search Results. Only content produced under a Getty Images brand name (Getty Images News, Getty Images Sports, Getty Images Entertainment, Film Magic, Wire Image) will be consistently assigned an EventID. The Event framework may also be used to group similar content, such as \&quot;Hats from the Royal Wedding\&quot; or \&quot;Odd-ballOffbeat images of the week\&quot;.     You&#39;ll need an API key and access token to use this resource.   You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3SearchEventsGetTest() throws ApiException {
        String acceptLanguage = null;
        String giCountryCode = null;
        EditorialSegmentContract editorialSegment = null;
        OffsetDateTime dateFrom = null;
        OffsetDateTime dateTo = null;
        List<EventFieldValues> fields = null;
        Integer page = null;
        Integer pageSize = null;
        String phrase = null;
        EventSearchSortOrder sortOrder = null;
        EventsSearchResult response = api.v3SearchEventsGet(acceptLanguage, giCountryCode, editorialSegment, dateFrom, dateTo, fields, page, pageSize, phrase, sortOrder);
        // TODO: test validations
    }

    /**
     * Search for creative images based on url
     *
     * Search for **similar creative images** by passing an &#x60;image_url&#x60; to an uploaded image OR an &#x60;asset_id&#x60; of an asset in our catalog.  All responses will have the &#x60;exclude_nudity&#x60; filter automatically applied.  ## Searching by URL  Before calling the search by image endpoint, an image in JPEG format must be uploaded to &#x60;https://api.gettyimages.com/v3/search/by-image/uploads/{CLIENT_IMAGE.jpg}&#x60;, where the client defines the &#x60;{CLIENT_IMAGE.jpg}&#x60; portion of the URL.  For example, using cURL:  &#x60;&#x60;&#x60; sh curl -i -X PUT https://api.gettyimages.com/v3/search/by-image/uploads/my-test-image.jpg -H &#39;Content-Type: image/jpeg&#39; -H &#39;Api-Key: API_KEY&#39; --data-binary \&quot;@testimage.jpg\&quot; &#x60;&#x60;&#x60;  Once the image has been uploaded, use the full URL in the &#x60;image_url&#x60; parameter, e.g. &#x60;image_url&#x3D;https://api.gettyimages.com/v3/search/by-image/uploads/my-test-image.jpg&#x60;.  - Uploaded files must be 10MB or smaller. - Uploads to the same URL will overwrite each other, so ensure that the client application is handling naming uniqueness appropriately. - Uploads expire after 24 hours. - Uploads and searches must be performed using the _same_ API Key.  ## Searching by asset id  When searching by &#x60;asset_id&#x60;, any image or video asset id in the Getty/iStock catalog can be used as the source for similar images. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3SearchImagesCreativeByImageGetTest() throws ApiException {
        String acceptLanguage = null;
        String giCountryCode = null;
        String assetId = null;
        Boolean excludeEditorialUseOnly = null;
        List<CreateImageSearchFacetsFields> facetFields = null;
        Integer facetMaxCount = null;
        List<CreativeImagesFieldValues> fields = null;
        String imageUrl = null;
        Boolean includeFacets = null;
        Integer page = null;
        Integer pageSize = null;
        List<String> productTypes = null;
        SearchByImageResourceResults response = api.v3SearchImagesCreativeByImageGet(acceptLanguage, giCountryCode, assetId, excludeEditorialUseOnly, facetFields, facetMaxCount, fields, imageUrl, includeFacets, page, pageSize, productTypes);
        // TODO: test validations
    }

    /**
     * Search for creative images only
     *
     * Use this endpoint to search our contemporary stock photos, illustrations and archival images.  You&#39;ll need an API key and access token to use this resource.   You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token.  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to  build search response results. The following fields are provided for every image in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;asset_family\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to  build a detailed view of images. The following fields are provided for every image in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,         \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;editorial_segments\&quot;,         \&quot;event_ids\&quot;,         \&quot;graphical_style\&quot;,         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;orientation\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;referral_destinations\&quot;,         \&quot;title\&quot;     ] ] &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most frequently used to build a UI displaying search results. The following fields are provided for every image  in your result set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3SearchImagesCreativeGetTest() throws ApiException {
        String acceptLanguage = null;
        String giCountryCode = null;
        List<AgeOfPeopleFilterType> ageOfPeople = null;
        String artists = null;
        List<String> collectionCodes = null;
        CollectionsFilterType collectionsFilterType = null;
        String color = null;
        List<CompositionsFilterType> compositions = null;
        String downloadProduct = null;
        Boolean embedContentOnly = null;
        List<EthnicityFilterType> ethnicity = null;
        List<Integer> excludeKeywordIds = null;
        Boolean excludeNudity = null;
        Boolean excludeEditorialUseOnly = null;
        List<CreativeImagesFieldValues> fields = null;
        List<SearchFileType> fileTypes = null;
        List<GraphicalStyle> graphicalStyles = null;
        GraphicalStylesFilterType graphicalStylesFilterType = null;
        Boolean includeRelatedSearches = null;
        List<Integer> keywordIds = null;
        TeeShirtSize minimumSize = null;
        List<NumberOfPeopleFilterType> numberOfPeople = null;
        List<ImageOrientationRequest> orientations = null;
        Integer page = null;
        Integer pageSize = null;
        String phrase = null;
        Boolean safeSearch = null;
        CreativeImageSortOrder sortOrder = null;
        List<CreateImageSearchFacetsFields> facetFields = null;
        Boolean includeFacets = null;
        Integer facetMaxCount = null;
        CreativeImageSearchResults response = api.v3SearchImagesCreativeGet(acceptLanguage, giCountryCode, ageOfPeople, artists, collectionCodes, collectionsFilterType, color, compositions, downloadProduct, embedContentOnly, ethnicity, excludeKeywordIds, excludeNudity, excludeEditorialUseOnly, fields, fileTypes, graphicalStyles, graphicalStylesFilterType, includeRelatedSearches, keywordIds, minimumSize, numberOfPeople, orientations, page, pageSize, phrase, safeSearch, sortOrder, facetFields, includeFacets, facetMaxCount);
        // TODO: test validations
    }

    /**
     * Search for editorial images only
     *
     * Use this endpoint to search our editorial stock photos, illustrations and archival images.  Editorial images represent newsworthy events or illustrate matters of general interest, such as news, sport and entertainment and are generally intended for editorial use.  You&#39;ll need an API key and access token to use this resource.  You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token. To include your API token in the search request, add it to the headers as a Bearer token (example in curl):   -H \&quot;Authorization: Bearer &lt;your-token&gt;\&quot;  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every image in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;asset_family\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a detailed view of images. The following fields are provided for every image in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,         \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;editorial_segments\&quot;,         \&quot;event_ids\&quot;,         \&quot;graphical_style\&quot;,         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;orientation\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;referral_destinations\&quot;,         \&quot;title\&quot;     ] ] &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most frequently used to build a UI displaying search results. The following fields are provided for every image in your result set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3SearchImagesEditorialGetTest() throws ApiException {
        String acceptLanguage = null;
        String giCountryCode = null;
        List<AgeOfPeopleFilterType> ageOfPeople = null;
        String artists = null;
        List<String> collectionCodes = null;
        CollectionsFilterType collectionsFilterType = null;
        List<CompositionsFilterType> compositions = null;
        OffsetDateTime dateFrom = null;
        OffsetDateTime dateTo = null;
        String downloadProduct = null;
        List<EditorialSegmentContract> editorialSegments = null;
        Boolean embedContentOnly = null;
        List<EthnicityFilterType> ethnicity = null;
        List<Integer> eventIds = null;
        List<Integer> excludeKeywordIds = null;
        List<EditorialImagesFieldValues> fields = null;
        List<SearchFileType> fileTypes = null;
        List<EditorialGraphicalStyle> graphicalStyles = null;
        GraphicalStylesFilterType graphicalStylesFilterType = null;
        Boolean includeRelatedSearches = null;
        List<Integer> keywordIds = null;
        TeeShirtSize minimumSize = null;
        List<NumberOfPeopleFilterType> numberOfPeople = null;
        List<ImageOrientationRequest> orientations = null;
        Integer page = null;
        Integer pageSize = null;
        String phrase = null;
        SortOrder sortOrder = null;
        List<String> specificPeople = null;
        Integer minimumQualityRank = null;
        List<EditorialImageSearchFacetsFields> facetFields = null;
        Boolean includeFacets = null;
        Integer facetMaxCount = null;
        EditorialImageSearchResults response = api.v3SearchImagesEditorialGet(acceptLanguage, giCountryCode, ageOfPeople, artists, collectionCodes, collectionsFilterType, compositions, dateFrom, dateTo, downloadProduct, editorialSegments, embedContentOnly, ethnicity, eventIds, excludeKeywordIds, fields, fileTypes, graphicalStyles, graphicalStylesFilterType, includeRelatedSearches, keywordIds, minimumSize, numberOfPeople, orientations, page, pageSize, phrase, sortOrder, specificPeople, minimumQualityRank, facetFields, includeFacets, facetMaxCount);
        // TODO: test validations
    }

    /**
     * Search for both creative and editorial images - *** DEPRECATED ***
     *
     * ## _This endpoint draws from such a large diversity of content, the results will not be as relevant as when the more specific Creative or Editorial endpoints are used. Additionally, the response time for this endpoint is slower compared to that for Creative and Editorial-specific endpoints. For these reasons,_ _**it is highly recommended that those endpoints are used instead of this blended endpoint.**_    You&#39;ll need an API key and access token to use this resource.  You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token.&lt;br&gt; To include your API token in the search request, add it to the headers as a Bearer token (example in curl):   -H \&quot;Authorization: Bearer &lt;your-token&gt;\&quot;  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every image in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;asset_family\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a detailed view of images.  The following fields are provided for every image in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,         \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;editorial_segments\&quot;,         \&quot;event_ids\&quot;,         \&quot;graphical_style\&quot;,         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;orientation\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;referral_destinations\&quot;,         \&quot;title\&quot;     ] ] &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most  frequently used to build a UI displaying search results. The following fields are provided for every image in your result set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;  ## Request Usage Considerations  - Specifying the \&quot;entity_details\&quot; response field can have significant performance implications. The field should be used only when necessary. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3SearchImagesGetTest() throws ApiException {
        String acceptLanguage = null;
        String giCountryCode = null;
        List<AgeOfPeopleFilterType> ageOfPeople = null;
        String artists = null;
        List<String> collectionCodes = null;
        CollectionsFilterType collectionsFilterType = null;
        String color = null;
        List<CompositionsFilterType> compositions = null;
        String downloadProduct = null;
        Boolean embedContentOnly = null;
        List<Integer> eventIds = null;
        List<EthnicityFilterType> ethnicity = null;
        Boolean excludeNudity = null;
        List<ImagesFieldValues> fields = null;
        List<SearchFileType> fileTypes = null;
        List<GraphicalStyle> graphicalStyles = null;
        GraphicalStylesFilterType graphicalStylesFilterType = null;
        Boolean includeRelatedSearches = null;
        List<Integer> keywordIds = null;
        TeeShirtSize minimumSize = null;
        List<NumberOfPeopleFilterType> numberOfPeople = null;
        List<ImageOrientationRequest> orientations = null;
        Integer page = null;
        Integer pageSize = null;
        String phrase = null;
        BlendedImageSortOrder sortOrder = null;
        List<String> specificPeople = null;
        ImageSearchItemSearchResults response = api.v3SearchImagesGet(acceptLanguage, giCountryCode, ageOfPeople, artists, collectionCodes, collectionsFilterType, color, compositions, downloadProduct, embedContentOnly, eventIds, ethnicity, excludeNudity, fields, fileTypes, graphicalStyles, graphicalStylesFilterType, includeRelatedSearches, keywordIds, minimumSize, numberOfPeople, orientations, page, pageSize, phrase, sortOrder, specificPeople);
        // TODO: test validations
    }

    /**
     * Search for creative videos based on url
     *
     * Search for **similar creative videos** by passing an &#x60;image_url&#x60; to an uploaded image/frame grab from a video OR an &#x60;asset_id&#x60; of an asset in our catalog.  All responses will have the &#x60;exclude_nudity&#x60; filter automatically applied.  ## Searching by URL  Before calling the search by image endpoint, an image or frame grab in JPEG format must be uploaded to &#x60;https://api.gettyimages.com/v3/search/by-image/uploads/{CLIENT_IMAGE.jpg}&#x60;, where the client defines the &#x60;{CLIENT_IMAGE.jpg}&#x60; portion of the URL.  For example, using cURL:  &#x60;&#x60;&#x60; sh curl -i -X PUT https://api.gettyimages.com/v3/search/by-image/uploads/my-test-image.jpg -H &#39;Content-Type: image/jpeg&#39; -H &#39;Api-Key: API_KEY&#39; --data-binary \&quot;@testimage.jpg\&quot; &#x60;&#x60;&#x60;  Once the image has been uploaded, use the full URL in the &#x60;image_url&#x60; parameter, e.g. &#x60;image_url&#x3D;https://api.gettyimages.com/v3/search/by-image/uploads/my-test-image.jpg&#x60;.  - Uploaded files must be 10MB or smaller - Uploads to the same URL will overwrite each other, so ensure that the client application is handling naming uniqueness appropriately. - Uploads expire after 24 hours. - Uploads and searches must be performed using the _same_ API Key.  ## Searching by asset id  When searching by &#x60;asset_id&#x60;, any image or video asset id in the Getty/iStock catalog can be used as the source for similar videos. 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3SearchVideosCreativeByImageGetTest() throws ApiException {
        String acceptLanguage = null;
        String giCountryCode = null;
        String assetId = null;
        Boolean excludeEditorialUseOnly = null;
        List<CreateVideoSearchFacetsFields> facetFields = null;
        Integer facetMaxCount = null;
        List<CreativeVideosFieldValues> fields = null;
        String imageUrl = null;
        Boolean includeFacets = null;
        Integer page = null;
        Integer pageSize = null;
        List<String> productTypes = null;
        CreativeVideoSearchResults response = api.v3SearchVideosCreativeByImageGet(acceptLanguage, giCountryCode, assetId, excludeEditorialUseOnly, facetFields, facetMaxCount, fields, imageUrl, includeFacets, page, pageSize, productTypes);
        // TODO: test validations
    }

    /**
     * Search for creative videos
     *
     * Use this endpoint to search premium stock video, from archival film to contemporary 4K and HD footage.  You&#39;ll need an API key and access token to use this resource.  You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only  assets that you have a license to use, you need to also include an authorization token in the header of your request. Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens.  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every video in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:      [         \&quot;asset_family\&quot;,          \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:         [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a  detailed view of videos. The following fields are provided for every video in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,    \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,          \&quot;clip_length\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,          \&quot;color_type\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:         [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;era\&quot;,         \&quot;license_model\&quot;,         \&quot;mastered_to\&quot;,         \&quot;originally_shot_on\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;shot_speed\&quot;,         \&quot;source\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files  that are most frequently used to build a UI displaying search results. The following fields are provided for every video in your result  set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3SearchVideosCreativeGetTest() throws ApiException {
        String acceptLanguage = null;
        String giCountryCode = null;
        List<AgeOfPeopleFilterType> ageOfPeople = null;
        String artists = null;
        List<VideoAspectRatioFilterType> aspectRatios = null;
        List<String> collectionCodes = null;
        CollectionsFilterType collectionsFilterType = null;
        List<CompositionsFilterType> compositions = null;
        String downloadProduct = null;
        Boolean excludeNudity = null;
        Boolean excludeEditorialUseOnly = null;
        List<Integer> excludeKeywordIds = null;
        List<CreativeVideosFieldValues> fields = null;
        VideoFormatsRequest formatAvailable = null;
        List<VideoFrameRates> frameRates = null;
        List<ImageTechniquesFilterType> imageTechniques = null;
        Boolean includeRelatedSearches = null;
        List<Integer> keywordIds = null;
        List<LicenseModelVideoRequest> licenseModels = null;
        List<VideoOrientationRequest> orientations = null;
        Integer minClipLength = null;
        Integer maxClipLength = null;
        Integer page = null;
        Integer pageSize = null;
        String phrase = null;
        Boolean safeSearch = null;
        CreativeVideoSortOrder sortOrder = null;
        ReleaseStatus releaseStatus = null;
        List<CreateVideoSearchFacetsFields> facetFields = null;
        Integer facetMaxCount = null;
        Boolean includeFacets = null;
        List<ViewpointsFilterType> viewpoints = null;
        CreativeVideoSearchResults response = api.v3SearchVideosCreativeGet(acceptLanguage, giCountryCode, ageOfPeople, artists, aspectRatios, collectionCodes, collectionsFilterType, compositions, downloadProduct, excludeNudity, excludeEditorialUseOnly, excludeKeywordIds, fields, formatAvailable, frameRates, imageTechniques, includeRelatedSearches, keywordIds, licenseModels, orientations, minClipLength, maxClipLength, page, pageSize, phrase, safeSearch, sortOrder, releaseStatus, facetFields, facetMaxCount, includeFacets, viewpoints);
        // TODO: test validations
    }

    /**
     * Search for editorial videos
     *
     * Use this endpoint to search current and archival video clips of celebrities, newsmakers, and events.  You&#39;ll need an API key and access token to use this resource.  You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token.  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every video in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:      [         \&quot;asset_family\&quot;,          \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:         [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a detailed view of videos. The following fields are provided for every video in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,    \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,          \&quot;clip_length\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,          \&quot;color_type\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:         [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;era\&quot;,         \&quot;event_ids\&quot;,         \&quot;license_model\&quot;,         \&quot;mastered_to\&quot;,         \&quot;originally_shot_on\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;shot_speed\&quot;,         \&quot;source\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most frequently used to build a UI displaying search results. The following fields are provided for every video in your result set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3SearchVideosEditorialGetTest() throws ApiException {
        String acceptLanguage = null;
        String giCountryCode = null;
        List<AgeOfPeopleFilterType> ageOfPeople = null;
        String artists = null;
        List<VideoAspectRatioFilterType> aspectRatios = null;
        List<String> collectionCodes = null;
        CollectionsFilterType collectionsFilterType = null;
        List<CompositionsFilterType> compositions = null;
        OffsetDateTime dateFrom = null;
        OffsetDateTime dateTo = null;
        String downloadProduct = null;
        List<EditorialVideoType> editorialVideoTypes = null;
        List<EditorialVideosFieldValues> fields = null;
        VideoFormatsRequest formatAvailable = null;
        List<VideoFrameRates> frameRates = null;
        List<ImageTechniquesFilterType> imageTechniques = null;
        Boolean includeRelatedSearches = null;
        List<Integer> keywordIds = null;
        Integer minClipLength = null;
        Integer maxClipLength = null;
        List<VideoOrientationRequest> orientations = null;
        Integer page = null;
        Integer pageSize = null;
        String phrase = null;
        SortOrder sortOrder = null;
        List<String> specificPeople = null;
        ReleaseStatus releaseStatus = null;
        List<EditorialVideoSearchFacetsFields> facetFields = null;
        Boolean includeFacets = null;
        Integer facetMaxCount = null;
        List<ViewpointsFilterType> viewpoints = null;
        EditorialVideoSearchResults response = api.v3SearchVideosEditorialGet(acceptLanguage, giCountryCode, ageOfPeople, artists, aspectRatios, collectionCodes, collectionsFilterType, compositions, dateFrom, dateTo, downloadProduct, editorialVideoTypes, fields, formatAvailable, frameRates, imageTechniques, includeRelatedSearches, keywordIds, minClipLength, maxClipLength, orientations, page, pageSize, phrase, sortOrder, specificPeople, releaseStatus, facetFields, includeFacets, facetMaxCount, viewpoints);
        // TODO: test validations
    }

}
