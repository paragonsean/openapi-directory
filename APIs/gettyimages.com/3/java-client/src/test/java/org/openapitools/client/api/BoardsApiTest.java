/*
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.AddBoardAssetsResult;
import org.openapitools.client.model.BoardAsset;
import org.openapitools.client.model.BoardCreated;
import org.openapitools.client.model.BoardDetail;
import org.openapitools.client.model.BoardInfo;
import org.openapitools.client.model.BoardList;
import org.openapitools.client.model.BoardRelationship;
import org.openapitools.client.model.BoardSortOrder;
import org.openapitools.client.model.CommentCreated;
import org.openapitools.client.model.CommentRequest;
import org.openapitools.client.model.CommentsList;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BoardsApi
 */
@Disabled
public class BoardsApiTest {

    private final BoardsApi api = new BoardsApi();

    /**
     * Remove an asset from a board
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3BoardsBoardIdAssetsAssetIdDeleteTest() throws ApiException {
        String boardId = null;
        String assetId = null;
        String acceptLanguage = null;
        api.v3BoardsBoardIdAssetsAssetIdDelete(boardId, assetId, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Add an asset to a board
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3BoardsBoardIdAssetsAssetIdPutTest() throws ApiException {
        String boardId = null;
        String assetId = null;
        String acceptLanguage = null;
        api.v3BoardsBoardIdAssetsAssetIdPut(boardId, assetId, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Remove assets from a board
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3BoardsBoardIdAssetsDeleteTest() throws ApiException {
        String boardId = null;
        String acceptLanguage = null;
        List<String> assetIds = null;
        api.v3BoardsBoardIdAssetsDelete(boardId, acceptLanguage, assetIds);
        // TODO: test validations
    }

    /**
     * Add assets to a board
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3BoardsBoardIdAssetsPutTest() throws ApiException {
        String boardId = null;
        String acceptLanguage = null;
        List<BoardAsset> boardAsset = null;
        AddBoardAssetsResult response = api.v3BoardsBoardIdAssetsPut(boardId, acceptLanguage, boardAsset);
        // TODO: test validations
    }

    /**
     * Delete a comment from a board
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3BoardsBoardIdCommentsCommentIdDeleteTest() throws ApiException {
        String boardId = null;
        String commentId = null;
        String acceptLanguage = null;
        api.v3BoardsBoardIdCommentsCommentIdDelete(boardId, commentId, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Get comments from a board
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3BoardsBoardIdCommentsGetTest() throws ApiException {
        String boardId = null;
        String acceptLanguage = null;
        CommentsList response = api.v3BoardsBoardIdCommentsGet(boardId, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Add a comment to a board
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3BoardsBoardIdCommentsPostTest() throws ApiException {
        String boardId = null;
        String acceptLanguage = null;
        CommentRequest commentRequest = null;
        CommentCreated response = api.v3BoardsBoardIdCommentsPost(boardId, acceptLanguage, commentRequest);
        // TODO: test validations
    }

    /**
     * Delete a board
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3BoardsBoardIdDeleteTest() throws ApiException {
        String boardId = null;
        String acceptLanguage = null;
        api.v3BoardsBoardIdDelete(boardId, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Get assets and metadata for a specific board
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3BoardsBoardIdGetTest() throws ApiException {
        String boardId = null;
        String acceptLanguage = null;
        BoardDetail response = api.v3BoardsBoardIdGet(boardId, acceptLanguage);
        // TODO: test validations
    }

    /**
     * Update a board
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3BoardsBoardIdPutTest() throws ApiException {
        String boardId = null;
        String acceptLanguage = null;
        BoardInfo boardInfo = null;
        api.v3BoardsBoardIdPut(boardId, acceptLanguage, boardInfo);
        // TODO: test validations
    }

    /**
     * Get all boards that the user participates in
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3BoardsGetTest() throws ApiException {
        String acceptLanguage = null;
        Integer page = null;
        BoardRelationship boardRelationship = null;
        BoardSortOrder sortOrder = null;
        Integer pageSize = null;
        BoardList response = api.v3BoardsGet(acceptLanguage, page, boardRelationship, sortOrder, pageSize);
        // TODO: test validations
    }

    /**
     * Create a new board
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void v3BoardsPostTest() throws ApiException {
        String acceptLanguage = null;
        BoardInfo boardInfo = null;
        BoardCreated response = api.v3BoardsPost(acceptLanguage, boardInfo);
        // TODO: test validations
    }

}
