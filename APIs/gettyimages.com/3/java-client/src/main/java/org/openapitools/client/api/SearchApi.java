/*
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import org.openapitools.client.model.AgeOfPeopleFilterType;
import org.openapitools.client.model.BlendedImageSortOrder;
import org.openapitools.client.model.CollectionsFilterType;
import org.openapitools.client.model.CompositionsFilterType;
import org.openapitools.client.model.CreateImageSearchFacetsFields;
import org.openapitools.client.model.CreateVideoSearchFacetsFields;
import org.openapitools.client.model.CreativeImageSearchResults;
import org.openapitools.client.model.CreativeImageSortOrder;
import org.openapitools.client.model.CreativeImagesFieldValues;
import org.openapitools.client.model.CreativeVideoSearchResults;
import org.openapitools.client.model.CreativeVideoSortOrder;
import org.openapitools.client.model.CreativeVideosFieldValues;
import org.openapitools.client.model.EditorialGraphicalStyle;
import org.openapitools.client.model.EditorialImageSearchFacetsFields;
import org.openapitools.client.model.EditorialImageSearchResults;
import org.openapitools.client.model.EditorialImagesFieldValues;
import org.openapitools.client.model.EditorialSegmentContract;
import org.openapitools.client.model.EditorialVideoSearchFacetsFields;
import org.openapitools.client.model.EditorialVideoSearchResults;
import org.openapitools.client.model.EditorialVideoType;
import org.openapitools.client.model.EditorialVideosFieldValues;
import org.openapitools.client.model.EthnicityFilterType;
import org.openapitools.client.model.EventFieldValues;
import org.openapitools.client.model.EventSearchSortOrder;
import org.openapitools.client.model.EventsSearchResult;
import org.openapitools.client.model.GraphicalStyle;
import org.openapitools.client.model.GraphicalStylesFilterType;
import org.openapitools.client.model.ImageOrientationRequest;
import org.openapitools.client.model.ImageSearchItemSearchResults;
import org.openapitools.client.model.ImageTechniquesFilterType;
import org.openapitools.client.model.ImagesFieldValues;
import org.openapitools.client.model.LicenseModelVideoRequest;
import org.openapitools.client.model.NumberOfPeopleFilterType;
import java.time.OffsetDateTime;
import org.openapitools.client.model.ReleaseStatus;
import org.openapitools.client.model.SearchByImageResourceResults;
import org.openapitools.client.model.SearchFileType;
import org.openapitools.client.model.SortOrder;
import org.openapitools.client.model.TeeShirtSize;
import org.openapitools.client.model.VideoAspectRatioFilterType;
import org.openapitools.client.model.VideoFormatsRequest;
import org.openapitools.client.model.VideoFrameRates;
import org.openapitools.client.model.VideoOrientationRequest;
import org.openapitools.client.model.ViewpointsFilterType;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class SearchApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public SearchApi() {
        this(Configuration.getDefaultApiClient());
    }

    public SearchApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for v3SearchByImageUploadsFileNamePut
     * @param fileName  (required)
     * @param body  (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3SearchByImageUploadsFileNamePutCall(String fileName, byte[] body, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = body;

        // create path and map variables
        String localVarPath = "/v3/search/by-image/uploads/{file-name}"
            .replace("{" + "file-name" + "}", localVarApiClient.escapeString(fileName.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "image/jpeg",
            "image/png"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2", "OAuth2", "OAuth2", "OAuth2", "Api-Key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v3SearchByImageUploadsFileNamePutValidateBeforeCall(String fileName, byte[] body, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'fileName' is set
        if (fileName == null) {
            throw new ApiException("Missing the required parameter 'fileName' when calling v3SearchByImageUploadsFileNamePut(Async)");
        }

        return v3SearchByImageUploadsFileNamePutCall(fileName, body, _callback);

    }

    /**
     * Upload image for use by the search creative images/videos operations
     * 
     * @param fileName  (required)
     * @param body  (optional)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public void v3SearchByImageUploadsFileNamePut(String fileName, byte[] body) throws ApiException {
        v3SearchByImageUploadsFileNamePutWithHttpInfo(fileName, body);
    }

    /**
     * Upload image for use by the search creative images/videos operations
     * 
     * @param fileName  (required)
     * @param body  (optional)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<Void> v3SearchByImageUploadsFileNamePutWithHttpInfo(String fileName, byte[] body) throws ApiException {
        okhttp3.Call localVarCall = v3SearchByImageUploadsFileNamePutValidateBeforeCall(fileName, body, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Upload image for use by the search creative images/videos operations (asynchronously)
     * 
     * @param fileName  (required)
     * @param body  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3SearchByImageUploadsFileNamePutAsync(String fileName, byte[] body, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = v3SearchByImageUploadsFileNamePutValidateBeforeCall(fileName, body, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for v3SearchEventsGet
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param editorialSegment Filters to events with a matching editorial segment. (optional)
     * @param dateFrom Filters to events that start on or after this date. Use ISO 8601 format (e.g., 1999-12-31). Defaults to UTC unless otherwise specified. (optional)
     * @param dateTo Filters to events that start on or before this date. Use ISO 8601 format (e.g., 1999-12-31). Defaults to UTC unless otherwise specified. (optional)
     * @param fields Specifies fields to return. Default set is &#39;id&#39;,&#39;name&#39;,&#39;start_date&#39;. (optional)
     * @param page Request results starting at a page number (default is 1, maximum is 50). (optional, default to 1)
     * @param pageSize Request number of events to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Filters to events related to this phrase (optional, default to )
     * @param sortOrder Specifies the order in which to sort the results. Default is &#x60;newest&#x60;. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3SearchEventsGetCall(String acceptLanguage, String giCountryCode, EditorialSegmentContract editorialSegment, OffsetDateTime dateFrom, OffsetDateTime dateTo, List<EventFieldValues> fields, Integer page, Integer pageSize, String phrase, EventSearchSortOrder sortOrder, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/search/events";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (editorialSegment != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("editorial_segment", editorialSegment));
        }

        if (dateFrom != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("date_from", dateFrom));
        }

        if (dateTo != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("date_to", dateTo));
        }

        if (fields != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "fields", fields));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page_size", pageSize));
        }

        if (phrase != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("phrase", phrase));
        }

        if (sortOrder != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_order", sortOrder));
        }

        if (acceptLanguage != null) {
            localVarHeaderParams.put("Accept-Language", localVarApiClient.parameterToString(acceptLanguage));
        }

        if (giCountryCode != null) {
            localVarHeaderParams.put("GI-Country-Code", localVarApiClient.parameterToString(giCountryCode));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2", "OAuth2", "OAuth2", "OAuth2", "Api-Key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v3SearchEventsGetValidateBeforeCall(String acceptLanguage, String giCountryCode, EditorialSegmentContract editorialSegment, OffsetDateTime dateFrom, OffsetDateTime dateTo, List<EventFieldValues> fields, Integer page, Integer pageSize, String phrase, EventSearchSortOrder sortOrder, final ApiCallback _callback) throws ApiException {
        return v3SearchEventsGetCall(acceptLanguage, giCountryCode, editorialSegment, dateFrom, dateTo, fields, page, pageSize, phrase, sortOrder, _callback);

    }

    /**
     * Search for events
     * Use this endpoint to search Getty Images news, sports and entertainment events. Getty Images photographers and videographers cover editorially relevant events occurring around the world.  All images or video clips produced in association with an event, are assigned the same EventID. EventIDs are part of the meta-data returned in Search Results. Only content produced under a Getty Images brand name (Getty Images News, Getty Images Sports, Getty Images Entertainment, Film Magic, Wire Image) will be consistently assigned an EventID. The Event framework may also be used to group similar content, such as \&quot;Hats from the Royal Wedding\&quot; or \&quot;Odd-ballOffbeat images of the week\&quot;.     You&#39;ll need an API key and access token to use this resource.   You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token. 
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param editorialSegment Filters to events with a matching editorial segment. (optional)
     * @param dateFrom Filters to events that start on or after this date. Use ISO 8601 format (e.g., 1999-12-31). Defaults to UTC unless otherwise specified. (optional)
     * @param dateTo Filters to events that start on or before this date. Use ISO 8601 format (e.g., 1999-12-31). Defaults to UTC unless otherwise specified. (optional)
     * @param fields Specifies fields to return. Default set is &#39;id&#39;,&#39;name&#39;,&#39;start_date&#39;. (optional)
     * @param page Request results starting at a page number (default is 1, maximum is 50). (optional, default to 1)
     * @param pageSize Request number of events to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Filters to events related to this phrase (optional, default to )
     * @param sortOrder Specifies the order in which to sort the results. Default is &#x60;newest&#x60;. (optional)
     * @return EventsSearchResult
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public EventsSearchResult v3SearchEventsGet(String acceptLanguage, String giCountryCode, EditorialSegmentContract editorialSegment, OffsetDateTime dateFrom, OffsetDateTime dateTo, List<EventFieldValues> fields, Integer page, Integer pageSize, String phrase, EventSearchSortOrder sortOrder) throws ApiException {
        ApiResponse<EventsSearchResult> localVarResp = v3SearchEventsGetWithHttpInfo(acceptLanguage, giCountryCode, editorialSegment, dateFrom, dateTo, fields, page, pageSize, phrase, sortOrder);
        return localVarResp.getData();
    }

    /**
     * Search for events
     * Use this endpoint to search Getty Images news, sports and entertainment events. Getty Images photographers and videographers cover editorially relevant events occurring around the world.  All images or video clips produced in association with an event, are assigned the same EventID. EventIDs are part of the meta-data returned in Search Results. Only content produced under a Getty Images brand name (Getty Images News, Getty Images Sports, Getty Images Entertainment, Film Magic, Wire Image) will be consistently assigned an EventID. The Event framework may also be used to group similar content, such as \&quot;Hats from the Royal Wedding\&quot; or \&quot;Odd-ballOffbeat images of the week\&quot;.     You&#39;ll need an API key and access token to use this resource.   You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token. 
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param editorialSegment Filters to events with a matching editorial segment. (optional)
     * @param dateFrom Filters to events that start on or after this date. Use ISO 8601 format (e.g., 1999-12-31). Defaults to UTC unless otherwise specified. (optional)
     * @param dateTo Filters to events that start on or before this date. Use ISO 8601 format (e.g., 1999-12-31). Defaults to UTC unless otherwise specified. (optional)
     * @param fields Specifies fields to return. Default set is &#39;id&#39;,&#39;name&#39;,&#39;start_date&#39;. (optional)
     * @param page Request results starting at a page number (default is 1, maximum is 50). (optional, default to 1)
     * @param pageSize Request number of events to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Filters to events related to this phrase (optional, default to )
     * @param sortOrder Specifies the order in which to sort the results. Default is &#x60;newest&#x60;. (optional)
     * @return ApiResponse&lt;EventsSearchResult&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EventsSearchResult> v3SearchEventsGetWithHttpInfo(String acceptLanguage, String giCountryCode, EditorialSegmentContract editorialSegment, OffsetDateTime dateFrom, OffsetDateTime dateTo, List<EventFieldValues> fields, Integer page, Integer pageSize, String phrase, EventSearchSortOrder sortOrder) throws ApiException {
        okhttp3.Call localVarCall = v3SearchEventsGetValidateBeforeCall(acceptLanguage, giCountryCode, editorialSegment, dateFrom, dateTo, fields, page, pageSize, phrase, sortOrder, null);
        Type localVarReturnType = new TypeToken<EventsSearchResult>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Search for events (asynchronously)
     * Use this endpoint to search Getty Images news, sports and entertainment events. Getty Images photographers and videographers cover editorially relevant events occurring around the world.  All images or video clips produced in association with an event, are assigned the same EventID. EventIDs are part of the meta-data returned in Search Results. Only content produced under a Getty Images brand name (Getty Images News, Getty Images Sports, Getty Images Entertainment, Film Magic, Wire Image) will be consistently assigned an EventID. The Event framework may also be used to group similar content, such as \&quot;Hats from the Royal Wedding\&quot; or \&quot;Odd-ballOffbeat images of the week\&quot;.     You&#39;ll need an API key and access token to use this resource.   You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token. 
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param editorialSegment Filters to events with a matching editorial segment. (optional)
     * @param dateFrom Filters to events that start on or after this date. Use ISO 8601 format (e.g., 1999-12-31). Defaults to UTC unless otherwise specified. (optional)
     * @param dateTo Filters to events that start on or before this date. Use ISO 8601 format (e.g., 1999-12-31). Defaults to UTC unless otherwise specified. (optional)
     * @param fields Specifies fields to return. Default set is &#39;id&#39;,&#39;name&#39;,&#39;start_date&#39;. (optional)
     * @param page Request results starting at a page number (default is 1, maximum is 50). (optional, default to 1)
     * @param pageSize Request number of events to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Filters to events related to this phrase (optional, default to )
     * @param sortOrder Specifies the order in which to sort the results. Default is &#x60;newest&#x60;. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3SearchEventsGetAsync(String acceptLanguage, String giCountryCode, EditorialSegmentContract editorialSegment, OffsetDateTime dateFrom, OffsetDateTime dateTo, List<EventFieldValues> fields, Integer page, Integer pageSize, String phrase, EventSearchSortOrder sortOrder, final ApiCallback<EventsSearchResult> _callback) throws ApiException {

        okhttp3.Call localVarCall = v3SearchEventsGetValidateBeforeCall(acceptLanguage, giCountryCode, editorialSegment, dateFrom, dateTo, fields, page, pageSize, phrase, sortOrder, _callback);
        Type localVarReturnType = new TypeToken<EventsSearchResult>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for v3SearchImagesCreativeByImageGet
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param assetId Specifies the Getty image id to use in the search. (optional)
     * @param excludeEditorialUseOnly Exclude images that are only available for editorial (non-commercial) use. Default value is false. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                      The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes, height, and width returned by &#39;download_sizes&#39; field are estimates. (optional)
     * @param imageUrl Specifies the location of the image to use in the search. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param productTypes Filter images to those from one of your product types.                       Allowed values are easyaccess, imagepack, premiumaccess and royaltyfreesubscription.                       If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the product_types value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> AssetNotFound </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> InvalidIStockCollection </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3SearchImagesCreativeByImageGetCall(String acceptLanguage, String giCountryCode, String assetId, Boolean excludeEditorialUseOnly, List<CreateImageSearchFacetsFields> facetFields, Integer facetMaxCount, List<CreativeImagesFieldValues> fields, String imageUrl, Boolean includeFacets, Integer page, Integer pageSize, List<String> productTypes, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/search/images/creative/by-image";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (assetId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("asset_id", assetId));
        }

        if (excludeEditorialUseOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("exclude_editorial_use_only", excludeEditorialUseOnly));
        }

        if (facetFields != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "facet_fields", facetFields));
        }

        if (facetMaxCount != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("facet_max_count", facetMaxCount));
        }

        if (fields != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "fields", fields));
        }

        if (imageUrl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("image_url", imageUrl));
        }

        if (includeFacets != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include_facets", includeFacets));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page_size", pageSize));
        }

        if (productTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "product_types", productTypes));
        }

        if (acceptLanguage != null) {
            localVarHeaderParams.put("Accept-Language", localVarApiClient.parameterToString(acceptLanguage));
        }

        if (giCountryCode != null) {
            localVarHeaderParams.put("GI-Country-Code", localVarApiClient.parameterToString(giCountryCode));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2", "OAuth2", "OAuth2", "OAuth2", "Api-Key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v3SearchImagesCreativeByImageGetValidateBeforeCall(String acceptLanguage, String giCountryCode, String assetId, Boolean excludeEditorialUseOnly, List<CreateImageSearchFacetsFields> facetFields, Integer facetMaxCount, List<CreativeImagesFieldValues> fields, String imageUrl, Boolean includeFacets, Integer page, Integer pageSize, List<String> productTypes, final ApiCallback _callback) throws ApiException {
        return v3SearchImagesCreativeByImageGetCall(acceptLanguage, giCountryCode, assetId, excludeEditorialUseOnly, facetFields, facetMaxCount, fields, imageUrl, includeFacets, page, pageSize, productTypes, _callback);

    }

    /**
     * Search for creative images based on url
     * Search for **similar creative images** by passing an &#x60;image_url&#x60; to an uploaded image OR an &#x60;asset_id&#x60; of an asset in our catalog.  All responses will have the &#x60;exclude_nudity&#x60; filter automatically applied.  ## Searching by URL  Before calling the search by image endpoint, an image in JPEG format must be uploaded to &#x60;https://api.gettyimages.com/v3/search/by-image/uploads/{CLIENT_IMAGE.jpg}&#x60;, where the client defines the &#x60;{CLIENT_IMAGE.jpg}&#x60; portion of the URL.  For example, using cURL:  &#x60;&#x60;&#x60; sh curl -i -X PUT https://api.gettyimages.com/v3/search/by-image/uploads/my-test-image.jpg -H &#39;Content-Type: image/jpeg&#39; -H &#39;Api-Key: API_KEY&#39; --data-binary \&quot;@testimage.jpg\&quot; &#x60;&#x60;&#x60;  Once the image has been uploaded, use the full URL in the &#x60;image_url&#x60; parameter, e.g. &#x60;image_url&#x3D;https://api.gettyimages.com/v3/search/by-image/uploads/my-test-image.jpg&#x60;.  - Uploaded files must be 10MB or smaller. - Uploads to the same URL will overwrite each other, so ensure that the client application is handling naming uniqueness appropriately. - Uploads expire after 24 hours. - Uploads and searches must be performed using the _same_ API Key.  ## Searching by asset id  When searching by &#x60;asset_id&#x60;, any image or video asset id in the Getty/iStock catalog can be used as the source for similar images. 
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param assetId Specifies the Getty image id to use in the search. (optional)
     * @param excludeEditorialUseOnly Exclude images that are only available for editorial (non-commercial) use. Default value is false. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                      The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes, height, and width returned by &#39;download_sizes&#39; field are estimates. (optional)
     * @param imageUrl Specifies the location of the image to use in the search. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param productTypes Filter images to those from one of your product types.                       Allowed values are easyaccess, imagepack, premiumaccess and royaltyfreesubscription.                       If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the product_types value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @return SearchByImageResourceResults
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> AssetNotFound </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> InvalidIStockCollection </td><td>  -  </td></tr>
     </table>
     */
    public SearchByImageResourceResults v3SearchImagesCreativeByImageGet(String acceptLanguage, String giCountryCode, String assetId, Boolean excludeEditorialUseOnly, List<CreateImageSearchFacetsFields> facetFields, Integer facetMaxCount, List<CreativeImagesFieldValues> fields, String imageUrl, Boolean includeFacets, Integer page, Integer pageSize, List<String> productTypes) throws ApiException {
        ApiResponse<SearchByImageResourceResults> localVarResp = v3SearchImagesCreativeByImageGetWithHttpInfo(acceptLanguage, giCountryCode, assetId, excludeEditorialUseOnly, facetFields, facetMaxCount, fields, imageUrl, includeFacets, page, pageSize, productTypes);
        return localVarResp.getData();
    }

    /**
     * Search for creative images based on url
     * Search for **similar creative images** by passing an &#x60;image_url&#x60; to an uploaded image OR an &#x60;asset_id&#x60; of an asset in our catalog.  All responses will have the &#x60;exclude_nudity&#x60; filter automatically applied.  ## Searching by URL  Before calling the search by image endpoint, an image in JPEG format must be uploaded to &#x60;https://api.gettyimages.com/v3/search/by-image/uploads/{CLIENT_IMAGE.jpg}&#x60;, where the client defines the &#x60;{CLIENT_IMAGE.jpg}&#x60; portion of the URL.  For example, using cURL:  &#x60;&#x60;&#x60; sh curl -i -X PUT https://api.gettyimages.com/v3/search/by-image/uploads/my-test-image.jpg -H &#39;Content-Type: image/jpeg&#39; -H &#39;Api-Key: API_KEY&#39; --data-binary \&quot;@testimage.jpg\&quot; &#x60;&#x60;&#x60;  Once the image has been uploaded, use the full URL in the &#x60;image_url&#x60; parameter, e.g. &#x60;image_url&#x3D;https://api.gettyimages.com/v3/search/by-image/uploads/my-test-image.jpg&#x60;.  - Uploaded files must be 10MB or smaller. - Uploads to the same URL will overwrite each other, so ensure that the client application is handling naming uniqueness appropriately. - Uploads expire after 24 hours. - Uploads and searches must be performed using the _same_ API Key.  ## Searching by asset id  When searching by &#x60;asset_id&#x60;, any image or video asset id in the Getty/iStock catalog can be used as the source for similar images. 
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param assetId Specifies the Getty image id to use in the search. (optional)
     * @param excludeEditorialUseOnly Exclude images that are only available for editorial (non-commercial) use. Default value is false. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                      The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes, height, and width returned by &#39;download_sizes&#39; field are estimates. (optional)
     * @param imageUrl Specifies the location of the image to use in the search. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param productTypes Filter images to those from one of your product types.                       Allowed values are easyaccess, imagepack, premiumaccess and royaltyfreesubscription.                       If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the product_types value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @return ApiResponse&lt;SearchByImageResourceResults&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> AssetNotFound </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> InvalidIStockCollection </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<SearchByImageResourceResults> v3SearchImagesCreativeByImageGetWithHttpInfo(String acceptLanguage, String giCountryCode, String assetId, Boolean excludeEditorialUseOnly, List<CreateImageSearchFacetsFields> facetFields, Integer facetMaxCount, List<CreativeImagesFieldValues> fields, String imageUrl, Boolean includeFacets, Integer page, Integer pageSize, List<String> productTypes) throws ApiException {
        okhttp3.Call localVarCall = v3SearchImagesCreativeByImageGetValidateBeforeCall(acceptLanguage, giCountryCode, assetId, excludeEditorialUseOnly, facetFields, facetMaxCount, fields, imageUrl, includeFacets, page, pageSize, productTypes, null);
        Type localVarReturnType = new TypeToken<SearchByImageResourceResults>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Search for creative images based on url (asynchronously)
     * Search for **similar creative images** by passing an &#x60;image_url&#x60; to an uploaded image OR an &#x60;asset_id&#x60; of an asset in our catalog.  All responses will have the &#x60;exclude_nudity&#x60; filter automatically applied.  ## Searching by URL  Before calling the search by image endpoint, an image in JPEG format must be uploaded to &#x60;https://api.gettyimages.com/v3/search/by-image/uploads/{CLIENT_IMAGE.jpg}&#x60;, where the client defines the &#x60;{CLIENT_IMAGE.jpg}&#x60; portion of the URL.  For example, using cURL:  &#x60;&#x60;&#x60; sh curl -i -X PUT https://api.gettyimages.com/v3/search/by-image/uploads/my-test-image.jpg -H &#39;Content-Type: image/jpeg&#39; -H &#39;Api-Key: API_KEY&#39; --data-binary \&quot;@testimage.jpg\&quot; &#x60;&#x60;&#x60;  Once the image has been uploaded, use the full URL in the &#x60;image_url&#x60; parameter, e.g. &#x60;image_url&#x3D;https://api.gettyimages.com/v3/search/by-image/uploads/my-test-image.jpg&#x60;.  - Uploaded files must be 10MB or smaller. - Uploads to the same URL will overwrite each other, so ensure that the client application is handling naming uniqueness appropriately. - Uploads expire after 24 hours. - Uploads and searches must be performed using the _same_ API Key.  ## Searching by asset id  When searching by &#x60;asset_id&#x60;, any image or video asset id in the Getty/iStock catalog can be used as the source for similar images. 
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param assetId Specifies the Getty image id to use in the search. (optional)
     * @param excludeEditorialUseOnly Exclude images that are only available for editorial (non-commercial) use. Default value is false. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                      The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes, height, and width returned by &#39;download_sizes&#39; field are estimates. (optional)
     * @param imageUrl Specifies the location of the image to use in the search. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param productTypes Filter images to those from one of your product types.                       Allowed values are easyaccess, imagepack, premiumaccess and royaltyfreesubscription.                       If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the product_types value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> AssetNotFound </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> InvalidIStockCollection </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3SearchImagesCreativeByImageGetAsync(String acceptLanguage, String giCountryCode, String assetId, Boolean excludeEditorialUseOnly, List<CreateImageSearchFacetsFields> facetFields, Integer facetMaxCount, List<CreativeImagesFieldValues> fields, String imageUrl, Boolean includeFacets, Integer page, Integer pageSize, List<String> productTypes, final ApiCallback<SearchByImageResourceResults> _callback) throws ApiException {

        okhttp3.Call localVarCall = v3SearchImagesCreativeByImageGetValidateBeforeCall(acceptLanguage, giCountryCode, assetId, excludeEditorialUseOnly, facetFields, facetMaxCount, fields, imageUrl, includeFacets, page, pageSize, productTypes, _callback);
        Type localVarReturnType = new TypeToken<SearchByImageResourceResults>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for v3SearchImagesCreativeGet
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Filter based on the age of individuals in an image. (optional)
     * @param artists Search for images by specific artists (free-text, comma-separated list of artists). (optional)
     * @param collectionCodes Filter by collection codes (comma-separated list). Include or exclude based on collections_filter_type. (optional)
     * @param collectionsFilterType Use to include or exclude collections from search. The default is include (optional)
     * @param color Filter based on predominant color in an image. Use 6 character hexadecimal format (e.g., #002244). (optional)
     * @param compositions Filter based on image composition. (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param embedContentOnly Restrict search results to embeddable images. The default is false. (optional, default to false)
     * @param ethnicity Filter search results based on the ethnicity of individuals in an image. (optional)
     * @param excludeKeywordIds Return only images not tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also do not contain the requested keyword(s) are returned. (optional)
     * @param excludeNudity Excludes images containing nudity. The default is false. (optional, default to false)
     * @param excludeEditorialUseOnly Exclude images that are only available for editorial (non-commercial) use. Default value is false. (optional)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes, height, and width returned by &#39;download_sizes&#39; field are estimates. (optional)
     * @param fileTypes Return only images having a specific file type. (optional)
     * @param graphicalStyles Filter based on graphical style of the image. (optional)
     * @param graphicalStylesFilterType Provides searching based on specified graphical style(s). The default is include. (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param minimumSize Filter based on minimum size requested. The default is x-small. (optional)
     * @param numberOfPeople Filter based on the number of people in the image. (optional)
     * @param orientations Return only images with selected aspect ratios. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Search images using a search phrase. (optional, default to )
     * @param safeSearch Setting safe_search to \&quot;true\&quot; excludes images containing nudity, death, profanity, drugs and alcohol, suggestive content, and graphic content from the result set. The default is false. Because this is a keyword-based filter, it&#39;s possible that a small number of unsafe images may not be caught by the filter. Please direct feedback to your Getty Images Account or API support representative. (optional, default to false)
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                     The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> InvalidIStockCollection </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3SearchImagesCreativeGetCall(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, String color, List<CompositionsFilterType> compositions, String downloadProduct, Boolean embedContentOnly, List<EthnicityFilterType> ethnicity, List<Integer> excludeKeywordIds, Boolean excludeNudity, Boolean excludeEditorialUseOnly, List<CreativeImagesFieldValues> fields, List<SearchFileType> fileTypes, List<GraphicalStyle> graphicalStyles, GraphicalStylesFilterType graphicalStylesFilterType, Boolean includeRelatedSearches, List<Integer> keywordIds, TeeShirtSize minimumSize, List<NumberOfPeopleFilterType> numberOfPeople, List<ImageOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, Boolean safeSearch, CreativeImageSortOrder sortOrder, List<CreateImageSearchFacetsFields> facetFields, Boolean includeFacets, Integer facetMaxCount, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/search/images/creative";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (ageOfPeople != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "age_of_people", ageOfPeople));
        }

        if (artists != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("artists", artists));
        }

        if (collectionCodes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "collection_codes", collectionCodes));
        }

        if (collectionsFilterType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("collections_filter_type", collectionsFilterType));
        }

        if (color != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("color", color));
        }

        if (compositions != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "compositions", compositions));
        }

        if (downloadProduct != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("download_product", downloadProduct));
        }

        if (embedContentOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("embed_content_only", embedContentOnly));
        }

        if (ethnicity != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "ethnicity", ethnicity));
        }

        if (excludeKeywordIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "exclude_keyword_ids", excludeKeywordIds));
        }

        if (excludeNudity != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("exclude_nudity", excludeNudity));
        }

        if (excludeEditorialUseOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("exclude_editorial_use_only", excludeEditorialUseOnly));
        }

        if (fields != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "fields", fields));
        }

        if (fileTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "file_types", fileTypes));
        }

        if (graphicalStyles != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "graphical_styles", graphicalStyles));
        }

        if (graphicalStylesFilterType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("graphical_styles_filter_type", graphicalStylesFilterType));
        }

        if (includeRelatedSearches != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include_related_searches", includeRelatedSearches));
        }

        if (keywordIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "keyword_ids", keywordIds));
        }

        if (minimumSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minimum_size", minimumSize));
        }

        if (numberOfPeople != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "number_of_people", numberOfPeople));
        }

        if (orientations != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "orientations", orientations));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page_size", pageSize));
        }

        if (phrase != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("phrase", phrase));
        }

        if (safeSearch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("safe_search", safeSearch));
        }

        if (sortOrder != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_order", sortOrder));
        }

        if (facetFields != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "facet_fields", facetFields));
        }

        if (includeFacets != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include_facets", includeFacets));
        }

        if (facetMaxCount != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("facet_max_count", facetMaxCount));
        }

        if (acceptLanguage != null) {
            localVarHeaderParams.put("Accept-Language", localVarApiClient.parameterToString(acceptLanguage));
        }

        if (giCountryCode != null) {
            localVarHeaderParams.put("GI-Country-Code", localVarApiClient.parameterToString(giCountryCode));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2", "OAuth2", "OAuth2", "OAuth2", "Api-Key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v3SearchImagesCreativeGetValidateBeforeCall(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, String color, List<CompositionsFilterType> compositions, String downloadProduct, Boolean embedContentOnly, List<EthnicityFilterType> ethnicity, List<Integer> excludeKeywordIds, Boolean excludeNudity, Boolean excludeEditorialUseOnly, List<CreativeImagesFieldValues> fields, List<SearchFileType> fileTypes, List<GraphicalStyle> graphicalStyles, GraphicalStylesFilterType graphicalStylesFilterType, Boolean includeRelatedSearches, List<Integer> keywordIds, TeeShirtSize minimumSize, List<NumberOfPeopleFilterType> numberOfPeople, List<ImageOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, Boolean safeSearch, CreativeImageSortOrder sortOrder, List<CreateImageSearchFacetsFields> facetFields, Boolean includeFacets, Integer facetMaxCount, final ApiCallback _callback) throws ApiException {
        return v3SearchImagesCreativeGetCall(acceptLanguage, giCountryCode, ageOfPeople, artists, collectionCodes, collectionsFilterType, color, compositions, downloadProduct, embedContentOnly, ethnicity, excludeKeywordIds, excludeNudity, excludeEditorialUseOnly, fields, fileTypes, graphicalStyles, graphicalStylesFilterType, includeRelatedSearches, keywordIds, minimumSize, numberOfPeople, orientations, page, pageSize, phrase, safeSearch, sortOrder, facetFields, includeFacets, facetMaxCount, _callback);

    }

    /**
     * Search for creative images only
     * Use this endpoint to search our contemporary stock photos, illustrations and archival images.  You&#39;ll need an API key and access token to use this resource.   You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token.  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to  build search response results. The following fields are provided for every image in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;asset_family\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to  build a detailed view of images. The following fields are provided for every image in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,         \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;editorial_segments\&quot;,         \&quot;event_ids\&quot;,         \&quot;graphical_style\&quot;,         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;orientation\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;referral_destinations\&quot;,         \&quot;title\&quot;     ] ] &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most frequently used to build a UI displaying search results. The following fields are provided for every image  in your result set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Filter based on the age of individuals in an image. (optional)
     * @param artists Search for images by specific artists (free-text, comma-separated list of artists). (optional)
     * @param collectionCodes Filter by collection codes (comma-separated list). Include or exclude based on collections_filter_type. (optional)
     * @param collectionsFilterType Use to include or exclude collections from search. The default is include (optional)
     * @param color Filter based on predominant color in an image. Use 6 character hexadecimal format (e.g., #002244). (optional)
     * @param compositions Filter based on image composition. (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param embedContentOnly Restrict search results to embeddable images. The default is false. (optional, default to false)
     * @param ethnicity Filter search results based on the ethnicity of individuals in an image. (optional)
     * @param excludeKeywordIds Return only images not tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also do not contain the requested keyword(s) are returned. (optional)
     * @param excludeNudity Excludes images containing nudity. The default is false. (optional, default to false)
     * @param excludeEditorialUseOnly Exclude images that are only available for editorial (non-commercial) use. Default value is false. (optional)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes, height, and width returned by &#39;download_sizes&#39; field are estimates. (optional)
     * @param fileTypes Return only images having a specific file type. (optional)
     * @param graphicalStyles Filter based on graphical style of the image. (optional)
     * @param graphicalStylesFilterType Provides searching based on specified graphical style(s). The default is include. (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param minimumSize Filter based on minimum size requested. The default is x-small. (optional)
     * @param numberOfPeople Filter based on the number of people in the image. (optional)
     * @param orientations Return only images with selected aspect ratios. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Search images using a search phrase. (optional, default to )
     * @param safeSearch Setting safe_search to \&quot;true\&quot; excludes images containing nudity, death, profanity, drugs and alcohol, suggestive content, and graphic content from the result set. The default is false. Because this is a keyword-based filter, it&#39;s possible that a small number of unsafe images may not be caught by the filter. Please direct feedback to your Getty Images Account or API support representative. (optional, default to false)
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                     The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @return CreativeImageSearchResults
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> InvalidIStockCollection </td><td>  -  </td></tr>
     </table>
     */
    public CreativeImageSearchResults v3SearchImagesCreativeGet(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, String color, List<CompositionsFilterType> compositions, String downloadProduct, Boolean embedContentOnly, List<EthnicityFilterType> ethnicity, List<Integer> excludeKeywordIds, Boolean excludeNudity, Boolean excludeEditorialUseOnly, List<CreativeImagesFieldValues> fields, List<SearchFileType> fileTypes, List<GraphicalStyle> graphicalStyles, GraphicalStylesFilterType graphicalStylesFilterType, Boolean includeRelatedSearches, List<Integer> keywordIds, TeeShirtSize minimumSize, List<NumberOfPeopleFilterType> numberOfPeople, List<ImageOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, Boolean safeSearch, CreativeImageSortOrder sortOrder, List<CreateImageSearchFacetsFields> facetFields, Boolean includeFacets, Integer facetMaxCount) throws ApiException {
        ApiResponse<CreativeImageSearchResults> localVarResp = v3SearchImagesCreativeGetWithHttpInfo(acceptLanguage, giCountryCode, ageOfPeople, artists, collectionCodes, collectionsFilterType, color, compositions, downloadProduct, embedContentOnly, ethnicity, excludeKeywordIds, excludeNudity, excludeEditorialUseOnly, fields, fileTypes, graphicalStyles, graphicalStylesFilterType, includeRelatedSearches, keywordIds, minimumSize, numberOfPeople, orientations, page, pageSize, phrase, safeSearch, sortOrder, facetFields, includeFacets, facetMaxCount);
        return localVarResp.getData();
    }

    /**
     * Search for creative images only
     * Use this endpoint to search our contemporary stock photos, illustrations and archival images.  You&#39;ll need an API key and access token to use this resource.   You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token.  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to  build search response results. The following fields are provided for every image in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;asset_family\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to  build a detailed view of images. The following fields are provided for every image in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,         \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;editorial_segments\&quot;,         \&quot;event_ids\&quot;,         \&quot;graphical_style\&quot;,         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;orientation\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;referral_destinations\&quot;,         \&quot;title\&quot;     ] ] &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most frequently used to build a UI displaying search results. The following fields are provided for every image  in your result set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Filter based on the age of individuals in an image. (optional)
     * @param artists Search for images by specific artists (free-text, comma-separated list of artists). (optional)
     * @param collectionCodes Filter by collection codes (comma-separated list). Include or exclude based on collections_filter_type. (optional)
     * @param collectionsFilterType Use to include or exclude collections from search. The default is include (optional)
     * @param color Filter based on predominant color in an image. Use 6 character hexadecimal format (e.g., #002244). (optional)
     * @param compositions Filter based on image composition. (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param embedContentOnly Restrict search results to embeddable images. The default is false. (optional, default to false)
     * @param ethnicity Filter search results based on the ethnicity of individuals in an image. (optional)
     * @param excludeKeywordIds Return only images not tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also do not contain the requested keyword(s) are returned. (optional)
     * @param excludeNudity Excludes images containing nudity. The default is false. (optional, default to false)
     * @param excludeEditorialUseOnly Exclude images that are only available for editorial (non-commercial) use. Default value is false. (optional)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes, height, and width returned by &#39;download_sizes&#39; field are estimates. (optional)
     * @param fileTypes Return only images having a specific file type. (optional)
     * @param graphicalStyles Filter based on graphical style of the image. (optional)
     * @param graphicalStylesFilterType Provides searching based on specified graphical style(s). The default is include. (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param minimumSize Filter based on minimum size requested. The default is x-small. (optional)
     * @param numberOfPeople Filter based on the number of people in the image. (optional)
     * @param orientations Return only images with selected aspect ratios. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Search images using a search phrase. (optional, default to )
     * @param safeSearch Setting safe_search to \&quot;true\&quot; excludes images containing nudity, death, profanity, drugs and alcohol, suggestive content, and graphic content from the result set. The default is false. Because this is a keyword-based filter, it&#39;s possible that a small number of unsafe images may not be caught by the filter. Please direct feedback to your Getty Images Account or API support representative. (optional, default to false)
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                     The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @return ApiResponse&lt;CreativeImageSearchResults&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> InvalidIStockCollection </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CreativeImageSearchResults> v3SearchImagesCreativeGetWithHttpInfo(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, String color, List<CompositionsFilterType> compositions, String downloadProduct, Boolean embedContentOnly, List<EthnicityFilterType> ethnicity, List<Integer> excludeKeywordIds, Boolean excludeNudity, Boolean excludeEditorialUseOnly, List<CreativeImagesFieldValues> fields, List<SearchFileType> fileTypes, List<GraphicalStyle> graphicalStyles, GraphicalStylesFilterType graphicalStylesFilterType, Boolean includeRelatedSearches, List<Integer> keywordIds, TeeShirtSize minimumSize, List<NumberOfPeopleFilterType> numberOfPeople, List<ImageOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, Boolean safeSearch, CreativeImageSortOrder sortOrder, List<CreateImageSearchFacetsFields> facetFields, Boolean includeFacets, Integer facetMaxCount) throws ApiException {
        okhttp3.Call localVarCall = v3SearchImagesCreativeGetValidateBeforeCall(acceptLanguage, giCountryCode, ageOfPeople, artists, collectionCodes, collectionsFilterType, color, compositions, downloadProduct, embedContentOnly, ethnicity, excludeKeywordIds, excludeNudity, excludeEditorialUseOnly, fields, fileTypes, graphicalStyles, graphicalStylesFilterType, includeRelatedSearches, keywordIds, minimumSize, numberOfPeople, orientations, page, pageSize, phrase, safeSearch, sortOrder, facetFields, includeFacets, facetMaxCount, null);
        Type localVarReturnType = new TypeToken<CreativeImageSearchResults>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Search for creative images only (asynchronously)
     * Use this endpoint to search our contemporary stock photos, illustrations and archival images.  You&#39;ll need an API key and access token to use this resource.   You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token.  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to  build search response results. The following fields are provided for every image in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;asset_family\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to  build a detailed view of images. The following fields are provided for every image in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,         \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;editorial_segments\&quot;,         \&quot;event_ids\&quot;,         \&quot;graphical_style\&quot;,         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;orientation\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;referral_destinations\&quot;,         \&quot;title\&quot;     ] ] &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most frequently used to build a UI displaying search results. The following fields are provided for every image  in your result set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Filter based on the age of individuals in an image. (optional)
     * @param artists Search for images by specific artists (free-text, comma-separated list of artists). (optional)
     * @param collectionCodes Filter by collection codes (comma-separated list). Include or exclude based on collections_filter_type. (optional)
     * @param collectionsFilterType Use to include or exclude collections from search. The default is include (optional)
     * @param color Filter based on predominant color in an image. Use 6 character hexadecimal format (e.g., #002244). (optional)
     * @param compositions Filter based on image composition. (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param embedContentOnly Restrict search results to embeddable images. The default is false. (optional, default to false)
     * @param ethnicity Filter search results based on the ethnicity of individuals in an image. (optional)
     * @param excludeKeywordIds Return only images not tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also do not contain the requested keyword(s) are returned. (optional)
     * @param excludeNudity Excludes images containing nudity. The default is false. (optional, default to false)
     * @param excludeEditorialUseOnly Exclude images that are only available for editorial (non-commercial) use. Default value is false. (optional)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes, height, and width returned by &#39;download_sizes&#39; field are estimates. (optional)
     * @param fileTypes Return only images having a specific file type. (optional)
     * @param graphicalStyles Filter based on graphical style of the image. (optional)
     * @param graphicalStylesFilterType Provides searching based on specified graphical style(s). The default is include. (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param minimumSize Filter based on minimum size requested. The default is x-small. (optional)
     * @param numberOfPeople Filter based on the number of people in the image. (optional)
     * @param orientations Return only images with selected aspect ratios. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Search images using a search phrase. (optional, default to )
     * @param safeSearch Setting safe_search to \&quot;true\&quot; excludes images containing nudity, death, profanity, drugs and alcohol, suggestive content, and graphic content from the result set. The default is false. Because this is a keyword-based filter, it&#39;s possible that a small number of unsafe images may not be caught by the filter. Please direct feedback to your Getty Images Account or API support representative. (optional, default to false)
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                     The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> InvalidIStockCollection </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3SearchImagesCreativeGetAsync(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, String color, List<CompositionsFilterType> compositions, String downloadProduct, Boolean embedContentOnly, List<EthnicityFilterType> ethnicity, List<Integer> excludeKeywordIds, Boolean excludeNudity, Boolean excludeEditorialUseOnly, List<CreativeImagesFieldValues> fields, List<SearchFileType> fileTypes, List<GraphicalStyle> graphicalStyles, GraphicalStylesFilterType graphicalStylesFilterType, Boolean includeRelatedSearches, List<Integer> keywordIds, TeeShirtSize minimumSize, List<NumberOfPeopleFilterType> numberOfPeople, List<ImageOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, Boolean safeSearch, CreativeImageSortOrder sortOrder, List<CreateImageSearchFacetsFields> facetFields, Boolean includeFacets, Integer facetMaxCount, final ApiCallback<CreativeImageSearchResults> _callback) throws ApiException {

        okhttp3.Call localVarCall = v3SearchImagesCreativeGetValidateBeforeCall(acceptLanguage, giCountryCode, ageOfPeople, artists, collectionCodes, collectionsFilterType, color, compositions, downloadProduct, embedContentOnly, ethnicity, excludeKeywordIds, excludeNudity, excludeEditorialUseOnly, fields, fileTypes, graphicalStyles, graphicalStylesFilterType, includeRelatedSearches, keywordIds, minimumSize, numberOfPeople, orientations, page, pageSize, phrase, safeSearch, sortOrder, facetFields, includeFacets, facetMaxCount, _callback);
        Type localVarReturnType = new TypeToken<CreativeImageSearchResults>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for v3SearchImagesEditorialGet
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Filter based on the age of individuals in an image. (optional)
     * @param artists Search for images by specific artists (free-text, comma-separated list of artists). (optional)
     * @param collectionCodes Filter by collections (comma-separated list of collection codes). Include or exclude based on collections_filter_type. (optional)
     * @param collectionsFilterType Use to include or exclude collections from search. The default is include (optional)
     * @param compositions Filter based on image composition. (optional)
     * @param dateFrom Return only images that are created on or after this date. Use ISO 8601 format (e.g., 1999-12-31). (optional)
     * @param dateTo Return only images that are created on or before this date. Use ISO 8601 format (e.g., 1999-12-31). (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param editorialSegments Return only events with a matching editorial segment. (optional)
     * @param embedContentOnly Restrict search results to embeddable images. The default is false. (optional, default to false)
     * @param ethnicity Filter search results based on the ethnicity of individuals in an image. (optional)
     * @param eventIds Filter based on specific events (optional)
     * @param excludeKeywordIds Return only images not tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also do not contain the requested keyword(s) are returned. (optional)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes, height, and width returned by &#39;download_sizes&#39; field are estimates. (optional)
     * @param fileTypes Return only images having a specific file type. (optional)
     * @param graphicalStyles Filter based on graphical style of the image. (optional)
     * @param graphicalStylesFilterType Provides searching based on specified graphical style(s). The default is include. (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param minimumSize Filter based on minimum size requested. The default is x-small. (optional)
     * @param numberOfPeople Filter based on the number of people in the image. (optional)
     * @param orientations Return only images with selected aspect ratios. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Search images using a search phrase. (optional)
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param specificPeople Return only images associated with specific people (using a comma-delimited list). (optional)
     * @param minimumQualityRank Filter search results based on minimum quality ranking. Possible values 1, 2, 3 with 1 being best. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                     The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3SearchImagesEditorialGetCall(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, List<CompositionsFilterType> compositions, OffsetDateTime dateFrom, OffsetDateTime dateTo, String downloadProduct, List<EditorialSegmentContract> editorialSegments, Boolean embedContentOnly, List<EthnicityFilterType> ethnicity, List<Integer> eventIds, List<Integer> excludeKeywordIds, List<EditorialImagesFieldValues> fields, List<SearchFileType> fileTypes, List<EditorialGraphicalStyle> graphicalStyles, GraphicalStylesFilterType graphicalStylesFilterType, Boolean includeRelatedSearches, List<Integer> keywordIds, TeeShirtSize minimumSize, List<NumberOfPeopleFilterType> numberOfPeople, List<ImageOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, SortOrder sortOrder, List<String> specificPeople, Integer minimumQualityRank, List<EditorialImageSearchFacetsFields> facetFields, Boolean includeFacets, Integer facetMaxCount, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/search/images/editorial";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (ageOfPeople != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "age_of_people", ageOfPeople));
        }

        if (artists != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("artists", artists));
        }

        if (collectionCodes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "collection_codes", collectionCodes));
        }

        if (collectionsFilterType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("collections_filter_type", collectionsFilterType));
        }

        if (compositions != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "compositions", compositions));
        }

        if (dateFrom != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("date_from", dateFrom));
        }

        if (dateTo != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("date_to", dateTo));
        }

        if (downloadProduct != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("download_product", downloadProduct));
        }

        if (editorialSegments != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "editorial_segments", editorialSegments));
        }

        if (embedContentOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("embed_content_only", embedContentOnly));
        }

        if (ethnicity != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "ethnicity", ethnicity));
        }

        if (eventIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "event_ids", eventIds));
        }

        if (excludeKeywordIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "exclude_keyword_ids", excludeKeywordIds));
        }

        if (fields != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "fields", fields));
        }

        if (fileTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "file_types", fileTypes));
        }

        if (graphicalStyles != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "graphical_styles", graphicalStyles));
        }

        if (graphicalStylesFilterType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("graphical_styles_filter_type", graphicalStylesFilterType));
        }

        if (includeRelatedSearches != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include_related_searches", includeRelatedSearches));
        }

        if (keywordIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "keyword_ids", keywordIds));
        }

        if (minimumSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minimum_size", minimumSize));
        }

        if (numberOfPeople != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "number_of_people", numberOfPeople));
        }

        if (orientations != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "orientations", orientations));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page_size", pageSize));
        }

        if (phrase != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("phrase", phrase));
        }

        if (sortOrder != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_order", sortOrder));
        }

        if (specificPeople != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "specific_people", specificPeople));
        }

        if (minimumQualityRank != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minimum_quality_rank", minimumQualityRank));
        }

        if (facetFields != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "facet_fields", facetFields));
        }

        if (includeFacets != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include_facets", includeFacets));
        }

        if (facetMaxCount != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("facet_max_count", facetMaxCount));
        }

        if (acceptLanguage != null) {
            localVarHeaderParams.put("Accept-Language", localVarApiClient.parameterToString(acceptLanguage));
        }

        if (giCountryCode != null) {
            localVarHeaderParams.put("GI-Country-Code", localVarApiClient.parameterToString(giCountryCode));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2", "OAuth2", "OAuth2", "OAuth2", "Api-Key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v3SearchImagesEditorialGetValidateBeforeCall(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, List<CompositionsFilterType> compositions, OffsetDateTime dateFrom, OffsetDateTime dateTo, String downloadProduct, List<EditorialSegmentContract> editorialSegments, Boolean embedContentOnly, List<EthnicityFilterType> ethnicity, List<Integer> eventIds, List<Integer> excludeKeywordIds, List<EditorialImagesFieldValues> fields, List<SearchFileType> fileTypes, List<EditorialGraphicalStyle> graphicalStyles, GraphicalStylesFilterType graphicalStylesFilterType, Boolean includeRelatedSearches, List<Integer> keywordIds, TeeShirtSize minimumSize, List<NumberOfPeopleFilterType> numberOfPeople, List<ImageOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, SortOrder sortOrder, List<String> specificPeople, Integer minimumQualityRank, List<EditorialImageSearchFacetsFields> facetFields, Boolean includeFacets, Integer facetMaxCount, final ApiCallback _callback) throws ApiException {
        return v3SearchImagesEditorialGetCall(acceptLanguage, giCountryCode, ageOfPeople, artists, collectionCodes, collectionsFilterType, compositions, dateFrom, dateTo, downloadProduct, editorialSegments, embedContentOnly, ethnicity, eventIds, excludeKeywordIds, fields, fileTypes, graphicalStyles, graphicalStylesFilterType, includeRelatedSearches, keywordIds, minimumSize, numberOfPeople, orientations, page, pageSize, phrase, sortOrder, specificPeople, minimumQualityRank, facetFields, includeFacets, facetMaxCount, _callback);

    }

    /**
     * Search for editorial images only
     * Use this endpoint to search our editorial stock photos, illustrations and archival images.  Editorial images represent newsworthy events or illustrate matters of general interest, such as news, sport and entertainment and are generally intended for editorial use.  You&#39;ll need an API key and access token to use this resource.  You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token. To include your API token in the search request, add it to the headers as a Bearer token (example in curl):   -H \&quot;Authorization: Bearer &lt;your-token&gt;\&quot;  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every image in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;asset_family\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a detailed view of images. The following fields are provided for every image in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,         \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;editorial_segments\&quot;,         \&quot;event_ids\&quot;,         \&quot;graphical_style\&quot;,         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;orientation\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;referral_destinations\&quot;,         \&quot;title\&quot;     ] ] &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most frequently used to build a UI displaying search results. The following fields are provided for every image in your result set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Filter based on the age of individuals in an image. (optional)
     * @param artists Search for images by specific artists (free-text, comma-separated list of artists). (optional)
     * @param collectionCodes Filter by collections (comma-separated list of collection codes). Include or exclude based on collections_filter_type. (optional)
     * @param collectionsFilterType Use to include or exclude collections from search. The default is include (optional)
     * @param compositions Filter based on image composition. (optional)
     * @param dateFrom Return only images that are created on or after this date. Use ISO 8601 format (e.g., 1999-12-31). (optional)
     * @param dateTo Return only images that are created on or before this date. Use ISO 8601 format (e.g., 1999-12-31). (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param editorialSegments Return only events with a matching editorial segment. (optional)
     * @param embedContentOnly Restrict search results to embeddable images. The default is false. (optional, default to false)
     * @param ethnicity Filter search results based on the ethnicity of individuals in an image. (optional)
     * @param eventIds Filter based on specific events (optional)
     * @param excludeKeywordIds Return only images not tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also do not contain the requested keyword(s) are returned. (optional)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes, height, and width returned by &#39;download_sizes&#39; field are estimates. (optional)
     * @param fileTypes Return only images having a specific file type. (optional)
     * @param graphicalStyles Filter based on graphical style of the image. (optional)
     * @param graphicalStylesFilterType Provides searching based on specified graphical style(s). The default is include. (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param minimumSize Filter based on minimum size requested. The default is x-small. (optional)
     * @param numberOfPeople Filter based on the number of people in the image. (optional)
     * @param orientations Return only images with selected aspect ratios. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Search images using a search phrase. (optional)
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param specificPeople Return only images associated with specific people (using a comma-delimited list). (optional)
     * @param minimumQualityRank Filter search results based on minimum quality ranking. Possible values 1, 2, 3 with 1 being best. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                     The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @return EditorialImageSearchResults
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public EditorialImageSearchResults v3SearchImagesEditorialGet(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, List<CompositionsFilterType> compositions, OffsetDateTime dateFrom, OffsetDateTime dateTo, String downloadProduct, List<EditorialSegmentContract> editorialSegments, Boolean embedContentOnly, List<EthnicityFilterType> ethnicity, List<Integer> eventIds, List<Integer> excludeKeywordIds, List<EditorialImagesFieldValues> fields, List<SearchFileType> fileTypes, List<EditorialGraphicalStyle> graphicalStyles, GraphicalStylesFilterType graphicalStylesFilterType, Boolean includeRelatedSearches, List<Integer> keywordIds, TeeShirtSize minimumSize, List<NumberOfPeopleFilterType> numberOfPeople, List<ImageOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, SortOrder sortOrder, List<String> specificPeople, Integer minimumQualityRank, List<EditorialImageSearchFacetsFields> facetFields, Boolean includeFacets, Integer facetMaxCount) throws ApiException {
        ApiResponse<EditorialImageSearchResults> localVarResp = v3SearchImagesEditorialGetWithHttpInfo(acceptLanguage, giCountryCode, ageOfPeople, artists, collectionCodes, collectionsFilterType, compositions, dateFrom, dateTo, downloadProduct, editorialSegments, embedContentOnly, ethnicity, eventIds, excludeKeywordIds, fields, fileTypes, graphicalStyles, graphicalStylesFilterType, includeRelatedSearches, keywordIds, minimumSize, numberOfPeople, orientations, page, pageSize, phrase, sortOrder, specificPeople, minimumQualityRank, facetFields, includeFacets, facetMaxCount);
        return localVarResp.getData();
    }

    /**
     * Search for editorial images only
     * Use this endpoint to search our editorial stock photos, illustrations and archival images.  Editorial images represent newsworthy events or illustrate matters of general interest, such as news, sport and entertainment and are generally intended for editorial use.  You&#39;ll need an API key and access token to use this resource.  You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token. To include your API token in the search request, add it to the headers as a Bearer token (example in curl):   -H \&quot;Authorization: Bearer &lt;your-token&gt;\&quot;  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every image in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;asset_family\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a detailed view of images. The following fields are provided for every image in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,         \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;editorial_segments\&quot;,         \&quot;event_ids\&quot;,         \&quot;graphical_style\&quot;,         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;orientation\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;referral_destinations\&quot;,         \&quot;title\&quot;     ] ] &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most frequently used to build a UI displaying search results. The following fields are provided for every image in your result set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Filter based on the age of individuals in an image. (optional)
     * @param artists Search for images by specific artists (free-text, comma-separated list of artists). (optional)
     * @param collectionCodes Filter by collections (comma-separated list of collection codes). Include or exclude based on collections_filter_type. (optional)
     * @param collectionsFilterType Use to include or exclude collections from search. The default is include (optional)
     * @param compositions Filter based on image composition. (optional)
     * @param dateFrom Return only images that are created on or after this date. Use ISO 8601 format (e.g., 1999-12-31). (optional)
     * @param dateTo Return only images that are created on or before this date. Use ISO 8601 format (e.g., 1999-12-31). (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param editorialSegments Return only events with a matching editorial segment. (optional)
     * @param embedContentOnly Restrict search results to embeddable images. The default is false. (optional, default to false)
     * @param ethnicity Filter search results based on the ethnicity of individuals in an image. (optional)
     * @param eventIds Filter based on specific events (optional)
     * @param excludeKeywordIds Return only images not tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also do not contain the requested keyword(s) are returned. (optional)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes, height, and width returned by &#39;download_sizes&#39; field are estimates. (optional)
     * @param fileTypes Return only images having a specific file type. (optional)
     * @param graphicalStyles Filter based on graphical style of the image. (optional)
     * @param graphicalStylesFilterType Provides searching based on specified graphical style(s). The default is include. (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param minimumSize Filter based on minimum size requested. The default is x-small. (optional)
     * @param numberOfPeople Filter based on the number of people in the image. (optional)
     * @param orientations Return only images with selected aspect ratios. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Search images using a search phrase. (optional)
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param specificPeople Return only images associated with specific people (using a comma-delimited list). (optional)
     * @param minimumQualityRank Filter search results based on minimum quality ranking. Possible values 1, 2, 3 with 1 being best. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                     The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @return ApiResponse&lt;EditorialImageSearchResults&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EditorialImageSearchResults> v3SearchImagesEditorialGetWithHttpInfo(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, List<CompositionsFilterType> compositions, OffsetDateTime dateFrom, OffsetDateTime dateTo, String downloadProduct, List<EditorialSegmentContract> editorialSegments, Boolean embedContentOnly, List<EthnicityFilterType> ethnicity, List<Integer> eventIds, List<Integer> excludeKeywordIds, List<EditorialImagesFieldValues> fields, List<SearchFileType> fileTypes, List<EditorialGraphicalStyle> graphicalStyles, GraphicalStylesFilterType graphicalStylesFilterType, Boolean includeRelatedSearches, List<Integer> keywordIds, TeeShirtSize minimumSize, List<NumberOfPeopleFilterType> numberOfPeople, List<ImageOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, SortOrder sortOrder, List<String> specificPeople, Integer minimumQualityRank, List<EditorialImageSearchFacetsFields> facetFields, Boolean includeFacets, Integer facetMaxCount) throws ApiException {
        okhttp3.Call localVarCall = v3SearchImagesEditorialGetValidateBeforeCall(acceptLanguage, giCountryCode, ageOfPeople, artists, collectionCodes, collectionsFilterType, compositions, dateFrom, dateTo, downloadProduct, editorialSegments, embedContentOnly, ethnicity, eventIds, excludeKeywordIds, fields, fileTypes, graphicalStyles, graphicalStylesFilterType, includeRelatedSearches, keywordIds, minimumSize, numberOfPeople, orientations, page, pageSize, phrase, sortOrder, specificPeople, minimumQualityRank, facetFields, includeFacets, facetMaxCount, null);
        Type localVarReturnType = new TypeToken<EditorialImageSearchResults>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Search for editorial images only (asynchronously)
     * Use this endpoint to search our editorial stock photos, illustrations and archival images.  Editorial images represent newsworthy events or illustrate matters of general interest, such as news, sport and entertainment and are generally intended for editorial use.  You&#39;ll need an API key and access token to use this resource.  You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token. To include your API token in the search request, add it to the headers as a Bearer token (example in curl):   -H \&quot;Authorization: Bearer &lt;your-token&gt;\&quot;  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every image in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;asset_family\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a detailed view of images. The following fields are provided for every image in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,         \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;editorial_segments\&quot;,         \&quot;event_ids\&quot;,         \&quot;graphical_style\&quot;,         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;orientation\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;referral_destinations\&quot;,         \&quot;title\&quot;     ] ] &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most frequently used to build a UI displaying search results. The following fields are provided for every image in your result set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Filter based on the age of individuals in an image. (optional)
     * @param artists Search for images by specific artists (free-text, comma-separated list of artists). (optional)
     * @param collectionCodes Filter by collections (comma-separated list of collection codes). Include or exclude based on collections_filter_type. (optional)
     * @param collectionsFilterType Use to include or exclude collections from search. The default is include (optional)
     * @param compositions Filter based on image composition. (optional)
     * @param dateFrom Return only images that are created on or after this date. Use ISO 8601 format (e.g., 1999-12-31). (optional)
     * @param dateTo Return only images that are created on or before this date. Use ISO 8601 format (e.g., 1999-12-31). (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param editorialSegments Return only events with a matching editorial segment. (optional)
     * @param embedContentOnly Restrict search results to embeddable images. The default is false. (optional, default to false)
     * @param ethnicity Filter search results based on the ethnicity of individuals in an image. (optional)
     * @param eventIds Filter based on specific events (optional)
     * @param excludeKeywordIds Return only images not tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also do not contain the requested keyword(s) are returned. (optional)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes, height, and width returned by &#39;download_sizes&#39; field are estimates. (optional)
     * @param fileTypes Return only images having a specific file type. (optional)
     * @param graphicalStyles Filter based on graphical style of the image. (optional)
     * @param graphicalStylesFilterType Provides searching based on specified graphical style(s). The default is include. (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param minimumSize Filter based on minimum size requested. The default is x-small. (optional)
     * @param numberOfPeople Filter based on the number of people in the image. (optional)
     * @param orientations Return only images with selected aspect ratios. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Search images using a search phrase. (optional)
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param specificPeople Return only images associated with specific people (using a comma-delimited list). (optional)
     * @param minimumQualityRank Filter search results based on minimum quality ranking. Possible values 1, 2, 3 with 1 being best. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                     The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3SearchImagesEditorialGetAsync(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, List<CompositionsFilterType> compositions, OffsetDateTime dateFrom, OffsetDateTime dateTo, String downloadProduct, List<EditorialSegmentContract> editorialSegments, Boolean embedContentOnly, List<EthnicityFilterType> ethnicity, List<Integer> eventIds, List<Integer> excludeKeywordIds, List<EditorialImagesFieldValues> fields, List<SearchFileType> fileTypes, List<EditorialGraphicalStyle> graphicalStyles, GraphicalStylesFilterType graphicalStylesFilterType, Boolean includeRelatedSearches, List<Integer> keywordIds, TeeShirtSize minimumSize, List<NumberOfPeopleFilterType> numberOfPeople, List<ImageOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, SortOrder sortOrder, List<String> specificPeople, Integer minimumQualityRank, List<EditorialImageSearchFacetsFields> facetFields, Boolean includeFacets, Integer facetMaxCount, final ApiCallback<EditorialImageSearchResults> _callback) throws ApiException {

        okhttp3.Call localVarCall = v3SearchImagesEditorialGetValidateBeforeCall(acceptLanguage, giCountryCode, ageOfPeople, artists, collectionCodes, collectionsFilterType, compositions, dateFrom, dateTo, downloadProduct, editorialSegments, embedContentOnly, ethnicity, eventIds, excludeKeywordIds, fields, fileTypes, graphicalStyles, graphicalStylesFilterType, includeRelatedSearches, keywordIds, minimumSize, numberOfPeople, orientations, page, pageSize, phrase, sortOrder, specificPeople, minimumQualityRank, facetFields, includeFacets, facetMaxCount, _callback);
        Type localVarReturnType = new TypeToken<EditorialImageSearchResults>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for v3SearchImagesGet
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Filter based on the age of individuals in an image. (optional)
     * @param artists Search for images by specific artists (free-text, comma-separated list of artists). (optional)
     * @param collectionCodes Filter by collection codes (comma-separated list). Include or exclude based on collections_filter_type. (optional)
     * @param collectionsFilterType Provides searching based on specified collection(s). The default is Include (optional)
     * @param color Filter based on predominant color in an image. Use 6 character hexidecimal format (e.g., #002244). Note: when specified, results will not contain editorial images. (optional)
     * @param compositions Filter based on image composition. (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param embedContentOnly Restrict search results to embeddable images. The default is false. (optional, default to false)
     * @param eventIds Filter based on specific events (optional)
     * @param ethnicity Filter search results based on the ethnicity of individuals in an image. (optional)
     * @param excludeNudity Excludes images containing nudity. The default is false. (optional, default to false)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. (optional)
     * @param fileTypes Return only images having a specific file type. (optional)
     * @param graphicalStyles Filter based on graphical style of the image. (optional)
     * @param graphicalStylesFilterType Provides searching based on specified graphical style(s). The default is Include (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param minimumSize Filter based on minimum size requested. The default is x-small (optional)
     * @param numberOfPeople Filter based on the number of people in the image. (optional)
     * @param orientations Return only images with selected aspect ratios. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Search images using a search phrase. (optional)
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param specificPeople Return only images associated with specific people (using a comma-delimited list). (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3SearchImagesGetCall(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, String color, List<CompositionsFilterType> compositions, String downloadProduct, Boolean embedContentOnly, List<Integer> eventIds, List<EthnicityFilterType> ethnicity, Boolean excludeNudity, List<ImagesFieldValues> fields, List<SearchFileType> fileTypes, List<GraphicalStyle> graphicalStyles, GraphicalStylesFilterType graphicalStylesFilterType, Boolean includeRelatedSearches, List<Integer> keywordIds, TeeShirtSize minimumSize, List<NumberOfPeopleFilterType> numberOfPeople, List<ImageOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, BlendedImageSortOrder sortOrder, List<String> specificPeople, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/search/images";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (ageOfPeople != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "age_of_people", ageOfPeople));
        }

        if (artists != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("artists", artists));
        }

        if (collectionCodes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "collection_codes", collectionCodes));
        }

        if (collectionsFilterType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("collections_filter_type", collectionsFilterType));
        }

        if (color != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("color", color));
        }

        if (compositions != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "compositions", compositions));
        }

        if (downloadProduct != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("download_product", downloadProduct));
        }

        if (embedContentOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("embed_content_only", embedContentOnly));
        }

        if (eventIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "event_ids", eventIds));
        }

        if (ethnicity != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "ethnicity", ethnicity));
        }

        if (excludeNudity != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("exclude_nudity", excludeNudity));
        }

        if (fields != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "fields", fields));
        }

        if (fileTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "file_types", fileTypes));
        }

        if (graphicalStyles != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "graphical_styles", graphicalStyles));
        }

        if (graphicalStylesFilterType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("graphical_styles_filter_type", graphicalStylesFilterType));
        }

        if (includeRelatedSearches != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include_related_searches", includeRelatedSearches));
        }

        if (keywordIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "keyword_ids", keywordIds));
        }

        if (minimumSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("minimum_size", minimumSize));
        }

        if (numberOfPeople != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "number_of_people", numberOfPeople));
        }

        if (orientations != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "orientations", orientations));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page_size", pageSize));
        }

        if (phrase != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("phrase", phrase));
        }

        if (sortOrder != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_order", sortOrder));
        }

        if (specificPeople != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "specific_people", specificPeople));
        }

        if (acceptLanguage != null) {
            localVarHeaderParams.put("Accept-Language", localVarApiClient.parameterToString(acceptLanguage));
        }

        if (giCountryCode != null) {
            localVarHeaderParams.put("GI-Country-Code", localVarApiClient.parameterToString(giCountryCode));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2", "OAuth2", "OAuth2", "OAuth2", "Api-Key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v3SearchImagesGetValidateBeforeCall(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, String color, List<CompositionsFilterType> compositions, String downloadProduct, Boolean embedContentOnly, List<Integer> eventIds, List<EthnicityFilterType> ethnicity, Boolean excludeNudity, List<ImagesFieldValues> fields, List<SearchFileType> fileTypes, List<GraphicalStyle> graphicalStyles, GraphicalStylesFilterType graphicalStylesFilterType, Boolean includeRelatedSearches, List<Integer> keywordIds, TeeShirtSize minimumSize, List<NumberOfPeopleFilterType> numberOfPeople, List<ImageOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, BlendedImageSortOrder sortOrder, List<String> specificPeople, final ApiCallback _callback) throws ApiException {
        return v3SearchImagesGetCall(acceptLanguage, giCountryCode, ageOfPeople, artists, collectionCodes, collectionsFilterType, color, compositions, downloadProduct, embedContentOnly, eventIds, ethnicity, excludeNudity, fields, fileTypes, graphicalStyles, graphicalStylesFilterType, includeRelatedSearches, keywordIds, minimumSize, numberOfPeople, orientations, page, pageSize, phrase, sortOrder, specificPeople, _callback);

    }

    /**
     * Search for both creative and editorial images - *** DEPRECATED ***
     * ## _This endpoint draws from such a large diversity of content, the results will not be as relevant as when the more specific Creative or Editorial endpoints are used. Additionally, the response time for this endpoint is slower compared to that for Creative and Editorial-specific endpoints. For these reasons,_ _**it is highly recommended that those endpoints are used instead of this blended endpoint.**_    You&#39;ll need an API key and access token to use this resource.  You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token.&lt;br&gt; To include your API token in the search request, add it to the headers as a Bearer token (example in curl):   -H \&quot;Authorization: Bearer &lt;your-token&gt;\&quot;  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every image in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;asset_family\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a detailed view of images.  The following fields are provided for every image in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,         \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;editorial_segments\&quot;,         \&quot;event_ids\&quot;,         \&quot;graphical_style\&quot;,         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;orientation\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;referral_destinations\&quot;,         \&quot;title\&quot;     ] ] &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most  frequently used to build a UI displaying search results. The following fields are provided for every image in your result set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;  ## Request Usage Considerations  - Specifying the \&quot;entity_details\&quot; response field can have significant performance implications. The field should be used only when necessary. 
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Filter based on the age of individuals in an image. (optional)
     * @param artists Search for images by specific artists (free-text, comma-separated list of artists). (optional)
     * @param collectionCodes Filter by collection codes (comma-separated list). Include or exclude based on collections_filter_type. (optional)
     * @param collectionsFilterType Provides searching based on specified collection(s). The default is Include (optional)
     * @param color Filter based on predominant color in an image. Use 6 character hexidecimal format (e.g., #002244). Note: when specified, results will not contain editorial images. (optional)
     * @param compositions Filter based on image composition. (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param embedContentOnly Restrict search results to embeddable images. The default is false. (optional, default to false)
     * @param eventIds Filter based on specific events (optional)
     * @param ethnicity Filter search results based on the ethnicity of individuals in an image. (optional)
     * @param excludeNudity Excludes images containing nudity. The default is false. (optional, default to false)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. (optional)
     * @param fileTypes Return only images having a specific file type. (optional)
     * @param graphicalStyles Filter based on graphical style of the image. (optional)
     * @param graphicalStylesFilterType Provides searching based on specified graphical style(s). The default is Include (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param minimumSize Filter based on minimum size requested. The default is x-small (optional)
     * @param numberOfPeople Filter based on the number of people in the image. (optional)
     * @param orientations Return only images with selected aspect ratios. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Search images using a search phrase. (optional)
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param specificPeople Return only images associated with specific people (using a comma-delimited list). (optional)
     * @return ImageSearchItemSearchResults
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public ImageSearchItemSearchResults v3SearchImagesGet(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, String color, List<CompositionsFilterType> compositions, String downloadProduct, Boolean embedContentOnly, List<Integer> eventIds, List<EthnicityFilterType> ethnicity, Boolean excludeNudity, List<ImagesFieldValues> fields, List<SearchFileType> fileTypes, List<GraphicalStyle> graphicalStyles, GraphicalStylesFilterType graphicalStylesFilterType, Boolean includeRelatedSearches, List<Integer> keywordIds, TeeShirtSize minimumSize, List<NumberOfPeopleFilterType> numberOfPeople, List<ImageOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, BlendedImageSortOrder sortOrder, List<String> specificPeople) throws ApiException {
        ApiResponse<ImageSearchItemSearchResults> localVarResp = v3SearchImagesGetWithHttpInfo(acceptLanguage, giCountryCode, ageOfPeople, artists, collectionCodes, collectionsFilterType, color, compositions, downloadProduct, embedContentOnly, eventIds, ethnicity, excludeNudity, fields, fileTypes, graphicalStyles, graphicalStylesFilterType, includeRelatedSearches, keywordIds, minimumSize, numberOfPeople, orientations, page, pageSize, phrase, sortOrder, specificPeople);
        return localVarResp.getData();
    }

    /**
     * Search for both creative and editorial images - *** DEPRECATED ***
     * ## _This endpoint draws from such a large diversity of content, the results will not be as relevant as when the more specific Creative or Editorial endpoints are used. Additionally, the response time for this endpoint is slower compared to that for Creative and Editorial-specific endpoints. For these reasons,_ _**it is highly recommended that those endpoints are used instead of this blended endpoint.**_    You&#39;ll need an API key and access token to use this resource.  You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token.&lt;br&gt; To include your API token in the search request, add it to the headers as a Bearer token (example in curl):   -H \&quot;Authorization: Bearer &lt;your-token&gt;\&quot;  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every image in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;asset_family\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a detailed view of images.  The following fields are provided for every image in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,         \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;editorial_segments\&quot;,         \&quot;event_ids\&quot;,         \&quot;graphical_style\&quot;,         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;orientation\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;referral_destinations\&quot;,         \&quot;title\&quot;     ] ] &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most  frequently used to build a UI displaying search results. The following fields are provided for every image in your result set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;  ## Request Usage Considerations  - Specifying the \&quot;entity_details\&quot; response field can have significant performance implications. The field should be used only when necessary. 
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Filter based on the age of individuals in an image. (optional)
     * @param artists Search for images by specific artists (free-text, comma-separated list of artists). (optional)
     * @param collectionCodes Filter by collection codes (comma-separated list). Include or exclude based on collections_filter_type. (optional)
     * @param collectionsFilterType Provides searching based on specified collection(s). The default is Include (optional)
     * @param color Filter based on predominant color in an image. Use 6 character hexidecimal format (e.g., #002244). Note: when specified, results will not contain editorial images. (optional)
     * @param compositions Filter based on image composition. (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param embedContentOnly Restrict search results to embeddable images. The default is false. (optional, default to false)
     * @param eventIds Filter based on specific events (optional)
     * @param ethnicity Filter search results based on the ethnicity of individuals in an image. (optional)
     * @param excludeNudity Excludes images containing nudity. The default is false. (optional, default to false)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. (optional)
     * @param fileTypes Return only images having a specific file type. (optional)
     * @param graphicalStyles Filter based on graphical style of the image. (optional)
     * @param graphicalStylesFilterType Provides searching based on specified graphical style(s). The default is Include (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param minimumSize Filter based on minimum size requested. The default is x-small (optional)
     * @param numberOfPeople Filter based on the number of people in the image. (optional)
     * @param orientations Return only images with selected aspect ratios. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Search images using a search phrase. (optional)
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param specificPeople Return only images associated with specific people (using a comma-delimited list). (optional)
     * @return ApiResponse&lt;ImageSearchItemSearchResults&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<ImageSearchItemSearchResults> v3SearchImagesGetWithHttpInfo(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, String color, List<CompositionsFilterType> compositions, String downloadProduct, Boolean embedContentOnly, List<Integer> eventIds, List<EthnicityFilterType> ethnicity, Boolean excludeNudity, List<ImagesFieldValues> fields, List<SearchFileType> fileTypes, List<GraphicalStyle> graphicalStyles, GraphicalStylesFilterType graphicalStylesFilterType, Boolean includeRelatedSearches, List<Integer> keywordIds, TeeShirtSize minimumSize, List<NumberOfPeopleFilterType> numberOfPeople, List<ImageOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, BlendedImageSortOrder sortOrder, List<String> specificPeople) throws ApiException {
        okhttp3.Call localVarCall = v3SearchImagesGetValidateBeforeCall(acceptLanguage, giCountryCode, ageOfPeople, artists, collectionCodes, collectionsFilterType, color, compositions, downloadProduct, embedContentOnly, eventIds, ethnicity, excludeNudity, fields, fileTypes, graphicalStyles, graphicalStylesFilterType, includeRelatedSearches, keywordIds, minimumSize, numberOfPeople, orientations, page, pageSize, phrase, sortOrder, specificPeople, null);
        Type localVarReturnType = new TypeToken<ImageSearchItemSearchResults>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Search for both creative and editorial images - *** DEPRECATED *** (asynchronously)
     * ## _This endpoint draws from such a large diversity of content, the results will not be as relevant as when the more specific Creative or Editorial endpoints are used. Additionally, the response time for this endpoint is slower compared to that for Creative and Editorial-specific endpoints. For these reasons,_ _**it is highly recommended that those endpoints are used instead of this blended endpoint.**_    You&#39;ll need an API key and access token to use this resource.  You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token.&lt;br&gt; To include your API token in the search request, add it to the headers as a Bearer token (example in curl):   -H \&quot;Authorization: Bearer &lt;your-token&gt;\&quot;  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every image in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;asset_family\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a detailed view of images.  The following fields are provided for every image in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,         \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:          [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;editorial_segments\&quot;,         \&quot;event_ids\&quot;,         \&quot;graphical_style\&quot;,         \&quot;license_model\&quot;,         \&quot;max_dimensions\&quot;,         \&quot;orientation\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;referral_destinations\&quot;,         \&quot;title\&quot;     ] ] &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most  frequently used to build a UI displaying search results. The following fields are provided for every image in your result set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;images\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;  ## Request Usage Considerations  - Specifying the \&quot;entity_details\&quot; response field can have significant performance implications. The field should be used only when necessary. 
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Filter based on the age of individuals in an image. (optional)
     * @param artists Search for images by specific artists (free-text, comma-separated list of artists). (optional)
     * @param collectionCodes Filter by collection codes (comma-separated list). Include or exclude based on collections_filter_type. (optional)
     * @param collectionsFilterType Provides searching based on specified collection(s). The default is Include (optional)
     * @param color Filter based on predominant color in an image. Use 6 character hexidecimal format (e.g., #002244). Note: when specified, results will not contain editorial images. (optional)
     * @param compositions Filter based on image composition. (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param embedContentOnly Restrict search results to embeddable images. The default is false. (optional, default to false)
     * @param eventIds Filter based on specific events (optional)
     * @param ethnicity Filter search results based on the ethnicity of individuals in an image. (optional)
     * @param excludeNudity Excludes images containing nudity. The default is false. (optional, default to false)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. (optional)
     * @param fileTypes Return only images having a specific file type. (optional)
     * @param graphicalStyles Filter based on graphical style of the image. (optional)
     * @param graphicalStylesFilterType Provides searching based on specified graphical style(s). The default is Include (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only images tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those images matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param minimumSize Filter based on minimum size requested. The default is x-small (optional)
     * @param numberOfPeople Filter based on the number of people in the image. (optional)
     * @param orientations Return only images with selected aspect ratios. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Search images using a search phrase. (optional)
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param specificPeople Return only images associated with specific people (using a comma-delimited list). (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3SearchImagesGetAsync(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, String color, List<CompositionsFilterType> compositions, String downloadProduct, Boolean embedContentOnly, List<Integer> eventIds, List<EthnicityFilterType> ethnicity, Boolean excludeNudity, List<ImagesFieldValues> fields, List<SearchFileType> fileTypes, List<GraphicalStyle> graphicalStyles, GraphicalStylesFilterType graphicalStylesFilterType, Boolean includeRelatedSearches, List<Integer> keywordIds, TeeShirtSize minimumSize, List<NumberOfPeopleFilterType> numberOfPeople, List<ImageOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, BlendedImageSortOrder sortOrder, List<String> specificPeople, final ApiCallback<ImageSearchItemSearchResults> _callback) throws ApiException {

        okhttp3.Call localVarCall = v3SearchImagesGetValidateBeforeCall(acceptLanguage, giCountryCode, ageOfPeople, artists, collectionCodes, collectionsFilterType, color, compositions, downloadProduct, embedContentOnly, eventIds, ethnicity, excludeNudity, fields, fileTypes, graphicalStyles, graphicalStylesFilterType, includeRelatedSearches, keywordIds, minimumSize, numberOfPeople, orientations, page, pageSize, phrase, sortOrder, specificPeople, _callback);
        Type localVarReturnType = new TypeToken<ImageSearchItemSearchResults>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for v3SearchVideosCreativeByImageGet
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param assetId Specifies the Getty video id to use in the search. (optional)
     * @param excludeEditorialUseOnly Exclude videos that are only available for editorial (non-commercial) use. Default value is false. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                      The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes returned by &#39;download_sizes&#39; field is an estimate. (optional)
     * @param imageUrl Specifies the location of the image to use in the search. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param productTypes Filter images to those from one of your product types.                       Allowed values are easyaccess, imagepack, premiumaccess and royaltyfreesubscription.                       If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the product_types value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> AssetNotFound </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> InvalidIStockCollection </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3SearchVideosCreativeByImageGetCall(String acceptLanguage, String giCountryCode, String assetId, Boolean excludeEditorialUseOnly, List<CreateVideoSearchFacetsFields> facetFields, Integer facetMaxCount, List<CreativeVideosFieldValues> fields, String imageUrl, Boolean includeFacets, Integer page, Integer pageSize, List<String> productTypes, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/search/videos/creative/by-image";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (assetId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("asset_id", assetId));
        }

        if (excludeEditorialUseOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("exclude_editorial_use_only", excludeEditorialUseOnly));
        }

        if (facetFields != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "facet_fields", facetFields));
        }

        if (facetMaxCount != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("facet_max_count", facetMaxCount));
        }

        if (fields != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "fields", fields));
        }

        if (imageUrl != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("image_url", imageUrl));
        }

        if (includeFacets != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include_facets", includeFacets));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page_size", pageSize));
        }

        if (productTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "product_types", productTypes));
        }

        if (acceptLanguage != null) {
            localVarHeaderParams.put("Accept-Language", localVarApiClient.parameterToString(acceptLanguage));
        }

        if (giCountryCode != null) {
            localVarHeaderParams.put("GI-Country-Code", localVarApiClient.parameterToString(giCountryCode));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2", "OAuth2", "OAuth2", "OAuth2", "Api-Key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v3SearchVideosCreativeByImageGetValidateBeforeCall(String acceptLanguage, String giCountryCode, String assetId, Boolean excludeEditorialUseOnly, List<CreateVideoSearchFacetsFields> facetFields, Integer facetMaxCount, List<CreativeVideosFieldValues> fields, String imageUrl, Boolean includeFacets, Integer page, Integer pageSize, List<String> productTypes, final ApiCallback _callback) throws ApiException {
        return v3SearchVideosCreativeByImageGetCall(acceptLanguage, giCountryCode, assetId, excludeEditorialUseOnly, facetFields, facetMaxCount, fields, imageUrl, includeFacets, page, pageSize, productTypes, _callback);

    }

    /**
     * Search for creative videos based on url
     * Search for **similar creative videos** by passing an &#x60;image_url&#x60; to an uploaded image/frame grab from a video OR an &#x60;asset_id&#x60; of an asset in our catalog.  All responses will have the &#x60;exclude_nudity&#x60; filter automatically applied.  ## Searching by URL  Before calling the search by image endpoint, an image or frame grab in JPEG format must be uploaded to &#x60;https://api.gettyimages.com/v3/search/by-image/uploads/{CLIENT_IMAGE.jpg}&#x60;, where the client defines the &#x60;{CLIENT_IMAGE.jpg}&#x60; portion of the URL.  For example, using cURL:  &#x60;&#x60;&#x60; sh curl -i -X PUT https://api.gettyimages.com/v3/search/by-image/uploads/my-test-image.jpg -H &#39;Content-Type: image/jpeg&#39; -H &#39;Api-Key: API_KEY&#39; --data-binary \&quot;@testimage.jpg\&quot; &#x60;&#x60;&#x60;  Once the image has been uploaded, use the full URL in the &#x60;image_url&#x60; parameter, e.g. &#x60;image_url&#x3D;https://api.gettyimages.com/v3/search/by-image/uploads/my-test-image.jpg&#x60;.  - Uploaded files must be 10MB or smaller - Uploads to the same URL will overwrite each other, so ensure that the client application is handling naming uniqueness appropriately. - Uploads expire after 24 hours. - Uploads and searches must be performed using the _same_ API Key.  ## Searching by asset id  When searching by &#x60;asset_id&#x60;, any image or video asset id in the Getty/iStock catalog can be used as the source for similar videos. 
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param assetId Specifies the Getty video id to use in the search. (optional)
     * @param excludeEditorialUseOnly Exclude videos that are only available for editorial (non-commercial) use. Default value is false. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                      The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes returned by &#39;download_sizes&#39; field is an estimate. (optional)
     * @param imageUrl Specifies the location of the image to use in the search. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param productTypes Filter images to those from one of your product types.                       Allowed values are easyaccess, imagepack, premiumaccess and royaltyfreesubscription.                       If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the product_types value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @return CreativeVideoSearchResults
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> AssetNotFound </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> InvalidIStockCollection </td><td>  -  </td></tr>
     </table>
     */
    public CreativeVideoSearchResults v3SearchVideosCreativeByImageGet(String acceptLanguage, String giCountryCode, String assetId, Boolean excludeEditorialUseOnly, List<CreateVideoSearchFacetsFields> facetFields, Integer facetMaxCount, List<CreativeVideosFieldValues> fields, String imageUrl, Boolean includeFacets, Integer page, Integer pageSize, List<String> productTypes) throws ApiException {
        ApiResponse<CreativeVideoSearchResults> localVarResp = v3SearchVideosCreativeByImageGetWithHttpInfo(acceptLanguage, giCountryCode, assetId, excludeEditorialUseOnly, facetFields, facetMaxCount, fields, imageUrl, includeFacets, page, pageSize, productTypes);
        return localVarResp.getData();
    }

    /**
     * Search for creative videos based on url
     * Search for **similar creative videos** by passing an &#x60;image_url&#x60; to an uploaded image/frame grab from a video OR an &#x60;asset_id&#x60; of an asset in our catalog.  All responses will have the &#x60;exclude_nudity&#x60; filter automatically applied.  ## Searching by URL  Before calling the search by image endpoint, an image or frame grab in JPEG format must be uploaded to &#x60;https://api.gettyimages.com/v3/search/by-image/uploads/{CLIENT_IMAGE.jpg}&#x60;, where the client defines the &#x60;{CLIENT_IMAGE.jpg}&#x60; portion of the URL.  For example, using cURL:  &#x60;&#x60;&#x60; sh curl -i -X PUT https://api.gettyimages.com/v3/search/by-image/uploads/my-test-image.jpg -H &#39;Content-Type: image/jpeg&#39; -H &#39;Api-Key: API_KEY&#39; --data-binary \&quot;@testimage.jpg\&quot; &#x60;&#x60;&#x60;  Once the image has been uploaded, use the full URL in the &#x60;image_url&#x60; parameter, e.g. &#x60;image_url&#x3D;https://api.gettyimages.com/v3/search/by-image/uploads/my-test-image.jpg&#x60;.  - Uploaded files must be 10MB or smaller - Uploads to the same URL will overwrite each other, so ensure that the client application is handling naming uniqueness appropriately. - Uploads expire after 24 hours. - Uploads and searches must be performed using the _same_ API Key.  ## Searching by asset id  When searching by &#x60;asset_id&#x60;, any image or video asset id in the Getty/iStock catalog can be used as the source for similar videos. 
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param assetId Specifies the Getty video id to use in the search. (optional)
     * @param excludeEditorialUseOnly Exclude videos that are only available for editorial (non-commercial) use. Default value is false. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                      The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes returned by &#39;download_sizes&#39; field is an estimate. (optional)
     * @param imageUrl Specifies the location of the image to use in the search. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param productTypes Filter images to those from one of your product types.                       Allowed values are easyaccess, imagepack, premiumaccess and royaltyfreesubscription.                       If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the product_types value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @return ApiResponse&lt;CreativeVideoSearchResults&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> AssetNotFound </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> InvalidIStockCollection </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CreativeVideoSearchResults> v3SearchVideosCreativeByImageGetWithHttpInfo(String acceptLanguage, String giCountryCode, String assetId, Boolean excludeEditorialUseOnly, List<CreateVideoSearchFacetsFields> facetFields, Integer facetMaxCount, List<CreativeVideosFieldValues> fields, String imageUrl, Boolean includeFacets, Integer page, Integer pageSize, List<String> productTypes) throws ApiException {
        okhttp3.Call localVarCall = v3SearchVideosCreativeByImageGetValidateBeforeCall(acceptLanguage, giCountryCode, assetId, excludeEditorialUseOnly, facetFields, facetMaxCount, fields, imageUrl, includeFacets, page, pageSize, productTypes, null);
        Type localVarReturnType = new TypeToken<CreativeVideoSearchResults>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Search for creative videos based on url (asynchronously)
     * Search for **similar creative videos** by passing an &#x60;image_url&#x60; to an uploaded image/frame grab from a video OR an &#x60;asset_id&#x60; of an asset in our catalog.  All responses will have the &#x60;exclude_nudity&#x60; filter automatically applied.  ## Searching by URL  Before calling the search by image endpoint, an image or frame grab in JPEG format must be uploaded to &#x60;https://api.gettyimages.com/v3/search/by-image/uploads/{CLIENT_IMAGE.jpg}&#x60;, where the client defines the &#x60;{CLIENT_IMAGE.jpg}&#x60; portion of the URL.  For example, using cURL:  &#x60;&#x60;&#x60; sh curl -i -X PUT https://api.gettyimages.com/v3/search/by-image/uploads/my-test-image.jpg -H &#39;Content-Type: image/jpeg&#39; -H &#39;Api-Key: API_KEY&#39; --data-binary \&quot;@testimage.jpg\&quot; &#x60;&#x60;&#x60;  Once the image has been uploaded, use the full URL in the &#x60;image_url&#x60; parameter, e.g. &#x60;image_url&#x3D;https://api.gettyimages.com/v3/search/by-image/uploads/my-test-image.jpg&#x60;.  - Uploaded files must be 10MB or smaller - Uploads to the same URL will overwrite each other, so ensure that the client application is handling naming uniqueness appropriately. - Uploads expire after 24 hours. - Uploads and searches must be performed using the _same_ API Key.  ## Searching by asset id  When searching by &#x60;asset_id&#x60;, any image or video asset id in the Getty/iStock catalog can be used as the source for similar videos. 
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param assetId Specifies the Getty video id to use in the search. (optional)
     * @param excludeEditorialUseOnly Exclude videos that are only available for editorial (non-commercial) use. Default value is false. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                      The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes returned by &#39;download_sizes&#39; field is an estimate. (optional)
     * @param imageUrl Specifies the location of the image to use in the search. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param page Request results starting at a page number (default is 1). (optional, default to 1)
     * @param pageSize Request number of images to return in each page. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param productTypes Filter images to those from one of your product types.                       Allowed values are easyaccess, imagepack, premiumaccess and royaltyfreesubscription.                       If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the product_types value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Success </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
        <tr><td> 404 </td><td> AssetNotFound </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> InvalidIStockCollection </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3SearchVideosCreativeByImageGetAsync(String acceptLanguage, String giCountryCode, String assetId, Boolean excludeEditorialUseOnly, List<CreateVideoSearchFacetsFields> facetFields, Integer facetMaxCount, List<CreativeVideosFieldValues> fields, String imageUrl, Boolean includeFacets, Integer page, Integer pageSize, List<String> productTypes, final ApiCallback<CreativeVideoSearchResults> _callback) throws ApiException {

        okhttp3.Call localVarCall = v3SearchVideosCreativeByImageGetValidateBeforeCall(acceptLanguage, giCountryCode, assetId, excludeEditorialUseOnly, facetFields, facetMaxCount, fields, imageUrl, includeFacets, page, pageSize, productTypes, _callback);
        Type localVarReturnType = new TypeToken<CreativeVideoSearchResults>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for v3SearchVideosCreativeGet
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Provides filtering according to the age of individuals in a video. (optional)
     * @param artists Search for videos by specific artists (free-text, comma-separated list of artists). (optional)
     * @param aspectRatios Search for videos by specific aspect ratios. (optional)
     * @param collectionCodes Provides filtering by collection code. (optional)
     * @param collectionsFilterType Use to include or exclude collections from search. The default is include (optional)
     * @param compositions Filter based on video composition. (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param excludeNudity Excludes videos containing nudity. The default is false. (optional, default to false)
     * @param excludeEditorialUseOnly Exclude videos that are only available for editorial (non-commercial) use. Default value is false. (optional)
     * @param excludeKeywordIds Return only videos not tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those videos matching the query phrase which also do not contain the requested keyword(s) are returned. (optional)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes returned by &#39;download_sizes&#39; field is an estimate. (optional)
     * @param formatAvailable Filters according to the digital video format available on a film asset. (optional)
     * @param frameRates Provides filtering by video frame rate (frames/second). (optional)
     * @param imageTechniques Filter based on image technique. (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only videos tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those videos matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param licenseModels Specifies the video licensing model(s). (optional)
     * @param orientations Return only videos with selected orientations. (optional)
     * @param minClipLength Provides filtering by minimum length of video clip, in seconds (optional, default to 0)
     * @param maxClipLength Provides filtering by maximum length of video, in seconds (optional, default to 0)
     * @param page Identifies page to return. Default is 1. (optional, default to 1)
     * @param pageSize Specifies page size. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Free-text search query. (optional, default to )
     * @param safeSearch Setting safe_search to \&quot;true\&quot; excludes images containing nudity, death, profanity, drugs and alcohol, suggestive content, and graphic content from the result set. The default is false. Because this is a keyword-based filter, it&#39;s possible that a small number of unsafe images may not be caught by the filter. Please direct feedback to your Getty Images Account or API support representative. (optional, default to false)
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param releaseStatus Allows filtering by type of model release. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                     The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param viewpoints Filter based on viewpoint. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> InvalidIStockCollection </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3SearchVideosCreativeGetCall(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<VideoAspectRatioFilterType> aspectRatios, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, List<CompositionsFilterType> compositions, String downloadProduct, Boolean excludeNudity, Boolean excludeEditorialUseOnly, List<Integer> excludeKeywordIds, List<CreativeVideosFieldValues> fields, VideoFormatsRequest formatAvailable, List<VideoFrameRates> frameRates, List<ImageTechniquesFilterType> imageTechniques, Boolean includeRelatedSearches, List<Integer> keywordIds, List<LicenseModelVideoRequest> licenseModels, List<VideoOrientationRequest> orientations, Integer minClipLength, Integer maxClipLength, Integer page, Integer pageSize, String phrase, Boolean safeSearch, CreativeVideoSortOrder sortOrder, ReleaseStatus releaseStatus, List<CreateVideoSearchFacetsFields> facetFields, Integer facetMaxCount, Boolean includeFacets, List<ViewpointsFilterType> viewpoints, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/search/videos/creative";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (ageOfPeople != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "age_of_people", ageOfPeople));
        }

        if (artists != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("artists", artists));
        }

        if (aspectRatios != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "aspect_ratios", aspectRatios));
        }

        if (collectionCodes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "collection_codes", collectionCodes));
        }

        if (collectionsFilterType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("collections_filter_type", collectionsFilterType));
        }

        if (compositions != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "compositions", compositions));
        }

        if (downloadProduct != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("download_product", downloadProduct));
        }

        if (excludeNudity != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("exclude_nudity", excludeNudity));
        }

        if (excludeEditorialUseOnly != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("exclude_editorial_use_only", excludeEditorialUseOnly));
        }

        if (excludeKeywordIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "exclude_keyword_ids", excludeKeywordIds));
        }

        if (fields != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "fields", fields));
        }

        if (formatAvailable != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("format_available", formatAvailable));
        }

        if (frameRates != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "frame_rates", frameRates));
        }

        if (imageTechniques != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "image_techniques", imageTechniques));
        }

        if (includeRelatedSearches != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include_related_searches", includeRelatedSearches));
        }

        if (keywordIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "keyword_ids", keywordIds));
        }

        if (licenseModels != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "license_models", licenseModels));
        }

        if (orientations != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "orientations", orientations));
        }

        if (minClipLength != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("min_clip_length", minClipLength));
        }

        if (maxClipLength != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_clip_length", maxClipLength));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page_size", pageSize));
        }

        if (phrase != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("phrase", phrase));
        }

        if (safeSearch != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("safe_search", safeSearch));
        }

        if (sortOrder != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_order", sortOrder));
        }

        if (releaseStatus != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("release_status", releaseStatus));
        }

        if (facetFields != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "facet_fields", facetFields));
        }

        if (facetMaxCount != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("facet_max_count", facetMaxCount));
        }

        if (includeFacets != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include_facets", includeFacets));
        }

        if (viewpoints != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "viewpoints", viewpoints));
        }

        if (acceptLanguage != null) {
            localVarHeaderParams.put("Accept-Language", localVarApiClient.parameterToString(acceptLanguage));
        }

        if (giCountryCode != null) {
            localVarHeaderParams.put("GI-Country-Code", localVarApiClient.parameterToString(giCountryCode));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2", "OAuth2", "OAuth2", "OAuth2", "Api-Key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v3SearchVideosCreativeGetValidateBeforeCall(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<VideoAspectRatioFilterType> aspectRatios, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, List<CompositionsFilterType> compositions, String downloadProduct, Boolean excludeNudity, Boolean excludeEditorialUseOnly, List<Integer> excludeKeywordIds, List<CreativeVideosFieldValues> fields, VideoFormatsRequest formatAvailable, List<VideoFrameRates> frameRates, List<ImageTechniquesFilterType> imageTechniques, Boolean includeRelatedSearches, List<Integer> keywordIds, List<LicenseModelVideoRequest> licenseModels, List<VideoOrientationRequest> orientations, Integer minClipLength, Integer maxClipLength, Integer page, Integer pageSize, String phrase, Boolean safeSearch, CreativeVideoSortOrder sortOrder, ReleaseStatus releaseStatus, List<CreateVideoSearchFacetsFields> facetFields, Integer facetMaxCount, Boolean includeFacets, List<ViewpointsFilterType> viewpoints, final ApiCallback _callback) throws ApiException {
        return v3SearchVideosCreativeGetCall(acceptLanguage, giCountryCode, ageOfPeople, artists, aspectRatios, collectionCodes, collectionsFilterType, compositions, downloadProduct, excludeNudity, excludeEditorialUseOnly, excludeKeywordIds, fields, formatAvailable, frameRates, imageTechniques, includeRelatedSearches, keywordIds, licenseModels, orientations, minClipLength, maxClipLength, page, pageSize, phrase, safeSearch, sortOrder, releaseStatus, facetFields, facetMaxCount, includeFacets, viewpoints, _callback);

    }

    /**
     * Search for creative videos
     * Use this endpoint to search premium stock video, from archival film to contemporary 4K and HD footage.  You&#39;ll need an API key and access token to use this resource.  You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only  assets that you have a license to use, you need to also include an authorization token in the header of your request. Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens.  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every video in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:      [         \&quot;asset_family\&quot;,          \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:         [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a  detailed view of videos. The following fields are provided for every video in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,    \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,          \&quot;clip_length\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,          \&quot;color_type\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:         [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;era\&quot;,         \&quot;license_model\&quot;,         \&quot;mastered_to\&quot;,         \&quot;originally_shot_on\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;shot_speed\&quot;,         \&quot;source\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files  that are most frequently used to build a UI displaying search results. The following fields are provided for every video in your result  set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Provides filtering according to the age of individuals in a video. (optional)
     * @param artists Search for videos by specific artists (free-text, comma-separated list of artists). (optional)
     * @param aspectRatios Search for videos by specific aspect ratios. (optional)
     * @param collectionCodes Provides filtering by collection code. (optional)
     * @param collectionsFilterType Use to include or exclude collections from search. The default is include (optional)
     * @param compositions Filter based on video composition. (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param excludeNudity Excludes videos containing nudity. The default is false. (optional, default to false)
     * @param excludeEditorialUseOnly Exclude videos that are only available for editorial (non-commercial) use. Default value is false. (optional)
     * @param excludeKeywordIds Return only videos not tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those videos matching the query phrase which also do not contain the requested keyword(s) are returned. (optional)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes returned by &#39;download_sizes&#39; field is an estimate. (optional)
     * @param formatAvailable Filters according to the digital video format available on a film asset. (optional)
     * @param frameRates Provides filtering by video frame rate (frames/second). (optional)
     * @param imageTechniques Filter based on image technique. (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only videos tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those videos matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param licenseModels Specifies the video licensing model(s). (optional)
     * @param orientations Return only videos with selected orientations. (optional)
     * @param minClipLength Provides filtering by minimum length of video clip, in seconds (optional, default to 0)
     * @param maxClipLength Provides filtering by maximum length of video, in seconds (optional, default to 0)
     * @param page Identifies page to return. Default is 1. (optional, default to 1)
     * @param pageSize Specifies page size. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Free-text search query. (optional, default to )
     * @param safeSearch Setting safe_search to \&quot;true\&quot; excludes images containing nudity, death, profanity, drugs and alcohol, suggestive content, and graphic content from the result set. The default is false. Because this is a keyword-based filter, it&#39;s possible that a small number of unsafe images may not be caught by the filter. Please direct feedback to your Getty Images Account or API support representative. (optional, default to false)
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param releaseStatus Allows filtering by type of model release. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                     The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param viewpoints Filter based on viewpoint. (optional)
     * @return CreativeVideoSearchResults
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> InvalidIStockCollection </td><td>  -  </td></tr>
     </table>
     */
    public CreativeVideoSearchResults v3SearchVideosCreativeGet(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<VideoAspectRatioFilterType> aspectRatios, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, List<CompositionsFilterType> compositions, String downloadProduct, Boolean excludeNudity, Boolean excludeEditorialUseOnly, List<Integer> excludeKeywordIds, List<CreativeVideosFieldValues> fields, VideoFormatsRequest formatAvailable, List<VideoFrameRates> frameRates, List<ImageTechniquesFilterType> imageTechniques, Boolean includeRelatedSearches, List<Integer> keywordIds, List<LicenseModelVideoRequest> licenseModels, List<VideoOrientationRequest> orientations, Integer minClipLength, Integer maxClipLength, Integer page, Integer pageSize, String phrase, Boolean safeSearch, CreativeVideoSortOrder sortOrder, ReleaseStatus releaseStatus, List<CreateVideoSearchFacetsFields> facetFields, Integer facetMaxCount, Boolean includeFacets, List<ViewpointsFilterType> viewpoints) throws ApiException {
        ApiResponse<CreativeVideoSearchResults> localVarResp = v3SearchVideosCreativeGetWithHttpInfo(acceptLanguage, giCountryCode, ageOfPeople, artists, aspectRatios, collectionCodes, collectionsFilterType, compositions, downloadProduct, excludeNudity, excludeEditorialUseOnly, excludeKeywordIds, fields, formatAvailable, frameRates, imageTechniques, includeRelatedSearches, keywordIds, licenseModels, orientations, minClipLength, maxClipLength, page, pageSize, phrase, safeSearch, sortOrder, releaseStatus, facetFields, facetMaxCount, includeFacets, viewpoints);
        return localVarResp.getData();
    }

    /**
     * Search for creative videos
     * Use this endpoint to search premium stock video, from archival film to contemporary 4K and HD footage.  You&#39;ll need an API key and access token to use this resource.  You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only  assets that you have a license to use, you need to also include an authorization token in the header of your request. Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens.  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every video in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:      [         \&quot;asset_family\&quot;,          \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:         [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a  detailed view of videos. The following fields are provided for every video in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,    \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,          \&quot;clip_length\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,          \&quot;color_type\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:         [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;era\&quot;,         \&quot;license_model\&quot;,         \&quot;mastered_to\&quot;,         \&quot;originally_shot_on\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;shot_speed\&quot;,         \&quot;source\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files  that are most frequently used to build a UI displaying search results. The following fields are provided for every video in your result  set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Provides filtering according to the age of individuals in a video. (optional)
     * @param artists Search for videos by specific artists (free-text, comma-separated list of artists). (optional)
     * @param aspectRatios Search for videos by specific aspect ratios. (optional)
     * @param collectionCodes Provides filtering by collection code. (optional)
     * @param collectionsFilterType Use to include or exclude collections from search. The default is include (optional)
     * @param compositions Filter based on video composition. (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param excludeNudity Excludes videos containing nudity. The default is false. (optional, default to false)
     * @param excludeEditorialUseOnly Exclude videos that are only available for editorial (non-commercial) use. Default value is false. (optional)
     * @param excludeKeywordIds Return only videos not tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those videos matching the query phrase which also do not contain the requested keyword(s) are returned. (optional)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes returned by &#39;download_sizes&#39; field is an estimate. (optional)
     * @param formatAvailable Filters according to the digital video format available on a film asset. (optional)
     * @param frameRates Provides filtering by video frame rate (frames/second). (optional)
     * @param imageTechniques Filter based on image technique. (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only videos tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those videos matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param licenseModels Specifies the video licensing model(s). (optional)
     * @param orientations Return only videos with selected orientations. (optional)
     * @param minClipLength Provides filtering by minimum length of video clip, in seconds (optional, default to 0)
     * @param maxClipLength Provides filtering by maximum length of video, in seconds (optional, default to 0)
     * @param page Identifies page to return. Default is 1. (optional, default to 1)
     * @param pageSize Specifies page size. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Free-text search query. (optional, default to )
     * @param safeSearch Setting safe_search to \&quot;true\&quot; excludes images containing nudity, death, profanity, drugs and alcohol, suggestive content, and graphic content from the result set. The default is false. Because this is a keyword-based filter, it&#39;s possible that a small number of unsafe images may not be caught by the filter. Please direct feedback to your Getty Images Account or API support representative. (optional, default to false)
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param releaseStatus Allows filtering by type of model release. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                     The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param viewpoints Filter based on viewpoint. (optional)
     * @return ApiResponse&lt;CreativeVideoSearchResults&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> InvalidIStockCollection </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<CreativeVideoSearchResults> v3SearchVideosCreativeGetWithHttpInfo(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<VideoAspectRatioFilterType> aspectRatios, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, List<CompositionsFilterType> compositions, String downloadProduct, Boolean excludeNudity, Boolean excludeEditorialUseOnly, List<Integer> excludeKeywordIds, List<CreativeVideosFieldValues> fields, VideoFormatsRequest formatAvailable, List<VideoFrameRates> frameRates, List<ImageTechniquesFilterType> imageTechniques, Boolean includeRelatedSearches, List<Integer> keywordIds, List<LicenseModelVideoRequest> licenseModels, List<VideoOrientationRequest> orientations, Integer minClipLength, Integer maxClipLength, Integer page, Integer pageSize, String phrase, Boolean safeSearch, CreativeVideoSortOrder sortOrder, ReleaseStatus releaseStatus, List<CreateVideoSearchFacetsFields> facetFields, Integer facetMaxCount, Boolean includeFacets, List<ViewpointsFilterType> viewpoints) throws ApiException {
        okhttp3.Call localVarCall = v3SearchVideosCreativeGetValidateBeforeCall(acceptLanguage, giCountryCode, ageOfPeople, artists, aspectRatios, collectionCodes, collectionsFilterType, compositions, downloadProduct, excludeNudity, excludeEditorialUseOnly, excludeKeywordIds, fields, formatAvailable, frameRates, imageTechniques, includeRelatedSearches, keywordIds, licenseModels, orientations, minClipLength, maxClipLength, page, pageSize, phrase, safeSearch, sortOrder, releaseStatus, facetFields, facetMaxCount, includeFacets, viewpoints, null);
        Type localVarReturnType = new TypeToken<CreativeVideoSearchResults>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Search for creative videos (asynchronously)
     * Use this endpoint to search premium stock video, from archival film to contemporary 4K and HD footage.  You&#39;ll need an API key and access token to use this resource.  You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only  assets that you have a license to use, you need to also include an authorization token in the header of your request. Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens.  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every video in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:      [         \&quot;asset_family\&quot;,          \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:         [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a  detailed view of videos. The following fields are provided for every video in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,    \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,          \&quot;clip_length\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,          \&quot;color_type\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:         [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;era\&quot;,         \&quot;license_model\&quot;,         \&quot;mastered_to\&quot;,         \&quot;originally_shot_on\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;shot_speed\&quot;,         \&quot;source\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files  that are most frequently used to build a UI displaying search results. The following fields are provided for every video in your result  set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Provides filtering according to the age of individuals in a video. (optional)
     * @param artists Search for videos by specific artists (free-text, comma-separated list of artists). (optional)
     * @param aspectRatios Search for videos by specific aspect ratios. (optional)
     * @param collectionCodes Provides filtering by collection code. (optional)
     * @param collectionsFilterType Use to include or exclude collections from search. The default is include (optional)
     * @param compositions Filter based on video composition. (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param excludeNudity Excludes videos containing nudity. The default is false. (optional, default to false)
     * @param excludeEditorialUseOnly Exclude videos that are only available for editorial (non-commercial) use. Default value is false. (optional)
     * @param excludeKeywordIds Return only videos not tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those videos matching the query phrase which also do not contain the requested keyword(s) are returned. (optional)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes returned by &#39;download_sizes&#39; field is an estimate. (optional)
     * @param formatAvailable Filters according to the digital video format available on a film asset. (optional)
     * @param frameRates Provides filtering by video frame rate (frames/second). (optional)
     * @param imageTechniques Filter based on image technique. (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only videos tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those videos matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param licenseModels Specifies the video licensing model(s). (optional)
     * @param orientations Return only videos with selected orientations. (optional)
     * @param minClipLength Provides filtering by minimum length of video clip, in seconds (optional, default to 0)
     * @param maxClipLength Provides filtering by maximum length of video, in seconds (optional, default to 0)
     * @param page Identifies page to return. Default is 1. (optional, default to 1)
     * @param pageSize Specifies page size. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Free-text search query. (optional, default to )
     * @param safeSearch Setting safe_search to \&quot;true\&quot; excludes images containing nudity, death, profanity, drugs and alcohol, suggestive content, and graphic content from the result set. The default is false. Because this is a keyword-based filter, it&#39;s possible that a small number of unsafe images may not be caught by the filter. Please direct feedback to your Getty Images Account or API support representative. (optional, default to false)
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param releaseStatus Allows filtering by type of model release. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                     The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param viewpoints Filter based on viewpoint. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
        <tr><td> 500 </td><td> InvalidIStockCollection </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3SearchVideosCreativeGetAsync(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<VideoAspectRatioFilterType> aspectRatios, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, List<CompositionsFilterType> compositions, String downloadProduct, Boolean excludeNudity, Boolean excludeEditorialUseOnly, List<Integer> excludeKeywordIds, List<CreativeVideosFieldValues> fields, VideoFormatsRequest formatAvailable, List<VideoFrameRates> frameRates, List<ImageTechniquesFilterType> imageTechniques, Boolean includeRelatedSearches, List<Integer> keywordIds, List<LicenseModelVideoRequest> licenseModels, List<VideoOrientationRequest> orientations, Integer minClipLength, Integer maxClipLength, Integer page, Integer pageSize, String phrase, Boolean safeSearch, CreativeVideoSortOrder sortOrder, ReleaseStatus releaseStatus, List<CreateVideoSearchFacetsFields> facetFields, Integer facetMaxCount, Boolean includeFacets, List<ViewpointsFilterType> viewpoints, final ApiCallback<CreativeVideoSearchResults> _callback) throws ApiException {

        okhttp3.Call localVarCall = v3SearchVideosCreativeGetValidateBeforeCall(acceptLanguage, giCountryCode, ageOfPeople, artists, aspectRatios, collectionCodes, collectionsFilterType, compositions, downloadProduct, excludeNudity, excludeEditorialUseOnly, excludeKeywordIds, fields, formatAvailable, frameRates, imageTechniques, includeRelatedSearches, keywordIds, licenseModels, orientations, minClipLength, maxClipLength, page, pageSize, phrase, safeSearch, sortOrder, releaseStatus, facetFields, facetMaxCount, includeFacets, viewpoints, _callback);
        Type localVarReturnType = new TypeToken<CreativeVideoSearchResults>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for v3SearchVideosEditorialGet
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Provides filtering according to the age of individuals in a video. (optional)
     * @param artists Search for videos by specific artists (free-text, comma-separated list of artists). (optional)
     * @param aspectRatios Search for videos by specific aspect ratios. (optional)
     * @param collectionCodes Provides filtering by collection code. (optional)
     * @param collectionsFilterType Use to include or exclude collections from search. The default is include (optional)
     * @param compositions Filter based on video composition. (optional)
     * @param dateFrom Return only images that are created on or after this date. Use ISO 8601 format (e.g., 1999-12-31). (optional)
     * @param dateTo Return only images that are created on or before this date. Use ISO 8601 format (e.g., 1999-12-31). (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param editorialVideoTypes Allows filtering by types of video. (optional)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes returned by &#39;download_sizes&#39; field is an estimate. (optional)
     * @param formatAvailable Filters according to the digital video format available on a film asset. (optional)
     * @param frameRates Provides filtering by video frame rate (frames/second). (optional)
     * @param imageTechniques Filter based on image technique. (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only videos tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those videos matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param minClipLength Provides filtering by minimum length of video clip, in seconds (optional, default to 0)
     * @param maxClipLength Provides filtering by maximum length of video clip, in seconds (optional, default to 0)
     * @param orientations Return only videos with selected orientations. (optional)
     * @param page Identifies page to return. Default is 1. (optional, default to 1)
     * @param pageSize Specifies page size. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Free-text search query. (optional, default to )
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param specificPeople Allows filtering by specific peoples&#39; names. (optional)
     * @param releaseStatus Allows filtering by type of model release. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                     The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param viewpoints Filter based on viewpoint. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3SearchVideosEditorialGetCall(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<VideoAspectRatioFilterType> aspectRatios, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, List<CompositionsFilterType> compositions, OffsetDateTime dateFrom, OffsetDateTime dateTo, String downloadProduct, List<EditorialVideoType> editorialVideoTypes, List<EditorialVideosFieldValues> fields, VideoFormatsRequest formatAvailable, List<VideoFrameRates> frameRates, List<ImageTechniquesFilterType> imageTechniques, Boolean includeRelatedSearches, List<Integer> keywordIds, Integer minClipLength, Integer maxClipLength, List<VideoOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, SortOrder sortOrder, List<String> specificPeople, ReleaseStatus releaseStatus, List<EditorialVideoSearchFacetsFields> facetFields, Boolean includeFacets, Integer facetMaxCount, List<ViewpointsFilterType> viewpoints, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/search/videos/editorial";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (ageOfPeople != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "age_of_people", ageOfPeople));
        }

        if (artists != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("artists", artists));
        }

        if (aspectRatios != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "aspect_ratios", aspectRatios));
        }

        if (collectionCodes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "collection_codes", collectionCodes));
        }

        if (collectionsFilterType != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("collections_filter_type", collectionsFilterType));
        }

        if (compositions != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "compositions", compositions));
        }

        if (dateFrom != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("date_from", dateFrom));
        }

        if (dateTo != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("date_to", dateTo));
        }

        if (downloadProduct != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("download_product", downloadProduct));
        }

        if (editorialVideoTypes != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "editorial_video_types", editorialVideoTypes));
        }

        if (fields != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "fields", fields));
        }

        if (formatAvailable != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("format_available", formatAvailable));
        }

        if (frameRates != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "frame_rates", frameRates));
        }

        if (imageTechniques != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "image_techniques", imageTechniques));
        }

        if (includeRelatedSearches != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include_related_searches", includeRelatedSearches));
        }

        if (keywordIds != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "keyword_ids", keywordIds));
        }

        if (minClipLength != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("min_clip_length", minClipLength));
        }

        if (maxClipLength != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("max_clip_length", maxClipLength));
        }

        if (orientations != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "orientations", orientations));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page_size", pageSize));
        }

        if (phrase != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("phrase", phrase));
        }

        if (sortOrder != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("sort_order", sortOrder));
        }

        if (specificPeople != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "specific_people", specificPeople));
        }

        if (releaseStatus != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("release_status", releaseStatus));
        }

        if (facetFields != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "facet_fields", facetFields));
        }

        if (includeFacets != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include_facets", includeFacets));
        }

        if (facetMaxCount != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("facet_max_count", facetMaxCount));
        }

        if (viewpoints != null) {
            localVarCollectionQueryParams.addAll(localVarApiClient.parameterToPairs("csv", "viewpoints", viewpoints));
        }

        if (acceptLanguage != null) {
            localVarHeaderParams.put("Accept-Language", localVarApiClient.parameterToString(acceptLanguage));
        }

        if (giCountryCode != null) {
            localVarHeaderParams.put("GI-Country-Code", localVarApiClient.parameterToString(giCountryCode));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2", "OAuth2", "OAuth2", "OAuth2", "Api-Key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v3SearchVideosEditorialGetValidateBeforeCall(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<VideoAspectRatioFilterType> aspectRatios, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, List<CompositionsFilterType> compositions, OffsetDateTime dateFrom, OffsetDateTime dateTo, String downloadProduct, List<EditorialVideoType> editorialVideoTypes, List<EditorialVideosFieldValues> fields, VideoFormatsRequest formatAvailable, List<VideoFrameRates> frameRates, List<ImageTechniquesFilterType> imageTechniques, Boolean includeRelatedSearches, List<Integer> keywordIds, Integer minClipLength, Integer maxClipLength, List<VideoOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, SortOrder sortOrder, List<String> specificPeople, ReleaseStatus releaseStatus, List<EditorialVideoSearchFacetsFields> facetFields, Boolean includeFacets, Integer facetMaxCount, List<ViewpointsFilterType> viewpoints, final ApiCallback _callback) throws ApiException {
        return v3SearchVideosEditorialGetCall(acceptLanguage, giCountryCode, ageOfPeople, artists, aspectRatios, collectionCodes, collectionsFilterType, compositions, dateFrom, dateTo, downloadProduct, editorialVideoTypes, fields, formatAvailable, frameRates, imageTechniques, includeRelatedSearches, keywordIds, minClipLength, maxClipLength, orientations, page, pageSize, phrase, sortOrder, specificPeople, releaseStatus, facetFields, includeFacets, facetMaxCount, viewpoints, _callback);

    }

    /**
     * Search for editorial videos
     * Use this endpoint to search current and archival video clips of celebrities, newsmakers, and events.  You&#39;ll need an API key and access token to use this resource.  You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token.  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every video in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:      [         \&quot;asset_family\&quot;,          \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:         [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a detailed view of videos. The following fields are provided for every video in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,    \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,          \&quot;clip_length\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,          \&quot;color_type\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:         [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;era\&quot;,         \&quot;event_ids\&quot;,         \&quot;license_model\&quot;,         \&quot;mastered_to\&quot;,         \&quot;originally_shot_on\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;shot_speed\&quot;,         \&quot;source\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most frequently used to build a UI displaying search results. The following fields are provided for every video in your result set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Provides filtering according to the age of individuals in a video. (optional)
     * @param artists Search for videos by specific artists (free-text, comma-separated list of artists). (optional)
     * @param aspectRatios Search for videos by specific aspect ratios. (optional)
     * @param collectionCodes Provides filtering by collection code. (optional)
     * @param collectionsFilterType Use to include or exclude collections from search. The default is include (optional)
     * @param compositions Filter based on video composition. (optional)
     * @param dateFrom Return only images that are created on or after this date. Use ISO 8601 format (e.g., 1999-12-31). (optional)
     * @param dateTo Return only images that are created on or before this date. Use ISO 8601 format (e.g., 1999-12-31). (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param editorialVideoTypes Allows filtering by types of video. (optional)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes returned by &#39;download_sizes&#39; field is an estimate. (optional)
     * @param formatAvailable Filters according to the digital video format available on a film asset. (optional)
     * @param frameRates Provides filtering by video frame rate (frames/second). (optional)
     * @param imageTechniques Filter based on image technique. (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only videos tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those videos matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param minClipLength Provides filtering by minimum length of video clip, in seconds (optional, default to 0)
     * @param maxClipLength Provides filtering by maximum length of video clip, in seconds (optional, default to 0)
     * @param orientations Return only videos with selected orientations. (optional)
     * @param page Identifies page to return. Default is 1. (optional, default to 1)
     * @param pageSize Specifies page size. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Free-text search query. (optional, default to )
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param specificPeople Allows filtering by specific peoples&#39; names. (optional)
     * @param releaseStatus Allows filtering by type of model release. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                     The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param viewpoints Filter based on viewpoint. (optional)
     * @return EditorialVideoSearchResults
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public EditorialVideoSearchResults v3SearchVideosEditorialGet(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<VideoAspectRatioFilterType> aspectRatios, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, List<CompositionsFilterType> compositions, OffsetDateTime dateFrom, OffsetDateTime dateTo, String downloadProduct, List<EditorialVideoType> editorialVideoTypes, List<EditorialVideosFieldValues> fields, VideoFormatsRequest formatAvailable, List<VideoFrameRates> frameRates, List<ImageTechniquesFilterType> imageTechniques, Boolean includeRelatedSearches, List<Integer> keywordIds, Integer minClipLength, Integer maxClipLength, List<VideoOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, SortOrder sortOrder, List<String> specificPeople, ReleaseStatus releaseStatus, List<EditorialVideoSearchFacetsFields> facetFields, Boolean includeFacets, Integer facetMaxCount, List<ViewpointsFilterType> viewpoints) throws ApiException {
        ApiResponse<EditorialVideoSearchResults> localVarResp = v3SearchVideosEditorialGetWithHttpInfo(acceptLanguage, giCountryCode, ageOfPeople, artists, aspectRatios, collectionCodes, collectionsFilterType, compositions, dateFrom, dateTo, downloadProduct, editorialVideoTypes, fields, formatAvailable, frameRates, imageTechniques, includeRelatedSearches, keywordIds, minClipLength, maxClipLength, orientations, page, pageSize, phrase, sortOrder, specificPeople, releaseStatus, facetFields, includeFacets, facetMaxCount, viewpoints);
        return localVarResp.getData();
    }

    /**
     * Search for editorial videos
     * Use this endpoint to search current and archival video clips of celebrities, newsmakers, and events.  You&#39;ll need an API key and access token to use this resource.  You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token.  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every video in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:      [         \&quot;asset_family\&quot;,          \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:         [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a detailed view of videos. The following fields are provided for every video in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,    \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,          \&quot;clip_length\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,          \&quot;color_type\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:         [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;era\&quot;,         \&quot;event_ids\&quot;,         \&quot;license_model\&quot;,         \&quot;mastered_to\&quot;,         \&quot;originally_shot_on\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;shot_speed\&quot;,         \&quot;source\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most frequently used to build a UI displaying search results. The following fields are provided for every video in your result set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Provides filtering according to the age of individuals in a video. (optional)
     * @param artists Search for videos by specific artists (free-text, comma-separated list of artists). (optional)
     * @param aspectRatios Search for videos by specific aspect ratios. (optional)
     * @param collectionCodes Provides filtering by collection code. (optional)
     * @param collectionsFilterType Use to include or exclude collections from search. The default is include (optional)
     * @param compositions Filter based on video composition. (optional)
     * @param dateFrom Return only images that are created on or after this date. Use ISO 8601 format (e.g., 1999-12-31). (optional)
     * @param dateTo Return only images that are created on or before this date. Use ISO 8601 format (e.g., 1999-12-31). (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param editorialVideoTypes Allows filtering by types of video. (optional)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes returned by &#39;download_sizes&#39; field is an estimate. (optional)
     * @param formatAvailable Filters according to the digital video format available on a film asset. (optional)
     * @param frameRates Provides filtering by video frame rate (frames/second). (optional)
     * @param imageTechniques Filter based on image technique. (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only videos tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those videos matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param minClipLength Provides filtering by minimum length of video clip, in seconds (optional, default to 0)
     * @param maxClipLength Provides filtering by maximum length of video clip, in seconds (optional, default to 0)
     * @param orientations Return only videos with selected orientations. (optional)
     * @param page Identifies page to return. Default is 1. (optional, default to 1)
     * @param pageSize Specifies page size. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Free-text search query. (optional, default to )
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param specificPeople Allows filtering by specific peoples&#39; names. (optional)
     * @param releaseStatus Allows filtering by type of model release. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                     The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param viewpoints Filter based on viewpoint. (optional)
     * @return ApiResponse&lt;EditorialVideoSearchResults&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<EditorialVideoSearchResults> v3SearchVideosEditorialGetWithHttpInfo(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<VideoAspectRatioFilterType> aspectRatios, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, List<CompositionsFilterType> compositions, OffsetDateTime dateFrom, OffsetDateTime dateTo, String downloadProduct, List<EditorialVideoType> editorialVideoTypes, List<EditorialVideosFieldValues> fields, VideoFormatsRequest formatAvailable, List<VideoFrameRates> frameRates, List<ImageTechniquesFilterType> imageTechniques, Boolean includeRelatedSearches, List<Integer> keywordIds, Integer minClipLength, Integer maxClipLength, List<VideoOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, SortOrder sortOrder, List<String> specificPeople, ReleaseStatus releaseStatus, List<EditorialVideoSearchFacetsFields> facetFields, Boolean includeFacets, Integer facetMaxCount, List<ViewpointsFilterType> viewpoints) throws ApiException {
        okhttp3.Call localVarCall = v3SearchVideosEditorialGetValidateBeforeCall(acceptLanguage, giCountryCode, ageOfPeople, artists, aspectRatios, collectionCodes, collectionsFilterType, compositions, dateFrom, dateTo, downloadProduct, editorialVideoTypes, fields, formatAvailable, frameRates, imageTechniques, includeRelatedSearches, keywordIds, minClipLength, maxClipLength, orientations, page, pageSize, phrase, sortOrder, specificPeople, releaseStatus, facetFields, includeFacets, facetMaxCount, viewpoints, null);
        Type localVarReturnType = new TypeToken<EditorialVideoSearchResults>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Search for editorial videos (asynchronously)
     * Use this endpoint to search current and archival video clips of celebrities, newsmakers, and events.  You&#39;ll need an API key and access token to use this resource.  You can show different information in the response by specifying values on the \&quot;fields\&quot; parameter (see details below). You can search with only an API key, and that will give you search results that are equivalent to doing a search on the GettyImages.com site without being logged in (anonymous search).  If you are a Getty Images API customer and would like to ensure that your API searches return only assets that you have a license to use, you need to also include an authorization token in the header of your request.  Please consult our [Authorization FAQ](http://developers.gettyimages.com/en/authorization-faq.html) for more information on authorization tokens, and our [Authorization Workflows](https://github.com/gettyimages/gettyimages-api/blob/master/OAuth2Workflow.md) for code examples of getting a token.  Search requests without a phrase parameter are not supported and may not always work.  ## Working with Fields Sets  Fields sets are used in the **fields** request parameter to receive a suite of metadata fields. The following fields sets are available:  #### Summary Fields Set  The **summary_set** query string parameter fields value represents a small batch of metadata fields that are often used to build search response results. The following fields are provided for every video in your result set when you include **summary_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:      [         \&quot;asset_family\&quot;,          \&quot;caption\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_name\&quot;,         \&quot;display_sizes\&quot;:         [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;license_model\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Detail Fields Set  The **detail_set** query string parameter fields value represents a large batch of metadata fields that are often used to build a detailed view of videos. The following fields are provided for every video in your result set when you include **detail_set** in your request.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:      [         \&quot;allowed_use\&quot;,         \&quot;artist\&quot;,         \&quot;asset_family\&quot;,    \&quot;call_for_image\&quot;,         \&quot;caption\&quot;,          \&quot;clip_length\&quot;,         \&quot;collection_code\&quot;,         \&quot;collection_id\&quot;,         \&quot;collection_name\&quot;,          \&quot;color_type\&quot;,         \&quot;copyright\&quot;,         \&quot;date_created\&quot;,         \&quot;display_sizes\&quot;:         [             {                 \&quot;name\&quot;: \&quot;comp\&quot;             },             {                 \&quot;name\&quot;: \&quot;preview\&quot;             },             {                 \&quot;name\&quot;: \&quot;thumb\&quot;             }         ],         \&quot;era\&quot;,         \&quot;event_ids\&quot;,         \&quot;license_model\&quot;,         \&quot;mastered_to\&quot;,         \&quot;originally_shot_on\&quot;,         \&quot;product_types\&quot;,         \&quot;quality_rank\&quot;,         \&quot;shot_speed\&quot;,         \&quot;source\&quot;,         \&quot;title\&quot;     ] } &#x60;&#x60;&#x60;  #### Display Fields Set  The **display_set** query string parameter fields value represents the fields that provide you with URLs for the low resolution files that are most frequently used to build a UI displaying search results. The following fields are provided for every video in your result set when you include **display_set** in your request.  The URI provided is subject to change at any time and must be used as-is with no modification.  &#x60;&#x60;&#x60; {     \&quot;videos\&quot;:     [         \&quot;display_sizes\&quot;:          [             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;comp\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;preview\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             },             {                 \&quot;is_watermarked\&quot;: &lt;boolean&gt;,                 \&quot;name\&quot;: \&quot;thumb\&quot;,                 \&quot;uri\&quot;: \&quot;&lt;link&gt;\&quot;             }         ]     ] } &#x60;&#x60;&#x60;
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param giCountryCode Receive regionally relevant search results based on the value specified. Accepts only ISO Alpha-3 country codes. The Countries operation can be used to retrieve the codes. (optional)
     * @param ageOfPeople Provides filtering according to the age of individuals in a video. (optional)
     * @param artists Search for videos by specific artists (free-text, comma-separated list of artists). (optional)
     * @param aspectRatios Search for videos by specific aspect ratios. (optional)
     * @param collectionCodes Provides filtering by collection code. (optional)
     * @param collectionsFilterType Use to include or exclude collections from search. The default is include (optional)
     * @param compositions Filter based on video composition. (optional)
     * @param dateFrom Return only images that are created on or after this date. Use ISO 8601 format (e.g., 1999-12-31). (optional)
     * @param dateTo Return only images that are created on or before this date. Use ISO 8601 format (e.g., 1999-12-31). (optional)
     * @param downloadProduct Filters based on which product the asset will download against.                      Allowed values are easyaccess, editorialsubscription, imagepack, premiumaccess and royaltyfreesubscription.                      If you have more than one instance of a product, you may also include the ID of the product instance you wish to filter on.                       For example, some users may have more than one premiumaccess product, so the download_product value would be premiumaccess:1234.                       Product ID can be obtained from the GET /products response. (optional)
     * @param editorialVideoTypes Allows filtering by types of video. (optional)
     * @param fields Specifies fields to return. Defaults to &#39;summary_set&#39;. NOTE: Bytes returned by &#39;download_sizes&#39; field is an estimate. (optional)
     * @param formatAvailable Filters according to the digital video format available on a film asset. (optional)
     * @param frameRates Provides filtering by video frame rate (frames/second). (optional)
     * @param imageTechniques Filter based on image technique. (optional)
     * @param includeRelatedSearches Specifies whether or not to include related searches in the response. The default is false. (optional, default to false)
     * @param keywordIds Return only videos tagged with specific keyword(s). Specify using a comma-separated list of keyword Ids. If keyword Ids and phrase are both specified, only those videos matching the query phrase which also contain the requested keyword(s) are returned. (optional)
     * @param minClipLength Provides filtering by minimum length of video clip, in seconds (optional, default to 0)
     * @param maxClipLength Provides filtering by maximum length of video clip, in seconds (optional, default to 0)
     * @param orientations Return only videos with selected orientations. (optional)
     * @param page Identifies page to return. Default is 1. (optional, default to 1)
     * @param pageSize Specifies page size. Default is 30, maximum page_size is 100. (optional, default to 30)
     * @param phrase Free-text search query. (optional, default to )
     * @param sortOrder Select sort order of results.  The default is best_match (optional)
     * @param specificPeople Allows filtering by specific peoples&#39; names. (optional)
     * @param releaseStatus Allows filtering by type of model release. (optional)
     * @param facetFields Specifies the facets to return in the response. Facets provide additional search parameters to refine your results.                     The include_facets parameter must be set to \&quot;true\&quot; for facets to be returned. (optional)
     * @param includeFacets Specifies whether or not to include facets in the result set. Default is \&quot;false\&quot;. (optional)
     * @param facetMaxCount Specifies the maximum number of facets to return per type. Default is 300. (optional, default to 300)
     * @param viewpoints Filter based on viewpoint. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> InvalidParameterValue </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> AuthorizationTokenRequired </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> UnauthorizedDisplaySize </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3SearchVideosEditorialGetAsync(String acceptLanguage, String giCountryCode, List<AgeOfPeopleFilterType> ageOfPeople, String artists, List<VideoAspectRatioFilterType> aspectRatios, List<String> collectionCodes, CollectionsFilterType collectionsFilterType, List<CompositionsFilterType> compositions, OffsetDateTime dateFrom, OffsetDateTime dateTo, String downloadProduct, List<EditorialVideoType> editorialVideoTypes, List<EditorialVideosFieldValues> fields, VideoFormatsRequest formatAvailable, List<VideoFrameRates> frameRates, List<ImageTechniquesFilterType> imageTechniques, Boolean includeRelatedSearches, List<Integer> keywordIds, Integer minClipLength, Integer maxClipLength, List<VideoOrientationRequest> orientations, Integer page, Integer pageSize, String phrase, SortOrder sortOrder, List<String> specificPeople, ReleaseStatus releaseStatus, List<EditorialVideoSearchFacetsFields> facetFields, Boolean includeFacets, Integer facetMaxCount, List<ViewpointsFilterType> viewpoints, final ApiCallback<EditorialVideoSearchResults> _callback) throws ApiException {

        okhttp3.Call localVarCall = v3SearchVideosEditorialGetValidateBeforeCall(acceptLanguage, giCountryCode, ageOfPeople, artists, aspectRatios, collectionCodes, collectionsFilterType, compositions, dateFrom, dateTo, downloadProduct, editorialVideoTypes, fields, formatAvailable, frameRates, imageTechniques, includeRelatedSearches, keywordIds, minClipLength, maxClipLength, orientations, page, pageSize, phrase, sortOrder, specificPeople, releaseStatus, facetFields, includeFacets, facetMaxCount, viewpoints, _callback);
        Type localVarReturnType = new TypeToken<EditorialVideoSearchResults>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
