/*
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiCallback;
import org.openapitools.client.ApiClient;
import org.openapitools.client.ApiException;
import org.openapitools.client.ApiResponse;
import org.openapitools.client.Configuration;
import org.openapitools.client.Pair;
import org.openapitools.client.ProgressRequestBody;
import org.openapitools.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import java.time.OffsetDateTime;
import org.openapitools.client.model.PreviousAssetPurchases;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PurchasesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public PurchasesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public PurchasesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for v3PurchasedAssetsGet
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param dateTo If specified, retrieves previous purchases on or before this date. Dates should be submitted in ISO 8601 format (i.e., YYYY-MM-DD). (optional)
     * @param page Identifies page to return. Default is 1. (optional, default to 1)
     * @param pageSize Specifies page size. Default is 75, maximum page_size is 100. (optional, default to 75)
     * @param dateFrom If specified, retrieves previous purchases on or after this date. Dates should be submitted in ISO 8601 format (i.e., YYYY-MM-DD). (optional)
     * @param companyPurchases If specified, returns the list of previously purchased assets for all users in your company. Your account must be enabled for this functionality. Contact your Getty Images account rep for more information. Default is false. (optional, default to false)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> PageNumberLessThanOne </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> InsufficientPermissions </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3PurchasedAssetsGetCall(String acceptLanguage, OffsetDateTime dateTo, Integer page, Integer pageSize, OffsetDateTime dateFrom, Boolean companyPurchases, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/purchased-assets";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (dateTo != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("date_to", dateTo));
        }

        if (page != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page", page));
        }

        if (pageSize != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("page_size", pageSize));
        }

        if (dateFrom != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("date_from", dateFrom));
        }

        if (companyPurchases != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("company_purchases", companyPurchases));
        }

        if (acceptLanguage != null) {
            localVarHeaderParams.put("Accept-Language", localVarApiClient.parameterToString(acceptLanguage));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "OAuth2", "OAuth2", "OAuth2", "OAuth2", "Api-Key" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call v3PurchasedAssetsGetValidateBeforeCall(String acceptLanguage, OffsetDateTime dateTo, Integer page, Integer pageSize, OffsetDateTime dateFrom, Boolean companyPurchases, final ApiCallback _callback) throws ApiException {
        return v3PurchasedAssetsGetCall(acceptLanguage, dateTo, page, pageSize, dateFrom, companyPurchases, _callback);

    }

    /**
     * Get Previously Purchased Images and Video
     * This endpoint returns a list of all assets purchased on gettyimages.com by the username used for authentication.  Use of this endpoint requires configuration changes to your API key. Please contact your sales representative to learn more.  You&#39;ll need an API key and access token to use this resource. 
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param dateTo If specified, retrieves previous purchases on or before this date. Dates should be submitted in ISO 8601 format (i.e., YYYY-MM-DD). (optional)
     * @param page Identifies page to return. Default is 1. (optional, default to 1)
     * @param pageSize Specifies page size. Default is 75, maximum page_size is 100. (optional, default to 75)
     * @param dateFrom If specified, retrieves previous purchases on or after this date. Dates should be submitted in ISO 8601 format (i.e., YYYY-MM-DD). (optional)
     * @param companyPurchases If specified, returns the list of previously purchased assets for all users in your company. Your account must be enabled for this functionality. Contact your Getty Images account rep for more information. Default is false. (optional, default to false)
     * @return PreviousAssetPurchases
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> PageNumberLessThanOne </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> InsufficientPermissions </td><td>  -  </td></tr>
     </table>
     */
    public PreviousAssetPurchases v3PurchasedAssetsGet(String acceptLanguage, OffsetDateTime dateTo, Integer page, Integer pageSize, OffsetDateTime dateFrom, Boolean companyPurchases) throws ApiException {
        ApiResponse<PreviousAssetPurchases> localVarResp = v3PurchasedAssetsGetWithHttpInfo(acceptLanguage, dateTo, page, pageSize, dateFrom, companyPurchases);
        return localVarResp.getData();
    }

    /**
     * Get Previously Purchased Images and Video
     * This endpoint returns a list of all assets purchased on gettyimages.com by the username used for authentication.  Use of this endpoint requires configuration changes to your API key. Please contact your sales representative to learn more.  You&#39;ll need an API key and access token to use this resource. 
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param dateTo If specified, retrieves previous purchases on or before this date. Dates should be submitted in ISO 8601 format (i.e., YYYY-MM-DD). (optional)
     * @param page Identifies page to return. Default is 1. (optional, default to 1)
     * @param pageSize Specifies page size. Default is 75, maximum page_size is 100. (optional, default to 75)
     * @param dateFrom If specified, retrieves previous purchases on or after this date. Dates should be submitted in ISO 8601 format (i.e., YYYY-MM-DD). (optional)
     * @param companyPurchases If specified, returns the list of previously purchased assets for all users in your company. Your account must be enabled for this functionality. Contact your Getty Images account rep for more information. Default is false. (optional, default to false)
     * @return ApiResponse&lt;PreviousAssetPurchases&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> PageNumberLessThanOne </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> InsufficientPermissions </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<PreviousAssetPurchases> v3PurchasedAssetsGetWithHttpInfo(String acceptLanguage, OffsetDateTime dateTo, Integer page, Integer pageSize, OffsetDateTime dateFrom, Boolean companyPurchases) throws ApiException {
        okhttp3.Call localVarCall = v3PurchasedAssetsGetValidateBeforeCall(acceptLanguage, dateTo, page, pageSize, dateFrom, companyPurchases, null);
        Type localVarReturnType = new TypeToken<PreviousAssetPurchases>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Previously Purchased Images and Video (asynchronously)
     * This endpoint returns a list of all assets purchased on gettyimages.com by the username used for authentication.  Use of this endpoint requires configuration changes to your API key. Please contact your sales representative to learn more.  You&#39;ll need an API key and access token to use this resource. 
     * @param acceptLanguage Provide a header to specify the language of result values. Supported values: cs (iStock only), de, en-GB, en-US, es, fi (iStock only), fr, hu (iStock only), id (iStock only), it, ja, ko (creative assets only), nl, pl (creative assets only), pt-BR, pt-PT, ro (iStock only), ru (creative assets only), sv, th (iStock only), tr, uk (iStock only), vi (iStock only), zh-HK (creative assets only). (optional)
     * @param dateTo If specified, retrieves previous purchases on or before this date. Dates should be submitted in ISO 8601 format (i.e., YYYY-MM-DD). (optional)
     * @param page Identifies page to return. Default is 1. (optional, default to 1)
     * @param pageSize Specifies page size. Default is 75, maximum page_size is 100. (optional, default to 75)
     * @param dateFrom If specified, retrieves previous purchases on or after this date. Dates should be submitted in ISO 8601 format (i.e., YYYY-MM-DD). (optional)
     * @param companyPurchases If specified, returns the list of previously purchased assets for all users in your company. Your account must be enabled for this functionality. Contact your Getty Images account rep for more information. Default is false. (optional, default to false)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> OK </td><td>  -  </td></tr>
        <tr><td> 400 </td><td> PageNumberLessThanOne </td><td>  -  </td></tr>
        <tr><td> 401 </td><td> Unauthorized </td><td>  -  </td></tr>
        <tr><td> 403 </td><td> InsufficientPermissions </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call v3PurchasedAssetsGetAsync(String acceptLanguage, OffsetDateTime dateTo, Integer page, Integer pageSize, OffsetDateTime dateFrom, Boolean companyPurchases, final ApiCallback<PreviousAssetPurchases> _callback) throws ApiException {

        okhttp3.Call localVarCall = v3PurchasedAssetsGetValidateBeforeCall(acceptLanguage, dateTo, page, pageSize, dateFrom, companyPurchases, _callback);
        Type localVarReturnType = new TypeToken<PreviousAssetPurchases>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
