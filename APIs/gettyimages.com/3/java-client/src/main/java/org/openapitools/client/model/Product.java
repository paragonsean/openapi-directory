/*
 * Getty Images
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.client.model.DownloadRequirements;
import org.openapitools.client.model.OverageDetails;
import org.openapitools.client.model.ProductStatus;
import org.openapitools.client.model.ProductTypeResponse;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * Product
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-10-12T10:09:49.731753-04:00[America/New_York]", comments = "Generator version: 7.9.0")
public class Product {
  public static final String SERIALIZED_NAME_AGREEMENT_NAME = "agreement_name";
  @SerializedName(SERIALIZED_NAME_AGREEMENT_NAME)
  private String agreementName;

  public static final String SERIALIZED_NAME_APPLICATION_WEBSITE = "application_website";
  @SerializedName(SERIALIZED_NAME_APPLICATION_WEBSITE)
  private String applicationWebsite;

  public static final String SERIALIZED_NAME_CREDITS_REMAINING = "credits_remaining";
  @SerializedName(SERIALIZED_NAME_CREDITS_REMAINING)
  private Integer creditsRemaining;

  public static final String SERIALIZED_NAME_DOWNLOAD_LIMIT = "download_limit";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD_LIMIT)
  private Integer downloadLimit;

  public static final String SERIALIZED_NAME_DOWNLOAD_LIMIT_DURATION = "download_limit_duration";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD_LIMIT_DURATION)
  private String downloadLimitDuration;

  public static final String SERIALIZED_NAME_DOWNLOAD_LIMIT_RESET_UTC_DATE = "download_limit_reset_utc_date";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD_LIMIT_RESET_UTC_DATE)
  private OffsetDateTime downloadLimitResetUtcDate;

  public static final String SERIALIZED_NAME_DOWNLOAD_REQUIREMENTS = "download_requirements";
  @SerializedName(SERIALIZED_NAME_DOWNLOAD_REQUIREMENTS)
  private DownloadRequirements downloadRequirements;

  public static final String SERIALIZED_NAME_DOWNLOADS_REMAINING = "downloads_remaining";
  @SerializedName(SERIALIZED_NAME_DOWNLOADS_REMAINING)
  private Integer downloadsRemaining;

  public static final String SERIALIZED_NAME_EXPIRATION_UTC_DATE = "expiration_utc_date";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_UTC_DATE)
  private OffsetDateTime expirationUtcDate;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private Integer id;

  public static final String SERIALIZED_NAME_IMAGEPACK_RESOLUTION = "imagepack_resolution";
  @SerializedName(SERIALIZED_NAME_IMAGEPACK_RESOLUTION)
  private String imagepackResolution;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_OVERAGE = "overage";
  @SerializedName(SERIALIZED_NAME_OVERAGE)
  private OverageDetails overage;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private ProductStatus status;

  public static final String SERIALIZED_NAME_TEAM_CREDITS = "team_credits";
  @SerializedName(SERIALIZED_NAME_TEAM_CREDITS)
  private Integer teamCredits;

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private ProductTypeResponse type;

  public Product() {
  }

  public Product agreementName(String agreementName) {
    this.agreementName = agreementName;
    return this;
  }

  /**
   * Get agreementName
   * @return agreementName
   */
  @javax.annotation.Nullable
  public String getAgreementName() {
    return agreementName;
  }

  public void setAgreementName(String agreementName) {
    this.agreementName = agreementName;
  }


  public Product applicationWebsite(String applicationWebsite) {
    this.applicationWebsite = applicationWebsite;
    return this;
  }

  /**
   * Get applicationWebsite
   * @return applicationWebsite
   */
  @javax.annotation.Nullable
  public String getApplicationWebsite() {
    return applicationWebsite;
  }

  public void setApplicationWebsite(String applicationWebsite) {
    this.applicationWebsite = applicationWebsite;
  }


  public Product creditsRemaining(Integer creditsRemaining) {
    this.creditsRemaining = creditsRemaining;
    return this;
  }

  /**
   * Get creditsRemaining
   * @return creditsRemaining
   */
  @javax.annotation.Nullable
  public Integer getCreditsRemaining() {
    return creditsRemaining;
  }

  public void setCreditsRemaining(Integer creditsRemaining) {
    this.creditsRemaining = creditsRemaining;
  }


  public Product downloadLimit(Integer downloadLimit) {
    this.downloadLimit = downloadLimit;
    return this;
  }

  /**
   * Get downloadLimit
   * @return downloadLimit
   */
  @javax.annotation.Nullable
  public Integer getDownloadLimit() {
    return downloadLimit;
  }

  public void setDownloadLimit(Integer downloadLimit) {
    this.downloadLimit = downloadLimit;
  }


  public Product downloadLimitDuration(String downloadLimitDuration) {
    this.downloadLimitDuration = downloadLimitDuration;
    return this;
  }

  /**
   * Get downloadLimitDuration
   * @return downloadLimitDuration
   */
  @javax.annotation.Nullable
  public String getDownloadLimitDuration() {
    return downloadLimitDuration;
  }

  public void setDownloadLimitDuration(String downloadLimitDuration) {
    this.downloadLimitDuration = downloadLimitDuration;
  }


  public Product downloadLimitResetUtcDate(OffsetDateTime downloadLimitResetUtcDate) {
    this.downloadLimitResetUtcDate = downloadLimitResetUtcDate;
    return this;
  }

  /**
   * Get downloadLimitResetUtcDate
   * @return downloadLimitResetUtcDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getDownloadLimitResetUtcDate() {
    return downloadLimitResetUtcDate;
  }

  public void setDownloadLimitResetUtcDate(OffsetDateTime downloadLimitResetUtcDate) {
    this.downloadLimitResetUtcDate = downloadLimitResetUtcDate;
  }


  public Product downloadRequirements(DownloadRequirements downloadRequirements) {
    this.downloadRequirements = downloadRequirements;
    return this;
  }

  /**
   * Get downloadRequirements
   * @return downloadRequirements
   */
  @javax.annotation.Nullable
  public DownloadRequirements getDownloadRequirements() {
    return downloadRequirements;
  }

  public void setDownloadRequirements(DownloadRequirements downloadRequirements) {
    this.downloadRequirements = downloadRequirements;
  }


  public Product downloadsRemaining(Integer downloadsRemaining) {
    this.downloadsRemaining = downloadsRemaining;
    return this;
  }

  /**
   * Get downloadsRemaining
   * @return downloadsRemaining
   */
  @javax.annotation.Nullable
  public Integer getDownloadsRemaining() {
    return downloadsRemaining;
  }

  public void setDownloadsRemaining(Integer downloadsRemaining) {
    this.downloadsRemaining = downloadsRemaining;
  }


  public Product expirationUtcDate(OffsetDateTime expirationUtcDate) {
    this.expirationUtcDate = expirationUtcDate;
    return this;
  }

  /**
   * Get expirationUtcDate
   * @return expirationUtcDate
   */
  @javax.annotation.Nullable
  public OffsetDateTime getExpirationUtcDate() {
    return expirationUtcDate;
  }

  public void setExpirationUtcDate(OffsetDateTime expirationUtcDate) {
    this.expirationUtcDate = expirationUtcDate;
  }


  public Product id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @javax.annotation.Nullable
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }


  public Product imagepackResolution(String imagepackResolution) {
    this.imagepackResolution = imagepackResolution;
    return this;
  }

  /**
   * Get imagepackResolution
   * @return imagepackResolution
   */
  @javax.annotation.Nullable
  public String getImagepackResolution() {
    return imagepackResolution;
  }

  public void setImagepackResolution(String imagepackResolution) {
    this.imagepackResolution = imagepackResolution;
  }


  public Product name(String name) {
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }


  public Product overage(OverageDetails overage) {
    this.overage = overage;
    return this;
  }

  /**
   * Get overage
   * @return overage
   */
  @javax.annotation.Nullable
  public OverageDetails getOverage() {
    return overage;
  }

  public void setOverage(OverageDetails overage) {
    this.overage = overage;
  }


  public Product status(ProductStatus status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @javax.annotation.Nullable
  public ProductStatus getStatus() {
    return status;
  }

  public void setStatus(ProductStatus status) {
    this.status = status;
  }


  public Product teamCredits(Integer teamCredits) {
    this.teamCredits = teamCredits;
    return this;
  }

  /**
   * Get teamCredits
   * @return teamCredits
   */
  @javax.annotation.Nullable
  public Integer getTeamCredits() {
    return teamCredits;
  }

  public void setTeamCredits(Integer teamCredits) {
    this.teamCredits = teamCredits;
  }


  public Product type(ProductTypeResponse type) {
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @javax.annotation.Nullable
  public ProductTypeResponse getType() {
    return type;
  }

  public void setType(ProductTypeResponse type) {
    this.type = type;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Product product = (Product) o;
    return Objects.equals(this.agreementName, product.agreementName) &&
        Objects.equals(this.applicationWebsite, product.applicationWebsite) &&
        Objects.equals(this.creditsRemaining, product.creditsRemaining) &&
        Objects.equals(this.downloadLimit, product.downloadLimit) &&
        Objects.equals(this.downloadLimitDuration, product.downloadLimitDuration) &&
        Objects.equals(this.downloadLimitResetUtcDate, product.downloadLimitResetUtcDate) &&
        Objects.equals(this.downloadRequirements, product.downloadRequirements) &&
        Objects.equals(this.downloadsRemaining, product.downloadsRemaining) &&
        Objects.equals(this.expirationUtcDate, product.expirationUtcDate) &&
        Objects.equals(this.id, product.id) &&
        Objects.equals(this.imagepackResolution, product.imagepackResolution) &&
        Objects.equals(this.name, product.name) &&
        Objects.equals(this.overage, product.overage) &&
        Objects.equals(this.status, product.status) &&
        Objects.equals(this.teamCredits, product.teamCredits) &&
        Objects.equals(this.type, product.type);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(agreementName, applicationWebsite, creditsRemaining, downloadLimit, downloadLimitDuration, downloadLimitResetUtcDate, downloadRequirements, downloadsRemaining, expirationUtcDate, id, imagepackResolution, name, overage, status, teamCredits, type);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Product {\n");
    sb.append("    agreementName: ").append(toIndentedString(agreementName)).append("\n");
    sb.append("    applicationWebsite: ").append(toIndentedString(applicationWebsite)).append("\n");
    sb.append("    creditsRemaining: ").append(toIndentedString(creditsRemaining)).append("\n");
    sb.append("    downloadLimit: ").append(toIndentedString(downloadLimit)).append("\n");
    sb.append("    downloadLimitDuration: ").append(toIndentedString(downloadLimitDuration)).append("\n");
    sb.append("    downloadLimitResetUtcDate: ").append(toIndentedString(downloadLimitResetUtcDate)).append("\n");
    sb.append("    downloadRequirements: ").append(toIndentedString(downloadRequirements)).append("\n");
    sb.append("    downloadsRemaining: ").append(toIndentedString(downloadsRemaining)).append("\n");
    sb.append("    expirationUtcDate: ").append(toIndentedString(expirationUtcDate)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    imagepackResolution: ").append(toIndentedString(imagepackResolution)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    overage: ").append(toIndentedString(overage)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    teamCredits: ").append(toIndentedString(teamCredits)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("agreement_name");
    openapiFields.add("application_website");
    openapiFields.add("credits_remaining");
    openapiFields.add("download_limit");
    openapiFields.add("download_limit_duration");
    openapiFields.add("download_limit_reset_utc_date");
    openapiFields.add("download_requirements");
    openapiFields.add("downloads_remaining");
    openapiFields.add("expiration_utc_date");
    openapiFields.add("id");
    openapiFields.add("imagepack_resolution");
    openapiFields.add("name");
    openapiFields.add("overage");
    openapiFields.add("status");
    openapiFields.add("team_credits");
    openapiFields.add("type");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to Product
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!Product.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in Product is not found in the empty JSON string", Product.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!Product.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `Product` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
      if ((jsonObj.get("agreement_name") != null && !jsonObj.get("agreement_name").isJsonNull()) && !jsonObj.get("agreement_name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `agreement_name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("agreement_name").toString()));
      }
      if ((jsonObj.get("application_website") != null && !jsonObj.get("application_website").isJsonNull()) && !jsonObj.get("application_website").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `application_website` to be a primitive type in the JSON string but got `%s`", jsonObj.get("application_website").toString()));
      }
      if ((jsonObj.get("download_limit_duration") != null && !jsonObj.get("download_limit_duration").isJsonNull()) && !jsonObj.get("download_limit_duration").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `download_limit_duration` to be a primitive type in the JSON string but got `%s`", jsonObj.get("download_limit_duration").toString()));
      }
      // validate the optional field `download_requirements`
      if (jsonObj.get("download_requirements") != null && !jsonObj.get("download_requirements").isJsonNull()) {
        DownloadRequirements.validateJsonElement(jsonObj.get("download_requirements"));
      }
      if ((jsonObj.get("imagepack_resolution") != null && !jsonObj.get("imagepack_resolution").isJsonNull()) && !jsonObj.get("imagepack_resolution").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `imagepack_resolution` to be a primitive type in the JSON string but got `%s`", jsonObj.get("imagepack_resolution").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      // validate the optional field `overage`
      if (jsonObj.get("overage") != null && !jsonObj.get("overage").isJsonNull()) {
        OverageDetails.validateJsonElement(jsonObj.get("overage"));
      }
      // validate the optional field `status`
      if (jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) {
        ProductStatus.validateJsonElement(jsonObj.get("status"));
      }
      // validate the optional field `type`
      if (jsonObj.get("type") != null && !jsonObj.get("type").isJsonNull()) {
        ProductTypeResponse.validateJsonElement(jsonObj.get("type"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!Product.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'Product' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<Product> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(Product.class));

       return (TypeAdapter<T>) new TypeAdapter<Product>() {
           @Override
           public void write(JsonWriter out, Product value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public Product read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of Product given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of Product
   * @throws IOException if the JSON string is invalid with respect to Product
   */
  public static Product fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, Product.class);
  }

  /**
   * Convert an instance of Product to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

