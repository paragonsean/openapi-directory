# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Tax(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, id: str=None, tax_annual_amount: str=None, tax_year: int=None):
        """Tax - a model defined in OpenAPI

        :param id: The id of this Tax.
        :param tax_annual_amount: The tax_annual_amount of this Tax.
        :param tax_year: The tax_year of this Tax.
        """
        self.openapi_types = {
            'id': str,
            'tax_annual_amount': str,
            'tax_year': int
        }

        self.attribute_map = {
            'id': 'id',
            'tax_annual_amount': 'taxAnnualAmount',
            'tax_year': 'taxYear'
        }

        self._id = id
        self._tax_annual_amount = tax_annual_amount
        self._tax_year = tax_year

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Tax':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Tax of this Tax.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self):
        """Gets the id of this Tax.

        Tax Parcel ID for the listing

        :return: The id of this Tax.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this Tax.

        Tax Parcel ID for the listing

        :param id: The id of this Tax.
        :type id: str
        """

        self._id = id

    @property
    def tax_annual_amount(self):
        """Gets the tax_annual_amount of this Tax.

        Annual tax amount in USD

        :return: The tax_annual_amount of this Tax.
        :rtype: str
        """
        return self._tax_annual_amount

    @tax_annual_amount.setter
    def tax_annual_amount(self, tax_annual_amount):
        """Sets the tax_annual_amount of this Tax.

        Annual tax amount in USD

        :param tax_annual_amount: The tax_annual_amount of this Tax.
        :type tax_annual_amount: str
        """

        self._tax_annual_amount = tax_annual_amount

    @property
    def tax_year(self):
        """Gets the tax_year of this Tax.

        Tax Year

        :return: The tax_year of this Tax.
        :rtype: int
        """
        return self._tax_year

    @tax_year.setter
    def tax_year(self, tax_year):
        """Sets the tax_year of this Tax.

        Tax Year

        :param tax_year: The tax_year of this Tax.
        :type tax_year: int
        """

        self._tax_year = tax_year
