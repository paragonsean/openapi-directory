# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ContactInformation(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, cell: str=None, email: str=None, office: str=None):
        """ContactInformation - a model defined in OpenAPI

        :param cell: The cell of this ContactInformation.
        :param email: The email of this ContactInformation.
        :param office: The office of this ContactInformation.
        """
        self.openapi_types = {
            'cell': str,
            'email': str,
            'office': str
        }

        self.attribute_map = {
            'cell': 'cell',
            'email': 'email',
            'office': 'office'
        }

        self._cell = cell
        self._email = email
        self._office = office

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ContactInformation':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The ContactInformation of this ContactInformation.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def cell(self):
        """Gets the cell of this ContactInformation.

        Contact Information Cell Phone  **Not available for all RETS vendors** 

        :return: The cell of this ContactInformation.
        :rtype: str
        """
        return self._cell

    @cell.setter
    def cell(self, cell):
        """Sets the cell of this ContactInformation.

        Contact Information Cell Phone  **Not available for all RETS vendors** 

        :param cell: The cell of this ContactInformation.
        :type cell: str
        """

        self._cell = cell

    @property
    def email(self):
        """Gets the email of this ContactInformation.

        The email address of the `ContactInformation`  **Not available for all RETS vendors** 

        :return: The email of this ContactInformation.
        :rtype: str
        """
        return self._email

    @email.setter
    def email(self, email):
        """Sets the email of this ContactInformation.

        The email address of the `ContactInformation`  **Not available for all RETS vendors** 

        :param email: The email of this ContactInformation.
        :type email: str
        """

        self._email = email

    @property
    def office(self):
        """Gets the office of this ContactInformation.

        Contact Information Office Phone Number  **Not available for all RETS vendors** 

        :return: The office of this ContactInformation.
        :rtype: str
        """
        return self._office

    @office.setter
    def office(self, office):
        """Sets the office of this ContactInformation.

        Contact Information Office Phone Number  **Not available for all RETS vendors** 

        :param office: The office of this ContactInformation.
        :type office: str
        """

        self._office = office
