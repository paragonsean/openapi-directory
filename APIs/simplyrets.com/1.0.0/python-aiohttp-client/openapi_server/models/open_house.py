# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.listing import Listing
from openapi_server import util


class OpenHouse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, description: str=None, end_time: datetime=None, input_id: object=None, listing: Listing=None, open_house_id: str=None, open_house_key: str=None, refreshments: str=None, start_time: datetime=None, type: str=None):
        """OpenHouse - a model defined in OpenAPI

        :param description: The description of this OpenHouse.
        :param end_time: The end_time of this OpenHouse.
        :param input_id: The input_id of this OpenHouse.
        :param listing: The listing of this OpenHouse.
        :param open_house_id: The open_house_id of this OpenHouse.
        :param open_house_key: The open_house_key of this OpenHouse.
        :param refreshments: The refreshments of this OpenHouse.
        :param start_time: The start_time of this OpenHouse.
        :param type: The type of this OpenHouse.
        """
        self.openapi_types = {
            'description': str,
            'end_time': datetime,
            'input_id': object,
            'listing': Listing,
            'open_house_id': str,
            'open_house_key': str,
            'refreshments': str,
            'start_time': datetime,
            'type': str
        }

        self.attribute_map = {
            'description': 'description',
            'end_time': 'endTime',
            'input_id': 'inputId',
            'listing': 'listing',
            'open_house_id': 'openHouseId',
            'open_house_key': 'openHouseKey',
            'refreshments': 'refreshments',
            'start_time': 'startTime',
            'type': 'type'
        }

        self._description = description
        self._end_time = end_time
        self._input_id = input_id
        self._listing = listing
        self._open_house_id = open_house_id
        self._open_house_key = open_house_key
        self._refreshments = refreshments
        self._start_time = start_time
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OpenHouse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OpenHouse of this OpenHouse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def description(self):
        """Gets the description of this OpenHouse.

        The remarks and/or description details for the open house

        :return: The description of this OpenHouse.
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this OpenHouse.

        The remarks and/or description details for the open house

        :param description: The description of this OpenHouse.
        :type description: str
        """

        self._description = description

    @property
    def end_time(self):
        """Gets the end_time of this OpenHouse.

        The ending date time for the open house

        :return: The end_time of this OpenHouse.
        :rtype: datetime
        """
        return self._end_time

    @end_time.setter
    def end_time(self, end_time):
        """Sets the end_time of this OpenHouse.

        The ending date time for the open house

        :param end_time: The end_time of this OpenHouse.
        :type end_time: datetime
        """

        self._end_time = end_time

    @property
    def input_id(self):
        """Gets the input_id of this OpenHouse.

        The MLS number for the showing agent or agent which created the OpenHouse in the MLS database. 

        :return: The input_id of this OpenHouse.
        :rtype: object
        """
        return self._input_id

    @input_id.setter
    def input_id(self, input_id):
        """Sets the input_id of this OpenHouse.

        The MLS number for the showing agent or agent which created the OpenHouse in the MLS database. 

        :param input_id: The input_id of this OpenHouse.
        :type input_id: object
        """

        self._input_id = input_id

    @property
    def listing(self):
        """Gets the listing of this OpenHouse.


        :return: The listing of this OpenHouse.
        :rtype: Listing
        """
        return self._listing

    @listing.setter
    def listing(self, listing):
        """Sets the listing of this OpenHouse.


        :param listing: The listing of this OpenHouse.
        :type listing: Listing
        """

        self._listing = listing

    @property
    def open_house_id(self):
        """Gets the open_house_id of this OpenHouse.

        The MLS number or id provided by the MLS 

        :return: The open_house_id of this OpenHouse.
        :rtype: str
        """
        return self._open_house_id

    @open_house_id.setter
    def open_house_id(self, open_house_id):
        """Sets the open_house_id of this OpenHouse.

        The MLS number or id provided by the MLS 

        :param open_house_id: The open_house_id of this OpenHouse.
        :type open_house_id: str
        """

        self._open_house_id = open_house_id

    @property
    def open_house_key(self):
        """Gets the open_house_key of this OpenHouse.

        A unique identifier for the open house which is specific to the SimplyRETS API 

        :return: The open_house_key of this OpenHouse.
        :rtype: str
        """
        return self._open_house_key

    @open_house_key.setter
    def open_house_key(self, open_house_key):
        """Sets the open_house_key of this OpenHouse.

        A unique identifier for the open house which is specific to the SimplyRETS API 

        :param open_house_key: The open_house_key of this OpenHouse.
        :type open_house_key: str
        """

        self._open_house_key = open_house_key

    @property
    def refreshments(self):
        """Gets the refreshments of this OpenHouse.

        Provided

        :return: The refreshments of this OpenHouse.
        :rtype: str
        """
        return self._refreshments

    @refreshments.setter
    def refreshments(self, refreshments):
        """Sets the refreshments of this OpenHouse.

        Provided

        :param refreshments: The refreshments of this OpenHouse.
        :type refreshments: str
        """

        self._refreshments = refreshments

    @property
    def start_time(self):
        """Gets the start_time of this OpenHouse.

        Start Date for the open house

        :return: The start_time of this OpenHouse.
        :rtype: datetime
        """
        return self._start_time

    @start_time.setter
    def start_time(self, start_time):
        """Sets the start_time of this OpenHouse.

        Start Date for the open house

        :param start_time: The start_time of this OpenHouse.
        :type start_time: datetime
        """

        self._start_time = start_time

    @property
    def type(self):
        """Gets the type of this OpenHouse.

        The open house type. For example, Public or Private

        :return: The type of this OpenHouse.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this OpenHouse.

        The open house type. For example, Public or Private

        :param type: The type of this OpenHouse.
        :type type: str
        """

        self._type = type
