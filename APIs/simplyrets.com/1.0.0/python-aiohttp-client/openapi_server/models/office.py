# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.contact_information import ContactInformation
from openapi_server import util


class Office(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, brokerid: str=None, contact: ContactInformation=None, name: str=None, serving_name: str=None):
        """Office - a model defined in OpenAPI

        :param brokerid: The brokerid of this Office.
        :param contact: The contact of this Office.
        :param name: The name of this Office.
        :param serving_name: The serving_name of this Office.
        """
        self.openapi_types = {
            'brokerid': str,
            'contact': ContactInformation,
            'name': str,
            'serving_name': str
        }

        self.attribute_map = {
            'brokerid': 'brokerid',
            'contact': 'contact',
            'name': 'name',
            'serving_name': 'servingName'
        }

        self._brokerid = brokerid
        self._contact = contact
        self._name = name
        self._serving_name = serving_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Office':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Office of this Office.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def brokerid(self):
        """Gets the brokerid of this Office.

        Office or brokerage MLS identifier  **Not available for all RETS vendors** 

        :return: The brokerid of this Office.
        :rtype: str
        """
        return self._brokerid

    @brokerid.setter
    def brokerid(self, brokerid):
        """Sets the brokerid of this Office.

        Office or brokerage MLS identifier  **Not available for all RETS vendors** 

        :param brokerid: The brokerid of this Office.
        :type brokerid: str
        """

        self._brokerid = brokerid

    @property
    def contact(self):
        """Gets the contact of this Office.


        :return: The contact of this Office.
        :rtype: ContactInformation
        """
        return self._contact

    @contact.setter
    def contact(self, contact):
        """Sets the contact of this Office.


        :param contact: The contact of this Office.
        :type contact: ContactInformation
        """

        self._contact = contact

    @property
    def name(self):
        """Gets the name of this Office.

        Pimary office name

        :return: The name of this Office.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Office.

        Pimary office name

        :param name: The name of this Office.
        :type name: str
        """

        self._name = name

    @property
    def serving_name(self):
        """Gets the serving_name of this Office.

        Primary office or brokerage name

        :return: The serving_name of this Office.
        :rtype: str
        """
        return self._serving_name

    @serving_name.setter
    def serving_name(self, serving_name):
        """Sets the serving_name of this Office.

        Primary office or brokerage name

        :param serving_name: The serving_name of this Office.
        :type serving_name: str
        """

        self._serving_name = serving_name
