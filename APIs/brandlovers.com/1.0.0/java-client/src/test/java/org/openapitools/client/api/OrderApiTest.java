/*
 * BrandLovers Marketplace API V1
 * Allows sellers to: 1) Load products definitions to the BrandLovers marktplace. 2) Receive and update orders status. 3) Receive and update shipping information. 4) Receive and update customer tickets. All requests consume and return application/json content. All request must be authenticated and use HTTPS.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.NewTrackingRefund;
import org.openapitools.client.model.Newshipmentstatus;
import org.openapitools.client.model.Order;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for OrderApi
 */
@Disabled
public class OrderApiTest {

    private final OrderApi api = new OrderApi();

    /**
     * Returns all details of a order
     *
     * Returns all details of a single order, including last status, items shipped or not.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void orderOrderIdGetTest() throws ApiException {
        String authorization = null;
        String orderId = null;
        Order response = api.orderOrderIdGet(authorization, orderId);
        // TODO: test validations
    }

    /**
     * Confirm shipment canceletion (when requested by the customer) or failure to deliver
     *
     * Confirm shipment canceletion (when requested by the customer) or failure to deliver one shipment
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void orderOrderIdShipmentCancelPostTest() throws ApiException {
        String authorization = null;
        String orderId = null;
        NewTrackingRefund body = null;
        api.orderOrderIdShipmentCancelPost(authorization, orderId, body);
        // TODO: test validations
    }

    /**
     * Confirms that a shipment was delivered
     *
     * Confirms that a shipment was delivered. Must inform quantity of successfully deliverd items even if items deliverd was less than the original order
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void orderOrderIdShipmentDeliveredPostTest() throws ApiException {
        String authorization = null;
        String orderId = null;
        Newshipmentstatus body = null;
        api.orderOrderIdShipmentDeliveredPost(authorization, orderId, body);
        // TODO: test validations
    }

    /**
     * Confirm item exchange
     *
     * This enpoint to confirm item exchange when failure to deliver or requested by the customer. All customer requests are tracket via trouble tickets
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void orderOrderIdShipmentExchangePostTest() throws ApiException {
        String authorization = null;
        String orderId = null;
        NewTrackingRefund body = null;
        api.orderOrderIdShipmentExchangePost(authorization, orderId, body);
        // TODO: test validations
    }

    /**
     * Confirm order item return and refund
     *
     * Use this endpoint to return and refund items froma a order. In order to fully return an order list all items and applicate quantity.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void orderOrderIdShipmentReturnPostTest() throws ApiException {
        String authorization = null;
        String orderId = null;
        NewTrackingRefund body = null;
        api.orderOrderIdShipmentReturnPost(authorization, orderId, body);
        // TODO: test validations
    }

    /**
     * Update new order to include shipment information
     *
     * Updates order to include shipment shiped information. This endpoint can be used to include a single or multiple shipments for any give order. In order to inform that all items of a order where shipped list all of them, including applicable quantities in the payload.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void orderOrderIdShipmentSentPostTest() throws ApiException {
        String authorization = null;
        String orderId = null;
        Newshipmentstatus body = null;
        api.orderOrderIdShipmentSentPost(authorization, orderId, body);
        // TODO: test validations
    }

}
