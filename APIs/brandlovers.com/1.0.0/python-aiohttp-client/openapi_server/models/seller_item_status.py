# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SellerItemStatus(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, active: bool=None):
        """SellerItemStatus - a model defined in OpenAPI

        :param active: The active of this SellerItemStatus.
        """
        self.openapi_types = {
            'active': bool
        }

        self.attribute_map = {
            'active': 'active'
        }

        self._active = active

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SellerItemStatus':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The SellerItemStatus of this SellerItemStatus.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def active(self):
        """Gets the active of this SellerItemStatus.

        Defines if this product is ready for sale. Active `true`, disabled `false` 

        :return: The active of this SellerItemStatus.
        :rtype: bool
        """
        return self._active

    @active.setter
    def active(self, active):
        """Sets the active of this SellerItemStatus.

        Defines if this product is ready for sale. Active `true`, disabled `false` 

        :param active: The active of this SellerItemStatus.
        :type active: bool
        """
        if active is None:
            raise ValueError("Invalid value for `active`, must not be `None`")

        self._active = active
