# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.metadata import Metadata
from openapi_server.models.ticket_message import TicketMessage
from openapi_server import util


class GetTicketMessages(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, messages: List[TicketMessage]=None, metadata: List[Metadata]=None):
        """GetTicketMessages - a model defined in OpenAPI

        :param messages: The messages of this GetTicketMessages.
        :param metadata: The metadata of this GetTicketMessages.
        """
        self.openapi_types = {
            'messages': List[TicketMessage],
            'metadata': List[Metadata]
        }

        self.attribute_map = {
            'messages': 'messages',
            'metadata': 'metadata'
        }

        self._messages = messages
        self._metadata = metadata

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GetTicketMessages':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The GetTicketMessages of this GetTicketMessages.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def messages(self):
        """Gets the messages of this GetTicketMessages.


        :return: The messages of this GetTicketMessages.
        :rtype: List[TicketMessage]
        """
        return self._messages

    @messages.setter
    def messages(self, messages):
        """Sets the messages of this GetTicketMessages.


        :param messages: The messages of this GetTicketMessages.
        :type messages: List[TicketMessage]
        """

        self._messages = messages

    @property
    def metadata(self):
        """Gets the metadata of this GetTicketMessages.


        :return: The metadata of this GetTicketMessages.
        :rtype: List[Metadata]
        """
        return self._metadata

    @metadata.setter
    def metadata(self, metadata):
        """Sets the metadata of this GetTicketMessages.


        :param metadata: The metadata of this GetTicketMessages.
        :type metadata: List[Metadata]
        """
        if metadata is None:
            raise ValueError("Invalid value for `metadata`, must not be `None`")

        self._metadata = metadata
