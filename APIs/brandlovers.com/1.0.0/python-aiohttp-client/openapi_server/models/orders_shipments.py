# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.order_shippment import OrderShippment
from openapi_server import util


class OrdersShipments(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, shipments: List[OrderShippment]=None):
        """OrdersShipments - a model defined in OpenAPI

        :param shipments: The shipments of this OrdersShipments.
        """
        self.openapi_types = {
            'shipments': List[OrderShippment]
        }

        self.attribute_map = {
            'shipments': 'shipments'
        }

        self._shipments = shipments

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrdersShipments':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrdersShipments of this OrdersShipments.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def shipments(self):
        """Gets the shipments of this OrdersShipments.


        :return: The shipments of this OrdersShipments.
        :rtype: List[OrderShippment]
        """
        return self._shipments

    @shipments.setter
    def shipments(self, shipments):
        """Sets the shipments of this OrdersShipments.


        :param shipments: The shipments of this OrdersShipments.
        :type shipments: List[OrderShippment]
        """

        self._shipments = shipments
