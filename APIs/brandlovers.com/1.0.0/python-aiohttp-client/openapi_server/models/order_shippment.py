# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.courier import Courier
from openapi_server.models.invoice import Invoice
from openapi_server.models.order_item_reference import OrderItemReference
from openapi_server import util


class OrderShippment(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, courier: Courier=None, cte: str=None, invoice: Invoice=None, items: List[OrderItemReference]=None, number: str=None, occurred_at: datetime=None, order: str=None, seller_shipment_id: str=None, status: str=None, tracking_url: str=None):
        """OrderShippment - a model defined in OpenAPI

        :param courier: The courier of this OrderShippment.
        :param cte: The cte of this OrderShippment.
        :param invoice: The invoice of this OrderShippment.
        :param items: The items of this OrderShippment.
        :param number: The number of this OrderShippment.
        :param occurred_at: The occurred_at of this OrderShippment.
        :param order: The order of this OrderShippment.
        :param seller_shipment_id: The seller_shipment_id of this OrderShippment.
        :param status: The status of this OrderShippment.
        :param tracking_url: The tracking_url of this OrderShippment.
        """
        self.openapi_types = {
            'courier': Courier,
            'cte': str,
            'invoice': Invoice,
            'items': List[OrderItemReference],
            'number': str,
            'occurred_at': datetime,
            'order': str,
            'seller_shipment_id': str,
            'status': str,
            'tracking_url': str
        }

        self.attribute_map = {
            'courier': 'courier',
            'cte': 'cte',
            'invoice': 'invoice',
            'items': 'items',
            'number': 'number',
            'occurred_at': 'occurredAt',
            'order': 'order',
            'seller_shipment_id': 'sellerShipmentId',
            'status': 'status',
            'tracking_url': 'trackingUrl'
        }

        self._courier = courier
        self._cte = cte
        self._invoice = invoice
        self._items = items
        self._number = number
        self._occurred_at = occurred_at
        self._order = order
        self._seller_shipment_id = seller_shipment_id
        self._status = status
        self._tracking_url = tracking_url

    @classmethod
    def from_dict(cls, dikt: dict) -> 'OrderShippment':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The OrderShippment of this OrderShippment.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def courier(self):
        """Gets the courier of this OrderShippment.


        :return: The courier of this OrderShippment.
        :rtype: Courier
        """
        return self._courier

    @courier.setter
    def courier(self, courier):
        """Sets the courier of this OrderShippment.


        :param courier: The courier of this OrderShippment.
        :type courier: Courier
        """

        self._courier = courier

    @property
    def cte(self):
        """Gets the cte of this OrderShippment.

        Conhecimento de Transporte Eletôniconico

        :return: The cte of this OrderShippment.
        :rtype: str
        """
        return self._cte

    @cte.setter
    def cte(self, cte):
        """Sets the cte of this OrderShippment.

        Conhecimento de Transporte Eletôniconico

        :param cte: The cte of this OrderShippment.
        :type cte: str
        """

        self._cte = cte

    @property
    def invoice(self):
        """Gets the invoice of this OrderShippment.


        :return: The invoice of this OrderShippment.
        :rtype: Invoice
        """
        return self._invoice

    @invoice.setter
    def invoice(self, invoice):
        """Sets the invoice of this OrderShippment.


        :param invoice: The invoice of this OrderShippment.
        :type invoice: Invoice
        """

        self._invoice = invoice

    @property
    def items(self):
        """Gets the items of this OrderShippment.


        :return: The items of this OrderShippment.
        :rtype: List[OrderItemReference]
        """
        return self._items

    @items.setter
    def items(self, items):
        """Sets the items of this OrderShippment.


        :param items: The items of this OrderShippment.
        :type items: List[OrderItemReference]
        """

        self._items = items

    @property
    def number(self):
        """Gets the number of this OrderShippment.

        Courier unique trackign Id associated with this shipment

        :return: The number of this OrderShippment.
        :rtype: str
        """
        return self._number

    @number.setter
    def number(self, number):
        """Sets the number of this OrderShippment.

        Courier unique trackign Id associated with this shipment

        :param number: The number of this OrderShippment.
        :type number: str
        """

        self._number = number

    @property
    def occurred_at(self):
        """Gets the occurred_at of this OrderShippment.

        Date that this shippment was shiped

        :return: The occurred_at of this OrderShippment.
        :rtype: datetime
        """
        return self._occurred_at

    @occurred_at.setter
    def occurred_at(self, occurred_at):
        """Sets the occurred_at of this OrderShippment.

        Date that this shippment was shiped

        :param occurred_at: The occurred_at of this OrderShippment.
        :type occurred_at: datetime
        """

        self._occurred_at = occurred_at

    @property
    def order(self):
        """Gets the order of this OrderShippment.

        Order unique Id

        :return: The order of this OrderShippment.
        :rtype: str
        """
        return self._order

    @order.setter
    def order(self, order):
        """Sets the order of this OrderShippment.

        Order unique Id

        :param order: The order of this OrderShippment.
        :type order: str
        """

        self._order = order

    @property
    def seller_shipment_id(self):
        """Gets the seller_shipment_id of this OrderShippment.

        Unique Seller shipment Id. This must be unique across all orders and shipments

        :return: The seller_shipment_id of this OrderShippment.
        :rtype: str
        """
        return self._seller_shipment_id

    @seller_shipment_id.setter
    def seller_shipment_id(self, seller_shipment_id):
        """Sets the seller_shipment_id of this OrderShippment.

        Unique Seller shipment Id. This must be unique across all orders and shipments

        :param seller_shipment_id: The seller_shipment_id of this OrderShippment.
        :type seller_shipment_id: str
        """

        self._seller_shipment_id = seller_shipment_id

    @property
    def status(self):
        """Gets the status of this OrderShippment.

        Shipment status.

        :return: The status of this OrderShippment.
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this OrderShippment.

        Shipment status.

        :param status: The status of this OrderShippment.
        :type status: str
        """

        self._status = status

    @property
    def tracking_url(self):
        """Gets the tracking_url of this OrderShippment.

        Courier tracking URL

        :return: The tracking_url of this OrderShippment.
        :rtype: str
        """
        return self._tracking_url

    @tracking_url.setter
    def tracking_url(self, tracking_url):
        """Sets the tracking_url of this OrderShippment.

        Courier tracking URL

        :param tracking_url: The tracking_url of this OrderShippment.
        :type tracking_url: str
        """

        self._tracking_url = tracking_url
