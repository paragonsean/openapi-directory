/**
 * BrandLovers Marketplace API V1
 * Allows sellers to: 1) Load products definitions to the BrandLovers marktplace. 2) Receive and update orders status. 3) Receive and update shipping information. 4) Receive and update customer tickets. All requests consume and return application/json content. All request must be authenticated and use HTTPS.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BrandLoversMarketplaceApiV1);
  }
}(this, function(expect, BrandLoversMarketplaceApiV1) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BrandLoversMarketplaceApiV1.Address();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Address', function() {
    it('should create an instance of Address', function() {
      // uncomment below and update the code to test Address
      //var instance = new BrandLoversMarketplaceApiV1.Address();
      //expect(instance).to.be.a(BrandLoversMarketplaceApiV1.Address);
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instance = new BrandLoversMarketplaceApiV1.Address();
      //expect(instance).to.be();
    });

    it('should have the property city (base name: "city")', function() {
      // uncomment below and update the code to test the property city
      //var instance = new BrandLoversMarketplaceApiV1.Address();
      //expect(instance).to.be();
    });

    it('should have the property complement (base name: "complement")', function() {
      // uncomment below and update the code to test the property complement
      //var instance = new BrandLoversMarketplaceApiV1.Address();
      //expect(instance).to.be();
    });

    it('should have the property countryId (base name: "countryId")', function() {
      // uncomment below and update the code to test the property countryId
      //var instance = new BrandLoversMarketplaceApiV1.Address();
      //expect(instance).to.be();
    });

    it('should have the property neighbourhood (base name: "neighbourhood")', function() {
      // uncomment below and update the code to test the property neighbourhood
      //var instance = new BrandLoversMarketplaceApiV1.Address();
      //expect(instance).to.be();
    });

    it('should have the property number (base name: "number")', function() {
      // uncomment below and update the code to test the property number
      //var instance = new BrandLoversMarketplaceApiV1.Address();
      //expect(instance).to.be();
    });

    it('should have the property recipientName (base name: "recipientName")', function() {
      // uncomment below and update the code to test the property recipientName
      //var instance = new BrandLoversMarketplaceApiV1.Address();
      //expect(instance).to.be();
    });

    it('should have the property reference (base name: "reference")', function() {
      // uncomment below and update the code to test the property reference
      //var instance = new BrandLoversMarketplaceApiV1.Address();
      //expect(instance).to.be();
    });

    it('should have the property state (base name: "state")', function() {
      // uncomment below and update the code to test the property state
      //var instance = new BrandLoversMarketplaceApiV1.Address();
      //expect(instance).to.be();
    });

    it('should have the property zipCode (base name: "zipCode")', function() {
      // uncomment below and update the code to test the property zipCode
      //var instance = new BrandLoversMarketplaceApiV1.Address();
      //expect(instance).to.be();
    });

  });

}));
