/**
 * BrandLovers Marketplace API V1
 * Allows sellers to: 1) Load products definitions to the BrandLovers marktplace. 2) Receive and update orders status. 3) Receive and update shipping information. 4) Receive and update customer tickets. All requests consume and return application/json content. All request must be authenticated and use HTTPS.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BrandLoversMarketplaceApiV1);
  }
}(this, function(expect, BrandLoversMarketplaceApiV1) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BrandLoversMarketplaceApiV1.Shippment();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Shippment', function() {
    it('should create an instance of Shippment', function() {
      // uncomment below and update the code to test Shippment
      //var instance = new BrandLoversMarketplaceApiV1.Shippment();
      //expect(instance).to.be.a(BrandLoversMarketplaceApiV1.Shippment);
    });

    it('should have the property courier (base name: "courier")', function() {
      // uncomment below and update the code to test the property courier
      //var instance = new BrandLoversMarketplaceApiV1.Shippment();
      //expect(instance).to.be();
    });

    it('should have the property cte (base name: "cte")', function() {
      // uncomment below and update the code to test the property cte
      //var instance = new BrandLoversMarketplaceApiV1.Shippment();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new BrandLoversMarketplaceApiV1.Shippment();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new BrandLoversMarketplaceApiV1.Shippment();
      //expect(instance).to.be();
    });

    it('should have the property invoice (base name: "invoice")', function() {
      // uncomment below and update the code to test the property invoice
      //var instance = new BrandLoversMarketplaceApiV1.Shippment();
      //expect(instance).to.be();
    });

    it('should have the property items (base name: "items")', function() {
      // uncomment below and update the code to test the property items
      //var instance = new BrandLoversMarketplaceApiV1.Shippment();
      //expect(instance).to.be();
    });

    it('should have the property number (base name: "number")', function() {
      // uncomment below and update the code to test the property number
      //var instance = new BrandLoversMarketplaceApiV1.Shippment();
      //expect(instance).to.be();
    });

    it('should have the property occurredAt (base name: "occurredAt")', function() {
      // uncomment below and update the code to test the property occurredAt
      //var instance = new BrandLoversMarketplaceApiV1.Shippment();
      //expect(instance).to.be();
    });

    it('should have the property sellerShipmentId (base name: "sellerShipmentId")', function() {
      // uncomment below and update the code to test the property sellerShipmentId
      //var instance = new BrandLoversMarketplaceApiV1.Shippment();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new BrandLoversMarketplaceApiV1.Shippment();
      //expect(instance).to.be();
    });

    it('should have the property trackingUrl (base name: "trackingUrl")', function() {
      // uncomment below and update the code to test the property trackingUrl
      //var instance = new BrandLoversMarketplaceApiV1.Shippment();
      //expect(instance).to.be();
    });

  });

}));
