/**
 * BrandLovers Marketplace API V1
 * Allows sellers to: 1) Load products definitions to the BrandLovers marktplace. 2) Receive and update orders status. 3) Receive and update shipping information. 4) Receive and update customer tickets. All requests consume and return application/json content. All request must be authenticated and use HTTPS.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BrandLoversMarketplaceApiV1);
  }
}(this, function(expect, BrandLoversMarketplaceApiV1) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BrandLoversMarketplaceApiV1.OrderItem();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrderItem', function() {
    it('should create an instance of OrderItem', function() {
      // uncomment below and update the code to test OrderItem
      //var instance = new BrandLoversMarketplaceApiV1.OrderItem();
      //expect(instance).to.be.a(BrandLoversMarketplaceApiV1.OrderItem);
    });

    it('should have the property freight (base name: "freight")', function() {
      // uncomment below and update the code to test the property freight
      //var instance = new BrandLoversMarketplaceApiV1.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property giftWrap (base name: "giftWrap")', function() {
      // uncomment below and update the code to test the property giftWrap
      //var instance = new BrandLoversMarketplaceApiV1.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property id (base name: "id")', function() {
      // uncomment below and update the code to test the property id
      //var instance = new BrandLoversMarketplaceApiV1.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new BrandLoversMarketplaceApiV1.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property promotions (base name: "promotions")', function() {
      // uncomment below and update the code to test the property promotions
      //var instance = new BrandLoversMarketplaceApiV1.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property salePrice (base name: "salePrice")', function() {
      // uncomment below and update the code to test the property salePrice
      //var instance = new BrandLoversMarketplaceApiV1.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property sent (base name: "sent")', function() {
      // uncomment below and update the code to test the property sent
      //var instance = new BrandLoversMarketplaceApiV1.OrderItem();
      //expect(instance).to.be();
    });

    it('should have the property skuSellerId (base name: "skuSellerId")', function() {
      // uncomment below and update the code to test the property skuSellerId
      //var instance = new BrandLoversMarketplaceApiV1.OrderItem();
      //expect(instance).to.be();
    });

  });

}));
