/**
 * BrandLovers Marketplace API V1
 * Allows sellers to: 1) Load products definitions to the BrandLovers marktplace. 2) Receive and update orders status. 3) Receive and update shipping information. 4) Receive and update customer tickets. All requests consume and return application/json content. All request must be authenticated and use HTTPS.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BrandLoversMarketplaceApiV1);
  }
}(this, function(expect, BrandLoversMarketplaceApiV1) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BrandLoversMarketplaceApiV1.SellerItem();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SellerItem', function() {
    it('should create an instance of SellerItem', function() {
      // uncomment below and update the code to test SellerItem
      //var instance = new BrandLoversMarketplaceApiV1.SellerItem();
      //expect(instance).to.be.a(BrandLoversMarketplaceApiV1.SellerItem);
    });

    it('should have the property attributes (base name: "attributes")', function() {
      // uncomment below and update the code to test the property attributes
      //var instance = new BrandLoversMarketplaceApiV1.SellerItem();
      //expect(instance).to.be();
    });

    it('should have the property brand (base name: "brand")', function() {
      // uncomment below and update the code to test the property brand
      //var instance = new BrandLoversMarketplaceApiV1.SellerItem();
      //expect(instance).to.be();
    });

    it('should have the property dimensions (base name: "dimensions")', function() {
      // uncomment below and update the code to test the property dimensions
      //var instance = new BrandLoversMarketplaceApiV1.SellerItem();
      //expect(instance).to.be();
    });

    it('should have the property giftWrap (base name: "giftWrap")', function() {
      // uncomment below and update the code to test the property giftWrap
      //var instance = new BrandLoversMarketplaceApiV1.SellerItem();
      //expect(instance).to.be();
    });

    it('should have the property gtin (base name: "gtin")', function() {
      // uncomment below and update the code to test the property gtin
      //var instance = new BrandLoversMarketplaceApiV1.SellerItem();
      //expect(instance).to.be();
    });

    it('should have the property images (base name: "images")', function() {
      // uncomment below and update the code to test the property images
      //var instance = new BrandLoversMarketplaceApiV1.SellerItem();
      //expect(instance).to.be();
    });

    it('should have the property prices (base name: "prices")', function() {
      // uncomment below and update the code to test the property prices
      //var instance = new BrandLoversMarketplaceApiV1.SellerItem();
      //expect(instance).to.be();
    });

    it('should have the property product (base name: "product")', function() {
      // uncomment below and update the code to test the property product
      //var instance = new BrandLoversMarketplaceApiV1.SellerItem();
      //expect(instance).to.be();
    });

    it('should have the property skuSellerId (base name: "skuSellerId")', function() {
      // uncomment below and update the code to test the property skuSellerId
      //var instance = new BrandLoversMarketplaceApiV1.SellerItem();
      //expect(instance).to.be();
    });

    it('should have the property status (base name: "status")', function() {
      // uncomment below and update the code to test the property status
      //var instance = new BrandLoversMarketplaceApiV1.SellerItem();
      //expect(instance).to.be();
    });

    it('should have the property stocks (base name: "stocks")', function() {
      // uncomment below and update the code to test the property stocks
      //var instance = new BrandLoversMarketplaceApiV1.SellerItem();
      //expect(instance).to.be();
    });

    it('should have the property title (base name: "title")', function() {
      // uncomment below and update the code to test the property title
      //var instance = new BrandLoversMarketplaceApiV1.SellerItem();
      //expect(instance).to.be();
    });

    it('should have the property urls (base name: "urls")', function() {
      // uncomment below and update the code to test the property urls
      //var instance = new BrandLoversMarketplaceApiV1.SellerItem();
      //expect(instance).to.be();
    });

  });

}));
