/**
 * BrandLovers Marketplace API V1
 * Allows sellers to: 1) Load products definitions to the BrandLovers marktplace. 2) Receive and update orders status. 3) Receive and update shipping information. 4) Receive and update customer tickets. All requests consume and return application/json content. All request must be authenticated and use HTTPS.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BrandLoversMarketplaceApiV1);
  }
}(this, function(expect, BrandLoversMarketplaceApiV1) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BrandLoversMarketplaceApiV1.Freight();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Freight', function() {
    it('should create an instance of Freight', function() {
      // uncomment below and update the code to test Freight
      //var instance = new BrandLoversMarketplaceApiV1.Freight();
      //expect(instance).to.be.a(BrandLoversMarketplaceApiV1.Freight);
    });

    it('should have the property ETA (base name: "ETA")', function() {
      // uncomment below and update the code to test the property ETA
      //var instance = new BrandLoversMarketplaceApiV1.Freight();
      //expect(instance).to.be();
    });

    it('should have the property additionalInfo (base name: "additionalInfo")', function() {
      // uncomment below and update the code to test the property additionalInfo
      //var instance = new BrandLoversMarketplaceApiV1.Freight();
      //expect(instance).to.be();
    });

    it('should have the property chargedAmount (base name: "chargedAmount")', function() {
      // uncomment below and update the code to test the property chargedAmount
      //var instance = new BrandLoversMarketplaceApiV1.Freight();
      //expect(instance).to.be();
    });

    it('should have the property crossDockingTime (base name: "crossDockingTime")', function() {
      // uncomment below and update the code to test the property crossDockingTime
      //var instance = new BrandLoversMarketplaceApiV1.Freight();
      //expect(instance).to.be();
    });

    it('should have the property defaultAmount (base name: "defaultAmount")', function() {
      // uncomment below and update the code to test the property defaultAmount
      //var instance = new BrandLoversMarketplaceApiV1.Freight();
      //expect(instance).to.be();
    });

    it('should have the property scheduledPeriod (base name: "scheduledPeriod")', function() {
      // uncomment below and update the code to test the property scheduledPeriod
      //var instance = new BrandLoversMarketplaceApiV1.Freight();
      //expect(instance).to.be();
    });

    it('should have the property transitTime (base name: "transitTime")', function() {
      // uncomment below and update the code to test the property transitTime
      //var instance = new BrandLoversMarketplaceApiV1.Freight();
      //expect(instance).to.be();
    });

    it('should have the property type (base name: "type")', function() {
      // uncomment below and update the code to test the property type
      //var instance = new BrandLoversMarketplaceApiV1.Freight();
      //expect(instance).to.be();
    });

  });

}));
