/**
 * BrandLovers Marketplace API V1
 * Allows sellers to: 1) Load products definitions to the BrandLovers marktplace. 2) Receive and update orders status. 3) Receive and update shipping information. 4) Receive and update customer tickets. All requests consume and return application/json content. All request must be authenticated and use HTTPS.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BrandLoversMarketplaceApiV1);
  }
}(this, function(expect, BrandLoversMarketplaceApiV1) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BrandLoversMarketplaceApiV1.ProductsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ProductsApi', function() {
    describe('productSkuSellerIdPut', function() {
      it('should call productSkuSellerIdPut successfully', function(done) {
        //uncomment below and update the code to test productSkuSellerIdPut
        //instance.productSkuSellerIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productsGet', function() {
      it('should call productsGet successfully', function(done) {
        //uncomment below and update the code to test productsGet
        //instance.productsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productsPost', function() {
      it('should call productsPost successfully', function(done) {
        //uncomment below and update the code to test productsPost
        //instance.productsPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productsPricesPut', function() {
      it('should call productsPricesPut successfully', function(done) {
        //uncomment below and update the code to test productsPricesPut
        //instance.productsPricesPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productsStatusGet', function() {
      it('should call productsStatusGet successfully', function(done) {
        //uncomment below and update the code to test productsStatusGet
        //instance.productsStatusGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productsStatusPut', function() {
      it('should call productsStatusPut successfully', function(done) {
        //uncomment below and update the code to test productsStatusPut
        //instance.productsStatusPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productsStatusSellingGet', function() {
      it('should call productsStatusSellingGet successfully', function(done) {
        //uncomment below and update the code to test productsStatusSellingGet
        //instance.productsStatusSellingGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('productsStocksPut', function() {
      it('should call productsStocksPut successfully', function(done) {
        //uncomment below and update the code to test productsStocksPut
        //instance.productsStocksPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
