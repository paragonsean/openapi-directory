/**
 * BrandLovers Marketplace API V1
 * Allows sellers to: 1) Load products definitions to the BrandLovers marktplace. 2) Receive and update orders status. 3) Receive and update shipping information. 4) Receive and update customer tickets. All requests consume and return application/json content. All request must be authenticated and use HTTPS.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BrandLoversMarketplaceApiV1);
  }
}(this, function(expect, BrandLoversMarketplaceApiV1) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BrandLoversMarketplaceApiV1.OrdersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('OrdersApi', function() {
    describe('ordersGet', function() {
      it('should call ordersGet successfully', function(done) {
        //uncomment below and update the code to test ordersGet
        //instance.ordersGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersShipmentsDeliveredGet', function() {
      it('should call ordersShipmentsDeliveredGet successfully', function(done) {
        //uncomment below and update the code to test ordersShipmentsDeliveredGet
        //instance.ordersShipmentsDeliveredGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersShipmentsDeliveredPost', function() {
      it('should call ordersShipmentsDeliveredPost successfully', function(done) {
        //uncomment below and update the code to test ordersShipmentsDeliveredPost
        //instance.ordersShipmentsDeliveredPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersShipmentsShippedGet', function() {
      it('should call ordersShipmentsShippedGet successfully', function(done) {
        //uncomment below and update the code to test ordersShipmentsShippedGet
        //instance.ordersShipmentsShippedGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersShipmentsShippedPost', function() {
      it('should call ordersShipmentsShippedPost successfully', function(done) {
        //uncomment below and update the code to test ordersShipmentsShippedPost
        //instance.ordersShipmentsShippedPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersStatusApprovedGet', function() {
      it('should call ordersStatusApprovedGet successfully', function(done) {
        //uncomment below and update the code to test ordersStatusApprovedGet
        //instance.ordersStatusApprovedGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersStatusCanceledGet', function() {
      it('should call ordersStatusCanceledGet successfully', function(done) {
        //uncomment below and update the code to test ordersStatusCanceledGet
        //instance.ordersStatusCanceledGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersStatusDeliveredGet', function() {
      it('should call ordersStatusDeliveredGet successfully', function(done) {
        //uncomment below and update the code to test ordersStatusDeliveredGet
        //instance.ordersStatusDeliveredGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersStatusNewGet', function() {
      it('should call ordersStatusNewGet successfully', function(done) {
        //uncomment below and update the code to test ordersStatusNewGet
        //instance.ordersStatusNewGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersStatusPartiallyDeliveredGet', function() {
      it('should call ordersStatusPartiallyDeliveredGet successfully', function(done) {
        //uncomment below and update the code to test ordersStatusPartiallyDeliveredGet
        //instance.ordersStatusPartiallyDeliveredGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersStatusPartiallySentGet', function() {
      it('should call ordersStatusPartiallySentGet successfully', function(done) {
        //uncomment below and update the code to test ordersStatusPartiallySentGet
        //instance.ordersStatusPartiallySentGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('ordersStatusSentGet', function() {
      it('should call ordersStatusSentGet successfully', function(done) {
        //uncomment below and update the code to test ordersStatusSentGet
        //instance.ordersStatusSentGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
