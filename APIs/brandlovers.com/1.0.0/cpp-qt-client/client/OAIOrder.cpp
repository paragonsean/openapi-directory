/**
 * BrandLovers Marketplace API V1
 * Allows sellers to: 1) Load products definitions to the BrandLovers marktplace. 2) Receive and update orders status. 3) Receive and update shipping information. 4) Receive and update customer tickets. All requests consume and return application/json content. All request must be authenticated and use HTTPS.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrder.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrder::OAIOrder(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrder::OAIOrder() {
    this->initializeModel();
}

OAIOrder::~OAIOrder() {}

void OAIOrder::initializeModel() {

    m_approved_at_isSet = false;
    m_approved_at_isValid = false;

    m_billing_address_isSet = false;
    m_billing_address_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_customer_isSet = false;
    m_customer_isValid = false;

    m_freight_isSet = false;
    m_freight_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_order_marketplace_id_isSet = false;
    m_order_marketplace_id_isValid = false;

    m_seller_isSet = false;
    m_seller_isValid = false;

    m_shipments_isSet = false;
    m_shipments_isValid = false;

    m_shipping_address_isSet = false;
    m_shipping_address_isValid = false;

    m_status_isSet = false;
    m_status_isValid = false;

    m_total_amount_isSet = false;
    m_total_amount_isValid = false;

    m_total_discount_amount_isSet = false;
    m_total_discount_amount_isValid = false;

    m_total_items_amount_isSet = false;
    m_total_items_amount_isValid = false;

    m_total_shipping_amount_isSet = false;
    m_total_shipping_amount_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;
}

void OAIOrder::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrder::fromJsonObject(QJsonObject json) {

    m_approved_at_isValid = ::OpenAPI::fromJsonValue(m_approved_at, json[QString("approvedAt")]);
    m_approved_at_isSet = !json[QString("approvedAt")].isNull() && m_approved_at_isValid;

    m_billing_address_isValid = ::OpenAPI::fromJsonValue(m_billing_address, json[QString("billingAddress")]);
    m_billing_address_isSet = !json[QString("billingAddress")].isNull() && m_billing_address_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("createdAt")]);
    m_created_at_isSet = !json[QString("createdAt")].isNull() && m_created_at_isValid;

    m_customer_isValid = ::OpenAPI::fromJsonValue(m_customer, json[QString("customer")]);
    m_customer_isSet = !json[QString("customer")].isNull() && m_customer_isValid;

    m_freight_isValid = ::OpenAPI::fromJsonValue(m_freight, json[QString("freight")]);
    m_freight_isSet = !json[QString("freight")].isNull() && m_freight_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("items")]);
    m_items_isSet = !json[QString("items")].isNull() && m_items_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("orderId")]);
    m_order_id_isSet = !json[QString("orderId")].isNull() && m_order_id_isValid;

    m_order_marketplace_id_isValid = ::OpenAPI::fromJsonValue(m_order_marketplace_id, json[QString("orderMarketplaceId")]);
    m_order_marketplace_id_isSet = !json[QString("orderMarketplaceId")].isNull() && m_order_marketplace_id_isValid;

    m_seller_isValid = ::OpenAPI::fromJsonValue(m_seller, json[QString("seller")]);
    m_seller_isSet = !json[QString("seller")].isNull() && m_seller_isValid;

    m_shipments_isValid = ::OpenAPI::fromJsonValue(m_shipments, json[QString("shipments")]);
    m_shipments_isSet = !json[QString("shipments")].isNull() && m_shipments_isValid;

    m_shipping_address_isValid = ::OpenAPI::fromJsonValue(m_shipping_address, json[QString("shippingAddress")]);
    m_shipping_address_isSet = !json[QString("shippingAddress")].isNull() && m_shipping_address_isValid;

    m_status_isValid = ::OpenAPI::fromJsonValue(m_status, json[QString("status")]);
    m_status_isSet = !json[QString("status")].isNull() && m_status_isValid;

    m_total_amount_isValid = ::OpenAPI::fromJsonValue(m_total_amount, json[QString("totalAmount")]);
    m_total_amount_isSet = !json[QString("totalAmount")].isNull() && m_total_amount_isValid;

    m_total_discount_amount_isValid = ::OpenAPI::fromJsonValue(m_total_discount_amount, json[QString("totalDiscountAmount")]);
    m_total_discount_amount_isSet = !json[QString("totalDiscountAmount")].isNull() && m_total_discount_amount_isValid;

    m_total_items_amount_isValid = ::OpenAPI::fromJsonValue(m_total_items_amount, json[QString("totalItemsAmount")]);
    m_total_items_amount_isSet = !json[QString("totalItemsAmount")].isNull() && m_total_items_amount_isValid;

    m_total_shipping_amount_isValid = ::OpenAPI::fromJsonValue(m_total_shipping_amount, json[QString("totalShippingAmount")]);
    m_total_shipping_amount_isSet = !json[QString("totalShippingAmount")].isNull() && m_total_shipping_amount_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updatedAt")]);
    m_updated_at_isSet = !json[QString("updatedAt")].isNull() && m_updated_at_isValid;
}

QString OAIOrder::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrder::asJsonObject() const {
    QJsonObject obj;
    if (m_approved_at_isSet) {
        obj.insert(QString("approvedAt"), ::OpenAPI::toJsonValue(m_approved_at));
    }
    if (m_billing_address.isSet()) {
        obj.insert(QString("billingAddress"), ::OpenAPI::toJsonValue(m_billing_address));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("createdAt"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_customer.isSet()) {
        obj.insert(QString("customer"), ::OpenAPI::toJsonValue(m_customer));
    }
    if (m_freight.isSet()) {
        obj.insert(QString("freight"), ::OpenAPI::toJsonValue(m_freight));
    }
    if (m_items.size() > 0) {
        obj.insert(QString("items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("orderId"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_order_marketplace_id_isSet) {
        obj.insert(QString("orderMarketplaceId"), ::OpenAPI::toJsonValue(m_order_marketplace_id));
    }
    if (m_seller.isSet()) {
        obj.insert(QString("seller"), ::OpenAPI::toJsonValue(m_seller));
    }
    if (m_shipments.size() > 0) {
        obj.insert(QString("shipments"), ::OpenAPI::toJsonValue(m_shipments));
    }
    if (m_shipping_address.isSet()) {
        obj.insert(QString("shippingAddress"), ::OpenAPI::toJsonValue(m_shipping_address));
    }
    if (m_status_isSet) {
        obj.insert(QString("status"), ::OpenAPI::toJsonValue(m_status));
    }
    if (m_total_amount_isSet) {
        obj.insert(QString("totalAmount"), ::OpenAPI::toJsonValue(m_total_amount));
    }
    if (m_total_discount_amount_isSet) {
        obj.insert(QString("totalDiscountAmount"), ::OpenAPI::toJsonValue(m_total_discount_amount));
    }
    if (m_total_items_amount_isSet) {
        obj.insert(QString("totalItemsAmount"), ::OpenAPI::toJsonValue(m_total_items_amount));
    }
    if (m_total_shipping_amount_isSet) {
        obj.insert(QString("totalShippingAmount"), ::OpenAPI::toJsonValue(m_total_shipping_amount));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updatedAt"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    return obj;
}

QDateTime OAIOrder::getApprovedAt() const {
    return m_approved_at;
}
void OAIOrder::setApprovedAt(const QDateTime &approved_at) {
    m_approved_at = approved_at;
    m_approved_at_isSet = true;
}

bool OAIOrder::is_approved_at_Set() const{
    return m_approved_at_isSet;
}

bool OAIOrder::is_approved_at_Valid() const{
    return m_approved_at_isValid;
}

OAIAddress OAIOrder::getBillingAddress() const {
    return m_billing_address;
}
void OAIOrder::setBillingAddress(const OAIAddress &billing_address) {
    m_billing_address = billing_address;
    m_billing_address_isSet = true;
}

bool OAIOrder::is_billing_address_Set() const{
    return m_billing_address_isSet;
}

bool OAIOrder::is_billing_address_Valid() const{
    return m_billing_address_isValid;
}

QDateTime OAIOrder::getCreatedAt() const {
    return m_created_at;
}
void OAIOrder::setCreatedAt(const QDateTime &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAIOrder::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAIOrder::is_created_at_Valid() const{
    return m_created_at_isValid;
}

OAICustomer OAIOrder::getCustomer() const {
    return m_customer;
}
void OAIOrder::setCustomer(const OAICustomer &customer) {
    m_customer = customer;
    m_customer_isSet = true;
}

bool OAIOrder::is_customer_Set() const{
    return m_customer_isSet;
}

bool OAIOrder::is_customer_Valid() const{
    return m_customer_isValid;
}

OAIFreight OAIOrder::getFreight() const {
    return m_freight;
}
void OAIOrder::setFreight(const OAIFreight &freight) {
    m_freight = freight;
    m_freight_isSet = true;
}

bool OAIOrder::is_freight_Set() const{
    return m_freight_isSet;
}

bool OAIOrder::is_freight_Valid() const{
    return m_freight_isValid;
}

QList<OAIOrderItem> OAIOrder::getItems() const {
    return m_items;
}
void OAIOrder::setItems(const QList<OAIOrderItem> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIOrder::is_items_Set() const{
    return m_items_isSet;
}

bool OAIOrder::is_items_Valid() const{
    return m_items_isValid;
}

QString OAIOrder::getOrderId() const {
    return m_order_id;
}
void OAIOrder::setOrderId(const QString &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAIOrder::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAIOrder::is_order_id_Valid() const{
    return m_order_id_isValid;
}

QString OAIOrder::getOrderMarketplaceId() const {
    return m_order_marketplace_id;
}
void OAIOrder::setOrderMarketplaceId(const QString &order_marketplace_id) {
    m_order_marketplace_id = order_marketplace_id;
    m_order_marketplace_id_isSet = true;
}

bool OAIOrder::is_order_marketplace_id_Set() const{
    return m_order_marketplace_id_isSet;
}

bool OAIOrder::is_order_marketplace_id_Valid() const{
    return m_order_marketplace_id_isValid;
}

OAISeller OAIOrder::getSeller() const {
    return m_seller;
}
void OAIOrder::setSeller(const OAISeller &seller) {
    m_seller = seller;
    m_seller_isSet = true;
}

bool OAIOrder::is_seller_Set() const{
    return m_seller_isSet;
}

bool OAIOrder::is_seller_Valid() const{
    return m_seller_isValid;
}

QList<OAIShippment> OAIOrder::getShipments() const {
    return m_shipments;
}
void OAIOrder::setShipments(const QList<OAIShippment> &shipments) {
    m_shipments = shipments;
    m_shipments_isSet = true;
}

bool OAIOrder::is_shipments_Set() const{
    return m_shipments_isSet;
}

bool OAIOrder::is_shipments_Valid() const{
    return m_shipments_isValid;
}

OAIAddress OAIOrder::getShippingAddress() const {
    return m_shipping_address;
}
void OAIOrder::setShippingAddress(const OAIAddress &shipping_address) {
    m_shipping_address = shipping_address;
    m_shipping_address_isSet = true;
}

bool OAIOrder::is_shipping_address_Set() const{
    return m_shipping_address_isSet;
}

bool OAIOrder::is_shipping_address_Valid() const{
    return m_shipping_address_isValid;
}

QString OAIOrder::getStatus() const {
    return m_status;
}
void OAIOrder::setStatus(const QString &status) {
    m_status = status;
    m_status_isSet = true;
}

bool OAIOrder::is_status_Set() const{
    return m_status_isSet;
}

bool OAIOrder::is_status_Valid() const{
    return m_status_isValid;
}

qint32 OAIOrder::getTotalAmount() const {
    return m_total_amount;
}
void OAIOrder::setTotalAmount(const qint32 &total_amount) {
    m_total_amount = total_amount;
    m_total_amount_isSet = true;
}

bool OAIOrder::is_total_amount_Set() const{
    return m_total_amount_isSet;
}

bool OAIOrder::is_total_amount_Valid() const{
    return m_total_amount_isValid;
}

qint32 OAIOrder::getTotalDiscountAmount() const {
    return m_total_discount_amount;
}
void OAIOrder::setTotalDiscountAmount(const qint32 &total_discount_amount) {
    m_total_discount_amount = total_discount_amount;
    m_total_discount_amount_isSet = true;
}

bool OAIOrder::is_total_discount_amount_Set() const{
    return m_total_discount_amount_isSet;
}

bool OAIOrder::is_total_discount_amount_Valid() const{
    return m_total_discount_amount_isValid;
}

qint32 OAIOrder::getTotalItemsAmount() const {
    return m_total_items_amount;
}
void OAIOrder::setTotalItemsAmount(const qint32 &total_items_amount) {
    m_total_items_amount = total_items_amount;
    m_total_items_amount_isSet = true;
}

bool OAIOrder::is_total_items_amount_Set() const{
    return m_total_items_amount_isSet;
}

bool OAIOrder::is_total_items_amount_Valid() const{
    return m_total_items_amount_isValid;
}

qint32 OAIOrder::getTotalShippingAmount() const {
    return m_total_shipping_amount;
}
void OAIOrder::setTotalShippingAmount(const qint32 &total_shipping_amount) {
    m_total_shipping_amount = total_shipping_amount;
    m_total_shipping_amount_isSet = true;
}

bool OAIOrder::is_total_shipping_amount_Set() const{
    return m_total_shipping_amount_isSet;
}

bool OAIOrder::is_total_shipping_amount_Valid() const{
    return m_total_shipping_amount_isValid;
}

QDateTime OAIOrder::getUpdatedAt() const {
    return m_updated_at;
}
void OAIOrder::setUpdatedAt(const QDateTime &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAIOrder::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAIOrder::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

bool OAIOrder::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_approved_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_billing_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_freight.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_marketplace_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_seller.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_address.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_status_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_discount_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_items_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_shipping_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrder::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_billing_address_isValid && m_created_at_isValid && m_customer_isValid && m_freight_isValid && m_items_isValid && m_order_id_isValid && m_order_marketplace_id_isValid && m_shipments_isValid && m_shipping_address_isValid && m_status_isValid && m_total_amount_isValid && m_total_discount_amount_isValid && m_total_items_amount_isValid && m_total_shipping_amount_isValid && m_updated_at_isValid && true;
}

} // namespace OpenAPI
