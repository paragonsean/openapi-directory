/**
 * BrandLovers Marketplace API V1
 * Allows sellers to: 1) Load products definitions to the BrandLovers marktplace. 2) Receive and update orders status. 3) Receive and update shipping information. 4) Receive and update customer tickets. All requests consume and return application/json content. All request must be authenticated and use HTTPS.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIOrdersShipments.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIOrdersShipments::OAIOrdersShipments(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIOrdersShipments::OAIOrdersShipments() {
    this->initializeModel();
}

OAIOrdersShipments::~OAIOrdersShipments() {}

void OAIOrdersShipments::initializeModel() {

    m_shipments_isSet = false;
    m_shipments_isValid = false;
}

void OAIOrdersShipments::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIOrdersShipments::fromJsonObject(QJsonObject json) {

    m_shipments_isValid = ::OpenAPI::fromJsonValue(m_shipments, json[QString("shipments")]);
    m_shipments_isSet = !json[QString("shipments")].isNull() && m_shipments_isValid;
}

QString OAIOrdersShipments::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIOrdersShipments::asJsonObject() const {
    QJsonObject obj;
    if (m_shipments.size() > 0) {
        obj.insert(QString("shipments"), ::OpenAPI::toJsonValue(m_shipments));
    }
    return obj;
}

QList<OAIOrderShippment> OAIOrdersShipments::getShipments() const {
    return m_shipments;
}
void OAIOrdersShipments::setShipments(const QList<OAIOrderShippment> &shipments) {
    m_shipments = shipments;
    m_shipments_isSet = true;
}

bool OAIOrdersShipments::is_shipments_Set() const{
    return m_shipments_isSet;
}

bool OAIOrdersShipments::is_shipments_Valid() const{
    return m_shipments_isValid;
}

bool OAIOrdersShipments::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_shipments.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIOrdersShipments::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
