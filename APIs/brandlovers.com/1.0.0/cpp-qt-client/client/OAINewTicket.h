/**
 * BrandLovers Marketplace API V1
 * Allows sellers to: 1) Load products definitions to the BrandLovers marktplace. 2) Receive and update orders status. 3) Receive and update shipping information. 4) Receive and update customer tickets. All requests consume and return application/json content. All request must be authenticated and use HTTPS.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINewTicket.h
 *
 * 
 */

#ifndef OAINewTicket_H
#define OAINewTicket_H

#include <QJsonObject>

#include "OAICustomerReference.h"
#include "OAINewTicketMessage.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICustomerReference;
class OAINewTicketMessage;

class OAINewTicket : public OAIObject {
public:
    OAINewTicket();
    OAINewTicket(QString json);
    ~OAINewTicket() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBody() const;
    void setBody(const QString &body);
    bool is_body_Set() const;
    bool is_body_Valid() const;

    OAICustomerReference getCustomer() const;
    void setCustomer(const OAICustomerReference &customer);
    bool is_customer_Set() const;
    bool is_customer_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QString getFrom() const;
    void setFrom(const QString &from);
    bool is_from_Set() const;
    bool is_from_Valid() const;

    OAINewTicketMessage getMessage() const;
    void setMessage(const OAINewTicketMessage &message);
    bool is_message_Set() const;
    bool is_message_Valid() const;

    QString getOrderId() const;
    void setOrderId(const QString &order_id);
    bool is_order_id_Set() const;
    bool is_order_id_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_body;
    bool m_body_isSet;
    bool m_body_isValid;

    OAICustomerReference m_customer;
    bool m_customer_isSet;
    bool m_customer_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QString m_from;
    bool m_from_isSet;
    bool m_from_isValid;

    OAINewTicketMessage m_message;
    bool m_message_isSet;
    bool m_message_isValid;

    QString m_order_id;
    bool m_order_id_isSet;
    bool m_order_id_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINewTicket)

#endif // OAINewTicket_H
