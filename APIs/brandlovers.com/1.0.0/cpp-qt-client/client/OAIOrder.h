/**
 * BrandLovers Marketplace API V1
 * Allows sellers to: 1) Load products definitions to the BrandLovers marktplace. 2) Receive and update orders status. 3) Receive and update shipping information. 4) Receive and update customer tickets. All requests consume and return application/json content. All request must be authenticated and use HTTPS.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIOrder.h
 *
 * 
 */

#ifndef OAIOrder_H
#define OAIOrder_H

#include <QJsonObject>

#include "OAIAddress.h"
#include "OAICustomer.h"
#include "OAIFreight.h"
#include "OAIOrderItem.h"
#include "OAISeller.h"
#include "OAIShippment.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIAddress;
class OAICustomer;
class OAIFreight;
class OAIOrderItem;
class OAISeller;
class OAIShippment;

class OAIOrder : public OAIObject {
public:
    OAIOrder();
    OAIOrder(QString json);
    ~OAIOrder() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDateTime getApprovedAt() const;
    void setApprovedAt(const QDateTime &approved_at);
    bool is_approved_at_Set() const;
    bool is_approved_at_Valid() const;

    OAIAddress getBillingAddress() const;
    void setBillingAddress(const OAIAddress &billing_address);
    bool is_billing_address_Set() const;
    bool is_billing_address_Valid() const;

    QDateTime getCreatedAt() const;
    void setCreatedAt(const QDateTime &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAICustomer getCustomer() const;
    void setCustomer(const OAICustomer &customer);
    bool is_customer_Set() const;
    bool is_customer_Valid() const;

    OAIFreight getFreight() const;
    void setFreight(const OAIFreight &freight);
    bool is_freight_Set() const;
    bool is_freight_Valid() const;

    QList<OAIOrderItem> getItems() const;
    void setItems(const QList<OAIOrderItem> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    QString getOrderId() const;
    void setOrderId(const QString &order_id);
    bool is_order_id_Set() const;
    bool is_order_id_Valid() const;

    QString getOrderMarketplaceId() const;
    void setOrderMarketplaceId(const QString &order_marketplace_id);
    bool is_order_marketplace_id_Set() const;
    bool is_order_marketplace_id_Valid() const;

    OAISeller getSeller() const;
    void setSeller(const OAISeller &seller);
    bool is_seller_Set() const;
    bool is_seller_Valid() const;

    QList<OAIShippment> getShipments() const;
    void setShipments(const QList<OAIShippment> &shipments);
    bool is_shipments_Set() const;
    bool is_shipments_Valid() const;

    OAIAddress getShippingAddress() const;
    void setShippingAddress(const OAIAddress &shipping_address);
    bool is_shipping_address_Set() const;
    bool is_shipping_address_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getTotalAmount() const;
    void setTotalAmount(const qint32 &total_amount);
    bool is_total_amount_Set() const;
    bool is_total_amount_Valid() const;

    qint32 getTotalDiscountAmount() const;
    void setTotalDiscountAmount(const qint32 &total_discount_amount);
    bool is_total_discount_amount_Set() const;
    bool is_total_discount_amount_Valid() const;

    qint32 getTotalItemsAmount() const;
    void setTotalItemsAmount(const qint32 &total_items_amount);
    bool is_total_items_amount_Set() const;
    bool is_total_items_amount_Valid() const;

    qint32 getTotalShippingAmount() const;
    void setTotalShippingAmount(const qint32 &total_shipping_amount);
    bool is_total_shipping_amount_Set() const;
    bool is_total_shipping_amount_Valid() const;

    QDateTime getUpdatedAt() const;
    void setUpdatedAt(const QDateTime &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDateTime m_approved_at;
    bool m_approved_at_isSet;
    bool m_approved_at_isValid;

    OAIAddress m_billing_address;
    bool m_billing_address_isSet;
    bool m_billing_address_isValid;

    QDateTime m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAICustomer m_customer;
    bool m_customer_isSet;
    bool m_customer_isValid;

    OAIFreight m_freight;
    bool m_freight_isSet;
    bool m_freight_isValid;

    QList<OAIOrderItem> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    QString m_order_id;
    bool m_order_id_isSet;
    bool m_order_id_isValid;

    QString m_order_marketplace_id;
    bool m_order_marketplace_id_isSet;
    bool m_order_marketplace_id_isValid;

    OAISeller m_seller;
    bool m_seller_isSet;
    bool m_seller_isValid;

    QList<OAIShippment> m_shipments;
    bool m_shipments_isSet;
    bool m_shipments_isValid;

    OAIAddress m_shipping_address;
    bool m_shipping_address_isSet;
    bool m_shipping_address_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_total_amount;
    bool m_total_amount_isSet;
    bool m_total_amount_isValid;

    qint32 m_total_discount_amount;
    bool m_total_discount_amount_isSet;
    bool m_total_discount_amount_isValid;

    qint32 m_total_items_amount;
    bool m_total_items_amount_isSet;
    bool m_total_items_amount_isValid;

    qint32 m_total_shipping_amount;
    bool m_total_shipping_amount_isSet;
    bool m_total_shipping_amount_isValid;

    QDateTime m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIOrder)

#endif // OAIOrder_H
