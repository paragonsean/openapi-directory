/**
 * BrandLovers Marketplace API V1
 * Allows sellers to: 1) Load products definitions to the BrandLovers marktplace. 2) Receive and update orders status. 3) Receive and update shipping information. 4) Receive and update customer tickets. All requests consume and return application/json content. All request must be authenticated and use HTTPS.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITicketStatus.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITicketStatus::OAITicketStatus(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITicketStatus::OAITicketStatus() {
    this->initializeModel();
}

OAITicketStatus::~OAITicketStatus() {}

void OAITicketStatus::initializeModel() {

    m_ticket_status_isSet = false;
    m_ticket_status_isValid = false;
}

void OAITicketStatus::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITicketStatus::fromJsonObject(QJsonObject json) {

    m_ticket_status_isValid = ::OpenAPI::fromJsonValue(m_ticket_status, json[QString("ticketStatus")]);
    m_ticket_status_isSet = !json[QString("ticketStatus")].isNull() && m_ticket_status_isValid;
}

QString OAITicketStatus::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITicketStatus::asJsonObject() const {
    QJsonObject obj;
    if (m_ticket_status_isSet) {
        obj.insert(QString("ticketStatus"), ::OpenAPI::toJsonValue(m_ticket_status));
    }
    return obj;
}

QString OAITicketStatus::getTicketStatus() const {
    return m_ticket_status;
}
void OAITicketStatus::setTicketStatus(const QString &ticket_status) {
    m_ticket_status = ticket_status;
    m_ticket_status_isSet = true;
}

bool OAITicketStatus::is_ticket_status_Set() const{
    return m_ticket_status_isSet;
}

bool OAITicketStatus::is_ticket_status_Valid() const{
    return m_ticket_status_isValid;
}

bool OAITicketStatus::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_ticket_status_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITicketStatus::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_ticket_status_isValid && true;
}

} // namespace OpenAPI
