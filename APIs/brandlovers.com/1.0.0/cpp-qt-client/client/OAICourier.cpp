/**
 * BrandLovers Marketplace API V1
 * Allows sellers to: 1) Load products definitions to the BrandLovers marktplace. 2) Receive and update orders status. 3) Receive and update shipping information. 4) Receive and update customer tickets. All requests consume and return application/json content. All request must be authenticated and use HTTPS.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICourier.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICourier::OAICourier(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICourier::OAICourier() {
    this->initializeModel();
}

OAICourier::~OAICourier() {}

void OAICourier::initializeModel() {

    m_name_isSet = false;
    m_name_isValid = false;

    m_tax_id_isSet = false;
    m_tax_id_isValid = false;
}

void OAICourier::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICourier::fromJsonObject(QJsonObject json) {

    m_name_isValid = ::OpenAPI::fromJsonValue(m_name, json[QString("name")]);
    m_name_isSet = !json[QString("name")].isNull() && m_name_isValid;

    m_tax_id_isValid = ::OpenAPI::fromJsonValue(m_tax_id, json[QString("taxID")]);
    m_tax_id_isSet = !json[QString("taxID")].isNull() && m_tax_id_isValid;
}

QString OAICourier::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICourier::asJsonObject() const {
    QJsonObject obj;
    if (m_name_isSet) {
        obj.insert(QString("name"), ::OpenAPI::toJsonValue(m_name));
    }
    if (m_tax_id_isSet) {
        obj.insert(QString("taxID"), ::OpenAPI::toJsonValue(m_tax_id));
    }
    return obj;
}

QString OAICourier::getName() const {
    return m_name;
}
void OAICourier::setName(const QString &name) {
    m_name = name;
    m_name_isSet = true;
}

bool OAICourier::is_name_Set() const{
    return m_name_isSet;
}

bool OAICourier::is_name_Valid() const{
    return m_name_isValid;
}

QString OAICourier::getTaxId() const {
    return m_tax_id;
}
void OAICourier::setTaxId(const QString &tax_id) {
    m_tax_id = tax_id;
    m_tax_id_isSet = true;
}

bool OAICourier::is_tax_id_Set() const{
    return m_tax_id_isSet;
}

bool OAICourier::is_tax_id_Valid() const{
    return m_tax_id_isValid;
}

bool OAICourier::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICourier::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_name_isValid && true;
}

} // namespace OpenAPI
