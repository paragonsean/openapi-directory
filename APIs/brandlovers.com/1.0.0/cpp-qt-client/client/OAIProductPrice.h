/**
 * BrandLovers Marketplace API V1
 * Allows sellers to: 1) Load products definitions to the BrandLovers marktplace. 2) Receive and update orders status. 3) Receive and update shipping information. 4) Receive and update customer tickets. All requests consume and return application/json content. All request must be authenticated and use HTTPS.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProductPrice.h
 *
 * 
 */

#ifndef OAIProductPrice_H
#define OAIProductPrice_H

#include <QJsonObject>


#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIProductPrice : public OAIObject {
public:
    OAIProductPrice();
    OAIProductPrice(QString json);
    ~OAIProductPrice() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getRDefault() const;
    void setRDefault(const qint32 &r_default);
    bool is_r_default_Set() const;
    bool is_r_default_Valid() const;

    qint32 getOffer() const;
    void setOffer(const qint32 &offer);
    bool is_offer_Set() const;
    bool is_offer_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_r_default;
    bool m_r_default_isSet;
    bool m_r_default_isValid;

    qint32 m_offer;
    bool m_offer_isSet;
    bool m_offer_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProductPrice)

#endif // OAIProductPrice_H
