/**
 * BrandLovers Marketplace API V1
 * Allows sellers to: 1) Load products definitions to the BrandLovers marktplace. 2) Receive and update orders status. 3) Receive and update shipping information. 4) Receive and update customer tickets. All requests consume and return application/json content. All request must be authenticated and use HTTPS.
 *
 * The version of the OpenAPI document: 1.0.0
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINewTrackingRefund.h
 *
 * 
 */

#ifndef OAINewTrackingRefund_H
#define OAINewTrackingRefund_H

#include <QJsonObject>

#include "OAICourier.h"
#include "OAIOrderItemReference.h"
#include <QDateTime>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICourier;
class OAIOrderItemReference;

class OAINewTrackingRefund : public OAIObject {
public:
    OAINewTrackingRefund();
    OAINewTrackingRefund(QString json);
    ~OAINewTrackingRefund() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICourier getCourier() const;
    void setCourier(const OAICourier &courier);
    bool is_courier_Set() const;
    bool is_courier_Valid() const;

    QString getCte() const;
    void setCte(const QString &cte);
    bool is_cte_Set() const;
    bool is_cte_Valid() const;

    QString getInfo() const;
    void setInfo(const QString &info);
    bool is_info_Set() const;
    bool is_info_Valid() const;

    QList<OAIOrderItemReference> getItems() const;
    void setItems(const QList<OAIOrderItemReference> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    QString getNumber() const;
    void setNumber(const QString &number);
    bool is_number_Set() const;
    bool is_number_Valid() const;

    QDateTime getOccurredAt() const;
    void setOccurredAt(const QDateTime &occurred_at);
    bool is_occurred_at_Set() const;
    bool is_occurred_at_Valid() const;

    QString getSellerShipmentId() const;
    void setSellerShipmentId(const QString &seller_shipment_id);
    bool is_seller_shipment_id_Set() const;
    bool is_seller_shipment_id_Valid() const;

    QString getTranckingUrl() const;
    void setTranckingUrl(const QString &trancking_url);
    bool is_trancking_url_Set() const;
    bool is_trancking_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICourier m_courier;
    bool m_courier_isSet;
    bool m_courier_isValid;

    QString m_cte;
    bool m_cte_isSet;
    bool m_cte_isValid;

    QString m_info;
    bool m_info_isSet;
    bool m_info_isValid;

    QList<OAIOrderItemReference> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    QString m_number;
    bool m_number_isSet;
    bool m_number_isValid;

    QDateTime m_occurred_at;
    bool m_occurred_at_isSet;
    bool m_occurred_at_isValid;

    QString m_seller_shipment_id;
    bool m_seller_shipment_id_isSet;
    bool m_seller_shipment_id_isValid;

    QString m_trancking_url;
    bool m_trancking_url_isSet;
    bool m_trancking_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINewTrackingRefund)

#endif // OAINewTrackingRefund_H
