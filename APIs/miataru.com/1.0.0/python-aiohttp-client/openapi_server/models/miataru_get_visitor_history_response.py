# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.miataru_get_visitor_history_response_miataru_server_config import MiataruGetVisitorHistoryResponseMiataruServerConfig
from openapi_server.models.miataru_visitors import MiataruVisitors
from openapi_server import util


class MiataruGetVisitorHistoryResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, miataru_server_config: MiataruGetVisitorHistoryResponseMiataruServerConfig=None, miataru_visitors: List[MiataruVisitors]=None):
        """MiataruGetVisitorHistoryResponse - a model defined in OpenAPI

        :param miataru_server_config: The miataru_server_config of this MiataruGetVisitorHistoryResponse.
        :param miataru_visitors: The miataru_visitors of this MiataruGetVisitorHistoryResponse.
        """
        self.openapi_types = {
            'miataru_server_config': MiataruGetVisitorHistoryResponseMiataruServerConfig,
            'miataru_visitors': List[MiataruVisitors]
        }

        self.attribute_map = {
            'miataru_server_config': 'MiataruServerConfig',
            'miataru_visitors': 'MiataruVisitors'
        }

        self._miataru_server_config = miataru_server_config
        self._miataru_visitors = miataru_visitors

    @classmethod
    def from_dict(cls, dikt: dict) -> 'MiataruGetVisitorHistoryResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The MiataruGetVisitorHistoryResponse of this MiataruGetVisitorHistoryResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def miataru_server_config(self):
        """Gets the miataru_server_config of this MiataruGetVisitorHistoryResponse.


        :return: The miataru_server_config of this MiataruGetVisitorHistoryResponse.
        :rtype: MiataruGetVisitorHistoryResponseMiataruServerConfig
        """
        return self._miataru_server_config

    @miataru_server_config.setter
    def miataru_server_config(self, miataru_server_config):
        """Sets the miataru_server_config of this MiataruGetVisitorHistoryResponse.


        :param miataru_server_config: The miataru_server_config of this MiataruGetVisitorHistoryResponse.
        :type miataru_server_config: MiataruGetVisitorHistoryResponseMiataruServerConfig
        """
        if miataru_server_config is None:
            raise ValueError("Invalid value for `miataru_server_config`, must not be `None`")

        self._miataru_server_config = miataru_server_config

    @property
    def miataru_visitors(self):
        """Gets the miataru_visitors of this MiataruGetVisitorHistoryResponse.

        The server will answer back with an Array of MiataruVisitors if there are Visitors, or an empty array when there are none.

        :return: The miataru_visitors of this MiataruGetVisitorHistoryResponse.
        :rtype: List[MiataruVisitors]
        """
        return self._miataru_visitors

    @miataru_visitors.setter
    def miataru_visitors(self, miataru_visitors):
        """Sets the miataru_visitors of this MiataruGetVisitorHistoryResponse.

        The server will answer back with an Array of MiataruVisitors if there are Visitors, or an empty array when there are none.

        :param miataru_visitors: The miataru_visitors of this MiataruGetVisitorHistoryResponse.
        :type miataru_visitors: List[MiataruVisitors]
        """
        if miataru_visitors is None:
            raise ValueError("Invalid value for `miataru_visitors`, must not be `None`")

        self._miataru_visitors = miataru_visitors
