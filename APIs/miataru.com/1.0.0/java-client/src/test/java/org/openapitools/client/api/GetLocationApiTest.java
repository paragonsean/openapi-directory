/*
 * Miataru
 * The Miataru API is very simple and straight forward. Generally you're posting (HTTP POST) a JSON formatted request to a service method locations and you get back a JSON formatted answer. Please take into consideration that this has the request-for-comment status and that it can change while there's work done on client and server applications. Versioning therefore is done by prepending the version number - /v1/ for version 1 - to the method call.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@miataru.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.MiataruGetLocationGeoJSONResponse;
import org.openapitools.client.model.MiataruGetLocationHistoryRequest;
import org.openapitools.client.model.MiataruGetLocationHistoryResponse;
import org.openapitools.client.model.MiataruGetLocationRequest;
import org.openapitools.client.model.MiataruGetLocationResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for GetLocationApi
 */
@Disabled
public class GetLocationApiTest {

    private final GetLocationApi api = new GetLocationApi();

    /**
     * To retrieve a specific devices latest known location the /GetLocation method is used. Please note that the MiataruConfig portion is optional. RequestMiataruDeviceID should be the ID of the device the request is sent from (or an identifier like an URL).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLocationTest() throws ApiException {
        MiataruGetLocationRequest body = null;
        MiataruGetLocationResponse response = api.getLocation(body);
        // TODO: test validations
    }

    /**
     * Retrieves a devices Location in GeoJSON format.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLocationGeoJSONTest() throws ApiException {
        String deviceID = null;
        MiataruGetLocationGeoJSONResponse response = api.getLocationGeoJSON(deviceID);
        // TODO: test validations
    }

    /**
     * Location History is stored on the server only if the client told the server to do so using the “EnableLocationHistory” setting in the Location Update requests. For transitions of enabling/disabling that functionality - Everytime a Location Update is received by the server with “EnableLocationHistory&#x3D;false” the server removes all stored Location History till that point. There is a server-side setting that controls up to how many Location Updates the server is storing in the Location History before it removes the oldest one. To request the Location History of a particular device the client sends the following POST request to the GetLocationHistory service URL. Please note that the MiataruConfig portion is optional. RequestMiataruDeviceID should be the ID of the device the request is sent from (or an identifier like an URL).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getLocationHistoryTest() throws ApiException {
        MiataruGetLocationHistoryRequest body = null;
        MiataruGetLocationHistoryResponse response = api.getLocationHistory(body);
        // TODO: test validations
    }

}
