/**
 * Miataru
 * The Miataru API is very simple and straight forward. Generally you're posting (HTTP POST) a JSON formatted request to a service method locations and you get back a JSON formatted answer. Please take into consideration that this has the request-for-comment status and that it can change while there's work done on client and server applications. Versioning therefore is done by prepending the version number - /v1/ for version 1 - to the method call.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@miataru.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MiataruLocation from './MiataruLocation';
import MiataruUpdateLocationRequestMiataruConfig from './MiataruUpdateLocationRequestMiataruConfig';

/**
 * The MiataruUpdateLocationRequest model module.
 * @module model/MiataruUpdateLocationRequest
 * @version 1.0.0
 */
class MiataruUpdateLocationRequest {
    /**
     * Constructs a new <code>MiataruUpdateLocationRequest</code>.
     * @alias module:model/MiataruUpdateLocationRequest
     * @param miataruConfig {module:model/MiataruUpdateLocationRequestMiataruConfig} 
     * @param miataruLocation {Array.<module:model/MiataruLocation>} 
     */
    constructor(miataruConfig, miataruLocation) { 
        
        MiataruUpdateLocationRequest.initialize(this, miataruConfig, miataruLocation);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, miataruConfig, miataruLocation) { 
        obj['MiataruConfig'] = miataruConfig;
        obj['MiataruLocation'] = miataruLocation;
    }

    /**
     * Constructs a <code>MiataruUpdateLocationRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MiataruUpdateLocationRequest} obj Optional instance to populate.
     * @return {module:model/MiataruUpdateLocationRequest} The populated <code>MiataruUpdateLocationRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MiataruUpdateLocationRequest();

            if (data.hasOwnProperty('MiataruConfig')) {
                obj['MiataruConfig'] = MiataruUpdateLocationRequestMiataruConfig.constructFromObject(data['MiataruConfig']);
            }
            if (data.hasOwnProperty('MiataruLocation')) {
                obj['MiataruLocation'] = ApiClient.convertToType(data['MiataruLocation'], [MiataruLocation]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MiataruUpdateLocationRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MiataruUpdateLocationRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MiataruUpdateLocationRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `MiataruConfig`
        if (data['MiataruConfig']) { // data not null
          MiataruUpdateLocationRequestMiataruConfig.validateJSON(data['MiataruConfig']);
        }
        if (data['MiataruLocation']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['MiataruLocation'])) {
                throw new Error("Expected the field `MiataruLocation` to be an array in the JSON data but got " + data['MiataruLocation']);
            }
            // validate the optional field `MiataruLocation` (array)
            for (const item of data['MiataruLocation']) {
                MiataruLocation.validateJSON(item);
            };
        }

        return true;
    }


}

MiataruUpdateLocationRequest.RequiredProperties = ["MiataruConfig", "MiataruLocation"];

/**
 * @member {module:model/MiataruUpdateLocationRequestMiataruConfig} MiataruConfig
 */
MiataruUpdateLocationRequest.prototype['MiataruConfig'] = undefined;

/**
 * @member {Array.<module:model/MiataruLocation>} MiataruLocation
 */
MiataruUpdateLocationRequest.prototype['MiataruLocation'] = undefined;






export default MiataruUpdateLocationRequest;

