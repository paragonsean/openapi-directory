/**
 * Miataru
 * The Miataru API is very simple and straight forward. Generally you're posting (HTTP POST) a JSON formatted request to a service method locations and you get back a JSON formatted answer. Please take into consideration that this has the request-for-comment status and that it can change while there's work done on client and server applications. Versioning therefore is done by prepending the version number - /v1/ for version 1 - to the method call.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@miataru.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import MiataruGetVisitorHistoryResponseMiataruServerConfig from './MiataruGetVisitorHistoryResponseMiataruServerConfig';
import MiataruVisitors from './MiataruVisitors';

/**
 * The MiataruGetVisitorHistoryResponse model module.
 * @module model/MiataruGetVisitorHistoryResponse
 * @version 1.0.0
 */
class MiataruGetVisitorHistoryResponse {
    /**
     * Constructs a new <code>MiataruGetVisitorHistoryResponse</code>.
     * @alias module:model/MiataruGetVisitorHistoryResponse
     * @param miataruServerConfig {module:model/MiataruGetVisitorHistoryResponseMiataruServerConfig} 
     * @param miataruVisitors {Array.<module:model/MiataruVisitors>} The server will answer back with an Array of MiataruVisitors if there are Visitors, or an empty array when there are none.
     */
    constructor(miataruServerConfig, miataruVisitors) { 
        
        MiataruGetVisitorHistoryResponse.initialize(this, miataruServerConfig, miataruVisitors);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, miataruServerConfig, miataruVisitors) { 
        obj['MiataruServerConfig'] = miataruServerConfig;
        obj['MiataruVisitors'] = miataruVisitors;
    }

    /**
     * Constructs a <code>MiataruGetVisitorHistoryResponse</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MiataruGetVisitorHistoryResponse} obj Optional instance to populate.
     * @return {module:model/MiataruGetVisitorHistoryResponse} The populated <code>MiataruGetVisitorHistoryResponse</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MiataruGetVisitorHistoryResponse();

            if (data.hasOwnProperty('MiataruServerConfig')) {
                obj['MiataruServerConfig'] = MiataruGetVisitorHistoryResponseMiataruServerConfig.constructFromObject(data['MiataruServerConfig']);
            }
            if (data.hasOwnProperty('MiataruVisitors')) {
                obj['MiataruVisitors'] = ApiClient.convertToType(data['MiataruVisitors'], [MiataruVisitors]);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MiataruGetVisitorHistoryResponse</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MiataruGetVisitorHistoryResponse</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MiataruGetVisitorHistoryResponse.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `MiataruServerConfig`
        if (data['MiataruServerConfig']) { // data not null
          MiataruGetVisitorHistoryResponseMiataruServerConfig.validateJSON(data['MiataruServerConfig']);
        }
        if (data['MiataruVisitors']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['MiataruVisitors'])) {
                throw new Error("Expected the field `MiataruVisitors` to be an array in the JSON data but got " + data['MiataruVisitors']);
            }
            // validate the optional field `MiataruVisitors` (array)
            for (const item of data['MiataruVisitors']) {
                MiataruVisitors.validateJSON(item);
            };
        }

        return true;
    }


}

MiataruGetVisitorHistoryResponse.RequiredProperties = ["MiataruServerConfig", "MiataruVisitors"];

/**
 * @member {module:model/MiataruGetVisitorHistoryResponseMiataruServerConfig} MiataruServerConfig
 */
MiataruGetVisitorHistoryResponse.prototype['MiataruServerConfig'] = undefined;

/**
 * The server will answer back with an Array of MiataruVisitors if there are Visitors, or an empty array when there are none.
 * @member {Array.<module:model/MiataruVisitors>} MiataruVisitors
 */
MiataruGetVisitorHistoryResponse.prototype['MiataruVisitors'] = undefined;






export default MiataruGetVisitorHistoryResponse;

