/**
 * Miataru
 * The Miataru API is very simple and straight forward. Generally you're posting (HTTP POST) a JSON formatted request to a service method locations and you get back a JSON formatted answer. Please take into consideration that this has the request-for-comment status and that it can change while there's work done on client and server applications. Versioning therefore is done by prepending the version number - /v1/ for version 1 - to the method call.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@miataru.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MiataruVisitors model module.
 * @module model/MiataruVisitors
 * @version 1.0.0
 */
class MiataruVisitors {
    /**
     * Constructs a new <code>MiataruVisitors</code>.
     * @alias module:model/MiataruVisitors
     * @param deviceID {String} the device id of the visiting device. If this is an empty string the deviceID is unknown/was not reported.
     * @param timeStamp {String} the javascript timestamp of the visit
     */
    constructor(deviceID, timeStamp) { 
        
        MiataruVisitors.initialize(this, deviceID, timeStamp);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, deviceID, timeStamp) { 
        obj['DeviceID'] = deviceID;
        obj['TimeStamp'] = timeStamp;
    }

    /**
     * Constructs a <code>MiataruVisitors</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MiataruVisitors} obj Optional instance to populate.
     * @return {module:model/MiataruVisitors} The populated <code>MiataruVisitors</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MiataruVisitors();

            if (data.hasOwnProperty('DeviceID')) {
                obj['DeviceID'] = ApiClient.convertToType(data['DeviceID'], 'String');
            }
            if (data.hasOwnProperty('TimeStamp')) {
                obj['TimeStamp'] = ApiClient.convertToType(data['TimeStamp'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MiataruVisitors</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MiataruVisitors</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of MiataruVisitors.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['DeviceID'] && !(typeof data['DeviceID'] === 'string' || data['DeviceID'] instanceof String)) {
            throw new Error("Expected the field `DeviceID` to be a primitive type in the JSON string but got " + data['DeviceID']);
        }
        // ensure the json data is a string
        if (data['TimeStamp'] && !(typeof data['TimeStamp'] === 'string' || data['TimeStamp'] instanceof String)) {
            throw new Error("Expected the field `TimeStamp` to be a primitive type in the JSON string but got " + data['TimeStamp']);
        }

        return true;
    }


}

MiataruVisitors.RequiredProperties = ["DeviceID", "TimeStamp"];

/**
 * the device id of the visiting device. If this is an empty string the deviceID is unknown/was not reported.
 * @member {String} DeviceID
 */
MiataruVisitors.prototype['DeviceID'] = undefined;

/**
 * the javascript timestamp of the visit
 * @member {String} TimeStamp
 */
MiataruVisitors.prototype['TimeStamp'] = undefined;






export default MiataruVisitors;

