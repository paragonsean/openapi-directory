/**
 * Miataru
 * The Miataru API is very simple and straight forward. Generally you're posting (HTTP POST) a JSON formatted request to a service method locations and you get back a JSON formatted answer. Please take into consideration that this has the request-for-comment status and that it can change while there's work done on client and server applications. Versioning therefore is done by prepending the version number - /v1/ for version 1 - to the method call.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@miataru.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import MiataruGetLocationGeoJSONResponse from '../model/MiataruGetLocationGeoJSONResponse';
import MiataruGetLocationHistoryRequest from '../model/MiataruGetLocationHistoryRequest';
import MiataruGetLocationHistoryResponse from '../model/MiataruGetLocationHistoryResponse';
import MiataruGetLocationRequest from '../model/MiataruGetLocationRequest';
import MiataruGetLocationResponse from '../model/MiataruGetLocationResponse';

/**
* GetLocation service.
* @module api/GetLocationApi
* @version 1.0.0
*/
export default class GetLocationApi {

    /**
    * Constructs a new GetLocationApi. 
    * @alias module:api/GetLocationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getLocation operation.
     * @callback module:api/GetLocationApi~getLocationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MiataruGetLocationResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * To retrieve a specific devices latest known location the /GetLocation method is used. Please note that the MiataruConfig portion is optional. RequestMiataruDeviceID should be the ID of the device the request is sent from (or an identifier like an URL).
     * @param {module:model/MiataruGetLocationRequest} body the complex JSON formatted datastructure to get the location of one or more devices.
     * @param {module:api/GetLocationApi~getLocationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MiataruGetLocationResponse}
     */
    getLocation(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling getLocation");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = MiataruGetLocationResponse;
      return this.apiClient.callApi(
        '/GetLocation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getLocationGeoJSON operation.
     * @callback module:api/GetLocationApi~getLocationGeoJSONCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MiataruGetLocationGeoJSONResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Retrieves a devices Location in GeoJSON format.
     * @param {String} deviceID the unique device ID of the device the location is requested from
     * @param {module:api/GetLocationApi~getLocationGeoJSONCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MiataruGetLocationGeoJSONResponse}
     */
    getLocationGeoJSON(deviceID, callback) {
      let postBody = null;
      // verify the required parameter 'deviceID' is set
      if (deviceID === undefined || deviceID === null) {
        throw new Error("Missing the required parameter 'deviceID' when calling getLocationGeoJSON");
      }

      let pathParams = {
        'deviceID': deviceID
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = MiataruGetLocationGeoJSONResponse;
      return this.apiClient.callApi(
        '/GetLocationGeoJSON/{deviceID}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the getLocationHistory operation.
     * @callback module:api/GetLocationApi~getLocationHistoryCallback
     * @param {String} error Error message, if any.
     * @param {module:model/MiataruGetLocationHistoryResponse} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Location History is stored on the server only if the client told the server to do so using the “EnableLocationHistory” setting in the Location Update requests. For transitions of enabling/disabling that functionality - Everytime a Location Update is received by the server with “EnableLocationHistory=false” the server removes all stored Location History till that point. There is a server-side setting that controls up to how many Location Updates the server is storing in the Location History before it removes the oldest one. To request the Location History of a particular device the client sends the following POST request to the GetLocationHistory service URL. Please note that the MiataruConfig portion is optional. RequestMiataruDeviceID should be the ID of the device the request is sent from (or an identifier like an URL).
     * @param {module:model/MiataruGetLocationHistoryRequest} body the complex JSON formatted datastructure to get the location history of one device
     * @param {module:api/GetLocationApi~getLocationHistoryCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/MiataruGetLocationHistoryResponse}
     */
    getLocationHistory(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling getLocationHistory");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = MiataruGetLocationHistoryResponse;
      return this.apiClient.callApi(
        '/GetLocationHistory', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
