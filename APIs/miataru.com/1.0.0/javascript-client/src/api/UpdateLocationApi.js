/**
 * Miataru
 * The Miataru API is very simple and straight forward. Generally you're posting (HTTP POST) a JSON formatted request to a service method locations and you get back a JSON formatted answer. Please take into consideration that this has the request-for-comment status and that it can change while there's work done on client and server applications. Versioning therefore is done by prepending the version number - /v1/ for version 1 - to the method call.
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: info@miataru.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ACK from '../model/ACK';
import MiataruUpdateLocationRequest from '../model/MiataruUpdateLocationRequest';

/**
* UpdateLocation service.
* @module api/UpdateLocationApi
* @version 1.0.0
*/
export default class UpdateLocationApi {

    /**
    * Constructs a new UpdateLocationApi. 
    * @alias module:api/UpdateLocationApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the updateLocation operation.
     * @callback module:api/UpdateLocationApi~updateLocationCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ACK} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * This method is used to update the location of a device. The device does not need to be known already to the Miataru server but it rather creates a unique identifier for itself in the client application. This unique identifier, or device ID is then used to address this particular device.
     * @param {module:model/MiataruUpdateLocationRequest} body the body of this UpdateLocation POST request contains the JSON formatted parameters.
     * @param {module:api/UpdateLocationApi~updateLocationCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ACK}
     */
    updateLocation(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling updateLocation");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ACK;
      return this.apiClient.callApi(
        '/UpdateLocation', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
