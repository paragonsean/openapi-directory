# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.isos_get200_response_isos_inner import IsosGet200ResponseIsosInner
from openapi_server import util


class IsosIdGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, iso: IsosGet200ResponseIsosInner=None):
        """IsosIdGet200Response - a model defined in OpenAPI

        :param iso: The iso of this IsosIdGet200Response.
        """
        self.openapi_types = {
            'iso': IsosGet200ResponseIsosInner
        }

        self.attribute_map = {
            'iso': 'iso'
        }

        self._iso = iso

    @classmethod
    def from_dict(cls, dikt: dict) -> 'IsosIdGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _isos__id__get_200_response of this IsosIdGet200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def iso(self):
        """Gets the iso of this IsosIdGet200Response.


        :return: The iso of this IsosIdGet200Response.
        :rtype: IsosGet200ResponseIsosInner
        """
        return self._iso

    @iso.setter
    def iso(self, iso):
        """Sets the iso of this IsosIdGet200Response.


        :param iso: The iso of this IsosIdGet200Response.
        :type iso: IsosGet200ResponseIsosInner
        """
        if iso is None:
            raise ValueError("Invalid value for `iso`, must not be `None`")

        self._iso = iso
