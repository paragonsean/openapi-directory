# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.actions_response_meta import ActionsResponseMeta
from openapi_server.models.images_get200_response_images_inner import ImagesGet200ResponseImagesInner
from openapi_server import util


class ImagesGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, images: List[ImagesGet200ResponseImagesInner]=None, meta: ActionsResponseMeta=None):
        """ImagesGet200Response - a model defined in OpenAPI

        :param images: The images of this ImagesGet200Response.
        :param meta: The meta of this ImagesGet200Response.
        """
        self.openapi_types = {
            'images': List[ImagesGet200ResponseImagesInner],
            'meta': ActionsResponseMeta
        }

        self.attribute_map = {
            'images': 'images',
            'meta': 'meta'
        }

        self._images = images
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ImagesGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _images_get_200_response of this ImagesGet200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def images(self):
        """Gets the images of this ImagesGet200Response.


        :return: The images of this ImagesGet200Response.
        :rtype: List[ImagesGet200ResponseImagesInner]
        """
        return self._images

    @images.setter
    def images(self, images):
        """Sets the images of this ImagesGet200Response.


        :param images: The images of this ImagesGet200Response.
        :type images: List[ImagesGet200ResponseImagesInner]
        """
        if images is None:
            raise ValueError("Invalid value for `images`, must not be `None`")

        self._images = images

    @property
    def meta(self):
        """Gets the meta of this ImagesGet200Response.


        :return: The meta of this ImagesGet200Response.
        :rtype: ActionsResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this ImagesGet200Response.


        :param meta: The meta of this ImagesGet200Response.
        :type meta: ActionsResponseMeta
        """

        self._meta = meta
