# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.load_balancers_get200_response_load_balancers_inner import LoadBalancersGet200ResponseLoadBalancersInner
from openapi_server import util


class LoadBalancersIdGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, load_balancer: LoadBalancersGet200ResponseLoadBalancersInner=None):
        """LoadBalancersIdGet200Response - a model defined in OpenAPI

        :param load_balancer: The load_balancer of this LoadBalancersIdGet200Response.
        """
        self.openapi_types = {
            'load_balancer': LoadBalancersGet200ResponseLoadBalancersInner
        }

        self.attribute_map = {
            'load_balancer': 'load_balancer'
        }

        self._load_balancer = load_balancer

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoadBalancersIdGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _load_balancers__id__get_200_response of this LoadBalancersIdGet200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def load_balancer(self):
        """Gets the load_balancer of this LoadBalancersIdGet200Response.


        :return: The load_balancer of this LoadBalancersIdGet200Response.
        :rtype: LoadBalancersGet200ResponseLoadBalancersInner
        """
        return self._load_balancer

    @load_balancer.setter
    def load_balancer(self, load_balancer):
        """Sets the load_balancer of this LoadBalancersIdGet200Response.


        :param load_balancer: The load_balancer of this LoadBalancersIdGet200Response.
        :type load_balancer: LoadBalancersGet200ResponseLoadBalancersInner
        """
        if load_balancer is None:
            raise ValueError("Invalid value for `load_balancer`, must not be `None`")

        self._load_balancer = load_balancer
