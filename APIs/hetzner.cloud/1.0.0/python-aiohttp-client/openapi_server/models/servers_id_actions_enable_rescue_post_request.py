# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServersIdActionsEnableRescuePostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ssh_keys: List[int]=None, type: str=None):
        """ServersIdActionsEnableRescuePostRequest - a model defined in OpenAPI

        :param ssh_keys: The ssh_keys of this ServersIdActionsEnableRescuePostRequest.
        :param type: The type of this ServersIdActionsEnableRescuePostRequest.
        """
        self.openapi_types = {
            'ssh_keys': List[int],
            'type': str
        }

        self.attribute_map = {
            'ssh_keys': 'ssh_keys',
            'type': 'type'
        }

        self._ssh_keys = ssh_keys
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServersIdActionsEnableRescuePostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _servers__id__actions_enable_rescue_post_request of this ServersIdActionsEnableRescuePostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ssh_keys(self):
        """Gets the ssh_keys of this ServersIdActionsEnableRescuePostRequest.

        Array of SSH key IDs which should be injected into the rescue system.

        :return: The ssh_keys of this ServersIdActionsEnableRescuePostRequest.
        :rtype: List[int]
        """
        return self._ssh_keys

    @ssh_keys.setter
    def ssh_keys(self, ssh_keys):
        """Sets the ssh_keys of this ServersIdActionsEnableRescuePostRequest.

        Array of SSH key IDs which should be injected into the rescue system.

        :param ssh_keys: The ssh_keys of this ServersIdActionsEnableRescuePostRequest.
        :type ssh_keys: List[int]
        """

        self._ssh_keys = ssh_keys

    @property
    def type(self):
        """Gets the type of this ServersIdActionsEnableRescuePostRequest.

        Type of rescue system to boot (default: `linux64`)

        :return: The type of this ServersIdActionsEnableRescuePostRequest.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this ServersIdActionsEnableRescuePostRequest.

        Type of rescue system to boot (default: `linux64`)

        :param type: The type of this ServersIdActionsEnableRescuePostRequest.
        :type type: str
        """
        allowed_values = ["linux64", "linux32"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
