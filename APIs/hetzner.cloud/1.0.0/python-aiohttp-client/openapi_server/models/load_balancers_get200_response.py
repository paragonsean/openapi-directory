# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.actions_response_meta import ActionsResponseMeta
from openapi_server.models.load_balancers_get200_response_load_balancers_inner import LoadBalancersGet200ResponseLoadBalancersInner
from openapi_server import util


class LoadBalancersGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, load_balancers: List[LoadBalancersGet200ResponseLoadBalancersInner]=None, meta: ActionsResponseMeta=None):
        """LoadBalancersGet200Response - a model defined in OpenAPI

        :param load_balancers: The load_balancers of this LoadBalancersGet200Response.
        :param meta: The meta of this LoadBalancersGet200Response.
        """
        self.openapi_types = {
            'load_balancers': List[LoadBalancersGet200ResponseLoadBalancersInner],
            'meta': ActionsResponseMeta
        }

        self.attribute_map = {
            'load_balancers': 'load_balancers',
            'meta': 'meta'
        }

        self._load_balancers = load_balancers
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoadBalancersGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _load_balancers_get_200_response of this LoadBalancersGet200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def load_balancers(self):
        """Gets the load_balancers of this LoadBalancersGet200Response.


        :return: The load_balancers of this LoadBalancersGet200Response.
        :rtype: List[LoadBalancersGet200ResponseLoadBalancersInner]
        """
        return self._load_balancers

    @load_balancers.setter
    def load_balancers(self, load_balancers):
        """Sets the load_balancers of this LoadBalancersGet200Response.


        :param load_balancers: The load_balancers of this LoadBalancersGet200Response.
        :type load_balancers: List[LoadBalancersGet200ResponseLoadBalancersInner]
        """
        if load_balancers is None:
            raise ValueError("Invalid value for `load_balancers`, must not be `None`")

        self._load_balancers = load_balancers

    @property
    def meta(self):
        """Gets the meta of this LoadBalancersGet200Response.


        :return: The meta of this LoadBalancersGet200Response.
        :rtype: ActionsResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this LoadBalancersGet200Response.


        :param meta: The meta of this LoadBalancersGet200Response.
        :type meta: ActionsResponseMeta
        """

        self._meta = meta
