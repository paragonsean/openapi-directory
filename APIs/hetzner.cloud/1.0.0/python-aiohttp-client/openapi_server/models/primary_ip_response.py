# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.primary_ip import PrimaryIP
from openapi_server import util


class PrimaryIPResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, primary_ip: PrimaryIP=None):
        """PrimaryIPResponse - a model defined in OpenAPI

        :param primary_ip: The primary_ip of this PrimaryIPResponse.
        """
        self.openapi_types = {
            'primary_ip': PrimaryIP
        }

        self.attribute_map = {
            'primary_ip': 'primary_ip'
        }

        self._primary_ip = primary_ip

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PrimaryIPResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PrimaryIPResponse of this PrimaryIPResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def primary_ip(self):
        """Gets the primary_ip of this PrimaryIPResponse.


        :return: The primary_ip of this PrimaryIPResponse.
        :rtype: PrimaryIP
        """
        return self._primary_ip

    @primary_ip.setter
    def primary_ip(self, primary_ip):
        """Sets the primary_ip of this PrimaryIPResponse.


        :param primary_ip: The primary_ip of this PrimaryIPResponse.
        :type primary_ip: PrimaryIP
        """
        if primary_ip is None:
            raise ValueError("Invalid value for `primary_ip`, must not be `None`")

        self._primary_ip = primary_ip
