# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServersIdActionsChangeProtectionPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, delete: bool=None, rebuild: bool=None):
        """ServersIdActionsChangeProtectionPostRequest - a model defined in OpenAPI

        :param delete: The delete of this ServersIdActionsChangeProtectionPostRequest.
        :param rebuild: The rebuild of this ServersIdActionsChangeProtectionPostRequest.
        """
        self.openapi_types = {
            'delete': bool,
            'rebuild': bool
        }

        self.attribute_map = {
            'delete': 'delete',
            'rebuild': 'rebuild'
        }

        self._delete = delete
        self._rebuild = rebuild

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServersIdActionsChangeProtectionPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _servers__id__actions_change_protection_post_request of this ServersIdActionsChangeProtectionPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def delete(self):
        """Gets the delete of this ServersIdActionsChangeProtectionPostRequest.

        If true, prevents the Server from being deleted (currently delete and rebuild attribute needs to have the same value)

        :return: The delete of this ServersIdActionsChangeProtectionPostRequest.
        :rtype: bool
        """
        return self._delete

    @delete.setter
    def delete(self, delete):
        """Sets the delete of this ServersIdActionsChangeProtectionPostRequest.

        If true, prevents the Server from being deleted (currently delete and rebuild attribute needs to have the same value)

        :param delete: The delete of this ServersIdActionsChangeProtectionPostRequest.
        :type delete: bool
        """

        self._delete = delete

    @property
    def rebuild(self):
        """Gets the rebuild of this ServersIdActionsChangeProtectionPostRequest.

        If true, prevents the Server from being rebuilt (currently delete and rebuild attribute needs to have the same value)

        :return: The rebuild of this ServersIdActionsChangeProtectionPostRequest.
        :rtype: bool
        """
        return self._rebuild

    @rebuild.setter
    def rebuild(self, rebuild):
        """Sets the rebuild of this ServersIdActionsChangeProtectionPostRequest.

        If true, prevents the Server from being rebuilt (currently delete and rebuild attribute needs to have the same value)

        :param rebuild: The rebuild of this ServersIdActionsChangeProtectionPostRequest.
        :type rebuild: bool
        """

        self._rebuild = rebuild
