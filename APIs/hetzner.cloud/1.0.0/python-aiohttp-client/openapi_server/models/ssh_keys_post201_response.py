# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.ssh_keys_get200_response_ssh_keys_inner import SshKeysGet200ResponseSshKeysInner
from openapi_server import util


class SshKeysPost201Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, ssh_key: SshKeysGet200ResponseSshKeysInner=None):
        """SshKeysPost201Response - a model defined in OpenAPI

        :param ssh_key: The ssh_key of this SshKeysPost201Response.
        """
        self.openapi_types = {
            'ssh_key': SshKeysGet200ResponseSshKeysInner
        }

        self.attribute_map = {
            'ssh_key': 'ssh_key'
        }

        self._ssh_key = ssh_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SshKeysPost201Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _ssh_keys_post_201_response of this SshKeysPost201Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def ssh_key(self):
        """Gets the ssh_key of this SshKeysPost201Response.


        :return: The ssh_key of this SshKeysPost201Response.
        :rtype: SshKeysGet200ResponseSshKeysInner
        """
        return self._ssh_key

    @ssh_key.setter
    def ssh_key(self, ssh_key):
        """Sets the ssh_key of this SshKeysPost201Response.


        :param ssh_key: The ssh_key of this SshKeysPost201Response.
        :type ssh_key: SshKeysGet200ResponseSshKeysInner
        """
        if ssh_key is None:
            raise ValueError("Invalid value for `ssh_key`, must not be `None`")

        self._ssh_key = ssh_key
