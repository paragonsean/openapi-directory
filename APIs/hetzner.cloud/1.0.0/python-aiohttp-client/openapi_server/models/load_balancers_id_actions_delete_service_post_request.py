# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class LoadBalancersIdActionsDeleteServicePostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, listen_port: float=None):
        """LoadBalancersIdActionsDeleteServicePostRequest - a model defined in OpenAPI

        :param listen_port: The listen_port of this LoadBalancersIdActionsDeleteServicePostRequest.
        """
        self.openapi_types = {
            'listen_port': float
        }

        self.attribute_map = {
            'listen_port': 'listen_port'
        }

        self._listen_port = listen_port

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoadBalancersIdActionsDeleteServicePostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _load_balancers__id__actions_delete_service_post_request of this LoadBalancersIdActionsDeleteServicePostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def listen_port(self):
        """Gets the listen_port of this LoadBalancersIdActionsDeleteServicePostRequest.

        The listen port of the service you want to delete

        :return: The listen_port of this LoadBalancersIdActionsDeleteServicePostRequest.
        :rtype: float
        """
        return self._listen_port

    @listen_port.setter
    def listen_port(self, listen_port):
        """Sets the listen_port of this LoadBalancersIdActionsDeleteServicePostRequest.

        The listen port of the service you want to delete

        :param listen_port: The listen_port of this LoadBalancersIdActionsDeleteServicePostRequest.
        :type listen_port: float
        """
        if listen_port is None:
            raise ValueError("Invalid value for `listen_port`, must not be `None`")

        self._listen_port = listen_port
