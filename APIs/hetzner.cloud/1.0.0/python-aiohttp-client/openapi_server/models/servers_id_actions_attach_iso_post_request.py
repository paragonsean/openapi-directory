# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class ServersIdActionsAttachIsoPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, iso: str=None):
        """ServersIdActionsAttachIsoPostRequest - a model defined in OpenAPI

        :param iso: The iso of this ServersIdActionsAttachIsoPostRequest.
        """
        self.openapi_types = {
            'iso': str
        }

        self.attribute_map = {
            'iso': 'iso'
        }

        self._iso = iso

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ServersIdActionsAttachIsoPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _servers__id__actions_attach_iso_post_request of this ServersIdActionsAttachIsoPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def iso(self):
        """Gets the iso of this ServersIdActionsAttachIsoPostRequest.

        ID or name of ISO to attach to the Server as listed in GET `/isos`

        :return: The iso of this ServersIdActionsAttachIsoPostRequest.
        :rtype: str
        """
        return self._iso

    @iso.setter
    def iso(self, iso):
        """Sets the iso of this ServersIdActionsAttachIsoPostRequest.

        ID or name of ISO to attach to the Server as listed in GET `/isos`

        :param iso: The iso of this ServersIdActionsAttachIsoPostRequest.
        :type iso: str
        """
        if iso is None:
            raise ValueError("Invalid value for `iso`, must not be `None`")

        self._iso = iso
