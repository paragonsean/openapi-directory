# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.actions_response_meta import ActionsResponseMeta
from openapi_server.models.firewall import Firewall
from openapi_server import util


class FirewallsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, firewalls: List[Firewall]=None, meta: ActionsResponseMeta=None):
        """FirewallsResponse - a model defined in OpenAPI

        :param firewalls: The firewalls of this FirewallsResponse.
        :param meta: The meta of this FirewallsResponse.
        """
        self.openapi_types = {
            'firewalls': List[Firewall],
            'meta': ActionsResponseMeta
        }

        self.attribute_map = {
            'firewalls': 'firewalls',
            'meta': 'meta'
        }

        self._firewalls = firewalls
        self._meta = meta

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FirewallsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The FirewallsResponse of this FirewallsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def firewalls(self):
        """Gets the firewalls of this FirewallsResponse.


        :return: The firewalls of this FirewallsResponse.
        :rtype: List[Firewall]
        """
        return self._firewalls

    @firewalls.setter
    def firewalls(self, firewalls):
        """Sets the firewalls of this FirewallsResponse.


        :param firewalls: The firewalls of this FirewallsResponse.
        :type firewalls: List[Firewall]
        """
        if firewalls is None:
            raise ValueError("Invalid value for `firewalls`, must not be `None`")

        self._firewalls = firewalls

    @property
    def meta(self):
        """Gets the meta of this FirewallsResponse.


        :return: The meta of this FirewallsResponse.
        :rtype: ActionsResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this FirewallsResponse.


        :param meta: The meta of this FirewallsResponse.
        :type meta: ActionsResponseMeta
        """

        self._meta = meta
