# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SshKeysPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, labels: object=None, name: str=None, public_key: str=None):
        """SshKeysPostRequest - a model defined in OpenAPI

        :param labels: The labels of this SshKeysPostRequest.
        :param name: The name of this SshKeysPostRequest.
        :param public_key: The public_key of this SshKeysPostRequest.
        """
        self.openapi_types = {
            'labels': object,
            'name': str,
            'public_key': str
        }

        self.attribute_map = {
            'labels': 'labels',
            'name': 'name',
            'public_key': 'public_key'
        }

        self._labels = labels
        self._name = name
        self._public_key = public_key

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SshKeysPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _ssh_keys_post_request of this SshKeysPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def labels(self):
        """Gets the labels of this SshKeysPostRequest.

        User-defined labels (key-value pairs)

        :return: The labels of this SshKeysPostRequest.
        :rtype: object
        """
        return self._labels

    @labels.setter
    def labels(self, labels):
        """Sets the labels of this SshKeysPostRequest.

        User-defined labels (key-value pairs)

        :param labels: The labels of this SshKeysPostRequest.
        :type labels: object
        """

        self._labels = labels

    @property
    def name(self):
        """Gets the name of this SshKeysPostRequest.

        Name of the SSH key

        :return: The name of this SshKeysPostRequest.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this SshKeysPostRequest.

        Name of the SSH key

        :param name: The name of this SshKeysPostRequest.
        :type name: str
        """
        if name is None:
            raise ValueError("Invalid value for `name`, must not be `None`")

        self._name = name

    @property
    def public_key(self):
        """Gets the public_key of this SshKeysPostRequest.

        Public key

        :return: The public_key of this SshKeysPostRequest.
        :rtype: str
        """
        return self._public_key

    @public_key.setter
    def public_key(self, public_key):
        """Sets the public_key of this SshKeysPostRequest.

        Public key

        :param public_key: The public_key of this SshKeysPostRequest.
        :type public_key: str
        """
        if public_key is None:
            raise ValueError("Invalid value for `public_key`, must not be `None`")

        self._public_key = public_key
