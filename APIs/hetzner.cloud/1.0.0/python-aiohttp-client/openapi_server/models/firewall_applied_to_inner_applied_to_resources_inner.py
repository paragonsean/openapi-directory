# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.firewall_applied_to_inner_applied_to_resources_inner_server import FirewallAppliedToInnerAppliedToResourcesInnerServer
from openapi_server import util


class FirewallAppliedToInnerAppliedToResourcesInner(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, server: FirewallAppliedToInnerAppliedToResourcesInnerServer=None, type: str=None):
        """FirewallAppliedToInnerAppliedToResourcesInner - a model defined in OpenAPI

        :param server: The server of this FirewallAppliedToInnerAppliedToResourcesInner.
        :param type: The type of this FirewallAppliedToInnerAppliedToResourcesInner.
        """
        self.openapi_types = {
            'server': FirewallAppliedToInnerAppliedToResourcesInnerServer,
            'type': str
        }

        self.attribute_map = {
            'server': 'server',
            'type': 'type'
        }

        self._server = server
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FirewallAppliedToInnerAppliedToResourcesInner':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The Firewall_applied_to_inner_applied_to_resources_inner of this FirewallAppliedToInnerAppliedToResourcesInner.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def server(self):
        """Gets the server of this FirewallAppliedToInnerAppliedToResourcesInner.


        :return: The server of this FirewallAppliedToInnerAppliedToResourcesInner.
        :rtype: FirewallAppliedToInnerAppliedToResourcesInnerServer
        """
        return self._server

    @server.setter
    def server(self, server):
        """Sets the server of this FirewallAppliedToInnerAppliedToResourcesInner.


        :param server: The server of this FirewallAppliedToInnerAppliedToResourcesInner.
        :type server: FirewallAppliedToInnerAppliedToResourcesInnerServer
        """

        self._server = server

    @property
    def type(self):
        """Gets the type of this FirewallAppliedToInnerAppliedToResourcesInner.

        Type of resource referenced

        :return: The type of this FirewallAppliedToInnerAppliedToResourcesInner.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this FirewallAppliedToInnerAppliedToResourcesInner.

        Type of resource referenced

        :param type: The type of this FirewallAppliedToInnerAppliedToResourcesInner.
        :type type: str
        """
        allowed_values = ["server"]  # noqa: E501
        if type not in allowed_values:
            raise ValueError(
                "Invalid value for `type` ({0}), must be one of {1}"
                .format(type, allowed_values)
            )

        self._type = type
