# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.actions_response_meta import ActionsResponseMeta
from openapi_server.models.placement_group import PlacementGroup
from openapi_server import util


class PlacementGroupsResponse(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, meta: ActionsResponseMeta=None, placement_groups: List[PlacementGroup]=None):
        """PlacementGroupsResponse - a model defined in OpenAPI

        :param meta: The meta of this PlacementGroupsResponse.
        :param placement_groups: The placement_groups of this PlacementGroupsResponse.
        """
        self.openapi_types = {
            'meta': ActionsResponseMeta,
            'placement_groups': List[PlacementGroup]
        }

        self.attribute_map = {
            'meta': 'meta',
            'placement_groups': 'placement_groups'
        }

        self._meta = meta
        self._placement_groups = placement_groups

    @classmethod
    def from_dict(cls, dikt: dict) -> 'PlacementGroupsResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The PlacementGroupsResponse of this PlacementGroupsResponse.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def meta(self):
        """Gets the meta of this PlacementGroupsResponse.


        :return: The meta of this PlacementGroupsResponse.
        :rtype: ActionsResponseMeta
        """
        return self._meta

    @meta.setter
    def meta(self, meta):
        """Sets the meta of this PlacementGroupsResponse.


        :param meta: The meta of this PlacementGroupsResponse.
        :type meta: ActionsResponseMeta
        """

        self._meta = meta

    @property
    def placement_groups(self):
        """Gets the placement_groups of this PlacementGroupsResponse.


        :return: The placement_groups of this PlacementGroupsResponse.
        :rtype: List[PlacementGroup]
        """
        return self._placement_groups

    @placement_groups.setter
    def placement_groups(self, placement_groups):
        """Sets the placement_groups of this PlacementGroupsResponse.


        :param placement_groups: The placement_groups of this PlacementGroupsResponse.
        :type placement_groups: List[PlacementGroup]
        """
        if placement_groups is None:
            raise ValueError("Invalid value for `placement_groups`, must not be `None`")

        self._placement_groups = placement_groups
