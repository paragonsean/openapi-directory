# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.load_balancers_id_metrics_get200_response_metrics import LoadBalancersIdMetricsGet200ResponseMetrics
from openapi_server import util


class LoadBalancersIdMetricsGet200Response(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, metrics: LoadBalancersIdMetricsGet200ResponseMetrics=None):
        """LoadBalancersIdMetricsGet200Response - a model defined in OpenAPI

        :param metrics: The metrics of this LoadBalancersIdMetricsGet200Response.
        """
        self.openapi_types = {
            'metrics': LoadBalancersIdMetricsGet200ResponseMetrics
        }

        self.attribute_map = {
            'metrics': 'metrics'
        }

        self._metrics = metrics

    @classmethod
    def from_dict(cls, dikt: dict) -> 'LoadBalancersIdMetricsGet200Response':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The _load_balancers__id__metrics_get_200_response of this LoadBalancersIdMetricsGet200Response.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def metrics(self):
        """Gets the metrics of this LoadBalancersIdMetricsGet200Response.


        :return: The metrics of this LoadBalancersIdMetricsGet200Response.
        :rtype: LoadBalancersIdMetricsGet200ResponseMetrics
        """
        return self._metrics

    @metrics.setter
    def metrics(self, metrics):
        """Sets the metrics of this LoadBalancersIdMetricsGet200Response.


        :param metrics: The metrics of this LoadBalancersIdMetricsGet200Response.
        :type metrics: LoadBalancersIdMetricsGet200ResponseMetrics
        """
        if metrics is None:
            raise ValueError("Invalid value for `metrics`, must not be `None`")

        self._metrics = metrics
