/**
 * BC Laws
 * BC Laws is an electronic library providing free public access to the laws of British Columbia. BC Laws is hosted by the Queen's Printer of British Columbia and published in partnership with the Ministry of Justice and the Law Clerk of the Legislative Assembly.BC Laws contains a comprehensive collection of BC legislation and related materials. It is available on the internet in two forms:First: The library is available as a web site in which users can browse and search the laws of British Columbia.Second: The library is available as a portal to legislation in raw XML data format, accessible via the BC Laws API2. This direct access to raw data is intended to enable third parties to build or add their own custom applications based on the structure of the data and all the associated search functionality inherent in that structure. The BC Laws website itself is an example of one such application.   Please note that you may experience issues when submitting requests to the delivery or test environment if using this [OpenAPI specification](https://github.com/bcgov/api-specs) in other API console viewers.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.BcLaws);
  }
}(this, function(expect, BcLaws) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new BcLaws.DocumentApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DocumentApi', function() {
    describe('documentIdAspectIdCivixIndexIdCivixDocumentIdGet', function() {
      it('should call documentIdAspectIdCivixIndexIdCivixDocumentIdGet successfully', function(done) {
        //uncomment below and update the code to test documentIdAspectIdCivixIndexIdCivixDocumentIdGet
        //instance.documentIdAspectIdCivixIndexIdCivixDocumentIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('documentIdAspectIdCivixIndexIdCivixDocumentIdSearchSearchStringGet', function() {
      it('should call documentIdAspectIdCivixIndexIdCivixDocumentIdSearchSearchStringGet successfully', function(done) {
        //uncomment below and update the code to test documentIdAspectIdCivixIndexIdCivixDocumentIdSearchSearchStringGet
        //instance.documentIdAspectIdCivixIndexIdCivixDocumentIdSearchSearchStringGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('documentIdAspectIdCivixIndexIdCivixDocumentIdXmlGet', function() {
      it('should call documentIdAspectIdCivixIndexIdCivixDocumentIdXmlGet successfully', function(done) {
        //uncomment below and update the code to test documentIdAspectIdCivixIndexIdCivixDocumentIdXmlGet
        //instance.documentIdAspectIdCivixIndexIdCivixDocumentIdXmlGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('documentIdAspectIdCivixIndexIdCivixDocumentIdXmlSearchSearchStringGet', function() {
      it('should call documentIdAspectIdCivixIndexIdCivixDocumentIdXmlSearchSearchStringGet successfully', function(done) {
        //uncomment below and update the code to test documentIdAspectIdCivixIndexIdCivixDocumentIdXmlSearchSearchStringGet
        //instance.documentIdAspectIdCivixIndexIdCivixDocumentIdXmlSearchSearchStringGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
