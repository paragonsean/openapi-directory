/**
 * VAT API
 * A developer friendly API to help your business achieve VAT compliance
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ApiUsage model module.
 * @module model/ApiUsage
 * @version 1
 */
class ApiUsage {
    /**
     * Constructs a new <code>ApiUsage</code>.
     * @alias module:model/ApiUsage
     * @param requestsRemaining {Number} The number of api requests remaining in the current billing period
     * @param requestsUsed {Number} The number of api requests consumed within the last 30 days
     * @param status {Number} Response code
     */
    constructor(requestsRemaining, requestsUsed, status) { 
        
        ApiUsage.initialize(this, requestsRemaining, requestsUsed, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, requestsRemaining, requestsUsed, status) { 
        obj['requests_remaining'] = requestsRemaining;
        obj['requests_used'] = requestsUsed;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>ApiUsage</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ApiUsage} obj Optional instance to populate.
     * @return {module:model/ApiUsage} The populated <code>ApiUsage</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ApiUsage();

            if (data.hasOwnProperty('requests_remaining')) {
                obj['requests_remaining'] = ApiClient.convertToType(data['requests_remaining'], 'Number');
            }
            if (data.hasOwnProperty('requests_used')) {
                obj['requests_used'] = ApiClient.convertToType(data['requests_used'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ApiUsage</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ApiUsage</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ApiUsage.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }

        return true;
    }


}

ApiUsage.RequiredProperties = ["requests_remaining", "requests_used", "status"];

/**
 * The number of api requests remaining in the current billing period
 * @member {Number} requests_remaining
 */
ApiUsage.prototype['requests_remaining'] = undefined;

/**
 * The number of api requests consumed within the last 30 days
 * @member {Number} requests_used
 */
ApiUsage.prototype['requests_used'] = undefined;

/**
 * Response code
 * @member {Number} status
 */
ApiUsage.prototype['status'] = undefined;






export default ApiUsage;

