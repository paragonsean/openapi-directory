/**
 * VAT API
 * A developer friendly API to help your business achieve VAT compliance
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import RetrieveInvoiceArray from './RetrieveInvoiceArray';

/**
 * The UpdateInvoice model module.
 * @module model/UpdateInvoice
 * @version 1
 */
class UpdateInvoice {
    /**
     * Constructs a new <code>UpdateInvoice</code>.
     * @alias module:model/UpdateInvoice
     * @param invoice {module:model/RetrieveInvoiceArray} 
     * @param status {String} Response code
     */
    constructor(invoice, status) { 
        
        UpdateInvoice.initialize(this, invoice, status);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, invoice, status) { 
        obj['invoice'] = invoice;
        obj['status'] = status;
    }

    /**
     * Constructs a <code>UpdateInvoice</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/UpdateInvoice} obj Optional instance to populate.
     * @return {module:model/UpdateInvoice} The populated <code>UpdateInvoice</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateInvoice();

            if (data.hasOwnProperty('invoice')) {
                obj['invoice'] = RetrieveInvoiceArray.constructFromObject(data['invoice']);
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateInvoice</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateInvoice</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of UpdateInvoice.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `invoice`
        if (data['invoice']) { // data not null
          RetrieveInvoiceArray.validateJSON(data['invoice']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }

        return true;
    }


}

UpdateInvoice.RequiredProperties = ["invoice", "status"];

/**
 * @member {module:model/RetrieveInvoiceArray} invoice
 */
UpdateInvoice.prototype['invoice'] = undefined;

/**
 * Response code
 * @member {String} status
 */
UpdateInvoice.prototype['status'] = undefined;






export default UpdateInvoice;

