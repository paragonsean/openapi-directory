/**
 * VAT API
 * A developer friendly API to help your business achieve VAT compliance
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The SuperReduced model module.
 * @module model/SuperReduced
 * @version 1
 */
class SuperReduced {
    /**
     * Constructs a new <code>SuperReduced</code>.
     * @alias module:model/SuperReduced
     * @param appliesTo {String} The type of goods the rate applies to
     * @param value {Number} The % VAT rate
     */
    constructor(appliesTo, value) { 
        
        SuperReduced.initialize(this, appliesTo, value);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, appliesTo, value) { 
        obj['applies_to'] = appliesTo;
        obj['value'] = value;
    }

    /**
     * Constructs a <code>SuperReduced</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/SuperReduced} obj Optional instance to populate.
     * @return {module:model/SuperReduced} The populated <code>SuperReduced</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new SuperReduced();

            if (data.hasOwnProperty('applies_to')) {
                obj['applies_to'] = ApiClient.convertToType(data['applies_to'], 'String');
            }
            if (data.hasOwnProperty('value')) {
                obj['value'] = ApiClient.convertToType(data['value'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>SuperReduced</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>SuperReduced</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of SuperReduced.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['applies_to'] && !(typeof data['applies_to'] === 'string' || data['applies_to'] instanceof String)) {
            throw new Error("Expected the field `applies_to` to be a primitive type in the JSON string but got " + data['applies_to']);
        }

        return true;
    }


}

SuperReduced.RequiredProperties = ["applies_to", "value"];

/**
 * The type of goods the rate applies to
 * @member {String} applies_to
 */
SuperReduced.prototype['applies_to'] = undefined;

/**
 * The % VAT rate
 * @member {Number} value
 */
SuperReduced.prototype['value'] = undefined;






export default SuperReduced;

