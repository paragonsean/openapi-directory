/**
 * VAT API
 * A developer friendly API to help your business achieve VAT compliance
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The InvoiceItems model module.
 * @module model/InvoiceItems
 * @version 1
 */
class InvoiceItems {
    /**
     * Constructs a new <code>InvoiceItems</code>.
     * @alias module:model/InvoiceItems
     * @param description {String} The item line description
     * @param priceEach {Number} The price of the individual item (Ex VAT)
     * @param quantity {Number} The quantity of the item
     * @param vatRate {Number} The VAT rate at which the item is charged
     */
    constructor(description, priceEach, quantity, vatRate) { 
        
        InvoiceItems.initialize(this, description, priceEach, quantity, vatRate);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, description, priceEach, quantity, vatRate) { 
        obj['description'] = description;
        obj['price_each'] = priceEach;
        obj['quantity'] = quantity;
        obj['vat_rate'] = vatRate;
    }

    /**
     * Constructs a <code>InvoiceItems</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InvoiceItems} obj Optional instance to populate.
     * @return {module:model/InvoiceItems} The populated <code>InvoiceItems</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new InvoiceItems();

            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('price_each')) {
                obj['price_each'] = ApiClient.convertToType(data['price_each'], 'Number');
            }
            if (data.hasOwnProperty('quantity')) {
                obj['quantity'] = ApiClient.convertToType(data['quantity'], 'Number');
            }
            if (data.hasOwnProperty('vat_rate')) {
                obj['vat_rate'] = ApiClient.convertToType(data['vat_rate'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>InvoiceItems</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>InvoiceItems</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of InvoiceItems.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }

        return true;
    }


}

InvoiceItems.RequiredProperties = ["description", "price_each", "quantity", "vat_rate"];

/**
 * The item line description
 * @member {String} description
 */
InvoiceItems.prototype['description'] = undefined;

/**
 * The price of the individual item (Ex VAT)
 * @member {Number} price_each
 */
InvoiceItems.prototype['price_each'] = undefined;

/**
 * The quantity of the item
 * @member {Number} quantity
 */
InvoiceItems.prototype['quantity'] = undefined;

/**
 * The VAT rate at which the item is charged
 * @member {Number} vat_rate
 */
InvoiceItems.prototype['vat_rate'] = undefined;






export default InvoiceItems;

