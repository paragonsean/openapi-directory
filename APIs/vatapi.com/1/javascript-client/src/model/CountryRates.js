/**
 * VAT API
 * A developer friendly API to help your business achieve VAT compliance
 *
 * The version of the OpenAPI document: 1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Parking from './Parking';
import Reduced from './Reduced';
import ReducedAlt from './ReducedAlt';
import Standard from './Standard';
import SuperReduced from './SuperReduced';

/**
 * The CountryRates model module.
 * @module model/CountryRates
 * @version 1
 */
class CountryRates {
    /**
     * Constructs a new <code>CountryRates</code>.
     * @alias module:model/CountryRates
     * @param parking {module:model/Parking} 
     * @param reduced {module:model/Reduced} 
     * @param reducedAlt {module:model/ReducedAlt} 
     * @param standard {module:model/Standard} 
     * @param superReduced {module:model/SuperReduced} 
     */
    constructor(parking, reduced, reducedAlt, standard, superReduced) { 
        
        CountryRates.initialize(this, parking, reduced, reducedAlt, standard, superReduced);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, parking, reduced, reducedAlt, standard, superReduced) { 
        obj['parking'] = parking;
        obj['reduced'] = reduced;
        obj['reduced_alt'] = reducedAlt;
        obj['standard'] = standard;
        obj['super_reduced'] = superReduced;
    }

    /**
     * Constructs a <code>CountryRates</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/CountryRates} obj Optional instance to populate.
     * @return {module:model/CountryRates} The populated <code>CountryRates</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new CountryRates();

            if (data.hasOwnProperty('parking')) {
                obj['parking'] = Parking.constructFromObject(data['parking']);
            }
            if (data.hasOwnProperty('reduced')) {
                obj['reduced'] = Reduced.constructFromObject(data['reduced']);
            }
            if (data.hasOwnProperty('reduced_alt')) {
                obj['reduced_alt'] = ReducedAlt.constructFromObject(data['reduced_alt']);
            }
            if (data.hasOwnProperty('standard')) {
                obj['standard'] = Standard.constructFromObject(data['standard']);
            }
            if (data.hasOwnProperty('super_reduced')) {
                obj['super_reduced'] = SuperReduced.constructFromObject(data['super_reduced']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>CountryRates</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>CountryRates</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of CountryRates.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // validate the optional field `parking`
        if (data['parking']) { // data not null
          Parking.validateJSON(data['parking']);
        }
        // validate the optional field `reduced`
        if (data['reduced']) { // data not null
          Reduced.validateJSON(data['reduced']);
        }
        // validate the optional field `reduced_alt`
        if (data['reduced_alt']) { // data not null
          ReducedAlt.validateJSON(data['reduced_alt']);
        }
        // validate the optional field `standard`
        if (data['standard']) { // data not null
          Standard.validateJSON(data['standard']);
        }
        // validate the optional field `super_reduced`
        if (data['super_reduced']) { // data not null
          SuperReduced.validateJSON(data['super_reduced']);
        }

        return true;
    }


}

CountryRates.RequiredProperties = ["parking", "reduced", "reduced_alt", "standard", "super_reduced"];

/**
 * @member {module:model/Parking} parking
 */
CountryRates.prototype['parking'] = undefined;

/**
 * @member {module:model/Reduced} reduced
 */
CountryRates.prototype['reduced'] = undefined;

/**
 * @member {module:model/ReducedAlt} reduced_alt
 */
CountryRates.prototype['reduced_alt'] = undefined;

/**
 * @member {module:model/Standard} standard
 */
CountryRates.prototype['standard'] = undefined;

/**
 * @member {module:model/SuperReduced} super_reduced
 */
CountryRates.prototype['super_reduced'] = undefined;






export default CountryRates;

