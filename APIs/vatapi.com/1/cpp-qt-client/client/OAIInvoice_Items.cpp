/**
 * VAT API
 * A developer friendly API to help your business achieve VAT compliance
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoice_Items.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoice_Items::OAIInvoice_Items(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoice_Items::OAIInvoice_Items() {
    this->initializeModel();
}

OAIInvoice_Items::~OAIInvoice_Items() {}

void OAIInvoice_Items::initializeModel() {

    m_description_isSet = false;
    m_description_isValid = false;

    m_price_each_isSet = false;
    m_price_each_isValid = false;

    m_quantity_isSet = false;
    m_quantity_isValid = false;

    m_vat_rate_isSet = false;
    m_vat_rate_isValid = false;
}

void OAIInvoice_Items::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoice_Items::fromJsonObject(QJsonObject json) {

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_price_each_isValid = ::OpenAPI::fromJsonValue(m_price_each, json[QString("price_each")]);
    m_price_each_isSet = !json[QString("price_each")].isNull() && m_price_each_isValid;

    m_quantity_isValid = ::OpenAPI::fromJsonValue(m_quantity, json[QString("quantity")]);
    m_quantity_isSet = !json[QString("quantity")].isNull() && m_quantity_isValid;

    m_vat_rate_isValid = ::OpenAPI::fromJsonValue(m_vat_rate, json[QString("vat_rate")]);
    m_vat_rate_isSet = !json[QString("vat_rate")].isNull() && m_vat_rate_isValid;
}

QString OAIInvoice_Items::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoice_Items::asJsonObject() const {
    QJsonObject obj;
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_price_each_isSet) {
        obj.insert(QString("price_each"), ::OpenAPI::toJsonValue(m_price_each));
    }
    if (m_quantity_isSet) {
        obj.insert(QString("quantity"), ::OpenAPI::toJsonValue(m_quantity));
    }
    if (m_vat_rate_isSet) {
        obj.insert(QString("vat_rate"), ::OpenAPI::toJsonValue(m_vat_rate));
    }
    return obj;
}

QString OAIInvoice_Items::getDescription() const {
    return m_description;
}
void OAIInvoice_Items::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAIInvoice_Items::is_description_Set() const{
    return m_description_isSet;
}

bool OAIInvoice_Items::is_description_Valid() const{
    return m_description_isValid;
}

qint32 OAIInvoice_Items::getPriceEach() const {
    return m_price_each;
}
void OAIInvoice_Items::setPriceEach(const qint32 &price_each) {
    m_price_each = price_each;
    m_price_each_isSet = true;
}

bool OAIInvoice_Items::is_price_each_Set() const{
    return m_price_each_isSet;
}

bool OAIInvoice_Items::is_price_each_Valid() const{
    return m_price_each_isValid;
}

qint32 OAIInvoice_Items::getQuantity() const {
    return m_quantity;
}
void OAIInvoice_Items::setQuantity(const qint32 &quantity) {
    m_quantity = quantity;
    m_quantity_isSet = true;
}

bool OAIInvoice_Items::is_quantity_Set() const{
    return m_quantity_isSet;
}

bool OAIInvoice_Items::is_quantity_Valid() const{
    return m_quantity_isValid;
}

qint32 OAIInvoice_Items::getVatRate() const {
    return m_vat_rate;
}
void OAIInvoice_Items::setVatRate(const qint32 &vat_rate) {
    m_vat_rate = vat_rate;
    m_vat_rate_isSet = true;
}

bool OAIInvoice_Items::is_vat_rate_Set() const{
    return m_vat_rate_isSet;
}

bool OAIInvoice_Items::is_vat_rate_Valid() const{
    return m_vat_rate_isValid;
}

bool OAIInvoice_Items::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_price_each_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quantity_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_rate_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoice_Items::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_description_isValid && m_price_each_isValid && m_quantity_isValid && m_vat_rate_isValid && true;
}

} // namespace OpenAPI
