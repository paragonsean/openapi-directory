/**
 * VAT API
 * A developer friendly API to help your business achieve VAT compliance
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConvert_Price.h
 *
 * 
 */

#ifndef OAIConvert_Price_H
#define OAIConvert_Price_H

#include <QJsonObject>

#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIConvert_Price : public OAIObject {
public:
    OAIConvert_Price();
    OAIConvert_Price(QString json);
    ~OAIConvert_Price() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getCountryCode() const;
    void setCountryCode(const QString &country_code);
    bool is_country_code_Set() const;
    bool is_country_code_Valid() const;

    QString getCountryRate() const;
    void setCountryRate(const QString &country_rate);
    bool is_country_rate_Set() const;
    bool is_country_rate_Valid() const;

    qint32 getPriceExclVat() const;
    void setPriceExclVat(const qint32 &price_excl_vat);
    bool is_price_excl_vat_Set() const;
    bool is_price_excl_vat_Valid() const;

    qint32 getPriceInclVat() const;
    void setPriceInclVat(const qint32 &price_incl_vat);
    bool is_price_incl_vat_Set() const;
    bool is_price_incl_vat_Valid() const;

    qint32 getRate() const;
    void setRate(const qint32 &rate);
    bool is_rate_Set() const;
    bool is_rate_Valid() const;

    qint32 getStatus() const;
    void setStatus(const qint32 &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    qint32 getVat() const;
    void setVat(const qint32 &vat);
    bool is_vat_Set() const;
    bool is_vat_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_country_code;
    bool m_country_code_isSet;
    bool m_country_code_isValid;

    QString m_country_rate;
    bool m_country_rate_isSet;
    bool m_country_rate_isValid;

    qint32 m_price_excl_vat;
    bool m_price_excl_vat_isSet;
    bool m_price_excl_vat_isValid;

    qint32 m_price_incl_vat;
    bool m_price_incl_vat_isSet;
    bool m_price_incl_vat_isValid;

    qint32 m_rate;
    bool m_rate_isSet;
    bool m_rate_isValid;

    qint32 m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    qint32 m_vat;
    bool m_vat_isSet;
    bool m_vat_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConvert_Price)

#endif // OAIConvert_Price_H
