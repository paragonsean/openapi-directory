/**
 * VAT API
 * A developer friendly API to help your business achieve VAT compliance
 *
 * The version of the OpenAPI document: 1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIInvoice_Array.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIInvoice_Array::OAIInvoice_Array(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIInvoice_Array::OAIInvoice_Array() {
    this->initializeModel();
}

OAIInvoice_Array::~OAIInvoice_Array() {}

void OAIInvoice_Array::initializeModel() {

    m_business_address_isSet = false;
    m_business_address_isValid = false;

    m_business_name_isSet = false;
    m_business_name_isValid = false;

    m_conversion_rate_isSet = false;
    m_conversion_rate_isValid = false;

    m_currency_code_isSet = false;
    m_currency_code_isValid = false;

    m_currency_code_conversion_isSet = false;
    m_currency_code_conversion_isValid = false;

    m_customer_address_isSet = false;
    m_customer_address_isValid = false;

    m_customer_name_isSet = false;
    m_customer_name_isValid = false;

    m_customer_vat_number_isSet = false;
    m_customer_vat_number_isValid = false;

    m_date_isSet = false;
    m_date_isValid = false;

    m_discount_rate_isSet = false;
    m_discount_rate_isValid = false;

    m_discount_total_isSet = false;
    m_discount_total_isValid = false;

    m_invoice_number_isSet = false;
    m_invoice_number_isValid = false;

    m_invoice_url_isSet = false;
    m_invoice_url_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_logo_url_isSet = false;
    m_logo_url_isValid = false;

    m_notes_isSet = false;
    m_notes_isValid = false;

    m_subtotal_isSet = false;
    m_subtotal_isValid = false;

    m_tax_point_isSet = false;
    m_tax_point_isValid = false;

    m_total_isSet = false;
    m_total_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;

    m_vat_number_isSet = false;
    m_vat_number_isValid = false;

    m_vat_total_isSet = false;
    m_vat_total_isValid = false;
}

void OAIInvoice_Array::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIInvoice_Array::fromJsonObject(QJsonObject json) {

    m_business_address_isValid = ::OpenAPI::fromJsonValue(m_business_address, json[QString("business_address")]);
    m_business_address_isSet = !json[QString("business_address")].isNull() && m_business_address_isValid;

    m_business_name_isValid = ::OpenAPI::fromJsonValue(m_business_name, json[QString("business_name")]);
    m_business_name_isSet = !json[QString("business_name")].isNull() && m_business_name_isValid;

    m_conversion_rate_isValid = ::OpenAPI::fromJsonValue(m_conversion_rate, json[QString("conversion_rate")]);
    m_conversion_rate_isSet = !json[QString("conversion_rate")].isNull() && m_conversion_rate_isValid;

    m_currency_code_isValid = ::OpenAPI::fromJsonValue(m_currency_code, json[QString("currency_code")]);
    m_currency_code_isSet = !json[QString("currency_code")].isNull() && m_currency_code_isValid;

    m_currency_code_conversion_isValid = ::OpenAPI::fromJsonValue(m_currency_code_conversion, json[QString("currency_code_conversion")]);
    m_currency_code_conversion_isSet = !json[QString("currency_code_conversion")].isNull() && m_currency_code_conversion_isValid;

    m_customer_address_isValid = ::OpenAPI::fromJsonValue(m_customer_address, json[QString("customer_address")]);
    m_customer_address_isSet = !json[QString("customer_address")].isNull() && m_customer_address_isValid;

    m_customer_name_isValid = ::OpenAPI::fromJsonValue(m_customer_name, json[QString("customer_name")]);
    m_customer_name_isSet = !json[QString("customer_name")].isNull() && m_customer_name_isValid;

    m_customer_vat_number_isValid = ::OpenAPI::fromJsonValue(m_customer_vat_number, json[QString("customer_vat_number")]);
    m_customer_vat_number_isSet = !json[QString("customer_vat_number")].isNull() && m_customer_vat_number_isValid;

    m_date_isValid = ::OpenAPI::fromJsonValue(m_date, json[QString("date")]);
    m_date_isSet = !json[QString("date")].isNull() && m_date_isValid;

    m_discount_rate_isValid = ::OpenAPI::fromJsonValue(m_discount_rate, json[QString("discount_rate")]);
    m_discount_rate_isSet = !json[QString("discount_rate")].isNull() && m_discount_rate_isValid;

    m_discount_total_isValid = ::OpenAPI::fromJsonValue(m_discount_total, json[QString("discount_total")]);
    m_discount_total_isSet = !json[QString("discount_total")].isNull() && m_discount_total_isValid;

    m_invoice_number_isValid = ::OpenAPI::fromJsonValue(m_invoice_number, json[QString("invoice_number")]);
    m_invoice_number_isSet = !json[QString("invoice_number")].isNull() && m_invoice_number_isValid;

    m_invoice_url_isValid = ::OpenAPI::fromJsonValue(m_invoice_url, json[QString("invoice_url")]);
    m_invoice_url_isSet = !json[QString("invoice_url")].isNull() && m_invoice_url_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("items")]);
    m_items_isSet = !json[QString("items")].isNull() && m_items_isValid;

    m_logo_url_isValid = ::OpenAPI::fromJsonValue(m_logo_url, json[QString("logo_url")]);
    m_logo_url_isSet = !json[QString("logo_url")].isNull() && m_logo_url_isValid;

    m_notes_isValid = ::OpenAPI::fromJsonValue(m_notes, json[QString("notes")]);
    m_notes_isSet = !json[QString("notes")].isNull() && m_notes_isValid;

    m_subtotal_isValid = ::OpenAPI::fromJsonValue(m_subtotal, json[QString("subtotal")]);
    m_subtotal_isSet = !json[QString("subtotal")].isNull() && m_subtotal_isValid;

    m_tax_point_isValid = ::OpenAPI::fromJsonValue(m_tax_point, json[QString("tax_point")]);
    m_tax_point_isSet = !json[QString("tax_point")].isNull() && m_tax_point_isValid;

    m_total_isValid = ::OpenAPI::fromJsonValue(m_total, json[QString("total")]);
    m_total_isSet = !json[QString("total")].isNull() && m_total_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;

    m_vat_number_isValid = ::OpenAPI::fromJsonValue(m_vat_number, json[QString("vat_number")]);
    m_vat_number_isSet = !json[QString("vat_number")].isNull() && m_vat_number_isValid;

    m_vat_total_isValid = ::OpenAPI::fromJsonValue(m_vat_total, json[QString("vat_total")]);
    m_vat_total_isSet = !json[QString("vat_total")].isNull() && m_vat_total_isValid;
}

QString OAIInvoice_Array::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIInvoice_Array::asJsonObject() const {
    QJsonObject obj;
    if (m_business_address_isSet) {
        obj.insert(QString("business_address"), ::OpenAPI::toJsonValue(m_business_address));
    }
    if (m_business_name_isSet) {
        obj.insert(QString("business_name"), ::OpenAPI::toJsonValue(m_business_name));
    }
    if (m_conversion_rate_isSet) {
        obj.insert(QString("conversion_rate"), ::OpenAPI::toJsonValue(m_conversion_rate));
    }
    if (m_currency_code_isSet) {
        obj.insert(QString("currency_code"), ::OpenAPI::toJsonValue(m_currency_code));
    }
    if (m_currency_code_conversion_isSet) {
        obj.insert(QString("currency_code_conversion"), ::OpenAPI::toJsonValue(m_currency_code_conversion));
    }
    if (m_customer_address_isSet) {
        obj.insert(QString("customer_address"), ::OpenAPI::toJsonValue(m_customer_address));
    }
    if (m_customer_name_isSet) {
        obj.insert(QString("customer_name"), ::OpenAPI::toJsonValue(m_customer_name));
    }
    if (m_customer_vat_number_isSet) {
        obj.insert(QString("customer_vat_number"), ::OpenAPI::toJsonValue(m_customer_vat_number));
    }
    if (m_date_isSet) {
        obj.insert(QString("date"), ::OpenAPI::toJsonValue(m_date));
    }
    if (m_discount_rate_isSet) {
        obj.insert(QString("discount_rate"), ::OpenAPI::toJsonValue(m_discount_rate));
    }
    if (m_discount_total_isSet) {
        obj.insert(QString("discount_total"), ::OpenAPI::toJsonValue(m_discount_total));
    }
    if (m_invoice_number_isSet) {
        obj.insert(QString("invoice_number"), ::OpenAPI::toJsonValue(m_invoice_number));
    }
    if (m_invoice_url_isSet) {
        obj.insert(QString("invoice_url"), ::OpenAPI::toJsonValue(m_invoice_url));
    }
    if (m_items.size() > 0) {
        obj.insert(QString("items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_logo_url_isSet) {
        obj.insert(QString("logo_url"), ::OpenAPI::toJsonValue(m_logo_url));
    }
    if (m_notes_isSet) {
        obj.insert(QString("notes"), ::OpenAPI::toJsonValue(m_notes));
    }
    if (m_subtotal_isSet) {
        obj.insert(QString("subtotal"), ::OpenAPI::toJsonValue(m_subtotal));
    }
    if (m_tax_point_isSet) {
        obj.insert(QString("tax_point"), ::OpenAPI::toJsonValue(m_tax_point));
    }
    if (m_total_isSet) {
        obj.insert(QString("total"), ::OpenAPI::toJsonValue(m_total));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    if (m_vat_number_isSet) {
        obj.insert(QString("vat_number"), ::OpenAPI::toJsonValue(m_vat_number));
    }
    if (m_vat_total_isSet) {
        obj.insert(QString("vat_total"), ::OpenAPI::toJsonValue(m_vat_total));
    }
    return obj;
}

QString OAIInvoice_Array::getBusinessAddress() const {
    return m_business_address;
}
void OAIInvoice_Array::setBusinessAddress(const QString &business_address) {
    m_business_address = business_address;
    m_business_address_isSet = true;
}

bool OAIInvoice_Array::is_business_address_Set() const{
    return m_business_address_isSet;
}

bool OAIInvoice_Array::is_business_address_Valid() const{
    return m_business_address_isValid;
}

QString OAIInvoice_Array::getBusinessName() const {
    return m_business_name;
}
void OAIInvoice_Array::setBusinessName(const QString &business_name) {
    m_business_name = business_name;
    m_business_name_isSet = true;
}

bool OAIInvoice_Array::is_business_name_Set() const{
    return m_business_name_isSet;
}

bool OAIInvoice_Array::is_business_name_Valid() const{
    return m_business_name_isValid;
}

qint32 OAIInvoice_Array::getConversionRate() const {
    return m_conversion_rate;
}
void OAIInvoice_Array::setConversionRate(const qint32 &conversion_rate) {
    m_conversion_rate = conversion_rate;
    m_conversion_rate_isSet = true;
}

bool OAIInvoice_Array::is_conversion_rate_Set() const{
    return m_conversion_rate_isSet;
}

bool OAIInvoice_Array::is_conversion_rate_Valid() const{
    return m_conversion_rate_isValid;
}

QString OAIInvoice_Array::getCurrencyCode() const {
    return m_currency_code;
}
void OAIInvoice_Array::setCurrencyCode(const QString &currency_code) {
    m_currency_code = currency_code;
    m_currency_code_isSet = true;
}

bool OAIInvoice_Array::is_currency_code_Set() const{
    return m_currency_code_isSet;
}

bool OAIInvoice_Array::is_currency_code_Valid() const{
    return m_currency_code_isValid;
}

QString OAIInvoice_Array::getCurrencyCodeConversion() const {
    return m_currency_code_conversion;
}
void OAIInvoice_Array::setCurrencyCodeConversion(const QString &currency_code_conversion) {
    m_currency_code_conversion = currency_code_conversion;
    m_currency_code_conversion_isSet = true;
}

bool OAIInvoice_Array::is_currency_code_conversion_Set() const{
    return m_currency_code_conversion_isSet;
}

bool OAIInvoice_Array::is_currency_code_conversion_Valid() const{
    return m_currency_code_conversion_isValid;
}

QString OAIInvoice_Array::getCustomerAddress() const {
    return m_customer_address;
}
void OAIInvoice_Array::setCustomerAddress(const QString &customer_address) {
    m_customer_address = customer_address;
    m_customer_address_isSet = true;
}

bool OAIInvoice_Array::is_customer_address_Set() const{
    return m_customer_address_isSet;
}

bool OAIInvoice_Array::is_customer_address_Valid() const{
    return m_customer_address_isValid;
}

QString OAIInvoice_Array::getCustomerName() const {
    return m_customer_name;
}
void OAIInvoice_Array::setCustomerName(const QString &customer_name) {
    m_customer_name = customer_name;
    m_customer_name_isSet = true;
}

bool OAIInvoice_Array::is_customer_name_Set() const{
    return m_customer_name_isSet;
}

bool OAIInvoice_Array::is_customer_name_Valid() const{
    return m_customer_name_isValid;
}

QString OAIInvoice_Array::getCustomerVatNumber() const {
    return m_customer_vat_number;
}
void OAIInvoice_Array::setCustomerVatNumber(const QString &customer_vat_number) {
    m_customer_vat_number = customer_vat_number;
    m_customer_vat_number_isSet = true;
}

bool OAIInvoice_Array::is_customer_vat_number_Set() const{
    return m_customer_vat_number_isSet;
}

bool OAIInvoice_Array::is_customer_vat_number_Valid() const{
    return m_customer_vat_number_isValid;
}

QString OAIInvoice_Array::getDate() const {
    return m_date;
}
void OAIInvoice_Array::setDate(const QString &date) {
    m_date = date;
    m_date_isSet = true;
}

bool OAIInvoice_Array::is_date_Set() const{
    return m_date_isSet;
}

bool OAIInvoice_Array::is_date_Valid() const{
    return m_date_isValid;
}

qint32 OAIInvoice_Array::getDiscountRate() const {
    return m_discount_rate;
}
void OAIInvoice_Array::setDiscountRate(const qint32 &discount_rate) {
    m_discount_rate = discount_rate;
    m_discount_rate_isSet = true;
}

bool OAIInvoice_Array::is_discount_rate_Set() const{
    return m_discount_rate_isSet;
}

bool OAIInvoice_Array::is_discount_rate_Valid() const{
    return m_discount_rate_isValid;
}

qint32 OAIInvoice_Array::getDiscountTotal() const {
    return m_discount_total;
}
void OAIInvoice_Array::setDiscountTotal(const qint32 &discount_total) {
    m_discount_total = discount_total;
    m_discount_total_isSet = true;
}

bool OAIInvoice_Array::is_discount_total_Set() const{
    return m_discount_total_isSet;
}

bool OAIInvoice_Array::is_discount_total_Valid() const{
    return m_discount_total_isValid;
}

qint32 OAIInvoice_Array::getInvoiceNumber() const {
    return m_invoice_number;
}
void OAIInvoice_Array::setInvoiceNumber(const qint32 &invoice_number) {
    m_invoice_number = invoice_number;
    m_invoice_number_isSet = true;
}

bool OAIInvoice_Array::is_invoice_number_Set() const{
    return m_invoice_number_isSet;
}

bool OAIInvoice_Array::is_invoice_number_Valid() const{
    return m_invoice_number_isValid;
}

QString OAIInvoice_Array::getInvoiceUrl() const {
    return m_invoice_url;
}
void OAIInvoice_Array::setInvoiceUrl(const QString &invoice_url) {
    m_invoice_url = invoice_url;
    m_invoice_url_isSet = true;
}

bool OAIInvoice_Array::is_invoice_url_Set() const{
    return m_invoice_url_isSet;
}

bool OAIInvoice_Array::is_invoice_url_Valid() const{
    return m_invoice_url_isValid;
}

QList<OAIInvoice_Items> OAIInvoice_Array::getItems() const {
    return m_items;
}
void OAIInvoice_Array::setItems(const QList<OAIInvoice_Items> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIInvoice_Array::is_items_Set() const{
    return m_items_isSet;
}

bool OAIInvoice_Array::is_items_Valid() const{
    return m_items_isValid;
}

QString OAIInvoice_Array::getLogoUrl() const {
    return m_logo_url;
}
void OAIInvoice_Array::setLogoUrl(const QString &logo_url) {
    m_logo_url = logo_url;
    m_logo_url_isSet = true;
}

bool OAIInvoice_Array::is_logo_url_Set() const{
    return m_logo_url_isSet;
}

bool OAIInvoice_Array::is_logo_url_Valid() const{
    return m_logo_url_isValid;
}

QString OAIInvoice_Array::getNotes() const {
    return m_notes;
}
void OAIInvoice_Array::setNotes(const QString &notes) {
    m_notes = notes;
    m_notes_isSet = true;
}

bool OAIInvoice_Array::is_notes_Set() const{
    return m_notes_isSet;
}

bool OAIInvoice_Array::is_notes_Valid() const{
    return m_notes_isValid;
}

qint32 OAIInvoice_Array::getSubtotal() const {
    return m_subtotal;
}
void OAIInvoice_Array::setSubtotal(const qint32 &subtotal) {
    m_subtotal = subtotal;
    m_subtotal_isSet = true;
}

bool OAIInvoice_Array::is_subtotal_Set() const{
    return m_subtotal_isSet;
}

bool OAIInvoice_Array::is_subtotal_Valid() const{
    return m_subtotal_isValid;
}

QString OAIInvoice_Array::getTaxPoint() const {
    return m_tax_point;
}
void OAIInvoice_Array::setTaxPoint(const QString &tax_point) {
    m_tax_point = tax_point;
    m_tax_point_isSet = true;
}

bool OAIInvoice_Array::is_tax_point_Set() const{
    return m_tax_point_isSet;
}

bool OAIInvoice_Array::is_tax_point_Valid() const{
    return m_tax_point_isValid;
}

qint32 OAIInvoice_Array::getTotal() const {
    return m_total;
}
void OAIInvoice_Array::setTotal(const qint32 &total) {
    m_total = total;
    m_total_isSet = true;
}

bool OAIInvoice_Array::is_total_Set() const{
    return m_total_isSet;
}

bool OAIInvoice_Array::is_total_Valid() const{
    return m_total_isValid;
}

QString OAIInvoice_Array::getType() const {
    return m_type;
}
void OAIInvoice_Array::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAIInvoice_Array::is_type_Set() const{
    return m_type_isSet;
}

bool OAIInvoice_Array::is_type_Valid() const{
    return m_type_isValid;
}

QString OAIInvoice_Array::getVatNumber() const {
    return m_vat_number;
}
void OAIInvoice_Array::setVatNumber(const QString &vat_number) {
    m_vat_number = vat_number;
    m_vat_number_isSet = true;
}

bool OAIInvoice_Array::is_vat_number_Set() const{
    return m_vat_number_isSet;
}

bool OAIInvoice_Array::is_vat_number_Valid() const{
    return m_vat_number_isValid;
}

qint32 OAIInvoice_Array::getVatTotal() const {
    return m_vat_total;
}
void OAIInvoice_Array::setVatTotal(const qint32 &vat_total) {
    m_vat_total = vat_total;
    m_vat_total_isSet = true;
}

bool OAIInvoice_Array::is_vat_total_Set() const{
    return m_vat_total_isSet;
}

bool OAIInvoice_Array::is_vat_total_Valid() const{
    return m_vat_total_isValid;
}

bool OAIInvoice_Array::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_business_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_business_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_conversion_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_currency_code_conversion_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_address_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_vat_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_date_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_rate_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_invoice_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_logo_url_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_notes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtotal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_point_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_vat_total_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIInvoice_Array::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_business_address_isValid && m_business_name_isValid && m_currency_code_isValid && m_date_isValid && m_discount_total_isValid && m_invoice_number_isValid && m_invoice_url_isValid && m_items_isValid && m_subtotal_isValid && m_tax_point_isValid && m_total_isValid && m_type_isValid && m_vat_number_isValid && m_vat_total_isValid && true;
}

} // namespace OpenAPI
