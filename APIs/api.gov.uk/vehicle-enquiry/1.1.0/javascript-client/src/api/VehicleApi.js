/**
 * Vehicle Enquiry API
 * Interface specification for the DVLA Vehicle Enquiry API
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: DvlaAPIAccess@dvla.gov.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ErrorResponse from '../model/ErrorResponse';
import Vehicle from '../model/Vehicle';
import VehicleRequest from '../model/VehicleRequest';

/**
* Vehicle service.
* @module api/VehicleApi
* @version 1.1.0
*/
export default class VehicleApi {

    /**
    * Constructs a new VehicleApi. 
    * @alias module:api/VehicleApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the getVehicleDetailsByRegistrationNumber operation.
     * @callback module:api/VehicleApi~getVehicleDetailsByRegistrationNumberCallback
     * @param {String} error Error message, if any.
     * @param {module:model/Vehicle} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Get vehicle details by registration number
     * Returns vehicle details based on registration number
     * @param {String} xApiKey Client Specific API Key
     * @param {module:model/VehicleRequest} vehicleRequest Registration number of the vehicle to find details for
     * @param {Object} opts Optional parameters
     * @param {String} [xCorrelationId] Consumer Correlation ID
     * @param {module:api/VehicleApi~getVehicleDetailsByRegistrationNumberCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/Vehicle}
     */
    getVehicleDetailsByRegistrationNumber(xApiKey, vehicleRequest, opts, callback) {
      opts = opts || {};
      let postBody = vehicleRequest;
      // verify the required parameter 'xApiKey' is set
      if (xApiKey === undefined || xApiKey === null) {
        throw new Error("Missing the required parameter 'xApiKey' when calling getVehicleDetailsByRegistrationNumber");
      }
      // verify the required parameter 'vehicleRequest' is set
      if (vehicleRequest === undefined || vehicleRequest === null) {
        throw new Error("Missing the required parameter 'vehicleRequest' when calling getVehicleDetailsByRegistrationNumber");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
        'x-api-key': xApiKey,
        'X-Correlation-Id': opts['xCorrelationId']
      };
      let formParams = {
      };

      let authNames = [];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = Vehicle;
      return this.apiClient.callApi(
        '/v1/vehicles', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
