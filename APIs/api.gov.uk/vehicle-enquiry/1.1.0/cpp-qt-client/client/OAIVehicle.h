/**
 * Vehicle Enquiry API
 * Interface specification for the DVLA Vehicle Enquiry API
 *
 * The version of the OpenAPI document: 1.1.0
 * Contact: DvlaAPIAccess@dvla.gov.uk
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIVehicle.h
 *
 * 
 */

#ifndef OAIVehicle_H
#define OAIVehicle_H

#include <QJsonObject>

#include <QDate>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIVehicle : public OAIObject {
public:
    OAIVehicle();
    OAIVehicle(QString json);
    ~OAIVehicle() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QDate getArtEndDate() const;
    void setArtEndDate(const QDate &art_end_date);
    bool is_art_end_date_Set() const;
    bool is_art_end_date_Valid() const;

    qint32 getCo2Emissions() const;
    void setCo2Emissions(const qint32 &co2_emissions);
    bool is_co2_emissions_Set() const;
    bool is_co2_emissions_Valid() const;

    QString getColour() const;
    void setColour(const QString &colour);
    bool is_colour_Set() const;
    bool is_colour_Valid() const;

    QDate getDateOfLastV5CIssued() const;
    void setDateOfLastV5CIssued(const QDate &date_of_last_v5_c_issued);
    bool is_date_of_last_v5_c_issued_Set() const;
    bool is_date_of_last_v5_c_issued_Valid() const;

    qint32 getEngineCapacity() const;
    void setEngineCapacity(const qint32 &engine_capacity);
    bool is_engine_capacity_Set() const;
    bool is_engine_capacity_Valid() const;

    QString getEuroStatus() const;
    void setEuroStatus(const QString &euro_status);
    bool is_euro_status_Set() const;
    bool is_euro_status_Valid() const;

    QString getFuelType() const;
    void setFuelType(const QString &fuel_type);
    bool is_fuel_type_Set() const;
    bool is_fuel_type_Valid() const;

    QString getMake() const;
    void setMake(const QString &make);
    bool is_make_Set() const;
    bool is_make_Valid() const;

    bool isMarkedForExport() const;
    void setMarkedForExport(const bool &marked_for_export);
    bool is_marked_for_export_Set() const;
    bool is_marked_for_export_Valid() const;

    QDate getMonthOfFirstDvlaRegistration() const;
    void setMonthOfFirstDvlaRegistration(const QDate &month_of_first_dvla_registration);
    bool is_month_of_first_dvla_registration_Set() const;
    bool is_month_of_first_dvla_registration_Valid() const;

    QDate getMonthOfFirstRegistration() const;
    void setMonthOfFirstRegistration(const QDate &month_of_first_registration);
    bool is_month_of_first_registration_Set() const;
    bool is_month_of_first_registration_Valid() const;

    QDate getMotExpiryDate() const;
    void setMotExpiryDate(const QDate &mot_expiry_date);
    bool is_mot_expiry_date_Set() const;
    bool is_mot_expiry_date_Valid() const;

    QString getMotStatus() const;
    void setMotStatus(const QString &mot_status);
    bool is_mot_status_Set() const;
    bool is_mot_status_Valid() const;

    QString getRealDrivingEmissions() const;
    void setRealDrivingEmissions(const QString &real_driving_emissions);
    bool is_real_driving_emissions_Set() const;
    bool is_real_driving_emissions_Valid() const;

    QString getRegistrationNumber() const;
    void setRegistrationNumber(const QString &registration_number);
    bool is_registration_number_Set() const;
    bool is_registration_number_Valid() const;

    qint32 getRevenueWeight() const;
    void setRevenueWeight(const qint32 &revenue_weight);
    bool is_revenue_weight_Set() const;
    bool is_revenue_weight_Valid() const;

    QDate getTaxDueDate() const;
    void setTaxDueDate(const QDate &tax_due_date);
    bool is_tax_due_date_Set() const;
    bool is_tax_due_date_Valid() const;

    QString getTaxStatus() const;
    void setTaxStatus(const QString &tax_status);
    bool is_tax_status_Set() const;
    bool is_tax_status_Valid() const;

    QString getTypeApproval() const;
    void setTypeApproval(const QString &type_approval);
    bool is_type_approval_Set() const;
    bool is_type_approval_Valid() const;

    QString getWheelplan() const;
    void setWheelplan(const QString &wheelplan);
    bool is_wheelplan_Set() const;
    bool is_wheelplan_Valid() const;

    qint32 getYearOfManufacture() const;
    void setYearOfManufacture(const qint32 &year_of_manufacture);
    bool is_year_of_manufacture_Set() const;
    bool is_year_of_manufacture_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QDate m_art_end_date;
    bool m_art_end_date_isSet;
    bool m_art_end_date_isValid;

    qint32 m_co2_emissions;
    bool m_co2_emissions_isSet;
    bool m_co2_emissions_isValid;

    QString m_colour;
    bool m_colour_isSet;
    bool m_colour_isValid;

    QDate m_date_of_last_v5_c_issued;
    bool m_date_of_last_v5_c_issued_isSet;
    bool m_date_of_last_v5_c_issued_isValid;

    qint32 m_engine_capacity;
    bool m_engine_capacity_isSet;
    bool m_engine_capacity_isValid;

    QString m_euro_status;
    bool m_euro_status_isSet;
    bool m_euro_status_isValid;

    QString m_fuel_type;
    bool m_fuel_type_isSet;
    bool m_fuel_type_isValid;

    QString m_make;
    bool m_make_isSet;
    bool m_make_isValid;

    bool m_marked_for_export;
    bool m_marked_for_export_isSet;
    bool m_marked_for_export_isValid;

    QDate m_month_of_first_dvla_registration;
    bool m_month_of_first_dvla_registration_isSet;
    bool m_month_of_first_dvla_registration_isValid;

    QDate m_month_of_first_registration;
    bool m_month_of_first_registration_isSet;
    bool m_month_of_first_registration_isValid;

    QDate m_mot_expiry_date;
    bool m_mot_expiry_date_isSet;
    bool m_mot_expiry_date_isValid;

    QString m_mot_status;
    bool m_mot_status_isSet;
    bool m_mot_status_isValid;

    QString m_real_driving_emissions;
    bool m_real_driving_emissions_isSet;
    bool m_real_driving_emissions_isValid;

    QString m_registration_number;
    bool m_registration_number_isSet;
    bool m_registration_number_isValid;

    qint32 m_revenue_weight;
    bool m_revenue_weight_isSet;
    bool m_revenue_weight_isValid;

    QDate m_tax_due_date;
    bool m_tax_due_date_isSet;
    bool m_tax_due_date_isValid;

    QString m_tax_status;
    bool m_tax_status_isSet;
    bool m_tax_status_isValid;

    QString m_type_approval;
    bool m_type_approval_isSet;
    bool m_type_approval_isValid;

    QString m_wheelplan;
    bool m_wheelplan_isSet;
    bool m_wheelplan_isValid;

    qint32 m_year_of_manufacture;
    bool m_year_of_manufacture_isSet;
    bool m_year_of_manufacture_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIVehicle)

#endif // OAIVehicle_H
