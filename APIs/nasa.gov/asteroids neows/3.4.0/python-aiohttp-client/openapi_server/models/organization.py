# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class Organization(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, acronym: str=None, city: str=None, name: str=None, state: str=None):
        """Organization - a model defined in OpenAPI

        :param acronym: The acronym of this Organization.
        :param city: The city of this Organization.
        :param name: The name of this Organization.
        :param state: The state of this Organization.
        """
        self.openapi_types = {
            'acronym': str,
            'city': str,
            'name': str,
            'state': str
        }

        self.attribute_map = {
            'acronym': 'acronym',
            'city': 'city',
            'name': 'name',
            'state': 'state'
        }

        self._acronym = acronym
        self._city = city
        self._name = name
        self._state = state

    @classmethod
    def from_dict(cls, dikt: dict) -> 'Organization':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The organization of this Organization.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def acronym(self):
        """Gets the acronym of this Organization.

        The acronym of the organization.

        :return: The acronym of this Organization.
        :rtype: str
        """
        return self._acronym

    @acronym.setter
    def acronym(self, acronym):
        """Sets the acronym of this Organization.

        The acronym of the organization.

        :param acronym: The acronym of this Organization.
        :type acronym: str
        """

        self._acronym = acronym

    @property
    def city(self):
        """Gets the city of this Organization.

        The city in which the organization is located.

        :return: The city of this Organization.
        :rtype: str
        """
        return self._city

    @city.setter
    def city(self, city):
        """Sets the city of this Organization.

        The city in which the organization is located.

        :param city: The city of this Organization.
        :type city: str
        """

        self._city = city

    @property
    def name(self):
        """Gets the name of this Organization.

        The name of the organization.

        :return: The name of this Organization.
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this Organization.

        The name of the organization.

        :param name: The name of this Organization.
        :type name: str
        """

        self._name = name

    @property
    def state(self):
        """Gets the state of this Organization.

        The state in which the organization is located.

        :return: The state of this Organization.
        :rtype: str
        """
        return self._state

    @state.setter
    def state(self, state):
        """Sets the state of this Organization.

        The state in which the organization is located.

        :param state: The state of this Organization.
        :type state: str
        """

        self._state = state
