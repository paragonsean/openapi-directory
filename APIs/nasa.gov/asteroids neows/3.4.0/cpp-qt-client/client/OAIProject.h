/**
 * TechPort
 * TechPort RESTful API
 *
 * The version of the OpenAPI document: 3.4.0
 * Contact: hq-techport@mail.nasa.gov
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIProject.h
 *
 * Top-level TechPort object representing a NASA technology project and its associated data.
 */

#ifndef OAIProject_H
#define OAIProject_H

#include <QJsonObject>

#include "OAILibraryItem.h"
#include "OAIOrganization.h"
#include "OAITechnologyArea.h"
#include <QDate>
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITechnologyArea;
class OAIOrganization;
class OAILibraryItem;

class OAIProject : public OAIObject {
public:
    OAIProject();
    OAIProject(QString json);
    ~OAIProject() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAcronym() const;
    void setAcronym(const QString &acronym);
    bool is_acronym_Set() const;
    bool is_acronym_Valid() const;

    QList<OAITechnologyArea> getAdditionalTas() const;
    void setAdditionalTas(const QList<OAITechnologyArea> &additional_tas);
    bool is_additional_tas_Set() const;
    bool is_additional_tas_Valid() const;

    QString getBenefits() const;
    void setBenefits(const QString &benefits);
    bool is_benefits_Set() const;
    bool is_benefits_Valid() const;

    QList<QString> getCloseoutDocuments() const;
    void setCloseoutDocuments(const QList<QString> &closeout_documents);
    bool is_closeout_documents_Set() const;
    bool is_closeout_documents_Valid() const;

    QString getCloseoutSummary() const;
    void setCloseoutSummary(const QString &closeout_summary);
    bool is_closeout_summary_Set() const;
    bool is_closeout_summary_Valid() const;

    QList<OAIOrganization> getCoFundingPartners() const;
    void setCoFundingPartners(const QList<OAIOrganization> &co_funding_partners);
    bool is_co_funding_partners_Set() const;
    bool is_co_funding_partners_Valid() const;

    QList<QString> getCoInvestigators() const;
    void setCoInvestigators(const QList<QString> &co_investigators);
    bool is_co_investigators_Set() const;
    bool is_co_investigators_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    QList<QString> getDestinations() const;
    void setDestinations(const QList<QString> &destinations);
    bool is_destinations_Set() const;
    bool is_destinations_Valid() const;

    QString getEndDate() const;
    void setEndDate(const QString &end_date);
    bool is_end_date_Set() const;
    bool is_end_date_Valid() const;

    qint64 getId() const;
    void setId(const qint64 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QDate getLastUpdated() const;
    void setLastUpdated(const QDate &last_updated);
    bool is_last_updated_Set() const;
    bool is_last_updated_Valid() const;

    OAIOrganization getLeadOrganization() const;
    void setLeadOrganization(const OAIOrganization &lead_organization);
    bool is_lead_organization_Set() const;
    bool is_lead_organization_Valid() const;

    QList<OAILibraryItem> getLibraryItems() const;
    void setLibraryItems(const QList<OAILibraryItem> &library_items);
    bool is_library_items_Set() const;
    bool is_library_items_Valid() const;

    QList<OAITechnologyArea> getPrimaryTas() const;
    void setPrimaryTas(const QList<OAITechnologyArea> &primary_tas);
    bool is_primary_tas_Set() const;
    bool is_primary_tas_Valid() const;

    QList<QString> getPrincipalInvestigators() const;
    void setPrincipalInvestigators(const QList<QString> &principal_investigators);
    bool is_principal_investigators_Set() const;
    bool is_principal_investigators_Valid() const;

    QList<QString> getProgramDirectors() const;
    void setProgramDirectors(const QList<QString> &program_directors);
    bool is_program_directors_Set() const;
    bool is_program_directors_Valid() const;

    QList<QString> getProgramManagers() const;
    void setProgramManagers(const QList<QString> &program_managers);
    bool is_program_managers_Set() const;
    bool is_program_managers_Valid() const;

    QList<QString> getProjectManagers() const;
    void setProjectManagers(const QList<QString> &project_managers);
    bool is_project_managers_Set() const;
    bool is_project_managers_Valid() const;

    QString getResponsibleMissionDirectorateOrOffice() const;
    void setResponsibleMissionDirectorateOrOffice(const QString &responsible_mission_directorate_or_office);
    bool is_responsible_mission_directorate_or_office_Set() const;
    bool is_responsible_mission_directorate_or_office_Valid() const;

    QString getResponsibleProgram() const;
    void setResponsibleProgram(const QString &responsible_program);
    bool is_responsible_program_Set() const;
    bool is_responsible_program_Valid() const;

    QString getStartDate() const;
    void setStartDate(const QString &start_date);
    bool is_start_date_Set() const;
    bool is_start_date_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    QString getSupportedMissionType() const;
    void setSupportedMissionType(const QString &supported_mission_type);
    bool is_supported_mission_type_Set() const;
    bool is_supported_mission_type_Valid() const;

    QList<OAIOrganization> getSupportingOrganizations() const;
    void setSupportingOrganizations(const QList<OAIOrganization> &supporting_organizations);
    bool is_supporting_organizations_Set() const;
    bool is_supporting_organizations_Valid() const;

    QString getTechnologyMaturityCurrent() const;
    void setTechnologyMaturityCurrent(const QString &technology_maturity_current);
    bool is_technology_maturity_current_Set() const;
    bool is_technology_maturity_current_Valid() const;

    QString getTechnologyMaturityEnd() const;
    void setTechnologyMaturityEnd(const QString &technology_maturity_end);
    bool is_technology_maturity_end_Set() const;
    bool is_technology_maturity_end_Valid() const;

    QString getTechnologyMaturityStart() const;
    void setTechnologyMaturityStart(const QString &technology_maturity_start);
    bool is_technology_maturity_start_Set() const;
    bool is_technology_maturity_start_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getWebsite() const;
    void setWebsite(const QString &website);
    bool is_website_Set() const;
    bool is_website_Valid() const;

    QList<QString> getWorkLocations() const;
    void setWorkLocations(const QList<QString> &work_locations);
    bool is_work_locations_Set() const;
    bool is_work_locations_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_acronym;
    bool m_acronym_isSet;
    bool m_acronym_isValid;

    QList<OAITechnologyArea> m_additional_tas;
    bool m_additional_tas_isSet;
    bool m_additional_tas_isValid;

    QString m_benefits;
    bool m_benefits_isSet;
    bool m_benefits_isValid;

    QList<QString> m_closeout_documents;
    bool m_closeout_documents_isSet;
    bool m_closeout_documents_isValid;

    QString m_closeout_summary;
    bool m_closeout_summary_isSet;
    bool m_closeout_summary_isValid;

    QList<OAIOrganization> m_co_funding_partners;
    bool m_co_funding_partners_isSet;
    bool m_co_funding_partners_isValid;

    QList<QString> m_co_investigators;
    bool m_co_investigators_isSet;
    bool m_co_investigators_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    QList<QString> m_destinations;
    bool m_destinations_isSet;
    bool m_destinations_isValid;

    QString m_end_date;
    bool m_end_date_isSet;
    bool m_end_date_isValid;

    qint64 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QDate m_last_updated;
    bool m_last_updated_isSet;
    bool m_last_updated_isValid;

    OAIOrganization m_lead_organization;
    bool m_lead_organization_isSet;
    bool m_lead_organization_isValid;

    QList<OAILibraryItem> m_library_items;
    bool m_library_items_isSet;
    bool m_library_items_isValid;

    QList<OAITechnologyArea> m_primary_tas;
    bool m_primary_tas_isSet;
    bool m_primary_tas_isValid;

    QList<QString> m_principal_investigators;
    bool m_principal_investigators_isSet;
    bool m_principal_investigators_isValid;

    QList<QString> m_program_directors;
    bool m_program_directors_isSet;
    bool m_program_directors_isValid;

    QList<QString> m_program_managers;
    bool m_program_managers_isSet;
    bool m_program_managers_isValid;

    QList<QString> m_project_managers;
    bool m_project_managers_isSet;
    bool m_project_managers_isValid;

    QString m_responsible_mission_directorate_or_office;
    bool m_responsible_mission_directorate_or_office_isSet;
    bool m_responsible_mission_directorate_or_office_isValid;

    QString m_responsible_program;
    bool m_responsible_program_isSet;
    bool m_responsible_program_isValid;

    QString m_start_date;
    bool m_start_date_isSet;
    bool m_start_date_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    QString m_supported_mission_type;
    bool m_supported_mission_type_isSet;
    bool m_supported_mission_type_isValid;

    QList<OAIOrganization> m_supporting_organizations;
    bool m_supporting_organizations_isSet;
    bool m_supporting_organizations_isValid;

    QString m_technology_maturity_current;
    bool m_technology_maturity_current_isSet;
    bool m_technology_maturity_current_isValid;

    QString m_technology_maturity_end;
    bool m_technology_maturity_end_isSet;
    bool m_technology_maturity_end_isValid;

    QString m_technology_maturity_start;
    bool m_technology_maturity_start_isSet;
    bool m_technology_maturity_start_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_website;
    bool m_website_isSet;
    bool m_website_isValid;

    QList<QString> m_work_locations;
    bool m_work_locations_isSet;
    bool m_work_locations_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIProject)

#endif // OAIProject_H
