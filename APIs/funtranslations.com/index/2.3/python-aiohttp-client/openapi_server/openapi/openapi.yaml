openapi: 3.0.1
info:
  contact:
    name: Fun Translations
    url: http://funtranslations.com/
  description: "Funtranslations API gives access to the full set of translations available\
    \ at funtranslations.com so that you can integrate them in your workflow or an\
    \ app. [Click here to get details and subscribe](http://funtranslations.com/api)\
    \ . Here are the individual API links:\n\n  ## Morse code API ##\n  Morse code\
    \ conversion API on the cloud. Translate to and from Morse Code.[Click here to\
    \ subscribe](http://funtranslations.com/api/morse)\n  ## Braille API ##\n  Braille\
    \ conversion API on the cloud. Translate to Braille and get Braille results suitable\
    \ for many display types.[Click here to subscribe](http://funtranslations.com/api/braille)\
    \     \n  ## Starwars Translation API ##\n  Ever wonder how to talk like Yoda?\
    \ Well, use our API and let your APP/webpage speak like Yoda too.[Click here to\
    \ subscribe](http://funtranslations.com/api/yoda)  \n  \n  Sith Translator API.\
    \ [Click here to subscribe](http://funtranslations.com/api/sith) \n  \n  Cheunh\
    \ Translator API. [Click here to subscribe](http://funtranslations.com/api/cheunh)\
    \ \n  \n  Huttese Translator API. [Click here to subscribe](http://funtranslations.com/api/huttese)\n\
    \  \n  Mandalorian Translator API. [Click here to subscribe](http://funtranslations.com/api/mandalorian)\n\
    \  \n  Gungan Translator API. [Click here to subscribe](http://funtranslations.com/api/gungan)\n\
    \  \n  ## Pirate Speak Translation API ##\n  Ahoy, matey. Let's get those land\
    \ lubbers speak our tounge too! Our evergreen pirate speak tranlsator API.[Click\
    \ here to subscribe](http://funtranslations.com/api/pirate) \n  ## Valley Speak\
    \ Translation API ##\n  Our throwback Valspeak translations API.[Click here to\
    \ subscribe](http://funtranslations.com/api/valspeak)    \n  ## Minion Speak Translation\
    \ API ##\n  Our evil master following minion speak translations API.[Click here\
    \ to subscribe](http://funtranslations.com/api/minion)     \n"
  termsOfService: https://funtranslations.com/terms
  title: FunTranslations API
  version: "2.3"
  x-apisguru-categories:
  - text
  x-logo:
    url: https://twitter.com/funtranslate/profile_image?size=original
  x-origin:
  - format: swagger
    url: http://api.funtranslations.com/yaml/funtranslations.yaml
    version: "2.0"
  x-providerName: funtranslations.com
  x-serviceName: index
servers:
- url: http://api.funtranslations.com/
tags:
- description: Morse Code Translation API
  externalDocs:
    description: Find out more
    url: http://funtranslations.com/api/morse
  name: Morse
- description: Starwars Translation API
  externalDocs:
    description: Find out more
    url: http://funtranslations.com/api/yoda
  name: Starwars
- description: Startrek Translation API
  externalDocs:
    description: Find out more
    url: http://funtranslations.com/api/yoda
  name: Startrek
- description: Pirate Speak Translation API
  externalDocs:
    description: Find out more
    url: http://funtranslations.com/api/pirate
  name: Pirate
- description: Valley Speak Translation API
  externalDocs:
    description: Find out more
    url: http://funtranslations.com/api/valspeak
  name: Valspeak
- description: Braille Translation API
  externalDocs:
    description: Find out more
    url: http://funtranslations.com/api/braille
  name: Braille
- description: Minion Translation API
  externalDocs:
    description: Find out more
    url: http://funtranslations.com/api/minion
  name: Minion
paths:
  /translate/braille:
    get:
      description: Translate from English to Braille. This is what you use if you
        have a braille display. This API translates the English text into characters
        that a braille display understands and you can feed the translated text directly
        to the display.
      operationId: translate_braille_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                        "total": 1
                    },
                    "contents": {
                        "translated": "  ,fun ,transl,ns has \"s?+ =\r\n\"ey\"o4\r\n",
                        "text": "Fun Translations has something for everyone.",
                        "translation": {
                            "source": "english",
                            "destination": "braille display"
                        }
                    }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}    "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Braille
      x-openapi-router-controller: openapi_server.controllers.braille_controller
  /translate/braille/dots:
    get:
      description: Use this to see which dots are enabled for each Braille letters.
        This is highly educational (to see which dots are enabled) and can potentially
        drive a non braille display which works on individual dots.
      operationId: translate_braille_dots_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                        "total": 1
                    },
                    "contents": {
                        "translated": [
                            "none",
                            "none",
                            "6",
                            "124",
                            "136",
                            "1345",
                            "none",
                            "6",
                            "2345",
                            "1235",
                            "1",
                            "1345",
                            "234",
                            "123",
                            "6",
                            "1345",
                            "234",
                            "none",
                            "125",
                            "1",
                            "234",
                            "none",
                            "5",
                            "234",
                            "1456",
                            "346",
                            "none",
                            "123456",
                            "\r",
                            "\n",
                            "5",
                            "15",
                            "13456",
                            "5",
                            "135",
                            "256",
                            "\r",
                            "\n"
                        ],
                        "text": "Fun Translations has something for everyone.",
                        "translation": {
                            "source": "english",
                            "destination": "braille dots"
                        }
                    }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}        "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Braille
      x-openapi-router-controller: openapi_server.controllers.braille_controller
  /translate/braille/html:
    get:
      description: Translate from English to Braille Image characters. This is probably
        what you want to use if you are displaying braille in a browser.
      operationId: translate_braille_html_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                        "total": 1
                    },
                    "contents": {
                        "translated": [
                            "&#x2800;",
                            "&#x2800;",
                            "&#x2820;",
                            "&#x280b;",
                            "&#x2825;",
                            "&#x281d;",
                            "&#x2800;",
                            "&#x2820;",
                            "&#x281e;",
                            "&#x2817;",
                            "&#x2801;",
                            "&#x281d;",
                            "&#x280e;",
                            "&#x2807;",
                            "&#x2820;",
                            "&#x281d;",
                            "&#x280e;",
                            "&#x2800;",
                            "&#x2813;",
                            "&#x2801;",
                            "&#x280e;",
                            "&#x2800;",
                            "&#x2810;",
                            "&#x280e;",
                            "&#x2839;",
                            "&#x282c;",
                            "&#x2800;",
                            "&#x283f;",
                            "\r",
                            "\n",
                            "&#x2810;",
                            "&#x2811;",
                            "&#x283d;",
                            "&#x2810;",
                            "&#x2815;",
                            "&#x2832;",
                            "\r",
                            "\n"
                        ],
                        "text": "Fun Translations has something for everyone.",
                        "translation": {
                            "source": "english",
                            "destination": "braille html"
                        }
                    }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}                                     \
                \       "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Braille
      x-openapi-router-controller: openapi_server.controllers.braille_controller
  /translate/braille/image:
    get:
      description: Translate from English to Braille image characters. This is probably
        what you want to use if you are displaying braille in a browser.
      operationId: translate_braille_image_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                        "total": 1
                    },
                    "contents": {
                        "translated": [
                            "<img src='http://funtranslations.com/img/braille/char/00.gif' alt='char 0x2800 = &#x2800;' title='char 0x2800 = &#x2800;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/00.gif' alt='char 0x2800 = &#x2800;' title='char 0x2800 = &#x2800;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/20.gif' alt='char 0x2820 = &#x2820;' title='char 0x2820 = &#x2820;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/0b.gif' alt='char 0x280b = &#x280b;' title='char 0x280b = &#x280b;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/25.gif' alt='char 0x2825 = &#x2825;' title='char 0x2825 = &#x2825;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/1d.gif' alt='char 0x281d = &#x281d;' title='char 0x281d = &#x281d;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/00.gif' alt='char 0x2800 = &#x2800;' title='char 0x2800 = &#x2800;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/20.gif' alt='char 0x2820 = &#x2820;' title='char 0x2820 = &#x2820;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/1e.gif' alt='char 0x281e = &#x281e;' title='char 0x281e = &#x281e;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/17.gif' alt='char 0x2817 = &#x2817;' title='char 0x2817 = &#x2817;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/01.gif' alt='char 0x2801 = &#x2801;' title='char 0x2801 = &#x2801;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/1d.gif' alt='char 0x281d = &#x281d;' title='char 0x281d = &#x281d;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/0e.gif' alt='char 0x280e = &#x280e;' title='char 0x280e = &#x280e;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/07.gif' alt='char 0x2807 = &#x2807;' title='char 0x2807 = &#x2807;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/20.gif' alt='char 0x2820 = &#x2820;' title='char 0x2820 = &#x2820;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/1d.gif' alt='char 0x281d = &#x281d;' title='char 0x281d = &#x281d;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/0e.gif' alt='char 0x280e = &#x280e;' title='char 0x280e = &#x280e;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/00.gif' alt='char 0x2800 = &#x2800;' title='char 0x2800 = &#x2800;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/13.gif' alt='char 0x2813 = &#x2813;' title='char 0x2813 = &#x2813;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/01.gif' alt='char 0x2801 = &#x2801;' title='char 0x2801 = &#x2801;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/0e.gif' alt='char 0x280e = &#x280e;' title='char 0x280e = &#x280e;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/00.gif' alt='char 0x2800 = &#x2800;' title='char 0x2800 = &#x2800;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/10.gif' alt='char 0x2810 = &#x2810;' title='char 0x2810 = &#x2810;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/0e.gif' alt='char 0x280e = &#x280e;' title='char 0x280e = &#x280e;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/39.gif' alt='char 0x2839 = &#x2839;' title='char 0x2839 = &#x2839;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/2c.gif' alt='char 0x282c = &#x282c;' title='char 0x282c = &#x282c;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/00.gif' alt='char 0x2800 = &#x2800;' title='char 0x2800 = &#x2800;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/3f.gif' alt='char 0x283f = &#x283f;' title='char 0x283f = &#x283f;' class='img-braille-char'>",
                            "\r",
                            "\n",
                            "<img src='http://funtranslations.com/img/braille/char/10.gif' alt='char 0x2810 = &#x2810;' title='char 0x2810 = &#x2810;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/11.gif' alt='char 0x2811 = &#x2811;' title='char 0x2811 = &#x2811;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/3d.gif' alt='char 0x283d = &#x283d;' title='char 0x283d = &#x283d;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/10.gif' alt='char 0x2810 = &#x2810;' title='char 0x2810 = &#x2810;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/15.gif' alt='char 0x2815 = &#x2815;' title='char 0x2815 = &#x2815;' class='img-braille-char'>",
                            "<img src='http://funtranslations.com/img/braille/char/32.gif' alt='char 0x2832 = &#x2832;' title='char 0x2832 = &#x2832;' class='img-braille-char'>",
                            "\r",
                            "\n"
                        ],
                        "text": "Fun Translations has something for everyone.",
                        "translation": {
                            "source": "english",
                            "destination": "braille images"
                        }
                    }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n} "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Braille
      x-openapi-router-controller: openapi_server.controllers.braille_controller
  /translate/braille/unicode:
    get:
      description: Translate from English to Braille Unicode characters.
      operationId: translate_braille_unicode_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                        "total": 1
                    },
                    "contents": {
                        "translated": [
                            "⠀",
                            "⠀",
                            "⠠",
                            "⠋",
                            "⠥",
                            "⠝",
                            "⠀",
                            "⠠",
                            "⠞",
                            "⠗",
                            "⠁",
                            "⠝",
                            "⠎",
                            "⠇",
                            "⠠",
                            "⠝",
                            "⠎",
                            "⠀",
                            "⠓",
                            "⠁",
                            "⠎",
                            "⠀",
                            "⠐",
                            "⠎",
                            "⠹",
                            "⠬",
                            "⠀",
                            "⠿",
                            "\r",
                            "\n",
                            "⠐",
                            "⠑",
                            "⠽",
                            "⠐",
                            "⠕",
                            "⠲",
                            "\r",
                            "\n"
                        ],
                        "text": "Fun Translations has something for everyone.",
                        "translation": {
                            "source": "english",
                            "destination": "braille unicode"
                        }
                    }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}    "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Braille
      x-openapi-router-controller: openapi_server.controllers.braille_controller
  /translate/brooklyn:
    get:
      description: Translate from English to Brooklyn Speak.
      operationId: translate_brooklyn_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "Where dis is lots of love dere is lots of fightin'.",
                    "text": "Where this is lots of love there is lots of fighting.",
                    "translation": "brooklyn"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n} "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Dialect
      x-openapi-router-controller: openapi_server.controllers.dialect_controller
  /translate/chef:
    get:
      description: Translate from English to Swedish Chef speak.
      operationId: translate_chef_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "Cuokeeng is fuon vhee-a yuou du it vit a cheff. Bork, Bork, Bork!",
                    "text": "Cooking is fun when you do it with a chef",
                    "translation": "chef"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n} "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Characters
      x-openapi-router-controller: openapi_server.controllers.characters_controller
  /translate/cheunh:
    get:
      description: Translate from English to Starwars cheunh.
      operationId: translate_cheunh_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "Ch'ah went ch'at coruscant vea was bav parsec ch'itt'suvrecah!",
                    "text": "I went to coruscant which was ten parsec away!",
                    "translation": "cheunh"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}   "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Starwars
      x-openapi-router-controller: openapi_server.controllers.starwars_controller
  /translate/cockney:
    get:
      description: Translate from English to Cockney Speak.
      operationId: translate_cockney_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "I'm wee busy wiv the bleedin' bike, but I luv ter eat the chuffin' food.",
                    "text": "I'm little busy with the bike, but I love to eat the food.",
                    "translation": "cockney"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n} "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Dialect
      x-openapi-router-controller: openapi_server.controllers.dialect_controller
  /translate/dolan:
    get:
      description: Translate from English to Dolan Speak.
      operationId: translate_dolan_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "Ai hav 2 gievn prezintashun 2 ppl.",
                    "text": "I have to give a presentation to people.",
                    "translation": "dolan"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Characters
      x-openapi-router-controller: openapi_server.controllers.characters_controller
  /translate/dothraki:
    get:
      description: Translate from English to Dothraki.
      operationId: translate_dothraki_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "Hash yeri ray tih erinak’s zhavorsa?",
                    "text": "Have you seen my lady’s dragon?",
                    "translation": "dothraki"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n} "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Game Of Thrones
      x-openapi-router-controller: openapi_server.controllers.game_of_thrones_controller
  /translate/ermahgerd:
    get:
      description: Translate from English to ERMAHGERD.
      operationId: translate_ermahgerd_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": " ER MAH GERD THERS ERS GERVIN MAH GERSERBERMPS",
                    "text": "Oh my god! This is giving me goosebumps!",
                    "translation": "ermahgerd"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}                                     \
                \                                           "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Internet FAD
      x-openapi-router-controller: openapi_server.controllers.internet_fad_controller
  /translate/ferblatin:
    get:
      description: Translate from English to Ferb Latin.
      operationId: translate_ferblatin_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "ell-Werb, if by hat-terb ou-yerb ean-merb we hould-serb reate-cerb a hole-werb ew-nerb orm-ferb of ommunication-cerb, hen-terb I couldn't gree-aerb more. ",
                    "text": "Well, if by that you mean we should create a whole new form of communication, then I couldn't agree more.",
                    "translation": "ferblatin"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}            "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Characters
      x-openapi-router-controller: openapi_server.controllers.characters_controller
  /translate/fudd:
    get:
      description: Translate from English to Fudd Speak.
      operationId: translate_fudd_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "Be vewy vewy qwiet. I am hunting wabbits.",
                    "text": "Be very very quiet. I am hunting rabbits.",
                    "translation": "fudd"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}                   "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Characters
      x-openapi-router-controller: openapi_server.controllers.characters_controller
  /translate/gungan:
    get:
      description: Translate from English to Starwars Gungan Language.
      operationId: translate_gungan_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "Yousa came to mesa home and mesa said okeeday!",
                    "text": "You came to my home and I said okay!",
                    "translation": "gungan"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n} "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Starwars
      x-openapi-router-controller: openapi_server.controllers.starwars_controller
  /translate/huttese:
    get:
      description: Translate from English to Starwars Huttese Language.
      operationId: translate_huttese_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "Did u stuka doe murishani?",
                    "text": "Did you see the bounty hunter?",
                    "translation": "huttese"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Starwars
      x-openapi-router-controller: openapi_server.controllers.starwars_controller
  /translate/jive:
    get:
      description: Translate from normal English to Jive Speak.
      operationId: translate_jive_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "I likes da damn boy across de street.  Right On!",
                    "text": "I like the boy across the street!",
                    "translation": "jive"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}       "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Dialect
      x-openapi-router-controller: openapi_server.controllers.dialect_controller
  /translate/klingon:
    get:
      description: Translate from English to Startrek Klingon Language.
      operationId: translate_klingon_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "'iv do tlhih baj? Chah are going to baq tlhih.",
                    "text": "Who do you work for? They are going to terminate you.",
                    "translation": "klingon"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Startrek
      x-openapi-router-controller: openapi_server.controllers.startrek_controller
  /translate/mandalorian:
    get:
      description: Translate from English to Starwars Mandalorian Language.
      operationId: translate_mandalorian_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "Ni'd guuror a pint cuyir gal",
                    "text": "I'd like a pint of ale",
                    "translation": "mandalorian"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Starwars
      x-openapi-router-controller: openapi_server.controllers.starwars_controller
  /translate/minion:
    get:
      description: Translate from English to Minion Speak.
      operationId: translate_minion_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "Bello, ka am con a banana!",
                    "text": "Hello, I am hungry!",
                    "translation": "minion"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}     "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Characters
      x-openapi-router-controller: openapi_server.controllers.characters_controller
  /translate/morse:
    get:
      description: Translate from English to morse code.
      operationId: translate_morse_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "-- --- .-. ... .     -.-. --- -.. .     .. ...     .-     -.. .. -     .- -. -..     -.. .- .... ",
                    "text": "Morse code is a dit and dah",
                    "translation": "morse"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Morse
      x-openapi-router-controller: openapi_server.controllers.morse_controller
  /translate/morse/audio:
    get:
      description: Translate from English to morse code and get the result as an audio
        file.
      operationId: translate_morse_audio_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      - description: Audio Speed (Words/Minute)
        in: query
        name: speed
        required: true
        schema:
          format: integer
          type: integer
      - description: Audio Tone Frequency(Hz)
        in: query
        name: tone
        required: true
        schema:
          format: integer
          type: integer
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                        "total": 1
                    },
                    "contents": {
                        "translated": {
                            "audio": "data:audio/wave;base64,UklGRjiBCQBXQVZFZm1...
                        },
                        "text": "Morse code is dit and dash",
                        "speed": "5 WPM",
                        "tone": "700 Hz",
                        "translation": {
                            "source": "english",
                            "destination": "morse audio"
                        }
                    }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Morse
      x-openapi-router-controller: openapi_server.controllers.morse_controller
  /translate/morse2english:
    get:
      description: Translate from Morse code to English.
      operationId: translate_morse2english_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                    "success": {
                        "total": 1
                    },
                    "contents": {
                        "translated": "morse    code    is    a    dit    and    dah ",
                        "text": "-- --- .-. ... .     -.-. --- -.. .     .. ...     .-     -.. .. -     .- -. -..     -.. .- .... ",
                        "translation": {
                            "source": "morse",
                            "destination": "english"
                        }
                    }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Morse
      x-openapi-router-controller: openapi_server.controllers.morse_controller
  /translate/oldenglish:
    get:
      description: Translate from English to Old English.
      operationId: translate_oldenglish_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": " {Mr}. {Tim} {ate} bâm innor feorm, for ðý ðe {unfortunately} {what} swilc {ate} sw¯ær of hê oðcwelan.",
                    "text": "Mr. Tim ate a hearty meal, but unfortunately what he ate made him die.",
                    "translation": "oldenglish"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}  "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - English
      x-openapi-router-controller: openapi_server.controllers.english_controller
  /translate/piglatin:
    get:
      description: Translate from English to Pig Latin.
      operationId: translate_piglatin_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "ig-Pay atin-Lay is-way used-way in-way ools-schay o-tay each-tay anguage-lay onstructs-cay. ",
                    "text": "Pig Latin is used in schools to teach language constructs.",
                    "translation": "piglatin"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}              "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - PigLatin
      x-openapi-router-controller: openapi_server.controllers.pig_latin_controller
  /translate/pirate:
    get:
      description: Translate from English to Pirate Speak.
      operationId: translate_pirate_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "Ahoy matey, and a bottle of rum! me dear ol' mum, bless her black soul goes with me t' th' briny deep.",
                    "text": "Hello sir! my mother goes with me to the ocean.",
                    "translation": "pirate"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n} "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Characters
      x-openapi-router-controller: openapi_server.controllers.characters_controller
  /translate/quneya:
    get:
      description: Translate from English to Elvish Quenya Language.
      operationId: translate_quneya_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "Ni am Arwen - ni've túl ana help tye. Lar- mime óma. Túl at- ana i kal.",
                    "text": "I am Arwen - I've come to help you. Hear my voice... Come back to the light.",
                    "translation": "quenya"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}                       "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Elvish
      x-openapi-router-controller: openapi_server.controllers.elvish_controller
  /translate/shakespeare:
    get:
      description: Translate from English to Shakespeare English.
      operationId: translate_shakespeare_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "Thou did giveth Mr. Tim a hearty meal,  but unfortunately what he englut did maketh him kicketh the bucket.",
                    "text": "You gave Mr. Tim a hearty meal, but unfortunately what he ate made him die.",
                    "translation": "shakespeare"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n} "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - English
      x-openapi-router-controller: openapi_server.controllers.english_controller
  /translate/sindarin:
    get:
      description: Translate from English to Elvish Sindarin Language.
      operationId: translate_sindarin_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "I ambar na- changed; im tur- feel ha in i nen,  im tur- feel ha in i coe,  im tur- smell ha in i gwilith.",
                    "text": "The world is changed; I can feel it in the water, I can feel it in the earth, I can smell it in the air.",
                    "translation": "sindarin"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}  "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Elvish
      x-openapi-router-controller: openapi_server.controllers.elvish_controller
  /translate/sith:
    get:
      description: Translate from English to Sith Speak.
      operationId: translate_sith_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "Nu went kia coruscant which meo ten parsekas salini!",
                    "text": "I went to coruscant which was ten parsec away!",
                    "translation": "sith"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Starwars
      x-openapi-router-controller: openapi_server.controllers.starwars_controller
  /translate/uk2us:
    get:
      description: Translate from UK English to US English.
      operationId: translate_uk2us_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "The artifacts of the behavioral elements canceled the commercialized monotone.",
                    "text": "The artefacts of the behavioural elements cancelled the commercialised monotone.",
                    "translation": "uk2us"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}                                     \
                \    "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - English
      x-openapi-router-controller: openapi_server.controllers.english_controller
  /translate/us2uk:
    get:
      description: Translate from US English to UK English.
      operationId: translate_us2uk_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "He agonised over the ageing armoured cars.",
                    "text": "He agonized over the aging armored cars.",
                    "translation": "us2uk"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}  "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - English
      x-openapi-router-controller: openapi_server.controllers.english_controller
  /translate/valspeak:
    get:
      description: Translate from English to Valley Speak.
      operationId: translate_valspeak_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "Bitchin' Mornin'. Come on nerd, fer shure just sayin'",
                    "text": "Good Morning. Come on man, just saying!",
                    "translation": "valspeak"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n} "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Dialect
      x-openapi-router-controller: openapi_server.controllers.dialect_controller
  /translate/valyrian:
    get:
      description: Translate from English to Valyrian.
      operationId: translate_valyrian_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "Nyke Daenerys jelmāzmo hen se lentor targārien,  hen se ānogar hen uēpa valyrio. Valyrīha iksos issa muñnykeā ēngos.",
                    "text": "I am Daenerys Stormborn of the House Targaryen, of the blood of Old Valyria. Valyrian is my mother tongue.",
                    "translation": "valyrian"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: |-
                {
                    "error": {
                        "code": 401,
                        "message": "Unauthorized"
                    }
                }
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Game Of Thrones
      x-openapi-router-controller: openapi_server.controllers.game_of_thrones_controller
  /translate/vulcan:
    get:
      description: Translate from English to Startrek Vulcan Language.
      operationId: translate_vulcan_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "Lau I leralmin ik I ma ri thoroughly tizh-tor serving k' komihn? I talal ish-veh illogic heh duhik zherka wuh ek'kayik ornat.",
                    "text": "May I say that I have not thoroughly enjoyed serving with humans? I find their illogic and foolish emotions a constant irritant.",
                    "translation": "vulcan"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n}  "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Startrek
      x-openapi-router-controller: openapi_server.controllers.startrek_controller
  /translate/yoda:
    get:
      description: Translate from English to Yoda Speak.
      operationId: translate_yoda_get
      parameters:
      - description: Text to translate
        in: query
        name: text
        required: true
        schema:
          format: string
          type: string
      responses:
        "200":
          content:
            application/json:
              example: |-
                {
                  "success": {
                    "total": 1
                  },
                  "contents": {
                    "translated": "Lost a planet,  master obiwan has. ",
                    "text": "Master Obiwan has lost a planet.",
                    "translation": "yoda"
                  }
                }
          description: 200  response
        "401":
          content:
            application/json:
              example: "{\n    \"error\": {\n        \"code\": 401,\n        \"message\"\
                : \"Unauthorized\"\n    }\n} "
          description: 401  response
      security:
      - X-Funtranslations-Api-Secret: []
      tags:
      - Starwars
      x-openapi-router-controller: openapi_server.controllers.starwars_controller
components:
  schemas: {}
  securitySchemes:
    X-Funtranslations-Api-Secret:
      in: header
      name: X-Funtranslations-Api-Secret
      type: apiKey
      x-apikeyInfoFunc: openapi_server.controllers.security_controller.info_from_X-Funtranslations-Api-Secret
x-original-swagger-version: "2.0"
