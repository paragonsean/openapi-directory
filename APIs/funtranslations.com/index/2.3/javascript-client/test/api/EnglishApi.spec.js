/**
 * FunTranslations API
 * Funtranslations API gives access to the full set of translations available at funtranslations.com so that you can integrate them in your workflow or an app. [Click here to get details and subscribe](http://funtranslations.com/api) . Here are the individual API links:    ## Morse code API ##   Morse code conversion API on the cloud. Translate to and from Morse Code.[Click here to subscribe](http://funtranslations.com/api/morse)   ## Braille API ##   Braille conversion API on the cloud. Translate to Braille and get Braille results suitable for many display types.[Click here to subscribe](http://funtranslations.com/api/braille)        ## Starwars Translation API ##   Ever wonder how to talk like Yoda? Well, use our API and let your APP/webpage speak like Yoda too.[Click here to subscribe](http://funtranslations.com/api/yoda)        Sith Translator API. [Click here to subscribe](http://funtranslations.com/api/sith)       Cheunh Translator API. [Click here to subscribe](http://funtranslations.com/api/cheunh)       Huttese Translator API. [Click here to subscribe](http://funtranslations.com/api/huttese)      Mandalorian Translator API. [Click here to subscribe](http://funtranslations.com/api/mandalorian)      Gungan Translator API. [Click here to subscribe](http://funtranslations.com/api/gungan)      ## Pirate Speak Translation API ##   Ahoy, matey. Let's get those land lubbers speak our tounge too! Our evergreen pirate speak tranlsator API.[Click here to subscribe](http://funtranslations.com/api/pirate)    ## Valley Speak Translation API ##   Our throwback Valspeak translations API.[Click here to subscribe](http://funtranslations.com/api/valspeak)       ## Minion Speak Translation API ##   Our evil master following minion speak translations API.[Click here to subscribe](http://funtranslations.com/api/minion)      
 *
 * The version of the OpenAPI document: 2.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FunTranslationsApi);
  }
}(this, function(expect, FunTranslationsApi) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FunTranslationsApi.EnglishApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('EnglishApi', function() {
    describe('translateOldenglishGet', function() {
      it('should call translateOldenglishGet successfully', function(done) {
        //uncomment below and update the code to test translateOldenglishGet
        //instance.translateOldenglishGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('translateShakespeareGet', function() {
      it('should call translateShakespeareGet successfully', function(done) {
        //uncomment below and update the code to test translateShakespeareGet
        //instance.translateShakespeareGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('translateUk2usGet', function() {
      it('should call translateUk2usGet successfully', function(done) {
        //uncomment below and update the code to test translateUk2usGet
        //instance.translateUk2usGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('translateUs2ukGet', function() {
      it('should call translateUs2ukGet successfully', function(done) {
        //uncomment below and update the code to test translateUs2ukGet
        //instance.translateUs2ukGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
