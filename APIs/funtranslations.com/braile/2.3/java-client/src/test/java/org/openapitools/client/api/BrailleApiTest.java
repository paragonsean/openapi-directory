/*
 * FunTranslations Braille API
 * Braille conversion API on the cloud. Translate from English text to Braille and get Braille results suitable for many display types.[Click here to subscribe](http://funtranslations.com/api/braille)  
 *
 * The version of the OpenAPI document: 2.3
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for BrailleApi
 */
@Disabled
public class BrailleApiTest {

    private final BrailleApi api = new BrailleApi();

    /**
     * Use this to see which dots are enabled for each Braille letters. This is highly educational (to see which dots are enabled) and can potentially drive a non braille display which works on individual dots.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void translateBrailleDotsGetTest() throws ApiException {
        String text = null;
        api.translateBrailleDotsGet(text);
        // TODO: test validations
    }

    /**
     * Translate from English to Braille. This is what you use if you have a braille display. This API translates the English text into characters that a braille display understands and you can feed the translated text directly to the display.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void translateBrailleGetTest() throws ApiException {
        String text = null;
        api.translateBrailleGet(text);
        // TODO: test validations
    }

    /**
     * Translate from English to Braille Image characters. This is probably what you want to use if you are displaying braille in a browser.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void translateBrailleHtmlGetTest() throws ApiException {
        String text = null;
        api.translateBrailleHtmlGet(text);
        // TODO: test validations
    }

    /**
     * Translate from English to Braille image characters. This is probably what you want to use if you are displaying braille in a browser.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void translateBrailleImageGetTest() throws ApiException {
        String text = null;
        api.translateBrailleImageGet(text);
        // TODO: test validations
    }

    /**
     * Translate from English to Braille Unicode characters.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void translateBrailleUnicodeGetTest() throws ApiException {
        String text = null;
        api.translateBrailleUnicodeGet(text);
        // TODO: test validations
    }

}
