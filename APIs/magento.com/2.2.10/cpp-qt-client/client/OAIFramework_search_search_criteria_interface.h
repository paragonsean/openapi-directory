/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIFramework_search_search_criteria_interface.h
 *
 * Interface SearchCriteriaInterface
 */

#ifndef OAIFramework_search_search_criteria_interface_H
#define OAIFramework_search_search_criteria_interface_H

#include <QJsonObject>

#include "OAIFramework_search_filter_group.h"
#include "OAIFramework_sort_order.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFramework_search_filter_group;
class OAIFramework_sort_order;

class OAIFramework_search_search_criteria_interface : public OAIObject {
public:
    OAIFramework_search_search_criteria_interface();
    OAIFramework_search_search_criteria_interface(QString json);
    ~OAIFramework_search_search_criteria_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getCurrentPage() const;
    void setCurrentPage(const qint32 &current_page);
    bool is_current_page_Set() const;
    bool is_current_page_Valid() const;

    QList<OAIFramework_search_filter_group> getFilterGroups() const;
    void setFilterGroups(const QList<OAIFramework_search_filter_group> &filter_groups);
    bool is_filter_groups_Set() const;
    bool is_filter_groups_Valid() const;

    qint32 getPageSize() const;
    void setPageSize(const qint32 &page_size);
    bool is_page_size_Set() const;
    bool is_page_size_Valid() const;

    QString getRequestName() const;
    void setRequestName(const QString &request_name);
    bool is_request_name_Set() const;
    bool is_request_name_Valid() const;

    QList<OAIFramework_sort_order> getSortOrders() const;
    void setSortOrders(const QList<OAIFramework_sort_order> &sort_orders);
    bool is_sort_orders_Set() const;
    bool is_sort_orders_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_current_page;
    bool m_current_page_isSet;
    bool m_current_page_isValid;

    QList<OAIFramework_search_filter_group> m_filter_groups;
    bool m_filter_groups_isSet;
    bool m_filter_groups_isValid;

    qint32 m_page_size;
    bool m_page_size_isSet;
    bool m_page_size_isValid;

    QString m_request_name;
    bool m_request_name_isSet;
    bool m_request_name_isValid;

    QList<OAIFramework_sort_order> m_sort_orders;
    bool m_sort_orders_isSet;
    bool m_sort_orders_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIFramework_search_search_criteria_interface)

#endif // OAIFramework_search_search_criteria_interface_H
