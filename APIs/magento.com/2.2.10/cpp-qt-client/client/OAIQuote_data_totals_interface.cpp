/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQuote_data_totals_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQuote_data_totals_interface::OAIQuote_data_totals_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQuote_data_totals_interface::OAIQuote_data_totals_interface() {
    this->initializeModel();
}

OAIQuote_data_totals_interface::~OAIQuote_data_totals_interface() {}

void OAIQuote_data_totals_interface::initializeModel() {

    m_base_currency_code_isSet = false;
    m_base_currency_code_isValid = false;

    m_base_discount_amount_isSet = false;
    m_base_discount_amount_isValid = false;

    m_base_grand_total_isSet = false;
    m_base_grand_total_isValid = false;

    m_base_shipping_amount_isSet = false;
    m_base_shipping_amount_isValid = false;

    m_base_shipping_discount_amount_isSet = false;
    m_base_shipping_discount_amount_isValid = false;

    m_base_shipping_incl_tax_isSet = false;
    m_base_shipping_incl_tax_isValid = false;

    m_base_shipping_tax_amount_isSet = false;
    m_base_shipping_tax_amount_isValid = false;

    m_base_subtotal_isSet = false;
    m_base_subtotal_isValid = false;

    m_base_subtotal_incl_tax_isSet = false;
    m_base_subtotal_incl_tax_isValid = false;

    m_base_subtotal_with_discount_isSet = false;
    m_base_subtotal_with_discount_isValid = false;

    m_base_tax_amount_isSet = false;
    m_base_tax_amount_isValid = false;

    m_coupon_code_isSet = false;
    m_coupon_code_isValid = false;

    m_discount_amount_isSet = false;
    m_discount_amount_isValid = false;

    m_extension_attributes_isSet = false;
    m_extension_attributes_isValid = false;

    m_grand_total_isSet = false;
    m_grand_total_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_items_qty_isSet = false;
    m_items_qty_isValid = false;

    m_quote_currency_code_isSet = false;
    m_quote_currency_code_isValid = false;

    m_shipping_amount_isSet = false;
    m_shipping_amount_isValid = false;

    m_shipping_discount_amount_isSet = false;
    m_shipping_discount_amount_isValid = false;

    m_shipping_incl_tax_isSet = false;
    m_shipping_incl_tax_isValid = false;

    m_shipping_tax_amount_isSet = false;
    m_shipping_tax_amount_isValid = false;

    m_subtotal_isSet = false;
    m_subtotal_isValid = false;

    m_subtotal_incl_tax_isSet = false;
    m_subtotal_incl_tax_isValid = false;

    m_subtotal_with_discount_isSet = false;
    m_subtotal_with_discount_isValid = false;

    m_tax_amount_isSet = false;
    m_tax_amount_isValid = false;

    m_total_segments_isSet = false;
    m_total_segments_isValid = false;

    m_weee_tax_applied_amount_isSet = false;
    m_weee_tax_applied_amount_isValid = false;
}

void OAIQuote_data_totals_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQuote_data_totals_interface::fromJsonObject(QJsonObject json) {

    m_base_currency_code_isValid = ::OpenAPI::fromJsonValue(m_base_currency_code, json[QString("base_currency_code")]);
    m_base_currency_code_isSet = !json[QString("base_currency_code")].isNull() && m_base_currency_code_isValid;

    m_base_discount_amount_isValid = ::OpenAPI::fromJsonValue(m_base_discount_amount, json[QString("base_discount_amount")]);
    m_base_discount_amount_isSet = !json[QString("base_discount_amount")].isNull() && m_base_discount_amount_isValid;

    m_base_grand_total_isValid = ::OpenAPI::fromJsonValue(m_base_grand_total, json[QString("base_grand_total")]);
    m_base_grand_total_isSet = !json[QString("base_grand_total")].isNull() && m_base_grand_total_isValid;

    m_base_shipping_amount_isValid = ::OpenAPI::fromJsonValue(m_base_shipping_amount, json[QString("base_shipping_amount")]);
    m_base_shipping_amount_isSet = !json[QString("base_shipping_amount")].isNull() && m_base_shipping_amount_isValid;

    m_base_shipping_discount_amount_isValid = ::OpenAPI::fromJsonValue(m_base_shipping_discount_amount, json[QString("base_shipping_discount_amount")]);
    m_base_shipping_discount_amount_isSet = !json[QString("base_shipping_discount_amount")].isNull() && m_base_shipping_discount_amount_isValid;

    m_base_shipping_incl_tax_isValid = ::OpenAPI::fromJsonValue(m_base_shipping_incl_tax, json[QString("base_shipping_incl_tax")]);
    m_base_shipping_incl_tax_isSet = !json[QString("base_shipping_incl_tax")].isNull() && m_base_shipping_incl_tax_isValid;

    m_base_shipping_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_base_shipping_tax_amount, json[QString("base_shipping_tax_amount")]);
    m_base_shipping_tax_amount_isSet = !json[QString("base_shipping_tax_amount")].isNull() && m_base_shipping_tax_amount_isValid;

    m_base_subtotal_isValid = ::OpenAPI::fromJsonValue(m_base_subtotal, json[QString("base_subtotal")]);
    m_base_subtotal_isSet = !json[QString("base_subtotal")].isNull() && m_base_subtotal_isValid;

    m_base_subtotal_incl_tax_isValid = ::OpenAPI::fromJsonValue(m_base_subtotal_incl_tax, json[QString("base_subtotal_incl_tax")]);
    m_base_subtotal_incl_tax_isSet = !json[QString("base_subtotal_incl_tax")].isNull() && m_base_subtotal_incl_tax_isValid;

    m_base_subtotal_with_discount_isValid = ::OpenAPI::fromJsonValue(m_base_subtotal_with_discount, json[QString("base_subtotal_with_discount")]);
    m_base_subtotal_with_discount_isSet = !json[QString("base_subtotal_with_discount")].isNull() && m_base_subtotal_with_discount_isValid;

    m_base_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_base_tax_amount, json[QString("base_tax_amount")]);
    m_base_tax_amount_isSet = !json[QString("base_tax_amount")].isNull() && m_base_tax_amount_isValid;

    m_coupon_code_isValid = ::OpenAPI::fromJsonValue(m_coupon_code, json[QString("coupon_code")]);
    m_coupon_code_isSet = !json[QString("coupon_code")].isNull() && m_coupon_code_isValid;

    m_discount_amount_isValid = ::OpenAPI::fromJsonValue(m_discount_amount, json[QString("discount_amount")]);
    m_discount_amount_isSet = !json[QString("discount_amount")].isNull() && m_discount_amount_isValid;

    m_extension_attributes_isValid = ::OpenAPI::fromJsonValue(m_extension_attributes, json[QString("extension_attributes")]);
    m_extension_attributes_isSet = !json[QString("extension_attributes")].isNull() && m_extension_attributes_isValid;

    m_grand_total_isValid = ::OpenAPI::fromJsonValue(m_grand_total, json[QString("grand_total")]);
    m_grand_total_isSet = !json[QString("grand_total")].isNull() && m_grand_total_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("items")]);
    m_items_isSet = !json[QString("items")].isNull() && m_items_isValid;

    m_items_qty_isValid = ::OpenAPI::fromJsonValue(m_items_qty, json[QString("items_qty")]);
    m_items_qty_isSet = !json[QString("items_qty")].isNull() && m_items_qty_isValid;

    m_quote_currency_code_isValid = ::OpenAPI::fromJsonValue(m_quote_currency_code, json[QString("quote_currency_code")]);
    m_quote_currency_code_isSet = !json[QString("quote_currency_code")].isNull() && m_quote_currency_code_isValid;

    m_shipping_amount_isValid = ::OpenAPI::fromJsonValue(m_shipping_amount, json[QString("shipping_amount")]);
    m_shipping_amount_isSet = !json[QString("shipping_amount")].isNull() && m_shipping_amount_isValid;

    m_shipping_discount_amount_isValid = ::OpenAPI::fromJsonValue(m_shipping_discount_amount, json[QString("shipping_discount_amount")]);
    m_shipping_discount_amount_isSet = !json[QString("shipping_discount_amount")].isNull() && m_shipping_discount_amount_isValid;

    m_shipping_incl_tax_isValid = ::OpenAPI::fromJsonValue(m_shipping_incl_tax, json[QString("shipping_incl_tax")]);
    m_shipping_incl_tax_isSet = !json[QString("shipping_incl_tax")].isNull() && m_shipping_incl_tax_isValid;

    m_shipping_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_shipping_tax_amount, json[QString("shipping_tax_amount")]);
    m_shipping_tax_amount_isSet = !json[QString("shipping_tax_amount")].isNull() && m_shipping_tax_amount_isValid;

    m_subtotal_isValid = ::OpenAPI::fromJsonValue(m_subtotal, json[QString("subtotal")]);
    m_subtotal_isSet = !json[QString("subtotal")].isNull() && m_subtotal_isValid;

    m_subtotal_incl_tax_isValid = ::OpenAPI::fromJsonValue(m_subtotal_incl_tax, json[QString("subtotal_incl_tax")]);
    m_subtotal_incl_tax_isSet = !json[QString("subtotal_incl_tax")].isNull() && m_subtotal_incl_tax_isValid;

    m_subtotal_with_discount_isValid = ::OpenAPI::fromJsonValue(m_subtotal_with_discount, json[QString("subtotal_with_discount")]);
    m_subtotal_with_discount_isSet = !json[QString("subtotal_with_discount")].isNull() && m_subtotal_with_discount_isValid;

    m_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_tax_amount, json[QString("tax_amount")]);
    m_tax_amount_isSet = !json[QString("tax_amount")].isNull() && m_tax_amount_isValid;

    m_total_segments_isValid = ::OpenAPI::fromJsonValue(m_total_segments, json[QString("total_segments")]);
    m_total_segments_isSet = !json[QString("total_segments")].isNull() && m_total_segments_isValid;

    m_weee_tax_applied_amount_isValid = ::OpenAPI::fromJsonValue(m_weee_tax_applied_amount, json[QString("weee_tax_applied_amount")]);
    m_weee_tax_applied_amount_isSet = !json[QString("weee_tax_applied_amount")].isNull() && m_weee_tax_applied_amount_isValid;
}

QString OAIQuote_data_totals_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQuote_data_totals_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_base_currency_code_isSet) {
        obj.insert(QString("base_currency_code"), ::OpenAPI::toJsonValue(m_base_currency_code));
    }
    if (m_base_discount_amount_isSet) {
        obj.insert(QString("base_discount_amount"), ::OpenAPI::toJsonValue(m_base_discount_amount));
    }
    if (m_base_grand_total_isSet) {
        obj.insert(QString("base_grand_total"), ::OpenAPI::toJsonValue(m_base_grand_total));
    }
    if (m_base_shipping_amount_isSet) {
        obj.insert(QString("base_shipping_amount"), ::OpenAPI::toJsonValue(m_base_shipping_amount));
    }
    if (m_base_shipping_discount_amount_isSet) {
        obj.insert(QString("base_shipping_discount_amount"), ::OpenAPI::toJsonValue(m_base_shipping_discount_amount));
    }
    if (m_base_shipping_incl_tax_isSet) {
        obj.insert(QString("base_shipping_incl_tax"), ::OpenAPI::toJsonValue(m_base_shipping_incl_tax));
    }
    if (m_base_shipping_tax_amount_isSet) {
        obj.insert(QString("base_shipping_tax_amount"), ::OpenAPI::toJsonValue(m_base_shipping_tax_amount));
    }
    if (m_base_subtotal_isSet) {
        obj.insert(QString("base_subtotal"), ::OpenAPI::toJsonValue(m_base_subtotal));
    }
    if (m_base_subtotal_incl_tax_isSet) {
        obj.insert(QString("base_subtotal_incl_tax"), ::OpenAPI::toJsonValue(m_base_subtotal_incl_tax));
    }
    if (m_base_subtotal_with_discount_isSet) {
        obj.insert(QString("base_subtotal_with_discount"), ::OpenAPI::toJsonValue(m_base_subtotal_with_discount));
    }
    if (m_base_tax_amount_isSet) {
        obj.insert(QString("base_tax_amount"), ::OpenAPI::toJsonValue(m_base_tax_amount));
    }
    if (m_coupon_code_isSet) {
        obj.insert(QString("coupon_code"), ::OpenAPI::toJsonValue(m_coupon_code));
    }
    if (m_discount_amount_isSet) {
        obj.insert(QString("discount_amount"), ::OpenAPI::toJsonValue(m_discount_amount));
    }
    if (m_extension_attributes.isSet()) {
        obj.insert(QString("extension_attributes"), ::OpenAPI::toJsonValue(m_extension_attributes));
    }
    if (m_grand_total_isSet) {
        obj.insert(QString("grand_total"), ::OpenAPI::toJsonValue(m_grand_total));
    }
    if (m_items.size() > 0) {
        obj.insert(QString("items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_items_qty_isSet) {
        obj.insert(QString("items_qty"), ::OpenAPI::toJsonValue(m_items_qty));
    }
    if (m_quote_currency_code_isSet) {
        obj.insert(QString("quote_currency_code"), ::OpenAPI::toJsonValue(m_quote_currency_code));
    }
    if (m_shipping_amount_isSet) {
        obj.insert(QString("shipping_amount"), ::OpenAPI::toJsonValue(m_shipping_amount));
    }
    if (m_shipping_discount_amount_isSet) {
        obj.insert(QString("shipping_discount_amount"), ::OpenAPI::toJsonValue(m_shipping_discount_amount));
    }
    if (m_shipping_incl_tax_isSet) {
        obj.insert(QString("shipping_incl_tax"), ::OpenAPI::toJsonValue(m_shipping_incl_tax));
    }
    if (m_shipping_tax_amount_isSet) {
        obj.insert(QString("shipping_tax_amount"), ::OpenAPI::toJsonValue(m_shipping_tax_amount));
    }
    if (m_subtotal_isSet) {
        obj.insert(QString("subtotal"), ::OpenAPI::toJsonValue(m_subtotal));
    }
    if (m_subtotal_incl_tax_isSet) {
        obj.insert(QString("subtotal_incl_tax"), ::OpenAPI::toJsonValue(m_subtotal_incl_tax));
    }
    if (m_subtotal_with_discount_isSet) {
        obj.insert(QString("subtotal_with_discount"), ::OpenAPI::toJsonValue(m_subtotal_with_discount));
    }
    if (m_tax_amount_isSet) {
        obj.insert(QString("tax_amount"), ::OpenAPI::toJsonValue(m_tax_amount));
    }
    if (m_total_segments.size() > 0) {
        obj.insert(QString("total_segments"), ::OpenAPI::toJsonValue(m_total_segments));
    }
    if (m_weee_tax_applied_amount_isSet) {
        obj.insert(QString("weee_tax_applied_amount"), ::OpenAPI::toJsonValue(m_weee_tax_applied_amount));
    }
    return obj;
}

QString OAIQuote_data_totals_interface::getBaseCurrencyCode() const {
    return m_base_currency_code;
}
void OAIQuote_data_totals_interface::setBaseCurrencyCode(const QString &base_currency_code) {
    m_base_currency_code = base_currency_code;
    m_base_currency_code_isSet = true;
}

bool OAIQuote_data_totals_interface::is_base_currency_code_Set() const{
    return m_base_currency_code_isSet;
}

bool OAIQuote_data_totals_interface::is_base_currency_code_Valid() const{
    return m_base_currency_code_isValid;
}

double OAIQuote_data_totals_interface::getBaseDiscountAmount() const {
    return m_base_discount_amount;
}
void OAIQuote_data_totals_interface::setBaseDiscountAmount(const double &base_discount_amount) {
    m_base_discount_amount = base_discount_amount;
    m_base_discount_amount_isSet = true;
}

bool OAIQuote_data_totals_interface::is_base_discount_amount_Set() const{
    return m_base_discount_amount_isSet;
}

bool OAIQuote_data_totals_interface::is_base_discount_amount_Valid() const{
    return m_base_discount_amount_isValid;
}

double OAIQuote_data_totals_interface::getBaseGrandTotal() const {
    return m_base_grand_total;
}
void OAIQuote_data_totals_interface::setBaseGrandTotal(const double &base_grand_total) {
    m_base_grand_total = base_grand_total;
    m_base_grand_total_isSet = true;
}

bool OAIQuote_data_totals_interface::is_base_grand_total_Set() const{
    return m_base_grand_total_isSet;
}

bool OAIQuote_data_totals_interface::is_base_grand_total_Valid() const{
    return m_base_grand_total_isValid;
}

double OAIQuote_data_totals_interface::getBaseShippingAmount() const {
    return m_base_shipping_amount;
}
void OAIQuote_data_totals_interface::setBaseShippingAmount(const double &base_shipping_amount) {
    m_base_shipping_amount = base_shipping_amount;
    m_base_shipping_amount_isSet = true;
}

bool OAIQuote_data_totals_interface::is_base_shipping_amount_Set() const{
    return m_base_shipping_amount_isSet;
}

bool OAIQuote_data_totals_interface::is_base_shipping_amount_Valid() const{
    return m_base_shipping_amount_isValid;
}

double OAIQuote_data_totals_interface::getBaseShippingDiscountAmount() const {
    return m_base_shipping_discount_amount;
}
void OAIQuote_data_totals_interface::setBaseShippingDiscountAmount(const double &base_shipping_discount_amount) {
    m_base_shipping_discount_amount = base_shipping_discount_amount;
    m_base_shipping_discount_amount_isSet = true;
}

bool OAIQuote_data_totals_interface::is_base_shipping_discount_amount_Set() const{
    return m_base_shipping_discount_amount_isSet;
}

bool OAIQuote_data_totals_interface::is_base_shipping_discount_amount_Valid() const{
    return m_base_shipping_discount_amount_isValid;
}

double OAIQuote_data_totals_interface::getBaseShippingInclTax() const {
    return m_base_shipping_incl_tax;
}
void OAIQuote_data_totals_interface::setBaseShippingInclTax(const double &base_shipping_incl_tax) {
    m_base_shipping_incl_tax = base_shipping_incl_tax;
    m_base_shipping_incl_tax_isSet = true;
}

bool OAIQuote_data_totals_interface::is_base_shipping_incl_tax_Set() const{
    return m_base_shipping_incl_tax_isSet;
}

bool OAIQuote_data_totals_interface::is_base_shipping_incl_tax_Valid() const{
    return m_base_shipping_incl_tax_isValid;
}

double OAIQuote_data_totals_interface::getBaseShippingTaxAmount() const {
    return m_base_shipping_tax_amount;
}
void OAIQuote_data_totals_interface::setBaseShippingTaxAmount(const double &base_shipping_tax_amount) {
    m_base_shipping_tax_amount = base_shipping_tax_amount;
    m_base_shipping_tax_amount_isSet = true;
}

bool OAIQuote_data_totals_interface::is_base_shipping_tax_amount_Set() const{
    return m_base_shipping_tax_amount_isSet;
}

bool OAIQuote_data_totals_interface::is_base_shipping_tax_amount_Valid() const{
    return m_base_shipping_tax_amount_isValid;
}

double OAIQuote_data_totals_interface::getBaseSubtotal() const {
    return m_base_subtotal;
}
void OAIQuote_data_totals_interface::setBaseSubtotal(const double &base_subtotal) {
    m_base_subtotal = base_subtotal;
    m_base_subtotal_isSet = true;
}

bool OAIQuote_data_totals_interface::is_base_subtotal_Set() const{
    return m_base_subtotal_isSet;
}

bool OAIQuote_data_totals_interface::is_base_subtotal_Valid() const{
    return m_base_subtotal_isValid;
}

double OAIQuote_data_totals_interface::getBaseSubtotalInclTax() const {
    return m_base_subtotal_incl_tax;
}
void OAIQuote_data_totals_interface::setBaseSubtotalInclTax(const double &base_subtotal_incl_tax) {
    m_base_subtotal_incl_tax = base_subtotal_incl_tax;
    m_base_subtotal_incl_tax_isSet = true;
}

bool OAIQuote_data_totals_interface::is_base_subtotal_incl_tax_Set() const{
    return m_base_subtotal_incl_tax_isSet;
}

bool OAIQuote_data_totals_interface::is_base_subtotal_incl_tax_Valid() const{
    return m_base_subtotal_incl_tax_isValid;
}

double OAIQuote_data_totals_interface::getBaseSubtotalWithDiscount() const {
    return m_base_subtotal_with_discount;
}
void OAIQuote_data_totals_interface::setBaseSubtotalWithDiscount(const double &base_subtotal_with_discount) {
    m_base_subtotal_with_discount = base_subtotal_with_discount;
    m_base_subtotal_with_discount_isSet = true;
}

bool OAIQuote_data_totals_interface::is_base_subtotal_with_discount_Set() const{
    return m_base_subtotal_with_discount_isSet;
}

bool OAIQuote_data_totals_interface::is_base_subtotal_with_discount_Valid() const{
    return m_base_subtotal_with_discount_isValid;
}

double OAIQuote_data_totals_interface::getBaseTaxAmount() const {
    return m_base_tax_amount;
}
void OAIQuote_data_totals_interface::setBaseTaxAmount(const double &base_tax_amount) {
    m_base_tax_amount = base_tax_amount;
    m_base_tax_amount_isSet = true;
}

bool OAIQuote_data_totals_interface::is_base_tax_amount_Set() const{
    return m_base_tax_amount_isSet;
}

bool OAIQuote_data_totals_interface::is_base_tax_amount_Valid() const{
    return m_base_tax_amount_isValid;
}

QString OAIQuote_data_totals_interface::getCouponCode() const {
    return m_coupon_code;
}
void OAIQuote_data_totals_interface::setCouponCode(const QString &coupon_code) {
    m_coupon_code = coupon_code;
    m_coupon_code_isSet = true;
}

bool OAIQuote_data_totals_interface::is_coupon_code_Set() const{
    return m_coupon_code_isSet;
}

bool OAIQuote_data_totals_interface::is_coupon_code_Valid() const{
    return m_coupon_code_isValid;
}

double OAIQuote_data_totals_interface::getDiscountAmount() const {
    return m_discount_amount;
}
void OAIQuote_data_totals_interface::setDiscountAmount(const double &discount_amount) {
    m_discount_amount = discount_amount;
    m_discount_amount_isSet = true;
}

bool OAIQuote_data_totals_interface::is_discount_amount_Set() const{
    return m_discount_amount_isSet;
}

bool OAIQuote_data_totals_interface::is_discount_amount_Valid() const{
    return m_discount_amount_isValid;
}

OAIQuote_data_totals_extension_interface OAIQuote_data_totals_interface::getExtensionAttributes() const {
    return m_extension_attributes;
}
void OAIQuote_data_totals_interface::setExtensionAttributes(const OAIQuote_data_totals_extension_interface &extension_attributes) {
    m_extension_attributes = extension_attributes;
    m_extension_attributes_isSet = true;
}

bool OAIQuote_data_totals_interface::is_extension_attributes_Set() const{
    return m_extension_attributes_isSet;
}

bool OAIQuote_data_totals_interface::is_extension_attributes_Valid() const{
    return m_extension_attributes_isValid;
}

double OAIQuote_data_totals_interface::getGrandTotal() const {
    return m_grand_total;
}
void OAIQuote_data_totals_interface::setGrandTotal(const double &grand_total) {
    m_grand_total = grand_total;
    m_grand_total_isSet = true;
}

bool OAIQuote_data_totals_interface::is_grand_total_Set() const{
    return m_grand_total_isSet;
}

bool OAIQuote_data_totals_interface::is_grand_total_Valid() const{
    return m_grand_total_isValid;
}

QList<OAIQuote_data_totals_item_interface> OAIQuote_data_totals_interface::getItems() const {
    return m_items;
}
void OAIQuote_data_totals_interface::setItems(const QList<OAIQuote_data_totals_item_interface> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIQuote_data_totals_interface::is_items_Set() const{
    return m_items_isSet;
}

bool OAIQuote_data_totals_interface::is_items_Valid() const{
    return m_items_isValid;
}

qint32 OAIQuote_data_totals_interface::getItemsQty() const {
    return m_items_qty;
}
void OAIQuote_data_totals_interface::setItemsQty(const qint32 &items_qty) {
    m_items_qty = items_qty;
    m_items_qty_isSet = true;
}

bool OAIQuote_data_totals_interface::is_items_qty_Set() const{
    return m_items_qty_isSet;
}

bool OAIQuote_data_totals_interface::is_items_qty_Valid() const{
    return m_items_qty_isValid;
}

QString OAIQuote_data_totals_interface::getQuoteCurrencyCode() const {
    return m_quote_currency_code;
}
void OAIQuote_data_totals_interface::setQuoteCurrencyCode(const QString &quote_currency_code) {
    m_quote_currency_code = quote_currency_code;
    m_quote_currency_code_isSet = true;
}

bool OAIQuote_data_totals_interface::is_quote_currency_code_Set() const{
    return m_quote_currency_code_isSet;
}

bool OAIQuote_data_totals_interface::is_quote_currency_code_Valid() const{
    return m_quote_currency_code_isValid;
}

double OAIQuote_data_totals_interface::getShippingAmount() const {
    return m_shipping_amount;
}
void OAIQuote_data_totals_interface::setShippingAmount(const double &shipping_amount) {
    m_shipping_amount = shipping_amount;
    m_shipping_amount_isSet = true;
}

bool OAIQuote_data_totals_interface::is_shipping_amount_Set() const{
    return m_shipping_amount_isSet;
}

bool OAIQuote_data_totals_interface::is_shipping_amount_Valid() const{
    return m_shipping_amount_isValid;
}

double OAIQuote_data_totals_interface::getShippingDiscountAmount() const {
    return m_shipping_discount_amount;
}
void OAIQuote_data_totals_interface::setShippingDiscountAmount(const double &shipping_discount_amount) {
    m_shipping_discount_amount = shipping_discount_amount;
    m_shipping_discount_amount_isSet = true;
}

bool OAIQuote_data_totals_interface::is_shipping_discount_amount_Set() const{
    return m_shipping_discount_amount_isSet;
}

bool OAIQuote_data_totals_interface::is_shipping_discount_amount_Valid() const{
    return m_shipping_discount_amount_isValid;
}

double OAIQuote_data_totals_interface::getShippingInclTax() const {
    return m_shipping_incl_tax;
}
void OAIQuote_data_totals_interface::setShippingInclTax(const double &shipping_incl_tax) {
    m_shipping_incl_tax = shipping_incl_tax;
    m_shipping_incl_tax_isSet = true;
}

bool OAIQuote_data_totals_interface::is_shipping_incl_tax_Set() const{
    return m_shipping_incl_tax_isSet;
}

bool OAIQuote_data_totals_interface::is_shipping_incl_tax_Valid() const{
    return m_shipping_incl_tax_isValid;
}

double OAIQuote_data_totals_interface::getShippingTaxAmount() const {
    return m_shipping_tax_amount;
}
void OAIQuote_data_totals_interface::setShippingTaxAmount(const double &shipping_tax_amount) {
    m_shipping_tax_amount = shipping_tax_amount;
    m_shipping_tax_amount_isSet = true;
}

bool OAIQuote_data_totals_interface::is_shipping_tax_amount_Set() const{
    return m_shipping_tax_amount_isSet;
}

bool OAIQuote_data_totals_interface::is_shipping_tax_amount_Valid() const{
    return m_shipping_tax_amount_isValid;
}

double OAIQuote_data_totals_interface::getSubtotal() const {
    return m_subtotal;
}
void OAIQuote_data_totals_interface::setSubtotal(const double &subtotal) {
    m_subtotal = subtotal;
    m_subtotal_isSet = true;
}

bool OAIQuote_data_totals_interface::is_subtotal_Set() const{
    return m_subtotal_isSet;
}

bool OAIQuote_data_totals_interface::is_subtotal_Valid() const{
    return m_subtotal_isValid;
}

double OAIQuote_data_totals_interface::getSubtotalInclTax() const {
    return m_subtotal_incl_tax;
}
void OAIQuote_data_totals_interface::setSubtotalInclTax(const double &subtotal_incl_tax) {
    m_subtotal_incl_tax = subtotal_incl_tax;
    m_subtotal_incl_tax_isSet = true;
}

bool OAIQuote_data_totals_interface::is_subtotal_incl_tax_Set() const{
    return m_subtotal_incl_tax_isSet;
}

bool OAIQuote_data_totals_interface::is_subtotal_incl_tax_Valid() const{
    return m_subtotal_incl_tax_isValid;
}

double OAIQuote_data_totals_interface::getSubtotalWithDiscount() const {
    return m_subtotal_with_discount;
}
void OAIQuote_data_totals_interface::setSubtotalWithDiscount(const double &subtotal_with_discount) {
    m_subtotal_with_discount = subtotal_with_discount;
    m_subtotal_with_discount_isSet = true;
}

bool OAIQuote_data_totals_interface::is_subtotal_with_discount_Set() const{
    return m_subtotal_with_discount_isSet;
}

bool OAIQuote_data_totals_interface::is_subtotal_with_discount_Valid() const{
    return m_subtotal_with_discount_isValid;
}

double OAIQuote_data_totals_interface::getTaxAmount() const {
    return m_tax_amount;
}
void OAIQuote_data_totals_interface::setTaxAmount(const double &tax_amount) {
    m_tax_amount = tax_amount;
    m_tax_amount_isSet = true;
}

bool OAIQuote_data_totals_interface::is_tax_amount_Set() const{
    return m_tax_amount_isSet;
}

bool OAIQuote_data_totals_interface::is_tax_amount_Valid() const{
    return m_tax_amount_isValid;
}

QList<OAIQuote_data_total_segment_interface> OAIQuote_data_totals_interface::getTotalSegments() const {
    return m_total_segments;
}
void OAIQuote_data_totals_interface::setTotalSegments(const QList<OAIQuote_data_total_segment_interface> &total_segments) {
    m_total_segments = total_segments;
    m_total_segments_isSet = true;
}

bool OAIQuote_data_totals_interface::is_total_segments_Set() const{
    return m_total_segments_isSet;
}

bool OAIQuote_data_totals_interface::is_total_segments_Valid() const{
    return m_total_segments_isValid;
}

double OAIQuote_data_totals_interface::getWeeeTaxAppliedAmount() const {
    return m_weee_tax_applied_amount;
}
void OAIQuote_data_totals_interface::setWeeeTaxAppliedAmount(const double &weee_tax_applied_amount) {
    m_weee_tax_applied_amount = weee_tax_applied_amount;
    m_weee_tax_applied_amount_isSet = true;
}

bool OAIQuote_data_totals_interface::is_weee_tax_applied_amount_Set() const{
    return m_weee_tax_applied_amount_isSet;
}

bool OAIQuote_data_totals_interface::is_weee_tax_applied_amount_Valid() const{
    return m_weee_tax_applied_amount_isValid;
}

bool OAIQuote_data_totals_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_base_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_discount_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_grand_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_shipping_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_shipping_discount_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_shipping_incl_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_shipping_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_subtotal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_subtotal_incl_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_subtotal_with_discount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_coupon_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_discount_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extension_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_grand_total_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_items_qty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_quote_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_discount_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_incl_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtotal_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtotal_incl_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_subtotal_with_discount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_total_segments.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_weee_tax_applied_amount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQuote_data_totals_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_total_segments_isValid && m_weee_tax_applied_amount_isValid && true;
}

} // namespace OpenAPI
