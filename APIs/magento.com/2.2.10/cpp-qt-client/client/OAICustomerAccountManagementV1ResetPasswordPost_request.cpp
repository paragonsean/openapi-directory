/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomerAccountManagementV1ResetPasswordPost_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomerAccountManagementV1ResetPasswordPost_request::OAICustomerAccountManagementV1ResetPasswordPost_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomerAccountManagementV1ResetPasswordPost_request::OAICustomerAccountManagementV1ResetPasswordPost_request() {
    this->initializeModel();
}

OAICustomerAccountManagementV1ResetPasswordPost_request::~OAICustomerAccountManagementV1ResetPasswordPost_request() {}

void OAICustomerAccountManagementV1ResetPasswordPost_request::initializeModel() {

    m_email_isSet = false;
    m_email_isValid = false;

    m_new_password_isSet = false;
    m_new_password_isValid = false;

    m_reset_token_isSet = false;
    m_reset_token_isValid = false;
}

void OAICustomerAccountManagementV1ResetPasswordPost_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomerAccountManagementV1ResetPasswordPost_request::fromJsonObject(QJsonObject json) {

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_new_password_isValid = ::OpenAPI::fromJsonValue(m_new_password, json[QString("newPassword")]);
    m_new_password_isSet = !json[QString("newPassword")].isNull() && m_new_password_isValid;

    m_reset_token_isValid = ::OpenAPI::fromJsonValue(m_reset_token, json[QString("resetToken")]);
    m_reset_token_isSet = !json[QString("resetToken")].isNull() && m_reset_token_isValid;
}

QString OAICustomerAccountManagementV1ResetPasswordPost_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomerAccountManagementV1ResetPasswordPost_request::asJsonObject() const {
    QJsonObject obj;
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_new_password_isSet) {
        obj.insert(QString("newPassword"), ::OpenAPI::toJsonValue(m_new_password));
    }
    if (m_reset_token_isSet) {
        obj.insert(QString("resetToken"), ::OpenAPI::toJsonValue(m_reset_token));
    }
    return obj;
}

QString OAICustomerAccountManagementV1ResetPasswordPost_request::getEmail() const {
    return m_email;
}
void OAICustomerAccountManagementV1ResetPasswordPost_request::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAICustomerAccountManagementV1ResetPasswordPost_request::is_email_Set() const{
    return m_email_isSet;
}

bool OAICustomerAccountManagementV1ResetPasswordPost_request::is_email_Valid() const{
    return m_email_isValid;
}

QString OAICustomerAccountManagementV1ResetPasswordPost_request::getNewPassword() const {
    return m_new_password;
}
void OAICustomerAccountManagementV1ResetPasswordPost_request::setNewPassword(const QString &new_password) {
    m_new_password = new_password;
    m_new_password_isSet = true;
}

bool OAICustomerAccountManagementV1ResetPasswordPost_request::is_new_password_Set() const{
    return m_new_password_isSet;
}

bool OAICustomerAccountManagementV1ResetPasswordPost_request::is_new_password_Valid() const{
    return m_new_password_isValid;
}

QString OAICustomerAccountManagementV1ResetPasswordPost_request::getResetToken() const {
    return m_reset_token;
}
void OAICustomerAccountManagementV1ResetPasswordPost_request::setResetToken(const QString &reset_token) {
    m_reset_token = reset_token;
    m_reset_token_isSet = true;
}

bool OAICustomerAccountManagementV1ResetPasswordPost_request::is_reset_token_Set() const{
    return m_reset_token_isSet;
}

bool OAICustomerAccountManagementV1ResetPasswordPost_request::is_reset_token_Valid() const{
    return m_reset_token_isValid;
}

bool OAICustomerAccountManagementV1ResetPasswordPost_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_new_password_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reset_token_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomerAccountManagementV1ResetPasswordPost_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_email_isValid && m_new_password_isValid && m_reset_token_isValid && true;
}

} // namespace OpenAPI
