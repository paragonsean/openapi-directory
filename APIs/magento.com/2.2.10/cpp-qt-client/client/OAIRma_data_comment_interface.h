/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRma_data_comment_interface.h
 *
 * Interface CommentInterface
 */

#ifndef OAIRma_data_comment_interface_H
#define OAIRma_data_comment_interface_H

#include <QJsonObject>

#include "OAIFramework_attribute_interface.h"
#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIFramework_attribute_interface;

class OAIRma_data_comment_interface : public OAIObject {
public:
    OAIRma_data_comment_interface();
    OAIRma_data_comment_interface(QString json);
    ~OAIRma_data_comment_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    bool isAdmin() const;
    void setAdmin(const bool &admin);
    bool is_admin_Set() const;
    bool is_admin_Valid() const;

    QString getComment() const;
    void setComment(const QString &comment);
    bool is_comment_Set() const;
    bool is_comment_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QList<OAIFramework_attribute_interface> getCustomAttributes() const;
    void setCustomAttributes(const QList<OAIFramework_attribute_interface> &custom_attributes);
    bool is_custom_attributes_Set() const;
    bool is_custom_attributes_Valid() const;

    bool isCustomerNotified() const;
    void setCustomerNotified(const bool &customer_notified);
    bool is_customer_notified_Set() const;
    bool is_customer_notified_Valid() const;

    qint32 getEntityId() const;
    void setEntityId(const qint32 &entity_id);
    bool is_entity_id_Set() const;
    bool is_entity_id_Valid() const;

    OAIObject getExtensionAttributes() const;
    void setExtensionAttributes(const OAIObject &extension_attributes);
    bool is_extension_attributes_Set() const;
    bool is_extension_attributes_Valid() const;

    qint32 getRmaEntityId() const;
    void setRmaEntityId(const qint32 &rma_entity_id);
    bool is_rma_entity_id_Set() const;
    bool is_rma_entity_id_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    bool isVisibleOnFront() const;
    void setVisibleOnFront(const bool &visible_on_front);
    bool is_visible_on_front_Set() const;
    bool is_visible_on_front_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    bool m_admin;
    bool m_admin_isSet;
    bool m_admin_isValid;

    QString m_comment;
    bool m_comment_isSet;
    bool m_comment_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QList<OAIFramework_attribute_interface> m_custom_attributes;
    bool m_custom_attributes_isSet;
    bool m_custom_attributes_isValid;

    bool m_customer_notified;
    bool m_customer_notified_isSet;
    bool m_customer_notified_isValid;

    qint32 m_entity_id;
    bool m_entity_id_isSet;
    bool m_entity_id_isValid;

    OAIObject m_extension_attributes;
    bool m_extension_attributes_isSet;
    bool m_extension_attributes_isValid;

    qint32 m_rma_entity_id;
    bool m_rma_entity_id_isSet;
    bool m_rma_entity_id_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;

    bool m_visible_on_front;
    bool m_visible_on_front_isSet;
    bool m_visible_on_front_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRma_data_comment_interface)

#endif // OAIRma_data_comment_interface_H
