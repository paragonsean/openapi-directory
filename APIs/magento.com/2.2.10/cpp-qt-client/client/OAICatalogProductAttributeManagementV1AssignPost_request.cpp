/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICatalogProductAttributeManagementV1AssignPost_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICatalogProductAttributeManagementV1AssignPost_request::OAICatalogProductAttributeManagementV1AssignPost_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICatalogProductAttributeManagementV1AssignPost_request::OAICatalogProductAttributeManagementV1AssignPost_request() {
    this->initializeModel();
}

OAICatalogProductAttributeManagementV1AssignPost_request::~OAICatalogProductAttributeManagementV1AssignPost_request() {}

void OAICatalogProductAttributeManagementV1AssignPost_request::initializeModel() {

    m_attribute_code_isSet = false;
    m_attribute_code_isValid = false;

    m_attribute_group_id_isSet = false;
    m_attribute_group_id_isValid = false;

    m_attribute_set_id_isSet = false;
    m_attribute_set_id_isValid = false;

    m_sort_order_isSet = false;
    m_sort_order_isValid = false;
}

void OAICatalogProductAttributeManagementV1AssignPost_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICatalogProductAttributeManagementV1AssignPost_request::fromJsonObject(QJsonObject json) {

    m_attribute_code_isValid = ::OpenAPI::fromJsonValue(m_attribute_code, json[QString("attributeCode")]);
    m_attribute_code_isSet = !json[QString("attributeCode")].isNull() && m_attribute_code_isValid;

    m_attribute_group_id_isValid = ::OpenAPI::fromJsonValue(m_attribute_group_id, json[QString("attributeGroupId")]);
    m_attribute_group_id_isSet = !json[QString("attributeGroupId")].isNull() && m_attribute_group_id_isValid;

    m_attribute_set_id_isValid = ::OpenAPI::fromJsonValue(m_attribute_set_id, json[QString("attributeSetId")]);
    m_attribute_set_id_isSet = !json[QString("attributeSetId")].isNull() && m_attribute_set_id_isValid;

    m_sort_order_isValid = ::OpenAPI::fromJsonValue(m_sort_order, json[QString("sortOrder")]);
    m_sort_order_isSet = !json[QString("sortOrder")].isNull() && m_sort_order_isValid;
}

QString OAICatalogProductAttributeManagementV1AssignPost_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICatalogProductAttributeManagementV1AssignPost_request::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_code_isSet) {
        obj.insert(QString("attributeCode"), ::OpenAPI::toJsonValue(m_attribute_code));
    }
    if (m_attribute_group_id_isSet) {
        obj.insert(QString("attributeGroupId"), ::OpenAPI::toJsonValue(m_attribute_group_id));
    }
    if (m_attribute_set_id_isSet) {
        obj.insert(QString("attributeSetId"), ::OpenAPI::toJsonValue(m_attribute_set_id));
    }
    if (m_sort_order_isSet) {
        obj.insert(QString("sortOrder"), ::OpenAPI::toJsonValue(m_sort_order));
    }
    return obj;
}

QString OAICatalogProductAttributeManagementV1AssignPost_request::getAttributeCode() const {
    return m_attribute_code;
}
void OAICatalogProductAttributeManagementV1AssignPost_request::setAttributeCode(const QString &attribute_code) {
    m_attribute_code = attribute_code;
    m_attribute_code_isSet = true;
}

bool OAICatalogProductAttributeManagementV1AssignPost_request::is_attribute_code_Set() const{
    return m_attribute_code_isSet;
}

bool OAICatalogProductAttributeManagementV1AssignPost_request::is_attribute_code_Valid() const{
    return m_attribute_code_isValid;
}

qint32 OAICatalogProductAttributeManagementV1AssignPost_request::getAttributeGroupId() const {
    return m_attribute_group_id;
}
void OAICatalogProductAttributeManagementV1AssignPost_request::setAttributeGroupId(const qint32 &attribute_group_id) {
    m_attribute_group_id = attribute_group_id;
    m_attribute_group_id_isSet = true;
}

bool OAICatalogProductAttributeManagementV1AssignPost_request::is_attribute_group_id_Set() const{
    return m_attribute_group_id_isSet;
}

bool OAICatalogProductAttributeManagementV1AssignPost_request::is_attribute_group_id_Valid() const{
    return m_attribute_group_id_isValid;
}

qint32 OAICatalogProductAttributeManagementV1AssignPost_request::getAttributeSetId() const {
    return m_attribute_set_id;
}
void OAICatalogProductAttributeManagementV1AssignPost_request::setAttributeSetId(const qint32 &attribute_set_id) {
    m_attribute_set_id = attribute_set_id;
    m_attribute_set_id_isSet = true;
}

bool OAICatalogProductAttributeManagementV1AssignPost_request::is_attribute_set_id_Set() const{
    return m_attribute_set_id_isSet;
}

bool OAICatalogProductAttributeManagementV1AssignPost_request::is_attribute_set_id_Valid() const{
    return m_attribute_set_id_isValid;
}

qint32 OAICatalogProductAttributeManagementV1AssignPost_request::getSortOrder() const {
    return m_sort_order;
}
void OAICatalogProductAttributeManagementV1AssignPost_request::setSortOrder(const qint32 &sort_order) {
    m_sort_order = sort_order;
    m_sort_order_isSet = true;
}

bool OAICatalogProductAttributeManagementV1AssignPost_request::is_sort_order_Set() const{
    return m_sort_order_isSet;
}

bool OAICatalogProductAttributeManagementV1AssignPost_request::is_sort_order_Valid() const{
    return m_sort_order_isValid;
}

bool OAICatalogProductAttributeManagementV1AssignPost_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_set_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_order_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICatalogProductAttributeManagementV1AssignPost_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_attribute_code_isValid && m_attribute_group_id_isValid && m_attribute_set_id_isValid && m_sort_order_isValid && true;
}

} // namespace OpenAPI
