/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITax_data_grand_total_details_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITax_data_grand_total_details_interface::OAITax_data_grand_total_details_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITax_data_grand_total_details_interface::OAITax_data_grand_total_details_interface() {
    this->initializeModel();
}

OAITax_data_grand_total_details_interface::~OAITax_data_grand_total_details_interface() {}

void OAITax_data_grand_total_details_interface::initializeModel() {

    m_amount_isSet = false;
    m_amount_isValid = false;

    m_group_id_isSet = false;
    m_group_id_isValid = false;

    m_rates_isSet = false;
    m_rates_isValid = false;
}

void OAITax_data_grand_total_details_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITax_data_grand_total_details_interface::fromJsonObject(QJsonObject json) {

    m_amount_isValid = ::OpenAPI::fromJsonValue(m_amount, json[QString("amount")]);
    m_amount_isSet = !json[QString("amount")].isNull() && m_amount_isValid;

    m_group_id_isValid = ::OpenAPI::fromJsonValue(m_group_id, json[QString("group_id")]);
    m_group_id_isSet = !json[QString("group_id")].isNull() && m_group_id_isValid;

    m_rates_isValid = ::OpenAPI::fromJsonValue(m_rates, json[QString("rates")]);
    m_rates_isSet = !json[QString("rates")].isNull() && m_rates_isValid;
}

QString OAITax_data_grand_total_details_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITax_data_grand_total_details_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_amount_isSet) {
        obj.insert(QString("amount"), ::OpenAPI::toJsonValue(m_amount));
    }
    if (m_group_id_isSet) {
        obj.insert(QString("group_id"), ::OpenAPI::toJsonValue(m_group_id));
    }
    if (m_rates.size() > 0) {
        obj.insert(QString("rates"), ::OpenAPI::toJsonValue(m_rates));
    }
    return obj;
}

double OAITax_data_grand_total_details_interface::getAmount() const {
    return m_amount;
}
void OAITax_data_grand_total_details_interface::setAmount(const double &amount) {
    m_amount = amount;
    m_amount_isSet = true;
}

bool OAITax_data_grand_total_details_interface::is_amount_Set() const{
    return m_amount_isSet;
}

bool OAITax_data_grand_total_details_interface::is_amount_Valid() const{
    return m_amount_isValid;
}

qint32 OAITax_data_grand_total_details_interface::getGroupId() const {
    return m_group_id;
}
void OAITax_data_grand_total_details_interface::setGroupId(const qint32 &group_id) {
    m_group_id = group_id;
    m_group_id_isSet = true;
}

bool OAITax_data_grand_total_details_interface::is_group_id_Set() const{
    return m_group_id_isSet;
}

bool OAITax_data_grand_total_details_interface::is_group_id_Valid() const{
    return m_group_id_isValid;
}

QList<OAITax_data_grand_total_rates_interface> OAITax_data_grand_total_details_interface::getRates() const {
    return m_rates;
}
void OAITax_data_grand_total_details_interface::setRates(const QList<OAITax_data_grand_total_rates_interface> &rates) {
    m_rates = rates;
    m_rates_isSet = true;
}

bool OAITax_data_grand_total_details_interface::is_rates_Set() const{
    return m_rates_isSet;
}

bool OAITax_data_grand_total_details_interface::is_rates_Valid() const{
    return m_rates_isValid;
}

bool OAITax_data_grand_total_details_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_rates.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITax_data_grand_total_details_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_amount_isValid && m_group_id_isValid && m_rates_isValid && true;
}

} // namespace OpenAPI
