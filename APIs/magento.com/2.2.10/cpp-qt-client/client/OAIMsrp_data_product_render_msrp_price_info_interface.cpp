/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIMsrp_data_product_render_msrp_price_info_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIMsrp_data_product_render_msrp_price_info_interface::OAIMsrp_data_product_render_msrp_price_info_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIMsrp_data_product_render_msrp_price_info_interface::OAIMsrp_data_product_render_msrp_price_info_interface() {
    this->initializeModel();
}

OAIMsrp_data_product_render_msrp_price_info_interface::~OAIMsrp_data_product_render_msrp_price_info_interface() {}

void OAIMsrp_data_product_render_msrp_price_info_interface::initializeModel() {

    m_explanation_message_isSet = false;
    m_explanation_message_isValid = false;

    m_extension_attributes_isSet = false;
    m_extension_attributes_isValid = false;

    m_is_applicable_isSet = false;
    m_is_applicable_isValid = false;

    m_is_shown_price_on_gesture_isSet = false;
    m_is_shown_price_on_gesture_isValid = false;

    m_msrp_message_isSet = false;
    m_msrp_message_isValid = false;

    m_msrp_price_isSet = false;
    m_msrp_price_isValid = false;
}

void OAIMsrp_data_product_render_msrp_price_info_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIMsrp_data_product_render_msrp_price_info_interface::fromJsonObject(QJsonObject json) {

    m_explanation_message_isValid = ::OpenAPI::fromJsonValue(m_explanation_message, json[QString("explanation_message")]);
    m_explanation_message_isSet = !json[QString("explanation_message")].isNull() && m_explanation_message_isValid;

    m_extension_attributes_isValid = ::OpenAPI::fromJsonValue(m_extension_attributes, json[QString("extension_attributes")]);
    m_extension_attributes_isSet = !json[QString("extension_attributes")].isNull() && m_extension_attributes_isValid;

    m_is_applicable_isValid = ::OpenAPI::fromJsonValue(m_is_applicable, json[QString("is_applicable")]);
    m_is_applicable_isSet = !json[QString("is_applicable")].isNull() && m_is_applicable_isValid;

    m_is_shown_price_on_gesture_isValid = ::OpenAPI::fromJsonValue(m_is_shown_price_on_gesture, json[QString("is_shown_price_on_gesture")]);
    m_is_shown_price_on_gesture_isSet = !json[QString("is_shown_price_on_gesture")].isNull() && m_is_shown_price_on_gesture_isValid;

    m_msrp_message_isValid = ::OpenAPI::fromJsonValue(m_msrp_message, json[QString("msrp_message")]);
    m_msrp_message_isSet = !json[QString("msrp_message")].isNull() && m_msrp_message_isValid;

    m_msrp_price_isValid = ::OpenAPI::fromJsonValue(m_msrp_price, json[QString("msrp_price")]);
    m_msrp_price_isSet = !json[QString("msrp_price")].isNull() && m_msrp_price_isValid;
}

QString OAIMsrp_data_product_render_msrp_price_info_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIMsrp_data_product_render_msrp_price_info_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_explanation_message_isSet) {
        obj.insert(QString("explanation_message"), ::OpenAPI::toJsonValue(m_explanation_message));
    }
    if (m_extension_attributes_isSet) {
        obj.insert(QString("extension_attributes"), ::OpenAPI::toJsonValue(m_extension_attributes));
    }
    if (m_is_applicable_isSet) {
        obj.insert(QString("is_applicable"), ::OpenAPI::toJsonValue(m_is_applicable));
    }
    if (m_is_shown_price_on_gesture_isSet) {
        obj.insert(QString("is_shown_price_on_gesture"), ::OpenAPI::toJsonValue(m_is_shown_price_on_gesture));
    }
    if (m_msrp_message_isSet) {
        obj.insert(QString("msrp_message"), ::OpenAPI::toJsonValue(m_msrp_message));
    }
    if (m_msrp_price_isSet) {
        obj.insert(QString("msrp_price"), ::OpenAPI::toJsonValue(m_msrp_price));
    }
    return obj;
}

QString OAIMsrp_data_product_render_msrp_price_info_interface::getExplanationMessage() const {
    return m_explanation_message;
}
void OAIMsrp_data_product_render_msrp_price_info_interface::setExplanationMessage(const QString &explanation_message) {
    m_explanation_message = explanation_message;
    m_explanation_message_isSet = true;
}

bool OAIMsrp_data_product_render_msrp_price_info_interface::is_explanation_message_Set() const{
    return m_explanation_message_isSet;
}

bool OAIMsrp_data_product_render_msrp_price_info_interface::is_explanation_message_Valid() const{
    return m_explanation_message_isValid;
}

OAIObject OAIMsrp_data_product_render_msrp_price_info_interface::getExtensionAttributes() const {
    return m_extension_attributes;
}
void OAIMsrp_data_product_render_msrp_price_info_interface::setExtensionAttributes(const OAIObject &extension_attributes) {
    m_extension_attributes = extension_attributes;
    m_extension_attributes_isSet = true;
}

bool OAIMsrp_data_product_render_msrp_price_info_interface::is_extension_attributes_Set() const{
    return m_extension_attributes_isSet;
}

bool OAIMsrp_data_product_render_msrp_price_info_interface::is_extension_attributes_Valid() const{
    return m_extension_attributes_isValid;
}

QString OAIMsrp_data_product_render_msrp_price_info_interface::getIsApplicable() const {
    return m_is_applicable;
}
void OAIMsrp_data_product_render_msrp_price_info_interface::setIsApplicable(const QString &is_applicable) {
    m_is_applicable = is_applicable;
    m_is_applicable_isSet = true;
}

bool OAIMsrp_data_product_render_msrp_price_info_interface::is_is_applicable_Set() const{
    return m_is_applicable_isSet;
}

bool OAIMsrp_data_product_render_msrp_price_info_interface::is_is_applicable_Valid() const{
    return m_is_applicable_isValid;
}

QString OAIMsrp_data_product_render_msrp_price_info_interface::getIsShownPriceOnGesture() const {
    return m_is_shown_price_on_gesture;
}
void OAIMsrp_data_product_render_msrp_price_info_interface::setIsShownPriceOnGesture(const QString &is_shown_price_on_gesture) {
    m_is_shown_price_on_gesture = is_shown_price_on_gesture;
    m_is_shown_price_on_gesture_isSet = true;
}

bool OAIMsrp_data_product_render_msrp_price_info_interface::is_is_shown_price_on_gesture_Set() const{
    return m_is_shown_price_on_gesture_isSet;
}

bool OAIMsrp_data_product_render_msrp_price_info_interface::is_is_shown_price_on_gesture_Valid() const{
    return m_is_shown_price_on_gesture_isValid;
}

QString OAIMsrp_data_product_render_msrp_price_info_interface::getMsrpMessage() const {
    return m_msrp_message;
}
void OAIMsrp_data_product_render_msrp_price_info_interface::setMsrpMessage(const QString &msrp_message) {
    m_msrp_message = msrp_message;
    m_msrp_message_isSet = true;
}

bool OAIMsrp_data_product_render_msrp_price_info_interface::is_msrp_message_Set() const{
    return m_msrp_message_isSet;
}

bool OAIMsrp_data_product_render_msrp_price_info_interface::is_msrp_message_Valid() const{
    return m_msrp_message_isValid;
}

QString OAIMsrp_data_product_render_msrp_price_info_interface::getMsrpPrice() const {
    return m_msrp_price;
}
void OAIMsrp_data_product_render_msrp_price_info_interface::setMsrpPrice(const QString &msrp_price) {
    m_msrp_price = msrp_price;
    m_msrp_price_isSet = true;
}

bool OAIMsrp_data_product_render_msrp_price_info_interface::is_msrp_price_Set() const{
    return m_msrp_price_isSet;
}

bool OAIMsrp_data_product_render_msrp_price_info_interface::is_msrp_price_Valid() const{
    return m_msrp_price_isValid;
}

bool OAIMsrp_data_product_render_msrp_price_info_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_explanation_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extension_attributes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_applicable_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_is_shown_price_on_gesture_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_msrp_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_msrp_price_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIMsrp_data_product_render_msrp_price_info_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_explanation_message_isValid && m_is_applicable_isValid && m_is_shown_price_on_gesture_isValid && m_msrp_message_isValid && m_msrp_price_isValid && true;
}

} // namespace OpenAPI
