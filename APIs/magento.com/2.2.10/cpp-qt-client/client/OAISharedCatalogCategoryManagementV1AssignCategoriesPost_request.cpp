/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISharedCatalogCategoryManagementV1AssignCategoriesPost_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISharedCatalogCategoryManagementV1AssignCategoriesPost_request::OAISharedCatalogCategoryManagementV1AssignCategoriesPost_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISharedCatalogCategoryManagementV1AssignCategoriesPost_request::OAISharedCatalogCategoryManagementV1AssignCategoriesPost_request() {
    this->initializeModel();
}

OAISharedCatalogCategoryManagementV1AssignCategoriesPost_request::~OAISharedCatalogCategoryManagementV1AssignCategoriesPost_request() {}

void OAISharedCatalogCategoryManagementV1AssignCategoriesPost_request::initializeModel() {

    m_categories_isSet = false;
    m_categories_isValid = false;
}

void OAISharedCatalogCategoryManagementV1AssignCategoriesPost_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISharedCatalogCategoryManagementV1AssignCategoriesPost_request::fromJsonObject(QJsonObject json) {

    m_categories_isValid = ::OpenAPI::fromJsonValue(m_categories, json[QString("categories")]);
    m_categories_isSet = !json[QString("categories")].isNull() && m_categories_isValid;
}

QString OAISharedCatalogCategoryManagementV1AssignCategoriesPost_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISharedCatalogCategoryManagementV1AssignCategoriesPost_request::asJsonObject() const {
    QJsonObject obj;
    if (m_categories.size() > 0) {
        obj.insert(QString("categories"), ::OpenAPI::toJsonValue(m_categories));
    }
    return obj;
}

QList<OAICatalog_data_category_interface> OAISharedCatalogCategoryManagementV1AssignCategoriesPost_request::getCategories() const {
    return m_categories;
}
void OAISharedCatalogCategoryManagementV1AssignCategoriesPost_request::setCategories(const QList<OAICatalog_data_category_interface> &categories) {
    m_categories = categories;
    m_categories_isSet = true;
}

bool OAISharedCatalogCategoryManagementV1AssignCategoriesPost_request::is_categories_Set() const{
    return m_categories_isSet;
}

bool OAISharedCatalogCategoryManagementV1AssignCategoriesPost_request::is_categories_Valid() const{
    return m_categories_isValid;
}

bool OAISharedCatalogCategoryManagementV1AssignCategoriesPost_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_categories.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISharedCatalogCategoryManagementV1AssignCategoriesPost_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_categories_isValid && true;
}

} // namespace OpenAPI
