/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuote_data_shipping_method_interface.h
 *
 * Interface ShippingMethodInterface
 */

#ifndef OAIQuote_data_shipping_method_interface_H
#define OAIQuote_data_shipping_method_interface_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIQuote_data_shipping_method_interface : public OAIObject {
public:
    OAIQuote_data_shipping_method_interface();
    OAIQuote_data_shipping_method_interface(QString json);
    ~OAIQuote_data_shipping_method_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getAmount() const;
    void setAmount(const double &amount);
    bool is_amount_Set() const;
    bool is_amount_Valid() const;

    bool isAvailable() const;
    void setAvailable(const bool &available);
    bool is_available_Set() const;
    bool is_available_Valid() const;

    double getBaseAmount() const;
    void setBaseAmount(const double &base_amount);
    bool is_base_amount_Set() const;
    bool is_base_amount_Valid() const;

    QString getCarrierCode() const;
    void setCarrierCode(const QString &carrier_code);
    bool is_carrier_code_Set() const;
    bool is_carrier_code_Valid() const;

    QString getCarrierTitle() const;
    void setCarrierTitle(const QString &carrier_title);
    bool is_carrier_title_Set() const;
    bool is_carrier_title_Valid() const;

    QString getErrorMessage() const;
    void setErrorMessage(const QString &error_message);
    bool is_error_message_Set() const;
    bool is_error_message_Valid() const;

    OAIObject getExtensionAttributes() const;
    void setExtensionAttributes(const OAIObject &extension_attributes);
    bool is_extension_attributes_Set() const;
    bool is_extension_attributes_Valid() const;

    QString getMethodCode() const;
    void setMethodCode(const QString &method_code);
    bool is_method_code_Set() const;
    bool is_method_code_Valid() const;

    QString getMethodTitle() const;
    void setMethodTitle(const QString &method_title);
    bool is_method_title_Set() const;
    bool is_method_title_Valid() const;

    double getPriceExclTax() const;
    void setPriceExclTax(const double &price_excl_tax);
    bool is_price_excl_tax_Set() const;
    bool is_price_excl_tax_Valid() const;

    double getPriceInclTax() const;
    void setPriceInclTax(const double &price_incl_tax);
    bool is_price_incl_tax_Set() const;
    bool is_price_incl_tax_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_amount;
    bool m_amount_isSet;
    bool m_amount_isValid;

    bool m_available;
    bool m_available_isSet;
    bool m_available_isValid;

    double m_base_amount;
    bool m_base_amount_isSet;
    bool m_base_amount_isValid;

    QString m_carrier_code;
    bool m_carrier_code_isSet;
    bool m_carrier_code_isValid;

    QString m_carrier_title;
    bool m_carrier_title_isSet;
    bool m_carrier_title_isValid;

    QString m_error_message;
    bool m_error_message_isSet;
    bool m_error_message_isValid;

    OAIObject m_extension_attributes;
    bool m_extension_attributes_isSet;
    bool m_extension_attributes_isValid;

    QString m_method_code;
    bool m_method_code_isSet;
    bool m_method_code_isValid;

    QString m_method_title;
    bool m_method_title_isSet;
    bool m_method_title_isValid;

    double m_price_excl_tax;
    bool m_price_excl_tax_isSet;
    bool m_price_excl_tax_isValid;

    double m_price_incl_tax;
    bool m_price_incl_tax_isSet;
    bool m_price_incl_tax_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuote_data_shipping_method_interface)

#endif // OAIQuote_data_shipping_method_interface_H
