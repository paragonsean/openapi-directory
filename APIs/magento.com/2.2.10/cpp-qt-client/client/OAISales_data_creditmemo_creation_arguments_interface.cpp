/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISales_data_creditmemo_creation_arguments_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISales_data_creditmemo_creation_arguments_interface::OAISales_data_creditmemo_creation_arguments_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISales_data_creditmemo_creation_arguments_interface::OAISales_data_creditmemo_creation_arguments_interface() {
    this->initializeModel();
}

OAISales_data_creditmemo_creation_arguments_interface::~OAISales_data_creditmemo_creation_arguments_interface() {}

void OAISales_data_creditmemo_creation_arguments_interface::initializeModel() {

    m_adjustment_negative_isSet = false;
    m_adjustment_negative_isValid = false;

    m_adjustment_positive_isSet = false;
    m_adjustment_positive_isValid = false;

    m_extension_attributes_isSet = false;
    m_extension_attributes_isValid = false;

    m_shipping_amount_isSet = false;
    m_shipping_amount_isValid = false;
}

void OAISales_data_creditmemo_creation_arguments_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISales_data_creditmemo_creation_arguments_interface::fromJsonObject(QJsonObject json) {

    m_adjustment_negative_isValid = ::OpenAPI::fromJsonValue(m_adjustment_negative, json[QString("adjustment_negative")]);
    m_adjustment_negative_isSet = !json[QString("adjustment_negative")].isNull() && m_adjustment_negative_isValid;

    m_adjustment_positive_isValid = ::OpenAPI::fromJsonValue(m_adjustment_positive, json[QString("adjustment_positive")]);
    m_adjustment_positive_isSet = !json[QString("adjustment_positive")].isNull() && m_adjustment_positive_isValid;

    m_extension_attributes_isValid = ::OpenAPI::fromJsonValue(m_extension_attributes, json[QString("extension_attributes")]);
    m_extension_attributes_isSet = !json[QString("extension_attributes")].isNull() && m_extension_attributes_isValid;

    m_shipping_amount_isValid = ::OpenAPI::fromJsonValue(m_shipping_amount, json[QString("shipping_amount")]);
    m_shipping_amount_isSet = !json[QString("shipping_amount")].isNull() && m_shipping_amount_isValid;
}

QString OAISales_data_creditmemo_creation_arguments_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISales_data_creditmemo_creation_arguments_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_adjustment_negative_isSet) {
        obj.insert(QString("adjustment_negative"), ::OpenAPI::toJsonValue(m_adjustment_negative));
    }
    if (m_adjustment_positive_isSet) {
        obj.insert(QString("adjustment_positive"), ::OpenAPI::toJsonValue(m_adjustment_positive));
    }
    if (m_extension_attributes.isSet()) {
        obj.insert(QString("extension_attributes"), ::OpenAPI::toJsonValue(m_extension_attributes));
    }
    if (m_shipping_amount_isSet) {
        obj.insert(QString("shipping_amount"), ::OpenAPI::toJsonValue(m_shipping_amount));
    }
    return obj;
}

double OAISales_data_creditmemo_creation_arguments_interface::getAdjustmentNegative() const {
    return m_adjustment_negative;
}
void OAISales_data_creditmemo_creation_arguments_interface::setAdjustmentNegative(const double &adjustment_negative) {
    m_adjustment_negative = adjustment_negative;
    m_adjustment_negative_isSet = true;
}

bool OAISales_data_creditmemo_creation_arguments_interface::is_adjustment_negative_Set() const{
    return m_adjustment_negative_isSet;
}

bool OAISales_data_creditmemo_creation_arguments_interface::is_adjustment_negative_Valid() const{
    return m_adjustment_negative_isValid;
}

double OAISales_data_creditmemo_creation_arguments_interface::getAdjustmentPositive() const {
    return m_adjustment_positive;
}
void OAISales_data_creditmemo_creation_arguments_interface::setAdjustmentPositive(const double &adjustment_positive) {
    m_adjustment_positive = adjustment_positive;
    m_adjustment_positive_isSet = true;
}

bool OAISales_data_creditmemo_creation_arguments_interface::is_adjustment_positive_Set() const{
    return m_adjustment_positive_isSet;
}

bool OAISales_data_creditmemo_creation_arguments_interface::is_adjustment_positive_Valid() const{
    return m_adjustment_positive_isValid;
}

OAISales_data_creditmemo_creation_arguments_extension_interface OAISales_data_creditmemo_creation_arguments_interface::getExtensionAttributes() const {
    return m_extension_attributes;
}
void OAISales_data_creditmemo_creation_arguments_interface::setExtensionAttributes(const OAISales_data_creditmemo_creation_arguments_extension_interface &extension_attributes) {
    m_extension_attributes = extension_attributes;
    m_extension_attributes_isSet = true;
}

bool OAISales_data_creditmemo_creation_arguments_interface::is_extension_attributes_Set() const{
    return m_extension_attributes_isSet;
}

bool OAISales_data_creditmemo_creation_arguments_interface::is_extension_attributes_Valid() const{
    return m_extension_attributes_isValid;
}

double OAISales_data_creditmemo_creation_arguments_interface::getShippingAmount() const {
    return m_shipping_amount;
}
void OAISales_data_creditmemo_creation_arguments_interface::setShippingAmount(const double &shipping_amount) {
    m_shipping_amount = shipping_amount;
    m_shipping_amount_isSet = true;
}

bool OAISales_data_creditmemo_creation_arguments_interface::is_shipping_amount_Set() const{
    return m_shipping_amount_isSet;
}

bool OAISales_data_creditmemo_creation_arguments_interface::is_shipping_amount_Valid() const{
    return m_shipping_amount_isValid;
}

bool OAISales_data_creditmemo_creation_arguments_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_adjustment_negative_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_adjustment_positive_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extension_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_amount_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISales_data_creditmemo_creation_arguments_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
