/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDownloadableLinkRepositoryV1SavePost_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDownloadableLinkRepositoryV1SavePost_request::OAIDownloadableLinkRepositoryV1SavePost_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDownloadableLinkRepositoryV1SavePost_request::OAIDownloadableLinkRepositoryV1SavePost_request() {
    this->initializeModel();
}

OAIDownloadableLinkRepositoryV1SavePost_request::~OAIDownloadableLinkRepositoryV1SavePost_request() {}

void OAIDownloadableLinkRepositoryV1SavePost_request::initializeModel() {

    m_is_global_scope_content_isSet = false;
    m_is_global_scope_content_isValid = false;

    m_link_isSet = false;
    m_link_isValid = false;
}

void OAIDownloadableLinkRepositoryV1SavePost_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDownloadableLinkRepositoryV1SavePost_request::fromJsonObject(QJsonObject json) {

    m_is_global_scope_content_isValid = ::OpenAPI::fromJsonValue(m_is_global_scope_content, json[QString("isGlobalScopeContent")]);
    m_is_global_scope_content_isSet = !json[QString("isGlobalScopeContent")].isNull() && m_is_global_scope_content_isValid;

    m_link_isValid = ::OpenAPI::fromJsonValue(m_link, json[QString("link")]);
    m_link_isSet = !json[QString("link")].isNull() && m_link_isValid;
}

QString OAIDownloadableLinkRepositoryV1SavePost_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDownloadableLinkRepositoryV1SavePost_request::asJsonObject() const {
    QJsonObject obj;
    if (m_is_global_scope_content_isSet) {
        obj.insert(QString("isGlobalScopeContent"), ::OpenAPI::toJsonValue(m_is_global_scope_content));
    }
    if (m_link.isSet()) {
        obj.insert(QString("link"), ::OpenAPI::toJsonValue(m_link));
    }
    return obj;
}

bool OAIDownloadableLinkRepositoryV1SavePost_request::isIsGlobalScopeContent() const {
    return m_is_global_scope_content;
}
void OAIDownloadableLinkRepositoryV1SavePost_request::setIsGlobalScopeContent(const bool &is_global_scope_content) {
    m_is_global_scope_content = is_global_scope_content;
    m_is_global_scope_content_isSet = true;
}

bool OAIDownloadableLinkRepositoryV1SavePost_request::is_is_global_scope_content_Set() const{
    return m_is_global_scope_content_isSet;
}

bool OAIDownloadableLinkRepositoryV1SavePost_request::is_is_global_scope_content_Valid() const{
    return m_is_global_scope_content_isValid;
}

OAIDownloadable_data_link_interface OAIDownloadableLinkRepositoryV1SavePost_request::getLink() const {
    return m_link;
}
void OAIDownloadableLinkRepositoryV1SavePost_request::setLink(const OAIDownloadable_data_link_interface &link) {
    m_link = link;
    m_link_isSet = true;
}

bool OAIDownloadableLinkRepositoryV1SavePost_request::is_link_Set() const{
    return m_link_isSet;
}

bool OAIDownloadableLinkRepositoryV1SavePost_request::is_link_Valid() const{
    return m_link_isValid;
}

bool OAIDownloadableLinkRepositoryV1SavePost_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_is_global_scope_content_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_link.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDownloadableLinkRepositoryV1SavePost_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_link_isValid && true;
}

} // namespace OpenAPI
