/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuoteCartTotalManagementV1CollectTotalsPut_request.h
 *
 * 
 */

#ifndef OAIQuoteCartTotalManagementV1CollectTotalsPut_request_H
#define OAIQuoteCartTotalManagementV1CollectTotalsPut_request_H

#include <QJsonObject>

#include "OAIQuote_data_payment_interface.h"
#include "OAIQuote_data_totals_additional_data_interface.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIQuote_data_totals_additional_data_interface;
class OAIQuote_data_payment_interface;

class OAIQuoteCartTotalManagementV1CollectTotalsPut_request : public OAIObject {
public:
    OAIQuoteCartTotalManagementV1CollectTotalsPut_request();
    OAIQuoteCartTotalManagementV1CollectTotalsPut_request(QString json);
    ~OAIQuoteCartTotalManagementV1CollectTotalsPut_request() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIQuote_data_totals_additional_data_interface getAdditionalData() const;
    void setAdditionalData(const OAIQuote_data_totals_additional_data_interface &additional_data);
    bool is_additional_data_Set() const;
    bool is_additional_data_Valid() const;

    OAIQuote_data_payment_interface getPaymentMethod() const;
    void setPaymentMethod(const OAIQuote_data_payment_interface &payment_method);
    bool is_payment_method_Set() const;
    bool is_payment_method_Valid() const;

    QString getShippingCarrierCode() const;
    void setShippingCarrierCode(const QString &shipping_carrier_code);
    bool is_shipping_carrier_code_Set() const;
    bool is_shipping_carrier_code_Valid() const;

    QString getShippingMethodCode() const;
    void setShippingMethodCode(const QString &shipping_method_code);
    bool is_shipping_method_code_Set() const;
    bool is_shipping_method_code_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIQuote_data_totals_additional_data_interface m_additional_data;
    bool m_additional_data_isSet;
    bool m_additional_data_isValid;

    OAIQuote_data_payment_interface m_payment_method;
    bool m_payment_method_isSet;
    bool m_payment_method_isValid;

    QString m_shipping_carrier_code;
    bool m_shipping_carrier_code_isSet;
    bool m_shipping_carrier_code_isValid;

    QString m_shipping_method_code;
    bool m_shipping_method_code_isSet;
    bool m_shipping_method_code_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuoteCartTotalManagementV1CollectTotalsPut_request)

#endif // OAIQuoteCartTotalManagementV1CollectTotalsPut_request_H
