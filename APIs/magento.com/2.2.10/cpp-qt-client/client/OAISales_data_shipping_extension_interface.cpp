/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISales_data_shipping_extension_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISales_data_shipping_extension_interface::OAISales_data_shipping_extension_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISales_data_shipping_extension_interface::OAISales_data_shipping_extension_interface() {
    this->initializeModel();
}

OAISales_data_shipping_extension_interface::~OAISales_data_shipping_extension_interface() {}

void OAISales_data_shipping_extension_interface::initializeModel() {

    m_collection_point_isSet = false;
    m_collection_point_isValid = false;

    m_ext_order_id_isSet = false;
    m_ext_order_id_isValid = false;

    m_shipping_experience_isSet = false;
    m_shipping_experience_isValid = false;
}

void OAISales_data_shipping_extension_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISales_data_shipping_extension_interface::fromJsonObject(QJsonObject json) {

    m_collection_point_isValid = ::OpenAPI::fromJsonValue(m_collection_point, json[QString("collection_point")]);
    m_collection_point_isSet = !json[QString("collection_point")].isNull() && m_collection_point_isValid;

    m_ext_order_id_isValid = ::OpenAPI::fromJsonValue(m_ext_order_id, json[QString("ext_order_id")]);
    m_ext_order_id_isSet = !json[QString("ext_order_id")].isNull() && m_ext_order_id_isValid;

    m_shipping_experience_isValid = ::OpenAPI::fromJsonValue(m_shipping_experience, json[QString("shipping_experience")]);
    m_shipping_experience_isSet = !json[QString("shipping_experience")].isNull() && m_shipping_experience_isValid;
}

QString OAISales_data_shipping_extension_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISales_data_shipping_extension_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_collection_point.isSet()) {
        obj.insert(QString("collection_point"), ::OpenAPI::toJsonValue(m_collection_point));
    }
    if (m_ext_order_id_isSet) {
        obj.insert(QString("ext_order_id"), ::OpenAPI::toJsonValue(m_ext_order_id));
    }
    if (m_shipping_experience.isSet()) {
        obj.insert(QString("shipping_experience"), ::OpenAPI::toJsonValue(m_shipping_experience));
    }
    return obj;
}

OAITemando_shipping_data_collection_point_order_collection_point_interface OAISales_data_shipping_extension_interface::getCollectionPoint() const {
    return m_collection_point;
}
void OAISales_data_shipping_extension_interface::setCollectionPoint(const OAITemando_shipping_data_collection_point_order_collection_point_interface &collection_point) {
    m_collection_point = collection_point;
    m_collection_point_isSet = true;
}

bool OAISales_data_shipping_extension_interface::is_collection_point_Set() const{
    return m_collection_point_isSet;
}

bool OAISales_data_shipping_extension_interface::is_collection_point_Valid() const{
    return m_collection_point_isValid;
}

QString OAISales_data_shipping_extension_interface::getExtOrderId() const {
    return m_ext_order_id;
}
void OAISales_data_shipping_extension_interface::setExtOrderId(const QString &ext_order_id) {
    m_ext_order_id = ext_order_id;
    m_ext_order_id_isSet = true;
}

bool OAISales_data_shipping_extension_interface::is_ext_order_id_Set() const{
    return m_ext_order_id_isSet;
}

bool OAISales_data_shipping_extension_interface::is_ext_order_id_Valid() const{
    return m_ext_order_id_isValid;
}

OAITemando_shipping_data_order_shipping_experience_interface OAISales_data_shipping_extension_interface::getShippingExperience() const {
    return m_shipping_experience;
}
void OAISales_data_shipping_extension_interface::setShippingExperience(const OAITemando_shipping_data_order_shipping_experience_interface &shipping_experience) {
    m_shipping_experience = shipping_experience;
    m_shipping_experience_isSet = true;
}

bool OAISales_data_shipping_extension_interface::is_shipping_experience_Set() const{
    return m_shipping_experience_isSet;
}

bool OAISales_data_shipping_extension_interface::is_shipping_experience_Valid() const{
    return m_shipping_experience_isValid;
}

bool OAISales_data_shipping_extension_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_collection_point.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_ext_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_experience.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISales_data_shipping_extension_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
