/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICatalog_inventory_data_stock_status_interface.h
 *
 * Interface StockStatusInterface
 */

#ifndef OAICatalog_inventory_data_stock_status_interface_H
#define OAICatalog_inventory_data_stock_status_interface_H

#include <QJsonObject>

#include "OAICatalog_inventory_data_stock_item_interface.h"
#include "OAIObject.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICatalog_inventory_data_stock_item_interface;

class OAICatalog_inventory_data_stock_status_interface : public OAIObject {
public:
    OAICatalog_inventory_data_stock_status_interface();
    OAICatalog_inventory_data_stock_status_interface(QString json);
    ~OAICatalog_inventory_data_stock_status_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getExtensionAttributes() const;
    void setExtensionAttributes(const OAIObject &extension_attributes);
    bool is_extension_attributes_Set() const;
    bool is_extension_attributes_Valid() const;

    qint32 getProductId() const;
    void setProductId(const qint32 &product_id);
    bool is_product_id_Set() const;
    bool is_product_id_Valid() const;

    qint32 getQty() const;
    void setQty(const qint32 &qty);
    bool is_qty_Set() const;
    bool is_qty_Valid() const;

    qint32 getStockId() const;
    void setStockId(const qint32 &stock_id);
    bool is_stock_id_Set() const;
    bool is_stock_id_Valid() const;

    OAICatalog_inventory_data_stock_item_interface getStockItem() const;
    void setStockItem(const OAICatalog_inventory_data_stock_item_interface &stock_item);
    bool is_stock_item_Set() const;
    bool is_stock_item_Valid() const;

    qint32 getStockStatus() const;
    void setStockStatus(const qint32 &stock_status);
    bool is_stock_status_Set() const;
    bool is_stock_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_extension_attributes;
    bool m_extension_attributes_isSet;
    bool m_extension_attributes_isValid;

    qint32 m_product_id;
    bool m_product_id_isSet;
    bool m_product_id_isValid;

    qint32 m_qty;
    bool m_qty_isSet;
    bool m_qty_isValid;

    qint32 m_stock_id;
    bool m_stock_id_isSet;
    bool m_stock_id_isValid;

    OAICatalog_inventory_data_stock_item_interface m_stock_item;
    bool m_stock_item_isSet;
    bool m_stock_item_isValid;

    qint32 m_stock_status;
    bool m_stock_status_isSet;
    bool m_stock_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICatalog_inventory_data_stock_status_interface)

#endif // OAICatalog_inventory_data_stock_status_interface_H
