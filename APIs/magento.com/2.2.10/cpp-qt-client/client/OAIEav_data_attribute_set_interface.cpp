/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEav_data_attribute_set_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEav_data_attribute_set_interface::OAIEav_data_attribute_set_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEav_data_attribute_set_interface::OAIEav_data_attribute_set_interface() {
    this->initializeModel();
}

OAIEav_data_attribute_set_interface::~OAIEav_data_attribute_set_interface() {}

void OAIEav_data_attribute_set_interface::initializeModel() {

    m_attribute_set_id_isSet = false;
    m_attribute_set_id_isValid = false;

    m_attribute_set_name_isSet = false;
    m_attribute_set_name_isValid = false;

    m_entity_type_id_isSet = false;
    m_entity_type_id_isValid = false;

    m_extension_attributes_isSet = false;
    m_extension_attributes_isValid = false;

    m_sort_order_isSet = false;
    m_sort_order_isValid = false;
}

void OAIEav_data_attribute_set_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEav_data_attribute_set_interface::fromJsonObject(QJsonObject json) {

    m_attribute_set_id_isValid = ::OpenAPI::fromJsonValue(m_attribute_set_id, json[QString("attribute_set_id")]);
    m_attribute_set_id_isSet = !json[QString("attribute_set_id")].isNull() && m_attribute_set_id_isValid;

    m_attribute_set_name_isValid = ::OpenAPI::fromJsonValue(m_attribute_set_name, json[QString("attribute_set_name")]);
    m_attribute_set_name_isSet = !json[QString("attribute_set_name")].isNull() && m_attribute_set_name_isValid;

    m_entity_type_id_isValid = ::OpenAPI::fromJsonValue(m_entity_type_id, json[QString("entity_type_id")]);
    m_entity_type_id_isSet = !json[QString("entity_type_id")].isNull() && m_entity_type_id_isValid;

    m_extension_attributes_isValid = ::OpenAPI::fromJsonValue(m_extension_attributes, json[QString("extension_attributes")]);
    m_extension_attributes_isSet = !json[QString("extension_attributes")].isNull() && m_extension_attributes_isValid;

    m_sort_order_isValid = ::OpenAPI::fromJsonValue(m_sort_order, json[QString("sort_order")]);
    m_sort_order_isSet = !json[QString("sort_order")].isNull() && m_sort_order_isValid;
}

QString OAIEav_data_attribute_set_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEav_data_attribute_set_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_set_id_isSet) {
        obj.insert(QString("attribute_set_id"), ::OpenAPI::toJsonValue(m_attribute_set_id));
    }
    if (m_attribute_set_name_isSet) {
        obj.insert(QString("attribute_set_name"), ::OpenAPI::toJsonValue(m_attribute_set_name));
    }
    if (m_entity_type_id_isSet) {
        obj.insert(QString("entity_type_id"), ::OpenAPI::toJsonValue(m_entity_type_id));
    }
    if (m_extension_attributes_isSet) {
        obj.insert(QString("extension_attributes"), ::OpenAPI::toJsonValue(m_extension_attributes));
    }
    if (m_sort_order_isSet) {
        obj.insert(QString("sort_order"), ::OpenAPI::toJsonValue(m_sort_order));
    }
    return obj;
}

qint32 OAIEav_data_attribute_set_interface::getAttributeSetId() const {
    return m_attribute_set_id;
}
void OAIEav_data_attribute_set_interface::setAttributeSetId(const qint32 &attribute_set_id) {
    m_attribute_set_id = attribute_set_id;
    m_attribute_set_id_isSet = true;
}

bool OAIEav_data_attribute_set_interface::is_attribute_set_id_Set() const{
    return m_attribute_set_id_isSet;
}

bool OAIEav_data_attribute_set_interface::is_attribute_set_id_Valid() const{
    return m_attribute_set_id_isValid;
}

QString OAIEav_data_attribute_set_interface::getAttributeSetName() const {
    return m_attribute_set_name;
}
void OAIEav_data_attribute_set_interface::setAttributeSetName(const QString &attribute_set_name) {
    m_attribute_set_name = attribute_set_name;
    m_attribute_set_name_isSet = true;
}

bool OAIEav_data_attribute_set_interface::is_attribute_set_name_Set() const{
    return m_attribute_set_name_isSet;
}

bool OAIEav_data_attribute_set_interface::is_attribute_set_name_Valid() const{
    return m_attribute_set_name_isValid;
}

qint32 OAIEav_data_attribute_set_interface::getEntityTypeId() const {
    return m_entity_type_id;
}
void OAIEav_data_attribute_set_interface::setEntityTypeId(const qint32 &entity_type_id) {
    m_entity_type_id = entity_type_id;
    m_entity_type_id_isSet = true;
}

bool OAIEav_data_attribute_set_interface::is_entity_type_id_Set() const{
    return m_entity_type_id_isSet;
}

bool OAIEav_data_attribute_set_interface::is_entity_type_id_Valid() const{
    return m_entity_type_id_isValid;
}

OAIObject OAIEav_data_attribute_set_interface::getExtensionAttributes() const {
    return m_extension_attributes;
}
void OAIEav_data_attribute_set_interface::setExtensionAttributes(const OAIObject &extension_attributes) {
    m_extension_attributes = extension_attributes;
    m_extension_attributes_isSet = true;
}

bool OAIEav_data_attribute_set_interface::is_extension_attributes_Set() const{
    return m_extension_attributes_isSet;
}

bool OAIEav_data_attribute_set_interface::is_extension_attributes_Valid() const{
    return m_extension_attributes_isValid;
}

qint32 OAIEav_data_attribute_set_interface::getSortOrder() const {
    return m_sort_order;
}
void OAIEav_data_attribute_set_interface::setSortOrder(const qint32 &sort_order) {
    m_sort_order = sort_order;
    m_sort_order_isSet = true;
}

bool OAIEav_data_attribute_set_interface::is_sort_order_Set() const{
    return m_sort_order_isSet;
}

bool OAIEav_data_attribute_set_interface::is_sort_order_Valid() const{
    return m_sort_order_isValid;
}

bool OAIEav_data_attribute_set_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_set_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_attribute_set_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_type_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extension_attributes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_order_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEav_data_attribute_set_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_attribute_set_name_isValid && m_sort_order_isValid && true;
}

} // namespace OpenAPI
