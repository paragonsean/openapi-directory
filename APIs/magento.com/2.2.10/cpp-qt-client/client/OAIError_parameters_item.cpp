/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIError_parameters_item.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIError_parameters_item::OAIError_parameters_item(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIError_parameters_item::OAIError_parameters_item() {
    this->initializeModel();
}

OAIError_parameters_item::~OAIError_parameters_item() {}

void OAIError_parameters_item::initializeModel() {

    m_field_name_isSet = false;
    m_field_name_isValid = false;

    m_field_value_isSet = false;
    m_field_value_isValid = false;

    m_resources_isSet = false;
    m_resources_isValid = false;
}

void OAIError_parameters_item::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIError_parameters_item::fromJsonObject(QJsonObject json) {

    m_field_name_isValid = ::OpenAPI::fromJsonValue(m_field_name, json[QString("fieldName")]);
    m_field_name_isSet = !json[QString("fieldName")].isNull() && m_field_name_isValid;

    m_field_value_isValid = ::OpenAPI::fromJsonValue(m_field_value, json[QString("fieldValue")]);
    m_field_value_isSet = !json[QString("fieldValue")].isNull() && m_field_value_isValid;

    m_resources_isValid = ::OpenAPI::fromJsonValue(m_resources, json[QString("resources")]);
    m_resources_isSet = !json[QString("resources")].isNull() && m_resources_isValid;
}

QString OAIError_parameters_item::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIError_parameters_item::asJsonObject() const {
    QJsonObject obj;
    if (m_field_name_isSet) {
        obj.insert(QString("fieldName"), ::OpenAPI::toJsonValue(m_field_name));
    }
    if (m_field_value_isSet) {
        obj.insert(QString("fieldValue"), ::OpenAPI::toJsonValue(m_field_value));
    }
    if (m_resources_isSet) {
        obj.insert(QString("resources"), ::OpenAPI::toJsonValue(m_resources));
    }
    return obj;
}

QString OAIError_parameters_item::getFieldName() const {
    return m_field_name;
}
void OAIError_parameters_item::setFieldName(const QString &field_name) {
    m_field_name = field_name;
    m_field_name_isSet = true;
}

bool OAIError_parameters_item::is_field_name_Set() const{
    return m_field_name_isSet;
}

bool OAIError_parameters_item::is_field_name_Valid() const{
    return m_field_name_isValid;
}

QString OAIError_parameters_item::getFieldValue() const {
    return m_field_value;
}
void OAIError_parameters_item::setFieldValue(const QString &field_value) {
    m_field_value = field_value;
    m_field_value_isSet = true;
}

bool OAIError_parameters_item::is_field_value_Set() const{
    return m_field_value_isSet;
}

bool OAIError_parameters_item::is_field_value_Valid() const{
    return m_field_value_isValid;
}

QString OAIError_parameters_item::getResources() const {
    return m_resources;
}
void OAIError_parameters_item::setResources(const QString &resources) {
    m_resources = resources;
    m_resources_isSet = true;
}

bool OAIError_parameters_item::is_resources_Set() const{
    return m_resources_isSet;
}

bool OAIError_parameters_item::is_resources_Valid() const{
    return m_resources_isValid;
}

bool OAIError_parameters_item::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_field_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_field_value_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_resources_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIError_parameters_item::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
