/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEavAttributeSetManagementV1CreatePost_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEavAttributeSetManagementV1CreatePost_request::OAIEavAttributeSetManagementV1CreatePost_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEavAttributeSetManagementV1CreatePost_request::OAIEavAttributeSetManagementV1CreatePost_request() {
    this->initializeModel();
}

OAIEavAttributeSetManagementV1CreatePost_request::~OAIEavAttributeSetManagementV1CreatePost_request() {}

void OAIEavAttributeSetManagementV1CreatePost_request::initializeModel() {

    m_attribute_set_isSet = false;
    m_attribute_set_isValid = false;

    m_entity_type_code_isSet = false;
    m_entity_type_code_isValid = false;

    m_skeleton_id_isSet = false;
    m_skeleton_id_isValid = false;
}

void OAIEavAttributeSetManagementV1CreatePost_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEavAttributeSetManagementV1CreatePost_request::fromJsonObject(QJsonObject json) {

    m_attribute_set_isValid = ::OpenAPI::fromJsonValue(m_attribute_set, json[QString("attributeSet")]);
    m_attribute_set_isSet = !json[QString("attributeSet")].isNull() && m_attribute_set_isValid;

    m_entity_type_code_isValid = ::OpenAPI::fromJsonValue(m_entity_type_code, json[QString("entityTypeCode")]);
    m_entity_type_code_isSet = !json[QString("entityTypeCode")].isNull() && m_entity_type_code_isValid;

    m_skeleton_id_isValid = ::OpenAPI::fromJsonValue(m_skeleton_id, json[QString("skeletonId")]);
    m_skeleton_id_isSet = !json[QString("skeletonId")].isNull() && m_skeleton_id_isValid;
}

QString OAIEavAttributeSetManagementV1CreatePost_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEavAttributeSetManagementV1CreatePost_request::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_set.isSet()) {
        obj.insert(QString("attributeSet"), ::OpenAPI::toJsonValue(m_attribute_set));
    }
    if (m_entity_type_code_isSet) {
        obj.insert(QString("entityTypeCode"), ::OpenAPI::toJsonValue(m_entity_type_code));
    }
    if (m_skeleton_id_isSet) {
        obj.insert(QString("skeletonId"), ::OpenAPI::toJsonValue(m_skeleton_id));
    }
    return obj;
}

OAIEav_data_attribute_set_interface OAIEavAttributeSetManagementV1CreatePost_request::getAttributeSet() const {
    return m_attribute_set;
}
void OAIEavAttributeSetManagementV1CreatePost_request::setAttributeSet(const OAIEav_data_attribute_set_interface &attribute_set) {
    m_attribute_set = attribute_set;
    m_attribute_set_isSet = true;
}

bool OAIEavAttributeSetManagementV1CreatePost_request::is_attribute_set_Set() const{
    return m_attribute_set_isSet;
}

bool OAIEavAttributeSetManagementV1CreatePost_request::is_attribute_set_Valid() const{
    return m_attribute_set_isValid;
}

QString OAIEavAttributeSetManagementV1CreatePost_request::getEntityTypeCode() const {
    return m_entity_type_code;
}
void OAIEavAttributeSetManagementV1CreatePost_request::setEntityTypeCode(const QString &entity_type_code) {
    m_entity_type_code = entity_type_code;
    m_entity_type_code_isSet = true;
}

bool OAIEavAttributeSetManagementV1CreatePost_request::is_entity_type_code_Set() const{
    return m_entity_type_code_isSet;
}

bool OAIEavAttributeSetManagementV1CreatePost_request::is_entity_type_code_Valid() const{
    return m_entity_type_code_isValid;
}

qint32 OAIEavAttributeSetManagementV1CreatePost_request::getSkeletonId() const {
    return m_skeleton_id;
}
void OAIEavAttributeSetManagementV1CreatePost_request::setSkeletonId(const qint32 &skeleton_id) {
    m_skeleton_id = skeleton_id;
    m_skeleton_id_isSet = true;
}

bool OAIEavAttributeSetManagementV1CreatePost_request::is_skeleton_id_Set() const{
    return m_skeleton_id_isSet;
}

bool OAIEavAttributeSetManagementV1CreatePost_request::is_skeleton_id_Valid() const{
    return m_skeleton_id_isValid;
}

bool OAIEavAttributeSetManagementV1CreatePost_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_set.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_type_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_skeleton_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEavAttributeSetManagementV1CreatePost_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_attribute_set_isValid && m_entity_type_code_isValid && m_skeleton_id_isValid && true;
}

} // namespace OpenAPI
