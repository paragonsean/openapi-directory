/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISales_data_total_interface.h
 *
 * Interface TotalInterface
 */

#ifndef OAISales_data_total_interface_H
#define OAISales_data_total_interface_H

#include <QJsonObject>

#include "OAIObject.h"

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAISales_data_total_interface : public OAIObject {
public:
    OAISales_data_total_interface();
    OAISales_data_total_interface(QString json);
    ~OAISales_data_total_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    double getBaseShippingAmount() const;
    void setBaseShippingAmount(const double &base_shipping_amount);
    bool is_base_shipping_amount_Set() const;
    bool is_base_shipping_amount_Valid() const;

    double getBaseShippingCanceled() const;
    void setBaseShippingCanceled(const double &base_shipping_canceled);
    bool is_base_shipping_canceled_Set() const;
    bool is_base_shipping_canceled_Valid() const;

    double getBaseShippingDiscountAmount() const;
    void setBaseShippingDiscountAmount(const double &base_shipping_discount_amount);
    bool is_base_shipping_discount_amount_Set() const;
    bool is_base_shipping_discount_amount_Valid() const;

    double getBaseShippingDiscountTaxCompensationAmnt() const;
    void setBaseShippingDiscountTaxCompensationAmnt(const double &base_shipping_discount_tax_compensation_amnt);
    bool is_base_shipping_discount_tax_compensation_amnt_Set() const;
    bool is_base_shipping_discount_tax_compensation_amnt_Valid() const;

    double getBaseShippingInclTax() const;
    void setBaseShippingInclTax(const double &base_shipping_incl_tax);
    bool is_base_shipping_incl_tax_Set() const;
    bool is_base_shipping_incl_tax_Valid() const;

    double getBaseShippingInvoiced() const;
    void setBaseShippingInvoiced(const double &base_shipping_invoiced);
    bool is_base_shipping_invoiced_Set() const;
    bool is_base_shipping_invoiced_Valid() const;

    double getBaseShippingRefunded() const;
    void setBaseShippingRefunded(const double &base_shipping_refunded);
    bool is_base_shipping_refunded_Set() const;
    bool is_base_shipping_refunded_Valid() const;

    double getBaseShippingTaxAmount() const;
    void setBaseShippingTaxAmount(const double &base_shipping_tax_amount);
    bool is_base_shipping_tax_amount_Set() const;
    bool is_base_shipping_tax_amount_Valid() const;

    double getBaseShippingTaxRefunded() const;
    void setBaseShippingTaxRefunded(const double &base_shipping_tax_refunded);
    bool is_base_shipping_tax_refunded_Set() const;
    bool is_base_shipping_tax_refunded_Valid() const;

    OAIObject getExtensionAttributes() const;
    void setExtensionAttributes(const OAIObject &extension_attributes);
    bool is_extension_attributes_Set() const;
    bool is_extension_attributes_Valid() const;

    double getShippingAmount() const;
    void setShippingAmount(const double &shipping_amount);
    bool is_shipping_amount_Set() const;
    bool is_shipping_amount_Valid() const;

    double getShippingCanceled() const;
    void setShippingCanceled(const double &shipping_canceled);
    bool is_shipping_canceled_Set() const;
    bool is_shipping_canceled_Valid() const;

    double getShippingDiscountAmount() const;
    void setShippingDiscountAmount(const double &shipping_discount_amount);
    bool is_shipping_discount_amount_Set() const;
    bool is_shipping_discount_amount_Valid() const;

    double getShippingDiscountTaxCompensationAmount() const;
    void setShippingDiscountTaxCompensationAmount(const double &shipping_discount_tax_compensation_amount);
    bool is_shipping_discount_tax_compensation_amount_Set() const;
    bool is_shipping_discount_tax_compensation_amount_Valid() const;

    double getShippingInclTax() const;
    void setShippingInclTax(const double &shipping_incl_tax);
    bool is_shipping_incl_tax_Set() const;
    bool is_shipping_incl_tax_Valid() const;

    double getShippingInvoiced() const;
    void setShippingInvoiced(const double &shipping_invoiced);
    bool is_shipping_invoiced_Set() const;
    bool is_shipping_invoiced_Valid() const;

    double getShippingRefunded() const;
    void setShippingRefunded(const double &shipping_refunded);
    bool is_shipping_refunded_Set() const;
    bool is_shipping_refunded_Valid() const;

    double getShippingTaxAmount() const;
    void setShippingTaxAmount(const double &shipping_tax_amount);
    bool is_shipping_tax_amount_Set() const;
    bool is_shipping_tax_amount_Valid() const;

    double getShippingTaxRefunded() const;
    void setShippingTaxRefunded(const double &shipping_tax_refunded);
    bool is_shipping_tax_refunded_Set() const;
    bool is_shipping_tax_refunded_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    double m_base_shipping_amount;
    bool m_base_shipping_amount_isSet;
    bool m_base_shipping_amount_isValid;

    double m_base_shipping_canceled;
    bool m_base_shipping_canceled_isSet;
    bool m_base_shipping_canceled_isValid;

    double m_base_shipping_discount_amount;
    bool m_base_shipping_discount_amount_isSet;
    bool m_base_shipping_discount_amount_isValid;

    double m_base_shipping_discount_tax_compensation_amnt;
    bool m_base_shipping_discount_tax_compensation_amnt_isSet;
    bool m_base_shipping_discount_tax_compensation_amnt_isValid;

    double m_base_shipping_incl_tax;
    bool m_base_shipping_incl_tax_isSet;
    bool m_base_shipping_incl_tax_isValid;

    double m_base_shipping_invoiced;
    bool m_base_shipping_invoiced_isSet;
    bool m_base_shipping_invoiced_isValid;

    double m_base_shipping_refunded;
    bool m_base_shipping_refunded_isSet;
    bool m_base_shipping_refunded_isValid;

    double m_base_shipping_tax_amount;
    bool m_base_shipping_tax_amount_isSet;
    bool m_base_shipping_tax_amount_isValid;

    double m_base_shipping_tax_refunded;
    bool m_base_shipping_tax_refunded_isSet;
    bool m_base_shipping_tax_refunded_isValid;

    OAIObject m_extension_attributes;
    bool m_extension_attributes_isSet;
    bool m_extension_attributes_isValid;

    double m_shipping_amount;
    bool m_shipping_amount_isSet;
    bool m_shipping_amount_isValid;

    double m_shipping_canceled;
    bool m_shipping_canceled_isSet;
    bool m_shipping_canceled_isValid;

    double m_shipping_discount_amount;
    bool m_shipping_discount_amount_isSet;
    bool m_shipping_discount_amount_isValid;

    double m_shipping_discount_tax_compensation_amount;
    bool m_shipping_discount_tax_compensation_amount_isSet;
    bool m_shipping_discount_tax_compensation_amount_isValid;

    double m_shipping_incl_tax;
    bool m_shipping_incl_tax_isSet;
    bool m_shipping_incl_tax_isValid;

    double m_shipping_invoiced;
    bool m_shipping_invoiced_isSet;
    bool m_shipping_invoiced_isValid;

    double m_shipping_refunded;
    bool m_shipping_refunded_isSet;
    bool m_shipping_refunded_isValid;

    double m_shipping_tax_amount;
    bool m_shipping_tax_amount_isSet;
    bool m_shipping_tax_amount_isValid;

    double m_shipping_tax_refunded;
    bool m_shipping_tax_refunded_isSet;
    bool m_shipping_tax_refunded_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISales_data_total_interface)

#endif // OAISales_data_total_interface_H
