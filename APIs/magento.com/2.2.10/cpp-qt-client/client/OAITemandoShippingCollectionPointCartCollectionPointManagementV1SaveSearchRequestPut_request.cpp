/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request::OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request::OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request() {
    this->initializeModel();
}

OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request::~OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request() {}

void OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request::initializeModel() {

    m_country_id_isSet = false;
    m_country_id_isValid = false;

    m_postcode_isSet = false;
    m_postcode_isValid = false;
}

void OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request::fromJsonObject(QJsonObject json) {

    m_country_id_isValid = ::OpenAPI::fromJsonValue(m_country_id, json[QString("countryId")]);
    m_country_id_isSet = !json[QString("countryId")].isNull() && m_country_id_isValid;

    m_postcode_isValid = ::OpenAPI::fromJsonValue(m_postcode, json[QString("postcode")]);
    m_postcode_isSet = !json[QString("postcode")].isNull() && m_postcode_isValid;
}

QString OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request::asJsonObject() const {
    QJsonObject obj;
    if (m_country_id_isSet) {
        obj.insert(QString("countryId"), ::OpenAPI::toJsonValue(m_country_id));
    }
    if (m_postcode_isSet) {
        obj.insert(QString("postcode"), ::OpenAPI::toJsonValue(m_postcode));
    }
    return obj;
}

QString OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request::getCountryId() const {
    return m_country_id;
}
void OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request::setCountryId(const QString &country_id) {
    m_country_id = country_id;
    m_country_id_isSet = true;
}

bool OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request::is_country_id_Set() const{
    return m_country_id_isSet;
}

bool OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request::is_country_id_Valid() const{
    return m_country_id_isValid;
}

QString OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request::getPostcode() const {
    return m_postcode;
}
void OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request::setPostcode(const QString &postcode) {
    m_postcode = postcode;
    m_postcode_isSet = true;
}

bool OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request::is_postcode_Set() const{
    return m_postcode_isSet;
}

bool OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request::is_postcode_Valid() const{
    return m_postcode_isValid;
}

bool OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_country_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_postcode_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITemandoShippingCollectionPointCartCollectionPointManagementV1SaveSearchRequestPut_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_country_id_isValid && m_postcode_isValid && true;
}

} // namespace OpenAPI
