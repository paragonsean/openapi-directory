/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISales_data_invoice_interface.h
 *
 * Invoice interface. An invoice is a record of the receipt of payment for an order.
 */

#ifndef OAISales_data_invoice_interface_H
#define OAISales_data_invoice_interface_H

#include <QJsonObject>

#include "OAISales_data_invoice_comment_interface.h"
#include "OAISales_data_invoice_extension_interface.h"
#include "OAISales_data_invoice_item_interface.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISales_data_invoice_comment_interface;
class OAISales_data_invoice_extension_interface;
class OAISales_data_invoice_item_interface;

class OAISales_data_invoice_interface : public OAIObject {
public:
    OAISales_data_invoice_interface();
    OAISales_data_invoice_interface(QString json);
    ~OAISales_data_invoice_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBaseCurrencyCode() const;
    void setBaseCurrencyCode(const QString &base_currency_code);
    bool is_base_currency_code_Set() const;
    bool is_base_currency_code_Valid() const;

    double getBaseDiscountAmount() const;
    void setBaseDiscountAmount(const double &base_discount_amount);
    bool is_base_discount_amount_Set() const;
    bool is_base_discount_amount_Valid() const;

    double getBaseDiscountTaxCompensationAmount() const;
    void setBaseDiscountTaxCompensationAmount(const double &base_discount_tax_compensation_amount);
    bool is_base_discount_tax_compensation_amount_Set() const;
    bool is_base_discount_tax_compensation_amount_Valid() const;

    double getBaseGrandTotal() const;
    void setBaseGrandTotal(const double &base_grand_total);
    bool is_base_grand_total_Set() const;
    bool is_base_grand_total_Valid() const;

    double getBaseShippingAmount() const;
    void setBaseShippingAmount(const double &base_shipping_amount);
    bool is_base_shipping_amount_Set() const;
    bool is_base_shipping_amount_Valid() const;

    double getBaseShippingDiscountTaxCompensationAmnt() const;
    void setBaseShippingDiscountTaxCompensationAmnt(const double &base_shipping_discount_tax_compensation_amnt);
    bool is_base_shipping_discount_tax_compensation_amnt_Set() const;
    bool is_base_shipping_discount_tax_compensation_amnt_Valid() const;

    double getBaseShippingInclTax() const;
    void setBaseShippingInclTax(const double &base_shipping_incl_tax);
    bool is_base_shipping_incl_tax_Set() const;
    bool is_base_shipping_incl_tax_Valid() const;

    double getBaseShippingTaxAmount() const;
    void setBaseShippingTaxAmount(const double &base_shipping_tax_amount);
    bool is_base_shipping_tax_amount_Set() const;
    bool is_base_shipping_tax_amount_Valid() const;

    double getBaseSubtotal() const;
    void setBaseSubtotal(const double &base_subtotal);
    bool is_base_subtotal_Set() const;
    bool is_base_subtotal_Valid() const;

    double getBaseSubtotalInclTax() const;
    void setBaseSubtotalInclTax(const double &base_subtotal_incl_tax);
    bool is_base_subtotal_incl_tax_Set() const;
    bool is_base_subtotal_incl_tax_Valid() const;

    double getBaseTaxAmount() const;
    void setBaseTaxAmount(const double &base_tax_amount);
    bool is_base_tax_amount_Set() const;
    bool is_base_tax_amount_Valid() const;

    double getBaseToGlobalRate() const;
    void setBaseToGlobalRate(const double &base_to_global_rate);
    bool is_base_to_global_rate_Set() const;
    bool is_base_to_global_rate_Valid() const;

    double getBaseToOrderRate() const;
    void setBaseToOrderRate(const double &base_to_order_rate);
    bool is_base_to_order_rate_Set() const;
    bool is_base_to_order_rate_Valid() const;

    double getBaseTotalRefunded() const;
    void setBaseTotalRefunded(const double &base_total_refunded);
    bool is_base_total_refunded_Set() const;
    bool is_base_total_refunded_Valid() const;

    qint32 getBillingAddressId() const;
    void setBillingAddressId(const qint32 &billing_address_id);
    bool is_billing_address_id_Set() const;
    bool is_billing_address_id_Valid() const;

    qint32 getCanVoidFlag() const;
    void setCanVoidFlag(const qint32 &can_void_flag);
    bool is_can_void_flag_Set() const;
    bool is_can_void_flag_Valid() const;

    QList<OAISales_data_invoice_comment_interface> getComments() const;
    void setComments(const QList<OAISales_data_invoice_comment_interface> &comments);
    bool is_comments_Set() const;
    bool is_comments_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    double getDiscountAmount() const;
    void setDiscountAmount(const double &discount_amount);
    bool is_discount_amount_Set() const;
    bool is_discount_amount_Valid() const;

    QString getDiscountDescription() const;
    void setDiscountDescription(const QString &discount_description);
    bool is_discount_description_Set() const;
    bool is_discount_description_Valid() const;

    double getDiscountTaxCompensationAmount() const;
    void setDiscountTaxCompensationAmount(const double &discount_tax_compensation_amount);
    bool is_discount_tax_compensation_amount_Set() const;
    bool is_discount_tax_compensation_amount_Valid() const;

    qint32 getEmailSent() const;
    void setEmailSent(const qint32 &email_sent);
    bool is_email_sent_Set() const;
    bool is_email_sent_Valid() const;

    qint32 getEntityId() const;
    void setEntityId(const qint32 &entity_id);
    bool is_entity_id_Set() const;
    bool is_entity_id_Valid() const;

    OAISales_data_invoice_extension_interface getExtensionAttributes() const;
    void setExtensionAttributes(const OAISales_data_invoice_extension_interface &extension_attributes);
    bool is_extension_attributes_Set() const;
    bool is_extension_attributes_Valid() const;

    QString getGlobalCurrencyCode() const;
    void setGlobalCurrencyCode(const QString &global_currency_code);
    bool is_global_currency_code_Set() const;
    bool is_global_currency_code_Valid() const;

    double getGrandTotal() const;
    void setGrandTotal(const double &grand_total);
    bool is_grand_total_Set() const;
    bool is_grand_total_Valid() const;

    QString getIncrementId() const;
    void setIncrementId(const QString &increment_id);
    bool is_increment_id_Set() const;
    bool is_increment_id_Valid() const;

    qint32 getIsUsedForRefund() const;
    void setIsUsedForRefund(const qint32 &is_used_for_refund);
    bool is_is_used_for_refund_Set() const;
    bool is_is_used_for_refund_Valid() const;

    QList<OAISales_data_invoice_item_interface> getItems() const;
    void setItems(const QList<OAISales_data_invoice_item_interface> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    QString getOrderCurrencyCode() const;
    void setOrderCurrencyCode(const QString &order_currency_code);
    bool is_order_currency_code_Set() const;
    bool is_order_currency_code_Valid() const;

    qint32 getOrderId() const;
    void setOrderId(const qint32 &order_id);
    bool is_order_id_Set() const;
    bool is_order_id_Valid() const;

    qint32 getShippingAddressId() const;
    void setShippingAddressId(const qint32 &shipping_address_id);
    bool is_shipping_address_id_Set() const;
    bool is_shipping_address_id_Valid() const;

    double getShippingAmount() const;
    void setShippingAmount(const double &shipping_amount);
    bool is_shipping_amount_Set() const;
    bool is_shipping_amount_Valid() const;

    double getShippingDiscountTaxCompensationAmount() const;
    void setShippingDiscountTaxCompensationAmount(const double &shipping_discount_tax_compensation_amount);
    bool is_shipping_discount_tax_compensation_amount_Set() const;
    bool is_shipping_discount_tax_compensation_amount_Valid() const;

    double getShippingInclTax() const;
    void setShippingInclTax(const double &shipping_incl_tax);
    bool is_shipping_incl_tax_Set() const;
    bool is_shipping_incl_tax_Valid() const;

    double getShippingTaxAmount() const;
    void setShippingTaxAmount(const double &shipping_tax_amount);
    bool is_shipping_tax_amount_Set() const;
    bool is_shipping_tax_amount_Valid() const;

    qint32 getState() const;
    void setState(const qint32 &state);
    bool is_state_Set() const;
    bool is_state_Valid() const;

    QString getStoreCurrencyCode() const;
    void setStoreCurrencyCode(const QString &store_currency_code);
    bool is_store_currency_code_Set() const;
    bool is_store_currency_code_Valid() const;

    qint32 getStoreId() const;
    void setStoreId(const qint32 &store_id);
    bool is_store_id_Set() const;
    bool is_store_id_Valid() const;

    double getStoreToBaseRate() const;
    void setStoreToBaseRate(const double &store_to_base_rate);
    bool is_store_to_base_rate_Set() const;
    bool is_store_to_base_rate_Valid() const;

    double getStoreToOrderRate() const;
    void setStoreToOrderRate(const double &store_to_order_rate);
    bool is_store_to_order_rate_Set() const;
    bool is_store_to_order_rate_Valid() const;

    double getSubtotal() const;
    void setSubtotal(const double &subtotal);
    bool is_subtotal_Set() const;
    bool is_subtotal_Valid() const;

    double getSubtotalInclTax() const;
    void setSubtotalInclTax(const double &subtotal_incl_tax);
    bool is_subtotal_incl_tax_Set() const;
    bool is_subtotal_incl_tax_Valid() const;

    double getTaxAmount() const;
    void setTaxAmount(const double &tax_amount);
    bool is_tax_amount_Set() const;
    bool is_tax_amount_Valid() const;

    double getTotalQty() const;
    void setTotalQty(const double &total_qty);
    bool is_total_qty_Set() const;
    bool is_total_qty_Valid() const;

    QString getTransactionId() const;
    void setTransactionId(const QString &transaction_id);
    bool is_transaction_id_Set() const;
    bool is_transaction_id_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_base_currency_code;
    bool m_base_currency_code_isSet;
    bool m_base_currency_code_isValid;

    double m_base_discount_amount;
    bool m_base_discount_amount_isSet;
    bool m_base_discount_amount_isValid;

    double m_base_discount_tax_compensation_amount;
    bool m_base_discount_tax_compensation_amount_isSet;
    bool m_base_discount_tax_compensation_amount_isValid;

    double m_base_grand_total;
    bool m_base_grand_total_isSet;
    bool m_base_grand_total_isValid;

    double m_base_shipping_amount;
    bool m_base_shipping_amount_isSet;
    bool m_base_shipping_amount_isValid;

    double m_base_shipping_discount_tax_compensation_amnt;
    bool m_base_shipping_discount_tax_compensation_amnt_isSet;
    bool m_base_shipping_discount_tax_compensation_amnt_isValid;

    double m_base_shipping_incl_tax;
    bool m_base_shipping_incl_tax_isSet;
    bool m_base_shipping_incl_tax_isValid;

    double m_base_shipping_tax_amount;
    bool m_base_shipping_tax_amount_isSet;
    bool m_base_shipping_tax_amount_isValid;

    double m_base_subtotal;
    bool m_base_subtotal_isSet;
    bool m_base_subtotal_isValid;

    double m_base_subtotal_incl_tax;
    bool m_base_subtotal_incl_tax_isSet;
    bool m_base_subtotal_incl_tax_isValid;

    double m_base_tax_amount;
    bool m_base_tax_amount_isSet;
    bool m_base_tax_amount_isValid;

    double m_base_to_global_rate;
    bool m_base_to_global_rate_isSet;
    bool m_base_to_global_rate_isValid;

    double m_base_to_order_rate;
    bool m_base_to_order_rate_isSet;
    bool m_base_to_order_rate_isValid;

    double m_base_total_refunded;
    bool m_base_total_refunded_isSet;
    bool m_base_total_refunded_isValid;

    qint32 m_billing_address_id;
    bool m_billing_address_id_isSet;
    bool m_billing_address_id_isValid;

    qint32 m_can_void_flag;
    bool m_can_void_flag_isSet;
    bool m_can_void_flag_isValid;

    QList<OAISales_data_invoice_comment_interface> m_comments;
    bool m_comments_isSet;
    bool m_comments_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    double m_discount_amount;
    bool m_discount_amount_isSet;
    bool m_discount_amount_isValid;

    QString m_discount_description;
    bool m_discount_description_isSet;
    bool m_discount_description_isValid;

    double m_discount_tax_compensation_amount;
    bool m_discount_tax_compensation_amount_isSet;
    bool m_discount_tax_compensation_amount_isValid;

    qint32 m_email_sent;
    bool m_email_sent_isSet;
    bool m_email_sent_isValid;

    qint32 m_entity_id;
    bool m_entity_id_isSet;
    bool m_entity_id_isValid;

    OAISales_data_invoice_extension_interface m_extension_attributes;
    bool m_extension_attributes_isSet;
    bool m_extension_attributes_isValid;

    QString m_global_currency_code;
    bool m_global_currency_code_isSet;
    bool m_global_currency_code_isValid;

    double m_grand_total;
    bool m_grand_total_isSet;
    bool m_grand_total_isValid;

    QString m_increment_id;
    bool m_increment_id_isSet;
    bool m_increment_id_isValid;

    qint32 m_is_used_for_refund;
    bool m_is_used_for_refund_isSet;
    bool m_is_used_for_refund_isValid;

    QList<OAISales_data_invoice_item_interface> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    QString m_order_currency_code;
    bool m_order_currency_code_isSet;
    bool m_order_currency_code_isValid;

    qint32 m_order_id;
    bool m_order_id_isSet;
    bool m_order_id_isValid;

    qint32 m_shipping_address_id;
    bool m_shipping_address_id_isSet;
    bool m_shipping_address_id_isValid;

    double m_shipping_amount;
    bool m_shipping_amount_isSet;
    bool m_shipping_amount_isValid;

    double m_shipping_discount_tax_compensation_amount;
    bool m_shipping_discount_tax_compensation_amount_isSet;
    bool m_shipping_discount_tax_compensation_amount_isValid;

    double m_shipping_incl_tax;
    bool m_shipping_incl_tax_isSet;
    bool m_shipping_incl_tax_isValid;

    double m_shipping_tax_amount;
    bool m_shipping_tax_amount_isSet;
    bool m_shipping_tax_amount_isValid;

    qint32 m_state;
    bool m_state_isSet;
    bool m_state_isValid;

    QString m_store_currency_code;
    bool m_store_currency_code_isSet;
    bool m_store_currency_code_isValid;

    qint32 m_store_id;
    bool m_store_id_isSet;
    bool m_store_id_isValid;

    double m_store_to_base_rate;
    bool m_store_to_base_rate_isSet;
    bool m_store_to_base_rate_isValid;

    double m_store_to_order_rate;
    bool m_store_to_order_rate_isSet;
    bool m_store_to_order_rate_isValid;

    double m_subtotal;
    bool m_subtotal_isSet;
    bool m_subtotal_isValid;

    double m_subtotal_incl_tax;
    bool m_subtotal_incl_tax_isSet;
    bool m_subtotal_incl_tax_isValid;

    double m_tax_amount;
    bool m_tax_amount_isSet;
    bool m_tax_amount_isValid;

    double m_total_qty;
    bool m_total_qty_isSet;
    bool m_total_qty_isValid;

    QString m_transaction_id;
    bool m_transaction_id_isSet;
    bool m_transaction_id_isValid;

    QString m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISales_data_invoice_interface)

#endif // OAISales_data_invoice_interface_H
