/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINegotiable_quote_data_negotiable_quote_interface.h
 *
 * Interface NegotiableQuoteInterface
 */

#ifndef OAINegotiable_quote_data_negotiable_quote_interface_H
#define OAINegotiable_quote_data_negotiable_quote_interface_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINegotiable_quote_data_negotiable_quote_interface : public OAIObject {
public:
    OAINegotiable_quote_data_negotiable_quote_interface();
    OAINegotiable_quote_data_negotiable_quote_interface(QString json);
    ~OAINegotiable_quote_data_negotiable_quote_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAppliedRuleIds() const;
    void setAppliedRuleIds(const QString &applied_rule_ids);
    bool is_applied_rule_ids_Set() const;
    bool is_applied_rule_ids_Valid() const;

    double getBaseNegotiatedTotalPrice() const;
    void setBaseNegotiatedTotalPrice(const double &base_negotiated_total_price);
    bool is_base_negotiated_total_price_Set() const;
    bool is_base_negotiated_total_price_Valid() const;

    double getBaseOriginalTotalPrice() const;
    void setBaseOriginalTotalPrice(const double &base_original_total_price);
    bool is_base_original_total_price_Set() const;
    bool is_base_original_total_price_Valid() const;

    qint32 getCreatorId() const;
    void setCreatorId(const qint32 &creator_id);
    bool is_creator_id_Set() const;
    bool is_creator_id_Valid() const;

    qint32 getCreatorType() const;
    void setCreatorType(const qint32 &creator_type);
    bool is_creator_type_Set() const;
    bool is_creator_type_Valid() const;

    QString getDeletedSku() const;
    void setDeletedSku(const QString &deleted_sku);
    bool is_deleted_sku_Set() const;
    bool is_deleted_sku_Valid() const;

    qint32 getEmailNotificationStatus() const;
    void setEmailNotificationStatus(const qint32 &email_notification_status);
    bool is_email_notification_status_Set() const;
    bool is_email_notification_status_Valid() const;

    QString getExpirationPeriod() const;
    void setExpirationPeriod(const QString &expiration_period);
    bool is_expiration_period_Set() const;
    bool is_expiration_period_Valid() const;

    OAIObject getExtensionAttributes() const;
    void setExtensionAttributes(const OAIObject &extension_attributes);
    bool is_extension_attributes_Set() const;
    bool is_extension_attributes_Valid() const;

    bool isHasUnconfirmedChanges() const;
    void setHasUnconfirmedChanges(const bool &has_unconfirmed_changes);
    bool is_has_unconfirmed_changes_Set() const;
    bool is_has_unconfirmed_changes_Valid() const;

    bool isIsAddressDraft() const;
    void setIsAddressDraft(const bool &is_address_draft);
    bool is_is_address_draft_Set() const;
    bool is_is_address_draft_Valid() const;

    bool isIsCustomerPriceChanged() const;
    void setIsCustomerPriceChanged(const bool &is_customer_price_changed);
    bool is_is_customer_price_changed_Set() const;
    bool is_is_customer_price_changed_Valid() const;

    bool isIsRegularQuote() const;
    void setIsRegularQuote(const bool &is_regular_quote);
    bool is_is_regular_quote_Set() const;
    bool is_is_regular_quote_Valid() const;

    bool isIsShippingTaxChanged() const;
    void setIsShippingTaxChanged(const bool &is_shipping_tax_changed);
    bool is_is_shipping_tax_changed_Set() const;
    bool is_is_shipping_tax_changed_Valid() const;

    qint32 getNegotiatedPriceType() const;
    void setNegotiatedPriceType(const qint32 &negotiated_price_type);
    bool is_negotiated_price_type_Set() const;
    bool is_negotiated_price_type_Valid() const;

    double getNegotiatedPriceValue() const;
    void setNegotiatedPriceValue(const double &negotiated_price_value);
    bool is_negotiated_price_value_Set() const;
    bool is_negotiated_price_value_Valid() const;

    double getNegotiatedTotalPrice() const;
    void setNegotiatedTotalPrice(const double &negotiated_total_price);
    bool is_negotiated_total_price_Set() const;
    bool is_negotiated_total_price_Valid() const;

    qint32 getNotifications() const;
    void setNotifications(const qint32 &notifications);
    bool is_notifications_Set() const;
    bool is_notifications_Valid() const;

    double getOriginalTotalPrice() const;
    void setOriginalTotalPrice(const double &original_total_price);
    bool is_original_total_price_Set() const;
    bool is_original_total_price_Valid() const;

    qint32 getQuoteId() const;
    void setQuoteId(const qint32 &quote_id);
    bool is_quote_id_Set() const;
    bool is_quote_id_Valid() const;

    QString getQuoteName() const;
    void setQuoteName(const QString &quote_name);
    bool is_quote_name_Set() const;
    bool is_quote_name_Valid() const;

    double getShippingPrice() const;
    void setShippingPrice(const double &shipping_price);
    bool is_shipping_price_Set() const;
    bool is_shipping_price_Valid() const;

    QString getStatus() const;
    void setStatus(const QString &status);
    bool is_status_Set() const;
    bool is_status_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_applied_rule_ids;
    bool m_applied_rule_ids_isSet;
    bool m_applied_rule_ids_isValid;

    double m_base_negotiated_total_price;
    bool m_base_negotiated_total_price_isSet;
    bool m_base_negotiated_total_price_isValid;

    double m_base_original_total_price;
    bool m_base_original_total_price_isSet;
    bool m_base_original_total_price_isValid;

    qint32 m_creator_id;
    bool m_creator_id_isSet;
    bool m_creator_id_isValid;

    qint32 m_creator_type;
    bool m_creator_type_isSet;
    bool m_creator_type_isValid;

    QString m_deleted_sku;
    bool m_deleted_sku_isSet;
    bool m_deleted_sku_isValid;

    qint32 m_email_notification_status;
    bool m_email_notification_status_isSet;
    bool m_email_notification_status_isValid;

    QString m_expiration_period;
    bool m_expiration_period_isSet;
    bool m_expiration_period_isValid;

    OAIObject m_extension_attributes;
    bool m_extension_attributes_isSet;
    bool m_extension_attributes_isValid;

    bool m_has_unconfirmed_changes;
    bool m_has_unconfirmed_changes_isSet;
    bool m_has_unconfirmed_changes_isValid;

    bool m_is_address_draft;
    bool m_is_address_draft_isSet;
    bool m_is_address_draft_isValid;

    bool m_is_customer_price_changed;
    bool m_is_customer_price_changed_isSet;
    bool m_is_customer_price_changed_isValid;

    bool m_is_regular_quote;
    bool m_is_regular_quote_isSet;
    bool m_is_regular_quote_isValid;

    bool m_is_shipping_tax_changed;
    bool m_is_shipping_tax_changed_isSet;
    bool m_is_shipping_tax_changed_isValid;

    qint32 m_negotiated_price_type;
    bool m_negotiated_price_type_isSet;
    bool m_negotiated_price_type_isValid;

    double m_negotiated_price_value;
    bool m_negotiated_price_value_isSet;
    bool m_negotiated_price_value_isValid;

    double m_negotiated_total_price;
    bool m_negotiated_total_price_isSet;
    bool m_negotiated_total_price_isValid;

    qint32 m_notifications;
    bool m_notifications_isSet;
    bool m_notifications_isValid;

    double m_original_total_price;
    bool m_original_total_price_isSet;
    bool m_original_total_price_isValid;

    qint32 m_quote_id;
    bool m_quote_id_isSet;
    bool m_quote_id_isValid;

    QString m_quote_name;
    bool m_quote_name_isSet;
    bool m_quote_name_isValid;

    double m_shipping_price;
    bool m_shipping_price_isSet;
    bool m_shipping_price_isValid;

    QString m_status;
    bool m_status_isSet;
    bool m_status_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINegotiable_quote_data_negotiable_quote_interface)

#endif // OAINegotiable_quote_data_negotiable_quote_interface_H
