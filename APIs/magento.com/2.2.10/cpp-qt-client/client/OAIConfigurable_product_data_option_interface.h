/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIConfigurable_product_data_option_interface.h
 *
 * Interface OptionInterface
 */

#ifndef OAIConfigurable_product_data_option_interface_H
#define OAIConfigurable_product_data_option_interface_H

#include <QJsonObject>

#include "OAIConfigurable_product_data_option_value_interface.h"
#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIConfigurable_product_data_option_value_interface;

class OAIConfigurable_product_data_option_interface : public OAIObject {
public:
    OAIConfigurable_product_data_option_interface();
    OAIConfigurable_product_data_option_interface(QString json);
    ~OAIConfigurable_product_data_option_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAttributeId() const;
    void setAttributeId(const QString &attribute_id);
    bool is_attribute_id_Set() const;
    bool is_attribute_id_Valid() const;

    OAIObject getExtensionAttributes() const;
    void setExtensionAttributes(const OAIObject &extension_attributes);
    bool is_extension_attributes_Set() const;
    bool is_extension_attributes_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsUseDefault() const;
    void setIsUseDefault(const bool &is_use_default);
    bool is_is_use_default_Set() const;
    bool is_is_use_default_Valid() const;

    QString getLabel() const;
    void setLabel(const QString &label);
    bool is_label_Set() const;
    bool is_label_Valid() const;

    qint32 getPosition() const;
    void setPosition(const qint32 &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    qint32 getProductId() const;
    void setProductId(const qint32 &product_id);
    bool is_product_id_Set() const;
    bool is_product_id_Valid() const;

    QList<OAIConfigurable_product_data_option_value_interface> getValues() const;
    void setValues(const QList<OAIConfigurable_product_data_option_value_interface> &values);
    bool is_values_Set() const;
    bool is_values_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_attribute_id;
    bool m_attribute_id_isSet;
    bool m_attribute_id_isValid;

    OAIObject m_extension_attributes;
    bool m_extension_attributes_isSet;
    bool m_extension_attributes_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_use_default;
    bool m_is_use_default_isSet;
    bool m_is_use_default_isValid;

    QString m_label;
    bool m_label_isSet;
    bool m_label_isValid;

    qint32 m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    qint32 m_product_id;
    bool m_product_id_isSet;
    bool m_product_id_isValid;

    QList<OAIConfigurable_product_data_option_value_interface> m_values;
    bool m_values_isSet;
    bool m_values_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIConfigurable_product_data_option_interface)

#endif // OAIConfigurable_product_data_option_interface_H
