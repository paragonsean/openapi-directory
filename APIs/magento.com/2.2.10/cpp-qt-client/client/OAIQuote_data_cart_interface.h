/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuote_data_cart_interface.h
 *
 * Interface CartInterface
 */

#ifndef OAIQuote_data_cart_interface_H
#define OAIQuote_data_cart_interface_H

#include <QJsonObject>

#include "OAICustomer_data_customer_interface.h"
#include "OAIQuote_data_address_interface.h"
#include "OAIQuote_data_cart_extension_interface.h"
#include "OAIQuote_data_cart_item_interface.h"
#include "OAIQuote_data_currency_interface.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIQuote_data_address_interface;
class OAIQuote_data_currency_interface;
class OAICustomer_data_customer_interface;
class OAIQuote_data_cart_extension_interface;
class OAIQuote_data_cart_item_interface;

class OAIQuote_data_cart_interface : public OAIObject {
public:
    OAIQuote_data_cart_interface();
    OAIQuote_data_cart_interface(QString json);
    ~OAIQuote_data_cart_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIQuote_data_address_interface getBillingAddress() const;
    void setBillingAddress(const OAIQuote_data_address_interface &billing_address);
    bool is_billing_address_Set() const;
    bool is_billing_address_Valid() const;

    QString getConvertedAt() const;
    void setConvertedAt(const QString &converted_at);
    bool is_converted_at_Set() const;
    bool is_converted_at_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    OAIQuote_data_currency_interface getCurrency() const;
    void setCurrency(const OAIQuote_data_currency_interface &currency);
    bool is_currency_Set() const;
    bool is_currency_Valid() const;

    OAICustomer_data_customer_interface getCustomer() const;
    void setCustomer(const OAICustomer_data_customer_interface &customer);
    bool is_customer_Set() const;
    bool is_customer_Valid() const;

    bool isCustomerIsGuest() const;
    void setCustomerIsGuest(const bool &customer_is_guest);
    bool is_customer_is_guest_Set() const;
    bool is_customer_is_guest_Valid() const;

    QString getCustomerNote() const;
    void setCustomerNote(const QString &customer_note);
    bool is_customer_note_Set() const;
    bool is_customer_note_Valid() const;

    bool isCustomerNoteNotify() const;
    void setCustomerNoteNotify(const bool &customer_note_notify);
    bool is_customer_note_notify_Set() const;
    bool is_customer_note_notify_Valid() const;

    qint32 getCustomerTaxClassId() const;
    void setCustomerTaxClassId(const qint32 &customer_tax_class_id);
    bool is_customer_tax_class_id_Set() const;
    bool is_customer_tax_class_id_Valid() const;

    OAIQuote_data_cart_extension_interface getExtensionAttributes() const;
    void setExtensionAttributes(const OAIQuote_data_cart_extension_interface &extension_attributes);
    bool is_extension_attributes_Set() const;
    bool is_extension_attributes_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    bool isIsActive() const;
    void setIsActive(const bool &is_active);
    bool is_is_active_Set() const;
    bool is_is_active_Valid() const;

    bool isIsVirtual() const;
    void setIsVirtual(const bool &is_virtual);
    bool is_is_virtual_Set() const;
    bool is_is_virtual_Valid() const;

    QList<OAIQuote_data_cart_item_interface> getItems() const;
    void setItems(const QList<OAIQuote_data_cart_item_interface> &items);
    bool is_items_Set() const;
    bool is_items_Valid() const;

    qint32 getItemsCount() const;
    void setItemsCount(const qint32 &items_count);
    bool is_items_count_Set() const;
    bool is_items_count_Valid() const;

    double getItemsQty() const;
    void setItemsQty(const double &items_qty);
    bool is_items_qty_Set() const;
    bool is_items_qty_Valid() const;

    qint32 getOrigOrderId() const;
    void setOrigOrderId(const qint32 &orig_order_id);
    bool is_orig_order_id_Set() const;
    bool is_orig_order_id_Valid() const;

    QString getReservedOrderId() const;
    void setReservedOrderId(const QString &reserved_order_id);
    bool is_reserved_order_id_Set() const;
    bool is_reserved_order_id_Valid() const;

    qint32 getStoreId() const;
    void setStoreId(const qint32 &store_id);
    bool is_store_id_Set() const;
    bool is_store_id_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIQuote_data_address_interface m_billing_address;
    bool m_billing_address_isSet;
    bool m_billing_address_isValid;

    QString m_converted_at;
    bool m_converted_at_isSet;
    bool m_converted_at_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    OAIQuote_data_currency_interface m_currency;
    bool m_currency_isSet;
    bool m_currency_isValid;

    OAICustomer_data_customer_interface m_customer;
    bool m_customer_isSet;
    bool m_customer_isValid;

    bool m_customer_is_guest;
    bool m_customer_is_guest_isSet;
    bool m_customer_is_guest_isValid;

    QString m_customer_note;
    bool m_customer_note_isSet;
    bool m_customer_note_isValid;

    bool m_customer_note_notify;
    bool m_customer_note_notify_isSet;
    bool m_customer_note_notify_isValid;

    qint32 m_customer_tax_class_id;
    bool m_customer_tax_class_id_isSet;
    bool m_customer_tax_class_id_isValid;

    OAIQuote_data_cart_extension_interface m_extension_attributes;
    bool m_extension_attributes_isSet;
    bool m_extension_attributes_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    bool m_is_active;
    bool m_is_active_isSet;
    bool m_is_active_isValid;

    bool m_is_virtual;
    bool m_is_virtual_isSet;
    bool m_is_virtual_isValid;

    QList<OAIQuote_data_cart_item_interface> m_items;
    bool m_items_isSet;
    bool m_items_isValid;

    qint32 m_items_count;
    bool m_items_count_isSet;
    bool m_items_count_isValid;

    double m_items_qty;
    bool m_items_qty_isSet;
    bool m_items_qty_isValid;

    qint32 m_orig_order_id;
    bool m_orig_order_id_isSet;
    bool m_orig_order_id_isValid;

    QString m_reserved_order_id;
    bool m_reserved_order_id_isSet;
    bool m_reserved_order_id_isValid;

    qint32 m_store_id;
    bool m_store_id_isSet;
    bool m_store_id_isValid;

    QString m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuote_data_cart_interface)

#endif // OAIQuote_data_cart_interface_H
