/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAITax_data_order_tax_details_item_interface.h
 *
 * Interface OrderTaxDetailsItemInterface
 */

#ifndef OAITax_data_order_tax_details_item_interface_H
#define OAITax_data_order_tax_details_item_interface_H

#include <QJsonObject>

#include "OAIObject.h"
#include "OAITax_data_order_tax_details_applied_tax_interface.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAITax_data_order_tax_details_applied_tax_interface;

class OAITax_data_order_tax_details_item_interface : public OAIObject {
public:
    OAITax_data_order_tax_details_item_interface();
    OAITax_data_order_tax_details_item_interface(QString json);
    ~OAITax_data_order_tax_details_item_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAITax_data_order_tax_details_applied_tax_interface> getAppliedTaxes() const;
    void setAppliedTaxes(const QList<OAITax_data_order_tax_details_applied_tax_interface> &applied_taxes);
    bool is_applied_taxes_Set() const;
    bool is_applied_taxes_Valid() const;

    qint32 getAssociatedItemId() const;
    void setAssociatedItemId(const qint32 &associated_item_id);
    bool is_associated_item_id_Set() const;
    bool is_associated_item_id_Valid() const;

    OAIObject getExtensionAttributes() const;
    void setExtensionAttributes(const OAIObject &extension_attributes);
    bool is_extension_attributes_Set() const;
    bool is_extension_attributes_Valid() const;

    qint32 getItemId() const;
    void setItemId(const qint32 &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAITax_data_order_tax_details_applied_tax_interface> m_applied_taxes;
    bool m_applied_taxes_isSet;
    bool m_applied_taxes_isValid;

    qint32 m_associated_item_id;
    bool m_associated_item_id_isSet;
    bool m_associated_item_id_isValid;

    OAIObject m_extension_attributes;
    bool m_extension_attributes_isSet;
    bool m_extension_attributes_isValid;

    qint32 m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAITax_data_order_tax_details_item_interface)

#endif // OAITax_data_order_tax_details_item_interface_H
