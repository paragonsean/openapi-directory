/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomer_data_customer_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomer_data_customer_interface::OAICustomer_data_customer_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomer_data_customer_interface::OAICustomer_data_customer_interface() {
    this->initializeModel();
}

OAICustomer_data_customer_interface::~OAICustomer_data_customer_interface() {}

void OAICustomer_data_customer_interface::initializeModel() {

    m_addresses_isSet = false;
    m_addresses_isValid = false;

    m_confirmation_isSet = false;
    m_confirmation_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_created_in_isSet = false;
    m_created_in_isValid = false;

    m_custom_attributes_isSet = false;
    m_custom_attributes_isValid = false;

    m_default_billing_isSet = false;
    m_default_billing_isValid = false;

    m_default_shipping_isSet = false;
    m_default_shipping_isValid = false;

    m_disable_auto_group_change_isSet = false;
    m_disable_auto_group_change_isValid = false;

    m_dob_isSet = false;
    m_dob_isValid = false;

    m_email_isSet = false;
    m_email_isValid = false;

    m_extension_attributes_isSet = false;
    m_extension_attributes_isValid = false;

    m_firstname_isSet = false;
    m_firstname_isValid = false;

    m_gender_isSet = false;
    m_gender_isValid = false;

    m_group_id_isSet = false;
    m_group_id_isValid = false;

    m_id_isSet = false;
    m_id_isValid = false;

    m_lastname_isSet = false;
    m_lastname_isValid = false;

    m_middlename_isSet = false;
    m_middlename_isValid = false;

    m_prefix_isSet = false;
    m_prefix_isValid = false;

    m_store_id_isSet = false;
    m_store_id_isValid = false;

    m_suffix_isSet = false;
    m_suffix_isValid = false;

    m_taxvat_isSet = false;
    m_taxvat_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;

    m_website_id_isSet = false;
    m_website_id_isValid = false;
}

void OAICustomer_data_customer_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomer_data_customer_interface::fromJsonObject(QJsonObject json) {

    m_addresses_isValid = ::OpenAPI::fromJsonValue(m_addresses, json[QString("addresses")]);
    m_addresses_isSet = !json[QString("addresses")].isNull() && m_addresses_isValid;

    m_confirmation_isValid = ::OpenAPI::fromJsonValue(m_confirmation, json[QString("confirmation")]);
    m_confirmation_isSet = !json[QString("confirmation")].isNull() && m_confirmation_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_created_in_isValid = ::OpenAPI::fromJsonValue(m_created_in, json[QString("created_in")]);
    m_created_in_isSet = !json[QString("created_in")].isNull() && m_created_in_isValid;

    m_custom_attributes_isValid = ::OpenAPI::fromJsonValue(m_custom_attributes, json[QString("custom_attributes")]);
    m_custom_attributes_isSet = !json[QString("custom_attributes")].isNull() && m_custom_attributes_isValid;

    m_default_billing_isValid = ::OpenAPI::fromJsonValue(m_default_billing, json[QString("default_billing")]);
    m_default_billing_isSet = !json[QString("default_billing")].isNull() && m_default_billing_isValid;

    m_default_shipping_isValid = ::OpenAPI::fromJsonValue(m_default_shipping, json[QString("default_shipping")]);
    m_default_shipping_isSet = !json[QString("default_shipping")].isNull() && m_default_shipping_isValid;

    m_disable_auto_group_change_isValid = ::OpenAPI::fromJsonValue(m_disable_auto_group_change, json[QString("disable_auto_group_change")]);
    m_disable_auto_group_change_isSet = !json[QString("disable_auto_group_change")].isNull() && m_disable_auto_group_change_isValid;

    m_dob_isValid = ::OpenAPI::fromJsonValue(m_dob, json[QString("dob")]);
    m_dob_isSet = !json[QString("dob")].isNull() && m_dob_isValid;

    m_email_isValid = ::OpenAPI::fromJsonValue(m_email, json[QString("email")]);
    m_email_isSet = !json[QString("email")].isNull() && m_email_isValid;

    m_extension_attributes_isValid = ::OpenAPI::fromJsonValue(m_extension_attributes, json[QString("extension_attributes")]);
    m_extension_attributes_isSet = !json[QString("extension_attributes")].isNull() && m_extension_attributes_isValid;

    m_firstname_isValid = ::OpenAPI::fromJsonValue(m_firstname, json[QString("firstname")]);
    m_firstname_isSet = !json[QString("firstname")].isNull() && m_firstname_isValid;

    m_gender_isValid = ::OpenAPI::fromJsonValue(m_gender, json[QString("gender")]);
    m_gender_isSet = !json[QString("gender")].isNull() && m_gender_isValid;

    m_group_id_isValid = ::OpenAPI::fromJsonValue(m_group_id, json[QString("group_id")]);
    m_group_id_isSet = !json[QString("group_id")].isNull() && m_group_id_isValid;

    m_id_isValid = ::OpenAPI::fromJsonValue(m_id, json[QString("id")]);
    m_id_isSet = !json[QString("id")].isNull() && m_id_isValid;

    m_lastname_isValid = ::OpenAPI::fromJsonValue(m_lastname, json[QString("lastname")]);
    m_lastname_isSet = !json[QString("lastname")].isNull() && m_lastname_isValid;

    m_middlename_isValid = ::OpenAPI::fromJsonValue(m_middlename, json[QString("middlename")]);
    m_middlename_isSet = !json[QString("middlename")].isNull() && m_middlename_isValid;

    m_prefix_isValid = ::OpenAPI::fromJsonValue(m_prefix, json[QString("prefix")]);
    m_prefix_isSet = !json[QString("prefix")].isNull() && m_prefix_isValid;

    m_store_id_isValid = ::OpenAPI::fromJsonValue(m_store_id, json[QString("store_id")]);
    m_store_id_isSet = !json[QString("store_id")].isNull() && m_store_id_isValid;

    m_suffix_isValid = ::OpenAPI::fromJsonValue(m_suffix, json[QString("suffix")]);
    m_suffix_isSet = !json[QString("suffix")].isNull() && m_suffix_isValid;

    m_taxvat_isValid = ::OpenAPI::fromJsonValue(m_taxvat, json[QString("taxvat")]);
    m_taxvat_isSet = !json[QString("taxvat")].isNull() && m_taxvat_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;

    m_website_id_isValid = ::OpenAPI::fromJsonValue(m_website_id, json[QString("website_id")]);
    m_website_id_isSet = !json[QString("website_id")].isNull() && m_website_id_isValid;
}

QString OAICustomer_data_customer_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomer_data_customer_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_addresses.size() > 0) {
        obj.insert(QString("addresses"), ::OpenAPI::toJsonValue(m_addresses));
    }
    if (m_confirmation_isSet) {
        obj.insert(QString("confirmation"), ::OpenAPI::toJsonValue(m_confirmation));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_created_in_isSet) {
        obj.insert(QString("created_in"), ::OpenAPI::toJsonValue(m_created_in));
    }
    if (m_custom_attributes.size() > 0) {
        obj.insert(QString("custom_attributes"), ::OpenAPI::toJsonValue(m_custom_attributes));
    }
    if (m_default_billing_isSet) {
        obj.insert(QString("default_billing"), ::OpenAPI::toJsonValue(m_default_billing));
    }
    if (m_default_shipping_isSet) {
        obj.insert(QString("default_shipping"), ::OpenAPI::toJsonValue(m_default_shipping));
    }
    if (m_disable_auto_group_change_isSet) {
        obj.insert(QString("disable_auto_group_change"), ::OpenAPI::toJsonValue(m_disable_auto_group_change));
    }
    if (m_dob_isSet) {
        obj.insert(QString("dob"), ::OpenAPI::toJsonValue(m_dob));
    }
    if (m_email_isSet) {
        obj.insert(QString("email"), ::OpenAPI::toJsonValue(m_email));
    }
    if (m_extension_attributes.isSet()) {
        obj.insert(QString("extension_attributes"), ::OpenAPI::toJsonValue(m_extension_attributes));
    }
    if (m_firstname_isSet) {
        obj.insert(QString("firstname"), ::OpenAPI::toJsonValue(m_firstname));
    }
    if (m_gender_isSet) {
        obj.insert(QString("gender"), ::OpenAPI::toJsonValue(m_gender));
    }
    if (m_group_id_isSet) {
        obj.insert(QString("group_id"), ::OpenAPI::toJsonValue(m_group_id));
    }
    if (m_id_isSet) {
        obj.insert(QString("id"), ::OpenAPI::toJsonValue(m_id));
    }
    if (m_lastname_isSet) {
        obj.insert(QString("lastname"), ::OpenAPI::toJsonValue(m_lastname));
    }
    if (m_middlename_isSet) {
        obj.insert(QString("middlename"), ::OpenAPI::toJsonValue(m_middlename));
    }
    if (m_prefix_isSet) {
        obj.insert(QString("prefix"), ::OpenAPI::toJsonValue(m_prefix));
    }
    if (m_store_id_isSet) {
        obj.insert(QString("store_id"), ::OpenAPI::toJsonValue(m_store_id));
    }
    if (m_suffix_isSet) {
        obj.insert(QString("suffix"), ::OpenAPI::toJsonValue(m_suffix));
    }
    if (m_taxvat_isSet) {
        obj.insert(QString("taxvat"), ::OpenAPI::toJsonValue(m_taxvat));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    if (m_website_id_isSet) {
        obj.insert(QString("website_id"), ::OpenAPI::toJsonValue(m_website_id));
    }
    return obj;
}

QList<OAICustomer_data_address_interface> OAICustomer_data_customer_interface::getAddresses() const {
    return m_addresses;
}
void OAICustomer_data_customer_interface::setAddresses(const QList<OAICustomer_data_address_interface> &addresses) {
    m_addresses = addresses;
    m_addresses_isSet = true;
}

bool OAICustomer_data_customer_interface::is_addresses_Set() const{
    return m_addresses_isSet;
}

bool OAICustomer_data_customer_interface::is_addresses_Valid() const{
    return m_addresses_isValid;
}

QString OAICustomer_data_customer_interface::getConfirmation() const {
    return m_confirmation;
}
void OAICustomer_data_customer_interface::setConfirmation(const QString &confirmation) {
    m_confirmation = confirmation;
    m_confirmation_isSet = true;
}

bool OAICustomer_data_customer_interface::is_confirmation_Set() const{
    return m_confirmation_isSet;
}

bool OAICustomer_data_customer_interface::is_confirmation_Valid() const{
    return m_confirmation_isValid;
}

QString OAICustomer_data_customer_interface::getCreatedAt() const {
    return m_created_at;
}
void OAICustomer_data_customer_interface::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAICustomer_data_customer_interface::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAICustomer_data_customer_interface::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAICustomer_data_customer_interface::getCreatedIn() const {
    return m_created_in;
}
void OAICustomer_data_customer_interface::setCreatedIn(const QString &created_in) {
    m_created_in = created_in;
    m_created_in_isSet = true;
}

bool OAICustomer_data_customer_interface::is_created_in_Set() const{
    return m_created_in_isSet;
}

bool OAICustomer_data_customer_interface::is_created_in_Valid() const{
    return m_created_in_isValid;
}

QList<OAIFramework_attribute_interface> OAICustomer_data_customer_interface::getCustomAttributes() const {
    return m_custom_attributes;
}
void OAICustomer_data_customer_interface::setCustomAttributes(const QList<OAIFramework_attribute_interface> &custom_attributes) {
    m_custom_attributes = custom_attributes;
    m_custom_attributes_isSet = true;
}

bool OAICustomer_data_customer_interface::is_custom_attributes_Set() const{
    return m_custom_attributes_isSet;
}

bool OAICustomer_data_customer_interface::is_custom_attributes_Valid() const{
    return m_custom_attributes_isValid;
}

QString OAICustomer_data_customer_interface::getDefaultBilling() const {
    return m_default_billing;
}
void OAICustomer_data_customer_interface::setDefaultBilling(const QString &default_billing) {
    m_default_billing = default_billing;
    m_default_billing_isSet = true;
}

bool OAICustomer_data_customer_interface::is_default_billing_Set() const{
    return m_default_billing_isSet;
}

bool OAICustomer_data_customer_interface::is_default_billing_Valid() const{
    return m_default_billing_isValid;
}

QString OAICustomer_data_customer_interface::getDefaultShipping() const {
    return m_default_shipping;
}
void OAICustomer_data_customer_interface::setDefaultShipping(const QString &default_shipping) {
    m_default_shipping = default_shipping;
    m_default_shipping_isSet = true;
}

bool OAICustomer_data_customer_interface::is_default_shipping_Set() const{
    return m_default_shipping_isSet;
}

bool OAICustomer_data_customer_interface::is_default_shipping_Valid() const{
    return m_default_shipping_isValid;
}

qint32 OAICustomer_data_customer_interface::getDisableAutoGroupChange() const {
    return m_disable_auto_group_change;
}
void OAICustomer_data_customer_interface::setDisableAutoGroupChange(const qint32 &disable_auto_group_change) {
    m_disable_auto_group_change = disable_auto_group_change;
    m_disable_auto_group_change_isSet = true;
}

bool OAICustomer_data_customer_interface::is_disable_auto_group_change_Set() const{
    return m_disable_auto_group_change_isSet;
}

bool OAICustomer_data_customer_interface::is_disable_auto_group_change_Valid() const{
    return m_disable_auto_group_change_isValid;
}

QString OAICustomer_data_customer_interface::getDob() const {
    return m_dob;
}
void OAICustomer_data_customer_interface::setDob(const QString &dob) {
    m_dob = dob;
    m_dob_isSet = true;
}

bool OAICustomer_data_customer_interface::is_dob_Set() const{
    return m_dob_isSet;
}

bool OAICustomer_data_customer_interface::is_dob_Valid() const{
    return m_dob_isValid;
}

QString OAICustomer_data_customer_interface::getEmail() const {
    return m_email;
}
void OAICustomer_data_customer_interface::setEmail(const QString &email) {
    m_email = email;
    m_email_isSet = true;
}

bool OAICustomer_data_customer_interface::is_email_Set() const{
    return m_email_isSet;
}

bool OAICustomer_data_customer_interface::is_email_Valid() const{
    return m_email_isValid;
}

OAICustomer_data_customer_extension_interface OAICustomer_data_customer_interface::getExtensionAttributes() const {
    return m_extension_attributes;
}
void OAICustomer_data_customer_interface::setExtensionAttributes(const OAICustomer_data_customer_extension_interface &extension_attributes) {
    m_extension_attributes = extension_attributes;
    m_extension_attributes_isSet = true;
}

bool OAICustomer_data_customer_interface::is_extension_attributes_Set() const{
    return m_extension_attributes_isSet;
}

bool OAICustomer_data_customer_interface::is_extension_attributes_Valid() const{
    return m_extension_attributes_isValid;
}

QString OAICustomer_data_customer_interface::getFirstname() const {
    return m_firstname;
}
void OAICustomer_data_customer_interface::setFirstname(const QString &firstname) {
    m_firstname = firstname;
    m_firstname_isSet = true;
}

bool OAICustomer_data_customer_interface::is_firstname_Set() const{
    return m_firstname_isSet;
}

bool OAICustomer_data_customer_interface::is_firstname_Valid() const{
    return m_firstname_isValid;
}

qint32 OAICustomer_data_customer_interface::getGender() const {
    return m_gender;
}
void OAICustomer_data_customer_interface::setGender(const qint32 &gender) {
    m_gender = gender;
    m_gender_isSet = true;
}

bool OAICustomer_data_customer_interface::is_gender_Set() const{
    return m_gender_isSet;
}

bool OAICustomer_data_customer_interface::is_gender_Valid() const{
    return m_gender_isValid;
}

qint32 OAICustomer_data_customer_interface::getGroupId() const {
    return m_group_id;
}
void OAICustomer_data_customer_interface::setGroupId(const qint32 &group_id) {
    m_group_id = group_id;
    m_group_id_isSet = true;
}

bool OAICustomer_data_customer_interface::is_group_id_Set() const{
    return m_group_id_isSet;
}

bool OAICustomer_data_customer_interface::is_group_id_Valid() const{
    return m_group_id_isValid;
}

qint32 OAICustomer_data_customer_interface::getId() const {
    return m_id;
}
void OAICustomer_data_customer_interface::setId(const qint32 &id) {
    m_id = id;
    m_id_isSet = true;
}

bool OAICustomer_data_customer_interface::is_id_Set() const{
    return m_id_isSet;
}

bool OAICustomer_data_customer_interface::is_id_Valid() const{
    return m_id_isValid;
}

QString OAICustomer_data_customer_interface::getLastname() const {
    return m_lastname;
}
void OAICustomer_data_customer_interface::setLastname(const QString &lastname) {
    m_lastname = lastname;
    m_lastname_isSet = true;
}

bool OAICustomer_data_customer_interface::is_lastname_Set() const{
    return m_lastname_isSet;
}

bool OAICustomer_data_customer_interface::is_lastname_Valid() const{
    return m_lastname_isValid;
}

QString OAICustomer_data_customer_interface::getMiddlename() const {
    return m_middlename;
}
void OAICustomer_data_customer_interface::setMiddlename(const QString &middlename) {
    m_middlename = middlename;
    m_middlename_isSet = true;
}

bool OAICustomer_data_customer_interface::is_middlename_Set() const{
    return m_middlename_isSet;
}

bool OAICustomer_data_customer_interface::is_middlename_Valid() const{
    return m_middlename_isValid;
}

QString OAICustomer_data_customer_interface::getPrefix() const {
    return m_prefix;
}
void OAICustomer_data_customer_interface::setPrefix(const QString &prefix) {
    m_prefix = prefix;
    m_prefix_isSet = true;
}

bool OAICustomer_data_customer_interface::is_prefix_Set() const{
    return m_prefix_isSet;
}

bool OAICustomer_data_customer_interface::is_prefix_Valid() const{
    return m_prefix_isValid;
}

qint32 OAICustomer_data_customer_interface::getStoreId() const {
    return m_store_id;
}
void OAICustomer_data_customer_interface::setStoreId(const qint32 &store_id) {
    m_store_id = store_id;
    m_store_id_isSet = true;
}

bool OAICustomer_data_customer_interface::is_store_id_Set() const{
    return m_store_id_isSet;
}

bool OAICustomer_data_customer_interface::is_store_id_Valid() const{
    return m_store_id_isValid;
}

QString OAICustomer_data_customer_interface::getSuffix() const {
    return m_suffix;
}
void OAICustomer_data_customer_interface::setSuffix(const QString &suffix) {
    m_suffix = suffix;
    m_suffix_isSet = true;
}

bool OAICustomer_data_customer_interface::is_suffix_Set() const{
    return m_suffix_isSet;
}

bool OAICustomer_data_customer_interface::is_suffix_Valid() const{
    return m_suffix_isValid;
}

QString OAICustomer_data_customer_interface::getTaxvat() const {
    return m_taxvat;
}
void OAICustomer_data_customer_interface::setTaxvat(const QString &taxvat) {
    m_taxvat = taxvat;
    m_taxvat_isSet = true;
}

bool OAICustomer_data_customer_interface::is_taxvat_Set() const{
    return m_taxvat_isSet;
}

bool OAICustomer_data_customer_interface::is_taxvat_Valid() const{
    return m_taxvat_isValid;
}

QString OAICustomer_data_customer_interface::getUpdatedAt() const {
    return m_updated_at;
}
void OAICustomer_data_customer_interface::setUpdatedAt(const QString &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAICustomer_data_customer_interface::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAICustomer_data_customer_interface::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

qint32 OAICustomer_data_customer_interface::getWebsiteId() const {
    return m_website_id;
}
void OAICustomer_data_customer_interface::setWebsiteId(const qint32 &website_id) {
    m_website_id = website_id;
    m_website_id_isSet = true;
}

bool OAICustomer_data_customer_interface::is_website_id_Set() const{
    return m_website_id_isSet;
}

bool OAICustomer_data_customer_interface::is_website_id_Valid() const{
    return m_website_id_isValid;
}

bool OAICustomer_data_customer_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_addresses.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_confirmation_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_in_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_custom_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_billing_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_shipping_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_disable_auto_group_change_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_dob_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_email_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extension_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_firstname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gender_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_group_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_lastname_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_middlename_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_prefix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_store_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_suffix_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_taxvat_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_website_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomer_data_customer_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_email_isValid && m_firstname_isValid && m_lastname_isValid && true;
}

} // namespace OpenAPI
