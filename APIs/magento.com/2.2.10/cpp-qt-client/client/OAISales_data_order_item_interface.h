/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAISales_data_order_item_interface.h
 *
 * Order item interface. An order is a document that a web store issues to a customer. Magento generates a sales order that lists the product items, billing and shipping addresses, and shipping and payment methods. A corresponding external document, known as a purchase order, is emailed to the customer.
 */

#ifndef OAISales_data_order_item_interface_H
#define OAISales_data_order_item_interface_H

#include <QJsonObject>

#include "OAICatalog_data_product_option_interface.h"
#include "OAISales_data_order_item_extension_interface.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAISales_data_order_item_extension_interface;
class OAICatalog_data_product_option_interface;

class OAISales_data_order_item_interface : public OAIObject {
public:
    OAISales_data_order_item_interface();
    OAISales_data_order_item_interface(QString json);
    ~OAISales_data_order_item_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAdditionalData() const;
    void setAdditionalData(const QString &additional_data);
    bool is_additional_data_Set() const;
    bool is_additional_data_Valid() const;

    double getAmountRefunded() const;
    void setAmountRefunded(const double &amount_refunded);
    bool is_amount_refunded_Set() const;
    bool is_amount_refunded_Valid() const;

    QString getAppliedRuleIds() const;
    void setAppliedRuleIds(const QString &applied_rule_ids);
    bool is_applied_rule_ids_Set() const;
    bool is_applied_rule_ids_Valid() const;

    double getBaseAmountRefunded() const;
    void setBaseAmountRefunded(const double &base_amount_refunded);
    bool is_base_amount_refunded_Set() const;
    bool is_base_amount_refunded_Valid() const;

    double getBaseCost() const;
    void setBaseCost(const double &base_cost);
    bool is_base_cost_Set() const;
    bool is_base_cost_Valid() const;

    double getBaseDiscountAmount() const;
    void setBaseDiscountAmount(const double &base_discount_amount);
    bool is_base_discount_amount_Set() const;
    bool is_base_discount_amount_Valid() const;

    double getBaseDiscountInvoiced() const;
    void setBaseDiscountInvoiced(const double &base_discount_invoiced);
    bool is_base_discount_invoiced_Set() const;
    bool is_base_discount_invoiced_Valid() const;

    double getBaseDiscountRefunded() const;
    void setBaseDiscountRefunded(const double &base_discount_refunded);
    bool is_base_discount_refunded_Set() const;
    bool is_base_discount_refunded_Valid() const;

    double getBaseDiscountTaxCompensationAmount() const;
    void setBaseDiscountTaxCompensationAmount(const double &base_discount_tax_compensation_amount);
    bool is_base_discount_tax_compensation_amount_Set() const;
    bool is_base_discount_tax_compensation_amount_Valid() const;

    double getBaseDiscountTaxCompensationInvoiced() const;
    void setBaseDiscountTaxCompensationInvoiced(const double &base_discount_tax_compensation_invoiced);
    bool is_base_discount_tax_compensation_invoiced_Set() const;
    bool is_base_discount_tax_compensation_invoiced_Valid() const;

    double getBaseDiscountTaxCompensationRefunded() const;
    void setBaseDiscountTaxCompensationRefunded(const double &base_discount_tax_compensation_refunded);
    bool is_base_discount_tax_compensation_refunded_Set() const;
    bool is_base_discount_tax_compensation_refunded_Valid() const;

    double getBaseOriginalPrice() const;
    void setBaseOriginalPrice(const double &base_original_price);
    bool is_base_original_price_Set() const;
    bool is_base_original_price_Valid() const;

    double getBasePrice() const;
    void setBasePrice(const double &base_price);
    bool is_base_price_Set() const;
    bool is_base_price_Valid() const;

    double getBasePriceInclTax() const;
    void setBasePriceInclTax(const double &base_price_incl_tax);
    bool is_base_price_incl_tax_Set() const;
    bool is_base_price_incl_tax_Valid() const;

    double getBaseRowInvoiced() const;
    void setBaseRowInvoiced(const double &base_row_invoiced);
    bool is_base_row_invoiced_Set() const;
    bool is_base_row_invoiced_Valid() const;

    double getBaseRowTotal() const;
    void setBaseRowTotal(const double &base_row_total);
    bool is_base_row_total_Set() const;
    bool is_base_row_total_Valid() const;

    double getBaseRowTotalInclTax() const;
    void setBaseRowTotalInclTax(const double &base_row_total_incl_tax);
    bool is_base_row_total_incl_tax_Set() const;
    bool is_base_row_total_incl_tax_Valid() const;

    double getBaseTaxAmount() const;
    void setBaseTaxAmount(const double &base_tax_amount);
    bool is_base_tax_amount_Set() const;
    bool is_base_tax_amount_Valid() const;

    double getBaseTaxBeforeDiscount() const;
    void setBaseTaxBeforeDiscount(const double &base_tax_before_discount);
    bool is_base_tax_before_discount_Set() const;
    bool is_base_tax_before_discount_Valid() const;

    double getBaseTaxInvoiced() const;
    void setBaseTaxInvoiced(const double &base_tax_invoiced);
    bool is_base_tax_invoiced_Set() const;
    bool is_base_tax_invoiced_Valid() const;

    double getBaseTaxRefunded() const;
    void setBaseTaxRefunded(const double &base_tax_refunded);
    bool is_base_tax_refunded_Set() const;
    bool is_base_tax_refunded_Valid() const;

    double getBaseWeeeTaxAppliedAmount() const;
    void setBaseWeeeTaxAppliedAmount(const double &base_weee_tax_applied_amount);
    bool is_base_weee_tax_applied_amount_Set() const;
    bool is_base_weee_tax_applied_amount_Valid() const;

    double getBaseWeeeTaxAppliedRowAmnt() const;
    void setBaseWeeeTaxAppliedRowAmnt(const double &base_weee_tax_applied_row_amnt);
    bool is_base_weee_tax_applied_row_amnt_Set() const;
    bool is_base_weee_tax_applied_row_amnt_Valid() const;

    double getBaseWeeeTaxDisposition() const;
    void setBaseWeeeTaxDisposition(const double &base_weee_tax_disposition);
    bool is_base_weee_tax_disposition_Set() const;
    bool is_base_weee_tax_disposition_Valid() const;

    double getBaseWeeeTaxRowDisposition() const;
    void setBaseWeeeTaxRowDisposition(const double &base_weee_tax_row_disposition);
    bool is_base_weee_tax_row_disposition_Set() const;
    bool is_base_weee_tax_row_disposition_Valid() const;

    QString getCreatedAt() const;
    void setCreatedAt(const QString &created_at);
    bool is_created_at_Set() const;
    bool is_created_at_Valid() const;

    QString getDescription() const;
    void setDescription(const QString &description);
    bool is_description_Set() const;
    bool is_description_Valid() const;

    double getDiscountAmount() const;
    void setDiscountAmount(const double &discount_amount);
    bool is_discount_amount_Set() const;
    bool is_discount_amount_Valid() const;

    double getDiscountInvoiced() const;
    void setDiscountInvoiced(const double &discount_invoiced);
    bool is_discount_invoiced_Set() const;
    bool is_discount_invoiced_Valid() const;

    double getDiscountPercent() const;
    void setDiscountPercent(const double &discount_percent);
    bool is_discount_percent_Set() const;
    bool is_discount_percent_Valid() const;

    double getDiscountRefunded() const;
    void setDiscountRefunded(const double &discount_refunded);
    bool is_discount_refunded_Set() const;
    bool is_discount_refunded_Valid() const;

    double getDiscountTaxCompensationAmount() const;
    void setDiscountTaxCompensationAmount(const double &discount_tax_compensation_amount);
    bool is_discount_tax_compensation_amount_Set() const;
    bool is_discount_tax_compensation_amount_Valid() const;

    double getDiscountTaxCompensationCanceled() const;
    void setDiscountTaxCompensationCanceled(const double &discount_tax_compensation_canceled);
    bool is_discount_tax_compensation_canceled_Set() const;
    bool is_discount_tax_compensation_canceled_Valid() const;

    double getDiscountTaxCompensationInvoiced() const;
    void setDiscountTaxCompensationInvoiced(const double &discount_tax_compensation_invoiced);
    bool is_discount_tax_compensation_invoiced_Set() const;
    bool is_discount_tax_compensation_invoiced_Valid() const;

    double getDiscountTaxCompensationRefunded() const;
    void setDiscountTaxCompensationRefunded(const double &discount_tax_compensation_refunded);
    bool is_discount_tax_compensation_refunded_Set() const;
    bool is_discount_tax_compensation_refunded_Valid() const;

    qint32 getEventId() const;
    void setEventId(const qint32 &event_id);
    bool is_event_id_Set() const;
    bool is_event_id_Valid() const;

    QString getExtOrderItemId() const;
    void setExtOrderItemId(const QString &ext_order_item_id);
    bool is_ext_order_item_id_Set() const;
    bool is_ext_order_item_id_Valid() const;

    OAISales_data_order_item_extension_interface getExtensionAttributes() const;
    void setExtensionAttributes(const OAISales_data_order_item_extension_interface &extension_attributes);
    bool is_extension_attributes_Set() const;
    bool is_extension_attributes_Valid() const;

    qint32 getFreeShipping() const;
    void setFreeShipping(const qint32 &free_shipping);
    bool is_free_shipping_Set() const;
    bool is_free_shipping_Valid() const;

    double getGwBasePrice() const;
    void setGwBasePrice(const double &gw_base_price);
    bool is_gw_base_price_Set() const;
    bool is_gw_base_price_Valid() const;

    double getGwBasePriceInvoiced() const;
    void setGwBasePriceInvoiced(const double &gw_base_price_invoiced);
    bool is_gw_base_price_invoiced_Set() const;
    bool is_gw_base_price_invoiced_Valid() const;

    double getGwBasePriceRefunded() const;
    void setGwBasePriceRefunded(const double &gw_base_price_refunded);
    bool is_gw_base_price_refunded_Set() const;
    bool is_gw_base_price_refunded_Valid() const;

    double getGwBaseTaxAmount() const;
    void setGwBaseTaxAmount(const double &gw_base_tax_amount);
    bool is_gw_base_tax_amount_Set() const;
    bool is_gw_base_tax_amount_Valid() const;

    double getGwBaseTaxAmountInvoiced() const;
    void setGwBaseTaxAmountInvoiced(const double &gw_base_tax_amount_invoiced);
    bool is_gw_base_tax_amount_invoiced_Set() const;
    bool is_gw_base_tax_amount_invoiced_Valid() const;

    double getGwBaseTaxAmountRefunded() const;
    void setGwBaseTaxAmountRefunded(const double &gw_base_tax_amount_refunded);
    bool is_gw_base_tax_amount_refunded_Set() const;
    bool is_gw_base_tax_amount_refunded_Valid() const;

    qint32 getGwId() const;
    void setGwId(const qint32 &gw_id);
    bool is_gw_id_Set() const;
    bool is_gw_id_Valid() const;

    double getGwPrice() const;
    void setGwPrice(const double &gw_price);
    bool is_gw_price_Set() const;
    bool is_gw_price_Valid() const;

    double getGwPriceInvoiced() const;
    void setGwPriceInvoiced(const double &gw_price_invoiced);
    bool is_gw_price_invoiced_Set() const;
    bool is_gw_price_invoiced_Valid() const;

    double getGwPriceRefunded() const;
    void setGwPriceRefunded(const double &gw_price_refunded);
    bool is_gw_price_refunded_Set() const;
    bool is_gw_price_refunded_Valid() const;

    double getGwTaxAmount() const;
    void setGwTaxAmount(const double &gw_tax_amount);
    bool is_gw_tax_amount_Set() const;
    bool is_gw_tax_amount_Valid() const;

    double getGwTaxAmountInvoiced() const;
    void setGwTaxAmountInvoiced(const double &gw_tax_amount_invoiced);
    bool is_gw_tax_amount_invoiced_Set() const;
    bool is_gw_tax_amount_invoiced_Valid() const;

    double getGwTaxAmountRefunded() const;
    void setGwTaxAmountRefunded(const double &gw_tax_amount_refunded);
    bool is_gw_tax_amount_refunded_Set() const;
    bool is_gw_tax_amount_refunded_Valid() const;

    qint32 getIsQtyDecimal() const;
    void setIsQtyDecimal(const qint32 &is_qty_decimal);
    bool is_is_qty_decimal_Set() const;
    bool is_is_qty_decimal_Valid() const;

    qint32 getIsVirtual() const;
    void setIsVirtual(const qint32 &is_virtual);
    bool is_is_virtual_Set() const;
    bool is_is_virtual_Valid() const;

    qint32 getItemId() const;
    void setItemId(const qint32 &item_id);
    bool is_item_id_Set() const;
    bool is_item_id_Valid() const;

    qint32 getLockedDoInvoice() const;
    void setLockedDoInvoice(const qint32 &locked_do_invoice);
    bool is_locked_do_invoice_Set() const;
    bool is_locked_do_invoice_Valid() const;

    qint32 getLockedDoShip() const;
    void setLockedDoShip(const qint32 &locked_do_ship);
    bool is_locked_do_ship_Set() const;
    bool is_locked_do_ship_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    qint32 getNoDiscount() const;
    void setNoDiscount(const qint32 &no_discount);
    bool is_no_discount_Set() const;
    bool is_no_discount_Valid() const;

    qint32 getOrderId() const;
    void setOrderId(const qint32 &order_id);
    bool is_order_id_Set() const;
    bool is_order_id_Valid() const;

    double getOriginalPrice() const;
    void setOriginalPrice(const double &original_price);
    bool is_original_price_Set() const;
    bool is_original_price_Valid() const;

    OAISales_data_order_item_interface getParentItem() const;
    void setParentItem(const OAISales_data_order_item_interface &parent_item);
    bool is_parent_item_Set() const;
    bool is_parent_item_Valid() const;

    qint32 getParentItemId() const;
    void setParentItemId(const qint32 &parent_item_id);
    bool is_parent_item_id_Set() const;
    bool is_parent_item_id_Valid() const;

    double getPrice() const;
    void setPrice(const double &price);
    bool is_price_Set() const;
    bool is_price_Valid() const;

    double getPriceInclTax() const;
    void setPriceInclTax(const double &price_incl_tax);
    bool is_price_incl_tax_Set() const;
    bool is_price_incl_tax_Valid() const;

    qint32 getProductId() const;
    void setProductId(const qint32 &product_id);
    bool is_product_id_Set() const;
    bool is_product_id_Valid() const;

    OAICatalog_data_product_option_interface getProductOption() const;
    void setProductOption(const OAICatalog_data_product_option_interface &product_option);
    bool is_product_option_Set() const;
    bool is_product_option_Valid() const;

    QString getProductType() const;
    void setProductType(const QString &product_type);
    bool is_product_type_Set() const;
    bool is_product_type_Valid() const;

    double getQtyBackordered() const;
    void setQtyBackordered(const double &qty_backordered);
    bool is_qty_backordered_Set() const;
    bool is_qty_backordered_Valid() const;

    double getQtyCanceled() const;
    void setQtyCanceled(const double &qty_canceled);
    bool is_qty_canceled_Set() const;
    bool is_qty_canceled_Valid() const;

    double getQtyInvoiced() const;
    void setQtyInvoiced(const double &qty_invoiced);
    bool is_qty_invoiced_Set() const;
    bool is_qty_invoiced_Valid() const;

    double getQtyOrdered() const;
    void setQtyOrdered(const double &qty_ordered);
    bool is_qty_ordered_Set() const;
    bool is_qty_ordered_Valid() const;

    double getQtyRefunded() const;
    void setQtyRefunded(const double &qty_refunded);
    bool is_qty_refunded_Set() const;
    bool is_qty_refunded_Valid() const;

    double getQtyReturned() const;
    void setQtyReturned(const double &qty_returned);
    bool is_qty_returned_Set() const;
    bool is_qty_returned_Valid() const;

    double getQtyShipped() const;
    void setQtyShipped(const double &qty_shipped);
    bool is_qty_shipped_Set() const;
    bool is_qty_shipped_Valid() const;

    qint32 getQuoteItemId() const;
    void setQuoteItemId(const qint32 &quote_item_id);
    bool is_quote_item_id_Set() const;
    bool is_quote_item_id_Valid() const;

    double getRowInvoiced() const;
    void setRowInvoiced(const double &row_invoiced);
    bool is_row_invoiced_Set() const;
    bool is_row_invoiced_Valid() const;

    double getRowTotal() const;
    void setRowTotal(const double &row_total);
    bool is_row_total_Set() const;
    bool is_row_total_Valid() const;

    double getRowTotalInclTax() const;
    void setRowTotalInclTax(const double &row_total_incl_tax);
    bool is_row_total_incl_tax_Set() const;
    bool is_row_total_incl_tax_Valid() const;

    double getRowWeight() const;
    void setRowWeight(const double &row_weight);
    bool is_row_weight_Set() const;
    bool is_row_weight_Valid() const;

    QString getSku() const;
    void setSku(const QString &sku);
    bool is_sku_Set() const;
    bool is_sku_Valid() const;

    qint32 getStoreId() const;
    void setStoreId(const qint32 &store_id);
    bool is_store_id_Set() const;
    bool is_store_id_Valid() const;

    double getTaxAmount() const;
    void setTaxAmount(const double &tax_amount);
    bool is_tax_amount_Set() const;
    bool is_tax_amount_Valid() const;

    double getTaxBeforeDiscount() const;
    void setTaxBeforeDiscount(const double &tax_before_discount);
    bool is_tax_before_discount_Set() const;
    bool is_tax_before_discount_Valid() const;

    double getTaxCanceled() const;
    void setTaxCanceled(const double &tax_canceled);
    bool is_tax_canceled_Set() const;
    bool is_tax_canceled_Valid() const;

    double getTaxInvoiced() const;
    void setTaxInvoiced(const double &tax_invoiced);
    bool is_tax_invoiced_Set() const;
    bool is_tax_invoiced_Valid() const;

    double getTaxPercent() const;
    void setTaxPercent(const double &tax_percent);
    bool is_tax_percent_Set() const;
    bool is_tax_percent_Valid() const;

    double getTaxRefunded() const;
    void setTaxRefunded(const double &tax_refunded);
    bool is_tax_refunded_Set() const;
    bool is_tax_refunded_Valid() const;

    QString getUpdatedAt() const;
    void setUpdatedAt(const QString &updated_at);
    bool is_updated_at_Set() const;
    bool is_updated_at_Valid() const;

    QString getWeeeTaxApplied() const;
    void setWeeeTaxApplied(const QString &weee_tax_applied);
    bool is_weee_tax_applied_Set() const;
    bool is_weee_tax_applied_Valid() const;

    double getWeeeTaxAppliedAmount() const;
    void setWeeeTaxAppliedAmount(const double &weee_tax_applied_amount);
    bool is_weee_tax_applied_amount_Set() const;
    bool is_weee_tax_applied_amount_Valid() const;

    double getWeeeTaxAppliedRowAmount() const;
    void setWeeeTaxAppliedRowAmount(const double &weee_tax_applied_row_amount);
    bool is_weee_tax_applied_row_amount_Set() const;
    bool is_weee_tax_applied_row_amount_Valid() const;

    double getWeeeTaxDisposition() const;
    void setWeeeTaxDisposition(const double &weee_tax_disposition);
    bool is_weee_tax_disposition_Set() const;
    bool is_weee_tax_disposition_Valid() const;

    double getWeeeTaxRowDisposition() const;
    void setWeeeTaxRowDisposition(const double &weee_tax_row_disposition);
    bool is_weee_tax_row_disposition_Set() const;
    bool is_weee_tax_row_disposition_Valid() const;

    double getWeight() const;
    void setWeight(const double &weight);
    bool is_weight_Set() const;
    bool is_weight_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_additional_data;
    bool m_additional_data_isSet;
    bool m_additional_data_isValid;

    double m_amount_refunded;
    bool m_amount_refunded_isSet;
    bool m_amount_refunded_isValid;

    QString m_applied_rule_ids;
    bool m_applied_rule_ids_isSet;
    bool m_applied_rule_ids_isValid;

    double m_base_amount_refunded;
    bool m_base_amount_refunded_isSet;
    bool m_base_amount_refunded_isValid;

    double m_base_cost;
    bool m_base_cost_isSet;
    bool m_base_cost_isValid;

    double m_base_discount_amount;
    bool m_base_discount_amount_isSet;
    bool m_base_discount_amount_isValid;

    double m_base_discount_invoiced;
    bool m_base_discount_invoiced_isSet;
    bool m_base_discount_invoiced_isValid;

    double m_base_discount_refunded;
    bool m_base_discount_refunded_isSet;
    bool m_base_discount_refunded_isValid;

    double m_base_discount_tax_compensation_amount;
    bool m_base_discount_tax_compensation_amount_isSet;
    bool m_base_discount_tax_compensation_amount_isValid;

    double m_base_discount_tax_compensation_invoiced;
    bool m_base_discount_tax_compensation_invoiced_isSet;
    bool m_base_discount_tax_compensation_invoiced_isValid;

    double m_base_discount_tax_compensation_refunded;
    bool m_base_discount_tax_compensation_refunded_isSet;
    bool m_base_discount_tax_compensation_refunded_isValid;

    double m_base_original_price;
    bool m_base_original_price_isSet;
    bool m_base_original_price_isValid;

    double m_base_price;
    bool m_base_price_isSet;
    bool m_base_price_isValid;

    double m_base_price_incl_tax;
    bool m_base_price_incl_tax_isSet;
    bool m_base_price_incl_tax_isValid;

    double m_base_row_invoiced;
    bool m_base_row_invoiced_isSet;
    bool m_base_row_invoiced_isValid;

    double m_base_row_total;
    bool m_base_row_total_isSet;
    bool m_base_row_total_isValid;

    double m_base_row_total_incl_tax;
    bool m_base_row_total_incl_tax_isSet;
    bool m_base_row_total_incl_tax_isValid;

    double m_base_tax_amount;
    bool m_base_tax_amount_isSet;
    bool m_base_tax_amount_isValid;

    double m_base_tax_before_discount;
    bool m_base_tax_before_discount_isSet;
    bool m_base_tax_before_discount_isValid;

    double m_base_tax_invoiced;
    bool m_base_tax_invoiced_isSet;
    bool m_base_tax_invoiced_isValid;

    double m_base_tax_refunded;
    bool m_base_tax_refunded_isSet;
    bool m_base_tax_refunded_isValid;

    double m_base_weee_tax_applied_amount;
    bool m_base_weee_tax_applied_amount_isSet;
    bool m_base_weee_tax_applied_amount_isValid;

    double m_base_weee_tax_applied_row_amnt;
    bool m_base_weee_tax_applied_row_amnt_isSet;
    bool m_base_weee_tax_applied_row_amnt_isValid;

    double m_base_weee_tax_disposition;
    bool m_base_weee_tax_disposition_isSet;
    bool m_base_weee_tax_disposition_isValid;

    double m_base_weee_tax_row_disposition;
    bool m_base_weee_tax_row_disposition_isSet;
    bool m_base_weee_tax_row_disposition_isValid;

    QString m_created_at;
    bool m_created_at_isSet;
    bool m_created_at_isValid;

    QString m_description;
    bool m_description_isSet;
    bool m_description_isValid;

    double m_discount_amount;
    bool m_discount_amount_isSet;
    bool m_discount_amount_isValid;

    double m_discount_invoiced;
    bool m_discount_invoiced_isSet;
    bool m_discount_invoiced_isValid;

    double m_discount_percent;
    bool m_discount_percent_isSet;
    bool m_discount_percent_isValid;

    double m_discount_refunded;
    bool m_discount_refunded_isSet;
    bool m_discount_refunded_isValid;

    double m_discount_tax_compensation_amount;
    bool m_discount_tax_compensation_amount_isSet;
    bool m_discount_tax_compensation_amount_isValid;

    double m_discount_tax_compensation_canceled;
    bool m_discount_tax_compensation_canceled_isSet;
    bool m_discount_tax_compensation_canceled_isValid;

    double m_discount_tax_compensation_invoiced;
    bool m_discount_tax_compensation_invoiced_isSet;
    bool m_discount_tax_compensation_invoiced_isValid;

    double m_discount_tax_compensation_refunded;
    bool m_discount_tax_compensation_refunded_isSet;
    bool m_discount_tax_compensation_refunded_isValid;

    qint32 m_event_id;
    bool m_event_id_isSet;
    bool m_event_id_isValid;

    QString m_ext_order_item_id;
    bool m_ext_order_item_id_isSet;
    bool m_ext_order_item_id_isValid;

    OAISales_data_order_item_extension_interface m_extension_attributes;
    bool m_extension_attributes_isSet;
    bool m_extension_attributes_isValid;

    qint32 m_free_shipping;
    bool m_free_shipping_isSet;
    bool m_free_shipping_isValid;

    double m_gw_base_price;
    bool m_gw_base_price_isSet;
    bool m_gw_base_price_isValid;

    double m_gw_base_price_invoiced;
    bool m_gw_base_price_invoiced_isSet;
    bool m_gw_base_price_invoiced_isValid;

    double m_gw_base_price_refunded;
    bool m_gw_base_price_refunded_isSet;
    bool m_gw_base_price_refunded_isValid;

    double m_gw_base_tax_amount;
    bool m_gw_base_tax_amount_isSet;
    bool m_gw_base_tax_amount_isValid;

    double m_gw_base_tax_amount_invoiced;
    bool m_gw_base_tax_amount_invoiced_isSet;
    bool m_gw_base_tax_amount_invoiced_isValid;

    double m_gw_base_tax_amount_refunded;
    bool m_gw_base_tax_amount_refunded_isSet;
    bool m_gw_base_tax_amount_refunded_isValid;

    qint32 m_gw_id;
    bool m_gw_id_isSet;
    bool m_gw_id_isValid;

    double m_gw_price;
    bool m_gw_price_isSet;
    bool m_gw_price_isValid;

    double m_gw_price_invoiced;
    bool m_gw_price_invoiced_isSet;
    bool m_gw_price_invoiced_isValid;

    double m_gw_price_refunded;
    bool m_gw_price_refunded_isSet;
    bool m_gw_price_refunded_isValid;

    double m_gw_tax_amount;
    bool m_gw_tax_amount_isSet;
    bool m_gw_tax_amount_isValid;

    double m_gw_tax_amount_invoiced;
    bool m_gw_tax_amount_invoiced_isSet;
    bool m_gw_tax_amount_invoiced_isValid;

    double m_gw_tax_amount_refunded;
    bool m_gw_tax_amount_refunded_isSet;
    bool m_gw_tax_amount_refunded_isValid;

    qint32 m_is_qty_decimal;
    bool m_is_qty_decimal_isSet;
    bool m_is_qty_decimal_isValid;

    qint32 m_is_virtual;
    bool m_is_virtual_isSet;
    bool m_is_virtual_isValid;

    qint32 m_item_id;
    bool m_item_id_isSet;
    bool m_item_id_isValid;

    qint32 m_locked_do_invoice;
    bool m_locked_do_invoice_isSet;
    bool m_locked_do_invoice_isValid;

    qint32 m_locked_do_ship;
    bool m_locked_do_ship_isSet;
    bool m_locked_do_ship_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    qint32 m_no_discount;
    bool m_no_discount_isSet;
    bool m_no_discount_isValid;

    qint32 m_order_id;
    bool m_order_id_isSet;
    bool m_order_id_isValid;

    double m_original_price;
    bool m_original_price_isSet;
    bool m_original_price_isValid;

    OAISales_data_order_item_interface m_parent_item;
    bool m_parent_item_isSet;
    bool m_parent_item_isValid;

    qint32 m_parent_item_id;
    bool m_parent_item_id_isSet;
    bool m_parent_item_id_isValid;

    double m_price;
    bool m_price_isSet;
    bool m_price_isValid;

    double m_price_incl_tax;
    bool m_price_incl_tax_isSet;
    bool m_price_incl_tax_isValid;

    qint32 m_product_id;
    bool m_product_id_isSet;
    bool m_product_id_isValid;

    OAICatalog_data_product_option_interface m_product_option;
    bool m_product_option_isSet;
    bool m_product_option_isValid;

    QString m_product_type;
    bool m_product_type_isSet;
    bool m_product_type_isValid;

    double m_qty_backordered;
    bool m_qty_backordered_isSet;
    bool m_qty_backordered_isValid;

    double m_qty_canceled;
    bool m_qty_canceled_isSet;
    bool m_qty_canceled_isValid;

    double m_qty_invoiced;
    bool m_qty_invoiced_isSet;
    bool m_qty_invoiced_isValid;

    double m_qty_ordered;
    bool m_qty_ordered_isSet;
    bool m_qty_ordered_isValid;

    double m_qty_refunded;
    bool m_qty_refunded_isSet;
    bool m_qty_refunded_isValid;

    double m_qty_returned;
    bool m_qty_returned_isSet;
    bool m_qty_returned_isValid;

    double m_qty_shipped;
    bool m_qty_shipped_isSet;
    bool m_qty_shipped_isValid;

    qint32 m_quote_item_id;
    bool m_quote_item_id_isSet;
    bool m_quote_item_id_isValid;

    double m_row_invoiced;
    bool m_row_invoiced_isSet;
    bool m_row_invoiced_isValid;

    double m_row_total;
    bool m_row_total_isSet;
    bool m_row_total_isValid;

    double m_row_total_incl_tax;
    bool m_row_total_incl_tax_isSet;
    bool m_row_total_incl_tax_isValid;

    double m_row_weight;
    bool m_row_weight_isSet;
    bool m_row_weight_isValid;

    QString m_sku;
    bool m_sku_isSet;
    bool m_sku_isValid;

    qint32 m_store_id;
    bool m_store_id_isSet;
    bool m_store_id_isValid;

    double m_tax_amount;
    bool m_tax_amount_isSet;
    bool m_tax_amount_isValid;

    double m_tax_before_discount;
    bool m_tax_before_discount_isSet;
    bool m_tax_before_discount_isValid;

    double m_tax_canceled;
    bool m_tax_canceled_isSet;
    bool m_tax_canceled_isValid;

    double m_tax_invoiced;
    bool m_tax_invoiced_isSet;
    bool m_tax_invoiced_isValid;

    double m_tax_percent;
    bool m_tax_percent_isSet;
    bool m_tax_percent_isValid;

    double m_tax_refunded;
    bool m_tax_refunded_isSet;
    bool m_tax_refunded_isValid;

    QString m_updated_at;
    bool m_updated_at_isSet;
    bool m_updated_at_isValid;

    QString m_weee_tax_applied;
    bool m_weee_tax_applied_isSet;
    bool m_weee_tax_applied_isValid;

    double m_weee_tax_applied_amount;
    bool m_weee_tax_applied_amount_isSet;
    bool m_weee_tax_applied_amount_isValid;

    double m_weee_tax_applied_row_amount;
    bool m_weee_tax_applied_row_amount_isSet;
    bool m_weee_tax_applied_row_amount_isValid;

    double m_weee_tax_disposition;
    bool m_weee_tax_disposition_isSet;
    bool m_weee_tax_disposition_isValid;

    double m_weee_tax_row_disposition;
    bool m_weee_tax_row_disposition_isSet;
    bool m_weee_tax_row_disposition_isValid;

    double m_weight;
    bool m_weight_isSet;
    bool m_weight_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAISales_data_order_item_interface)

#endif // OAISales_data_order_item_interface_H
