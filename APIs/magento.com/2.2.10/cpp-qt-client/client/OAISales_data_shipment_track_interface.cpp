/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISales_data_shipment_track_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISales_data_shipment_track_interface::OAISales_data_shipment_track_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISales_data_shipment_track_interface::OAISales_data_shipment_track_interface() {
    this->initializeModel();
}

OAISales_data_shipment_track_interface::~OAISales_data_shipment_track_interface() {}

void OAISales_data_shipment_track_interface::initializeModel() {

    m_carrier_code_isSet = false;
    m_carrier_code_isValid = false;

    m_created_at_isSet = false;
    m_created_at_isValid = false;

    m_description_isSet = false;
    m_description_isValid = false;

    m_entity_id_isSet = false;
    m_entity_id_isValid = false;

    m_extension_attributes_isSet = false;
    m_extension_attributes_isValid = false;

    m_order_id_isSet = false;
    m_order_id_isValid = false;

    m_parent_id_isSet = false;
    m_parent_id_isValid = false;

    m_qty_isSet = false;
    m_qty_isValid = false;

    m_title_isSet = false;
    m_title_isValid = false;

    m_track_number_isSet = false;
    m_track_number_isValid = false;

    m_updated_at_isSet = false;
    m_updated_at_isValid = false;

    m_weight_isSet = false;
    m_weight_isValid = false;
}

void OAISales_data_shipment_track_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISales_data_shipment_track_interface::fromJsonObject(QJsonObject json) {

    m_carrier_code_isValid = ::OpenAPI::fromJsonValue(m_carrier_code, json[QString("carrier_code")]);
    m_carrier_code_isSet = !json[QString("carrier_code")].isNull() && m_carrier_code_isValid;

    m_created_at_isValid = ::OpenAPI::fromJsonValue(m_created_at, json[QString("created_at")]);
    m_created_at_isSet = !json[QString("created_at")].isNull() && m_created_at_isValid;

    m_description_isValid = ::OpenAPI::fromJsonValue(m_description, json[QString("description")]);
    m_description_isSet = !json[QString("description")].isNull() && m_description_isValid;

    m_entity_id_isValid = ::OpenAPI::fromJsonValue(m_entity_id, json[QString("entity_id")]);
    m_entity_id_isSet = !json[QString("entity_id")].isNull() && m_entity_id_isValid;

    m_extension_attributes_isValid = ::OpenAPI::fromJsonValue(m_extension_attributes, json[QString("extension_attributes")]);
    m_extension_attributes_isSet = !json[QString("extension_attributes")].isNull() && m_extension_attributes_isValid;

    m_order_id_isValid = ::OpenAPI::fromJsonValue(m_order_id, json[QString("order_id")]);
    m_order_id_isSet = !json[QString("order_id")].isNull() && m_order_id_isValid;

    m_parent_id_isValid = ::OpenAPI::fromJsonValue(m_parent_id, json[QString("parent_id")]);
    m_parent_id_isSet = !json[QString("parent_id")].isNull() && m_parent_id_isValid;

    m_qty_isValid = ::OpenAPI::fromJsonValue(m_qty, json[QString("qty")]);
    m_qty_isSet = !json[QString("qty")].isNull() && m_qty_isValid;

    m_title_isValid = ::OpenAPI::fromJsonValue(m_title, json[QString("title")]);
    m_title_isSet = !json[QString("title")].isNull() && m_title_isValid;

    m_track_number_isValid = ::OpenAPI::fromJsonValue(m_track_number, json[QString("track_number")]);
    m_track_number_isSet = !json[QString("track_number")].isNull() && m_track_number_isValid;

    m_updated_at_isValid = ::OpenAPI::fromJsonValue(m_updated_at, json[QString("updated_at")]);
    m_updated_at_isSet = !json[QString("updated_at")].isNull() && m_updated_at_isValid;

    m_weight_isValid = ::OpenAPI::fromJsonValue(m_weight, json[QString("weight")]);
    m_weight_isSet = !json[QString("weight")].isNull() && m_weight_isValid;
}

QString OAISales_data_shipment_track_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISales_data_shipment_track_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_carrier_code_isSet) {
        obj.insert(QString("carrier_code"), ::OpenAPI::toJsonValue(m_carrier_code));
    }
    if (m_created_at_isSet) {
        obj.insert(QString("created_at"), ::OpenAPI::toJsonValue(m_created_at));
    }
    if (m_description_isSet) {
        obj.insert(QString("description"), ::OpenAPI::toJsonValue(m_description));
    }
    if (m_entity_id_isSet) {
        obj.insert(QString("entity_id"), ::OpenAPI::toJsonValue(m_entity_id));
    }
    if (m_extension_attributes_isSet) {
        obj.insert(QString("extension_attributes"), ::OpenAPI::toJsonValue(m_extension_attributes));
    }
    if (m_order_id_isSet) {
        obj.insert(QString("order_id"), ::OpenAPI::toJsonValue(m_order_id));
    }
    if (m_parent_id_isSet) {
        obj.insert(QString("parent_id"), ::OpenAPI::toJsonValue(m_parent_id));
    }
    if (m_qty_isSet) {
        obj.insert(QString("qty"), ::OpenAPI::toJsonValue(m_qty));
    }
    if (m_title_isSet) {
        obj.insert(QString("title"), ::OpenAPI::toJsonValue(m_title));
    }
    if (m_track_number_isSet) {
        obj.insert(QString("track_number"), ::OpenAPI::toJsonValue(m_track_number));
    }
    if (m_updated_at_isSet) {
        obj.insert(QString("updated_at"), ::OpenAPI::toJsonValue(m_updated_at));
    }
    if (m_weight_isSet) {
        obj.insert(QString("weight"), ::OpenAPI::toJsonValue(m_weight));
    }
    return obj;
}

QString OAISales_data_shipment_track_interface::getCarrierCode() const {
    return m_carrier_code;
}
void OAISales_data_shipment_track_interface::setCarrierCode(const QString &carrier_code) {
    m_carrier_code = carrier_code;
    m_carrier_code_isSet = true;
}

bool OAISales_data_shipment_track_interface::is_carrier_code_Set() const{
    return m_carrier_code_isSet;
}

bool OAISales_data_shipment_track_interface::is_carrier_code_Valid() const{
    return m_carrier_code_isValid;
}

QString OAISales_data_shipment_track_interface::getCreatedAt() const {
    return m_created_at;
}
void OAISales_data_shipment_track_interface::setCreatedAt(const QString &created_at) {
    m_created_at = created_at;
    m_created_at_isSet = true;
}

bool OAISales_data_shipment_track_interface::is_created_at_Set() const{
    return m_created_at_isSet;
}

bool OAISales_data_shipment_track_interface::is_created_at_Valid() const{
    return m_created_at_isValid;
}

QString OAISales_data_shipment_track_interface::getDescription() const {
    return m_description;
}
void OAISales_data_shipment_track_interface::setDescription(const QString &description) {
    m_description = description;
    m_description_isSet = true;
}

bool OAISales_data_shipment_track_interface::is_description_Set() const{
    return m_description_isSet;
}

bool OAISales_data_shipment_track_interface::is_description_Valid() const{
    return m_description_isValid;
}

qint32 OAISales_data_shipment_track_interface::getEntityId() const {
    return m_entity_id;
}
void OAISales_data_shipment_track_interface::setEntityId(const qint32 &entity_id) {
    m_entity_id = entity_id;
    m_entity_id_isSet = true;
}

bool OAISales_data_shipment_track_interface::is_entity_id_Set() const{
    return m_entity_id_isSet;
}

bool OAISales_data_shipment_track_interface::is_entity_id_Valid() const{
    return m_entity_id_isValid;
}

OAIObject OAISales_data_shipment_track_interface::getExtensionAttributes() const {
    return m_extension_attributes;
}
void OAISales_data_shipment_track_interface::setExtensionAttributes(const OAIObject &extension_attributes) {
    m_extension_attributes = extension_attributes;
    m_extension_attributes_isSet = true;
}

bool OAISales_data_shipment_track_interface::is_extension_attributes_Set() const{
    return m_extension_attributes_isSet;
}

bool OAISales_data_shipment_track_interface::is_extension_attributes_Valid() const{
    return m_extension_attributes_isValid;
}

qint32 OAISales_data_shipment_track_interface::getOrderId() const {
    return m_order_id;
}
void OAISales_data_shipment_track_interface::setOrderId(const qint32 &order_id) {
    m_order_id = order_id;
    m_order_id_isSet = true;
}

bool OAISales_data_shipment_track_interface::is_order_id_Set() const{
    return m_order_id_isSet;
}

bool OAISales_data_shipment_track_interface::is_order_id_Valid() const{
    return m_order_id_isValid;
}

qint32 OAISales_data_shipment_track_interface::getParentId() const {
    return m_parent_id;
}
void OAISales_data_shipment_track_interface::setParentId(const qint32 &parent_id) {
    m_parent_id = parent_id;
    m_parent_id_isSet = true;
}

bool OAISales_data_shipment_track_interface::is_parent_id_Set() const{
    return m_parent_id_isSet;
}

bool OAISales_data_shipment_track_interface::is_parent_id_Valid() const{
    return m_parent_id_isValid;
}

double OAISales_data_shipment_track_interface::getQty() const {
    return m_qty;
}
void OAISales_data_shipment_track_interface::setQty(const double &qty) {
    m_qty = qty;
    m_qty_isSet = true;
}

bool OAISales_data_shipment_track_interface::is_qty_Set() const{
    return m_qty_isSet;
}

bool OAISales_data_shipment_track_interface::is_qty_Valid() const{
    return m_qty_isValid;
}

QString OAISales_data_shipment_track_interface::getTitle() const {
    return m_title;
}
void OAISales_data_shipment_track_interface::setTitle(const QString &title) {
    m_title = title;
    m_title_isSet = true;
}

bool OAISales_data_shipment_track_interface::is_title_Set() const{
    return m_title_isSet;
}

bool OAISales_data_shipment_track_interface::is_title_Valid() const{
    return m_title_isValid;
}

QString OAISales_data_shipment_track_interface::getTrackNumber() const {
    return m_track_number;
}
void OAISales_data_shipment_track_interface::setTrackNumber(const QString &track_number) {
    m_track_number = track_number;
    m_track_number_isSet = true;
}

bool OAISales_data_shipment_track_interface::is_track_number_Set() const{
    return m_track_number_isSet;
}

bool OAISales_data_shipment_track_interface::is_track_number_Valid() const{
    return m_track_number_isValid;
}

QString OAISales_data_shipment_track_interface::getUpdatedAt() const {
    return m_updated_at;
}
void OAISales_data_shipment_track_interface::setUpdatedAt(const QString &updated_at) {
    m_updated_at = updated_at;
    m_updated_at_isSet = true;
}

bool OAISales_data_shipment_track_interface::is_updated_at_Set() const{
    return m_updated_at_isSet;
}

bool OAISales_data_shipment_track_interface::is_updated_at_Valid() const{
    return m_updated_at_isValid;
}

double OAISales_data_shipment_track_interface::getWeight() const {
    return m_weight;
}
void OAISales_data_shipment_track_interface::setWeight(const double &weight) {
    m_weight = weight;
    m_weight_isSet = true;
}

bool OAISales_data_shipment_track_interface::is_weight_Set() const{
    return m_weight_isSet;
}

bool OAISales_data_shipment_track_interface::is_weight_Valid() const{
    return m_weight_isValid;
}

bool OAISales_data_shipment_track_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_carrier_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_created_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_description_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extension_attributes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_parent_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_qty_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_title_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_track_number_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_updated_at_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weight_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISales_data_shipment_track_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_carrier_code_isValid && m_description_isValid && m_order_id_isValid && m_parent_id_isValid && m_qty_isValid && m_title_isValid && m_track_number_isValid && m_weight_isValid && true;
}

} // namespace OpenAPI
