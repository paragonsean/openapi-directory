/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITax_data_tax_class_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITax_data_tax_class_interface::OAITax_data_tax_class_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITax_data_tax_class_interface::OAITax_data_tax_class_interface() {
    this->initializeModel();
}

OAITax_data_tax_class_interface::~OAITax_data_tax_class_interface() {}

void OAITax_data_tax_class_interface::initializeModel() {

    m_class_id_isSet = false;
    m_class_id_isValid = false;

    m_class_name_isSet = false;
    m_class_name_isValid = false;

    m_class_type_isSet = false;
    m_class_type_isValid = false;

    m_extension_attributes_isSet = false;
    m_extension_attributes_isValid = false;
}

void OAITax_data_tax_class_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITax_data_tax_class_interface::fromJsonObject(QJsonObject json) {

    m_class_id_isValid = ::OpenAPI::fromJsonValue(m_class_id, json[QString("class_id")]);
    m_class_id_isSet = !json[QString("class_id")].isNull() && m_class_id_isValid;

    m_class_name_isValid = ::OpenAPI::fromJsonValue(m_class_name, json[QString("class_name")]);
    m_class_name_isSet = !json[QString("class_name")].isNull() && m_class_name_isValid;

    m_class_type_isValid = ::OpenAPI::fromJsonValue(m_class_type, json[QString("class_type")]);
    m_class_type_isSet = !json[QString("class_type")].isNull() && m_class_type_isValid;

    m_extension_attributes_isValid = ::OpenAPI::fromJsonValue(m_extension_attributes, json[QString("extension_attributes")]);
    m_extension_attributes_isSet = !json[QString("extension_attributes")].isNull() && m_extension_attributes_isValid;
}

QString OAITax_data_tax_class_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITax_data_tax_class_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_class_id_isSet) {
        obj.insert(QString("class_id"), ::OpenAPI::toJsonValue(m_class_id));
    }
    if (m_class_name_isSet) {
        obj.insert(QString("class_name"), ::OpenAPI::toJsonValue(m_class_name));
    }
    if (m_class_type_isSet) {
        obj.insert(QString("class_type"), ::OpenAPI::toJsonValue(m_class_type));
    }
    if (m_extension_attributes_isSet) {
        obj.insert(QString("extension_attributes"), ::OpenAPI::toJsonValue(m_extension_attributes));
    }
    return obj;
}

qint32 OAITax_data_tax_class_interface::getClassId() const {
    return m_class_id;
}
void OAITax_data_tax_class_interface::setClassId(const qint32 &class_id) {
    m_class_id = class_id;
    m_class_id_isSet = true;
}

bool OAITax_data_tax_class_interface::is_class_id_Set() const{
    return m_class_id_isSet;
}

bool OAITax_data_tax_class_interface::is_class_id_Valid() const{
    return m_class_id_isValid;
}

QString OAITax_data_tax_class_interface::getClassName() const {
    return m_class_name;
}
void OAITax_data_tax_class_interface::setClassName(const QString &class_name) {
    m_class_name = class_name;
    m_class_name_isSet = true;
}

bool OAITax_data_tax_class_interface::is_class_name_Set() const{
    return m_class_name_isSet;
}

bool OAITax_data_tax_class_interface::is_class_name_Valid() const{
    return m_class_name_isValid;
}

QString OAITax_data_tax_class_interface::getClassType() const {
    return m_class_type;
}
void OAITax_data_tax_class_interface::setClassType(const QString &class_type) {
    m_class_type = class_type;
    m_class_type_isSet = true;
}

bool OAITax_data_tax_class_interface::is_class_type_Set() const{
    return m_class_type_isSet;
}

bool OAITax_data_tax_class_interface::is_class_type_Valid() const{
    return m_class_type_isValid;
}

OAIObject OAITax_data_tax_class_interface::getExtensionAttributes() const {
    return m_extension_attributes;
}
void OAITax_data_tax_class_interface::setExtensionAttributes(const OAIObject &extension_attributes) {
    m_extension_attributes = extension_attributes;
    m_extension_attributes_isSet = true;
}

bool OAITax_data_tax_class_interface::is_extension_attributes_Set() const{
    return m_extension_attributes_isSet;
}

bool OAITax_data_tax_class_interface::is_extension_attributes_Valid() const{
    return m_extension_attributes_isValid;
}

bool OAITax_data_tax_class_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_class_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_class_name_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_class_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extension_attributes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITax_data_tax_class_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_class_name_isValid && m_class_type_isValid && true;
}

} // namespace OpenAPI
