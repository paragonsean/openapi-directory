/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICatalog_data_product_extension_interface.h
 *
 * ExtensionInterface class for @see \\Magento\\Catalog\\Api\\Data\\ProductInterface
 */

#ifndef OAICatalog_data_product_extension_interface_H
#define OAICatalog_data_product_extension_interface_H

#include <QJsonObject>

#include "OAIBundle_data_option_interface.h"
#include "OAICatalog_data_category_link_interface.h"
#include "OAICatalog_inventory_data_stock_item_interface.h"
#include "OAIConfigurable_product_data_option_interface.h"
#include "OAIDownloadable_data_link_interface.h"
#include "OAIDownloadable_data_sample_interface.h"
#include "OAIGift_card_data_giftcard_amount_interface.h"
#include <QList>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBundle_data_option_interface;
class OAICatalog_data_category_link_interface;
class OAIConfigurable_product_data_option_interface;
class OAIDownloadable_data_link_interface;
class OAIDownloadable_data_sample_interface;
class OAIGift_card_data_giftcard_amount_interface;
class OAICatalog_inventory_data_stock_item_interface;

class OAICatalog_data_product_extension_interface : public OAIObject {
public:
    OAICatalog_data_product_extension_interface();
    OAICatalog_data_product_extension_interface(QString json);
    ~OAICatalog_data_product_extension_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIBundle_data_option_interface> getBundleProductOptions() const;
    void setBundleProductOptions(const QList<OAIBundle_data_option_interface> &bundle_product_options);
    bool is_bundle_product_options_Set() const;
    bool is_bundle_product_options_Valid() const;

    QList<OAICatalog_data_category_link_interface> getCategoryLinks() const;
    void setCategoryLinks(const QList<OAICatalog_data_category_link_interface> &category_links);
    bool is_category_links_Set() const;
    bool is_category_links_Valid() const;

    QList<qint32> getConfigurableProductLinks() const;
    void setConfigurableProductLinks(const QList<qint32> &configurable_product_links);
    bool is_configurable_product_links_Set() const;
    bool is_configurable_product_links_Valid() const;

    QList<OAIConfigurable_product_data_option_interface> getConfigurableProductOptions() const;
    void setConfigurableProductOptions(const QList<OAIConfigurable_product_data_option_interface> &configurable_product_options);
    bool is_configurable_product_options_Set() const;
    bool is_configurable_product_options_Valid() const;

    QList<OAIDownloadable_data_link_interface> getDownloadableProductLinks() const;
    void setDownloadableProductLinks(const QList<OAIDownloadable_data_link_interface> &downloadable_product_links);
    bool is_downloadable_product_links_Set() const;
    bool is_downloadable_product_links_Valid() const;

    QList<OAIDownloadable_data_sample_interface> getDownloadableProductSamples() const;
    void setDownloadableProductSamples(const QList<OAIDownloadable_data_sample_interface> &downloadable_product_samples);
    bool is_downloadable_product_samples_Set() const;
    bool is_downloadable_product_samples_Valid() const;

    QList<OAIGift_card_data_giftcard_amount_interface> getGiftcardAmounts() const;
    void setGiftcardAmounts(const QList<OAIGift_card_data_giftcard_amount_interface> &giftcard_amounts);
    bool is_giftcard_amounts_Set() const;
    bool is_giftcard_amounts_Valid() const;

    OAICatalog_inventory_data_stock_item_interface getStockItem() const;
    void setStockItem(const OAICatalog_inventory_data_stock_item_interface &stock_item);
    bool is_stock_item_Set() const;
    bool is_stock_item_Valid() const;

    QList<qint32> getWebsiteIds() const;
    void setWebsiteIds(const QList<qint32> &website_ids);
    bool is_website_ids_Set() const;
    bool is_website_ids_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIBundle_data_option_interface> m_bundle_product_options;
    bool m_bundle_product_options_isSet;
    bool m_bundle_product_options_isValid;

    QList<OAICatalog_data_category_link_interface> m_category_links;
    bool m_category_links_isSet;
    bool m_category_links_isValid;

    QList<qint32> m_configurable_product_links;
    bool m_configurable_product_links_isSet;
    bool m_configurable_product_links_isValid;

    QList<OAIConfigurable_product_data_option_interface> m_configurable_product_options;
    bool m_configurable_product_options_isSet;
    bool m_configurable_product_options_isValid;

    QList<OAIDownloadable_data_link_interface> m_downloadable_product_links;
    bool m_downloadable_product_links_isSet;
    bool m_downloadable_product_links_isValid;

    QList<OAIDownloadable_data_sample_interface> m_downloadable_product_samples;
    bool m_downloadable_product_samples_isSet;
    bool m_downloadable_product_samples_isValid;

    QList<OAIGift_card_data_giftcard_amount_interface> m_giftcard_amounts;
    bool m_giftcard_amounts_isSet;
    bool m_giftcard_amounts_isValid;

    OAICatalog_inventory_data_stock_item_interface m_stock_item;
    bool m_stock_item_isSet;
    bool m_stock_item_isValid;

    QList<qint32> m_website_ids;
    bool m_website_ids_isSet;
    bool m_website_ids_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICatalog_data_product_extension_interface)

#endif // OAICatalog_data_product_extension_interface_H
