/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICheckout_data_payment_details_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICheckout_data_payment_details_interface::OAICheckout_data_payment_details_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICheckout_data_payment_details_interface::OAICheckout_data_payment_details_interface() {
    this->initializeModel();
}

OAICheckout_data_payment_details_interface::~OAICheckout_data_payment_details_interface() {}

void OAICheckout_data_payment_details_interface::initializeModel() {

    m_extension_attributes_isSet = false;
    m_extension_attributes_isValid = false;

    m_payment_methods_isSet = false;
    m_payment_methods_isValid = false;

    m_totals_isSet = false;
    m_totals_isValid = false;
}

void OAICheckout_data_payment_details_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICheckout_data_payment_details_interface::fromJsonObject(QJsonObject json) {

    m_extension_attributes_isValid = ::OpenAPI::fromJsonValue(m_extension_attributes, json[QString("extension_attributes")]);
    m_extension_attributes_isSet = !json[QString("extension_attributes")].isNull() && m_extension_attributes_isValid;

    m_payment_methods_isValid = ::OpenAPI::fromJsonValue(m_payment_methods, json[QString("payment_methods")]);
    m_payment_methods_isSet = !json[QString("payment_methods")].isNull() && m_payment_methods_isValid;

    m_totals_isValid = ::OpenAPI::fromJsonValue(m_totals, json[QString("totals")]);
    m_totals_isSet = !json[QString("totals")].isNull() && m_totals_isValid;
}

QString OAICheckout_data_payment_details_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICheckout_data_payment_details_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_extension_attributes_isSet) {
        obj.insert(QString("extension_attributes"), ::OpenAPI::toJsonValue(m_extension_attributes));
    }
    if (m_payment_methods.size() > 0) {
        obj.insert(QString("payment_methods"), ::OpenAPI::toJsonValue(m_payment_methods));
    }
    if (m_totals.isSet()) {
        obj.insert(QString("totals"), ::OpenAPI::toJsonValue(m_totals));
    }
    return obj;
}

OAIObject OAICheckout_data_payment_details_interface::getExtensionAttributes() const {
    return m_extension_attributes;
}
void OAICheckout_data_payment_details_interface::setExtensionAttributes(const OAIObject &extension_attributes) {
    m_extension_attributes = extension_attributes;
    m_extension_attributes_isSet = true;
}

bool OAICheckout_data_payment_details_interface::is_extension_attributes_Set() const{
    return m_extension_attributes_isSet;
}

bool OAICheckout_data_payment_details_interface::is_extension_attributes_Valid() const{
    return m_extension_attributes_isValid;
}

QList<OAIQuote_data_payment_method_interface> OAICheckout_data_payment_details_interface::getPaymentMethods() const {
    return m_payment_methods;
}
void OAICheckout_data_payment_details_interface::setPaymentMethods(const QList<OAIQuote_data_payment_method_interface> &payment_methods) {
    m_payment_methods = payment_methods;
    m_payment_methods_isSet = true;
}

bool OAICheckout_data_payment_details_interface::is_payment_methods_Set() const{
    return m_payment_methods_isSet;
}

bool OAICheckout_data_payment_details_interface::is_payment_methods_Valid() const{
    return m_payment_methods_isValid;
}

OAIQuote_data_totals_interface OAICheckout_data_payment_details_interface::getTotals() const {
    return m_totals;
}
void OAICheckout_data_payment_details_interface::setTotals(const OAIQuote_data_totals_interface &totals) {
    m_totals = totals;
    m_totals_isSet = true;
}

bool OAICheckout_data_payment_details_interface::is_totals_Set() const{
    return m_totals_isSet;
}

bool OAICheckout_data_payment_details_interface::is_totals_Valid() const{
    return m_totals_isValid;
}

bool OAICheckout_data_payment_details_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_extension_attributes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_methods.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_totals.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICheckout_data_payment_details_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_payment_methods_isValid && m_totals_isValid && true;
}

} // namespace OpenAPI
