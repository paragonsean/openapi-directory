/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDirectory_data_currency_information_interface.h
 *
 * Currency Information interface.
 */

#ifndef OAIDirectory_data_currency_information_interface_H
#define OAIDirectory_data_currency_information_interface_H

#include <QJsonObject>

#include "OAIDirectory_data_exchange_rate_interface.h"
#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDirectory_data_exchange_rate_interface;

class OAIDirectory_data_currency_information_interface : public OAIObject {
public:
    OAIDirectory_data_currency_information_interface();
    OAIDirectory_data_currency_information_interface(QString json);
    ~OAIDirectory_data_currency_information_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<QString> getAvailableCurrencyCodes() const;
    void setAvailableCurrencyCodes(const QList<QString> &available_currency_codes);
    bool is_available_currency_codes_Set() const;
    bool is_available_currency_codes_Valid() const;

    QString getBaseCurrencyCode() const;
    void setBaseCurrencyCode(const QString &base_currency_code);
    bool is_base_currency_code_Set() const;
    bool is_base_currency_code_Valid() const;

    QString getBaseCurrencySymbol() const;
    void setBaseCurrencySymbol(const QString &base_currency_symbol);
    bool is_base_currency_symbol_Set() const;
    bool is_base_currency_symbol_Valid() const;

    QString getDefaultDisplayCurrencyCode() const;
    void setDefaultDisplayCurrencyCode(const QString &default_display_currency_code);
    bool is_default_display_currency_code_Set() const;
    bool is_default_display_currency_code_Valid() const;

    QString getDefaultDisplayCurrencySymbol() const;
    void setDefaultDisplayCurrencySymbol(const QString &default_display_currency_symbol);
    bool is_default_display_currency_symbol_Set() const;
    bool is_default_display_currency_symbol_Valid() const;

    QList<OAIDirectory_data_exchange_rate_interface> getExchangeRates() const;
    void setExchangeRates(const QList<OAIDirectory_data_exchange_rate_interface> &exchange_rates);
    bool is_exchange_rates_Set() const;
    bool is_exchange_rates_Valid() const;

    OAIObject getExtensionAttributes() const;
    void setExtensionAttributes(const OAIObject &extension_attributes);
    bool is_extension_attributes_Set() const;
    bool is_extension_attributes_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<QString> m_available_currency_codes;
    bool m_available_currency_codes_isSet;
    bool m_available_currency_codes_isValid;

    QString m_base_currency_code;
    bool m_base_currency_code_isSet;
    bool m_base_currency_code_isValid;

    QString m_base_currency_symbol;
    bool m_base_currency_symbol_isSet;
    bool m_base_currency_symbol_isValid;

    QString m_default_display_currency_code;
    bool m_default_display_currency_code_isSet;
    bool m_default_display_currency_code_isValid;

    QString m_default_display_currency_symbol;
    bool m_default_display_currency_symbol_isSet;
    bool m_default_display_currency_symbol_isValid;

    QList<OAIDirectory_data_exchange_rate_interface> m_exchange_rates;
    bool m_exchange_rates_isSet;
    bool m_exchange_rates_isValid;

    OAIObject m_extension_attributes;
    bool m_extension_attributes_isSet;
    bool m_extension_attributes_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDirectory_data_currency_information_interface)

#endif // OAIDirectory_data_currency_information_interface_H
