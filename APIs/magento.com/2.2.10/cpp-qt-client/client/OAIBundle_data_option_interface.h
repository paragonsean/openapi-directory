/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIBundle_data_option_interface.h
 *
 * Interface OptionInterface
 */

#ifndef OAIBundle_data_option_interface_H
#define OAIBundle_data_option_interface_H

#include <QJsonObject>

#include "OAIBundle_data_link_interface.h"
#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIBundle_data_link_interface;

class OAIBundle_data_option_interface : public OAIObject {
public:
    OAIBundle_data_option_interface();
    OAIBundle_data_option_interface(QString json);
    ~OAIBundle_data_option_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAIObject getExtensionAttributes() const;
    void setExtensionAttributes(const OAIObject &extension_attributes);
    bool is_extension_attributes_Set() const;
    bool is_extension_attributes_Valid() const;

    qint32 getOptionId() const;
    void setOptionId(const qint32 &option_id);
    bool is_option_id_Set() const;
    bool is_option_id_Valid() const;

    qint32 getPosition() const;
    void setPosition(const qint32 &position);
    bool is_position_Set() const;
    bool is_position_Valid() const;

    QList<OAIBundle_data_link_interface> getProductLinks() const;
    void setProductLinks(const QList<OAIBundle_data_link_interface> &product_links);
    bool is_product_links_Set() const;
    bool is_product_links_Valid() const;

    bool isRequired() const;
    void setRequired(const bool &required);
    bool is_required_Set() const;
    bool is_required_Valid() const;

    QString getSku() const;
    void setSku(const QString &sku);
    bool is_sku_Set() const;
    bool is_sku_Valid() const;

    QString getTitle() const;
    void setTitle(const QString &title);
    bool is_title_Set() const;
    bool is_title_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAIObject m_extension_attributes;
    bool m_extension_attributes_isSet;
    bool m_extension_attributes_isValid;

    qint32 m_option_id;
    bool m_option_id_isSet;
    bool m_option_id_isValid;

    qint32 m_position;
    bool m_position_isSet;
    bool m_position_isValid;

    QList<OAIBundle_data_link_interface> m_product_links;
    bool m_product_links_isSet;
    bool m_product_links_isValid;

    bool m_required;
    bool m_required_isSet;
    bool m_required_isValid;

    QString m_sku;
    bool m_sku_isSet;
    bool m_sku_isValid;

    QString m_title;
    bool m_title_isSet;
    bool m_title_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIBundle_data_option_interface)

#endif // OAIBundle_data_option_interface_H
