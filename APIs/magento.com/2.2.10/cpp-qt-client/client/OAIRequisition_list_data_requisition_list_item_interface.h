/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIRequisition_list_data_requisition_list_item_interface.h
 *
 * Interface RequisitionListItemInterface
 */

#ifndef OAIRequisition_list_data_requisition_list_item_interface_H
#define OAIRequisition_list_data_requisition_list_item_interface_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIRequisition_list_data_requisition_list_item_interface : public OAIObject {
public:
    OAIRequisition_list_data_requisition_list_item_interface();
    OAIRequisition_list_data_requisition_list_item_interface(QString json);
    ~OAIRequisition_list_data_requisition_list_item_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getAddedAt() const;
    void setAddedAt(const QString &added_at);
    bool is_added_at_Set() const;
    bool is_added_at_Valid() const;

    OAIObject getExtensionAttributes() const;
    void setExtensionAttributes(const OAIObject &extension_attributes);
    bool is_extension_attributes_Set() const;
    bool is_extension_attributes_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<QString> getOptions() const;
    void setOptions(const QList<QString> &options);
    bool is_options_Set() const;
    bool is_options_Valid() const;

    double getQty() const;
    void setQty(const double &qty);
    bool is_qty_Set() const;
    bool is_qty_Valid() const;

    qint32 getRequisitionListId() const;
    void setRequisitionListId(const qint32 &requisition_list_id);
    bool is_requisition_list_id_Set() const;
    bool is_requisition_list_id_Valid() const;

    QString getSku() const;
    void setSku(const QString &sku);
    bool is_sku_Set() const;
    bool is_sku_Valid() const;

    qint32 getStoreId() const;
    void setStoreId(const qint32 &store_id);
    bool is_store_id_Set() const;
    bool is_store_id_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_added_at;
    bool m_added_at_isSet;
    bool m_added_at_isValid;

    OAIObject m_extension_attributes;
    bool m_extension_attributes_isSet;
    bool m_extension_attributes_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<QString> m_options;
    bool m_options_isSet;
    bool m_options_isValid;

    double m_qty;
    bool m_qty_isSet;
    bool m_qty_isValid;

    qint32 m_requisition_list_id;
    bool m_requisition_list_id_isSet;
    bool m_requisition_list_id_isValid;

    QString m_sku;
    bool m_sku_isSet;
    bool m_sku_isValid;

    qint32 m_store_id;
    bool m_store_id_isSet;
    bool m_store_id_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIRequisition_list_data_requisition_list_item_interface)

#endif // OAIRequisition_list_data_requisition_list_item_interface_H
