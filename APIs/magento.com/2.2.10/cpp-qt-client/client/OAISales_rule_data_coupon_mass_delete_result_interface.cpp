/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISales_rule_data_coupon_mass_delete_result_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISales_rule_data_coupon_mass_delete_result_interface::OAISales_rule_data_coupon_mass_delete_result_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISales_rule_data_coupon_mass_delete_result_interface::OAISales_rule_data_coupon_mass_delete_result_interface() {
    this->initializeModel();
}

OAISales_rule_data_coupon_mass_delete_result_interface::~OAISales_rule_data_coupon_mass_delete_result_interface() {}

void OAISales_rule_data_coupon_mass_delete_result_interface::initializeModel() {

    m_failed_items_isSet = false;
    m_failed_items_isValid = false;

    m_missing_items_isSet = false;
    m_missing_items_isValid = false;
}

void OAISales_rule_data_coupon_mass_delete_result_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISales_rule_data_coupon_mass_delete_result_interface::fromJsonObject(QJsonObject json) {

    m_failed_items_isValid = ::OpenAPI::fromJsonValue(m_failed_items, json[QString("failed_items")]);
    m_failed_items_isSet = !json[QString("failed_items")].isNull() && m_failed_items_isValid;

    m_missing_items_isValid = ::OpenAPI::fromJsonValue(m_missing_items, json[QString("missing_items")]);
    m_missing_items_isSet = !json[QString("missing_items")].isNull() && m_missing_items_isValid;
}

QString OAISales_rule_data_coupon_mass_delete_result_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISales_rule_data_coupon_mass_delete_result_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_failed_items.size() > 0) {
        obj.insert(QString("failed_items"), ::OpenAPI::toJsonValue(m_failed_items));
    }
    if (m_missing_items.size() > 0) {
        obj.insert(QString("missing_items"), ::OpenAPI::toJsonValue(m_missing_items));
    }
    return obj;
}

QList<QString> OAISales_rule_data_coupon_mass_delete_result_interface::getFailedItems() const {
    return m_failed_items;
}
void OAISales_rule_data_coupon_mass_delete_result_interface::setFailedItems(const QList<QString> &failed_items) {
    m_failed_items = failed_items;
    m_failed_items_isSet = true;
}

bool OAISales_rule_data_coupon_mass_delete_result_interface::is_failed_items_Set() const{
    return m_failed_items_isSet;
}

bool OAISales_rule_data_coupon_mass_delete_result_interface::is_failed_items_Valid() const{
    return m_failed_items_isValid;
}

QList<QString> OAISales_rule_data_coupon_mass_delete_result_interface::getMissingItems() const {
    return m_missing_items;
}
void OAISales_rule_data_coupon_mass_delete_result_interface::setMissingItems(const QList<QString> &missing_items) {
    m_missing_items = missing_items;
    m_missing_items_isSet = true;
}

bool OAISales_rule_data_coupon_mass_delete_result_interface::is_missing_items_Set() const{
    return m_missing_items_isSet;
}

bool OAISales_rule_data_coupon_mass_delete_result_interface::is_missing_items_Valid() const{
    return m_missing_items_isValid;
}

bool OAISales_rule_data_coupon_mass_delete_result_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_failed_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_missing_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISales_rule_data_coupon_mass_delete_result_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_failed_items_isValid && m_missing_items_isValid && true;
}

} // namespace OpenAPI
