/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAICatalog_data_product_render_interface.h
 *
 * Represents Data Object which holds enough information to render product This information is put into part as Add To Cart or Add to Compare Data or Price Data
 */

#ifndef OAICatalog_data_product_render_interface_H
#define OAICatalog_data_product_render_interface_H

#include <QJsonObject>

#include "OAICatalog_data_product_render_button_interface.h"
#include "OAICatalog_data_product_render_extension_interface.h"
#include "OAICatalog_data_product_render_image_interface.h"
#include "OAICatalog_data_product_render_price_info_interface.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAICatalog_data_product_render_button_interface;
class OAICatalog_data_product_render_extension_interface;
class OAICatalog_data_product_render_image_interface;
class OAICatalog_data_product_render_price_info_interface;

class OAICatalog_data_product_render_interface : public OAIObject {
public:
    OAICatalog_data_product_render_interface();
    OAICatalog_data_product_render_interface(QString json);
    ~OAICatalog_data_product_render_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    OAICatalog_data_product_render_button_interface getAddToCartButton() const;
    void setAddToCartButton(const OAICatalog_data_product_render_button_interface &add_to_cart_button);
    bool is_add_to_cart_button_Set() const;
    bool is_add_to_cart_button_Valid() const;

    OAICatalog_data_product_render_button_interface getAddToCompareButton() const;
    void setAddToCompareButton(const OAICatalog_data_product_render_button_interface &add_to_compare_button);
    bool is_add_to_compare_button_Set() const;
    bool is_add_to_compare_button_Valid() const;

    QString getCurrencyCode() const;
    void setCurrencyCode(const QString &currency_code);
    bool is_currency_code_Set() const;
    bool is_currency_code_Valid() const;

    OAICatalog_data_product_render_extension_interface getExtensionAttributes() const;
    void setExtensionAttributes(const OAICatalog_data_product_render_extension_interface &extension_attributes);
    bool is_extension_attributes_Set() const;
    bool is_extension_attributes_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QList<OAICatalog_data_product_render_image_interface> getImages() const;
    void setImages(const QList<OAICatalog_data_product_render_image_interface> &images);
    bool is_images_Set() const;
    bool is_images_Valid() const;

    QString getIsSalable() const;
    void setIsSalable(const QString &is_salable);
    bool is_is_salable_Set() const;
    bool is_is_salable_Valid() const;

    QString getName() const;
    void setName(const QString &name);
    bool is_name_Set() const;
    bool is_name_Valid() const;

    OAICatalog_data_product_render_price_info_interface getPriceInfo() const;
    void setPriceInfo(const OAICatalog_data_product_render_price_info_interface &price_info);
    bool is_price_info_Set() const;
    bool is_price_info_Valid() const;

    qint32 getStoreId() const;
    void setStoreId(const qint32 &store_id);
    bool is_store_id_Set() const;
    bool is_store_id_Valid() const;

    QString getType() const;
    void setType(const QString &type);
    bool is_type_Set() const;
    bool is_type_Valid() const;

    QString getUrl() const;
    void setUrl(const QString &url);
    bool is_url_Set() const;
    bool is_url_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    OAICatalog_data_product_render_button_interface m_add_to_cart_button;
    bool m_add_to_cart_button_isSet;
    bool m_add_to_cart_button_isValid;

    OAICatalog_data_product_render_button_interface m_add_to_compare_button;
    bool m_add_to_compare_button_isSet;
    bool m_add_to_compare_button_isValid;

    QString m_currency_code;
    bool m_currency_code_isSet;
    bool m_currency_code_isValid;

    OAICatalog_data_product_render_extension_interface m_extension_attributes;
    bool m_extension_attributes_isSet;
    bool m_extension_attributes_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QList<OAICatalog_data_product_render_image_interface> m_images;
    bool m_images_isSet;
    bool m_images_isValid;

    QString m_is_salable;
    bool m_is_salable_isSet;
    bool m_is_salable_isValid;

    QString m_name;
    bool m_name_isSet;
    bool m_name_isValid;

    OAICatalog_data_product_render_price_info_interface m_price_info;
    bool m_price_info_isSet;
    bool m_price_info_isValid;

    qint32 m_store_id;
    bool m_store_id_isSet;
    bool m_store_id_isValid;

    QString m_type;
    bool m_type_isSet;
    bool m_type_isValid;

    QString m_url;
    bool m_url_isSet;
    bool m_url_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAICatalog_data_product_render_interface)

#endif // OAICatalog_data_product_render_interface_H
