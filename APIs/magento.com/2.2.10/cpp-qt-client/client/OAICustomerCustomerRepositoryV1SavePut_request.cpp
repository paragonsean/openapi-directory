/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICustomerCustomerRepositoryV1SavePut_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICustomerCustomerRepositoryV1SavePut_request::OAICustomerCustomerRepositoryV1SavePut_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICustomerCustomerRepositoryV1SavePut_request::OAICustomerCustomerRepositoryV1SavePut_request() {
    this->initializeModel();
}

OAICustomerCustomerRepositoryV1SavePut_request::~OAICustomerCustomerRepositoryV1SavePut_request() {}

void OAICustomerCustomerRepositoryV1SavePut_request::initializeModel() {

    m_customer_isSet = false;
    m_customer_isValid = false;

    m_password_hash_isSet = false;
    m_password_hash_isValid = false;
}

void OAICustomerCustomerRepositoryV1SavePut_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICustomerCustomerRepositoryV1SavePut_request::fromJsonObject(QJsonObject json) {

    m_customer_isValid = ::OpenAPI::fromJsonValue(m_customer, json[QString("customer")]);
    m_customer_isSet = !json[QString("customer")].isNull() && m_customer_isValid;

    m_password_hash_isValid = ::OpenAPI::fromJsonValue(m_password_hash, json[QString("passwordHash")]);
    m_password_hash_isSet = !json[QString("passwordHash")].isNull() && m_password_hash_isValid;
}

QString OAICustomerCustomerRepositoryV1SavePut_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICustomerCustomerRepositoryV1SavePut_request::asJsonObject() const {
    QJsonObject obj;
    if (m_customer.isSet()) {
        obj.insert(QString("customer"), ::OpenAPI::toJsonValue(m_customer));
    }
    if (m_password_hash_isSet) {
        obj.insert(QString("passwordHash"), ::OpenAPI::toJsonValue(m_password_hash));
    }
    return obj;
}

OAICustomer_data_customer_interface OAICustomerCustomerRepositoryV1SavePut_request::getCustomer() const {
    return m_customer;
}
void OAICustomerCustomerRepositoryV1SavePut_request::setCustomer(const OAICustomer_data_customer_interface &customer) {
    m_customer = customer;
    m_customer_isSet = true;
}

bool OAICustomerCustomerRepositoryV1SavePut_request::is_customer_Set() const{
    return m_customer_isSet;
}

bool OAICustomerCustomerRepositoryV1SavePut_request::is_customer_Valid() const{
    return m_customer_isValid;
}

QString OAICustomerCustomerRepositoryV1SavePut_request::getPasswordHash() const {
    return m_password_hash;
}
void OAICustomerCustomerRepositoryV1SavePut_request::setPasswordHash(const QString &password_hash) {
    m_password_hash = password_hash;
    m_password_hash_isSet = true;
}

bool OAICustomerCustomerRepositoryV1SavePut_request::is_password_hash_Set() const{
    return m_password_hash_isSet;
}

bool OAICustomerCustomerRepositoryV1SavePut_request::is_password_hash_Valid() const{
    return m_password_hash_isValid;
}

bool OAICustomerCustomerRepositoryV1SavePut_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_customer.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_password_hash_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICustomerCustomerRepositoryV1SavePut_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_customer_isValid && true;
}

} // namespace OpenAPI
