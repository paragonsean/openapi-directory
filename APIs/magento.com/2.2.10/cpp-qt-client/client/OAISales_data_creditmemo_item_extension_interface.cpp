/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISales_data_creditmemo_item_extension_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISales_data_creditmemo_item_extension_interface::OAISales_data_creditmemo_item_extension_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISales_data_creditmemo_item_extension_interface::OAISales_data_creditmemo_item_extension_interface() {
    this->initializeModel();
}

OAISales_data_creditmemo_item_extension_interface::~OAISales_data_creditmemo_item_extension_interface() {}

void OAISales_data_creditmemo_item_extension_interface::initializeModel() {

    m_invoice_text_codes_isSet = false;
    m_invoice_text_codes_isValid = false;

    m_tax_codes_isSet = false;
    m_tax_codes_isValid = false;

    m_vertex_tax_codes_isSet = false;
    m_vertex_tax_codes_isValid = false;
}

void OAISales_data_creditmemo_item_extension_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISales_data_creditmemo_item_extension_interface::fromJsonObject(QJsonObject json) {

    m_invoice_text_codes_isValid = ::OpenAPI::fromJsonValue(m_invoice_text_codes, json[QString("invoice_text_codes")]);
    m_invoice_text_codes_isSet = !json[QString("invoice_text_codes")].isNull() && m_invoice_text_codes_isValid;

    m_tax_codes_isValid = ::OpenAPI::fromJsonValue(m_tax_codes, json[QString("tax_codes")]);
    m_tax_codes_isSet = !json[QString("tax_codes")].isNull() && m_tax_codes_isValid;

    m_vertex_tax_codes_isValid = ::OpenAPI::fromJsonValue(m_vertex_tax_codes, json[QString("vertex_tax_codes")]);
    m_vertex_tax_codes_isSet = !json[QString("vertex_tax_codes")].isNull() && m_vertex_tax_codes_isValid;
}

QString OAISales_data_creditmemo_item_extension_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISales_data_creditmemo_item_extension_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_invoice_text_codes.size() > 0) {
        obj.insert(QString("invoice_text_codes"), ::OpenAPI::toJsonValue(m_invoice_text_codes));
    }
    if (m_tax_codes.size() > 0) {
        obj.insert(QString("tax_codes"), ::OpenAPI::toJsonValue(m_tax_codes));
    }
    if (m_vertex_tax_codes.size() > 0) {
        obj.insert(QString("vertex_tax_codes"), ::OpenAPI::toJsonValue(m_vertex_tax_codes));
    }
    return obj;
}

QList<QString> OAISales_data_creditmemo_item_extension_interface::getInvoiceTextCodes() const {
    return m_invoice_text_codes;
}
void OAISales_data_creditmemo_item_extension_interface::setInvoiceTextCodes(const QList<QString> &invoice_text_codes) {
    m_invoice_text_codes = invoice_text_codes;
    m_invoice_text_codes_isSet = true;
}

bool OAISales_data_creditmemo_item_extension_interface::is_invoice_text_codes_Set() const{
    return m_invoice_text_codes_isSet;
}

bool OAISales_data_creditmemo_item_extension_interface::is_invoice_text_codes_Valid() const{
    return m_invoice_text_codes_isValid;
}

QList<QString> OAISales_data_creditmemo_item_extension_interface::getTaxCodes() const {
    return m_tax_codes;
}
void OAISales_data_creditmemo_item_extension_interface::setTaxCodes(const QList<QString> &tax_codes) {
    m_tax_codes = tax_codes;
    m_tax_codes_isSet = true;
}

bool OAISales_data_creditmemo_item_extension_interface::is_tax_codes_Set() const{
    return m_tax_codes_isSet;
}

bool OAISales_data_creditmemo_item_extension_interface::is_tax_codes_Valid() const{
    return m_tax_codes_isValid;
}

QList<QString> OAISales_data_creditmemo_item_extension_interface::getVertexTaxCodes() const {
    return m_vertex_tax_codes;
}
void OAISales_data_creditmemo_item_extension_interface::setVertexTaxCodes(const QList<QString> &vertex_tax_codes) {
    m_vertex_tax_codes = vertex_tax_codes;
    m_vertex_tax_codes_isSet = true;
}

bool OAISales_data_creditmemo_item_extension_interface::is_vertex_tax_codes_Set() const{
    return m_vertex_tax_codes_isSet;
}

bool OAISales_data_creditmemo_item_extension_interface::is_vertex_tax_codes_Valid() const{
    return m_vertex_tax_codes_isValid;
}

bool OAISales_data_creditmemo_item_extension_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_invoice_text_codes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_codes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_vertex_tax_codes.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISales_data_creditmemo_item_extension_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
