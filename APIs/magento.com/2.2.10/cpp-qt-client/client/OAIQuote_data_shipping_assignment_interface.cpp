/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQuote_data_shipping_assignment_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQuote_data_shipping_assignment_interface::OAIQuote_data_shipping_assignment_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQuote_data_shipping_assignment_interface::OAIQuote_data_shipping_assignment_interface() {
    this->initializeModel();
}

OAIQuote_data_shipping_assignment_interface::~OAIQuote_data_shipping_assignment_interface() {}

void OAIQuote_data_shipping_assignment_interface::initializeModel() {

    m_extension_attributes_isSet = false;
    m_extension_attributes_isValid = false;

    m_items_isSet = false;
    m_items_isValid = false;

    m_shipping_isSet = false;
    m_shipping_isValid = false;
}

void OAIQuote_data_shipping_assignment_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQuote_data_shipping_assignment_interface::fromJsonObject(QJsonObject json) {

    m_extension_attributes_isValid = ::OpenAPI::fromJsonValue(m_extension_attributes, json[QString("extension_attributes")]);
    m_extension_attributes_isSet = !json[QString("extension_attributes")].isNull() && m_extension_attributes_isValid;

    m_items_isValid = ::OpenAPI::fromJsonValue(m_items, json[QString("items")]);
    m_items_isSet = !json[QString("items")].isNull() && m_items_isValid;

    m_shipping_isValid = ::OpenAPI::fromJsonValue(m_shipping, json[QString("shipping")]);
    m_shipping_isSet = !json[QString("shipping")].isNull() && m_shipping_isValid;
}

QString OAIQuote_data_shipping_assignment_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQuote_data_shipping_assignment_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_extension_attributes_isSet) {
        obj.insert(QString("extension_attributes"), ::OpenAPI::toJsonValue(m_extension_attributes));
    }
    if (m_items.size() > 0) {
        obj.insert(QString("items"), ::OpenAPI::toJsonValue(m_items));
    }
    if (m_shipping.isSet()) {
        obj.insert(QString("shipping"), ::OpenAPI::toJsonValue(m_shipping));
    }
    return obj;
}

OAIObject OAIQuote_data_shipping_assignment_interface::getExtensionAttributes() const {
    return m_extension_attributes;
}
void OAIQuote_data_shipping_assignment_interface::setExtensionAttributes(const OAIObject &extension_attributes) {
    m_extension_attributes = extension_attributes;
    m_extension_attributes_isSet = true;
}

bool OAIQuote_data_shipping_assignment_interface::is_extension_attributes_Set() const{
    return m_extension_attributes_isSet;
}

bool OAIQuote_data_shipping_assignment_interface::is_extension_attributes_Valid() const{
    return m_extension_attributes_isValid;
}

QList<OAIQuote_data_cart_item_interface> OAIQuote_data_shipping_assignment_interface::getItems() const {
    return m_items;
}
void OAIQuote_data_shipping_assignment_interface::setItems(const QList<OAIQuote_data_cart_item_interface> &items) {
    m_items = items;
    m_items_isSet = true;
}

bool OAIQuote_data_shipping_assignment_interface::is_items_Set() const{
    return m_items_isSet;
}

bool OAIQuote_data_shipping_assignment_interface::is_items_Valid() const{
    return m_items_isValid;
}

OAIQuote_data_shipping_interface OAIQuote_data_shipping_assignment_interface::getShipping() const {
    return m_shipping;
}
void OAIQuote_data_shipping_assignment_interface::setShipping(const OAIQuote_data_shipping_interface &shipping) {
    m_shipping = shipping;
    m_shipping_isSet = true;
}

bool OAIQuote_data_shipping_assignment_interface::is_shipping_Set() const{
    return m_shipping_isSet;
}

bool OAIQuote_data_shipping_assignment_interface::is_shipping_Valid() const{
    return m_shipping_isValid;
}

bool OAIQuote_data_shipping_assignment_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_extension_attributes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_items.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping.isSet()) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQuote_data_shipping_assignment_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_items_isValid && m_shipping_isValid && true;
}

} // namespace OpenAPI
