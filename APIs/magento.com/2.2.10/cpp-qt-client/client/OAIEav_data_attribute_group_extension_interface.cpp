/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIEav_data_attribute_group_extension_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIEav_data_attribute_group_extension_interface::OAIEav_data_attribute_group_extension_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIEav_data_attribute_group_extension_interface::OAIEav_data_attribute_group_extension_interface() {
    this->initializeModel();
}

OAIEav_data_attribute_group_extension_interface::~OAIEav_data_attribute_group_extension_interface() {}

void OAIEav_data_attribute_group_extension_interface::initializeModel() {

    m_attribute_group_code_isSet = false;
    m_attribute_group_code_isValid = false;

    m_sort_order_isSet = false;
    m_sort_order_isValid = false;
}

void OAIEav_data_attribute_group_extension_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIEav_data_attribute_group_extension_interface::fromJsonObject(QJsonObject json) {

    m_attribute_group_code_isValid = ::OpenAPI::fromJsonValue(m_attribute_group_code, json[QString("attribute_group_code")]);
    m_attribute_group_code_isSet = !json[QString("attribute_group_code")].isNull() && m_attribute_group_code_isValid;

    m_sort_order_isValid = ::OpenAPI::fromJsonValue(m_sort_order, json[QString("sort_order")]);
    m_sort_order_isSet = !json[QString("sort_order")].isNull() && m_sort_order_isValid;
}

QString OAIEav_data_attribute_group_extension_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIEav_data_attribute_group_extension_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_attribute_group_code_isSet) {
        obj.insert(QString("attribute_group_code"), ::OpenAPI::toJsonValue(m_attribute_group_code));
    }
    if (m_sort_order_isSet) {
        obj.insert(QString("sort_order"), ::OpenAPI::toJsonValue(m_sort_order));
    }
    return obj;
}

QString OAIEav_data_attribute_group_extension_interface::getAttributeGroupCode() const {
    return m_attribute_group_code;
}
void OAIEav_data_attribute_group_extension_interface::setAttributeGroupCode(const QString &attribute_group_code) {
    m_attribute_group_code = attribute_group_code;
    m_attribute_group_code_isSet = true;
}

bool OAIEav_data_attribute_group_extension_interface::is_attribute_group_code_Set() const{
    return m_attribute_group_code_isSet;
}

bool OAIEav_data_attribute_group_extension_interface::is_attribute_group_code_Valid() const{
    return m_attribute_group_code_isValid;
}

QString OAIEav_data_attribute_group_extension_interface::getSortOrder() const {
    return m_sort_order;
}
void OAIEav_data_attribute_group_extension_interface::setSortOrder(const QString &sort_order) {
    m_sort_order = sort_order;
    m_sort_order_isSet = true;
}

bool OAIEav_data_attribute_group_extension_interface::is_sort_order_Set() const{
    return m_sort_order_isSet;
}

bool OAIEav_data_attribute_group_extension_interface::is_sort_order_Valid() const{
    return m_sort_order_isValid;
}

bool OAIEav_data_attribute_group_extension_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_attribute_group_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sort_order_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIEav_data_attribute_group_extension_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
