/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIQuote_data_currency_interface.h
 *
 * Interface CurrencyInterface
 */

#ifndef OAIQuote_data_currency_interface_H
#define OAIQuote_data_currency_interface_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIQuote_data_currency_interface : public OAIObject {
public:
    OAIQuote_data_currency_interface();
    OAIQuote_data_currency_interface(QString json);
    ~OAIQuote_data_currency_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBaseCurrencyCode() const;
    void setBaseCurrencyCode(const QString &base_currency_code);
    bool is_base_currency_code_Set() const;
    bool is_base_currency_code_Valid() const;

    double getBaseToGlobalRate() const;
    void setBaseToGlobalRate(const double &base_to_global_rate);
    bool is_base_to_global_rate_Set() const;
    bool is_base_to_global_rate_Valid() const;

    double getBaseToQuoteRate() const;
    void setBaseToQuoteRate(const double &base_to_quote_rate);
    bool is_base_to_quote_rate_Set() const;
    bool is_base_to_quote_rate_Valid() const;

    OAIObject getExtensionAttributes() const;
    void setExtensionAttributes(const OAIObject &extension_attributes);
    bool is_extension_attributes_Set() const;
    bool is_extension_attributes_Valid() const;

    QString getGlobalCurrencyCode() const;
    void setGlobalCurrencyCode(const QString &global_currency_code);
    bool is_global_currency_code_Set() const;
    bool is_global_currency_code_Valid() const;

    QString getQuoteCurrencyCode() const;
    void setQuoteCurrencyCode(const QString &quote_currency_code);
    bool is_quote_currency_code_Set() const;
    bool is_quote_currency_code_Valid() const;

    QString getStoreCurrencyCode() const;
    void setStoreCurrencyCode(const QString &store_currency_code);
    bool is_store_currency_code_Set() const;
    bool is_store_currency_code_Valid() const;

    double getStoreToBaseRate() const;
    void setStoreToBaseRate(const double &store_to_base_rate);
    bool is_store_to_base_rate_Set() const;
    bool is_store_to_base_rate_Valid() const;

    double getStoreToQuoteRate() const;
    void setStoreToQuoteRate(const double &store_to_quote_rate);
    bool is_store_to_quote_rate_Set() const;
    bool is_store_to_quote_rate_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_base_currency_code;
    bool m_base_currency_code_isSet;
    bool m_base_currency_code_isValid;

    double m_base_to_global_rate;
    bool m_base_to_global_rate_isSet;
    bool m_base_to_global_rate_isValid;

    double m_base_to_quote_rate;
    bool m_base_to_quote_rate_isSet;
    bool m_base_to_quote_rate_isValid;

    OAIObject m_extension_attributes;
    bool m_extension_attributes_isSet;
    bool m_extension_attributes_isValid;

    QString m_global_currency_code;
    bool m_global_currency_code_isSet;
    bool m_global_currency_code_isValid;

    QString m_quote_currency_code;
    bool m_quote_currency_code_isSet;
    bool m_quote_currency_code_isValid;

    QString m_store_currency_code;
    bool m_store_currency_code_isSet;
    bool m_store_currency_code_isValid;

    double m_store_to_base_rate;
    bool m_store_to_base_rate_isSet;
    bool m_store_to_base_rate_isValid;

    double m_store_to_quote_rate;
    bool m_store_to_quote_rate_isSet;
    bool m_store_to_quote_rate_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIQuote_data_currency_interface)

#endif // OAIQuote_data_currency_interface_H
