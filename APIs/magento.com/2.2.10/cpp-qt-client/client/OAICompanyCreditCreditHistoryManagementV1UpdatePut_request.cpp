/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICompanyCreditCreditHistoryManagementV1UpdatePut_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICompanyCreditCreditHistoryManagementV1UpdatePut_request::OAICompanyCreditCreditHistoryManagementV1UpdatePut_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICompanyCreditCreditHistoryManagementV1UpdatePut_request::OAICompanyCreditCreditHistoryManagementV1UpdatePut_request() {
    this->initializeModel();
}

OAICompanyCreditCreditHistoryManagementV1UpdatePut_request::~OAICompanyCreditCreditHistoryManagementV1UpdatePut_request() {}

void OAICompanyCreditCreditHistoryManagementV1UpdatePut_request::initializeModel() {

    m_comment_isSet = false;
    m_comment_isValid = false;

    m_purchase_order_isSet = false;
    m_purchase_order_isValid = false;
}

void OAICompanyCreditCreditHistoryManagementV1UpdatePut_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICompanyCreditCreditHistoryManagementV1UpdatePut_request::fromJsonObject(QJsonObject json) {

    m_comment_isValid = ::OpenAPI::fromJsonValue(m_comment, json[QString("comment")]);
    m_comment_isSet = !json[QString("comment")].isNull() && m_comment_isValid;

    m_purchase_order_isValid = ::OpenAPI::fromJsonValue(m_purchase_order, json[QString("purchaseOrder")]);
    m_purchase_order_isSet = !json[QString("purchaseOrder")].isNull() && m_purchase_order_isValid;
}

QString OAICompanyCreditCreditHistoryManagementV1UpdatePut_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICompanyCreditCreditHistoryManagementV1UpdatePut_request::asJsonObject() const {
    QJsonObject obj;
    if (m_comment_isSet) {
        obj.insert(QString("comment"), ::OpenAPI::toJsonValue(m_comment));
    }
    if (m_purchase_order_isSet) {
        obj.insert(QString("purchaseOrder"), ::OpenAPI::toJsonValue(m_purchase_order));
    }
    return obj;
}

QString OAICompanyCreditCreditHistoryManagementV1UpdatePut_request::getComment() const {
    return m_comment;
}
void OAICompanyCreditCreditHistoryManagementV1UpdatePut_request::setComment(const QString &comment) {
    m_comment = comment;
    m_comment_isSet = true;
}

bool OAICompanyCreditCreditHistoryManagementV1UpdatePut_request::is_comment_Set() const{
    return m_comment_isSet;
}

bool OAICompanyCreditCreditHistoryManagementV1UpdatePut_request::is_comment_Valid() const{
    return m_comment_isValid;
}

QString OAICompanyCreditCreditHistoryManagementV1UpdatePut_request::getPurchaseOrder() const {
    return m_purchase_order;
}
void OAICompanyCreditCreditHistoryManagementV1UpdatePut_request::setPurchaseOrder(const QString &purchase_order) {
    m_purchase_order = purchase_order;
    m_purchase_order_isSet = true;
}

bool OAICompanyCreditCreditHistoryManagementV1UpdatePut_request::is_purchase_order_Set() const{
    return m_purchase_order_isSet;
}

bool OAICompanyCreditCreditHistoryManagementV1UpdatePut_request::is_purchase_order_Valid() const{
    return m_purchase_order_isValid;
}

bool OAICompanyCreditCreditHistoryManagementV1UpdatePut_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_comment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_purchase_order_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICompanyCreditCreditHistoryManagementV1UpdatePut_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
