/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIDirectory_data_currency_information_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIDirectory_data_currency_information_interface::OAIDirectory_data_currency_information_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIDirectory_data_currency_information_interface::OAIDirectory_data_currency_information_interface() {
    this->initializeModel();
}

OAIDirectory_data_currency_information_interface::~OAIDirectory_data_currency_information_interface() {}

void OAIDirectory_data_currency_information_interface::initializeModel() {

    m_available_currency_codes_isSet = false;
    m_available_currency_codes_isValid = false;

    m_base_currency_code_isSet = false;
    m_base_currency_code_isValid = false;

    m_base_currency_symbol_isSet = false;
    m_base_currency_symbol_isValid = false;

    m_default_display_currency_code_isSet = false;
    m_default_display_currency_code_isValid = false;

    m_default_display_currency_symbol_isSet = false;
    m_default_display_currency_symbol_isValid = false;

    m_exchange_rates_isSet = false;
    m_exchange_rates_isValid = false;

    m_extension_attributes_isSet = false;
    m_extension_attributes_isValid = false;
}

void OAIDirectory_data_currency_information_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIDirectory_data_currency_information_interface::fromJsonObject(QJsonObject json) {

    m_available_currency_codes_isValid = ::OpenAPI::fromJsonValue(m_available_currency_codes, json[QString("available_currency_codes")]);
    m_available_currency_codes_isSet = !json[QString("available_currency_codes")].isNull() && m_available_currency_codes_isValid;

    m_base_currency_code_isValid = ::OpenAPI::fromJsonValue(m_base_currency_code, json[QString("base_currency_code")]);
    m_base_currency_code_isSet = !json[QString("base_currency_code")].isNull() && m_base_currency_code_isValid;

    m_base_currency_symbol_isValid = ::OpenAPI::fromJsonValue(m_base_currency_symbol, json[QString("base_currency_symbol")]);
    m_base_currency_symbol_isSet = !json[QString("base_currency_symbol")].isNull() && m_base_currency_symbol_isValid;

    m_default_display_currency_code_isValid = ::OpenAPI::fromJsonValue(m_default_display_currency_code, json[QString("default_display_currency_code")]);
    m_default_display_currency_code_isSet = !json[QString("default_display_currency_code")].isNull() && m_default_display_currency_code_isValid;

    m_default_display_currency_symbol_isValid = ::OpenAPI::fromJsonValue(m_default_display_currency_symbol, json[QString("default_display_currency_symbol")]);
    m_default_display_currency_symbol_isSet = !json[QString("default_display_currency_symbol")].isNull() && m_default_display_currency_symbol_isValid;

    m_exchange_rates_isValid = ::OpenAPI::fromJsonValue(m_exchange_rates, json[QString("exchange_rates")]);
    m_exchange_rates_isSet = !json[QString("exchange_rates")].isNull() && m_exchange_rates_isValid;

    m_extension_attributes_isValid = ::OpenAPI::fromJsonValue(m_extension_attributes, json[QString("extension_attributes")]);
    m_extension_attributes_isSet = !json[QString("extension_attributes")].isNull() && m_extension_attributes_isValid;
}

QString OAIDirectory_data_currency_information_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIDirectory_data_currency_information_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_available_currency_codes.size() > 0) {
        obj.insert(QString("available_currency_codes"), ::OpenAPI::toJsonValue(m_available_currency_codes));
    }
    if (m_base_currency_code_isSet) {
        obj.insert(QString("base_currency_code"), ::OpenAPI::toJsonValue(m_base_currency_code));
    }
    if (m_base_currency_symbol_isSet) {
        obj.insert(QString("base_currency_symbol"), ::OpenAPI::toJsonValue(m_base_currency_symbol));
    }
    if (m_default_display_currency_code_isSet) {
        obj.insert(QString("default_display_currency_code"), ::OpenAPI::toJsonValue(m_default_display_currency_code));
    }
    if (m_default_display_currency_symbol_isSet) {
        obj.insert(QString("default_display_currency_symbol"), ::OpenAPI::toJsonValue(m_default_display_currency_symbol));
    }
    if (m_exchange_rates.size() > 0) {
        obj.insert(QString("exchange_rates"), ::OpenAPI::toJsonValue(m_exchange_rates));
    }
    if (m_extension_attributes_isSet) {
        obj.insert(QString("extension_attributes"), ::OpenAPI::toJsonValue(m_extension_attributes));
    }
    return obj;
}

QList<QString> OAIDirectory_data_currency_information_interface::getAvailableCurrencyCodes() const {
    return m_available_currency_codes;
}
void OAIDirectory_data_currency_information_interface::setAvailableCurrencyCodes(const QList<QString> &available_currency_codes) {
    m_available_currency_codes = available_currency_codes;
    m_available_currency_codes_isSet = true;
}

bool OAIDirectory_data_currency_information_interface::is_available_currency_codes_Set() const{
    return m_available_currency_codes_isSet;
}

bool OAIDirectory_data_currency_information_interface::is_available_currency_codes_Valid() const{
    return m_available_currency_codes_isValid;
}

QString OAIDirectory_data_currency_information_interface::getBaseCurrencyCode() const {
    return m_base_currency_code;
}
void OAIDirectory_data_currency_information_interface::setBaseCurrencyCode(const QString &base_currency_code) {
    m_base_currency_code = base_currency_code;
    m_base_currency_code_isSet = true;
}

bool OAIDirectory_data_currency_information_interface::is_base_currency_code_Set() const{
    return m_base_currency_code_isSet;
}

bool OAIDirectory_data_currency_information_interface::is_base_currency_code_Valid() const{
    return m_base_currency_code_isValid;
}

QString OAIDirectory_data_currency_information_interface::getBaseCurrencySymbol() const {
    return m_base_currency_symbol;
}
void OAIDirectory_data_currency_information_interface::setBaseCurrencySymbol(const QString &base_currency_symbol) {
    m_base_currency_symbol = base_currency_symbol;
    m_base_currency_symbol_isSet = true;
}

bool OAIDirectory_data_currency_information_interface::is_base_currency_symbol_Set() const{
    return m_base_currency_symbol_isSet;
}

bool OAIDirectory_data_currency_information_interface::is_base_currency_symbol_Valid() const{
    return m_base_currency_symbol_isValid;
}

QString OAIDirectory_data_currency_information_interface::getDefaultDisplayCurrencyCode() const {
    return m_default_display_currency_code;
}
void OAIDirectory_data_currency_information_interface::setDefaultDisplayCurrencyCode(const QString &default_display_currency_code) {
    m_default_display_currency_code = default_display_currency_code;
    m_default_display_currency_code_isSet = true;
}

bool OAIDirectory_data_currency_information_interface::is_default_display_currency_code_Set() const{
    return m_default_display_currency_code_isSet;
}

bool OAIDirectory_data_currency_information_interface::is_default_display_currency_code_Valid() const{
    return m_default_display_currency_code_isValid;
}

QString OAIDirectory_data_currency_information_interface::getDefaultDisplayCurrencySymbol() const {
    return m_default_display_currency_symbol;
}
void OAIDirectory_data_currency_information_interface::setDefaultDisplayCurrencySymbol(const QString &default_display_currency_symbol) {
    m_default_display_currency_symbol = default_display_currency_symbol;
    m_default_display_currency_symbol_isSet = true;
}

bool OAIDirectory_data_currency_information_interface::is_default_display_currency_symbol_Set() const{
    return m_default_display_currency_symbol_isSet;
}

bool OAIDirectory_data_currency_information_interface::is_default_display_currency_symbol_Valid() const{
    return m_default_display_currency_symbol_isValid;
}

QList<OAIDirectory_data_exchange_rate_interface> OAIDirectory_data_currency_information_interface::getExchangeRates() const {
    return m_exchange_rates;
}
void OAIDirectory_data_currency_information_interface::setExchangeRates(const QList<OAIDirectory_data_exchange_rate_interface> &exchange_rates) {
    m_exchange_rates = exchange_rates;
    m_exchange_rates_isSet = true;
}

bool OAIDirectory_data_currency_information_interface::is_exchange_rates_Set() const{
    return m_exchange_rates_isSet;
}

bool OAIDirectory_data_currency_information_interface::is_exchange_rates_Valid() const{
    return m_exchange_rates_isValid;
}

OAIObject OAIDirectory_data_currency_information_interface::getExtensionAttributes() const {
    return m_extension_attributes;
}
void OAIDirectory_data_currency_information_interface::setExtensionAttributes(const OAIObject &extension_attributes) {
    m_extension_attributes = extension_attributes;
    m_extension_attributes_isSet = true;
}

bool OAIDirectory_data_currency_information_interface::is_extension_attributes_Set() const{
    return m_extension_attributes_isSet;
}

bool OAIDirectory_data_currency_information_interface::is_extension_attributes_Valid() const{
    return m_extension_attributes_isValid;
}

bool OAIDirectory_data_currency_information_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_available_currency_codes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_currency_symbol_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_display_currency_code_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_default_display_currency_symbol_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_exchange_rates.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_extension_attributes_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIDirectory_data_currency_information_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_available_currency_codes_isValid && m_base_currency_code_isValid && m_base_currency_symbol_isValid && m_default_display_currency_code_isValid && m_default_display_currency_symbol_isValid && m_exchange_rates_isValid && true;
}

} // namespace OpenAPI
