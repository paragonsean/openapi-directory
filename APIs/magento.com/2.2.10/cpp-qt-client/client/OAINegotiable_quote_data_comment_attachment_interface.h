/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAINegotiable_quote_data_comment_attachment_interface.h
 *
 * Interface for quote comment attachment.
 */

#ifndef OAINegotiable_quote_data_comment_attachment_interface_H
#define OAINegotiable_quote_data_comment_attachment_interface_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAINegotiable_quote_data_comment_attachment_interface : public OAIObject {
public:
    OAINegotiable_quote_data_comment_attachment_interface();
    OAINegotiable_quote_data_comment_attachment_interface(QString json);
    ~OAINegotiable_quote_data_comment_attachment_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    qint32 getAttachmentId() const;
    void setAttachmentId(const qint32 &attachment_id);
    bool is_attachment_id_Set() const;
    bool is_attachment_id_Valid() const;

    qint32 getCommentId() const;
    void setCommentId(const qint32 &comment_id);
    bool is_comment_id_Set() const;
    bool is_comment_id_Valid() const;

    OAIObject getExtensionAttributes() const;
    void setExtensionAttributes(const OAIObject &extension_attributes);
    bool is_extension_attributes_Set() const;
    bool is_extension_attributes_Valid() const;

    QString getFileName() const;
    void setFileName(const QString &file_name);
    bool is_file_name_Set() const;
    bool is_file_name_Valid() const;

    QString getFilePath() const;
    void setFilePath(const QString &file_path);
    bool is_file_path_Set() const;
    bool is_file_path_Valid() const;

    QString getFileType() const;
    void setFileType(const QString &file_type);
    bool is_file_type_Set() const;
    bool is_file_type_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    qint32 m_attachment_id;
    bool m_attachment_id_isSet;
    bool m_attachment_id_isValid;

    qint32 m_comment_id;
    bool m_comment_id_isSet;
    bool m_comment_id_isValid;

    OAIObject m_extension_attributes;
    bool m_extension_attributes_isSet;
    bool m_extension_attributes_isValid;

    QString m_file_name;
    bool m_file_name_isSet;
    bool m_file_name_isValid;

    QString m_file_path;
    bool m_file_path_isSet;
    bool m_file_path_isValid;

    QString m_file_type;
    bool m_file_type_isSet;
    bool m_file_type_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAINegotiable_quote_data_comment_attachment_interface)

#endif // OAINegotiable_quote_data_comment_attachment_interface_H
