/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQuote_data_total_segment_extension_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQuote_data_total_segment_extension_interface::OAIQuote_data_total_segment_extension_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQuote_data_total_segment_extension_interface::OAIQuote_data_total_segment_extension_interface() {
    this->initializeModel();
}

OAIQuote_data_total_segment_extension_interface::~OAIQuote_data_total_segment_extension_interface() {}

void OAIQuote_data_total_segment_extension_interface::initializeModel() {

    m_gift_cards_isSet = false;
    m_gift_cards_isValid = false;

    m_gw_add_card_isSet = false;
    m_gw_add_card_isValid = false;

    m_gw_allow_gift_receipt_isSet = false;
    m_gw_allow_gift_receipt_isValid = false;

    m_gw_base_price_isSet = false;
    m_gw_base_price_isValid = false;

    m_gw_base_price_incl_tax_isSet = false;
    m_gw_base_price_incl_tax_isValid = false;

    m_gw_base_tax_amount_isSet = false;
    m_gw_base_tax_amount_isValid = false;

    m_gw_card_base_price_isSet = false;
    m_gw_card_base_price_isValid = false;

    m_gw_card_base_price_incl_tax_isSet = false;
    m_gw_card_base_price_incl_tax_isValid = false;

    m_gw_card_base_tax_amount_isSet = false;
    m_gw_card_base_tax_amount_isValid = false;

    m_gw_card_price_isSet = false;
    m_gw_card_price_isValid = false;

    m_gw_card_price_incl_tax_isSet = false;
    m_gw_card_price_incl_tax_isValid = false;

    m_gw_card_tax_amount_isSet = false;
    m_gw_card_tax_amount_isValid = false;

    m_gw_item_ids_isSet = false;
    m_gw_item_ids_isValid = false;

    m_gw_items_base_price_isSet = false;
    m_gw_items_base_price_isValid = false;

    m_gw_items_base_price_incl_tax_isSet = false;
    m_gw_items_base_price_incl_tax_isValid = false;

    m_gw_items_base_tax_amount_isSet = false;
    m_gw_items_base_tax_amount_isValid = false;

    m_gw_items_price_isSet = false;
    m_gw_items_price_isValid = false;

    m_gw_items_price_incl_tax_isSet = false;
    m_gw_items_price_incl_tax_isValid = false;

    m_gw_items_tax_amount_isSet = false;
    m_gw_items_tax_amount_isValid = false;

    m_gw_order_id_isSet = false;
    m_gw_order_id_isValid = false;

    m_gw_price_isSet = false;
    m_gw_price_isValid = false;

    m_gw_price_incl_tax_isSet = false;
    m_gw_price_incl_tax_isValid = false;

    m_gw_tax_amount_isSet = false;
    m_gw_tax_amount_isValid = false;

    m_tax_grandtotal_details_isSet = false;
    m_tax_grandtotal_details_isValid = false;

    m_vertex_tax_calculation_messages_isSet = false;
    m_vertex_tax_calculation_messages_isValid = false;
}

void OAIQuote_data_total_segment_extension_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQuote_data_total_segment_extension_interface::fromJsonObject(QJsonObject json) {

    m_gift_cards_isValid = ::OpenAPI::fromJsonValue(m_gift_cards, json[QString("gift_cards")]);
    m_gift_cards_isSet = !json[QString("gift_cards")].isNull() && m_gift_cards_isValid;

    m_gw_add_card_isValid = ::OpenAPI::fromJsonValue(m_gw_add_card, json[QString("gw_add_card")]);
    m_gw_add_card_isSet = !json[QString("gw_add_card")].isNull() && m_gw_add_card_isValid;

    m_gw_allow_gift_receipt_isValid = ::OpenAPI::fromJsonValue(m_gw_allow_gift_receipt, json[QString("gw_allow_gift_receipt")]);
    m_gw_allow_gift_receipt_isSet = !json[QString("gw_allow_gift_receipt")].isNull() && m_gw_allow_gift_receipt_isValid;

    m_gw_base_price_isValid = ::OpenAPI::fromJsonValue(m_gw_base_price, json[QString("gw_base_price")]);
    m_gw_base_price_isSet = !json[QString("gw_base_price")].isNull() && m_gw_base_price_isValid;

    m_gw_base_price_incl_tax_isValid = ::OpenAPI::fromJsonValue(m_gw_base_price_incl_tax, json[QString("gw_base_price_incl_tax")]);
    m_gw_base_price_incl_tax_isSet = !json[QString("gw_base_price_incl_tax")].isNull() && m_gw_base_price_incl_tax_isValid;

    m_gw_base_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_gw_base_tax_amount, json[QString("gw_base_tax_amount")]);
    m_gw_base_tax_amount_isSet = !json[QString("gw_base_tax_amount")].isNull() && m_gw_base_tax_amount_isValid;

    m_gw_card_base_price_isValid = ::OpenAPI::fromJsonValue(m_gw_card_base_price, json[QString("gw_card_base_price")]);
    m_gw_card_base_price_isSet = !json[QString("gw_card_base_price")].isNull() && m_gw_card_base_price_isValid;

    m_gw_card_base_price_incl_tax_isValid = ::OpenAPI::fromJsonValue(m_gw_card_base_price_incl_tax, json[QString("gw_card_base_price_incl_tax")]);
    m_gw_card_base_price_incl_tax_isSet = !json[QString("gw_card_base_price_incl_tax")].isNull() && m_gw_card_base_price_incl_tax_isValid;

    m_gw_card_base_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_gw_card_base_tax_amount, json[QString("gw_card_base_tax_amount")]);
    m_gw_card_base_tax_amount_isSet = !json[QString("gw_card_base_tax_amount")].isNull() && m_gw_card_base_tax_amount_isValid;

    m_gw_card_price_isValid = ::OpenAPI::fromJsonValue(m_gw_card_price, json[QString("gw_card_price")]);
    m_gw_card_price_isSet = !json[QString("gw_card_price")].isNull() && m_gw_card_price_isValid;

    m_gw_card_price_incl_tax_isValid = ::OpenAPI::fromJsonValue(m_gw_card_price_incl_tax, json[QString("gw_card_price_incl_tax")]);
    m_gw_card_price_incl_tax_isSet = !json[QString("gw_card_price_incl_tax")].isNull() && m_gw_card_price_incl_tax_isValid;

    m_gw_card_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_gw_card_tax_amount, json[QString("gw_card_tax_amount")]);
    m_gw_card_tax_amount_isSet = !json[QString("gw_card_tax_amount")].isNull() && m_gw_card_tax_amount_isValid;

    m_gw_item_ids_isValid = ::OpenAPI::fromJsonValue(m_gw_item_ids, json[QString("gw_item_ids")]);
    m_gw_item_ids_isSet = !json[QString("gw_item_ids")].isNull() && m_gw_item_ids_isValid;

    m_gw_items_base_price_isValid = ::OpenAPI::fromJsonValue(m_gw_items_base_price, json[QString("gw_items_base_price")]);
    m_gw_items_base_price_isSet = !json[QString("gw_items_base_price")].isNull() && m_gw_items_base_price_isValid;

    m_gw_items_base_price_incl_tax_isValid = ::OpenAPI::fromJsonValue(m_gw_items_base_price_incl_tax, json[QString("gw_items_base_price_incl_tax")]);
    m_gw_items_base_price_incl_tax_isSet = !json[QString("gw_items_base_price_incl_tax")].isNull() && m_gw_items_base_price_incl_tax_isValid;

    m_gw_items_base_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_gw_items_base_tax_amount, json[QString("gw_items_base_tax_amount")]);
    m_gw_items_base_tax_amount_isSet = !json[QString("gw_items_base_tax_amount")].isNull() && m_gw_items_base_tax_amount_isValid;

    m_gw_items_price_isValid = ::OpenAPI::fromJsonValue(m_gw_items_price, json[QString("gw_items_price")]);
    m_gw_items_price_isSet = !json[QString("gw_items_price")].isNull() && m_gw_items_price_isValid;

    m_gw_items_price_incl_tax_isValid = ::OpenAPI::fromJsonValue(m_gw_items_price_incl_tax, json[QString("gw_items_price_incl_tax")]);
    m_gw_items_price_incl_tax_isSet = !json[QString("gw_items_price_incl_tax")].isNull() && m_gw_items_price_incl_tax_isValid;

    m_gw_items_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_gw_items_tax_amount, json[QString("gw_items_tax_amount")]);
    m_gw_items_tax_amount_isSet = !json[QString("gw_items_tax_amount")].isNull() && m_gw_items_tax_amount_isValid;

    m_gw_order_id_isValid = ::OpenAPI::fromJsonValue(m_gw_order_id, json[QString("gw_order_id")]);
    m_gw_order_id_isSet = !json[QString("gw_order_id")].isNull() && m_gw_order_id_isValid;

    m_gw_price_isValid = ::OpenAPI::fromJsonValue(m_gw_price, json[QString("gw_price")]);
    m_gw_price_isSet = !json[QString("gw_price")].isNull() && m_gw_price_isValid;

    m_gw_price_incl_tax_isValid = ::OpenAPI::fromJsonValue(m_gw_price_incl_tax, json[QString("gw_price_incl_tax")]);
    m_gw_price_incl_tax_isSet = !json[QString("gw_price_incl_tax")].isNull() && m_gw_price_incl_tax_isValid;

    m_gw_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_gw_tax_amount, json[QString("gw_tax_amount")]);
    m_gw_tax_amount_isSet = !json[QString("gw_tax_amount")].isNull() && m_gw_tax_amount_isValid;

    m_tax_grandtotal_details_isValid = ::OpenAPI::fromJsonValue(m_tax_grandtotal_details, json[QString("tax_grandtotal_details")]);
    m_tax_grandtotal_details_isSet = !json[QString("tax_grandtotal_details")].isNull() && m_tax_grandtotal_details_isValid;

    m_vertex_tax_calculation_messages_isValid = ::OpenAPI::fromJsonValue(m_vertex_tax_calculation_messages, json[QString("vertex_tax_calculation_messages")]);
    m_vertex_tax_calculation_messages_isSet = !json[QString("vertex_tax_calculation_messages")].isNull() && m_vertex_tax_calculation_messages_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQuote_data_total_segment_extension_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_gift_cards_isSet) {
        obj.insert(QString("gift_cards"), ::OpenAPI::toJsonValue(m_gift_cards));
    }
    if (m_gw_add_card_isSet) {
        obj.insert(QString("gw_add_card"), ::OpenAPI::toJsonValue(m_gw_add_card));
    }
    if (m_gw_allow_gift_receipt_isSet) {
        obj.insert(QString("gw_allow_gift_receipt"), ::OpenAPI::toJsonValue(m_gw_allow_gift_receipt));
    }
    if (m_gw_base_price_isSet) {
        obj.insert(QString("gw_base_price"), ::OpenAPI::toJsonValue(m_gw_base_price));
    }
    if (m_gw_base_price_incl_tax_isSet) {
        obj.insert(QString("gw_base_price_incl_tax"), ::OpenAPI::toJsonValue(m_gw_base_price_incl_tax));
    }
    if (m_gw_base_tax_amount_isSet) {
        obj.insert(QString("gw_base_tax_amount"), ::OpenAPI::toJsonValue(m_gw_base_tax_amount));
    }
    if (m_gw_card_base_price_isSet) {
        obj.insert(QString("gw_card_base_price"), ::OpenAPI::toJsonValue(m_gw_card_base_price));
    }
    if (m_gw_card_base_price_incl_tax_isSet) {
        obj.insert(QString("gw_card_base_price_incl_tax"), ::OpenAPI::toJsonValue(m_gw_card_base_price_incl_tax));
    }
    if (m_gw_card_base_tax_amount_isSet) {
        obj.insert(QString("gw_card_base_tax_amount"), ::OpenAPI::toJsonValue(m_gw_card_base_tax_amount));
    }
    if (m_gw_card_price_isSet) {
        obj.insert(QString("gw_card_price"), ::OpenAPI::toJsonValue(m_gw_card_price));
    }
    if (m_gw_card_price_incl_tax_isSet) {
        obj.insert(QString("gw_card_price_incl_tax"), ::OpenAPI::toJsonValue(m_gw_card_price_incl_tax));
    }
    if (m_gw_card_tax_amount_isSet) {
        obj.insert(QString("gw_card_tax_amount"), ::OpenAPI::toJsonValue(m_gw_card_tax_amount));
    }
    if (m_gw_item_ids.size() > 0) {
        obj.insert(QString("gw_item_ids"), ::OpenAPI::toJsonValue(m_gw_item_ids));
    }
    if (m_gw_items_base_price_isSet) {
        obj.insert(QString("gw_items_base_price"), ::OpenAPI::toJsonValue(m_gw_items_base_price));
    }
    if (m_gw_items_base_price_incl_tax_isSet) {
        obj.insert(QString("gw_items_base_price_incl_tax"), ::OpenAPI::toJsonValue(m_gw_items_base_price_incl_tax));
    }
    if (m_gw_items_base_tax_amount_isSet) {
        obj.insert(QString("gw_items_base_tax_amount"), ::OpenAPI::toJsonValue(m_gw_items_base_tax_amount));
    }
    if (m_gw_items_price_isSet) {
        obj.insert(QString("gw_items_price"), ::OpenAPI::toJsonValue(m_gw_items_price));
    }
    if (m_gw_items_price_incl_tax_isSet) {
        obj.insert(QString("gw_items_price_incl_tax"), ::OpenAPI::toJsonValue(m_gw_items_price_incl_tax));
    }
    if (m_gw_items_tax_amount_isSet) {
        obj.insert(QString("gw_items_tax_amount"), ::OpenAPI::toJsonValue(m_gw_items_tax_amount));
    }
    if (m_gw_order_id_isSet) {
        obj.insert(QString("gw_order_id"), ::OpenAPI::toJsonValue(m_gw_order_id));
    }
    if (m_gw_price_isSet) {
        obj.insert(QString("gw_price"), ::OpenAPI::toJsonValue(m_gw_price));
    }
    if (m_gw_price_incl_tax_isSet) {
        obj.insert(QString("gw_price_incl_tax"), ::OpenAPI::toJsonValue(m_gw_price_incl_tax));
    }
    if (m_gw_tax_amount_isSet) {
        obj.insert(QString("gw_tax_amount"), ::OpenAPI::toJsonValue(m_gw_tax_amount));
    }
    if (m_tax_grandtotal_details.size() > 0) {
        obj.insert(QString("tax_grandtotal_details"), ::OpenAPI::toJsonValue(m_tax_grandtotal_details));
    }
    if (m_vertex_tax_calculation_messages.size() > 0) {
        obj.insert(QString("vertex_tax_calculation_messages"), ::OpenAPI::toJsonValue(m_vertex_tax_calculation_messages));
    }
    return obj;
}

QString OAIQuote_data_total_segment_extension_interface::getGiftCards() const {
    return m_gift_cards;
}
void OAIQuote_data_total_segment_extension_interface::setGiftCards(const QString &gift_cards) {
    m_gift_cards = gift_cards;
    m_gift_cards_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gift_cards_Set() const{
    return m_gift_cards_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gift_cards_Valid() const{
    return m_gift_cards_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwAddCard() const {
    return m_gw_add_card;
}
void OAIQuote_data_total_segment_extension_interface::setGwAddCard(const QString &gw_add_card) {
    m_gw_add_card = gw_add_card;
    m_gw_add_card_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_add_card_Set() const{
    return m_gw_add_card_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_add_card_Valid() const{
    return m_gw_add_card_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwAllowGiftReceipt() const {
    return m_gw_allow_gift_receipt;
}
void OAIQuote_data_total_segment_extension_interface::setGwAllowGiftReceipt(const QString &gw_allow_gift_receipt) {
    m_gw_allow_gift_receipt = gw_allow_gift_receipt;
    m_gw_allow_gift_receipt_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_allow_gift_receipt_Set() const{
    return m_gw_allow_gift_receipt_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_allow_gift_receipt_Valid() const{
    return m_gw_allow_gift_receipt_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwBasePrice() const {
    return m_gw_base_price;
}
void OAIQuote_data_total_segment_extension_interface::setGwBasePrice(const QString &gw_base_price) {
    m_gw_base_price = gw_base_price;
    m_gw_base_price_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_base_price_Set() const{
    return m_gw_base_price_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_base_price_Valid() const{
    return m_gw_base_price_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwBasePriceInclTax() const {
    return m_gw_base_price_incl_tax;
}
void OAIQuote_data_total_segment_extension_interface::setGwBasePriceInclTax(const QString &gw_base_price_incl_tax) {
    m_gw_base_price_incl_tax = gw_base_price_incl_tax;
    m_gw_base_price_incl_tax_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_base_price_incl_tax_Set() const{
    return m_gw_base_price_incl_tax_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_base_price_incl_tax_Valid() const{
    return m_gw_base_price_incl_tax_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwBaseTaxAmount() const {
    return m_gw_base_tax_amount;
}
void OAIQuote_data_total_segment_extension_interface::setGwBaseTaxAmount(const QString &gw_base_tax_amount) {
    m_gw_base_tax_amount = gw_base_tax_amount;
    m_gw_base_tax_amount_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_base_tax_amount_Set() const{
    return m_gw_base_tax_amount_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_base_tax_amount_Valid() const{
    return m_gw_base_tax_amount_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwCardBasePrice() const {
    return m_gw_card_base_price;
}
void OAIQuote_data_total_segment_extension_interface::setGwCardBasePrice(const QString &gw_card_base_price) {
    m_gw_card_base_price = gw_card_base_price;
    m_gw_card_base_price_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_card_base_price_Set() const{
    return m_gw_card_base_price_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_card_base_price_Valid() const{
    return m_gw_card_base_price_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwCardBasePriceInclTax() const {
    return m_gw_card_base_price_incl_tax;
}
void OAIQuote_data_total_segment_extension_interface::setGwCardBasePriceInclTax(const QString &gw_card_base_price_incl_tax) {
    m_gw_card_base_price_incl_tax = gw_card_base_price_incl_tax;
    m_gw_card_base_price_incl_tax_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_card_base_price_incl_tax_Set() const{
    return m_gw_card_base_price_incl_tax_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_card_base_price_incl_tax_Valid() const{
    return m_gw_card_base_price_incl_tax_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwCardBaseTaxAmount() const {
    return m_gw_card_base_tax_amount;
}
void OAIQuote_data_total_segment_extension_interface::setGwCardBaseTaxAmount(const QString &gw_card_base_tax_amount) {
    m_gw_card_base_tax_amount = gw_card_base_tax_amount;
    m_gw_card_base_tax_amount_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_card_base_tax_amount_Set() const{
    return m_gw_card_base_tax_amount_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_card_base_tax_amount_Valid() const{
    return m_gw_card_base_tax_amount_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwCardPrice() const {
    return m_gw_card_price;
}
void OAIQuote_data_total_segment_extension_interface::setGwCardPrice(const QString &gw_card_price) {
    m_gw_card_price = gw_card_price;
    m_gw_card_price_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_card_price_Set() const{
    return m_gw_card_price_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_card_price_Valid() const{
    return m_gw_card_price_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwCardPriceInclTax() const {
    return m_gw_card_price_incl_tax;
}
void OAIQuote_data_total_segment_extension_interface::setGwCardPriceInclTax(const QString &gw_card_price_incl_tax) {
    m_gw_card_price_incl_tax = gw_card_price_incl_tax;
    m_gw_card_price_incl_tax_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_card_price_incl_tax_Set() const{
    return m_gw_card_price_incl_tax_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_card_price_incl_tax_Valid() const{
    return m_gw_card_price_incl_tax_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwCardTaxAmount() const {
    return m_gw_card_tax_amount;
}
void OAIQuote_data_total_segment_extension_interface::setGwCardTaxAmount(const QString &gw_card_tax_amount) {
    m_gw_card_tax_amount = gw_card_tax_amount;
    m_gw_card_tax_amount_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_card_tax_amount_Set() const{
    return m_gw_card_tax_amount_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_card_tax_amount_Valid() const{
    return m_gw_card_tax_amount_isValid;
}

QList<QString> OAIQuote_data_total_segment_extension_interface::getGwItemIds() const {
    return m_gw_item_ids;
}
void OAIQuote_data_total_segment_extension_interface::setGwItemIds(const QList<QString> &gw_item_ids) {
    m_gw_item_ids = gw_item_ids;
    m_gw_item_ids_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_item_ids_Set() const{
    return m_gw_item_ids_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_item_ids_Valid() const{
    return m_gw_item_ids_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwItemsBasePrice() const {
    return m_gw_items_base_price;
}
void OAIQuote_data_total_segment_extension_interface::setGwItemsBasePrice(const QString &gw_items_base_price) {
    m_gw_items_base_price = gw_items_base_price;
    m_gw_items_base_price_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_items_base_price_Set() const{
    return m_gw_items_base_price_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_items_base_price_Valid() const{
    return m_gw_items_base_price_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwItemsBasePriceInclTax() const {
    return m_gw_items_base_price_incl_tax;
}
void OAIQuote_data_total_segment_extension_interface::setGwItemsBasePriceInclTax(const QString &gw_items_base_price_incl_tax) {
    m_gw_items_base_price_incl_tax = gw_items_base_price_incl_tax;
    m_gw_items_base_price_incl_tax_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_items_base_price_incl_tax_Set() const{
    return m_gw_items_base_price_incl_tax_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_items_base_price_incl_tax_Valid() const{
    return m_gw_items_base_price_incl_tax_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwItemsBaseTaxAmount() const {
    return m_gw_items_base_tax_amount;
}
void OAIQuote_data_total_segment_extension_interface::setGwItemsBaseTaxAmount(const QString &gw_items_base_tax_amount) {
    m_gw_items_base_tax_amount = gw_items_base_tax_amount;
    m_gw_items_base_tax_amount_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_items_base_tax_amount_Set() const{
    return m_gw_items_base_tax_amount_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_items_base_tax_amount_Valid() const{
    return m_gw_items_base_tax_amount_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwItemsPrice() const {
    return m_gw_items_price;
}
void OAIQuote_data_total_segment_extension_interface::setGwItemsPrice(const QString &gw_items_price) {
    m_gw_items_price = gw_items_price;
    m_gw_items_price_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_items_price_Set() const{
    return m_gw_items_price_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_items_price_Valid() const{
    return m_gw_items_price_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwItemsPriceInclTax() const {
    return m_gw_items_price_incl_tax;
}
void OAIQuote_data_total_segment_extension_interface::setGwItemsPriceInclTax(const QString &gw_items_price_incl_tax) {
    m_gw_items_price_incl_tax = gw_items_price_incl_tax;
    m_gw_items_price_incl_tax_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_items_price_incl_tax_Set() const{
    return m_gw_items_price_incl_tax_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_items_price_incl_tax_Valid() const{
    return m_gw_items_price_incl_tax_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwItemsTaxAmount() const {
    return m_gw_items_tax_amount;
}
void OAIQuote_data_total_segment_extension_interface::setGwItemsTaxAmount(const QString &gw_items_tax_amount) {
    m_gw_items_tax_amount = gw_items_tax_amount;
    m_gw_items_tax_amount_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_items_tax_amount_Set() const{
    return m_gw_items_tax_amount_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_items_tax_amount_Valid() const{
    return m_gw_items_tax_amount_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwOrderId() const {
    return m_gw_order_id;
}
void OAIQuote_data_total_segment_extension_interface::setGwOrderId(const QString &gw_order_id) {
    m_gw_order_id = gw_order_id;
    m_gw_order_id_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_order_id_Set() const{
    return m_gw_order_id_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_order_id_Valid() const{
    return m_gw_order_id_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwPrice() const {
    return m_gw_price;
}
void OAIQuote_data_total_segment_extension_interface::setGwPrice(const QString &gw_price) {
    m_gw_price = gw_price;
    m_gw_price_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_price_Set() const{
    return m_gw_price_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_price_Valid() const{
    return m_gw_price_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwPriceInclTax() const {
    return m_gw_price_incl_tax;
}
void OAIQuote_data_total_segment_extension_interface::setGwPriceInclTax(const QString &gw_price_incl_tax) {
    m_gw_price_incl_tax = gw_price_incl_tax;
    m_gw_price_incl_tax_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_price_incl_tax_Set() const{
    return m_gw_price_incl_tax_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_price_incl_tax_Valid() const{
    return m_gw_price_incl_tax_isValid;
}

QString OAIQuote_data_total_segment_extension_interface::getGwTaxAmount() const {
    return m_gw_tax_amount;
}
void OAIQuote_data_total_segment_extension_interface::setGwTaxAmount(const QString &gw_tax_amount) {
    m_gw_tax_amount = gw_tax_amount;
    m_gw_tax_amount_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_tax_amount_Set() const{
    return m_gw_tax_amount_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_gw_tax_amount_Valid() const{
    return m_gw_tax_amount_isValid;
}

QList<OAITax_data_grand_total_details_interface> OAIQuote_data_total_segment_extension_interface::getTaxGrandtotalDetails() const {
    return m_tax_grandtotal_details;
}
void OAIQuote_data_total_segment_extension_interface::setTaxGrandtotalDetails(const QList<OAITax_data_grand_total_details_interface> &tax_grandtotal_details) {
    m_tax_grandtotal_details = tax_grandtotal_details;
    m_tax_grandtotal_details_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_tax_grandtotal_details_Set() const{
    return m_tax_grandtotal_details_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_tax_grandtotal_details_Valid() const{
    return m_tax_grandtotal_details_isValid;
}

QList<QString> OAIQuote_data_total_segment_extension_interface::getVertexTaxCalculationMessages() const {
    return m_vertex_tax_calculation_messages;
}
void OAIQuote_data_total_segment_extension_interface::setVertexTaxCalculationMessages(const QList<QString> &vertex_tax_calculation_messages) {
    m_vertex_tax_calculation_messages = vertex_tax_calculation_messages;
    m_vertex_tax_calculation_messages_isSet = true;
}

bool OAIQuote_data_total_segment_extension_interface::is_vertex_tax_calculation_messages_Set() const{
    return m_vertex_tax_calculation_messages_isSet;
}

bool OAIQuote_data_total_segment_extension_interface::is_vertex_tax_calculation_messages_Valid() const{
    return m_vertex_tax_calculation_messages_isValid;
}

bool OAIQuote_data_total_segment_extension_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_gift_cards_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_add_card_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_allow_gift_receipt_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_base_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_base_price_incl_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_base_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_base_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_base_price_incl_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_base_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_price_incl_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_item_ids.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_base_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_base_price_incl_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_base_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_price_incl_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_order_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_price_incl_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_grandtotal_details.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_vertex_tax_calculation_messages.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQuote_data_total_segment_extension_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
