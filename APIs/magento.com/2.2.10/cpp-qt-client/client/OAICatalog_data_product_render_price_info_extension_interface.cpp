/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAICatalog_data_product_render_price_info_extension_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAICatalog_data_product_render_price_info_extension_interface::OAICatalog_data_product_render_price_info_extension_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAICatalog_data_product_render_price_info_extension_interface::OAICatalog_data_product_render_price_info_extension_interface() {
    this->initializeModel();
}

OAICatalog_data_product_render_price_info_extension_interface::~OAICatalog_data_product_render_price_info_extension_interface() {}

void OAICatalog_data_product_render_price_info_extension_interface::initializeModel() {

    m_msrp_isSet = false;
    m_msrp_isValid = false;

    m_tax_adjustments_isSet = false;
    m_tax_adjustments_isValid = false;

    m_weee_adjustment_isSet = false;
    m_weee_adjustment_isValid = false;

    m_weee_attributes_isSet = false;
    m_weee_attributes_isValid = false;
}

void OAICatalog_data_product_render_price_info_extension_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAICatalog_data_product_render_price_info_extension_interface::fromJsonObject(QJsonObject json) {

    m_msrp_isValid = ::OpenAPI::fromJsonValue(m_msrp, json[QString("msrp")]);
    m_msrp_isSet = !json[QString("msrp")].isNull() && m_msrp_isValid;

    m_tax_adjustments_isValid = ::OpenAPI::fromJsonValue(m_tax_adjustments, json[QString("tax_adjustments")]);
    m_tax_adjustments_isSet = !json[QString("tax_adjustments")].isNull() && m_tax_adjustments_isValid;

    m_weee_adjustment_isValid = ::OpenAPI::fromJsonValue(m_weee_adjustment, json[QString("weee_adjustment")]);
    m_weee_adjustment_isSet = !json[QString("weee_adjustment")].isNull() && m_weee_adjustment_isValid;

    m_weee_attributes_isValid = ::OpenAPI::fromJsonValue(m_weee_attributes, json[QString("weee_attributes")]);
    m_weee_attributes_isSet = !json[QString("weee_attributes")].isNull() && m_weee_attributes_isValid;
}

QString OAICatalog_data_product_render_price_info_extension_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAICatalog_data_product_render_price_info_extension_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_msrp.isSet()) {
        obj.insert(QString("msrp"), ::OpenAPI::toJsonValue(m_msrp));
    }
    if (m_tax_adjustments.isSet()) {
        obj.insert(QString("tax_adjustments"), ::OpenAPI::toJsonValue(m_tax_adjustments));
    }
    if (m_weee_adjustment_isSet) {
        obj.insert(QString("weee_adjustment"), ::OpenAPI::toJsonValue(m_weee_adjustment));
    }
    if (m_weee_attributes.size() > 0) {
        obj.insert(QString("weee_attributes"), ::OpenAPI::toJsonValue(m_weee_attributes));
    }
    return obj;
}

OAIMsrp_data_product_render_msrp_price_info_interface OAICatalog_data_product_render_price_info_extension_interface::getMsrp() const {
    return m_msrp;
}
void OAICatalog_data_product_render_price_info_extension_interface::setMsrp(const OAIMsrp_data_product_render_msrp_price_info_interface &msrp) {
    m_msrp = msrp;
    m_msrp_isSet = true;
}

bool OAICatalog_data_product_render_price_info_extension_interface::is_msrp_Set() const{
    return m_msrp_isSet;
}

bool OAICatalog_data_product_render_price_info_extension_interface::is_msrp_Valid() const{
    return m_msrp_isValid;
}

OAICatalog_data_product_render_price_info_interface OAICatalog_data_product_render_price_info_extension_interface::getTaxAdjustments() const {
    return m_tax_adjustments;
}
void OAICatalog_data_product_render_price_info_extension_interface::setTaxAdjustments(const OAICatalog_data_product_render_price_info_interface &tax_adjustments) {
    m_tax_adjustments = tax_adjustments;
    m_tax_adjustments_isSet = true;
}

bool OAICatalog_data_product_render_price_info_extension_interface::is_tax_adjustments_Set() const{
    return m_tax_adjustments_isSet;
}

bool OAICatalog_data_product_render_price_info_extension_interface::is_tax_adjustments_Valid() const{
    return m_tax_adjustments_isValid;
}

QString OAICatalog_data_product_render_price_info_extension_interface::getWeeeAdjustment() const {
    return m_weee_adjustment;
}
void OAICatalog_data_product_render_price_info_extension_interface::setWeeeAdjustment(const QString &weee_adjustment) {
    m_weee_adjustment = weee_adjustment;
    m_weee_adjustment_isSet = true;
}

bool OAICatalog_data_product_render_price_info_extension_interface::is_weee_adjustment_Set() const{
    return m_weee_adjustment_isSet;
}

bool OAICatalog_data_product_render_price_info_extension_interface::is_weee_adjustment_Valid() const{
    return m_weee_adjustment_isValid;
}

QList<OAIWeee_data_product_render_weee_adjustment_attribute_interface> OAICatalog_data_product_render_price_info_extension_interface::getWeeeAttributes() const {
    return m_weee_attributes;
}
void OAICatalog_data_product_render_price_info_extension_interface::setWeeeAttributes(const QList<OAIWeee_data_product_render_weee_adjustment_attribute_interface> &weee_attributes) {
    m_weee_attributes = weee_attributes;
    m_weee_attributes_isSet = true;
}

bool OAICatalog_data_product_render_price_info_extension_interface::is_weee_attributes_Set() const{
    return m_weee_attributes_isSet;
}

bool OAICatalog_data_product_render_price_info_extension_interface::is_weee_attributes_Valid() const{
    return m_weee_attributes_isValid;
}

bool OAICatalog_data_product_render_price_info_extension_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_msrp.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_tax_adjustments.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_weee_adjustment_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_weee_attributes.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAICatalog_data_product_render_price_info_extension_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
