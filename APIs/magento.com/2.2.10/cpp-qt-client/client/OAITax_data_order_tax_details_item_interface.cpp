/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAITax_data_order_tax_details_item_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAITax_data_order_tax_details_item_interface::OAITax_data_order_tax_details_item_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAITax_data_order_tax_details_item_interface::OAITax_data_order_tax_details_item_interface() {
    this->initializeModel();
}

OAITax_data_order_tax_details_item_interface::~OAITax_data_order_tax_details_item_interface() {}

void OAITax_data_order_tax_details_item_interface::initializeModel() {

    m_applied_taxes_isSet = false;
    m_applied_taxes_isValid = false;

    m_associated_item_id_isSet = false;
    m_associated_item_id_isValid = false;

    m_extension_attributes_isSet = false;
    m_extension_attributes_isValid = false;

    m_item_id_isSet = false;
    m_item_id_isValid = false;

    m_type_isSet = false;
    m_type_isValid = false;
}

void OAITax_data_order_tax_details_item_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAITax_data_order_tax_details_item_interface::fromJsonObject(QJsonObject json) {

    m_applied_taxes_isValid = ::OpenAPI::fromJsonValue(m_applied_taxes, json[QString("applied_taxes")]);
    m_applied_taxes_isSet = !json[QString("applied_taxes")].isNull() && m_applied_taxes_isValid;

    m_associated_item_id_isValid = ::OpenAPI::fromJsonValue(m_associated_item_id, json[QString("associated_item_id")]);
    m_associated_item_id_isSet = !json[QString("associated_item_id")].isNull() && m_associated_item_id_isValid;

    m_extension_attributes_isValid = ::OpenAPI::fromJsonValue(m_extension_attributes, json[QString("extension_attributes")]);
    m_extension_attributes_isSet = !json[QString("extension_attributes")].isNull() && m_extension_attributes_isValid;

    m_item_id_isValid = ::OpenAPI::fromJsonValue(m_item_id, json[QString("item_id")]);
    m_item_id_isSet = !json[QString("item_id")].isNull() && m_item_id_isValid;

    m_type_isValid = ::OpenAPI::fromJsonValue(m_type, json[QString("type")]);
    m_type_isSet = !json[QString("type")].isNull() && m_type_isValid;
}

QString OAITax_data_order_tax_details_item_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAITax_data_order_tax_details_item_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_applied_taxes.size() > 0) {
        obj.insert(QString("applied_taxes"), ::OpenAPI::toJsonValue(m_applied_taxes));
    }
    if (m_associated_item_id_isSet) {
        obj.insert(QString("associated_item_id"), ::OpenAPI::toJsonValue(m_associated_item_id));
    }
    if (m_extension_attributes_isSet) {
        obj.insert(QString("extension_attributes"), ::OpenAPI::toJsonValue(m_extension_attributes));
    }
    if (m_item_id_isSet) {
        obj.insert(QString("item_id"), ::OpenAPI::toJsonValue(m_item_id));
    }
    if (m_type_isSet) {
        obj.insert(QString("type"), ::OpenAPI::toJsonValue(m_type));
    }
    return obj;
}

QList<OAITax_data_order_tax_details_applied_tax_interface> OAITax_data_order_tax_details_item_interface::getAppliedTaxes() const {
    return m_applied_taxes;
}
void OAITax_data_order_tax_details_item_interface::setAppliedTaxes(const QList<OAITax_data_order_tax_details_applied_tax_interface> &applied_taxes) {
    m_applied_taxes = applied_taxes;
    m_applied_taxes_isSet = true;
}

bool OAITax_data_order_tax_details_item_interface::is_applied_taxes_Set() const{
    return m_applied_taxes_isSet;
}

bool OAITax_data_order_tax_details_item_interface::is_applied_taxes_Valid() const{
    return m_applied_taxes_isValid;
}

qint32 OAITax_data_order_tax_details_item_interface::getAssociatedItemId() const {
    return m_associated_item_id;
}
void OAITax_data_order_tax_details_item_interface::setAssociatedItemId(const qint32 &associated_item_id) {
    m_associated_item_id = associated_item_id;
    m_associated_item_id_isSet = true;
}

bool OAITax_data_order_tax_details_item_interface::is_associated_item_id_Set() const{
    return m_associated_item_id_isSet;
}

bool OAITax_data_order_tax_details_item_interface::is_associated_item_id_Valid() const{
    return m_associated_item_id_isValid;
}

OAIObject OAITax_data_order_tax_details_item_interface::getExtensionAttributes() const {
    return m_extension_attributes;
}
void OAITax_data_order_tax_details_item_interface::setExtensionAttributes(const OAIObject &extension_attributes) {
    m_extension_attributes = extension_attributes;
    m_extension_attributes_isSet = true;
}

bool OAITax_data_order_tax_details_item_interface::is_extension_attributes_Set() const{
    return m_extension_attributes_isSet;
}

bool OAITax_data_order_tax_details_item_interface::is_extension_attributes_Valid() const{
    return m_extension_attributes_isValid;
}

qint32 OAITax_data_order_tax_details_item_interface::getItemId() const {
    return m_item_id;
}
void OAITax_data_order_tax_details_item_interface::setItemId(const qint32 &item_id) {
    m_item_id = item_id;
    m_item_id_isSet = true;
}

bool OAITax_data_order_tax_details_item_interface::is_item_id_Set() const{
    return m_item_id_isSet;
}

bool OAITax_data_order_tax_details_item_interface::is_item_id_Valid() const{
    return m_item_id_isValid;
}

QString OAITax_data_order_tax_details_item_interface::getType() const {
    return m_type;
}
void OAITax_data_order_tax_details_item_interface::setType(const QString &type) {
    m_type = type;
    m_type_isSet = true;
}

bool OAITax_data_order_tax_details_item_interface::is_type_Set() const{
    return m_type_isSet;
}

bool OAITax_data_order_tax_details_item_interface::is_type_Valid() const{
    return m_type_isValid;
}

bool OAITax_data_order_tax_details_item_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_applied_taxes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_associated_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extension_attributes_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_type_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAITax_data_order_tax_details_item_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
