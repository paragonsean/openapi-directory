/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISales_data_order_extension_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISales_data_order_extension_interface::OAISales_data_order_extension_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISales_data_order_extension_interface::OAISales_data_order_extension_interface() {
    this->initializeModel();
}

OAISales_data_order_extension_interface::~OAISales_data_order_extension_interface() {}

void OAISales_data_order_extension_interface::initializeModel() {

    m_amazon_order_reference_id_isSet = false;
    m_amazon_order_reference_id_isValid = false;

    m_applied_taxes_isSet = false;
    m_applied_taxes_isValid = false;

    m_base_customer_balance_amount_isSet = false;
    m_base_customer_balance_amount_isValid = false;

    m_base_customer_balance_invoiced_isSet = false;
    m_base_customer_balance_invoiced_isValid = false;

    m_base_customer_balance_refunded_isSet = false;
    m_base_customer_balance_refunded_isValid = false;

    m_base_customer_balance_total_refunded_isSet = false;
    m_base_customer_balance_total_refunded_isValid = false;

    m_base_gift_cards_amount_isSet = false;
    m_base_gift_cards_amount_isValid = false;

    m_base_gift_cards_invoiced_isSet = false;
    m_base_gift_cards_invoiced_isValid = false;

    m_base_gift_cards_refunded_isSet = false;
    m_base_gift_cards_refunded_isValid = false;

    m_base_reward_currency_amount_isSet = false;
    m_base_reward_currency_amount_isValid = false;

    m_company_order_attributes_isSet = false;
    m_company_order_attributes_isValid = false;

    m_converting_from_quote_isSet = false;
    m_converting_from_quote_isValid = false;

    m_customer_balance_amount_isSet = false;
    m_customer_balance_amount_isValid = false;

    m_customer_balance_invoiced_isSet = false;
    m_customer_balance_invoiced_isValid = false;

    m_customer_balance_refunded_isSet = false;
    m_customer_balance_refunded_isValid = false;

    m_customer_balance_total_refunded_isSet = false;
    m_customer_balance_total_refunded_isValid = false;

    m_gift_cards_isSet = false;
    m_gift_cards_isValid = false;

    m_gift_cards_amount_isSet = false;
    m_gift_cards_amount_isValid = false;

    m_gift_cards_invoiced_isSet = false;
    m_gift_cards_invoiced_isValid = false;

    m_gift_cards_refunded_isSet = false;
    m_gift_cards_refunded_isValid = false;

    m_gift_message_isSet = false;
    m_gift_message_isValid = false;

    m_gw_add_card_isSet = false;
    m_gw_add_card_isValid = false;

    m_gw_allow_gift_receipt_isSet = false;
    m_gw_allow_gift_receipt_isValid = false;

    m_gw_base_price_isSet = false;
    m_gw_base_price_isValid = false;

    m_gw_base_price_incl_tax_isSet = false;
    m_gw_base_price_incl_tax_isValid = false;

    m_gw_base_price_invoiced_isSet = false;
    m_gw_base_price_invoiced_isValid = false;

    m_gw_base_price_refunded_isSet = false;
    m_gw_base_price_refunded_isValid = false;

    m_gw_base_tax_amount_isSet = false;
    m_gw_base_tax_amount_isValid = false;

    m_gw_base_tax_amount_invoiced_isSet = false;
    m_gw_base_tax_amount_invoiced_isValid = false;

    m_gw_base_tax_amount_refunded_isSet = false;
    m_gw_base_tax_amount_refunded_isValid = false;

    m_gw_card_base_price_isSet = false;
    m_gw_card_base_price_isValid = false;

    m_gw_card_base_price_incl_tax_isSet = false;
    m_gw_card_base_price_incl_tax_isValid = false;

    m_gw_card_base_price_invoiced_isSet = false;
    m_gw_card_base_price_invoiced_isValid = false;

    m_gw_card_base_price_refunded_isSet = false;
    m_gw_card_base_price_refunded_isValid = false;

    m_gw_card_base_tax_amount_isSet = false;
    m_gw_card_base_tax_amount_isValid = false;

    m_gw_card_base_tax_invoiced_isSet = false;
    m_gw_card_base_tax_invoiced_isValid = false;

    m_gw_card_base_tax_refunded_isSet = false;
    m_gw_card_base_tax_refunded_isValid = false;

    m_gw_card_price_isSet = false;
    m_gw_card_price_isValid = false;

    m_gw_card_price_incl_tax_isSet = false;
    m_gw_card_price_incl_tax_isValid = false;

    m_gw_card_price_invoiced_isSet = false;
    m_gw_card_price_invoiced_isValid = false;

    m_gw_card_price_refunded_isSet = false;
    m_gw_card_price_refunded_isValid = false;

    m_gw_card_tax_amount_isSet = false;
    m_gw_card_tax_amount_isValid = false;

    m_gw_card_tax_invoiced_isSet = false;
    m_gw_card_tax_invoiced_isValid = false;

    m_gw_card_tax_refunded_isSet = false;
    m_gw_card_tax_refunded_isValid = false;

    m_gw_id_isSet = false;
    m_gw_id_isValid = false;

    m_gw_items_base_price_isSet = false;
    m_gw_items_base_price_isValid = false;

    m_gw_items_base_price_incl_tax_isSet = false;
    m_gw_items_base_price_incl_tax_isValid = false;

    m_gw_items_base_price_invoiced_isSet = false;
    m_gw_items_base_price_invoiced_isValid = false;

    m_gw_items_base_price_refunded_isSet = false;
    m_gw_items_base_price_refunded_isValid = false;

    m_gw_items_base_tax_amount_isSet = false;
    m_gw_items_base_tax_amount_isValid = false;

    m_gw_items_base_tax_invoiced_isSet = false;
    m_gw_items_base_tax_invoiced_isValid = false;

    m_gw_items_base_tax_refunded_isSet = false;
    m_gw_items_base_tax_refunded_isValid = false;

    m_gw_items_price_isSet = false;
    m_gw_items_price_isValid = false;

    m_gw_items_price_incl_tax_isSet = false;
    m_gw_items_price_incl_tax_isValid = false;

    m_gw_items_price_invoiced_isSet = false;
    m_gw_items_price_invoiced_isValid = false;

    m_gw_items_price_refunded_isSet = false;
    m_gw_items_price_refunded_isValid = false;

    m_gw_items_tax_amount_isSet = false;
    m_gw_items_tax_amount_isValid = false;

    m_gw_items_tax_invoiced_isSet = false;
    m_gw_items_tax_invoiced_isValid = false;

    m_gw_items_tax_refunded_isSet = false;
    m_gw_items_tax_refunded_isValid = false;

    m_gw_price_isSet = false;
    m_gw_price_isValid = false;

    m_gw_price_incl_tax_isSet = false;
    m_gw_price_incl_tax_isValid = false;

    m_gw_price_invoiced_isSet = false;
    m_gw_price_invoiced_isValid = false;

    m_gw_price_refunded_isSet = false;
    m_gw_price_refunded_isValid = false;

    m_gw_tax_amount_isSet = false;
    m_gw_tax_amount_isValid = false;

    m_gw_tax_amount_invoiced_isSet = false;
    m_gw_tax_amount_invoiced_isValid = false;

    m_gw_tax_amount_refunded_isSet = false;
    m_gw_tax_amount_refunded_isValid = false;

    m_item_applied_taxes_isSet = false;
    m_item_applied_taxes_isValid = false;

    m_payment_additional_info_isSet = false;
    m_payment_additional_info_isValid = false;

    m_reward_currency_amount_isSet = false;
    m_reward_currency_amount_isValid = false;

    m_reward_points_balance_isSet = false;
    m_reward_points_balance_isValid = false;

    m_shipping_assignments_isSet = false;
    m_shipping_assignments_isValid = false;
}

void OAISales_data_order_extension_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISales_data_order_extension_interface::fromJsonObject(QJsonObject json) {

    m_amazon_order_reference_id_isValid = ::OpenAPI::fromJsonValue(m_amazon_order_reference_id, json[QString("amazon_order_reference_id")]);
    m_amazon_order_reference_id_isSet = !json[QString("amazon_order_reference_id")].isNull() && m_amazon_order_reference_id_isValid;

    m_applied_taxes_isValid = ::OpenAPI::fromJsonValue(m_applied_taxes, json[QString("applied_taxes")]);
    m_applied_taxes_isSet = !json[QString("applied_taxes")].isNull() && m_applied_taxes_isValid;

    m_base_customer_balance_amount_isValid = ::OpenAPI::fromJsonValue(m_base_customer_balance_amount, json[QString("base_customer_balance_amount")]);
    m_base_customer_balance_amount_isSet = !json[QString("base_customer_balance_amount")].isNull() && m_base_customer_balance_amount_isValid;

    m_base_customer_balance_invoiced_isValid = ::OpenAPI::fromJsonValue(m_base_customer_balance_invoiced, json[QString("base_customer_balance_invoiced")]);
    m_base_customer_balance_invoiced_isSet = !json[QString("base_customer_balance_invoiced")].isNull() && m_base_customer_balance_invoiced_isValid;

    m_base_customer_balance_refunded_isValid = ::OpenAPI::fromJsonValue(m_base_customer_balance_refunded, json[QString("base_customer_balance_refunded")]);
    m_base_customer_balance_refunded_isSet = !json[QString("base_customer_balance_refunded")].isNull() && m_base_customer_balance_refunded_isValid;

    m_base_customer_balance_total_refunded_isValid = ::OpenAPI::fromJsonValue(m_base_customer_balance_total_refunded, json[QString("base_customer_balance_total_refunded")]);
    m_base_customer_balance_total_refunded_isSet = !json[QString("base_customer_balance_total_refunded")].isNull() && m_base_customer_balance_total_refunded_isValid;

    m_base_gift_cards_amount_isValid = ::OpenAPI::fromJsonValue(m_base_gift_cards_amount, json[QString("base_gift_cards_amount")]);
    m_base_gift_cards_amount_isSet = !json[QString("base_gift_cards_amount")].isNull() && m_base_gift_cards_amount_isValid;

    m_base_gift_cards_invoiced_isValid = ::OpenAPI::fromJsonValue(m_base_gift_cards_invoiced, json[QString("base_gift_cards_invoiced")]);
    m_base_gift_cards_invoiced_isSet = !json[QString("base_gift_cards_invoiced")].isNull() && m_base_gift_cards_invoiced_isValid;

    m_base_gift_cards_refunded_isValid = ::OpenAPI::fromJsonValue(m_base_gift_cards_refunded, json[QString("base_gift_cards_refunded")]);
    m_base_gift_cards_refunded_isSet = !json[QString("base_gift_cards_refunded")].isNull() && m_base_gift_cards_refunded_isValid;

    m_base_reward_currency_amount_isValid = ::OpenAPI::fromJsonValue(m_base_reward_currency_amount, json[QString("base_reward_currency_amount")]);
    m_base_reward_currency_amount_isSet = !json[QString("base_reward_currency_amount")].isNull() && m_base_reward_currency_amount_isValid;

    m_company_order_attributes_isValid = ::OpenAPI::fromJsonValue(m_company_order_attributes, json[QString("company_order_attributes")]);
    m_company_order_attributes_isSet = !json[QString("company_order_attributes")].isNull() && m_company_order_attributes_isValid;

    m_converting_from_quote_isValid = ::OpenAPI::fromJsonValue(m_converting_from_quote, json[QString("converting_from_quote")]);
    m_converting_from_quote_isSet = !json[QString("converting_from_quote")].isNull() && m_converting_from_quote_isValid;

    m_customer_balance_amount_isValid = ::OpenAPI::fromJsonValue(m_customer_balance_amount, json[QString("customer_balance_amount")]);
    m_customer_balance_amount_isSet = !json[QString("customer_balance_amount")].isNull() && m_customer_balance_amount_isValid;

    m_customer_balance_invoiced_isValid = ::OpenAPI::fromJsonValue(m_customer_balance_invoiced, json[QString("customer_balance_invoiced")]);
    m_customer_balance_invoiced_isSet = !json[QString("customer_balance_invoiced")].isNull() && m_customer_balance_invoiced_isValid;

    m_customer_balance_refunded_isValid = ::OpenAPI::fromJsonValue(m_customer_balance_refunded, json[QString("customer_balance_refunded")]);
    m_customer_balance_refunded_isSet = !json[QString("customer_balance_refunded")].isNull() && m_customer_balance_refunded_isValid;

    m_customer_balance_total_refunded_isValid = ::OpenAPI::fromJsonValue(m_customer_balance_total_refunded, json[QString("customer_balance_total_refunded")]);
    m_customer_balance_total_refunded_isSet = !json[QString("customer_balance_total_refunded")].isNull() && m_customer_balance_total_refunded_isValid;

    m_gift_cards_isValid = ::OpenAPI::fromJsonValue(m_gift_cards, json[QString("gift_cards")]);
    m_gift_cards_isSet = !json[QString("gift_cards")].isNull() && m_gift_cards_isValid;

    m_gift_cards_amount_isValid = ::OpenAPI::fromJsonValue(m_gift_cards_amount, json[QString("gift_cards_amount")]);
    m_gift_cards_amount_isSet = !json[QString("gift_cards_amount")].isNull() && m_gift_cards_amount_isValid;

    m_gift_cards_invoiced_isValid = ::OpenAPI::fromJsonValue(m_gift_cards_invoiced, json[QString("gift_cards_invoiced")]);
    m_gift_cards_invoiced_isSet = !json[QString("gift_cards_invoiced")].isNull() && m_gift_cards_invoiced_isValid;

    m_gift_cards_refunded_isValid = ::OpenAPI::fromJsonValue(m_gift_cards_refunded, json[QString("gift_cards_refunded")]);
    m_gift_cards_refunded_isSet = !json[QString("gift_cards_refunded")].isNull() && m_gift_cards_refunded_isValid;

    m_gift_message_isValid = ::OpenAPI::fromJsonValue(m_gift_message, json[QString("gift_message")]);
    m_gift_message_isSet = !json[QString("gift_message")].isNull() && m_gift_message_isValid;

    m_gw_add_card_isValid = ::OpenAPI::fromJsonValue(m_gw_add_card, json[QString("gw_add_card")]);
    m_gw_add_card_isSet = !json[QString("gw_add_card")].isNull() && m_gw_add_card_isValid;

    m_gw_allow_gift_receipt_isValid = ::OpenAPI::fromJsonValue(m_gw_allow_gift_receipt, json[QString("gw_allow_gift_receipt")]);
    m_gw_allow_gift_receipt_isSet = !json[QString("gw_allow_gift_receipt")].isNull() && m_gw_allow_gift_receipt_isValid;

    m_gw_base_price_isValid = ::OpenAPI::fromJsonValue(m_gw_base_price, json[QString("gw_base_price")]);
    m_gw_base_price_isSet = !json[QString("gw_base_price")].isNull() && m_gw_base_price_isValid;

    m_gw_base_price_incl_tax_isValid = ::OpenAPI::fromJsonValue(m_gw_base_price_incl_tax, json[QString("gw_base_price_incl_tax")]);
    m_gw_base_price_incl_tax_isSet = !json[QString("gw_base_price_incl_tax")].isNull() && m_gw_base_price_incl_tax_isValid;

    m_gw_base_price_invoiced_isValid = ::OpenAPI::fromJsonValue(m_gw_base_price_invoiced, json[QString("gw_base_price_invoiced")]);
    m_gw_base_price_invoiced_isSet = !json[QString("gw_base_price_invoiced")].isNull() && m_gw_base_price_invoiced_isValid;

    m_gw_base_price_refunded_isValid = ::OpenAPI::fromJsonValue(m_gw_base_price_refunded, json[QString("gw_base_price_refunded")]);
    m_gw_base_price_refunded_isSet = !json[QString("gw_base_price_refunded")].isNull() && m_gw_base_price_refunded_isValid;

    m_gw_base_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_gw_base_tax_amount, json[QString("gw_base_tax_amount")]);
    m_gw_base_tax_amount_isSet = !json[QString("gw_base_tax_amount")].isNull() && m_gw_base_tax_amount_isValid;

    m_gw_base_tax_amount_invoiced_isValid = ::OpenAPI::fromJsonValue(m_gw_base_tax_amount_invoiced, json[QString("gw_base_tax_amount_invoiced")]);
    m_gw_base_tax_amount_invoiced_isSet = !json[QString("gw_base_tax_amount_invoiced")].isNull() && m_gw_base_tax_amount_invoiced_isValid;

    m_gw_base_tax_amount_refunded_isValid = ::OpenAPI::fromJsonValue(m_gw_base_tax_amount_refunded, json[QString("gw_base_tax_amount_refunded")]);
    m_gw_base_tax_amount_refunded_isSet = !json[QString("gw_base_tax_amount_refunded")].isNull() && m_gw_base_tax_amount_refunded_isValid;

    m_gw_card_base_price_isValid = ::OpenAPI::fromJsonValue(m_gw_card_base_price, json[QString("gw_card_base_price")]);
    m_gw_card_base_price_isSet = !json[QString("gw_card_base_price")].isNull() && m_gw_card_base_price_isValid;

    m_gw_card_base_price_incl_tax_isValid = ::OpenAPI::fromJsonValue(m_gw_card_base_price_incl_tax, json[QString("gw_card_base_price_incl_tax")]);
    m_gw_card_base_price_incl_tax_isSet = !json[QString("gw_card_base_price_incl_tax")].isNull() && m_gw_card_base_price_incl_tax_isValid;

    m_gw_card_base_price_invoiced_isValid = ::OpenAPI::fromJsonValue(m_gw_card_base_price_invoiced, json[QString("gw_card_base_price_invoiced")]);
    m_gw_card_base_price_invoiced_isSet = !json[QString("gw_card_base_price_invoiced")].isNull() && m_gw_card_base_price_invoiced_isValid;

    m_gw_card_base_price_refunded_isValid = ::OpenAPI::fromJsonValue(m_gw_card_base_price_refunded, json[QString("gw_card_base_price_refunded")]);
    m_gw_card_base_price_refunded_isSet = !json[QString("gw_card_base_price_refunded")].isNull() && m_gw_card_base_price_refunded_isValid;

    m_gw_card_base_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_gw_card_base_tax_amount, json[QString("gw_card_base_tax_amount")]);
    m_gw_card_base_tax_amount_isSet = !json[QString("gw_card_base_tax_amount")].isNull() && m_gw_card_base_tax_amount_isValid;

    m_gw_card_base_tax_invoiced_isValid = ::OpenAPI::fromJsonValue(m_gw_card_base_tax_invoiced, json[QString("gw_card_base_tax_invoiced")]);
    m_gw_card_base_tax_invoiced_isSet = !json[QString("gw_card_base_tax_invoiced")].isNull() && m_gw_card_base_tax_invoiced_isValid;

    m_gw_card_base_tax_refunded_isValid = ::OpenAPI::fromJsonValue(m_gw_card_base_tax_refunded, json[QString("gw_card_base_tax_refunded")]);
    m_gw_card_base_tax_refunded_isSet = !json[QString("gw_card_base_tax_refunded")].isNull() && m_gw_card_base_tax_refunded_isValid;

    m_gw_card_price_isValid = ::OpenAPI::fromJsonValue(m_gw_card_price, json[QString("gw_card_price")]);
    m_gw_card_price_isSet = !json[QString("gw_card_price")].isNull() && m_gw_card_price_isValid;

    m_gw_card_price_incl_tax_isValid = ::OpenAPI::fromJsonValue(m_gw_card_price_incl_tax, json[QString("gw_card_price_incl_tax")]);
    m_gw_card_price_incl_tax_isSet = !json[QString("gw_card_price_incl_tax")].isNull() && m_gw_card_price_incl_tax_isValid;

    m_gw_card_price_invoiced_isValid = ::OpenAPI::fromJsonValue(m_gw_card_price_invoiced, json[QString("gw_card_price_invoiced")]);
    m_gw_card_price_invoiced_isSet = !json[QString("gw_card_price_invoiced")].isNull() && m_gw_card_price_invoiced_isValid;

    m_gw_card_price_refunded_isValid = ::OpenAPI::fromJsonValue(m_gw_card_price_refunded, json[QString("gw_card_price_refunded")]);
    m_gw_card_price_refunded_isSet = !json[QString("gw_card_price_refunded")].isNull() && m_gw_card_price_refunded_isValid;

    m_gw_card_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_gw_card_tax_amount, json[QString("gw_card_tax_amount")]);
    m_gw_card_tax_amount_isSet = !json[QString("gw_card_tax_amount")].isNull() && m_gw_card_tax_amount_isValid;

    m_gw_card_tax_invoiced_isValid = ::OpenAPI::fromJsonValue(m_gw_card_tax_invoiced, json[QString("gw_card_tax_invoiced")]);
    m_gw_card_tax_invoiced_isSet = !json[QString("gw_card_tax_invoiced")].isNull() && m_gw_card_tax_invoiced_isValid;

    m_gw_card_tax_refunded_isValid = ::OpenAPI::fromJsonValue(m_gw_card_tax_refunded, json[QString("gw_card_tax_refunded")]);
    m_gw_card_tax_refunded_isSet = !json[QString("gw_card_tax_refunded")].isNull() && m_gw_card_tax_refunded_isValid;

    m_gw_id_isValid = ::OpenAPI::fromJsonValue(m_gw_id, json[QString("gw_id")]);
    m_gw_id_isSet = !json[QString("gw_id")].isNull() && m_gw_id_isValid;

    m_gw_items_base_price_isValid = ::OpenAPI::fromJsonValue(m_gw_items_base_price, json[QString("gw_items_base_price")]);
    m_gw_items_base_price_isSet = !json[QString("gw_items_base_price")].isNull() && m_gw_items_base_price_isValid;

    m_gw_items_base_price_incl_tax_isValid = ::OpenAPI::fromJsonValue(m_gw_items_base_price_incl_tax, json[QString("gw_items_base_price_incl_tax")]);
    m_gw_items_base_price_incl_tax_isSet = !json[QString("gw_items_base_price_incl_tax")].isNull() && m_gw_items_base_price_incl_tax_isValid;

    m_gw_items_base_price_invoiced_isValid = ::OpenAPI::fromJsonValue(m_gw_items_base_price_invoiced, json[QString("gw_items_base_price_invoiced")]);
    m_gw_items_base_price_invoiced_isSet = !json[QString("gw_items_base_price_invoiced")].isNull() && m_gw_items_base_price_invoiced_isValid;

    m_gw_items_base_price_refunded_isValid = ::OpenAPI::fromJsonValue(m_gw_items_base_price_refunded, json[QString("gw_items_base_price_refunded")]);
    m_gw_items_base_price_refunded_isSet = !json[QString("gw_items_base_price_refunded")].isNull() && m_gw_items_base_price_refunded_isValid;

    m_gw_items_base_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_gw_items_base_tax_amount, json[QString("gw_items_base_tax_amount")]);
    m_gw_items_base_tax_amount_isSet = !json[QString("gw_items_base_tax_amount")].isNull() && m_gw_items_base_tax_amount_isValid;

    m_gw_items_base_tax_invoiced_isValid = ::OpenAPI::fromJsonValue(m_gw_items_base_tax_invoiced, json[QString("gw_items_base_tax_invoiced")]);
    m_gw_items_base_tax_invoiced_isSet = !json[QString("gw_items_base_tax_invoiced")].isNull() && m_gw_items_base_tax_invoiced_isValid;

    m_gw_items_base_tax_refunded_isValid = ::OpenAPI::fromJsonValue(m_gw_items_base_tax_refunded, json[QString("gw_items_base_tax_refunded")]);
    m_gw_items_base_tax_refunded_isSet = !json[QString("gw_items_base_tax_refunded")].isNull() && m_gw_items_base_tax_refunded_isValid;

    m_gw_items_price_isValid = ::OpenAPI::fromJsonValue(m_gw_items_price, json[QString("gw_items_price")]);
    m_gw_items_price_isSet = !json[QString("gw_items_price")].isNull() && m_gw_items_price_isValid;

    m_gw_items_price_incl_tax_isValid = ::OpenAPI::fromJsonValue(m_gw_items_price_incl_tax, json[QString("gw_items_price_incl_tax")]);
    m_gw_items_price_incl_tax_isSet = !json[QString("gw_items_price_incl_tax")].isNull() && m_gw_items_price_incl_tax_isValid;

    m_gw_items_price_invoiced_isValid = ::OpenAPI::fromJsonValue(m_gw_items_price_invoiced, json[QString("gw_items_price_invoiced")]);
    m_gw_items_price_invoiced_isSet = !json[QString("gw_items_price_invoiced")].isNull() && m_gw_items_price_invoiced_isValid;

    m_gw_items_price_refunded_isValid = ::OpenAPI::fromJsonValue(m_gw_items_price_refunded, json[QString("gw_items_price_refunded")]);
    m_gw_items_price_refunded_isSet = !json[QString("gw_items_price_refunded")].isNull() && m_gw_items_price_refunded_isValid;

    m_gw_items_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_gw_items_tax_amount, json[QString("gw_items_tax_amount")]);
    m_gw_items_tax_amount_isSet = !json[QString("gw_items_tax_amount")].isNull() && m_gw_items_tax_amount_isValid;

    m_gw_items_tax_invoiced_isValid = ::OpenAPI::fromJsonValue(m_gw_items_tax_invoiced, json[QString("gw_items_tax_invoiced")]);
    m_gw_items_tax_invoiced_isSet = !json[QString("gw_items_tax_invoiced")].isNull() && m_gw_items_tax_invoiced_isValid;

    m_gw_items_tax_refunded_isValid = ::OpenAPI::fromJsonValue(m_gw_items_tax_refunded, json[QString("gw_items_tax_refunded")]);
    m_gw_items_tax_refunded_isSet = !json[QString("gw_items_tax_refunded")].isNull() && m_gw_items_tax_refunded_isValid;

    m_gw_price_isValid = ::OpenAPI::fromJsonValue(m_gw_price, json[QString("gw_price")]);
    m_gw_price_isSet = !json[QString("gw_price")].isNull() && m_gw_price_isValid;

    m_gw_price_incl_tax_isValid = ::OpenAPI::fromJsonValue(m_gw_price_incl_tax, json[QString("gw_price_incl_tax")]);
    m_gw_price_incl_tax_isSet = !json[QString("gw_price_incl_tax")].isNull() && m_gw_price_incl_tax_isValid;

    m_gw_price_invoiced_isValid = ::OpenAPI::fromJsonValue(m_gw_price_invoiced, json[QString("gw_price_invoiced")]);
    m_gw_price_invoiced_isSet = !json[QString("gw_price_invoiced")].isNull() && m_gw_price_invoiced_isValid;

    m_gw_price_refunded_isValid = ::OpenAPI::fromJsonValue(m_gw_price_refunded, json[QString("gw_price_refunded")]);
    m_gw_price_refunded_isSet = !json[QString("gw_price_refunded")].isNull() && m_gw_price_refunded_isValid;

    m_gw_tax_amount_isValid = ::OpenAPI::fromJsonValue(m_gw_tax_amount, json[QString("gw_tax_amount")]);
    m_gw_tax_amount_isSet = !json[QString("gw_tax_amount")].isNull() && m_gw_tax_amount_isValid;

    m_gw_tax_amount_invoiced_isValid = ::OpenAPI::fromJsonValue(m_gw_tax_amount_invoiced, json[QString("gw_tax_amount_invoiced")]);
    m_gw_tax_amount_invoiced_isSet = !json[QString("gw_tax_amount_invoiced")].isNull() && m_gw_tax_amount_invoiced_isValid;

    m_gw_tax_amount_refunded_isValid = ::OpenAPI::fromJsonValue(m_gw_tax_amount_refunded, json[QString("gw_tax_amount_refunded")]);
    m_gw_tax_amount_refunded_isSet = !json[QString("gw_tax_amount_refunded")].isNull() && m_gw_tax_amount_refunded_isValid;

    m_item_applied_taxes_isValid = ::OpenAPI::fromJsonValue(m_item_applied_taxes, json[QString("item_applied_taxes")]);
    m_item_applied_taxes_isSet = !json[QString("item_applied_taxes")].isNull() && m_item_applied_taxes_isValid;

    m_payment_additional_info_isValid = ::OpenAPI::fromJsonValue(m_payment_additional_info, json[QString("payment_additional_info")]);
    m_payment_additional_info_isSet = !json[QString("payment_additional_info")].isNull() && m_payment_additional_info_isValid;

    m_reward_currency_amount_isValid = ::OpenAPI::fromJsonValue(m_reward_currency_amount, json[QString("reward_currency_amount")]);
    m_reward_currency_amount_isSet = !json[QString("reward_currency_amount")].isNull() && m_reward_currency_amount_isValid;

    m_reward_points_balance_isValid = ::OpenAPI::fromJsonValue(m_reward_points_balance, json[QString("reward_points_balance")]);
    m_reward_points_balance_isSet = !json[QString("reward_points_balance")].isNull() && m_reward_points_balance_isValid;

    m_shipping_assignments_isValid = ::OpenAPI::fromJsonValue(m_shipping_assignments, json[QString("shipping_assignments")]);
    m_shipping_assignments_isSet = !json[QString("shipping_assignments")].isNull() && m_shipping_assignments_isValid;
}

QString OAISales_data_order_extension_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISales_data_order_extension_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_amazon_order_reference_id_isSet) {
        obj.insert(QString("amazon_order_reference_id"), ::OpenAPI::toJsonValue(m_amazon_order_reference_id));
    }
    if (m_applied_taxes.size() > 0) {
        obj.insert(QString("applied_taxes"), ::OpenAPI::toJsonValue(m_applied_taxes));
    }
    if (m_base_customer_balance_amount_isSet) {
        obj.insert(QString("base_customer_balance_amount"), ::OpenAPI::toJsonValue(m_base_customer_balance_amount));
    }
    if (m_base_customer_balance_invoiced_isSet) {
        obj.insert(QString("base_customer_balance_invoiced"), ::OpenAPI::toJsonValue(m_base_customer_balance_invoiced));
    }
    if (m_base_customer_balance_refunded_isSet) {
        obj.insert(QString("base_customer_balance_refunded"), ::OpenAPI::toJsonValue(m_base_customer_balance_refunded));
    }
    if (m_base_customer_balance_total_refunded_isSet) {
        obj.insert(QString("base_customer_balance_total_refunded"), ::OpenAPI::toJsonValue(m_base_customer_balance_total_refunded));
    }
    if (m_base_gift_cards_amount_isSet) {
        obj.insert(QString("base_gift_cards_amount"), ::OpenAPI::toJsonValue(m_base_gift_cards_amount));
    }
    if (m_base_gift_cards_invoiced_isSet) {
        obj.insert(QString("base_gift_cards_invoiced"), ::OpenAPI::toJsonValue(m_base_gift_cards_invoiced));
    }
    if (m_base_gift_cards_refunded_isSet) {
        obj.insert(QString("base_gift_cards_refunded"), ::OpenAPI::toJsonValue(m_base_gift_cards_refunded));
    }
    if (m_base_reward_currency_amount_isSet) {
        obj.insert(QString("base_reward_currency_amount"), ::OpenAPI::toJsonValue(m_base_reward_currency_amount));
    }
    if (m_company_order_attributes.isSet()) {
        obj.insert(QString("company_order_attributes"), ::OpenAPI::toJsonValue(m_company_order_attributes));
    }
    if (m_converting_from_quote_isSet) {
        obj.insert(QString("converting_from_quote"), ::OpenAPI::toJsonValue(m_converting_from_quote));
    }
    if (m_customer_balance_amount_isSet) {
        obj.insert(QString("customer_balance_amount"), ::OpenAPI::toJsonValue(m_customer_balance_amount));
    }
    if (m_customer_balance_invoiced_isSet) {
        obj.insert(QString("customer_balance_invoiced"), ::OpenAPI::toJsonValue(m_customer_balance_invoiced));
    }
    if (m_customer_balance_refunded_isSet) {
        obj.insert(QString("customer_balance_refunded"), ::OpenAPI::toJsonValue(m_customer_balance_refunded));
    }
    if (m_customer_balance_total_refunded_isSet) {
        obj.insert(QString("customer_balance_total_refunded"), ::OpenAPI::toJsonValue(m_customer_balance_total_refunded));
    }
    if (m_gift_cards.size() > 0) {
        obj.insert(QString("gift_cards"), ::OpenAPI::toJsonValue(m_gift_cards));
    }
    if (m_gift_cards_amount_isSet) {
        obj.insert(QString("gift_cards_amount"), ::OpenAPI::toJsonValue(m_gift_cards_amount));
    }
    if (m_gift_cards_invoiced_isSet) {
        obj.insert(QString("gift_cards_invoiced"), ::OpenAPI::toJsonValue(m_gift_cards_invoiced));
    }
    if (m_gift_cards_refunded_isSet) {
        obj.insert(QString("gift_cards_refunded"), ::OpenAPI::toJsonValue(m_gift_cards_refunded));
    }
    if (m_gift_message.isSet()) {
        obj.insert(QString("gift_message"), ::OpenAPI::toJsonValue(m_gift_message));
    }
    if (m_gw_add_card_isSet) {
        obj.insert(QString("gw_add_card"), ::OpenAPI::toJsonValue(m_gw_add_card));
    }
    if (m_gw_allow_gift_receipt_isSet) {
        obj.insert(QString("gw_allow_gift_receipt"), ::OpenAPI::toJsonValue(m_gw_allow_gift_receipt));
    }
    if (m_gw_base_price_isSet) {
        obj.insert(QString("gw_base_price"), ::OpenAPI::toJsonValue(m_gw_base_price));
    }
    if (m_gw_base_price_incl_tax_isSet) {
        obj.insert(QString("gw_base_price_incl_tax"), ::OpenAPI::toJsonValue(m_gw_base_price_incl_tax));
    }
    if (m_gw_base_price_invoiced_isSet) {
        obj.insert(QString("gw_base_price_invoiced"), ::OpenAPI::toJsonValue(m_gw_base_price_invoiced));
    }
    if (m_gw_base_price_refunded_isSet) {
        obj.insert(QString("gw_base_price_refunded"), ::OpenAPI::toJsonValue(m_gw_base_price_refunded));
    }
    if (m_gw_base_tax_amount_isSet) {
        obj.insert(QString("gw_base_tax_amount"), ::OpenAPI::toJsonValue(m_gw_base_tax_amount));
    }
    if (m_gw_base_tax_amount_invoiced_isSet) {
        obj.insert(QString("gw_base_tax_amount_invoiced"), ::OpenAPI::toJsonValue(m_gw_base_tax_amount_invoiced));
    }
    if (m_gw_base_tax_amount_refunded_isSet) {
        obj.insert(QString("gw_base_tax_amount_refunded"), ::OpenAPI::toJsonValue(m_gw_base_tax_amount_refunded));
    }
    if (m_gw_card_base_price_isSet) {
        obj.insert(QString("gw_card_base_price"), ::OpenAPI::toJsonValue(m_gw_card_base_price));
    }
    if (m_gw_card_base_price_incl_tax_isSet) {
        obj.insert(QString("gw_card_base_price_incl_tax"), ::OpenAPI::toJsonValue(m_gw_card_base_price_incl_tax));
    }
    if (m_gw_card_base_price_invoiced_isSet) {
        obj.insert(QString("gw_card_base_price_invoiced"), ::OpenAPI::toJsonValue(m_gw_card_base_price_invoiced));
    }
    if (m_gw_card_base_price_refunded_isSet) {
        obj.insert(QString("gw_card_base_price_refunded"), ::OpenAPI::toJsonValue(m_gw_card_base_price_refunded));
    }
    if (m_gw_card_base_tax_amount_isSet) {
        obj.insert(QString("gw_card_base_tax_amount"), ::OpenAPI::toJsonValue(m_gw_card_base_tax_amount));
    }
    if (m_gw_card_base_tax_invoiced_isSet) {
        obj.insert(QString("gw_card_base_tax_invoiced"), ::OpenAPI::toJsonValue(m_gw_card_base_tax_invoiced));
    }
    if (m_gw_card_base_tax_refunded_isSet) {
        obj.insert(QString("gw_card_base_tax_refunded"), ::OpenAPI::toJsonValue(m_gw_card_base_tax_refunded));
    }
    if (m_gw_card_price_isSet) {
        obj.insert(QString("gw_card_price"), ::OpenAPI::toJsonValue(m_gw_card_price));
    }
    if (m_gw_card_price_incl_tax_isSet) {
        obj.insert(QString("gw_card_price_incl_tax"), ::OpenAPI::toJsonValue(m_gw_card_price_incl_tax));
    }
    if (m_gw_card_price_invoiced_isSet) {
        obj.insert(QString("gw_card_price_invoiced"), ::OpenAPI::toJsonValue(m_gw_card_price_invoiced));
    }
    if (m_gw_card_price_refunded_isSet) {
        obj.insert(QString("gw_card_price_refunded"), ::OpenAPI::toJsonValue(m_gw_card_price_refunded));
    }
    if (m_gw_card_tax_amount_isSet) {
        obj.insert(QString("gw_card_tax_amount"), ::OpenAPI::toJsonValue(m_gw_card_tax_amount));
    }
    if (m_gw_card_tax_invoiced_isSet) {
        obj.insert(QString("gw_card_tax_invoiced"), ::OpenAPI::toJsonValue(m_gw_card_tax_invoiced));
    }
    if (m_gw_card_tax_refunded_isSet) {
        obj.insert(QString("gw_card_tax_refunded"), ::OpenAPI::toJsonValue(m_gw_card_tax_refunded));
    }
    if (m_gw_id_isSet) {
        obj.insert(QString("gw_id"), ::OpenAPI::toJsonValue(m_gw_id));
    }
    if (m_gw_items_base_price_isSet) {
        obj.insert(QString("gw_items_base_price"), ::OpenAPI::toJsonValue(m_gw_items_base_price));
    }
    if (m_gw_items_base_price_incl_tax_isSet) {
        obj.insert(QString("gw_items_base_price_incl_tax"), ::OpenAPI::toJsonValue(m_gw_items_base_price_incl_tax));
    }
    if (m_gw_items_base_price_invoiced_isSet) {
        obj.insert(QString("gw_items_base_price_invoiced"), ::OpenAPI::toJsonValue(m_gw_items_base_price_invoiced));
    }
    if (m_gw_items_base_price_refunded_isSet) {
        obj.insert(QString("gw_items_base_price_refunded"), ::OpenAPI::toJsonValue(m_gw_items_base_price_refunded));
    }
    if (m_gw_items_base_tax_amount_isSet) {
        obj.insert(QString("gw_items_base_tax_amount"), ::OpenAPI::toJsonValue(m_gw_items_base_tax_amount));
    }
    if (m_gw_items_base_tax_invoiced_isSet) {
        obj.insert(QString("gw_items_base_tax_invoiced"), ::OpenAPI::toJsonValue(m_gw_items_base_tax_invoiced));
    }
    if (m_gw_items_base_tax_refunded_isSet) {
        obj.insert(QString("gw_items_base_tax_refunded"), ::OpenAPI::toJsonValue(m_gw_items_base_tax_refunded));
    }
    if (m_gw_items_price_isSet) {
        obj.insert(QString("gw_items_price"), ::OpenAPI::toJsonValue(m_gw_items_price));
    }
    if (m_gw_items_price_incl_tax_isSet) {
        obj.insert(QString("gw_items_price_incl_tax"), ::OpenAPI::toJsonValue(m_gw_items_price_incl_tax));
    }
    if (m_gw_items_price_invoiced_isSet) {
        obj.insert(QString("gw_items_price_invoiced"), ::OpenAPI::toJsonValue(m_gw_items_price_invoiced));
    }
    if (m_gw_items_price_refunded_isSet) {
        obj.insert(QString("gw_items_price_refunded"), ::OpenAPI::toJsonValue(m_gw_items_price_refunded));
    }
    if (m_gw_items_tax_amount_isSet) {
        obj.insert(QString("gw_items_tax_amount"), ::OpenAPI::toJsonValue(m_gw_items_tax_amount));
    }
    if (m_gw_items_tax_invoiced_isSet) {
        obj.insert(QString("gw_items_tax_invoiced"), ::OpenAPI::toJsonValue(m_gw_items_tax_invoiced));
    }
    if (m_gw_items_tax_refunded_isSet) {
        obj.insert(QString("gw_items_tax_refunded"), ::OpenAPI::toJsonValue(m_gw_items_tax_refunded));
    }
    if (m_gw_price_isSet) {
        obj.insert(QString("gw_price"), ::OpenAPI::toJsonValue(m_gw_price));
    }
    if (m_gw_price_incl_tax_isSet) {
        obj.insert(QString("gw_price_incl_tax"), ::OpenAPI::toJsonValue(m_gw_price_incl_tax));
    }
    if (m_gw_price_invoiced_isSet) {
        obj.insert(QString("gw_price_invoiced"), ::OpenAPI::toJsonValue(m_gw_price_invoiced));
    }
    if (m_gw_price_refunded_isSet) {
        obj.insert(QString("gw_price_refunded"), ::OpenAPI::toJsonValue(m_gw_price_refunded));
    }
    if (m_gw_tax_amount_isSet) {
        obj.insert(QString("gw_tax_amount"), ::OpenAPI::toJsonValue(m_gw_tax_amount));
    }
    if (m_gw_tax_amount_invoiced_isSet) {
        obj.insert(QString("gw_tax_amount_invoiced"), ::OpenAPI::toJsonValue(m_gw_tax_amount_invoiced));
    }
    if (m_gw_tax_amount_refunded_isSet) {
        obj.insert(QString("gw_tax_amount_refunded"), ::OpenAPI::toJsonValue(m_gw_tax_amount_refunded));
    }
    if (m_item_applied_taxes.size() > 0) {
        obj.insert(QString("item_applied_taxes"), ::OpenAPI::toJsonValue(m_item_applied_taxes));
    }
    if (m_payment_additional_info.size() > 0) {
        obj.insert(QString("payment_additional_info"), ::OpenAPI::toJsonValue(m_payment_additional_info));
    }
    if (m_reward_currency_amount_isSet) {
        obj.insert(QString("reward_currency_amount"), ::OpenAPI::toJsonValue(m_reward_currency_amount));
    }
    if (m_reward_points_balance_isSet) {
        obj.insert(QString("reward_points_balance"), ::OpenAPI::toJsonValue(m_reward_points_balance));
    }
    if (m_shipping_assignments.size() > 0) {
        obj.insert(QString("shipping_assignments"), ::OpenAPI::toJsonValue(m_shipping_assignments));
    }
    return obj;
}

QString OAISales_data_order_extension_interface::getAmazonOrderReferenceId() const {
    return m_amazon_order_reference_id;
}
void OAISales_data_order_extension_interface::setAmazonOrderReferenceId(const QString &amazon_order_reference_id) {
    m_amazon_order_reference_id = amazon_order_reference_id;
    m_amazon_order_reference_id_isSet = true;
}

bool OAISales_data_order_extension_interface::is_amazon_order_reference_id_Set() const{
    return m_amazon_order_reference_id_isSet;
}

bool OAISales_data_order_extension_interface::is_amazon_order_reference_id_Valid() const{
    return m_amazon_order_reference_id_isValid;
}

QList<OAITax_data_order_tax_details_applied_tax_interface> OAISales_data_order_extension_interface::getAppliedTaxes() const {
    return m_applied_taxes;
}
void OAISales_data_order_extension_interface::setAppliedTaxes(const QList<OAITax_data_order_tax_details_applied_tax_interface> &applied_taxes) {
    m_applied_taxes = applied_taxes;
    m_applied_taxes_isSet = true;
}

bool OAISales_data_order_extension_interface::is_applied_taxes_Set() const{
    return m_applied_taxes_isSet;
}

bool OAISales_data_order_extension_interface::is_applied_taxes_Valid() const{
    return m_applied_taxes_isValid;
}

double OAISales_data_order_extension_interface::getBaseCustomerBalanceAmount() const {
    return m_base_customer_balance_amount;
}
void OAISales_data_order_extension_interface::setBaseCustomerBalanceAmount(const double &base_customer_balance_amount) {
    m_base_customer_balance_amount = base_customer_balance_amount;
    m_base_customer_balance_amount_isSet = true;
}

bool OAISales_data_order_extension_interface::is_base_customer_balance_amount_Set() const{
    return m_base_customer_balance_amount_isSet;
}

bool OAISales_data_order_extension_interface::is_base_customer_balance_amount_Valid() const{
    return m_base_customer_balance_amount_isValid;
}

double OAISales_data_order_extension_interface::getBaseCustomerBalanceInvoiced() const {
    return m_base_customer_balance_invoiced;
}
void OAISales_data_order_extension_interface::setBaseCustomerBalanceInvoiced(const double &base_customer_balance_invoiced) {
    m_base_customer_balance_invoiced = base_customer_balance_invoiced;
    m_base_customer_balance_invoiced_isSet = true;
}

bool OAISales_data_order_extension_interface::is_base_customer_balance_invoiced_Set() const{
    return m_base_customer_balance_invoiced_isSet;
}

bool OAISales_data_order_extension_interface::is_base_customer_balance_invoiced_Valid() const{
    return m_base_customer_balance_invoiced_isValid;
}

double OAISales_data_order_extension_interface::getBaseCustomerBalanceRefunded() const {
    return m_base_customer_balance_refunded;
}
void OAISales_data_order_extension_interface::setBaseCustomerBalanceRefunded(const double &base_customer_balance_refunded) {
    m_base_customer_balance_refunded = base_customer_balance_refunded;
    m_base_customer_balance_refunded_isSet = true;
}

bool OAISales_data_order_extension_interface::is_base_customer_balance_refunded_Set() const{
    return m_base_customer_balance_refunded_isSet;
}

bool OAISales_data_order_extension_interface::is_base_customer_balance_refunded_Valid() const{
    return m_base_customer_balance_refunded_isValid;
}

double OAISales_data_order_extension_interface::getBaseCustomerBalanceTotalRefunded() const {
    return m_base_customer_balance_total_refunded;
}
void OAISales_data_order_extension_interface::setBaseCustomerBalanceTotalRefunded(const double &base_customer_balance_total_refunded) {
    m_base_customer_balance_total_refunded = base_customer_balance_total_refunded;
    m_base_customer_balance_total_refunded_isSet = true;
}

bool OAISales_data_order_extension_interface::is_base_customer_balance_total_refunded_Set() const{
    return m_base_customer_balance_total_refunded_isSet;
}

bool OAISales_data_order_extension_interface::is_base_customer_balance_total_refunded_Valid() const{
    return m_base_customer_balance_total_refunded_isValid;
}

double OAISales_data_order_extension_interface::getBaseGiftCardsAmount() const {
    return m_base_gift_cards_amount;
}
void OAISales_data_order_extension_interface::setBaseGiftCardsAmount(const double &base_gift_cards_amount) {
    m_base_gift_cards_amount = base_gift_cards_amount;
    m_base_gift_cards_amount_isSet = true;
}

bool OAISales_data_order_extension_interface::is_base_gift_cards_amount_Set() const{
    return m_base_gift_cards_amount_isSet;
}

bool OAISales_data_order_extension_interface::is_base_gift_cards_amount_Valid() const{
    return m_base_gift_cards_amount_isValid;
}

double OAISales_data_order_extension_interface::getBaseGiftCardsInvoiced() const {
    return m_base_gift_cards_invoiced;
}
void OAISales_data_order_extension_interface::setBaseGiftCardsInvoiced(const double &base_gift_cards_invoiced) {
    m_base_gift_cards_invoiced = base_gift_cards_invoiced;
    m_base_gift_cards_invoiced_isSet = true;
}

bool OAISales_data_order_extension_interface::is_base_gift_cards_invoiced_Set() const{
    return m_base_gift_cards_invoiced_isSet;
}

bool OAISales_data_order_extension_interface::is_base_gift_cards_invoiced_Valid() const{
    return m_base_gift_cards_invoiced_isValid;
}

double OAISales_data_order_extension_interface::getBaseGiftCardsRefunded() const {
    return m_base_gift_cards_refunded;
}
void OAISales_data_order_extension_interface::setBaseGiftCardsRefunded(const double &base_gift_cards_refunded) {
    m_base_gift_cards_refunded = base_gift_cards_refunded;
    m_base_gift_cards_refunded_isSet = true;
}

bool OAISales_data_order_extension_interface::is_base_gift_cards_refunded_Set() const{
    return m_base_gift_cards_refunded_isSet;
}

bool OAISales_data_order_extension_interface::is_base_gift_cards_refunded_Valid() const{
    return m_base_gift_cards_refunded_isValid;
}

double OAISales_data_order_extension_interface::getBaseRewardCurrencyAmount() const {
    return m_base_reward_currency_amount;
}
void OAISales_data_order_extension_interface::setBaseRewardCurrencyAmount(const double &base_reward_currency_amount) {
    m_base_reward_currency_amount = base_reward_currency_amount;
    m_base_reward_currency_amount_isSet = true;
}

bool OAISales_data_order_extension_interface::is_base_reward_currency_amount_Set() const{
    return m_base_reward_currency_amount_isSet;
}

bool OAISales_data_order_extension_interface::is_base_reward_currency_amount_Valid() const{
    return m_base_reward_currency_amount_isValid;
}

OAICompany_data_company_order_interface OAISales_data_order_extension_interface::getCompanyOrderAttributes() const {
    return m_company_order_attributes;
}
void OAISales_data_order_extension_interface::setCompanyOrderAttributes(const OAICompany_data_company_order_interface &company_order_attributes) {
    m_company_order_attributes = company_order_attributes;
    m_company_order_attributes_isSet = true;
}

bool OAISales_data_order_extension_interface::is_company_order_attributes_Set() const{
    return m_company_order_attributes_isSet;
}

bool OAISales_data_order_extension_interface::is_company_order_attributes_Valid() const{
    return m_company_order_attributes_isValid;
}

bool OAISales_data_order_extension_interface::isConvertingFromQuote() const {
    return m_converting_from_quote;
}
void OAISales_data_order_extension_interface::setConvertingFromQuote(const bool &converting_from_quote) {
    m_converting_from_quote = converting_from_quote;
    m_converting_from_quote_isSet = true;
}

bool OAISales_data_order_extension_interface::is_converting_from_quote_Set() const{
    return m_converting_from_quote_isSet;
}

bool OAISales_data_order_extension_interface::is_converting_from_quote_Valid() const{
    return m_converting_from_quote_isValid;
}

double OAISales_data_order_extension_interface::getCustomerBalanceAmount() const {
    return m_customer_balance_amount;
}
void OAISales_data_order_extension_interface::setCustomerBalanceAmount(const double &customer_balance_amount) {
    m_customer_balance_amount = customer_balance_amount;
    m_customer_balance_amount_isSet = true;
}

bool OAISales_data_order_extension_interface::is_customer_balance_amount_Set() const{
    return m_customer_balance_amount_isSet;
}

bool OAISales_data_order_extension_interface::is_customer_balance_amount_Valid() const{
    return m_customer_balance_amount_isValid;
}

double OAISales_data_order_extension_interface::getCustomerBalanceInvoiced() const {
    return m_customer_balance_invoiced;
}
void OAISales_data_order_extension_interface::setCustomerBalanceInvoiced(const double &customer_balance_invoiced) {
    m_customer_balance_invoiced = customer_balance_invoiced;
    m_customer_balance_invoiced_isSet = true;
}

bool OAISales_data_order_extension_interface::is_customer_balance_invoiced_Set() const{
    return m_customer_balance_invoiced_isSet;
}

bool OAISales_data_order_extension_interface::is_customer_balance_invoiced_Valid() const{
    return m_customer_balance_invoiced_isValid;
}

double OAISales_data_order_extension_interface::getCustomerBalanceRefunded() const {
    return m_customer_balance_refunded;
}
void OAISales_data_order_extension_interface::setCustomerBalanceRefunded(const double &customer_balance_refunded) {
    m_customer_balance_refunded = customer_balance_refunded;
    m_customer_balance_refunded_isSet = true;
}

bool OAISales_data_order_extension_interface::is_customer_balance_refunded_Set() const{
    return m_customer_balance_refunded_isSet;
}

bool OAISales_data_order_extension_interface::is_customer_balance_refunded_Valid() const{
    return m_customer_balance_refunded_isValid;
}

double OAISales_data_order_extension_interface::getCustomerBalanceTotalRefunded() const {
    return m_customer_balance_total_refunded;
}
void OAISales_data_order_extension_interface::setCustomerBalanceTotalRefunded(const double &customer_balance_total_refunded) {
    m_customer_balance_total_refunded = customer_balance_total_refunded;
    m_customer_balance_total_refunded_isSet = true;
}

bool OAISales_data_order_extension_interface::is_customer_balance_total_refunded_Set() const{
    return m_customer_balance_total_refunded_isSet;
}

bool OAISales_data_order_extension_interface::is_customer_balance_total_refunded_Valid() const{
    return m_customer_balance_total_refunded_isValid;
}

QList<OAIGift_card_account_data_gift_card_interface> OAISales_data_order_extension_interface::getGiftCards() const {
    return m_gift_cards;
}
void OAISales_data_order_extension_interface::setGiftCards(const QList<OAIGift_card_account_data_gift_card_interface> &gift_cards) {
    m_gift_cards = gift_cards;
    m_gift_cards_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gift_cards_Set() const{
    return m_gift_cards_isSet;
}

bool OAISales_data_order_extension_interface::is_gift_cards_Valid() const{
    return m_gift_cards_isValid;
}

double OAISales_data_order_extension_interface::getGiftCardsAmount() const {
    return m_gift_cards_amount;
}
void OAISales_data_order_extension_interface::setGiftCardsAmount(const double &gift_cards_amount) {
    m_gift_cards_amount = gift_cards_amount;
    m_gift_cards_amount_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gift_cards_amount_Set() const{
    return m_gift_cards_amount_isSet;
}

bool OAISales_data_order_extension_interface::is_gift_cards_amount_Valid() const{
    return m_gift_cards_amount_isValid;
}

double OAISales_data_order_extension_interface::getGiftCardsInvoiced() const {
    return m_gift_cards_invoiced;
}
void OAISales_data_order_extension_interface::setGiftCardsInvoiced(const double &gift_cards_invoiced) {
    m_gift_cards_invoiced = gift_cards_invoiced;
    m_gift_cards_invoiced_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gift_cards_invoiced_Set() const{
    return m_gift_cards_invoiced_isSet;
}

bool OAISales_data_order_extension_interface::is_gift_cards_invoiced_Valid() const{
    return m_gift_cards_invoiced_isValid;
}

double OAISales_data_order_extension_interface::getGiftCardsRefunded() const {
    return m_gift_cards_refunded;
}
void OAISales_data_order_extension_interface::setGiftCardsRefunded(const double &gift_cards_refunded) {
    m_gift_cards_refunded = gift_cards_refunded;
    m_gift_cards_refunded_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gift_cards_refunded_Set() const{
    return m_gift_cards_refunded_isSet;
}

bool OAISales_data_order_extension_interface::is_gift_cards_refunded_Valid() const{
    return m_gift_cards_refunded_isValid;
}

OAIGift_message_data_message_interface OAISales_data_order_extension_interface::getGiftMessage() const {
    return m_gift_message;
}
void OAISales_data_order_extension_interface::setGiftMessage(const OAIGift_message_data_message_interface &gift_message) {
    m_gift_message = gift_message;
    m_gift_message_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gift_message_Set() const{
    return m_gift_message_isSet;
}

bool OAISales_data_order_extension_interface::is_gift_message_Valid() const{
    return m_gift_message_isValid;
}

QString OAISales_data_order_extension_interface::getGwAddCard() const {
    return m_gw_add_card;
}
void OAISales_data_order_extension_interface::setGwAddCard(const QString &gw_add_card) {
    m_gw_add_card = gw_add_card;
    m_gw_add_card_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_add_card_Set() const{
    return m_gw_add_card_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_add_card_Valid() const{
    return m_gw_add_card_isValid;
}

QString OAISales_data_order_extension_interface::getGwAllowGiftReceipt() const {
    return m_gw_allow_gift_receipt;
}
void OAISales_data_order_extension_interface::setGwAllowGiftReceipt(const QString &gw_allow_gift_receipt) {
    m_gw_allow_gift_receipt = gw_allow_gift_receipt;
    m_gw_allow_gift_receipt_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_allow_gift_receipt_Set() const{
    return m_gw_allow_gift_receipt_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_allow_gift_receipt_Valid() const{
    return m_gw_allow_gift_receipt_isValid;
}

QString OAISales_data_order_extension_interface::getGwBasePrice() const {
    return m_gw_base_price;
}
void OAISales_data_order_extension_interface::setGwBasePrice(const QString &gw_base_price) {
    m_gw_base_price = gw_base_price;
    m_gw_base_price_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_base_price_Set() const{
    return m_gw_base_price_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_base_price_Valid() const{
    return m_gw_base_price_isValid;
}

QString OAISales_data_order_extension_interface::getGwBasePriceInclTax() const {
    return m_gw_base_price_incl_tax;
}
void OAISales_data_order_extension_interface::setGwBasePriceInclTax(const QString &gw_base_price_incl_tax) {
    m_gw_base_price_incl_tax = gw_base_price_incl_tax;
    m_gw_base_price_incl_tax_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_base_price_incl_tax_Set() const{
    return m_gw_base_price_incl_tax_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_base_price_incl_tax_Valid() const{
    return m_gw_base_price_incl_tax_isValid;
}

QString OAISales_data_order_extension_interface::getGwBasePriceInvoiced() const {
    return m_gw_base_price_invoiced;
}
void OAISales_data_order_extension_interface::setGwBasePriceInvoiced(const QString &gw_base_price_invoiced) {
    m_gw_base_price_invoiced = gw_base_price_invoiced;
    m_gw_base_price_invoiced_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_base_price_invoiced_Set() const{
    return m_gw_base_price_invoiced_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_base_price_invoiced_Valid() const{
    return m_gw_base_price_invoiced_isValid;
}

QString OAISales_data_order_extension_interface::getGwBasePriceRefunded() const {
    return m_gw_base_price_refunded;
}
void OAISales_data_order_extension_interface::setGwBasePriceRefunded(const QString &gw_base_price_refunded) {
    m_gw_base_price_refunded = gw_base_price_refunded;
    m_gw_base_price_refunded_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_base_price_refunded_Set() const{
    return m_gw_base_price_refunded_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_base_price_refunded_Valid() const{
    return m_gw_base_price_refunded_isValid;
}

QString OAISales_data_order_extension_interface::getGwBaseTaxAmount() const {
    return m_gw_base_tax_amount;
}
void OAISales_data_order_extension_interface::setGwBaseTaxAmount(const QString &gw_base_tax_amount) {
    m_gw_base_tax_amount = gw_base_tax_amount;
    m_gw_base_tax_amount_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_base_tax_amount_Set() const{
    return m_gw_base_tax_amount_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_base_tax_amount_Valid() const{
    return m_gw_base_tax_amount_isValid;
}

QString OAISales_data_order_extension_interface::getGwBaseTaxAmountInvoiced() const {
    return m_gw_base_tax_amount_invoiced;
}
void OAISales_data_order_extension_interface::setGwBaseTaxAmountInvoiced(const QString &gw_base_tax_amount_invoiced) {
    m_gw_base_tax_amount_invoiced = gw_base_tax_amount_invoiced;
    m_gw_base_tax_amount_invoiced_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_base_tax_amount_invoiced_Set() const{
    return m_gw_base_tax_amount_invoiced_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_base_tax_amount_invoiced_Valid() const{
    return m_gw_base_tax_amount_invoiced_isValid;
}

QString OAISales_data_order_extension_interface::getGwBaseTaxAmountRefunded() const {
    return m_gw_base_tax_amount_refunded;
}
void OAISales_data_order_extension_interface::setGwBaseTaxAmountRefunded(const QString &gw_base_tax_amount_refunded) {
    m_gw_base_tax_amount_refunded = gw_base_tax_amount_refunded;
    m_gw_base_tax_amount_refunded_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_base_tax_amount_refunded_Set() const{
    return m_gw_base_tax_amount_refunded_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_base_tax_amount_refunded_Valid() const{
    return m_gw_base_tax_amount_refunded_isValid;
}

QString OAISales_data_order_extension_interface::getGwCardBasePrice() const {
    return m_gw_card_base_price;
}
void OAISales_data_order_extension_interface::setGwCardBasePrice(const QString &gw_card_base_price) {
    m_gw_card_base_price = gw_card_base_price;
    m_gw_card_base_price_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_card_base_price_Set() const{
    return m_gw_card_base_price_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_card_base_price_Valid() const{
    return m_gw_card_base_price_isValid;
}

QString OAISales_data_order_extension_interface::getGwCardBasePriceInclTax() const {
    return m_gw_card_base_price_incl_tax;
}
void OAISales_data_order_extension_interface::setGwCardBasePriceInclTax(const QString &gw_card_base_price_incl_tax) {
    m_gw_card_base_price_incl_tax = gw_card_base_price_incl_tax;
    m_gw_card_base_price_incl_tax_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_card_base_price_incl_tax_Set() const{
    return m_gw_card_base_price_incl_tax_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_card_base_price_incl_tax_Valid() const{
    return m_gw_card_base_price_incl_tax_isValid;
}

QString OAISales_data_order_extension_interface::getGwCardBasePriceInvoiced() const {
    return m_gw_card_base_price_invoiced;
}
void OAISales_data_order_extension_interface::setGwCardBasePriceInvoiced(const QString &gw_card_base_price_invoiced) {
    m_gw_card_base_price_invoiced = gw_card_base_price_invoiced;
    m_gw_card_base_price_invoiced_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_card_base_price_invoiced_Set() const{
    return m_gw_card_base_price_invoiced_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_card_base_price_invoiced_Valid() const{
    return m_gw_card_base_price_invoiced_isValid;
}

QString OAISales_data_order_extension_interface::getGwCardBasePriceRefunded() const {
    return m_gw_card_base_price_refunded;
}
void OAISales_data_order_extension_interface::setGwCardBasePriceRefunded(const QString &gw_card_base_price_refunded) {
    m_gw_card_base_price_refunded = gw_card_base_price_refunded;
    m_gw_card_base_price_refunded_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_card_base_price_refunded_Set() const{
    return m_gw_card_base_price_refunded_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_card_base_price_refunded_Valid() const{
    return m_gw_card_base_price_refunded_isValid;
}

QString OAISales_data_order_extension_interface::getGwCardBaseTaxAmount() const {
    return m_gw_card_base_tax_amount;
}
void OAISales_data_order_extension_interface::setGwCardBaseTaxAmount(const QString &gw_card_base_tax_amount) {
    m_gw_card_base_tax_amount = gw_card_base_tax_amount;
    m_gw_card_base_tax_amount_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_card_base_tax_amount_Set() const{
    return m_gw_card_base_tax_amount_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_card_base_tax_amount_Valid() const{
    return m_gw_card_base_tax_amount_isValid;
}

QString OAISales_data_order_extension_interface::getGwCardBaseTaxInvoiced() const {
    return m_gw_card_base_tax_invoiced;
}
void OAISales_data_order_extension_interface::setGwCardBaseTaxInvoiced(const QString &gw_card_base_tax_invoiced) {
    m_gw_card_base_tax_invoiced = gw_card_base_tax_invoiced;
    m_gw_card_base_tax_invoiced_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_card_base_tax_invoiced_Set() const{
    return m_gw_card_base_tax_invoiced_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_card_base_tax_invoiced_Valid() const{
    return m_gw_card_base_tax_invoiced_isValid;
}

QString OAISales_data_order_extension_interface::getGwCardBaseTaxRefunded() const {
    return m_gw_card_base_tax_refunded;
}
void OAISales_data_order_extension_interface::setGwCardBaseTaxRefunded(const QString &gw_card_base_tax_refunded) {
    m_gw_card_base_tax_refunded = gw_card_base_tax_refunded;
    m_gw_card_base_tax_refunded_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_card_base_tax_refunded_Set() const{
    return m_gw_card_base_tax_refunded_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_card_base_tax_refunded_Valid() const{
    return m_gw_card_base_tax_refunded_isValid;
}

QString OAISales_data_order_extension_interface::getGwCardPrice() const {
    return m_gw_card_price;
}
void OAISales_data_order_extension_interface::setGwCardPrice(const QString &gw_card_price) {
    m_gw_card_price = gw_card_price;
    m_gw_card_price_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_card_price_Set() const{
    return m_gw_card_price_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_card_price_Valid() const{
    return m_gw_card_price_isValid;
}

QString OAISales_data_order_extension_interface::getGwCardPriceInclTax() const {
    return m_gw_card_price_incl_tax;
}
void OAISales_data_order_extension_interface::setGwCardPriceInclTax(const QString &gw_card_price_incl_tax) {
    m_gw_card_price_incl_tax = gw_card_price_incl_tax;
    m_gw_card_price_incl_tax_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_card_price_incl_tax_Set() const{
    return m_gw_card_price_incl_tax_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_card_price_incl_tax_Valid() const{
    return m_gw_card_price_incl_tax_isValid;
}

QString OAISales_data_order_extension_interface::getGwCardPriceInvoiced() const {
    return m_gw_card_price_invoiced;
}
void OAISales_data_order_extension_interface::setGwCardPriceInvoiced(const QString &gw_card_price_invoiced) {
    m_gw_card_price_invoiced = gw_card_price_invoiced;
    m_gw_card_price_invoiced_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_card_price_invoiced_Set() const{
    return m_gw_card_price_invoiced_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_card_price_invoiced_Valid() const{
    return m_gw_card_price_invoiced_isValid;
}

QString OAISales_data_order_extension_interface::getGwCardPriceRefunded() const {
    return m_gw_card_price_refunded;
}
void OAISales_data_order_extension_interface::setGwCardPriceRefunded(const QString &gw_card_price_refunded) {
    m_gw_card_price_refunded = gw_card_price_refunded;
    m_gw_card_price_refunded_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_card_price_refunded_Set() const{
    return m_gw_card_price_refunded_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_card_price_refunded_Valid() const{
    return m_gw_card_price_refunded_isValid;
}

QString OAISales_data_order_extension_interface::getGwCardTaxAmount() const {
    return m_gw_card_tax_amount;
}
void OAISales_data_order_extension_interface::setGwCardTaxAmount(const QString &gw_card_tax_amount) {
    m_gw_card_tax_amount = gw_card_tax_amount;
    m_gw_card_tax_amount_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_card_tax_amount_Set() const{
    return m_gw_card_tax_amount_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_card_tax_amount_Valid() const{
    return m_gw_card_tax_amount_isValid;
}

QString OAISales_data_order_extension_interface::getGwCardTaxInvoiced() const {
    return m_gw_card_tax_invoiced;
}
void OAISales_data_order_extension_interface::setGwCardTaxInvoiced(const QString &gw_card_tax_invoiced) {
    m_gw_card_tax_invoiced = gw_card_tax_invoiced;
    m_gw_card_tax_invoiced_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_card_tax_invoiced_Set() const{
    return m_gw_card_tax_invoiced_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_card_tax_invoiced_Valid() const{
    return m_gw_card_tax_invoiced_isValid;
}

QString OAISales_data_order_extension_interface::getGwCardTaxRefunded() const {
    return m_gw_card_tax_refunded;
}
void OAISales_data_order_extension_interface::setGwCardTaxRefunded(const QString &gw_card_tax_refunded) {
    m_gw_card_tax_refunded = gw_card_tax_refunded;
    m_gw_card_tax_refunded_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_card_tax_refunded_Set() const{
    return m_gw_card_tax_refunded_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_card_tax_refunded_Valid() const{
    return m_gw_card_tax_refunded_isValid;
}

QString OAISales_data_order_extension_interface::getGwId() const {
    return m_gw_id;
}
void OAISales_data_order_extension_interface::setGwId(const QString &gw_id) {
    m_gw_id = gw_id;
    m_gw_id_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_id_Set() const{
    return m_gw_id_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_id_Valid() const{
    return m_gw_id_isValid;
}

QString OAISales_data_order_extension_interface::getGwItemsBasePrice() const {
    return m_gw_items_base_price;
}
void OAISales_data_order_extension_interface::setGwItemsBasePrice(const QString &gw_items_base_price) {
    m_gw_items_base_price = gw_items_base_price;
    m_gw_items_base_price_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_items_base_price_Set() const{
    return m_gw_items_base_price_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_items_base_price_Valid() const{
    return m_gw_items_base_price_isValid;
}

QString OAISales_data_order_extension_interface::getGwItemsBasePriceInclTax() const {
    return m_gw_items_base_price_incl_tax;
}
void OAISales_data_order_extension_interface::setGwItemsBasePriceInclTax(const QString &gw_items_base_price_incl_tax) {
    m_gw_items_base_price_incl_tax = gw_items_base_price_incl_tax;
    m_gw_items_base_price_incl_tax_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_items_base_price_incl_tax_Set() const{
    return m_gw_items_base_price_incl_tax_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_items_base_price_incl_tax_Valid() const{
    return m_gw_items_base_price_incl_tax_isValid;
}

QString OAISales_data_order_extension_interface::getGwItemsBasePriceInvoiced() const {
    return m_gw_items_base_price_invoiced;
}
void OAISales_data_order_extension_interface::setGwItemsBasePriceInvoiced(const QString &gw_items_base_price_invoiced) {
    m_gw_items_base_price_invoiced = gw_items_base_price_invoiced;
    m_gw_items_base_price_invoiced_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_items_base_price_invoiced_Set() const{
    return m_gw_items_base_price_invoiced_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_items_base_price_invoiced_Valid() const{
    return m_gw_items_base_price_invoiced_isValid;
}

QString OAISales_data_order_extension_interface::getGwItemsBasePriceRefunded() const {
    return m_gw_items_base_price_refunded;
}
void OAISales_data_order_extension_interface::setGwItemsBasePriceRefunded(const QString &gw_items_base_price_refunded) {
    m_gw_items_base_price_refunded = gw_items_base_price_refunded;
    m_gw_items_base_price_refunded_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_items_base_price_refunded_Set() const{
    return m_gw_items_base_price_refunded_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_items_base_price_refunded_Valid() const{
    return m_gw_items_base_price_refunded_isValid;
}

QString OAISales_data_order_extension_interface::getGwItemsBaseTaxAmount() const {
    return m_gw_items_base_tax_amount;
}
void OAISales_data_order_extension_interface::setGwItemsBaseTaxAmount(const QString &gw_items_base_tax_amount) {
    m_gw_items_base_tax_amount = gw_items_base_tax_amount;
    m_gw_items_base_tax_amount_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_items_base_tax_amount_Set() const{
    return m_gw_items_base_tax_amount_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_items_base_tax_amount_Valid() const{
    return m_gw_items_base_tax_amount_isValid;
}

QString OAISales_data_order_extension_interface::getGwItemsBaseTaxInvoiced() const {
    return m_gw_items_base_tax_invoiced;
}
void OAISales_data_order_extension_interface::setGwItemsBaseTaxInvoiced(const QString &gw_items_base_tax_invoiced) {
    m_gw_items_base_tax_invoiced = gw_items_base_tax_invoiced;
    m_gw_items_base_tax_invoiced_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_items_base_tax_invoiced_Set() const{
    return m_gw_items_base_tax_invoiced_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_items_base_tax_invoiced_Valid() const{
    return m_gw_items_base_tax_invoiced_isValid;
}

QString OAISales_data_order_extension_interface::getGwItemsBaseTaxRefunded() const {
    return m_gw_items_base_tax_refunded;
}
void OAISales_data_order_extension_interface::setGwItemsBaseTaxRefunded(const QString &gw_items_base_tax_refunded) {
    m_gw_items_base_tax_refunded = gw_items_base_tax_refunded;
    m_gw_items_base_tax_refunded_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_items_base_tax_refunded_Set() const{
    return m_gw_items_base_tax_refunded_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_items_base_tax_refunded_Valid() const{
    return m_gw_items_base_tax_refunded_isValid;
}

QString OAISales_data_order_extension_interface::getGwItemsPrice() const {
    return m_gw_items_price;
}
void OAISales_data_order_extension_interface::setGwItemsPrice(const QString &gw_items_price) {
    m_gw_items_price = gw_items_price;
    m_gw_items_price_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_items_price_Set() const{
    return m_gw_items_price_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_items_price_Valid() const{
    return m_gw_items_price_isValid;
}

QString OAISales_data_order_extension_interface::getGwItemsPriceInclTax() const {
    return m_gw_items_price_incl_tax;
}
void OAISales_data_order_extension_interface::setGwItemsPriceInclTax(const QString &gw_items_price_incl_tax) {
    m_gw_items_price_incl_tax = gw_items_price_incl_tax;
    m_gw_items_price_incl_tax_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_items_price_incl_tax_Set() const{
    return m_gw_items_price_incl_tax_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_items_price_incl_tax_Valid() const{
    return m_gw_items_price_incl_tax_isValid;
}

QString OAISales_data_order_extension_interface::getGwItemsPriceInvoiced() const {
    return m_gw_items_price_invoiced;
}
void OAISales_data_order_extension_interface::setGwItemsPriceInvoiced(const QString &gw_items_price_invoiced) {
    m_gw_items_price_invoiced = gw_items_price_invoiced;
    m_gw_items_price_invoiced_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_items_price_invoiced_Set() const{
    return m_gw_items_price_invoiced_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_items_price_invoiced_Valid() const{
    return m_gw_items_price_invoiced_isValid;
}

QString OAISales_data_order_extension_interface::getGwItemsPriceRefunded() const {
    return m_gw_items_price_refunded;
}
void OAISales_data_order_extension_interface::setGwItemsPriceRefunded(const QString &gw_items_price_refunded) {
    m_gw_items_price_refunded = gw_items_price_refunded;
    m_gw_items_price_refunded_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_items_price_refunded_Set() const{
    return m_gw_items_price_refunded_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_items_price_refunded_Valid() const{
    return m_gw_items_price_refunded_isValid;
}

QString OAISales_data_order_extension_interface::getGwItemsTaxAmount() const {
    return m_gw_items_tax_amount;
}
void OAISales_data_order_extension_interface::setGwItemsTaxAmount(const QString &gw_items_tax_amount) {
    m_gw_items_tax_amount = gw_items_tax_amount;
    m_gw_items_tax_amount_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_items_tax_amount_Set() const{
    return m_gw_items_tax_amount_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_items_tax_amount_Valid() const{
    return m_gw_items_tax_amount_isValid;
}

QString OAISales_data_order_extension_interface::getGwItemsTaxInvoiced() const {
    return m_gw_items_tax_invoiced;
}
void OAISales_data_order_extension_interface::setGwItemsTaxInvoiced(const QString &gw_items_tax_invoiced) {
    m_gw_items_tax_invoiced = gw_items_tax_invoiced;
    m_gw_items_tax_invoiced_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_items_tax_invoiced_Set() const{
    return m_gw_items_tax_invoiced_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_items_tax_invoiced_Valid() const{
    return m_gw_items_tax_invoiced_isValid;
}

QString OAISales_data_order_extension_interface::getGwItemsTaxRefunded() const {
    return m_gw_items_tax_refunded;
}
void OAISales_data_order_extension_interface::setGwItemsTaxRefunded(const QString &gw_items_tax_refunded) {
    m_gw_items_tax_refunded = gw_items_tax_refunded;
    m_gw_items_tax_refunded_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_items_tax_refunded_Set() const{
    return m_gw_items_tax_refunded_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_items_tax_refunded_Valid() const{
    return m_gw_items_tax_refunded_isValid;
}

QString OAISales_data_order_extension_interface::getGwPrice() const {
    return m_gw_price;
}
void OAISales_data_order_extension_interface::setGwPrice(const QString &gw_price) {
    m_gw_price = gw_price;
    m_gw_price_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_price_Set() const{
    return m_gw_price_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_price_Valid() const{
    return m_gw_price_isValid;
}

QString OAISales_data_order_extension_interface::getGwPriceInclTax() const {
    return m_gw_price_incl_tax;
}
void OAISales_data_order_extension_interface::setGwPriceInclTax(const QString &gw_price_incl_tax) {
    m_gw_price_incl_tax = gw_price_incl_tax;
    m_gw_price_incl_tax_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_price_incl_tax_Set() const{
    return m_gw_price_incl_tax_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_price_incl_tax_Valid() const{
    return m_gw_price_incl_tax_isValid;
}

QString OAISales_data_order_extension_interface::getGwPriceInvoiced() const {
    return m_gw_price_invoiced;
}
void OAISales_data_order_extension_interface::setGwPriceInvoiced(const QString &gw_price_invoiced) {
    m_gw_price_invoiced = gw_price_invoiced;
    m_gw_price_invoiced_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_price_invoiced_Set() const{
    return m_gw_price_invoiced_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_price_invoiced_Valid() const{
    return m_gw_price_invoiced_isValid;
}

QString OAISales_data_order_extension_interface::getGwPriceRefunded() const {
    return m_gw_price_refunded;
}
void OAISales_data_order_extension_interface::setGwPriceRefunded(const QString &gw_price_refunded) {
    m_gw_price_refunded = gw_price_refunded;
    m_gw_price_refunded_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_price_refunded_Set() const{
    return m_gw_price_refunded_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_price_refunded_Valid() const{
    return m_gw_price_refunded_isValid;
}

QString OAISales_data_order_extension_interface::getGwTaxAmount() const {
    return m_gw_tax_amount;
}
void OAISales_data_order_extension_interface::setGwTaxAmount(const QString &gw_tax_amount) {
    m_gw_tax_amount = gw_tax_amount;
    m_gw_tax_amount_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_tax_amount_Set() const{
    return m_gw_tax_amount_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_tax_amount_Valid() const{
    return m_gw_tax_amount_isValid;
}

QString OAISales_data_order_extension_interface::getGwTaxAmountInvoiced() const {
    return m_gw_tax_amount_invoiced;
}
void OAISales_data_order_extension_interface::setGwTaxAmountInvoiced(const QString &gw_tax_amount_invoiced) {
    m_gw_tax_amount_invoiced = gw_tax_amount_invoiced;
    m_gw_tax_amount_invoiced_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_tax_amount_invoiced_Set() const{
    return m_gw_tax_amount_invoiced_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_tax_amount_invoiced_Valid() const{
    return m_gw_tax_amount_invoiced_isValid;
}

QString OAISales_data_order_extension_interface::getGwTaxAmountRefunded() const {
    return m_gw_tax_amount_refunded;
}
void OAISales_data_order_extension_interface::setGwTaxAmountRefunded(const QString &gw_tax_amount_refunded) {
    m_gw_tax_amount_refunded = gw_tax_amount_refunded;
    m_gw_tax_amount_refunded_isSet = true;
}

bool OAISales_data_order_extension_interface::is_gw_tax_amount_refunded_Set() const{
    return m_gw_tax_amount_refunded_isSet;
}

bool OAISales_data_order_extension_interface::is_gw_tax_amount_refunded_Valid() const{
    return m_gw_tax_amount_refunded_isValid;
}

QList<OAITax_data_order_tax_details_item_interface> OAISales_data_order_extension_interface::getItemAppliedTaxes() const {
    return m_item_applied_taxes;
}
void OAISales_data_order_extension_interface::setItemAppliedTaxes(const QList<OAITax_data_order_tax_details_item_interface> &item_applied_taxes) {
    m_item_applied_taxes = item_applied_taxes;
    m_item_applied_taxes_isSet = true;
}

bool OAISales_data_order_extension_interface::is_item_applied_taxes_Set() const{
    return m_item_applied_taxes_isSet;
}

bool OAISales_data_order_extension_interface::is_item_applied_taxes_Valid() const{
    return m_item_applied_taxes_isValid;
}

QList<OAIPayment_data_payment_additional_info_interface> OAISales_data_order_extension_interface::getPaymentAdditionalInfo() const {
    return m_payment_additional_info;
}
void OAISales_data_order_extension_interface::setPaymentAdditionalInfo(const QList<OAIPayment_data_payment_additional_info_interface> &payment_additional_info) {
    m_payment_additional_info = payment_additional_info;
    m_payment_additional_info_isSet = true;
}

bool OAISales_data_order_extension_interface::is_payment_additional_info_Set() const{
    return m_payment_additional_info_isSet;
}

bool OAISales_data_order_extension_interface::is_payment_additional_info_Valid() const{
    return m_payment_additional_info_isValid;
}

double OAISales_data_order_extension_interface::getRewardCurrencyAmount() const {
    return m_reward_currency_amount;
}
void OAISales_data_order_extension_interface::setRewardCurrencyAmount(const double &reward_currency_amount) {
    m_reward_currency_amount = reward_currency_amount;
    m_reward_currency_amount_isSet = true;
}

bool OAISales_data_order_extension_interface::is_reward_currency_amount_Set() const{
    return m_reward_currency_amount_isSet;
}

bool OAISales_data_order_extension_interface::is_reward_currency_amount_Valid() const{
    return m_reward_currency_amount_isValid;
}

qint32 OAISales_data_order_extension_interface::getRewardPointsBalance() const {
    return m_reward_points_balance;
}
void OAISales_data_order_extension_interface::setRewardPointsBalance(const qint32 &reward_points_balance) {
    m_reward_points_balance = reward_points_balance;
    m_reward_points_balance_isSet = true;
}

bool OAISales_data_order_extension_interface::is_reward_points_balance_Set() const{
    return m_reward_points_balance_isSet;
}

bool OAISales_data_order_extension_interface::is_reward_points_balance_Valid() const{
    return m_reward_points_balance_isValid;
}

QList<OAISales_data_shipping_assignment_interface> OAISales_data_order_extension_interface::getShippingAssignments() const {
    return m_shipping_assignments;
}
void OAISales_data_order_extension_interface::setShippingAssignments(const QList<OAISales_data_shipping_assignment_interface> &shipping_assignments) {
    m_shipping_assignments = shipping_assignments;
    m_shipping_assignments_isSet = true;
}

bool OAISales_data_order_extension_interface::is_shipping_assignments_Set() const{
    return m_shipping_assignments_isSet;
}

bool OAISales_data_order_extension_interface::is_shipping_assignments_Valid() const{
    return m_shipping_assignments_isValid;
}

bool OAISales_data_order_extension_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_amazon_order_reference_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_applied_taxes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_customer_balance_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_customer_balance_invoiced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_customer_balance_refunded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_customer_balance_total_refunded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_gift_cards_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_gift_cards_invoiced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_gift_cards_refunded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_base_reward_currency_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_company_order_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_converting_from_quote_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_balance_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_balance_invoiced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_balance_refunded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_customer_balance_total_refunded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gift_cards.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_gift_cards_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gift_cards_invoiced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gift_cards_refunded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gift_message.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_add_card_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_allow_gift_receipt_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_base_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_base_price_incl_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_base_price_invoiced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_base_price_refunded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_base_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_base_tax_amount_invoiced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_base_tax_amount_refunded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_base_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_base_price_incl_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_base_price_invoiced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_base_price_refunded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_base_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_base_tax_invoiced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_base_tax_refunded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_price_incl_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_price_invoiced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_price_refunded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_tax_invoiced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_card_tax_refunded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_base_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_base_price_incl_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_base_price_invoiced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_base_price_refunded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_base_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_base_tax_invoiced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_base_tax_refunded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_price_incl_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_price_invoiced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_price_refunded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_tax_invoiced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_items_tax_refunded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_price_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_price_incl_tax_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_price_invoiced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_price_refunded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_tax_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_tax_amount_invoiced_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_gw_tax_amount_refunded_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_item_applied_taxes.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_payment_additional_info.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_reward_currency_amount_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_reward_points_balance_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_shipping_assignments.size() > 0) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISales_data_order_extension_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
