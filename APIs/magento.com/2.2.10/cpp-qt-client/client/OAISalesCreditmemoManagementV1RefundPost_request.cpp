/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAISalesCreditmemoManagementV1RefundPost_request.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAISalesCreditmemoManagementV1RefundPost_request::OAISalesCreditmemoManagementV1RefundPost_request(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAISalesCreditmemoManagementV1RefundPost_request::OAISalesCreditmemoManagementV1RefundPost_request() {
    this->initializeModel();
}

OAISalesCreditmemoManagementV1RefundPost_request::~OAISalesCreditmemoManagementV1RefundPost_request() {}

void OAISalesCreditmemoManagementV1RefundPost_request::initializeModel() {

    m_creditmemo_isSet = false;
    m_creditmemo_isValid = false;

    m_offline_requested_isSet = false;
    m_offline_requested_isValid = false;
}

void OAISalesCreditmemoManagementV1RefundPost_request::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAISalesCreditmemoManagementV1RefundPost_request::fromJsonObject(QJsonObject json) {

    m_creditmemo_isValid = ::OpenAPI::fromJsonValue(m_creditmemo, json[QString("creditmemo")]);
    m_creditmemo_isSet = !json[QString("creditmemo")].isNull() && m_creditmemo_isValid;

    m_offline_requested_isValid = ::OpenAPI::fromJsonValue(m_offline_requested, json[QString("offlineRequested")]);
    m_offline_requested_isSet = !json[QString("offlineRequested")].isNull() && m_offline_requested_isValid;
}

QString OAISalesCreditmemoManagementV1RefundPost_request::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAISalesCreditmemoManagementV1RefundPost_request::asJsonObject() const {
    QJsonObject obj;
    if (m_creditmemo.isSet()) {
        obj.insert(QString("creditmemo"), ::OpenAPI::toJsonValue(m_creditmemo));
    }
    if (m_offline_requested_isSet) {
        obj.insert(QString("offlineRequested"), ::OpenAPI::toJsonValue(m_offline_requested));
    }
    return obj;
}

OAISales_data_creditmemo_interface OAISalesCreditmemoManagementV1RefundPost_request::getCreditmemo() const {
    return m_creditmemo;
}
void OAISalesCreditmemoManagementV1RefundPost_request::setCreditmemo(const OAISales_data_creditmemo_interface &creditmemo) {
    m_creditmemo = creditmemo;
    m_creditmemo_isSet = true;
}

bool OAISalesCreditmemoManagementV1RefundPost_request::is_creditmemo_Set() const{
    return m_creditmemo_isSet;
}

bool OAISalesCreditmemoManagementV1RefundPost_request::is_creditmemo_Valid() const{
    return m_creditmemo_isValid;
}

bool OAISalesCreditmemoManagementV1RefundPost_request::isOfflineRequested() const {
    return m_offline_requested;
}
void OAISalesCreditmemoManagementV1RefundPost_request::setOfflineRequested(const bool &offline_requested) {
    m_offline_requested = offline_requested;
    m_offline_requested_isSet = true;
}

bool OAISalesCreditmemoManagementV1RefundPost_request::is_offline_requested_Set() const{
    return m_offline_requested_isSet;
}

bool OAISalesCreditmemoManagementV1RefundPost_request::is_offline_requested_Valid() const{
    return m_offline_requested_isValid;
}

bool OAISalesCreditmemoManagementV1RefundPost_request::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_creditmemo.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_offline_requested_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAISalesCreditmemoManagementV1RefundPost_request::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_creditmemo_isValid && true;
}

} // namespace OpenAPI
