/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGift_message_data_message_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGift_message_data_message_interface::OAIGift_message_data_message_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGift_message_data_message_interface::OAIGift_message_data_message_interface() {
    this->initializeModel();
}

OAIGift_message_data_message_interface::~OAIGift_message_data_message_interface() {}

void OAIGift_message_data_message_interface::initializeModel() {

    m_customer_id_isSet = false;
    m_customer_id_isValid = false;

    m_extension_attributes_isSet = false;
    m_extension_attributes_isValid = false;

    m_gift_message_id_isSet = false;
    m_gift_message_id_isValid = false;

    m_message_isSet = false;
    m_message_isValid = false;

    m_recipient_isSet = false;
    m_recipient_isValid = false;

    m_sender_isSet = false;
    m_sender_isValid = false;
}

void OAIGift_message_data_message_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGift_message_data_message_interface::fromJsonObject(QJsonObject json) {

    m_customer_id_isValid = ::OpenAPI::fromJsonValue(m_customer_id, json[QString("customer_id")]);
    m_customer_id_isSet = !json[QString("customer_id")].isNull() && m_customer_id_isValid;

    m_extension_attributes_isValid = ::OpenAPI::fromJsonValue(m_extension_attributes, json[QString("extension_attributes")]);
    m_extension_attributes_isSet = !json[QString("extension_attributes")].isNull() && m_extension_attributes_isValid;

    m_gift_message_id_isValid = ::OpenAPI::fromJsonValue(m_gift_message_id, json[QString("gift_message_id")]);
    m_gift_message_id_isSet = !json[QString("gift_message_id")].isNull() && m_gift_message_id_isValid;

    m_message_isValid = ::OpenAPI::fromJsonValue(m_message, json[QString("message")]);
    m_message_isSet = !json[QString("message")].isNull() && m_message_isValid;

    m_recipient_isValid = ::OpenAPI::fromJsonValue(m_recipient, json[QString("recipient")]);
    m_recipient_isSet = !json[QString("recipient")].isNull() && m_recipient_isValid;

    m_sender_isValid = ::OpenAPI::fromJsonValue(m_sender, json[QString("sender")]);
    m_sender_isSet = !json[QString("sender")].isNull() && m_sender_isValid;
}

QString OAIGift_message_data_message_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGift_message_data_message_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_customer_id_isSet) {
        obj.insert(QString("customer_id"), ::OpenAPI::toJsonValue(m_customer_id));
    }
    if (m_extension_attributes.isSet()) {
        obj.insert(QString("extension_attributes"), ::OpenAPI::toJsonValue(m_extension_attributes));
    }
    if (m_gift_message_id_isSet) {
        obj.insert(QString("gift_message_id"), ::OpenAPI::toJsonValue(m_gift_message_id));
    }
    if (m_message_isSet) {
        obj.insert(QString("message"), ::OpenAPI::toJsonValue(m_message));
    }
    if (m_recipient_isSet) {
        obj.insert(QString("recipient"), ::OpenAPI::toJsonValue(m_recipient));
    }
    if (m_sender_isSet) {
        obj.insert(QString("sender"), ::OpenAPI::toJsonValue(m_sender));
    }
    return obj;
}

qint32 OAIGift_message_data_message_interface::getCustomerId() const {
    return m_customer_id;
}
void OAIGift_message_data_message_interface::setCustomerId(const qint32 &customer_id) {
    m_customer_id = customer_id;
    m_customer_id_isSet = true;
}

bool OAIGift_message_data_message_interface::is_customer_id_Set() const{
    return m_customer_id_isSet;
}

bool OAIGift_message_data_message_interface::is_customer_id_Valid() const{
    return m_customer_id_isValid;
}

OAIGift_message_data_message_extension_interface OAIGift_message_data_message_interface::getExtensionAttributes() const {
    return m_extension_attributes;
}
void OAIGift_message_data_message_interface::setExtensionAttributes(const OAIGift_message_data_message_extension_interface &extension_attributes) {
    m_extension_attributes = extension_attributes;
    m_extension_attributes_isSet = true;
}

bool OAIGift_message_data_message_interface::is_extension_attributes_Set() const{
    return m_extension_attributes_isSet;
}

bool OAIGift_message_data_message_interface::is_extension_attributes_Valid() const{
    return m_extension_attributes_isValid;
}

qint32 OAIGift_message_data_message_interface::getGiftMessageId() const {
    return m_gift_message_id;
}
void OAIGift_message_data_message_interface::setGiftMessageId(const qint32 &gift_message_id) {
    m_gift_message_id = gift_message_id;
    m_gift_message_id_isSet = true;
}

bool OAIGift_message_data_message_interface::is_gift_message_id_Set() const{
    return m_gift_message_id_isSet;
}

bool OAIGift_message_data_message_interface::is_gift_message_id_Valid() const{
    return m_gift_message_id_isValid;
}

QString OAIGift_message_data_message_interface::getMessage() const {
    return m_message;
}
void OAIGift_message_data_message_interface::setMessage(const QString &message) {
    m_message = message;
    m_message_isSet = true;
}

bool OAIGift_message_data_message_interface::is_message_Set() const{
    return m_message_isSet;
}

bool OAIGift_message_data_message_interface::is_message_Valid() const{
    return m_message_isValid;
}

QString OAIGift_message_data_message_interface::getRecipient() const {
    return m_recipient;
}
void OAIGift_message_data_message_interface::setRecipient(const QString &recipient) {
    m_recipient = recipient;
    m_recipient_isSet = true;
}

bool OAIGift_message_data_message_interface::is_recipient_Set() const{
    return m_recipient_isSet;
}

bool OAIGift_message_data_message_interface::is_recipient_Valid() const{
    return m_recipient_isValid;
}

QString OAIGift_message_data_message_interface::getSender() const {
    return m_sender;
}
void OAIGift_message_data_message_interface::setSender(const QString &sender) {
    m_sender = sender;
    m_sender_isSet = true;
}

bool OAIGift_message_data_message_interface::is_sender_Set() const{
    return m_sender_isSet;
}

bool OAIGift_message_data_message_interface::is_sender_Valid() const{
    return m_sender_isValid;
}

bool OAIGift_message_data_message_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_customer_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_extension_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_gift_message_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_message_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_recipient_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_sender_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGift_message_data_message_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_message_isValid && m_recipient_isValid && m_sender_isValid && true;
}

} // namespace OpenAPI
