/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIDirectory_data_country_information_interface.h
 *
 * Country Information interface.
 */

#ifndef OAIDirectory_data_country_information_interface_H
#define OAIDirectory_data_country_information_interface_H

#include <QJsonObject>

#include "OAIDirectory_data_region_information_interface.h"
#include "OAIObject.h"
#include <QList>
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {
class OAIDirectory_data_region_information_interface;

class OAIDirectory_data_country_information_interface : public OAIObject {
public:
    OAIDirectory_data_country_information_interface();
    OAIDirectory_data_country_information_interface(QString json);
    ~OAIDirectory_data_country_information_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QList<OAIDirectory_data_region_information_interface> getAvailableRegions() const;
    void setAvailableRegions(const QList<OAIDirectory_data_region_information_interface> &available_regions);
    bool is_available_regions_Set() const;
    bool is_available_regions_Valid() const;

    OAIObject getExtensionAttributes() const;
    void setExtensionAttributes(const OAIObject &extension_attributes);
    bool is_extension_attributes_Set() const;
    bool is_extension_attributes_Valid() const;

    QString getFullNameEnglish() const;
    void setFullNameEnglish(const QString &full_name_english);
    bool is_full_name_english_Set() const;
    bool is_full_name_english_Valid() const;

    QString getFullNameLocale() const;
    void setFullNameLocale(const QString &full_name_locale);
    bool is_full_name_locale_Set() const;
    bool is_full_name_locale_Valid() const;

    QString getId() const;
    void setId(const QString &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getThreeLetterAbbreviation() const;
    void setThreeLetterAbbreviation(const QString &three_letter_abbreviation);
    bool is_three_letter_abbreviation_Set() const;
    bool is_three_letter_abbreviation_Valid() const;

    QString getTwoLetterAbbreviation() const;
    void setTwoLetterAbbreviation(const QString &two_letter_abbreviation);
    bool is_two_letter_abbreviation_Set() const;
    bool is_two_letter_abbreviation_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QList<OAIDirectory_data_region_information_interface> m_available_regions;
    bool m_available_regions_isSet;
    bool m_available_regions_isValid;

    OAIObject m_extension_attributes;
    bool m_extension_attributes_isSet;
    bool m_extension_attributes_isValid;

    QString m_full_name_english;
    bool m_full_name_english_isSet;
    bool m_full_name_english_isValid;

    QString m_full_name_locale;
    bool m_full_name_locale_isSet;
    bool m_full_name_locale_isValid;

    QString m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_three_letter_abbreviation;
    bool m_three_letter_abbreviation_isSet;
    bool m_three_letter_abbreviation_isValid;

    QString m_two_letter_abbreviation;
    bool m_two_letter_abbreviation_isSet;
    bool m_two_letter_abbreviation_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIDirectory_data_country_information_interface)

#endif // OAIDirectory_data_country_information_interface_H
