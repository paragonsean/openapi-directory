/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * OAIStore_data_store_config_interface.h
 *
 * StoreConfig interface
 */

#ifndef OAIStore_data_store_config_interface_H
#define OAIStore_data_store_config_interface_H

#include <QJsonObject>

#include "OAIObject.h"
#include <QString>

#include "OAIEnum.h"
#include "OAIObject.h"

namespace OpenAPI {

class OAIStore_data_store_config_interface : public OAIObject {
public:
    OAIStore_data_store_config_interface();
    OAIStore_data_store_config_interface(QString json);
    ~OAIStore_data_store_config_interface() override;

    QString asJson() const override;
    QJsonObject asJsonObject() const override;
    void fromJsonObject(QJsonObject json) override;
    void fromJson(QString jsonString) override;

    QString getBaseCurrencyCode() const;
    void setBaseCurrencyCode(const QString &base_currency_code);
    bool is_base_currency_code_Set() const;
    bool is_base_currency_code_Valid() const;

    QString getBaseLinkUrl() const;
    void setBaseLinkUrl(const QString &base_link_url);
    bool is_base_link_url_Set() const;
    bool is_base_link_url_Valid() const;

    QString getBaseMediaUrl() const;
    void setBaseMediaUrl(const QString &base_media_url);
    bool is_base_media_url_Set() const;
    bool is_base_media_url_Valid() const;

    QString getBaseStaticUrl() const;
    void setBaseStaticUrl(const QString &base_static_url);
    bool is_base_static_url_Set() const;
    bool is_base_static_url_Valid() const;

    QString getBaseUrl() const;
    void setBaseUrl(const QString &base_url);
    bool is_base_url_Set() const;
    bool is_base_url_Valid() const;

    QString getCode() const;
    void setCode(const QString &code);
    bool is_code_Set() const;
    bool is_code_Valid() const;

    QString getDefaultDisplayCurrencyCode() const;
    void setDefaultDisplayCurrencyCode(const QString &default_display_currency_code);
    bool is_default_display_currency_code_Set() const;
    bool is_default_display_currency_code_Valid() const;

    OAIObject getExtensionAttributes() const;
    void setExtensionAttributes(const OAIObject &extension_attributes);
    bool is_extension_attributes_Set() const;
    bool is_extension_attributes_Valid() const;

    qint32 getId() const;
    void setId(const qint32 &id);
    bool is_id_Set() const;
    bool is_id_Valid() const;

    QString getLocale() const;
    void setLocale(const QString &locale);
    bool is_locale_Set() const;
    bool is_locale_Valid() const;

    QString getSecureBaseLinkUrl() const;
    void setSecureBaseLinkUrl(const QString &secure_base_link_url);
    bool is_secure_base_link_url_Set() const;
    bool is_secure_base_link_url_Valid() const;

    QString getSecureBaseMediaUrl() const;
    void setSecureBaseMediaUrl(const QString &secure_base_media_url);
    bool is_secure_base_media_url_Set() const;
    bool is_secure_base_media_url_Valid() const;

    QString getSecureBaseStaticUrl() const;
    void setSecureBaseStaticUrl(const QString &secure_base_static_url);
    bool is_secure_base_static_url_Set() const;
    bool is_secure_base_static_url_Valid() const;

    QString getSecureBaseUrl() const;
    void setSecureBaseUrl(const QString &secure_base_url);
    bool is_secure_base_url_Set() const;
    bool is_secure_base_url_Valid() const;

    QString getTimezone() const;
    void setTimezone(const QString &timezone);
    bool is_timezone_Set() const;
    bool is_timezone_Valid() const;

    qint32 getWebsiteId() const;
    void setWebsiteId(const qint32 &website_id);
    bool is_website_id_Set() const;
    bool is_website_id_Valid() const;

    QString getWeightUnit() const;
    void setWeightUnit(const QString &weight_unit);
    bool is_weight_unit_Set() const;
    bool is_weight_unit_Valid() const;

    virtual bool isSet() const override;
    virtual bool isValid() const override;

private:
    void initializeModel();

    QString m_base_currency_code;
    bool m_base_currency_code_isSet;
    bool m_base_currency_code_isValid;

    QString m_base_link_url;
    bool m_base_link_url_isSet;
    bool m_base_link_url_isValid;

    QString m_base_media_url;
    bool m_base_media_url_isSet;
    bool m_base_media_url_isValid;

    QString m_base_static_url;
    bool m_base_static_url_isSet;
    bool m_base_static_url_isValid;

    QString m_base_url;
    bool m_base_url_isSet;
    bool m_base_url_isValid;

    QString m_code;
    bool m_code_isSet;
    bool m_code_isValid;

    QString m_default_display_currency_code;
    bool m_default_display_currency_code_isSet;
    bool m_default_display_currency_code_isValid;

    OAIObject m_extension_attributes;
    bool m_extension_attributes_isSet;
    bool m_extension_attributes_isValid;

    qint32 m_id;
    bool m_id_isSet;
    bool m_id_isValid;

    QString m_locale;
    bool m_locale_isSet;
    bool m_locale_isValid;

    QString m_secure_base_link_url;
    bool m_secure_base_link_url_isSet;
    bool m_secure_base_link_url_isValid;

    QString m_secure_base_media_url;
    bool m_secure_base_media_url_isSet;
    bool m_secure_base_media_url_isValid;

    QString m_secure_base_static_url;
    bool m_secure_base_static_url_isSet;
    bool m_secure_base_static_url_isValid;

    QString m_secure_base_url;
    bool m_secure_base_url_isSet;
    bool m_secure_base_url_isValid;

    QString m_timezone;
    bool m_timezone_isSet;
    bool m_timezone_isValid;

    qint32 m_website_id;
    bool m_website_id_isSet;
    bool m_website_id_isValid;

    QString m_weight_unit;
    bool m_weight_unit_isSet;
    bool m_weight_unit_isValid;
};

} // namespace OpenAPI

Q_DECLARE_METATYPE(OpenAPI::OAIStore_data_store_config_interface)

#endif // OAIStore_data_store_config_interface_H
