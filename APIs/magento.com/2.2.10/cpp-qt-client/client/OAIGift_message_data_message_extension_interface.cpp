/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIGift_message_data_message_extension_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIGift_message_data_message_extension_interface::OAIGift_message_data_message_extension_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIGift_message_data_message_extension_interface::OAIGift_message_data_message_extension_interface() {
    this->initializeModel();
}

OAIGift_message_data_message_extension_interface::~OAIGift_message_data_message_extension_interface() {}

void OAIGift_message_data_message_extension_interface::initializeModel() {

    m_entity_id_isSet = false;
    m_entity_id_isValid = false;

    m_entity_type_isSet = false;
    m_entity_type_isValid = false;

    m_wrapping_add_printed_card_isSet = false;
    m_wrapping_add_printed_card_isValid = false;

    m_wrapping_allow_gift_receipt_isSet = false;
    m_wrapping_allow_gift_receipt_isValid = false;

    m_wrapping_id_isSet = false;
    m_wrapping_id_isValid = false;
}

void OAIGift_message_data_message_extension_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIGift_message_data_message_extension_interface::fromJsonObject(QJsonObject json) {

    m_entity_id_isValid = ::OpenAPI::fromJsonValue(m_entity_id, json[QString("entity_id")]);
    m_entity_id_isSet = !json[QString("entity_id")].isNull() && m_entity_id_isValid;

    m_entity_type_isValid = ::OpenAPI::fromJsonValue(m_entity_type, json[QString("entity_type")]);
    m_entity_type_isSet = !json[QString("entity_type")].isNull() && m_entity_type_isValid;

    m_wrapping_add_printed_card_isValid = ::OpenAPI::fromJsonValue(m_wrapping_add_printed_card, json[QString("wrapping_add_printed_card")]);
    m_wrapping_add_printed_card_isSet = !json[QString("wrapping_add_printed_card")].isNull() && m_wrapping_add_printed_card_isValid;

    m_wrapping_allow_gift_receipt_isValid = ::OpenAPI::fromJsonValue(m_wrapping_allow_gift_receipt, json[QString("wrapping_allow_gift_receipt")]);
    m_wrapping_allow_gift_receipt_isSet = !json[QString("wrapping_allow_gift_receipt")].isNull() && m_wrapping_allow_gift_receipt_isValid;

    m_wrapping_id_isValid = ::OpenAPI::fromJsonValue(m_wrapping_id, json[QString("wrapping_id")]);
    m_wrapping_id_isSet = !json[QString("wrapping_id")].isNull() && m_wrapping_id_isValid;
}

QString OAIGift_message_data_message_extension_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIGift_message_data_message_extension_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_entity_id_isSet) {
        obj.insert(QString("entity_id"), ::OpenAPI::toJsonValue(m_entity_id));
    }
    if (m_entity_type_isSet) {
        obj.insert(QString("entity_type"), ::OpenAPI::toJsonValue(m_entity_type));
    }
    if (m_wrapping_add_printed_card_isSet) {
        obj.insert(QString("wrapping_add_printed_card"), ::OpenAPI::toJsonValue(m_wrapping_add_printed_card));
    }
    if (m_wrapping_allow_gift_receipt_isSet) {
        obj.insert(QString("wrapping_allow_gift_receipt"), ::OpenAPI::toJsonValue(m_wrapping_allow_gift_receipt));
    }
    if (m_wrapping_id_isSet) {
        obj.insert(QString("wrapping_id"), ::OpenAPI::toJsonValue(m_wrapping_id));
    }
    return obj;
}

QString OAIGift_message_data_message_extension_interface::getEntityId() const {
    return m_entity_id;
}
void OAIGift_message_data_message_extension_interface::setEntityId(const QString &entity_id) {
    m_entity_id = entity_id;
    m_entity_id_isSet = true;
}

bool OAIGift_message_data_message_extension_interface::is_entity_id_Set() const{
    return m_entity_id_isSet;
}

bool OAIGift_message_data_message_extension_interface::is_entity_id_Valid() const{
    return m_entity_id_isValid;
}

QString OAIGift_message_data_message_extension_interface::getEntityType() const {
    return m_entity_type;
}
void OAIGift_message_data_message_extension_interface::setEntityType(const QString &entity_type) {
    m_entity_type = entity_type;
    m_entity_type_isSet = true;
}

bool OAIGift_message_data_message_extension_interface::is_entity_type_Set() const{
    return m_entity_type_isSet;
}

bool OAIGift_message_data_message_extension_interface::is_entity_type_Valid() const{
    return m_entity_type_isValid;
}

bool OAIGift_message_data_message_extension_interface::isWrappingAddPrintedCard() const {
    return m_wrapping_add_printed_card;
}
void OAIGift_message_data_message_extension_interface::setWrappingAddPrintedCard(const bool &wrapping_add_printed_card) {
    m_wrapping_add_printed_card = wrapping_add_printed_card;
    m_wrapping_add_printed_card_isSet = true;
}

bool OAIGift_message_data_message_extension_interface::is_wrapping_add_printed_card_Set() const{
    return m_wrapping_add_printed_card_isSet;
}

bool OAIGift_message_data_message_extension_interface::is_wrapping_add_printed_card_Valid() const{
    return m_wrapping_add_printed_card_isValid;
}

bool OAIGift_message_data_message_extension_interface::isWrappingAllowGiftReceipt() const {
    return m_wrapping_allow_gift_receipt;
}
void OAIGift_message_data_message_extension_interface::setWrappingAllowGiftReceipt(const bool &wrapping_allow_gift_receipt) {
    m_wrapping_allow_gift_receipt = wrapping_allow_gift_receipt;
    m_wrapping_allow_gift_receipt_isSet = true;
}

bool OAIGift_message_data_message_extension_interface::is_wrapping_allow_gift_receipt_Set() const{
    return m_wrapping_allow_gift_receipt_isSet;
}

bool OAIGift_message_data_message_extension_interface::is_wrapping_allow_gift_receipt_Valid() const{
    return m_wrapping_allow_gift_receipt_isValid;
}

qint32 OAIGift_message_data_message_extension_interface::getWrappingId() const {
    return m_wrapping_id;
}
void OAIGift_message_data_message_extension_interface::setWrappingId(const qint32 &wrapping_id) {
    m_wrapping_id = wrapping_id;
    m_wrapping_id_isSet = true;
}

bool OAIGift_message_data_message_extension_interface::is_wrapping_id_Set() const{
    return m_wrapping_id_isSet;
}

bool OAIGift_message_data_message_extension_interface::is_wrapping_id_Valid() const{
    return m_wrapping_id_isValid;
}

bool OAIGift_message_data_message_extension_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_entity_id_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_entity_type_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wrapping_add_printed_card_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wrapping_allow_gift_receipt_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_wrapping_id_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIGift_message_data_message_extension_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return true;
}

} // namespace OpenAPI
