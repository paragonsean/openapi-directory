/**
 * Magento B2B
 * Magento Commerce is the leading provider of open omnichannel innovation.
 *
 * The version of the OpenAPI document: 2.2.10
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

#include "OAIQuote_data_payment_interface.h"

#include <QDebug>
#include <QJsonArray>
#include <QJsonDocument>
#include <QObject>

#include "OAIHelpers.h"

namespace OpenAPI {

OAIQuote_data_payment_interface::OAIQuote_data_payment_interface(QString json) {
    this->initializeModel();
    this->fromJson(json);
}

OAIQuote_data_payment_interface::OAIQuote_data_payment_interface() {
    this->initializeModel();
}

OAIQuote_data_payment_interface::~OAIQuote_data_payment_interface() {}

void OAIQuote_data_payment_interface::initializeModel() {

    m_additional_data_isSet = false;
    m_additional_data_isValid = false;

    m_extension_attributes_isSet = false;
    m_extension_attributes_isValid = false;

    m_method_isSet = false;
    m_method_isValid = false;

    m_po_number_isSet = false;
    m_po_number_isValid = false;
}

void OAIQuote_data_payment_interface::fromJson(QString jsonString) {
    QByteArray array(jsonString.toStdString().c_str());
    QJsonDocument doc = QJsonDocument::fromJson(array);
    QJsonObject jsonObject = doc.object();
    this->fromJsonObject(jsonObject);
}

void OAIQuote_data_payment_interface::fromJsonObject(QJsonObject json) {

    m_additional_data_isValid = ::OpenAPI::fromJsonValue(m_additional_data, json[QString("additional_data")]);
    m_additional_data_isSet = !json[QString("additional_data")].isNull() && m_additional_data_isValid;

    m_extension_attributes_isValid = ::OpenAPI::fromJsonValue(m_extension_attributes, json[QString("extension_attributes")]);
    m_extension_attributes_isSet = !json[QString("extension_attributes")].isNull() && m_extension_attributes_isValid;

    m_method_isValid = ::OpenAPI::fromJsonValue(m_method, json[QString("method")]);
    m_method_isSet = !json[QString("method")].isNull() && m_method_isValid;

    m_po_number_isValid = ::OpenAPI::fromJsonValue(m_po_number, json[QString("po_number")]);
    m_po_number_isSet = !json[QString("po_number")].isNull() && m_po_number_isValid;
}

QString OAIQuote_data_payment_interface::asJson() const {
    QJsonObject obj = this->asJsonObject();
    QJsonDocument doc(obj);
    QByteArray bytes = doc.toJson();
    return QString(bytes);
}

QJsonObject OAIQuote_data_payment_interface::asJsonObject() const {
    QJsonObject obj;
    if (m_additional_data.size() > 0) {
        obj.insert(QString("additional_data"), ::OpenAPI::toJsonValue(m_additional_data));
    }
    if (m_extension_attributes.isSet()) {
        obj.insert(QString("extension_attributes"), ::OpenAPI::toJsonValue(m_extension_attributes));
    }
    if (m_method_isSet) {
        obj.insert(QString("method"), ::OpenAPI::toJsonValue(m_method));
    }
    if (m_po_number_isSet) {
        obj.insert(QString("po_number"), ::OpenAPI::toJsonValue(m_po_number));
    }
    return obj;
}

QList<QString> OAIQuote_data_payment_interface::getAdditionalData() const {
    return m_additional_data;
}
void OAIQuote_data_payment_interface::setAdditionalData(const QList<QString> &additional_data) {
    m_additional_data = additional_data;
    m_additional_data_isSet = true;
}

bool OAIQuote_data_payment_interface::is_additional_data_Set() const{
    return m_additional_data_isSet;
}

bool OAIQuote_data_payment_interface::is_additional_data_Valid() const{
    return m_additional_data_isValid;
}

OAIQuote_data_payment_extension_interface OAIQuote_data_payment_interface::getExtensionAttributes() const {
    return m_extension_attributes;
}
void OAIQuote_data_payment_interface::setExtensionAttributes(const OAIQuote_data_payment_extension_interface &extension_attributes) {
    m_extension_attributes = extension_attributes;
    m_extension_attributes_isSet = true;
}

bool OAIQuote_data_payment_interface::is_extension_attributes_Set() const{
    return m_extension_attributes_isSet;
}

bool OAIQuote_data_payment_interface::is_extension_attributes_Valid() const{
    return m_extension_attributes_isValid;
}

QString OAIQuote_data_payment_interface::getMethod() const {
    return m_method;
}
void OAIQuote_data_payment_interface::setMethod(const QString &method) {
    m_method = method;
    m_method_isSet = true;
}

bool OAIQuote_data_payment_interface::is_method_Set() const{
    return m_method_isSet;
}

bool OAIQuote_data_payment_interface::is_method_Valid() const{
    return m_method_isValid;
}

QString OAIQuote_data_payment_interface::getPoNumber() const {
    return m_po_number;
}
void OAIQuote_data_payment_interface::setPoNumber(const QString &po_number) {
    m_po_number = po_number;
    m_po_number_isSet = true;
}

bool OAIQuote_data_payment_interface::is_po_number_Set() const{
    return m_po_number_isSet;
}

bool OAIQuote_data_payment_interface::is_po_number_Valid() const{
    return m_po_number_isValid;
}

bool OAIQuote_data_payment_interface::isSet() const {
    bool isObjectUpdated = false;
    do {
        if (m_additional_data.size() > 0) {
            isObjectUpdated = true;
            break;
        }

        if (m_extension_attributes.isSet()) {
            isObjectUpdated = true;
            break;
        }

        if (m_method_isSet) {
            isObjectUpdated = true;
            break;
        }

        if (m_po_number_isSet) {
            isObjectUpdated = true;
            break;
        }
    } while (false);
    return isObjectUpdated;
}

bool OAIQuote_data_payment_interface::isValid() const {
    // only required properties are required for the object to be considered valid
    return m_method_isValid && true;
}

} // namespace OpenAPI
