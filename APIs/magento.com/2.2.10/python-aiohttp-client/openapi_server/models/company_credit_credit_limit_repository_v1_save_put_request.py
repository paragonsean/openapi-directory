# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.company_credit_data_credit_limit_interface import CompanyCreditDataCreditLimitInterface
from openapi_server import util


class CompanyCreditCreditLimitRepositoryV1SavePutRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, credit_limit: CompanyCreditDataCreditLimitInterface=None):
        """CompanyCreditCreditLimitRepositoryV1SavePutRequest - a model defined in OpenAPI

        :param credit_limit: The credit_limit of this CompanyCreditCreditLimitRepositoryV1SavePutRequest.
        """
        self.openapi_types = {
            'credit_limit': CompanyCreditDataCreditLimitInterface
        }

        self.attribute_map = {
            'credit_limit': 'creditLimit'
        }

        self._credit_limit = credit_limit

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CompanyCreditCreditLimitRepositoryV1SavePutRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The companyCreditCreditLimitRepositoryV1SavePut_request of this CompanyCreditCreditLimitRepositoryV1SavePutRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def credit_limit(self):
        """Gets the credit_limit of this CompanyCreditCreditLimitRepositoryV1SavePutRequest.


        :return: The credit_limit of this CompanyCreditCreditLimitRepositoryV1SavePutRequest.
        :rtype: CompanyCreditDataCreditLimitInterface
        """
        return self._credit_limit

    @credit_limit.setter
    def credit_limit(self, credit_limit):
        """Sets the credit_limit of this CompanyCreditCreditLimitRepositoryV1SavePutRequest.


        :param credit_limit: The credit_limit of this CompanyCreditCreditLimitRepositoryV1SavePutRequest.
        :type credit_limit: CompanyCreditDataCreditLimitInterface
        """
        if credit_limit is None:
            raise ValueError("Invalid value for `credit_limit`, must not be `None`")

        self._credit_limit = credit_limit
