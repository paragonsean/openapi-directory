# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SalesRuleDataCouponInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, code: str=None, coupon_id: int=None, created_at: str=None, expiration_date: str=None, extension_attributes: object=None, is_primary: bool=None, rule_id: int=None, times_used: int=None, type: int=None, usage_limit: int=None, usage_per_customer: int=None):
        """SalesRuleDataCouponInterface - a model defined in OpenAPI

        :param code: The code of this SalesRuleDataCouponInterface.
        :param coupon_id: The coupon_id of this SalesRuleDataCouponInterface.
        :param created_at: The created_at of this SalesRuleDataCouponInterface.
        :param expiration_date: The expiration_date of this SalesRuleDataCouponInterface.
        :param extension_attributes: The extension_attributes of this SalesRuleDataCouponInterface.
        :param is_primary: The is_primary of this SalesRuleDataCouponInterface.
        :param rule_id: The rule_id of this SalesRuleDataCouponInterface.
        :param times_used: The times_used of this SalesRuleDataCouponInterface.
        :param type: The type of this SalesRuleDataCouponInterface.
        :param usage_limit: The usage_limit of this SalesRuleDataCouponInterface.
        :param usage_per_customer: The usage_per_customer of this SalesRuleDataCouponInterface.
        """
        self.openapi_types = {
            'code': str,
            'coupon_id': int,
            'created_at': str,
            'expiration_date': str,
            'extension_attributes': object,
            'is_primary': bool,
            'rule_id': int,
            'times_used': int,
            'type': int,
            'usage_limit': int,
            'usage_per_customer': int
        }

        self.attribute_map = {
            'code': 'code',
            'coupon_id': 'coupon_id',
            'created_at': 'created_at',
            'expiration_date': 'expiration_date',
            'extension_attributes': 'extension_attributes',
            'is_primary': 'is_primary',
            'rule_id': 'rule_id',
            'times_used': 'times_used',
            'type': 'type',
            'usage_limit': 'usage_limit',
            'usage_per_customer': 'usage_per_customer'
        }

        self._code = code
        self._coupon_id = coupon_id
        self._created_at = created_at
        self._expiration_date = expiration_date
        self._extension_attributes = extension_attributes
        self._is_primary = is_primary
        self._rule_id = rule_id
        self._times_used = times_used
        self._type = type
        self._usage_limit = usage_limit
        self._usage_per_customer = usage_per_customer

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SalesRuleDataCouponInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The sales-rule-data-coupon-interface of this SalesRuleDataCouponInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def code(self):
        """Gets the code of this SalesRuleDataCouponInterface.

        Coupon code

        :return: The code of this SalesRuleDataCouponInterface.
        :rtype: str
        """
        return self._code

    @code.setter
    def code(self, code):
        """Sets the code of this SalesRuleDataCouponInterface.

        Coupon code

        :param code: The code of this SalesRuleDataCouponInterface.
        :type code: str
        """

        self._code = code

    @property
    def coupon_id(self):
        """Gets the coupon_id of this SalesRuleDataCouponInterface.

        Coupon id

        :return: The coupon_id of this SalesRuleDataCouponInterface.
        :rtype: int
        """
        return self._coupon_id

    @coupon_id.setter
    def coupon_id(self, coupon_id):
        """Sets the coupon_id of this SalesRuleDataCouponInterface.

        Coupon id

        :param coupon_id: The coupon_id of this SalesRuleDataCouponInterface.
        :type coupon_id: int
        """

        self._coupon_id = coupon_id

    @property
    def created_at(self):
        """Gets the created_at of this SalesRuleDataCouponInterface.

        When the coupon is created

        :return: The created_at of this SalesRuleDataCouponInterface.
        :rtype: str
        """
        return self._created_at

    @created_at.setter
    def created_at(self, created_at):
        """Sets the created_at of this SalesRuleDataCouponInterface.

        When the coupon is created

        :param created_at: The created_at of this SalesRuleDataCouponInterface.
        :type created_at: str
        """

        self._created_at = created_at

    @property
    def expiration_date(self):
        """Gets the expiration_date of this SalesRuleDataCouponInterface.

        Expiration date

        :return: The expiration_date of this SalesRuleDataCouponInterface.
        :rtype: str
        """
        return self._expiration_date

    @expiration_date.setter
    def expiration_date(self, expiration_date):
        """Sets the expiration_date of this SalesRuleDataCouponInterface.

        Expiration date

        :param expiration_date: The expiration_date of this SalesRuleDataCouponInterface.
        :type expiration_date: str
        """

        self._expiration_date = expiration_date

    @property
    def extension_attributes(self):
        """Gets the extension_attributes of this SalesRuleDataCouponInterface.

        ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\CouponInterface

        :return: The extension_attributes of this SalesRuleDataCouponInterface.
        :rtype: object
        """
        return self._extension_attributes

    @extension_attributes.setter
    def extension_attributes(self, extension_attributes):
        """Sets the extension_attributes of this SalesRuleDataCouponInterface.

        ExtensionInterface class for @see \\Magento\\SalesRule\\Api\\Data\\CouponInterface

        :param extension_attributes: The extension_attributes of this SalesRuleDataCouponInterface.
        :type extension_attributes: object
        """

        self._extension_attributes = extension_attributes

    @property
    def is_primary(self):
        """Gets the is_primary of this SalesRuleDataCouponInterface.

        The coupon is primary coupon for the rule that it's associated with

        :return: The is_primary of this SalesRuleDataCouponInterface.
        :rtype: bool
        """
        return self._is_primary

    @is_primary.setter
    def is_primary(self, is_primary):
        """Sets the is_primary of this SalesRuleDataCouponInterface.

        The coupon is primary coupon for the rule that it's associated with

        :param is_primary: The is_primary of this SalesRuleDataCouponInterface.
        :type is_primary: bool
        """
        if is_primary is None:
            raise ValueError("Invalid value for `is_primary`, must not be `None`")

        self._is_primary = is_primary

    @property
    def rule_id(self):
        """Gets the rule_id of this SalesRuleDataCouponInterface.

        The id of the rule associated with the coupon

        :return: The rule_id of this SalesRuleDataCouponInterface.
        :rtype: int
        """
        return self._rule_id

    @rule_id.setter
    def rule_id(self, rule_id):
        """Sets the rule_id of this SalesRuleDataCouponInterface.

        The id of the rule associated with the coupon

        :param rule_id: The rule_id of this SalesRuleDataCouponInterface.
        :type rule_id: int
        """
        if rule_id is None:
            raise ValueError("Invalid value for `rule_id`, must not be `None`")

        self._rule_id = rule_id

    @property
    def times_used(self):
        """Gets the times_used of this SalesRuleDataCouponInterface.

        The number of times the coupon has been used

        :return: The times_used of this SalesRuleDataCouponInterface.
        :rtype: int
        """
        return self._times_used

    @times_used.setter
    def times_used(self, times_used):
        """Sets the times_used of this SalesRuleDataCouponInterface.

        The number of times the coupon has been used

        :param times_used: The times_used of this SalesRuleDataCouponInterface.
        :type times_used: int
        """
        if times_used is None:
            raise ValueError("Invalid value for `times_used`, must not be `None`")

        self._times_used = times_used

    @property
    def type(self):
        """Gets the type of this SalesRuleDataCouponInterface.

        Of coupon

        :return: The type of this SalesRuleDataCouponInterface.
        :rtype: int
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this SalesRuleDataCouponInterface.

        Of coupon

        :param type: The type of this SalesRuleDataCouponInterface.
        :type type: int
        """

        self._type = type

    @property
    def usage_limit(self):
        """Gets the usage_limit of this SalesRuleDataCouponInterface.

        Usage limit

        :return: The usage_limit of this SalesRuleDataCouponInterface.
        :rtype: int
        """
        return self._usage_limit

    @usage_limit.setter
    def usage_limit(self, usage_limit):
        """Sets the usage_limit of this SalesRuleDataCouponInterface.

        Usage limit

        :param usage_limit: The usage_limit of this SalesRuleDataCouponInterface.
        :type usage_limit: int
        """

        self._usage_limit = usage_limit

    @property
    def usage_per_customer(self):
        """Gets the usage_per_customer of this SalesRuleDataCouponInterface.

        Usage limit per customer

        :return: The usage_per_customer of this SalesRuleDataCouponInterface.
        :rtype: int
        """
        return self._usage_per_customer

    @usage_per_customer.setter
    def usage_per_customer(self, usage_per_customer):
        """Sets the usage_per_customer of this SalesRuleDataCouponInterface.

        Usage limit per customer

        :param usage_per_customer: The usage_per_customer of this SalesRuleDataCouponInterface.
        :type usage_per_customer: int
        """

        self._usage_per_customer = usage_per_customer
