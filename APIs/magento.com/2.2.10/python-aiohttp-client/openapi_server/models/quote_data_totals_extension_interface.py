# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.negotiable_quote_data_negotiable_quote_totals_interface import NegotiableQuoteDataNegotiableQuoteTotalsInterface
from openapi_server import util


class QuoteDataTotalsExtensionInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, base_customer_balance_amount: float=None, base_reward_currency_amount: float=None, coupon_label: str=None, customer_balance_amount: float=None, negotiable_quote_totals: NegotiableQuoteDataNegotiableQuoteTotalsInterface=None, reward_currency_amount: float=None, reward_points_balance: float=None):
        """QuoteDataTotalsExtensionInterface - a model defined in OpenAPI

        :param base_customer_balance_amount: The base_customer_balance_amount of this QuoteDataTotalsExtensionInterface.
        :param base_reward_currency_amount: The base_reward_currency_amount of this QuoteDataTotalsExtensionInterface.
        :param coupon_label: The coupon_label of this QuoteDataTotalsExtensionInterface.
        :param customer_balance_amount: The customer_balance_amount of this QuoteDataTotalsExtensionInterface.
        :param negotiable_quote_totals: The negotiable_quote_totals of this QuoteDataTotalsExtensionInterface.
        :param reward_currency_amount: The reward_currency_amount of this QuoteDataTotalsExtensionInterface.
        :param reward_points_balance: The reward_points_balance of this QuoteDataTotalsExtensionInterface.
        """
        self.openapi_types = {
            'base_customer_balance_amount': float,
            'base_reward_currency_amount': float,
            'coupon_label': str,
            'customer_balance_amount': float,
            'negotiable_quote_totals': NegotiableQuoteDataNegotiableQuoteTotalsInterface,
            'reward_currency_amount': float,
            'reward_points_balance': float
        }

        self.attribute_map = {
            'base_customer_balance_amount': 'base_customer_balance_amount',
            'base_reward_currency_amount': 'base_reward_currency_amount',
            'coupon_label': 'coupon_label',
            'customer_balance_amount': 'customer_balance_amount',
            'negotiable_quote_totals': 'negotiable_quote_totals',
            'reward_currency_amount': 'reward_currency_amount',
            'reward_points_balance': 'reward_points_balance'
        }

        self._base_customer_balance_amount = base_customer_balance_amount
        self._base_reward_currency_amount = base_reward_currency_amount
        self._coupon_label = coupon_label
        self._customer_balance_amount = customer_balance_amount
        self._negotiable_quote_totals = negotiable_quote_totals
        self._reward_currency_amount = reward_currency_amount
        self._reward_points_balance = reward_points_balance

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuoteDataTotalsExtensionInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The quote-data-totals-extension-interface of this QuoteDataTotalsExtensionInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def base_customer_balance_amount(self):
        """Gets the base_customer_balance_amount of this QuoteDataTotalsExtensionInterface.


        :return: The base_customer_balance_amount of this QuoteDataTotalsExtensionInterface.
        :rtype: float
        """
        return self._base_customer_balance_amount

    @base_customer_balance_amount.setter
    def base_customer_balance_amount(self, base_customer_balance_amount):
        """Sets the base_customer_balance_amount of this QuoteDataTotalsExtensionInterface.


        :param base_customer_balance_amount: The base_customer_balance_amount of this QuoteDataTotalsExtensionInterface.
        :type base_customer_balance_amount: float
        """

        self._base_customer_balance_amount = base_customer_balance_amount

    @property
    def base_reward_currency_amount(self):
        """Gets the base_reward_currency_amount of this QuoteDataTotalsExtensionInterface.


        :return: The base_reward_currency_amount of this QuoteDataTotalsExtensionInterface.
        :rtype: float
        """
        return self._base_reward_currency_amount

    @base_reward_currency_amount.setter
    def base_reward_currency_amount(self, base_reward_currency_amount):
        """Sets the base_reward_currency_amount of this QuoteDataTotalsExtensionInterface.


        :param base_reward_currency_amount: The base_reward_currency_amount of this QuoteDataTotalsExtensionInterface.
        :type base_reward_currency_amount: float
        """

        self._base_reward_currency_amount = base_reward_currency_amount

    @property
    def coupon_label(self):
        """Gets the coupon_label of this QuoteDataTotalsExtensionInterface.


        :return: The coupon_label of this QuoteDataTotalsExtensionInterface.
        :rtype: str
        """
        return self._coupon_label

    @coupon_label.setter
    def coupon_label(self, coupon_label):
        """Sets the coupon_label of this QuoteDataTotalsExtensionInterface.


        :param coupon_label: The coupon_label of this QuoteDataTotalsExtensionInterface.
        :type coupon_label: str
        """

        self._coupon_label = coupon_label

    @property
    def customer_balance_amount(self):
        """Gets the customer_balance_amount of this QuoteDataTotalsExtensionInterface.


        :return: The customer_balance_amount of this QuoteDataTotalsExtensionInterface.
        :rtype: float
        """
        return self._customer_balance_amount

    @customer_balance_amount.setter
    def customer_balance_amount(self, customer_balance_amount):
        """Sets the customer_balance_amount of this QuoteDataTotalsExtensionInterface.


        :param customer_balance_amount: The customer_balance_amount of this QuoteDataTotalsExtensionInterface.
        :type customer_balance_amount: float
        """

        self._customer_balance_amount = customer_balance_amount

    @property
    def negotiable_quote_totals(self):
        """Gets the negotiable_quote_totals of this QuoteDataTotalsExtensionInterface.


        :return: The negotiable_quote_totals of this QuoteDataTotalsExtensionInterface.
        :rtype: NegotiableQuoteDataNegotiableQuoteTotalsInterface
        """
        return self._negotiable_quote_totals

    @negotiable_quote_totals.setter
    def negotiable_quote_totals(self, negotiable_quote_totals):
        """Sets the negotiable_quote_totals of this QuoteDataTotalsExtensionInterface.


        :param negotiable_quote_totals: The negotiable_quote_totals of this QuoteDataTotalsExtensionInterface.
        :type negotiable_quote_totals: NegotiableQuoteDataNegotiableQuoteTotalsInterface
        """

        self._negotiable_quote_totals = negotiable_quote_totals

    @property
    def reward_currency_amount(self):
        """Gets the reward_currency_amount of this QuoteDataTotalsExtensionInterface.


        :return: The reward_currency_amount of this QuoteDataTotalsExtensionInterface.
        :rtype: float
        """
        return self._reward_currency_amount

    @reward_currency_amount.setter
    def reward_currency_amount(self, reward_currency_amount):
        """Sets the reward_currency_amount of this QuoteDataTotalsExtensionInterface.


        :param reward_currency_amount: The reward_currency_amount of this QuoteDataTotalsExtensionInterface.
        :type reward_currency_amount: float
        """

        self._reward_currency_amount = reward_currency_amount

    @property
    def reward_points_balance(self):
        """Gets the reward_points_balance of this QuoteDataTotalsExtensionInterface.


        :return: The reward_points_balance of this QuoteDataTotalsExtensionInterface.
        :rtype: float
        """
        return self._reward_points_balance

    @reward_points_balance.setter
    def reward_points_balance(self, reward_points_balance):
        """Sets the reward_points_balance of this QuoteDataTotalsExtensionInterface.


        :param reward_points_balance: The reward_points_balance of this QuoteDataTotalsExtensionInterface.
        :type reward_points_balance: float
        """

        self._reward_points_balance = reward_points_balance
