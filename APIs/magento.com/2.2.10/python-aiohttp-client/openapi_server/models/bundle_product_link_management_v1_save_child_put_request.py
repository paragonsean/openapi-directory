# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bundle_data_link_interface import BundleDataLinkInterface
from openapi_server import util


class BundleProductLinkManagementV1SaveChildPutRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, linked_product: BundleDataLinkInterface=None):
        """BundleProductLinkManagementV1SaveChildPutRequest - a model defined in OpenAPI

        :param linked_product: The linked_product of this BundleProductLinkManagementV1SaveChildPutRequest.
        """
        self.openapi_types = {
            'linked_product': BundleDataLinkInterface
        }

        self.attribute_map = {
            'linked_product': 'linkedProduct'
        }

        self._linked_product = linked_product

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BundleProductLinkManagementV1SaveChildPutRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bundleProductLinkManagementV1SaveChildPut_request of this BundleProductLinkManagementV1SaveChildPutRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def linked_product(self):
        """Gets the linked_product of this BundleProductLinkManagementV1SaveChildPutRequest.


        :return: The linked_product of this BundleProductLinkManagementV1SaveChildPutRequest.
        :rtype: BundleDataLinkInterface
        """
        return self._linked_product

    @linked_product.setter
    def linked_product(self, linked_product):
        """Sets the linked_product of this BundleProductLinkManagementV1SaveChildPutRequest.


        :param linked_product: The linked_product of this BundleProductLinkManagementV1SaveChildPutRequest.
        :type linked_product: BundleDataLinkInterface
        """
        if linked_product is None:
            raise ValueError("Invalid value for `linked_product`, must not be `None`")

        self._linked_product = linked_product
