# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.framework_search_filter_group import FrameworkSearchFilterGroup
from openapi_server.models.framework_sort_order import FrameworkSortOrder
from openapi_server import util


class FrameworkSearchCriteriaInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, current_page: int=None, filter_groups: List[FrameworkSearchFilterGroup]=None, page_size: int=None, sort_orders: List[FrameworkSortOrder]=None):
        """FrameworkSearchCriteriaInterface - a model defined in OpenAPI

        :param current_page: The current_page of this FrameworkSearchCriteriaInterface.
        :param filter_groups: The filter_groups of this FrameworkSearchCriteriaInterface.
        :param page_size: The page_size of this FrameworkSearchCriteriaInterface.
        :param sort_orders: The sort_orders of this FrameworkSearchCriteriaInterface.
        """
        self.openapi_types = {
            'current_page': int,
            'filter_groups': List[FrameworkSearchFilterGroup],
            'page_size': int,
            'sort_orders': List[FrameworkSortOrder]
        }

        self.attribute_map = {
            'current_page': 'current_page',
            'filter_groups': 'filter_groups',
            'page_size': 'page_size',
            'sort_orders': 'sort_orders'
        }

        self._current_page = current_page
        self._filter_groups = filter_groups
        self._page_size = page_size
        self._sort_orders = sort_orders

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FrameworkSearchCriteriaInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The framework-search-criteria-interface of this FrameworkSearchCriteriaInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def current_page(self):
        """Gets the current_page of this FrameworkSearchCriteriaInterface.

        Current page.

        :return: The current_page of this FrameworkSearchCriteriaInterface.
        :rtype: int
        """
        return self._current_page

    @current_page.setter
    def current_page(self, current_page):
        """Sets the current_page of this FrameworkSearchCriteriaInterface.

        Current page.

        :param current_page: The current_page of this FrameworkSearchCriteriaInterface.
        :type current_page: int
        """

        self._current_page = current_page

    @property
    def filter_groups(self):
        """Gets the filter_groups of this FrameworkSearchCriteriaInterface.

        A list of filter groups.

        :return: The filter_groups of this FrameworkSearchCriteriaInterface.
        :rtype: List[FrameworkSearchFilterGroup]
        """
        return self._filter_groups

    @filter_groups.setter
    def filter_groups(self, filter_groups):
        """Sets the filter_groups of this FrameworkSearchCriteriaInterface.

        A list of filter groups.

        :param filter_groups: The filter_groups of this FrameworkSearchCriteriaInterface.
        :type filter_groups: List[FrameworkSearchFilterGroup]
        """
        if filter_groups is None:
            raise ValueError("Invalid value for `filter_groups`, must not be `None`")

        self._filter_groups = filter_groups

    @property
    def page_size(self):
        """Gets the page_size of this FrameworkSearchCriteriaInterface.

        Page size.

        :return: The page_size of this FrameworkSearchCriteriaInterface.
        :rtype: int
        """
        return self._page_size

    @page_size.setter
    def page_size(self, page_size):
        """Sets the page_size of this FrameworkSearchCriteriaInterface.

        Page size.

        :param page_size: The page_size of this FrameworkSearchCriteriaInterface.
        :type page_size: int
        """

        self._page_size = page_size

    @property
    def sort_orders(self):
        """Gets the sort_orders of this FrameworkSearchCriteriaInterface.

        Sort order.

        :return: The sort_orders of this FrameworkSearchCriteriaInterface.
        :rtype: List[FrameworkSortOrder]
        """
        return self._sort_orders

    @sort_orders.setter
    def sort_orders(self, sort_orders):
        """Sets the sort_orders of this FrameworkSearchCriteriaInterface.

        Sort order.

        :param sort_orders: The sort_orders of this FrameworkSearchCriteriaInterface.
        :type sort_orders: List[FrameworkSortOrder]
        """

        self._sort_orders = sort_orders
