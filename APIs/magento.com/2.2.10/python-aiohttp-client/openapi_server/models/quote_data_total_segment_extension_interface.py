# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.tax_data_grand_total_details_interface import TaxDataGrandTotalDetailsInterface
from openapi_server import util


class QuoteDataTotalSegmentExtensionInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, gift_cards: str=None, gw_add_card: str=None, gw_allow_gift_receipt: str=None, gw_base_price: str=None, gw_base_price_incl_tax: str=None, gw_base_tax_amount: str=None, gw_card_base_price: str=None, gw_card_base_price_incl_tax: str=None, gw_card_base_tax_amount: str=None, gw_card_price: str=None, gw_card_price_incl_tax: str=None, gw_card_tax_amount: str=None, gw_item_ids: List[str]=None, gw_items_base_price: str=None, gw_items_base_price_incl_tax: str=None, gw_items_base_tax_amount: str=None, gw_items_price: str=None, gw_items_price_incl_tax: str=None, gw_items_tax_amount: str=None, gw_order_id: str=None, gw_price: str=None, gw_price_incl_tax: str=None, gw_tax_amount: str=None, tax_grandtotal_details: List[TaxDataGrandTotalDetailsInterface]=None, vertex_tax_calculation_messages: List[str]=None):
        """QuoteDataTotalSegmentExtensionInterface - a model defined in OpenAPI

        :param gift_cards: The gift_cards of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_add_card: The gw_add_card of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_allow_gift_receipt: The gw_allow_gift_receipt of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_base_price: The gw_base_price of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_base_price_incl_tax: The gw_base_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_base_tax_amount: The gw_base_tax_amount of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_card_base_price: The gw_card_base_price of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_card_base_price_incl_tax: The gw_card_base_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_card_base_tax_amount: The gw_card_base_tax_amount of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_card_price: The gw_card_price of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_card_price_incl_tax: The gw_card_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_card_tax_amount: The gw_card_tax_amount of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_item_ids: The gw_item_ids of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_items_base_price: The gw_items_base_price of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_items_base_price_incl_tax: The gw_items_base_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_items_base_tax_amount: The gw_items_base_tax_amount of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_items_price: The gw_items_price of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_items_price_incl_tax: The gw_items_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_items_tax_amount: The gw_items_tax_amount of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_order_id: The gw_order_id of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_price: The gw_price of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_price_incl_tax: The gw_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.
        :param gw_tax_amount: The gw_tax_amount of this QuoteDataTotalSegmentExtensionInterface.
        :param tax_grandtotal_details: The tax_grandtotal_details of this QuoteDataTotalSegmentExtensionInterface.
        :param vertex_tax_calculation_messages: The vertex_tax_calculation_messages of this QuoteDataTotalSegmentExtensionInterface.
        """
        self.openapi_types = {
            'gift_cards': str,
            'gw_add_card': str,
            'gw_allow_gift_receipt': str,
            'gw_base_price': str,
            'gw_base_price_incl_tax': str,
            'gw_base_tax_amount': str,
            'gw_card_base_price': str,
            'gw_card_base_price_incl_tax': str,
            'gw_card_base_tax_amount': str,
            'gw_card_price': str,
            'gw_card_price_incl_tax': str,
            'gw_card_tax_amount': str,
            'gw_item_ids': List[str],
            'gw_items_base_price': str,
            'gw_items_base_price_incl_tax': str,
            'gw_items_base_tax_amount': str,
            'gw_items_price': str,
            'gw_items_price_incl_tax': str,
            'gw_items_tax_amount': str,
            'gw_order_id': str,
            'gw_price': str,
            'gw_price_incl_tax': str,
            'gw_tax_amount': str,
            'tax_grandtotal_details': List[TaxDataGrandTotalDetailsInterface],
            'vertex_tax_calculation_messages': List[str]
        }

        self.attribute_map = {
            'gift_cards': 'gift_cards',
            'gw_add_card': 'gw_add_card',
            'gw_allow_gift_receipt': 'gw_allow_gift_receipt',
            'gw_base_price': 'gw_base_price',
            'gw_base_price_incl_tax': 'gw_base_price_incl_tax',
            'gw_base_tax_amount': 'gw_base_tax_amount',
            'gw_card_base_price': 'gw_card_base_price',
            'gw_card_base_price_incl_tax': 'gw_card_base_price_incl_tax',
            'gw_card_base_tax_amount': 'gw_card_base_tax_amount',
            'gw_card_price': 'gw_card_price',
            'gw_card_price_incl_tax': 'gw_card_price_incl_tax',
            'gw_card_tax_amount': 'gw_card_tax_amount',
            'gw_item_ids': 'gw_item_ids',
            'gw_items_base_price': 'gw_items_base_price',
            'gw_items_base_price_incl_tax': 'gw_items_base_price_incl_tax',
            'gw_items_base_tax_amount': 'gw_items_base_tax_amount',
            'gw_items_price': 'gw_items_price',
            'gw_items_price_incl_tax': 'gw_items_price_incl_tax',
            'gw_items_tax_amount': 'gw_items_tax_amount',
            'gw_order_id': 'gw_order_id',
            'gw_price': 'gw_price',
            'gw_price_incl_tax': 'gw_price_incl_tax',
            'gw_tax_amount': 'gw_tax_amount',
            'tax_grandtotal_details': 'tax_grandtotal_details',
            'vertex_tax_calculation_messages': 'vertex_tax_calculation_messages'
        }

        self._gift_cards = gift_cards
        self._gw_add_card = gw_add_card
        self._gw_allow_gift_receipt = gw_allow_gift_receipt
        self._gw_base_price = gw_base_price
        self._gw_base_price_incl_tax = gw_base_price_incl_tax
        self._gw_base_tax_amount = gw_base_tax_amount
        self._gw_card_base_price = gw_card_base_price
        self._gw_card_base_price_incl_tax = gw_card_base_price_incl_tax
        self._gw_card_base_tax_amount = gw_card_base_tax_amount
        self._gw_card_price = gw_card_price
        self._gw_card_price_incl_tax = gw_card_price_incl_tax
        self._gw_card_tax_amount = gw_card_tax_amount
        self._gw_item_ids = gw_item_ids
        self._gw_items_base_price = gw_items_base_price
        self._gw_items_base_price_incl_tax = gw_items_base_price_incl_tax
        self._gw_items_base_tax_amount = gw_items_base_tax_amount
        self._gw_items_price = gw_items_price
        self._gw_items_price_incl_tax = gw_items_price_incl_tax
        self._gw_items_tax_amount = gw_items_tax_amount
        self._gw_order_id = gw_order_id
        self._gw_price = gw_price
        self._gw_price_incl_tax = gw_price_incl_tax
        self._gw_tax_amount = gw_tax_amount
        self._tax_grandtotal_details = tax_grandtotal_details
        self._vertex_tax_calculation_messages = vertex_tax_calculation_messages

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuoteDataTotalSegmentExtensionInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The quote-data-total-segment-extension-interface of this QuoteDataTotalSegmentExtensionInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def gift_cards(self):
        """Gets the gift_cards of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gift_cards of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gift_cards

    @gift_cards.setter
    def gift_cards(self, gift_cards):
        """Sets the gift_cards of this QuoteDataTotalSegmentExtensionInterface.


        :param gift_cards: The gift_cards of this QuoteDataTotalSegmentExtensionInterface.
        :type gift_cards: str
        """

        self._gift_cards = gift_cards

    @property
    def gw_add_card(self):
        """Gets the gw_add_card of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_add_card of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_add_card

    @gw_add_card.setter
    def gw_add_card(self, gw_add_card):
        """Sets the gw_add_card of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_add_card: The gw_add_card of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_add_card: str
        """

        self._gw_add_card = gw_add_card

    @property
    def gw_allow_gift_receipt(self):
        """Gets the gw_allow_gift_receipt of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_allow_gift_receipt of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_allow_gift_receipt

    @gw_allow_gift_receipt.setter
    def gw_allow_gift_receipt(self, gw_allow_gift_receipt):
        """Sets the gw_allow_gift_receipt of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_allow_gift_receipt: The gw_allow_gift_receipt of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_allow_gift_receipt: str
        """

        self._gw_allow_gift_receipt = gw_allow_gift_receipt

    @property
    def gw_base_price(self):
        """Gets the gw_base_price of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_base_price of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_base_price

    @gw_base_price.setter
    def gw_base_price(self, gw_base_price):
        """Sets the gw_base_price of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_base_price: The gw_base_price of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_base_price: str
        """

        self._gw_base_price = gw_base_price

    @property
    def gw_base_price_incl_tax(self):
        """Gets the gw_base_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_base_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_base_price_incl_tax

    @gw_base_price_incl_tax.setter
    def gw_base_price_incl_tax(self, gw_base_price_incl_tax):
        """Sets the gw_base_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_base_price_incl_tax: The gw_base_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_base_price_incl_tax: str
        """

        self._gw_base_price_incl_tax = gw_base_price_incl_tax

    @property
    def gw_base_tax_amount(self):
        """Gets the gw_base_tax_amount of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_base_tax_amount of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_base_tax_amount

    @gw_base_tax_amount.setter
    def gw_base_tax_amount(self, gw_base_tax_amount):
        """Sets the gw_base_tax_amount of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_base_tax_amount: The gw_base_tax_amount of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_base_tax_amount: str
        """

        self._gw_base_tax_amount = gw_base_tax_amount

    @property
    def gw_card_base_price(self):
        """Gets the gw_card_base_price of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_card_base_price of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_card_base_price

    @gw_card_base_price.setter
    def gw_card_base_price(self, gw_card_base_price):
        """Sets the gw_card_base_price of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_card_base_price: The gw_card_base_price of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_card_base_price: str
        """

        self._gw_card_base_price = gw_card_base_price

    @property
    def gw_card_base_price_incl_tax(self):
        """Gets the gw_card_base_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_card_base_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_card_base_price_incl_tax

    @gw_card_base_price_incl_tax.setter
    def gw_card_base_price_incl_tax(self, gw_card_base_price_incl_tax):
        """Sets the gw_card_base_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_card_base_price_incl_tax: The gw_card_base_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_card_base_price_incl_tax: str
        """

        self._gw_card_base_price_incl_tax = gw_card_base_price_incl_tax

    @property
    def gw_card_base_tax_amount(self):
        """Gets the gw_card_base_tax_amount of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_card_base_tax_amount of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_card_base_tax_amount

    @gw_card_base_tax_amount.setter
    def gw_card_base_tax_amount(self, gw_card_base_tax_amount):
        """Sets the gw_card_base_tax_amount of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_card_base_tax_amount: The gw_card_base_tax_amount of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_card_base_tax_amount: str
        """

        self._gw_card_base_tax_amount = gw_card_base_tax_amount

    @property
    def gw_card_price(self):
        """Gets the gw_card_price of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_card_price of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_card_price

    @gw_card_price.setter
    def gw_card_price(self, gw_card_price):
        """Sets the gw_card_price of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_card_price: The gw_card_price of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_card_price: str
        """

        self._gw_card_price = gw_card_price

    @property
    def gw_card_price_incl_tax(self):
        """Gets the gw_card_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_card_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_card_price_incl_tax

    @gw_card_price_incl_tax.setter
    def gw_card_price_incl_tax(self, gw_card_price_incl_tax):
        """Sets the gw_card_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_card_price_incl_tax: The gw_card_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_card_price_incl_tax: str
        """

        self._gw_card_price_incl_tax = gw_card_price_incl_tax

    @property
    def gw_card_tax_amount(self):
        """Gets the gw_card_tax_amount of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_card_tax_amount of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_card_tax_amount

    @gw_card_tax_amount.setter
    def gw_card_tax_amount(self, gw_card_tax_amount):
        """Sets the gw_card_tax_amount of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_card_tax_amount: The gw_card_tax_amount of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_card_tax_amount: str
        """

        self._gw_card_tax_amount = gw_card_tax_amount

    @property
    def gw_item_ids(self):
        """Gets the gw_item_ids of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_item_ids of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: List[str]
        """
        return self._gw_item_ids

    @gw_item_ids.setter
    def gw_item_ids(self, gw_item_ids):
        """Sets the gw_item_ids of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_item_ids: The gw_item_ids of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_item_ids: List[str]
        """

        self._gw_item_ids = gw_item_ids

    @property
    def gw_items_base_price(self):
        """Gets the gw_items_base_price of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_items_base_price of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_items_base_price

    @gw_items_base_price.setter
    def gw_items_base_price(self, gw_items_base_price):
        """Sets the gw_items_base_price of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_items_base_price: The gw_items_base_price of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_items_base_price: str
        """

        self._gw_items_base_price = gw_items_base_price

    @property
    def gw_items_base_price_incl_tax(self):
        """Gets the gw_items_base_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_items_base_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_items_base_price_incl_tax

    @gw_items_base_price_incl_tax.setter
    def gw_items_base_price_incl_tax(self, gw_items_base_price_incl_tax):
        """Sets the gw_items_base_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_items_base_price_incl_tax: The gw_items_base_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_items_base_price_incl_tax: str
        """

        self._gw_items_base_price_incl_tax = gw_items_base_price_incl_tax

    @property
    def gw_items_base_tax_amount(self):
        """Gets the gw_items_base_tax_amount of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_items_base_tax_amount of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_items_base_tax_amount

    @gw_items_base_tax_amount.setter
    def gw_items_base_tax_amount(self, gw_items_base_tax_amount):
        """Sets the gw_items_base_tax_amount of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_items_base_tax_amount: The gw_items_base_tax_amount of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_items_base_tax_amount: str
        """

        self._gw_items_base_tax_amount = gw_items_base_tax_amount

    @property
    def gw_items_price(self):
        """Gets the gw_items_price of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_items_price of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_items_price

    @gw_items_price.setter
    def gw_items_price(self, gw_items_price):
        """Sets the gw_items_price of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_items_price: The gw_items_price of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_items_price: str
        """

        self._gw_items_price = gw_items_price

    @property
    def gw_items_price_incl_tax(self):
        """Gets the gw_items_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_items_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_items_price_incl_tax

    @gw_items_price_incl_tax.setter
    def gw_items_price_incl_tax(self, gw_items_price_incl_tax):
        """Sets the gw_items_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_items_price_incl_tax: The gw_items_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_items_price_incl_tax: str
        """

        self._gw_items_price_incl_tax = gw_items_price_incl_tax

    @property
    def gw_items_tax_amount(self):
        """Gets the gw_items_tax_amount of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_items_tax_amount of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_items_tax_amount

    @gw_items_tax_amount.setter
    def gw_items_tax_amount(self, gw_items_tax_amount):
        """Sets the gw_items_tax_amount of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_items_tax_amount: The gw_items_tax_amount of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_items_tax_amount: str
        """

        self._gw_items_tax_amount = gw_items_tax_amount

    @property
    def gw_order_id(self):
        """Gets the gw_order_id of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_order_id of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_order_id

    @gw_order_id.setter
    def gw_order_id(self, gw_order_id):
        """Sets the gw_order_id of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_order_id: The gw_order_id of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_order_id: str
        """

        self._gw_order_id = gw_order_id

    @property
    def gw_price(self):
        """Gets the gw_price of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_price of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_price

    @gw_price.setter
    def gw_price(self, gw_price):
        """Sets the gw_price of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_price: The gw_price of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_price: str
        """

        self._gw_price = gw_price

    @property
    def gw_price_incl_tax(self):
        """Gets the gw_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_price_incl_tax

    @gw_price_incl_tax.setter
    def gw_price_incl_tax(self, gw_price_incl_tax):
        """Sets the gw_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_price_incl_tax: The gw_price_incl_tax of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_price_incl_tax: str
        """

        self._gw_price_incl_tax = gw_price_incl_tax

    @property
    def gw_tax_amount(self):
        """Gets the gw_tax_amount of this QuoteDataTotalSegmentExtensionInterface.


        :return: The gw_tax_amount of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: str
        """
        return self._gw_tax_amount

    @gw_tax_amount.setter
    def gw_tax_amount(self, gw_tax_amount):
        """Sets the gw_tax_amount of this QuoteDataTotalSegmentExtensionInterface.


        :param gw_tax_amount: The gw_tax_amount of this QuoteDataTotalSegmentExtensionInterface.
        :type gw_tax_amount: str
        """

        self._gw_tax_amount = gw_tax_amount

    @property
    def tax_grandtotal_details(self):
        """Gets the tax_grandtotal_details of this QuoteDataTotalSegmentExtensionInterface.


        :return: The tax_grandtotal_details of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: List[TaxDataGrandTotalDetailsInterface]
        """
        return self._tax_grandtotal_details

    @tax_grandtotal_details.setter
    def tax_grandtotal_details(self, tax_grandtotal_details):
        """Sets the tax_grandtotal_details of this QuoteDataTotalSegmentExtensionInterface.


        :param tax_grandtotal_details: The tax_grandtotal_details of this QuoteDataTotalSegmentExtensionInterface.
        :type tax_grandtotal_details: List[TaxDataGrandTotalDetailsInterface]
        """

        self._tax_grandtotal_details = tax_grandtotal_details

    @property
    def vertex_tax_calculation_messages(self):
        """Gets the vertex_tax_calculation_messages of this QuoteDataTotalSegmentExtensionInterface.


        :return: The vertex_tax_calculation_messages of this QuoteDataTotalSegmentExtensionInterface.
        :rtype: List[str]
        """
        return self._vertex_tax_calculation_messages

    @vertex_tax_calculation_messages.setter
    def vertex_tax_calculation_messages(self, vertex_tax_calculation_messages):
        """Sets the vertex_tax_calculation_messages of this QuoteDataTotalSegmentExtensionInterface.


        :param vertex_tax_calculation_messages: The vertex_tax_calculation_messages of this QuoteDataTotalSegmentExtensionInterface.
        :type vertex_tax_calculation_messages: List[str]
        """

        self._vertex_tax_calculation_messages = vertex_tax_calculation_messages
