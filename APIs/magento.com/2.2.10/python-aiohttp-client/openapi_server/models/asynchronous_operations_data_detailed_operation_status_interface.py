# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class AsynchronousOperationsDataDetailedOperationStatusInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, bulk_uuid: str=None, error_code: int=None, extension_attributes: object=None, id: int=None, result_message: str=None, result_serialized_data: str=None, serialized_data: str=None, status: int=None, topic_name: str=None):
        """AsynchronousOperationsDataDetailedOperationStatusInterface - a model defined in OpenAPI

        :param bulk_uuid: The bulk_uuid of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :param error_code: The error_code of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :param extension_attributes: The extension_attributes of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :param id: The id of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :param result_message: The result_message of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :param result_serialized_data: The result_serialized_data of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :param serialized_data: The serialized_data of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :param status: The status of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :param topic_name: The topic_name of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        """
        self.openapi_types = {
            'bulk_uuid': str,
            'error_code': int,
            'extension_attributes': object,
            'id': int,
            'result_message': str,
            'result_serialized_data': str,
            'serialized_data': str,
            'status': int,
            'topic_name': str
        }

        self.attribute_map = {
            'bulk_uuid': 'bulk_uuid',
            'error_code': 'error_code',
            'extension_attributes': 'extension_attributes',
            'id': 'id',
            'result_message': 'result_message',
            'result_serialized_data': 'result_serialized_data',
            'serialized_data': 'serialized_data',
            'status': 'status',
            'topic_name': 'topic_name'
        }

        self._bulk_uuid = bulk_uuid
        self._error_code = error_code
        self._extension_attributes = extension_attributes
        self._id = id
        self._result_message = result_message
        self._result_serialized_data = result_serialized_data
        self._serialized_data = serialized_data
        self._status = status
        self._topic_name = topic_name

    @classmethod
    def from_dict(cls, dikt: dict) -> 'AsynchronousOperationsDataDetailedOperationStatusInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The asynchronous-operations-data-detailed-operation-status-interface of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def bulk_uuid(self):
        """Gets the bulk_uuid of this AsynchronousOperationsDataDetailedOperationStatusInterface.

        Bulk uuid

        :return: The bulk_uuid of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :rtype: str
        """
        return self._bulk_uuid

    @bulk_uuid.setter
    def bulk_uuid(self, bulk_uuid):
        """Sets the bulk_uuid of this AsynchronousOperationsDataDetailedOperationStatusInterface.

        Bulk uuid

        :param bulk_uuid: The bulk_uuid of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :type bulk_uuid: str
        """
        if bulk_uuid is None:
            raise ValueError("Invalid value for `bulk_uuid`, must not be `None`")

        self._bulk_uuid = bulk_uuid

    @property
    def error_code(self):
        """Gets the error_code of this AsynchronousOperationsDataDetailedOperationStatusInterface.

        Error code

        :return: The error_code of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :rtype: int
        """
        return self._error_code

    @error_code.setter
    def error_code(self, error_code):
        """Sets the error_code of this AsynchronousOperationsDataDetailedOperationStatusInterface.

        Error code

        :param error_code: The error_code of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :type error_code: int
        """
        if error_code is None:
            raise ValueError("Invalid value for `error_code`, must not be `None`")

        self._error_code = error_code

    @property
    def extension_attributes(self):
        """Gets the extension_attributes of this AsynchronousOperationsDataDetailedOperationStatusInterface.

        ExtensionInterface class for @see \\Magento\\AsynchronousOperations\\Api\\Data\\OperationInterface

        :return: The extension_attributes of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :rtype: object
        """
        return self._extension_attributes

    @extension_attributes.setter
    def extension_attributes(self, extension_attributes):
        """Sets the extension_attributes of this AsynchronousOperationsDataDetailedOperationStatusInterface.

        ExtensionInterface class for @see \\Magento\\AsynchronousOperations\\Api\\Data\\OperationInterface

        :param extension_attributes: The extension_attributes of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :type extension_attributes: object
        """

        self._extension_attributes = extension_attributes

    @property
    def id(self):
        """Gets the id of this AsynchronousOperationsDataDetailedOperationStatusInterface.

        Id

        :return: The id of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this AsynchronousOperationsDataDetailedOperationStatusInterface.

        Id

        :param id: The id of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id

    @property
    def result_message(self):
        """Gets the result_message of this AsynchronousOperationsDataDetailedOperationStatusInterface.

        Result message

        :return: The result_message of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :rtype: str
        """
        return self._result_message

    @result_message.setter
    def result_message(self, result_message):
        """Sets the result_message of this AsynchronousOperationsDataDetailedOperationStatusInterface.

        Result message

        :param result_message: The result_message of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :type result_message: str
        """
        if result_message is None:
            raise ValueError("Invalid value for `result_message`, must not be `None`")

        self._result_message = result_message

    @property
    def result_serialized_data(self):
        """Gets the result_serialized_data of this AsynchronousOperationsDataDetailedOperationStatusInterface.

        Serialized Data

        :return: The result_serialized_data of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :rtype: str
        """
        return self._result_serialized_data

    @result_serialized_data.setter
    def result_serialized_data(self, result_serialized_data):
        """Sets the result_serialized_data of this AsynchronousOperationsDataDetailedOperationStatusInterface.

        Serialized Data

        :param result_serialized_data: The result_serialized_data of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :type result_serialized_data: str
        """
        if result_serialized_data is None:
            raise ValueError("Invalid value for `result_serialized_data`, must not be `None`")

        self._result_serialized_data = result_serialized_data

    @property
    def serialized_data(self):
        """Gets the serialized_data of this AsynchronousOperationsDataDetailedOperationStatusInterface.

        Data

        :return: The serialized_data of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :rtype: str
        """
        return self._serialized_data

    @serialized_data.setter
    def serialized_data(self, serialized_data):
        """Sets the serialized_data of this AsynchronousOperationsDataDetailedOperationStatusInterface.

        Data

        :param serialized_data: The serialized_data of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :type serialized_data: str
        """
        if serialized_data is None:
            raise ValueError("Invalid value for `serialized_data`, must not be `None`")

        self._serialized_data = serialized_data

    @property
    def status(self):
        """Gets the status of this AsynchronousOperationsDataDetailedOperationStatusInterface.

        Operation status

        :return: The status of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :rtype: int
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this AsynchronousOperationsDataDetailedOperationStatusInterface.

        Operation status

        :param status: The status of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :type status: int
        """
        if status is None:
            raise ValueError("Invalid value for `status`, must not be `None`")

        self._status = status

    @property
    def topic_name(self):
        """Gets the topic_name of this AsynchronousOperationsDataDetailedOperationStatusInterface.

        Queue Topic

        :return: The topic_name of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :rtype: str
        """
        return self._topic_name

    @topic_name.setter
    def topic_name(self, topic_name):
        """Sets the topic_name of this AsynchronousOperationsDataDetailedOperationStatusInterface.

        Queue Topic

        :param topic_name: The topic_name of this AsynchronousOperationsDataDetailedOperationStatusInterface.
        :type topic_name: str
        """
        if topic_name is None:
            raise ValueError("Invalid value for `topic_name`, must not be `None`")

        self._topic_name = topic_name
