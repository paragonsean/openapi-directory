# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class GiftMessageDataMessageExtensionInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, entity_id: str=None, entity_type: str=None, wrapping_add_printed_card: bool=None, wrapping_allow_gift_receipt: bool=None, wrapping_id: int=None):
        """GiftMessageDataMessageExtensionInterface - a model defined in OpenAPI

        :param entity_id: The entity_id of this GiftMessageDataMessageExtensionInterface.
        :param entity_type: The entity_type of this GiftMessageDataMessageExtensionInterface.
        :param wrapping_add_printed_card: The wrapping_add_printed_card of this GiftMessageDataMessageExtensionInterface.
        :param wrapping_allow_gift_receipt: The wrapping_allow_gift_receipt of this GiftMessageDataMessageExtensionInterface.
        :param wrapping_id: The wrapping_id of this GiftMessageDataMessageExtensionInterface.
        """
        self.openapi_types = {
            'entity_id': str,
            'entity_type': str,
            'wrapping_add_printed_card': bool,
            'wrapping_allow_gift_receipt': bool,
            'wrapping_id': int
        }

        self.attribute_map = {
            'entity_id': 'entity_id',
            'entity_type': 'entity_type',
            'wrapping_add_printed_card': 'wrapping_add_printed_card',
            'wrapping_allow_gift_receipt': 'wrapping_allow_gift_receipt',
            'wrapping_id': 'wrapping_id'
        }

        self._entity_id = entity_id
        self._entity_type = entity_type
        self._wrapping_add_printed_card = wrapping_add_printed_card
        self._wrapping_allow_gift_receipt = wrapping_allow_gift_receipt
        self._wrapping_id = wrapping_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'GiftMessageDataMessageExtensionInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The gift-message-data-message-extension-interface of this GiftMessageDataMessageExtensionInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def entity_id(self):
        """Gets the entity_id of this GiftMessageDataMessageExtensionInterface.


        :return: The entity_id of this GiftMessageDataMessageExtensionInterface.
        :rtype: str
        """
        return self._entity_id

    @entity_id.setter
    def entity_id(self, entity_id):
        """Sets the entity_id of this GiftMessageDataMessageExtensionInterface.


        :param entity_id: The entity_id of this GiftMessageDataMessageExtensionInterface.
        :type entity_id: str
        """

        self._entity_id = entity_id

    @property
    def entity_type(self):
        """Gets the entity_type of this GiftMessageDataMessageExtensionInterface.


        :return: The entity_type of this GiftMessageDataMessageExtensionInterface.
        :rtype: str
        """
        return self._entity_type

    @entity_type.setter
    def entity_type(self, entity_type):
        """Sets the entity_type of this GiftMessageDataMessageExtensionInterface.


        :param entity_type: The entity_type of this GiftMessageDataMessageExtensionInterface.
        :type entity_type: str
        """

        self._entity_type = entity_type

    @property
    def wrapping_add_printed_card(self):
        """Gets the wrapping_add_printed_card of this GiftMessageDataMessageExtensionInterface.


        :return: The wrapping_add_printed_card of this GiftMessageDataMessageExtensionInterface.
        :rtype: bool
        """
        return self._wrapping_add_printed_card

    @wrapping_add_printed_card.setter
    def wrapping_add_printed_card(self, wrapping_add_printed_card):
        """Sets the wrapping_add_printed_card of this GiftMessageDataMessageExtensionInterface.


        :param wrapping_add_printed_card: The wrapping_add_printed_card of this GiftMessageDataMessageExtensionInterface.
        :type wrapping_add_printed_card: bool
        """

        self._wrapping_add_printed_card = wrapping_add_printed_card

    @property
    def wrapping_allow_gift_receipt(self):
        """Gets the wrapping_allow_gift_receipt of this GiftMessageDataMessageExtensionInterface.


        :return: The wrapping_allow_gift_receipt of this GiftMessageDataMessageExtensionInterface.
        :rtype: bool
        """
        return self._wrapping_allow_gift_receipt

    @wrapping_allow_gift_receipt.setter
    def wrapping_allow_gift_receipt(self, wrapping_allow_gift_receipt):
        """Sets the wrapping_allow_gift_receipt of this GiftMessageDataMessageExtensionInterface.


        :param wrapping_allow_gift_receipt: The wrapping_allow_gift_receipt of this GiftMessageDataMessageExtensionInterface.
        :type wrapping_allow_gift_receipt: bool
        """

        self._wrapping_allow_gift_receipt = wrapping_allow_gift_receipt

    @property
    def wrapping_id(self):
        """Gets the wrapping_id of this GiftMessageDataMessageExtensionInterface.


        :return: The wrapping_id of this GiftMessageDataMessageExtensionInterface.
        :rtype: int
        """
        return self._wrapping_id

    @wrapping_id.setter
    def wrapping_id(self, wrapping_id):
        """Sets the wrapping_id of this GiftMessageDataMessageExtensionInterface.


        :param wrapping_id: The wrapping_id of this GiftMessageDataMessageExtensionInterface.
        :type wrapping_id: int
        """

        self._wrapping_id = wrapping_id
