# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.downloadable_data_file_content_interface import DownloadableDataFileContentInterface
from openapi_server import util


class DownloadableDataSampleInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, extension_attributes: object=None, id: int=None, sample_file: str=None, sample_file_content: DownloadableDataFileContentInterface=None, sample_type: str=None, sample_url: str=None, sort_order: int=None, title: str=None):
        """DownloadableDataSampleInterface - a model defined in OpenAPI

        :param extension_attributes: The extension_attributes of this DownloadableDataSampleInterface.
        :param id: The id of this DownloadableDataSampleInterface.
        :param sample_file: The sample_file of this DownloadableDataSampleInterface.
        :param sample_file_content: The sample_file_content of this DownloadableDataSampleInterface.
        :param sample_type: The sample_type of this DownloadableDataSampleInterface.
        :param sample_url: The sample_url of this DownloadableDataSampleInterface.
        :param sort_order: The sort_order of this DownloadableDataSampleInterface.
        :param title: The title of this DownloadableDataSampleInterface.
        """
        self.openapi_types = {
            'extension_attributes': object,
            'id': int,
            'sample_file': str,
            'sample_file_content': DownloadableDataFileContentInterface,
            'sample_type': str,
            'sample_url': str,
            'sort_order': int,
            'title': str
        }

        self.attribute_map = {
            'extension_attributes': 'extension_attributes',
            'id': 'id',
            'sample_file': 'sample_file',
            'sample_file_content': 'sample_file_content',
            'sample_type': 'sample_type',
            'sample_url': 'sample_url',
            'sort_order': 'sort_order',
            'title': 'title'
        }

        self._extension_attributes = extension_attributes
        self._id = id
        self._sample_file = sample_file
        self._sample_file_content = sample_file_content
        self._sample_type = sample_type
        self._sample_url = sample_url
        self._sort_order = sort_order
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'DownloadableDataSampleInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The downloadable-data-sample-interface of this DownloadableDataSampleInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def extension_attributes(self):
        """Gets the extension_attributes of this DownloadableDataSampleInterface.

        ExtensionInterface class for @see \\Magento\\Downloadable\\Api\\Data\\SampleInterface

        :return: The extension_attributes of this DownloadableDataSampleInterface.
        :rtype: object
        """
        return self._extension_attributes

    @extension_attributes.setter
    def extension_attributes(self, extension_attributes):
        """Sets the extension_attributes of this DownloadableDataSampleInterface.

        ExtensionInterface class for @see \\Magento\\Downloadable\\Api\\Data\\SampleInterface

        :param extension_attributes: The extension_attributes of this DownloadableDataSampleInterface.
        :type extension_attributes: object
        """

        self._extension_attributes = extension_attributes

    @property
    def id(self):
        """Gets the id of this DownloadableDataSampleInterface.

        Sample(or link) id

        :return: The id of this DownloadableDataSampleInterface.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this DownloadableDataSampleInterface.

        Sample(or link) id

        :param id: The id of this DownloadableDataSampleInterface.
        :type id: int
        """

        self._id = id

    @property
    def sample_file(self):
        """Gets the sample_file of this DownloadableDataSampleInterface.

        relative file path

        :return: The sample_file of this DownloadableDataSampleInterface.
        :rtype: str
        """
        return self._sample_file

    @sample_file.setter
    def sample_file(self, sample_file):
        """Sets the sample_file of this DownloadableDataSampleInterface.

        relative file path

        :param sample_file: The sample_file of this DownloadableDataSampleInterface.
        :type sample_file: str
        """

        self._sample_file = sample_file

    @property
    def sample_file_content(self):
        """Gets the sample_file_content of this DownloadableDataSampleInterface.


        :return: The sample_file_content of this DownloadableDataSampleInterface.
        :rtype: DownloadableDataFileContentInterface
        """
        return self._sample_file_content

    @sample_file_content.setter
    def sample_file_content(self, sample_file_content):
        """Sets the sample_file_content of this DownloadableDataSampleInterface.


        :param sample_file_content: The sample_file_content of this DownloadableDataSampleInterface.
        :type sample_file_content: DownloadableDataFileContentInterface
        """

        self._sample_file_content = sample_file_content

    @property
    def sample_type(self):
        """Gets the sample_type of this DownloadableDataSampleInterface.


        :return: The sample_type of this DownloadableDataSampleInterface.
        :rtype: str
        """
        return self._sample_type

    @sample_type.setter
    def sample_type(self, sample_type):
        """Sets the sample_type of this DownloadableDataSampleInterface.


        :param sample_type: The sample_type of this DownloadableDataSampleInterface.
        :type sample_type: str
        """
        if sample_type is None:
            raise ValueError("Invalid value for `sample_type`, must not be `None`")

        self._sample_type = sample_type

    @property
    def sample_url(self):
        """Gets the sample_url of this DownloadableDataSampleInterface.

        file URL

        :return: The sample_url of this DownloadableDataSampleInterface.
        :rtype: str
        """
        return self._sample_url

    @sample_url.setter
    def sample_url(self, sample_url):
        """Sets the sample_url of this DownloadableDataSampleInterface.

        file URL

        :param sample_url: The sample_url of this DownloadableDataSampleInterface.
        :type sample_url: str
        """

        self._sample_url = sample_url

    @property
    def sort_order(self):
        """Gets the sort_order of this DownloadableDataSampleInterface.

        Order index for sample

        :return: The sort_order of this DownloadableDataSampleInterface.
        :rtype: int
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this DownloadableDataSampleInterface.

        Order index for sample

        :param sort_order: The sort_order of this DownloadableDataSampleInterface.
        :type sort_order: int
        """
        if sort_order is None:
            raise ValueError("Invalid value for `sort_order`, must not be `None`")

        self._sort_order = sort_order

    @property
    def title(self):
        """Gets the title of this DownloadableDataSampleInterface.

        Title

        :return: The title of this DownloadableDataSampleInterface.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this DownloadableDataSampleInterface.

        Title

        :param title: The title of this DownloadableDataSampleInterface.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")

        self._title = title
