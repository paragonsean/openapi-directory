# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.quote_data_cart_interface import QuoteDataCartInterface
from openapi_server import util


class QuoteCartRepositoryV1SavePutRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, quote: QuoteDataCartInterface=None):
        """QuoteCartRepositoryV1SavePutRequest - a model defined in OpenAPI

        :param quote: The quote of this QuoteCartRepositoryV1SavePutRequest.
        """
        self.openapi_types = {
            'quote': QuoteDataCartInterface
        }

        self.attribute_map = {
            'quote': 'quote'
        }

        self._quote = quote

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuoteCartRepositoryV1SavePutRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The quoteCartRepositoryV1SavePut_request of this QuoteCartRepositoryV1SavePutRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def quote(self):
        """Gets the quote of this QuoteCartRepositoryV1SavePutRequest.


        :return: The quote of this QuoteCartRepositoryV1SavePutRequest.
        :rtype: QuoteDataCartInterface
        """
        return self._quote

    @quote.setter
    def quote(self, quote):
        """Sets the quote of this QuoteCartRepositoryV1SavePutRequest.


        :param quote: The quote of this QuoteCartRepositoryV1SavePutRequest.
        :type quote: QuoteDataCartInterface
        """
        if quote is None:
            raise ValueError("Invalid value for `quote`, must not be `None`")

        self._quote = quote
