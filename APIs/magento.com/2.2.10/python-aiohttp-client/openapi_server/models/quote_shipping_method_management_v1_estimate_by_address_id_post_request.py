# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class QuoteShippingMethodManagementV1EstimateByAddressIdPostRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, address_id: int=None):
        """QuoteShippingMethodManagementV1EstimateByAddressIdPostRequest - a model defined in OpenAPI

        :param address_id: The address_id of this QuoteShippingMethodManagementV1EstimateByAddressIdPostRequest.
        """
        self.openapi_types = {
            'address_id': int
        }

        self.attribute_map = {
            'address_id': 'addressId'
        }

        self._address_id = address_id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'QuoteShippingMethodManagementV1EstimateByAddressIdPostRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The quoteShippingMethodManagementV1EstimateByAddressIdPost_request of this QuoteShippingMethodManagementV1EstimateByAddressIdPostRequest.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def address_id(self):
        """Gets the address_id of this QuoteShippingMethodManagementV1EstimateByAddressIdPostRequest.

        The estimate address id

        :return: The address_id of this QuoteShippingMethodManagementV1EstimateByAddressIdPostRequest.
        :rtype: int
        """
        return self._address_id

    @address_id.setter
    def address_id(self, address_id):
        """Sets the address_id of this QuoteShippingMethodManagementV1EstimateByAddressIdPostRequest.

        The estimate address id

        :param address_id: The address_id of this QuoteShippingMethodManagementV1EstimateByAddressIdPostRequest.
        :type address_id: int
        """
        if address_id is None:
            raise ValueError("Invalid value for `address_id`, must not be `None`")

        self._address_id = address_id
