# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class TaxDataGrandTotalRatesInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, percent: str=None, title: str=None):
        """TaxDataGrandTotalRatesInterface - a model defined in OpenAPI

        :param percent: The percent of this TaxDataGrandTotalRatesInterface.
        :param title: The title of this TaxDataGrandTotalRatesInterface.
        """
        self.openapi_types = {
            'percent': str,
            'title': str
        }

        self.attribute_map = {
            'percent': 'percent',
            'title': 'title'
        }

        self._percent = percent
        self._title = title

    @classmethod
    def from_dict(cls, dikt: dict) -> 'TaxDataGrandTotalRatesInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The tax-data-grand-total-rates-interface of this TaxDataGrandTotalRatesInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def percent(self):
        """Gets the percent of this TaxDataGrandTotalRatesInterface.

        Tax percentage value

        :return: The percent of this TaxDataGrandTotalRatesInterface.
        :rtype: str
        """
        return self._percent

    @percent.setter
    def percent(self, percent):
        """Sets the percent of this TaxDataGrandTotalRatesInterface.

        Tax percentage value

        :param percent: The percent of this TaxDataGrandTotalRatesInterface.
        :type percent: str
        """
        if percent is None:
            raise ValueError("Invalid value for `percent`, must not be `None`")

        self._percent = percent

    @property
    def title(self):
        """Gets the title of this TaxDataGrandTotalRatesInterface.

        Rate title

        :return: The title of this TaxDataGrandTotalRatesInterface.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this TaxDataGrandTotalRatesInterface.

        Rate title

        :param title: The title of this TaxDataGrandTotalRatesInterface.
        :type title: str
        """
        if title is None:
            raise ValueError("Invalid value for `title`, must not be `None`")

        self._title = title
