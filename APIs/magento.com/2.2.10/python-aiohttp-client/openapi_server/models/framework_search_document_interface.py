# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.framework_attribute_interface import FrameworkAttributeInterface
from openapi_server import util


class FrameworkSearchDocumentInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, custom_attributes: List[FrameworkAttributeInterface]=None, id: int=None):
        """FrameworkSearchDocumentInterface - a model defined in OpenAPI

        :param custom_attributes: The custom_attributes of this FrameworkSearchDocumentInterface.
        :param id: The id of this FrameworkSearchDocumentInterface.
        """
        self.openapi_types = {
            'custom_attributes': List[FrameworkAttributeInterface],
            'id': int
        }

        self.attribute_map = {
            'custom_attributes': 'custom_attributes',
            'id': 'id'
        }

        self._custom_attributes = custom_attributes
        self._id = id

    @classmethod
    def from_dict(cls, dikt: dict) -> 'FrameworkSearchDocumentInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The framework-search-document-interface of this FrameworkSearchDocumentInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def custom_attributes(self):
        """Gets the custom_attributes of this FrameworkSearchDocumentInterface.

        Custom attributes values.

        :return: The custom_attributes of this FrameworkSearchDocumentInterface.
        :rtype: List[FrameworkAttributeInterface]
        """
        return self._custom_attributes

    @custom_attributes.setter
    def custom_attributes(self, custom_attributes):
        """Sets the custom_attributes of this FrameworkSearchDocumentInterface.

        Custom attributes values.

        :param custom_attributes: The custom_attributes of this FrameworkSearchDocumentInterface.
        :type custom_attributes: List[FrameworkAttributeInterface]
        """

        self._custom_attributes = custom_attributes

    @property
    def id(self):
        """Gets the id of this FrameworkSearchDocumentInterface.


        :return: The id of this FrameworkSearchDocumentInterface.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this FrameworkSearchDocumentInterface.


        :param id: The id of this FrameworkSearchDocumentInterface.
        :type id: int
        """
        if id is None:
            raise ValueError("Invalid value for `id`, must not be `None`")

        self._id = id
