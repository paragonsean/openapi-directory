# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.framework_attribute_interface import FrameworkAttributeInterface
from openapi_server.models.quote_data_address_interface import QuoteDataAddressInterface
from openapi_server import util


class CheckoutDataShippingInformationInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, billing_address: QuoteDataAddressInterface=None, custom_attributes: List[FrameworkAttributeInterface]=None, extension_attributes: object=None, shipping_address: QuoteDataAddressInterface=None, shipping_carrier_code: str=None, shipping_method_code: str=None):
        """CheckoutDataShippingInformationInterface - a model defined in OpenAPI

        :param billing_address: The billing_address of this CheckoutDataShippingInformationInterface.
        :param custom_attributes: The custom_attributes of this CheckoutDataShippingInformationInterface.
        :param extension_attributes: The extension_attributes of this CheckoutDataShippingInformationInterface.
        :param shipping_address: The shipping_address of this CheckoutDataShippingInformationInterface.
        :param shipping_carrier_code: The shipping_carrier_code of this CheckoutDataShippingInformationInterface.
        :param shipping_method_code: The shipping_method_code of this CheckoutDataShippingInformationInterface.
        """
        self.openapi_types = {
            'billing_address': QuoteDataAddressInterface,
            'custom_attributes': List[FrameworkAttributeInterface],
            'extension_attributes': object,
            'shipping_address': QuoteDataAddressInterface,
            'shipping_carrier_code': str,
            'shipping_method_code': str
        }

        self.attribute_map = {
            'billing_address': 'billing_address',
            'custom_attributes': 'custom_attributes',
            'extension_attributes': 'extension_attributes',
            'shipping_address': 'shipping_address',
            'shipping_carrier_code': 'shipping_carrier_code',
            'shipping_method_code': 'shipping_method_code'
        }

        self._billing_address = billing_address
        self._custom_attributes = custom_attributes
        self._extension_attributes = extension_attributes
        self._shipping_address = shipping_address
        self._shipping_carrier_code = shipping_carrier_code
        self._shipping_method_code = shipping_method_code

    @classmethod
    def from_dict(cls, dikt: dict) -> 'CheckoutDataShippingInformationInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The checkout-data-shipping-information-interface of this CheckoutDataShippingInformationInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def billing_address(self):
        """Gets the billing_address of this CheckoutDataShippingInformationInterface.


        :return: The billing_address of this CheckoutDataShippingInformationInterface.
        :rtype: QuoteDataAddressInterface
        """
        return self._billing_address

    @billing_address.setter
    def billing_address(self, billing_address):
        """Sets the billing_address of this CheckoutDataShippingInformationInterface.


        :param billing_address: The billing_address of this CheckoutDataShippingInformationInterface.
        :type billing_address: QuoteDataAddressInterface
        """

        self._billing_address = billing_address

    @property
    def custom_attributes(self):
        """Gets the custom_attributes of this CheckoutDataShippingInformationInterface.

        Custom attributes values.

        :return: The custom_attributes of this CheckoutDataShippingInformationInterface.
        :rtype: List[FrameworkAttributeInterface]
        """
        return self._custom_attributes

    @custom_attributes.setter
    def custom_attributes(self, custom_attributes):
        """Sets the custom_attributes of this CheckoutDataShippingInformationInterface.

        Custom attributes values.

        :param custom_attributes: The custom_attributes of this CheckoutDataShippingInformationInterface.
        :type custom_attributes: List[FrameworkAttributeInterface]
        """

        self._custom_attributes = custom_attributes

    @property
    def extension_attributes(self):
        """Gets the extension_attributes of this CheckoutDataShippingInformationInterface.

        ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\ShippingInformationInterface

        :return: The extension_attributes of this CheckoutDataShippingInformationInterface.
        :rtype: object
        """
        return self._extension_attributes

    @extension_attributes.setter
    def extension_attributes(self, extension_attributes):
        """Sets the extension_attributes of this CheckoutDataShippingInformationInterface.

        ExtensionInterface class for @see \\Magento\\Checkout\\Api\\Data\\ShippingInformationInterface

        :param extension_attributes: The extension_attributes of this CheckoutDataShippingInformationInterface.
        :type extension_attributes: object
        """

        self._extension_attributes = extension_attributes

    @property
    def shipping_address(self):
        """Gets the shipping_address of this CheckoutDataShippingInformationInterface.


        :return: The shipping_address of this CheckoutDataShippingInformationInterface.
        :rtype: QuoteDataAddressInterface
        """
        return self._shipping_address

    @shipping_address.setter
    def shipping_address(self, shipping_address):
        """Sets the shipping_address of this CheckoutDataShippingInformationInterface.


        :param shipping_address: The shipping_address of this CheckoutDataShippingInformationInterface.
        :type shipping_address: QuoteDataAddressInterface
        """
        if shipping_address is None:
            raise ValueError("Invalid value for `shipping_address`, must not be `None`")

        self._shipping_address = shipping_address

    @property
    def shipping_carrier_code(self):
        """Gets the shipping_carrier_code of this CheckoutDataShippingInformationInterface.

        Carrier code

        :return: The shipping_carrier_code of this CheckoutDataShippingInformationInterface.
        :rtype: str
        """
        return self._shipping_carrier_code

    @shipping_carrier_code.setter
    def shipping_carrier_code(self, shipping_carrier_code):
        """Sets the shipping_carrier_code of this CheckoutDataShippingInformationInterface.

        Carrier code

        :param shipping_carrier_code: The shipping_carrier_code of this CheckoutDataShippingInformationInterface.
        :type shipping_carrier_code: str
        """
        if shipping_carrier_code is None:
            raise ValueError("Invalid value for `shipping_carrier_code`, must not be `None`")

        self._shipping_carrier_code = shipping_carrier_code

    @property
    def shipping_method_code(self):
        """Gets the shipping_method_code of this CheckoutDataShippingInformationInterface.

        Shipping method code

        :return: The shipping_method_code of this CheckoutDataShippingInformationInterface.
        :rtype: str
        """
        return self._shipping_method_code

    @shipping_method_code.setter
    def shipping_method_code(self, shipping_method_code):
        """Sets the shipping_method_code of this CheckoutDataShippingInformationInterface.

        Shipping method code

        :param shipping_method_code: The shipping_method_code of this CheckoutDataShippingInformationInterface.
        :type shipping_method_code: str
        """
        if shipping_method_code is None:
            raise ValueError("Invalid value for `shipping_method_code`, must not be `None`")

        self._shipping_method_code = shipping_method_code
