# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.bundle_data_link_interface import BundleDataLinkInterface
from openapi_server import util


class BundleDataOptionInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, extension_attributes: object=None, option_id: int=None, position: int=None, product_links: List[BundleDataLinkInterface]=None, required: bool=None, sku: str=None, title: str=None, type: str=None):
        """BundleDataOptionInterface - a model defined in OpenAPI

        :param extension_attributes: The extension_attributes of this BundleDataOptionInterface.
        :param option_id: The option_id of this BundleDataOptionInterface.
        :param position: The position of this BundleDataOptionInterface.
        :param product_links: The product_links of this BundleDataOptionInterface.
        :param required: The required of this BundleDataOptionInterface.
        :param sku: The sku of this BundleDataOptionInterface.
        :param title: The title of this BundleDataOptionInterface.
        :param type: The type of this BundleDataOptionInterface.
        """
        self.openapi_types = {
            'extension_attributes': object,
            'option_id': int,
            'position': int,
            'product_links': List[BundleDataLinkInterface],
            'required': bool,
            'sku': str,
            'title': str,
            'type': str
        }

        self.attribute_map = {
            'extension_attributes': 'extension_attributes',
            'option_id': 'option_id',
            'position': 'position',
            'product_links': 'product_links',
            'required': 'required',
            'sku': 'sku',
            'title': 'title',
            'type': 'type'
        }

        self._extension_attributes = extension_attributes
        self._option_id = option_id
        self._position = position
        self._product_links = product_links
        self._required = required
        self._sku = sku
        self._title = title
        self._type = type

    @classmethod
    def from_dict(cls, dikt: dict) -> 'BundleDataOptionInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The bundle-data-option-interface of this BundleDataOptionInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def extension_attributes(self):
        """Gets the extension_attributes of this BundleDataOptionInterface.

        ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\OptionInterface

        :return: The extension_attributes of this BundleDataOptionInterface.
        :rtype: object
        """
        return self._extension_attributes

    @extension_attributes.setter
    def extension_attributes(self, extension_attributes):
        """Sets the extension_attributes of this BundleDataOptionInterface.

        ExtensionInterface class for @see \\Magento\\Bundle\\Api\\Data\\OptionInterface

        :param extension_attributes: The extension_attributes of this BundleDataOptionInterface.
        :type extension_attributes: object
        """

        self._extension_attributes = extension_attributes

    @property
    def option_id(self):
        """Gets the option_id of this BundleDataOptionInterface.

        Option id

        :return: The option_id of this BundleDataOptionInterface.
        :rtype: int
        """
        return self._option_id

    @option_id.setter
    def option_id(self, option_id):
        """Sets the option_id of this BundleDataOptionInterface.

        Option id

        :param option_id: The option_id of this BundleDataOptionInterface.
        :type option_id: int
        """

        self._option_id = option_id

    @property
    def position(self):
        """Gets the position of this BundleDataOptionInterface.

        Option position

        :return: The position of this BundleDataOptionInterface.
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this BundleDataOptionInterface.

        Option position

        :param position: The position of this BundleDataOptionInterface.
        :type position: int
        """

        self._position = position

    @property
    def product_links(self):
        """Gets the product_links of this BundleDataOptionInterface.

        Product links

        :return: The product_links of this BundleDataOptionInterface.
        :rtype: List[BundleDataLinkInterface]
        """
        return self._product_links

    @product_links.setter
    def product_links(self, product_links):
        """Sets the product_links of this BundleDataOptionInterface.

        Product links

        :param product_links: The product_links of this BundleDataOptionInterface.
        :type product_links: List[BundleDataLinkInterface]
        """

        self._product_links = product_links

    @property
    def required(self):
        """Gets the required of this BundleDataOptionInterface.

        Is required option

        :return: The required of this BundleDataOptionInterface.
        :rtype: bool
        """
        return self._required

    @required.setter
    def required(self, required):
        """Sets the required of this BundleDataOptionInterface.

        Is required option

        :param required: The required of this BundleDataOptionInterface.
        :type required: bool
        """

        self._required = required

    @property
    def sku(self):
        """Gets the sku of this BundleDataOptionInterface.

        Product sku

        :return: The sku of this BundleDataOptionInterface.
        :rtype: str
        """
        return self._sku

    @sku.setter
    def sku(self, sku):
        """Sets the sku of this BundleDataOptionInterface.

        Product sku

        :param sku: The sku of this BundleDataOptionInterface.
        :type sku: str
        """

        self._sku = sku

    @property
    def title(self):
        """Gets the title of this BundleDataOptionInterface.

        Option title

        :return: The title of this BundleDataOptionInterface.
        :rtype: str
        """
        return self._title

    @title.setter
    def title(self, title):
        """Sets the title of this BundleDataOptionInterface.

        Option title

        :param title: The title of this BundleDataOptionInterface.
        :type title: str
        """

        self._title = title

    @property
    def type(self):
        """Gets the type of this BundleDataOptionInterface.

        Input type

        :return: The type of this BundleDataOptionInterface.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type):
        """Sets the type of this BundleDataOptionInterface.

        Input type

        :param type: The type of this BundleDataOptionInterface.
        :type type: str
        """

        self._type = type
