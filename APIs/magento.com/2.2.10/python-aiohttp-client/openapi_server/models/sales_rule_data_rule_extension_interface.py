# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class SalesRuleDataRuleExtensionInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, reward_points_delta: int=None):
        """SalesRuleDataRuleExtensionInterface - a model defined in OpenAPI

        :param reward_points_delta: The reward_points_delta of this SalesRuleDataRuleExtensionInterface.
        """
        self.openapi_types = {
            'reward_points_delta': int
        }

        self.attribute_map = {
            'reward_points_delta': 'reward_points_delta'
        }

        self._reward_points_delta = reward_points_delta

    @classmethod
    def from_dict(cls, dikt: dict) -> 'SalesRuleDataRuleExtensionInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The sales-rule-data-rule-extension-interface of this SalesRuleDataRuleExtensionInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def reward_points_delta(self):
        """Gets the reward_points_delta of this SalesRuleDataRuleExtensionInterface.


        :return: The reward_points_delta of this SalesRuleDataRuleExtensionInterface.
        :rtype: int
        """
        return self._reward_points_delta

    @reward_points_delta.setter
    def reward_points_delta(self, reward_points_delta):
        """Sets the reward_points_delta of this SalesRuleDataRuleExtensionInterface.


        :param reward_points_delta: The reward_points_delta of this SalesRuleDataRuleExtensionInterface.
        :type reward_points_delta: int
        """

        self._reward_points_delta = reward_points_delta
