# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server import util


class EavDataAttributeSetInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attribute_set_id: int=None, attribute_set_name: str=None, entity_type_id: int=None, extension_attributes: object=None, sort_order: int=None):
        """EavDataAttributeSetInterface - a model defined in OpenAPI

        :param attribute_set_id: The attribute_set_id of this EavDataAttributeSetInterface.
        :param attribute_set_name: The attribute_set_name of this EavDataAttributeSetInterface.
        :param entity_type_id: The entity_type_id of this EavDataAttributeSetInterface.
        :param extension_attributes: The extension_attributes of this EavDataAttributeSetInterface.
        :param sort_order: The sort_order of this EavDataAttributeSetInterface.
        """
        self.openapi_types = {
            'attribute_set_id': int,
            'attribute_set_name': str,
            'entity_type_id': int,
            'extension_attributes': object,
            'sort_order': int
        }

        self.attribute_map = {
            'attribute_set_id': 'attribute_set_id',
            'attribute_set_name': 'attribute_set_name',
            'entity_type_id': 'entity_type_id',
            'extension_attributes': 'extension_attributes',
            'sort_order': 'sort_order'
        }

        self._attribute_set_id = attribute_set_id
        self._attribute_set_name = attribute_set_name
        self._entity_type_id = entity_type_id
        self._extension_attributes = extension_attributes
        self._sort_order = sort_order

    @classmethod
    def from_dict(cls, dikt: dict) -> 'EavDataAttributeSetInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The eav-data-attribute-set-interface of this EavDataAttributeSetInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribute_set_id(self):
        """Gets the attribute_set_id of this EavDataAttributeSetInterface.

        Attribute set ID

        :return: The attribute_set_id of this EavDataAttributeSetInterface.
        :rtype: int
        """
        return self._attribute_set_id

    @attribute_set_id.setter
    def attribute_set_id(self, attribute_set_id):
        """Sets the attribute_set_id of this EavDataAttributeSetInterface.

        Attribute set ID

        :param attribute_set_id: The attribute_set_id of this EavDataAttributeSetInterface.
        :type attribute_set_id: int
        """

        self._attribute_set_id = attribute_set_id

    @property
    def attribute_set_name(self):
        """Gets the attribute_set_name of this EavDataAttributeSetInterface.

        Attribute set name

        :return: The attribute_set_name of this EavDataAttributeSetInterface.
        :rtype: str
        """
        return self._attribute_set_name

    @attribute_set_name.setter
    def attribute_set_name(self, attribute_set_name):
        """Sets the attribute_set_name of this EavDataAttributeSetInterface.

        Attribute set name

        :param attribute_set_name: The attribute_set_name of this EavDataAttributeSetInterface.
        :type attribute_set_name: str
        """
        if attribute_set_name is None:
            raise ValueError("Invalid value for `attribute_set_name`, must not be `None`")

        self._attribute_set_name = attribute_set_name

    @property
    def entity_type_id(self):
        """Gets the entity_type_id of this EavDataAttributeSetInterface.

        Attribute set entity type id

        :return: The entity_type_id of this EavDataAttributeSetInterface.
        :rtype: int
        """
        return self._entity_type_id

    @entity_type_id.setter
    def entity_type_id(self, entity_type_id):
        """Sets the entity_type_id of this EavDataAttributeSetInterface.

        Attribute set entity type id

        :param entity_type_id: The entity_type_id of this EavDataAttributeSetInterface.
        :type entity_type_id: int
        """

        self._entity_type_id = entity_type_id

    @property
    def extension_attributes(self):
        """Gets the extension_attributes of this EavDataAttributeSetInterface.

        ExtensionInterface class for @see \\Magento\\Eav\\Api\\Data\\AttributeSetInterface

        :return: The extension_attributes of this EavDataAttributeSetInterface.
        :rtype: object
        """
        return self._extension_attributes

    @extension_attributes.setter
    def extension_attributes(self, extension_attributes):
        """Sets the extension_attributes of this EavDataAttributeSetInterface.

        ExtensionInterface class for @see \\Magento\\Eav\\Api\\Data\\AttributeSetInterface

        :param extension_attributes: The extension_attributes of this EavDataAttributeSetInterface.
        :type extension_attributes: object
        """

        self._extension_attributes = extension_attributes

    @property
    def sort_order(self):
        """Gets the sort_order of this EavDataAttributeSetInterface.

        Attribute set sort order index

        :return: The sort_order of this EavDataAttributeSetInterface.
        :rtype: int
        """
        return self._sort_order

    @sort_order.setter
    def sort_order(self, sort_order):
        """Sets the sort_order of this EavDataAttributeSetInterface.

        Attribute set sort order index

        :param sort_order: The sort_order of this EavDataAttributeSetInterface.
        :type sort_order: int
        """
        if sort_order is None:
            raise ValueError("Invalid value for `sort_order`, must not be `None`")

        self._sort_order = sort_order
