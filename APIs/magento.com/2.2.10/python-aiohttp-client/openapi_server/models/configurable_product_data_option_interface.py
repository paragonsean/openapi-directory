# coding: utf-8

from datetime import date, datetime

from typing import List, Dict, Type

from openapi_server.models.base_model import Model
from openapi_server.models.configurable_product_data_option_value_interface import ConfigurableProductDataOptionValueInterface
from openapi_server import util


class ConfigurableProductDataOptionInterface(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, attribute_id: str=None, extension_attributes: object=None, id: int=None, is_use_default: bool=None, label: str=None, position: int=None, product_id: int=None, values: List[ConfigurableProductDataOptionValueInterface]=None):
        """ConfigurableProductDataOptionInterface - a model defined in OpenAPI

        :param attribute_id: The attribute_id of this ConfigurableProductDataOptionInterface.
        :param extension_attributes: The extension_attributes of this ConfigurableProductDataOptionInterface.
        :param id: The id of this ConfigurableProductDataOptionInterface.
        :param is_use_default: The is_use_default of this ConfigurableProductDataOptionInterface.
        :param label: The label of this ConfigurableProductDataOptionInterface.
        :param position: The position of this ConfigurableProductDataOptionInterface.
        :param product_id: The product_id of this ConfigurableProductDataOptionInterface.
        :param values: The values of this ConfigurableProductDataOptionInterface.
        """
        self.openapi_types = {
            'attribute_id': str,
            'extension_attributes': object,
            'id': int,
            'is_use_default': bool,
            'label': str,
            'position': int,
            'product_id': int,
            'values': List[ConfigurableProductDataOptionValueInterface]
        }

        self.attribute_map = {
            'attribute_id': 'attribute_id',
            'extension_attributes': 'extension_attributes',
            'id': 'id',
            'is_use_default': 'is_use_default',
            'label': 'label',
            'position': 'position',
            'product_id': 'product_id',
            'values': 'values'
        }

        self._attribute_id = attribute_id
        self._extension_attributes = extension_attributes
        self._id = id
        self._is_use_default = is_use_default
        self._label = label
        self._position = position
        self._product_id = product_id
        self._values = values

    @classmethod
    def from_dict(cls, dikt: dict) -> 'ConfigurableProductDataOptionInterface':
        """Returns the dict as a model

        :param dikt: A dict.
        :return: The configurable-product-data-option-interface of this ConfigurableProductDataOptionInterface.
        """
        return util.deserialize_model(dikt, cls)

    @property
    def attribute_id(self):
        """Gets the attribute_id of this ConfigurableProductDataOptionInterface.


        :return: The attribute_id of this ConfigurableProductDataOptionInterface.
        :rtype: str
        """
        return self._attribute_id

    @attribute_id.setter
    def attribute_id(self, attribute_id):
        """Sets the attribute_id of this ConfigurableProductDataOptionInterface.


        :param attribute_id: The attribute_id of this ConfigurableProductDataOptionInterface.
        :type attribute_id: str
        """

        self._attribute_id = attribute_id

    @property
    def extension_attributes(self):
        """Gets the extension_attributes of this ConfigurableProductDataOptionInterface.

        ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\OptionInterface

        :return: The extension_attributes of this ConfigurableProductDataOptionInterface.
        :rtype: object
        """
        return self._extension_attributes

    @extension_attributes.setter
    def extension_attributes(self, extension_attributes):
        """Sets the extension_attributes of this ConfigurableProductDataOptionInterface.

        ExtensionInterface class for @see \\Magento\\ConfigurableProduct\\Api\\Data\\OptionInterface

        :param extension_attributes: The extension_attributes of this ConfigurableProductDataOptionInterface.
        :type extension_attributes: object
        """

        self._extension_attributes = extension_attributes

    @property
    def id(self):
        """Gets the id of this ConfigurableProductDataOptionInterface.


        :return: The id of this ConfigurableProductDataOptionInterface.
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ConfigurableProductDataOptionInterface.


        :param id: The id of this ConfigurableProductDataOptionInterface.
        :type id: int
        """

        self._id = id

    @property
    def is_use_default(self):
        """Gets the is_use_default of this ConfigurableProductDataOptionInterface.


        :return: The is_use_default of this ConfigurableProductDataOptionInterface.
        :rtype: bool
        """
        return self._is_use_default

    @is_use_default.setter
    def is_use_default(self, is_use_default):
        """Sets the is_use_default of this ConfigurableProductDataOptionInterface.


        :param is_use_default: The is_use_default of this ConfigurableProductDataOptionInterface.
        :type is_use_default: bool
        """

        self._is_use_default = is_use_default

    @property
    def label(self):
        """Gets the label of this ConfigurableProductDataOptionInterface.


        :return: The label of this ConfigurableProductDataOptionInterface.
        :rtype: str
        """
        return self._label

    @label.setter
    def label(self, label):
        """Sets the label of this ConfigurableProductDataOptionInterface.


        :param label: The label of this ConfigurableProductDataOptionInterface.
        :type label: str
        """

        self._label = label

    @property
    def position(self):
        """Gets the position of this ConfigurableProductDataOptionInterface.


        :return: The position of this ConfigurableProductDataOptionInterface.
        :rtype: int
        """
        return self._position

    @position.setter
    def position(self, position):
        """Sets the position of this ConfigurableProductDataOptionInterface.


        :param position: The position of this ConfigurableProductDataOptionInterface.
        :type position: int
        """

        self._position = position

    @property
    def product_id(self):
        """Gets the product_id of this ConfigurableProductDataOptionInterface.


        :return: The product_id of this ConfigurableProductDataOptionInterface.
        :rtype: int
        """
        return self._product_id

    @product_id.setter
    def product_id(self, product_id):
        """Sets the product_id of this ConfigurableProductDataOptionInterface.


        :param product_id: The product_id of this ConfigurableProductDataOptionInterface.
        :type product_id: int
        """

        self._product_id = product_id

    @property
    def values(self):
        """Gets the values of this ConfigurableProductDataOptionInterface.


        :return: The values of this ConfigurableProductDataOptionInterface.
        :rtype: List[ConfigurableProductDataOptionValueInterface]
        """
        return self._values

    @values.setter
    def values(self, values):
        """Sets the values of this ConfigurableProductDataOptionInterface.


        :param values: The values of this ConfigurableProductDataOptionInterface.
        :type values: List[ConfigurableProductDataOptionValueInterface]
        """

        self._values = values
